{"abi": [{"inputs": [{"internalType": "string", "name": "name_", "type": "string"}, {"internalType": "string", "name": "symbol_", "type": "string"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "owner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "spender", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Approval", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "from", "type": "address"}, {"indexed": true, "internalType": "address", "name": "to", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Transfer", "type": "event"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "spender", "type": "address"}], "name": "allowance", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "approve", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "balanceOf", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "decimals", "outputs": [{"internalType": "uint8", "name": "", "type": "uint8"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "subtractedValue", "type": "uint256"}], "name": "decreaseAllowance", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "addedValue", "type": "uint256"}], "name": "increaseAllowance", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "name", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "symbol", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "totalSupply", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transfer", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transferFrom", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"1": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol", "2": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ERC20.sol", "3": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol", "4": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/SafeMath.sol"}, "ast": {"absolutePath": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ERC20.sol", "exportedSymbols": {"ERC20": [524], "Errors": [1057], "IERC20": [1135], "SafeMath": [1213], "_require": [652], "_revert": [660]}, "id": 525, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 48, "literals": ["solidity", "^", "0.7", ".0"], "nodeType": "PragmaDirective", "src": "33:23:2"}, {"absolutePath": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol", "file": "../helpers/BalancerErrors.sol", "id": 49, "nodeType": "ImportDirective", "scope": 525, "sourceUnit": 1058, "src": "58:39:2", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol", "file": "./IERC20.sol", "id": 50, "nodeType": "ImportDirective", "scope": 525, "sourceUnit": 1136, "src": "99:22:2", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/SafeMath.sol", "file": "./SafeMath.sol", "id": 51, "nodeType": "ImportDirective", "scope": 525, "sourceUnit": 1214, "src": "122:24:2", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 53, "name": "IERC20", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 1135, "src": "1329:6:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1135", "typeString": "contract IERC20"}}, "id": 54, "nodeType": "InheritanceSpecifier", "src": "1329:6:2"}], "contractDependencies": [1135], "contractKind": "contract", "documentation": {"id": 52, "nodeType": "StructuredDocumentation", "src": "148:1162:2", "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."}, "fullyImplemented": true, "id": 524, "linearizedBaseContracts": [524, 1135], "name": "ERC20", "nodeType": "ContractDefinition", "nodes": [{"id": 57, "libraryName": {"id": 55, "name": "SafeMath", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 1213, "src": "1348:8:2", "typeDescriptions": {"typeIdentifier": "t_contract$_SafeMath_$1213", "typeString": "library SafeMath"}}, "nodeType": "UsingForDirective", "src": "1342:27:2", "typeName": {"id": 56, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1361:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"constant": false, "id": 61, "mutability": "mutable", "name": "_balances", "nodeType": "VariableDeclaration", "scope": 524, "src": "1375:45:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "typeName": {"id": 60, "keyType": {"id": 58, "name": "address", "nodeType": "ElementaryTypeName", "src": "1383:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "1375:27:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "valueType": {"id": 59, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1394:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, "visibility": "private"}, {"constant": false, "id": 67, "mutability": "mutable", "name": "_allowances", "nodeType": "VariableDeclaration", "scope": 524, "src": "1427:67:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}, "typeName": {"id": 66, "keyType": {"id": 62, "name": "address", "nodeType": "ElementaryTypeName", "src": "1435:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "1427:47:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}, "valueType": {"id": 65, "keyType": {"id": 63, "name": "address", "nodeType": "ElementaryTypeName", "src": "1454:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "1446:27:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "valueType": {"id": 64, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1465:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}}, "visibility": "private"}, {"constant": false, "id": 69, "mutability": "mutable", "name": "_totalSupply", "nodeType": "VariableDeclaration", "scope": 524, "src": "1501:28:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 68, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1501:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "private"}, {"constant": false, "id": 71, "mutability": "mutable", "name": "_name", "nodeType": "VariableDeclaration", "scope": 524, "src": "1536:20:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string"}, "typeName": {"id": 70, "name": "string", "nodeType": "ElementaryTypeName", "src": "1536:6:2", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "private"}, {"constant": false, "id": 73, "mutability": "mutable", "name": "_symbol", "nodeType": "VariableDeclaration", "scope": 524, "src": "1562:22:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string"}, "typeName": {"id": 72, "name": "string", "nodeType": "ElementaryTypeName", "src": "1562:6:2", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "private"}, {"constant": false, "id": 75, "mutability": "mutable", "name": "_decimals", "nodeType": "VariableDeclaration", "scope": 524, "src": "1590:23:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 74, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "1590:5:2", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "private"}, {"body": {"id": 95, "nodeType": "Block", "src": "1992:81:2", "statements": [{"expression": {"id": 85, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 83, "name": "_name", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 71, "src": "2002:5:2", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 84, "name": "name_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 78, "src": "2010:5:2", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "2002:13:2", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 86, "nodeType": "ExpressionStatement", "src": "2002:13:2"}, {"expression": {"id": 89, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 87, "name": "_symbol", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73, "src": "2025:7:2", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 88, "name": "symbol_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 80, "src": "2035:7:2", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "2025:17:2", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 90, "nodeType": "ExpressionStatement", "src": "2025:17:2"}, {"expression": {"id": 93, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 91, "name": "_decimals", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 75, "src": "2052:9:2", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "3138", "id": 92, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2064:2:2", "typeDescriptions": {"typeIdentifier": "t_rational_18_by_1", "typeString": "int_const 18"}, "value": "18"}, "src": "2052:14:2", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "id": 94, "nodeType": "ExpressionStatement", "src": "2052:14:2"}]}, "documentation": {"id": 76, "nodeType": "StructuredDocumentation", "src": "1620:311:2", "text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."}, "id": 96, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 81, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 78, "mutability": "mutable", "name": "name_", "nodeType": "VariableDeclaration", "scope": 96, "src": "1948:19:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 77, "name": "string", "nodeType": "ElementaryTypeName", "src": "1948:6:2", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 80, "mutability": "mutable", "name": "symbol_", "nodeType": "VariableDeclaration", "scope": 96, "src": "1969:21:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 79, "name": "string", "nodeType": "ElementaryTypeName", "src": "1969:6:2", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "1947:44:2"}, "returnParameters": {"id": 82, "nodeType": "ParameterList", "parameters": [], "src": "1992:0:2"}, "scope": 524, "src": "1936:137:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 104, "nodeType": "Block", "src": "2190:29:2", "statements": [{"expression": {"id": 102, "name": "_name", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 71, "src": "2207:5:2", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "functionReturnParameters": 101, "id": 103, "nodeType": "Return", "src": "2200:12:2"}]}, "documentation": {"id": 97, "nodeType": "StructuredDocumentation", "src": "2079:54:2", "text": " @dev Returns the name of the token."}, "functionSelector": "06fdde03", "id": 105, "implemented": true, "kind": "function", "modifiers": [], "name": "name", "nodeType": "FunctionDefinition", "parameters": {"id": 98, "nodeType": "ParameterList", "parameters": [], "src": "2151:2:2"}, "returnParameters": {"id": 101, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 100, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 105, "src": "2175:13:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 99, "name": "string", "nodeType": "ElementaryTypeName", "src": "2175:6:2", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "2174:15:2"}, "scope": 524, "src": "2138:81:2", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 113, "nodeType": "Block", "src": "2386:31:2", "statements": [{"expression": {"id": 111, "name": "_symbol", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73, "src": "2403:7:2", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "functionReturnParameters": 110, "id": 112, "nodeType": "Return", "src": "2396:14:2"}]}, "documentation": {"id": 106, "nodeType": "StructuredDocumentation", "src": "2225:102:2", "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."}, "functionSelector": "95d89b41", "id": 114, "implemented": true, "kind": "function", "modifiers": [], "name": "symbol", "nodeType": "FunctionDefinition", "parameters": {"id": 107, "nodeType": "ParameterList", "parameters": [], "src": "2347:2:2"}, "returnParameters": {"id": 110, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 109, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 114, "src": "2371:13:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 108, "name": "string", "nodeType": "ElementaryTypeName", "src": "2371:6:2", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "2370:15:2"}, "scope": 524, "src": "2332:85:2", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 122, "nodeType": "Block", "src": "3088:33:2", "statements": [{"expression": {"id": 120, "name": "_decimals", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 75, "src": "3105:9:2", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "functionReturnParameters": 119, "id": 121, "nodeType": "Return", "src": "3098:16:2"}]}, "documentation": {"id": 115, "nodeType": "StructuredDocumentation", "src": "2423:612:2", "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."}, "functionSelector": "313ce567", "id": 123, "implemented": true, "kind": "function", "modifiers": [], "name": "decimals", "nodeType": "FunctionDefinition", "parameters": {"id": 116, "nodeType": "ParameterList", "parameters": [], "src": "3057:2:2"}, "returnParameters": {"id": 119, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 118, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 123, "src": "3081:5:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 117, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "3081:5:2", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "internal"}], "src": "3080:7:2"}, "scope": 524, "src": "3040:81:2", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"baseFunctions": [1066], "body": {"id": 132, "nodeType": "Block", "src": "3243:36:2", "statements": [{"expression": {"id": 130, "name": "_totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 69, "src": "3260:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 129, "id": 131, "nodeType": "Return", "src": "3253:19:2"}]}, "documentation": {"id": 124, "nodeType": "StructuredDocumentation", "src": "3127:49:2", "text": " @dev See {IERC20-totalSupply}."}, "functionSelector": "18160ddd", "id": 133, "implemented": true, "kind": "function", "modifiers": [], "name": "totalSupply", "nodeType": "FunctionDefinition", "overrides": {"id": 126, "nodeType": "OverrideSpecifier", "overrides": [], "src": "3216:8:2"}, "parameters": {"id": 125, "nodeType": "ParameterList", "parameters": [], "src": "3201:2:2"}, "returnParameters": {"id": 129, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 128, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 133, "src": "3234:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 127, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3234:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3233:9:2"}, "scope": 524, "src": "3181:98:2", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"baseFunctions": [1074], "body": {"id": 146, "nodeType": "Block", "src": "3412:42:2", "statements": [{"expression": {"baseExpression": {"id": 142, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 61, "src": "3429:9:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 144, "indexExpression": {"id": 143, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 136, "src": "3439:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3429:18:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 141, "id": 145, "nodeType": "Return", "src": "3422:25:2"}]}, "documentation": {"id": 134, "nodeType": "StructuredDocumentation", "src": "3285:47:2", "text": " @dev See {IERC20-balanceOf}."}, "functionSelector": "70a08231", "id": 147, "implemented": true, "kind": "function", "modifiers": [], "name": "balanceOf", "nodeType": "FunctionDefinition", "overrides": {"id": 138, "nodeType": "OverrideSpecifier", "overrides": [], "src": "3385:8:2"}, "parameters": {"id": 137, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 136, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 147, "src": "3356:15:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 135, "name": "address", "nodeType": "ElementaryTypeName", "src": "3356:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "3355:17:2"}, "returnParameters": {"id": 141, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 140, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 147, "src": "3403:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 139, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3403:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3402:9:2"}, "scope": 524, "src": "3337:117:2", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"baseFunctions": [1084], "body": {"id": 167, "nodeType": "Block", "src": "3749:78:2", "statements": [{"expression": {"arguments": [{"expression": {"id": 159, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3769:3:2", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 160, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "3769:10:2", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"id": 161, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 150, "src": "3781:9:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 162, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 152, "src": "3792:6:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 158, "name": "_transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 373, "src": "3759:9:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 163, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3759:40:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 164, "nodeType": "ExpressionStatement", "src": "3759:40:2"}, {"expression": {"hexValue": "74727565", "id": 165, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3816:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 157, "id": 166, "nodeType": "Return", "src": "3809:11:2"}]}, "documentation": {"id": 148, "nodeType": "StructuredDocumentation", "src": "3460:192:2", "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."}, "functionSelector": "a9059cbb", "id": 168, "implemented": true, "kind": "function", "modifiers": [], "name": "transfer", "nodeType": "FunctionDefinition", "overrides": {"id": 154, "nodeType": "OverrideSpecifier", "overrides": [], "src": "3725:8:2"}, "parameters": {"id": 153, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 150, "mutability": "mutable", "name": "recipient", "nodeType": "VariableDeclaration", "scope": 168, "src": "3675:17:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 149, "name": "address", "nodeType": "ElementaryTypeName", "src": "3675:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 152, "mutability": "mutable", "name": "amount", "nodeType": "VariableDeclaration", "scope": 168, "src": "3694:14:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 151, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3694:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3674:35:2"}, "returnParameters": {"id": 157, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 156, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 168, "src": "3743:4:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 155, "name": "bool", "nodeType": "ElementaryTypeName", "src": "3743:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "3742:6:2"}, "scope": 524, "src": "3657:170:2", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"baseFunctions": [1094], "body": {"id": 185, "nodeType": "Block", "src": "3983:51:2", "statements": [{"expression": {"baseExpression": {"baseExpression": {"id": 179, "name": "_allowances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 67, "src": "4000:11:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 181, "indexExpression": {"id": 180, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 171, "src": "4012:5:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4000:18:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 183, "indexExpression": {"id": 182, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 173, "src": "4019:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4000:27:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 178, "id": 184, "nodeType": "Return", "src": "3993:34:2"}]}, "documentation": {"id": 169, "nodeType": "StructuredDocumentation", "src": "3833:47:2", "text": " @dev See {IERC20-allowance}."}, "functionSelector": "dd62ed3e", "id": 186, "implemented": true, "kind": "function", "modifiers": [], "name": "allowance", "nodeType": "FunctionDefinition", "overrides": {"id": 175, "nodeType": "OverrideSpecifier", "overrides": [], "src": "3956:8:2"}, "parameters": {"id": 174, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 171, "mutability": "mutable", "name": "owner", "nodeType": "VariableDeclaration", "scope": 186, "src": "3904:13:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 170, "name": "address", "nodeType": "ElementaryTypeName", "src": "3904:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 173, "mutability": "mutable", "name": "spender", "nodeType": "VariableDeclaration", "scope": 186, "src": "3919:15:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 172, "name": "address", "nodeType": "ElementaryTypeName", "src": "3919:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "3903:32:2"}, "returnParameters": {"id": 178, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 177, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 186, "src": "3974:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 176, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3974:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3973:9:2"}, "scope": 524, "src": "3885:149:2", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"baseFunctions": [1104], "body": {"id": 206, "nodeType": "Block", "src": "4261:75:2", "statements": [{"expression": {"arguments": [{"expression": {"id": 198, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "4280:3:2", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 199, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "4280:10:2", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"id": 200, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 189, "src": "4292:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 201, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 191, "src": "4301:6:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 197, "name": "_approve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 501, "src": "4271:8:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 202, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4271:37:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 203, "nodeType": "ExpressionStatement", "src": "4271:37:2"}, {"expression": {"hexValue": "74727565", "id": 204, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "4325:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 196, "id": 205, "nodeType": "Return", "src": "4318:11:2"}]}, "documentation": {"id": 187, "nodeType": "StructuredDocumentation", "src": "4040:127:2", "text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."}, "functionSelector": "095ea7b3", "id": 207, "implemented": true, "kind": "function", "modifiers": [], "name": "approve", "nodeType": "FunctionDefinition", "overrides": {"id": 193, "nodeType": "OverrideSpecifier", "overrides": [], "src": "4237:8:2"}, "parameters": {"id": 192, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 189, "mutability": "mutable", "name": "spender", "nodeType": "VariableDeclaration", "scope": 207, "src": "4189:15:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 188, "name": "address", "nodeType": "ElementaryTypeName", "src": "4189:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 191, "mutability": "mutable", "name": "amount", "nodeType": "VariableDeclaration", "scope": 207, "src": "4206:14:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 190, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4206:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4188:33:2"}, "returnParameters": {"id": 196, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 195, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 207, "src": "4255:4:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 194, "name": "bool", "nodeType": "ElementaryTypeName", "src": "4255:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "4254:6:2"}, "scope": 524, "src": "4172:164:2", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"baseFunctions": [1116], "body": {"id": 245, "nodeType": "Block", "src": "4945:244:2", "statements": [{"expression": {"arguments": [{"id": 221, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 210, "src": "4965:6:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 222, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 212, "src": "4973:9:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 223, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 214, "src": "4984:6:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 220, "name": "_transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 373, "src": "4955:9:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 224, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4955:36:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 225, "nodeType": "ExpressionStatement", "src": "4955:36:2"}, {"expression": {"arguments": [{"id": 227, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 210, "src": "5023:6:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 228, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5043:3:2", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 229, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "5043:10:2", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"arguments": [{"id": 237, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 214, "src": "5103:6:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 238, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1057, "src": "5111:6:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$1057_$", "typeString": "type(library Errors)"}}, "id": 239, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ERC20_TRANSFER_EXCEEDS_ALLOWANCE", "nodeType": "MemberAccess", "referencedDeclaration": 912, "src": "5111:39:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"baseExpression": {"baseExpression": {"id": 230, "name": "_allowances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 67, "src": "5067:11:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 232, "indexExpression": {"id": 231, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 210, "src": "5079:6:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5067:19:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 235, "indexExpression": {"expression": {"id": 233, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5087:3:2", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 234, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "5087:10:2", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5067:31:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 236, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 1212, "src": "5067:35:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"}}, "id": 240, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5067:84:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 226, "name": "_approve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 501, "src": "5001:8:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 241, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5001:160:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 242, "nodeType": "ExpressionStatement", "src": "5001:160:2"}, {"expression": {"hexValue": "74727565", "id": 243, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "5178:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 219, "id": 244, "nodeType": "Return", "src": "5171:11:2"}]}, "documentation": {"id": 208, "nodeType": "StructuredDocumentation", "src": "4342:456:2", "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."}, "functionSelector": "23b872dd", "id": 246, "implemented": true, "kind": "function", "modifiers": [], "name": "transferFrom", "nodeType": "FunctionDefinition", "overrides": {"id": 216, "nodeType": "OverrideSpecifier", "overrides": [], "src": "4921:8:2"}, "parameters": {"id": 215, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 210, "mutability": "mutable", "name": "sender", "nodeType": "VariableDeclaration", "scope": 246, "src": "4834:14:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 209, "name": "address", "nodeType": "ElementaryTypeName", "src": "4834:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 212, "mutability": "mutable", "name": "recipient", "nodeType": "VariableDeclaration", "scope": 246, "src": "4858:17:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 211, "name": "address", "nodeType": "ElementaryTypeName", "src": "4858:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 214, "mutability": "mutable", "name": "amount", "nodeType": "VariableDeclaration", "scope": 246, "src": "4885:14:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 213, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4885:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4824:81:2"}, "returnParameters": {"id": 219, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 218, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 246, "src": "4939:4:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 217, "name": "bool", "nodeType": "ElementaryTypeName", "src": "4939:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "4938:6:2"}, "scope": 524, "src": "4803:386:2", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"body": {"id": 273, "nodeType": "Block", "src": "5678:117:2", "statements": [{"expression": {"arguments": [{"expression": {"id": 257, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5697:3:2", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 258, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "5697:10:2", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"id": 259, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 249, "src": "5709:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 267, "name": "addedValue", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 251, "src": "5755:10:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"baseExpression": {"baseExpression": {"id": 260, "name": "_allowances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 67, "src": "5718:11:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 263, "indexExpression": {"expression": {"id": 261, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5730:3:2", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 262, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "5730:10:2", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5718:23:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 265, "indexExpression": {"id": 264, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 249, "src": "5742:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5718:32:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 266, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 1166, "src": "5718:36:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 268, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5718:48:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 256, "name": "_approve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 501, "src": "5688:8:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 269, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5688:79:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 270, "nodeType": "ExpressionStatement", "src": "5688:79:2"}, {"expression": {"hexValue": "74727565", "id": 271, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "5784:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 255, "id": 272, "nodeType": "Return", "src": "5777:11:2"}]}, "documentation": {"id": 247, "nodeType": "StructuredDocumentation", "src": "5195:384:2", "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."}, "functionSelector": "39509351", "id": 274, "implemented": true, "kind": "function", "modifiers": [], "name": "increaseAllowance", "nodeType": "FunctionDefinition", "parameters": {"id": 252, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 249, "mutability": "mutable", "name": "spender", "nodeType": "VariableDeclaration", "scope": 274, "src": "5611:15:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 248, "name": "address", "nodeType": "ElementaryTypeName", "src": "5611:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 251, "mutability": "mutable", "name": "addedValue", "nodeType": "VariableDeclaration", "scope": 274, "src": "5628:18:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 250, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5628:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5610:37:2"}, "returnParameters": {"id": 255, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 254, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 274, "src": "5672:4:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 253, "name": "bool", "nodeType": "ElementaryTypeName", "src": "5672:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "5671:6:2"}, "scope": 524, "src": "5584:211:2", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"body": {"id": 303, "nodeType": "Block", "src": "6381:213:2", "statements": [{"expression": {"arguments": [{"expression": {"id": 285, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6413:3:2", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 286, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "6413:10:2", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"id": 287, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 277, "src": "6437:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 295, "name": "subtractedValue", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 279, "src": "6495:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 296, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1057, "src": "6512:6:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$1057_$", "typeString": "type(library Errors)"}}, "id": 297, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ERC20_DECREASED_ALLOWANCE_BELOW_ZERO", "nodeType": "MemberAccess", "referencedDeclaration": 915, "src": "6512:43:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"baseExpression": {"baseExpression": {"id": 288, "name": "_allowances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 67, "src": "6458:11:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 291, "indexExpression": {"expression": {"id": 289, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6470:3:2", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 290, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "6470:10:2", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6458:23:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 293, "indexExpression": {"id": 292, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 277, "src": "6482:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6458:32:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 294, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 1212, "src": "6458:36:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"}}, "id": 298, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6458:98:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 284, "name": "_approve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 501, "src": "6391:8:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 299, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6391:175:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 300, "nodeType": "ExpressionStatement", "src": "6391:175:2"}, {"expression": {"hexValue": "74727565", "id": 301, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "6583:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 283, "id": 302, "nodeType": "Return", "src": "6576:11:2"}]}, "documentation": {"id": 275, "nodeType": "StructuredDocumentation", "src": "5801:476:2", "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."}, "functionSelector": "a457c2d7", "id": 304, "implemented": true, "kind": "function", "modifiers": [], "name": "decreaseAllowance", "nodeType": "FunctionDefinition", "parameters": {"id": 280, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 277, "mutability": "mutable", "name": "spender", "nodeType": "VariableDeclaration", "scope": 304, "src": "6309:15:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 276, "name": "address", "nodeType": "ElementaryTypeName", "src": "6309:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 279, "mutability": "mutable", "name": "subtractedValue", "nodeType": "VariableDeclaration", "scope": 304, "src": "6326:23:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 278, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6326:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6308:42:2"}, "returnParameters": {"id": 283, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 282, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 304, "src": "6375:4:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 281, "name": "bool", "nodeType": "ElementaryTypeName", "src": "6375:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "6374:6:2"}, "scope": 524, "src": "6282:312:2", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"body": {"id": 372, "nodeType": "Block", "src": "7185:442:2", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 320, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 315, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 307, "src": "7204:6:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 318, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7222:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 317, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "7214:7:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 316, "name": "address", "nodeType": "ElementaryTypeName", "src": "7214:7:2", "typeDescriptions": {}}}, "id": 319, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7214:10:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "7204:20:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 321, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1057, "src": "7226:6:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$1057_$", "typeString": "type(library Errors)"}}, "id": 322, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ERC20_TRANSFER_FROM_ZERO_ADDRESS", "nodeType": "MemberAccess", "referencedDeclaration": 894, "src": "7226:39:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 314, "name": "_require", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 652, "src": "7195:8:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 323, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7195:71:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 324, "nodeType": "ExpressionStatement", "src": "7195:71:2"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 331, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 326, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 309, "src": "7285:9:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 329, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7306:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 328, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "7298:7:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 327, "name": "address", "nodeType": "ElementaryTypeName", "src": "7298:7:2", "typeDescriptions": {}}}, "id": 330, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7298:10:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "7285:23:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 332, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1057, "src": "7310:6:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$1057_$", "typeString": "type(library Errors)"}}, "id": 333, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ERC20_TRANSFER_TO_ZERO_ADDRESS", "nodeType": "MemberAccess", "referencedDeclaration": 897, "src": "7310:37:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 325, "name": "_require", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 652, "src": "7276:8:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 334, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7276:72:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 335, "nodeType": "ExpressionStatement", "src": "7276:72:2"}, {"expression": {"arguments": [{"id": 337, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 307, "src": "7380:6:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 338, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 309, "src": "7388:9:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 339, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 311, "src": "7399:6:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 336, "name": "_beforeTokenTransfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 523, "src": "7359:20:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 340, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7359:47:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 341, "nodeType": "ExpressionStatement", "src": "7359:47:2"}, {"expression": {"id": 353, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 342, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 61, "src": "7417:9:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 344, "indexExpression": {"id": 343, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 307, "src": "7427:6:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "7417:17:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 349, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 311, "src": "7459:6:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 350, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1057, "src": "7467:6:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$1057_$", "typeString": "type(library Errors)"}}, "id": 351, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ERC20_TRANSFER_EXCEEDS_BALANCE", "nodeType": "MemberAccess", "referencedDeclaration": 918, "src": "7467:37:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"baseExpression": {"id": 345, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 61, "src": "7437:9:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 347, "indexExpression": {"id": 346, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 307, "src": "7447:6:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7437:17:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 348, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 1212, "src": "7437:21:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"}}, "id": 352, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7437:68:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7417:88:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 354, "nodeType": "ExpressionStatement", "src": "7417:88:2"}, {"expression": {"id": 364, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 355, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 61, "src": "7515:9:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 357, "indexExpression": {"id": 356, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 309, "src": "7525:9:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "7515:20:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 362, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 311, "src": "7563:6:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"baseExpression": {"id": 358, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 61, "src": "7538:9:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 360, "indexExpression": {"id": 359, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 309, "src": "7548:9:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7538:20:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 361, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 1166, "src": "7538:24:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 363, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7538:32:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7515:55:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 365, "nodeType": "ExpressionStatement", "src": "7515:55:2"}, {"eventCall": {"arguments": [{"id": 367, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 307, "src": "7594:6:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 368, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 309, "src": "7602:9:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 369, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 311, "src": "7613:6:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 366, "name": "Transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1125, "src": "7585:8:2", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 370, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7585:35:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 371, "nodeType": "EmitStatement", "src": "7580:40:2"}]}, "documentation": {"id": 305, "nodeType": "StructuredDocumentation", "src": "6600:463:2", "text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."}, "id": 373, "implemented": true, "kind": "function", "modifiers": [], "name": "_transfer", "nodeType": "FunctionDefinition", "parameters": {"id": 312, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 307, "mutability": "mutable", "name": "sender", "nodeType": "VariableDeclaration", "scope": 373, "src": "7096:14:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 306, "name": "address", "nodeType": "ElementaryTypeName", "src": "7096:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 309, "mutability": "mutable", "name": "recipient", "nodeType": "VariableDeclaration", "scope": 373, "src": "7120:17:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 308, "name": "address", "nodeType": "ElementaryTypeName", "src": "7120:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 311, "mutability": "mutable", "name": "amount", "nodeType": "VariableDeclaration", "scope": 373, "src": "7147:14:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 310, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7147:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7086:81:2"}, "returnParameters": {"id": 313, "nodeType": "ParameterList", "parameters": [], "src": "7185:0:2"}, "scope": 524, "src": "7068:559:2", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal"}, {"body": {"id": 417, "nodeType": "Block", "src": "7963:229:2", "statements": [{"expression": {"arguments": [{"arguments": [{"hexValue": "30", "id": 384, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8002:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 383, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "7994:7:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 382, "name": "address", "nodeType": "ElementaryTypeName", "src": "7994:7:2", "typeDescriptions": {}}}, "id": 385, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7994:10:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"id": 386, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 376, "src": "8006:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 387, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 378, "src": "8015:6:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 381, "name": "_beforeTokenTransfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 523, "src": "7973:20:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 388, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7973:49:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 389, "nodeType": "ExpressionStatement", "src": "7973:49:2"}, {"expression": {"id": 395, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 390, "name": "_totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 69, "src": "8033:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 393, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 378, "src": "8065:6:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 391, "name": "_totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 69, "src": "8048:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 392, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 1166, "src": "8048:16:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 394, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8048:24:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8033:39:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 396, "nodeType": "ExpressionStatement", "src": "8033:39:2"}, {"expression": {"id": 406, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 397, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 61, "src": "8082:9:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 399, "indexExpression": {"id": 398, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 376, "src": "8092:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "8082:18:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 404, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 378, "src": "8126:6:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"baseExpression": {"id": 400, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 61, "src": "8103:9:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 402, "indexExpression": {"id": 401, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 376, "src": "8113:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "8103:18:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 403, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 1166, "src": "8103:22:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 405, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8103:30:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8082:51:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 407, "nodeType": "ExpressionStatement", "src": "8082:51:2"}, {"eventCall": {"arguments": [{"arguments": [{"hexValue": "30", "id": 411, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8165:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 410, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8157:7:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 409, "name": "address", "nodeType": "ElementaryTypeName", "src": "8157:7:2", "typeDescriptions": {}}}, "id": 412, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8157:10:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"id": 413, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 376, "src": "8169:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 414, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 378, "src": "8178:6:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 408, "name": "Transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1125, "src": "8148:8:2", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 415, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8148:37:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 416, "nodeType": "EmitStatement", "src": "8143:42:2"}]}, "documentation": {"id": 374, "nodeType": "StructuredDocumentation", "src": "7633:260:2", "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."}, "id": 418, "implemented": true, "kind": "function", "modifiers": [], "name": "_mint", "nodeType": "FunctionDefinition", "parameters": {"id": 379, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 376, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 418, "src": "7913:15:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 375, "name": "address", "nodeType": "ElementaryTypeName", "src": "7913:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 378, "mutability": "mutable", "name": "amount", "nodeType": "VariableDeclaration", "scope": 418, "src": "7930:14:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 377, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7930:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7912:33:2"}, "returnParameters": {"id": 380, "nodeType": "ParameterList", "parameters": [], "src": "7963:0:2"}, "scope": 524, "src": "7898:294:2", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal"}, {"body": {"id": 475, "nodeType": "Block", "src": "8577:345:2", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 432, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 427, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 421, "src": "8596:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 430, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8615:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 429, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8607:7:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 428, "name": "address", "nodeType": "ElementaryTypeName", "src": "8607:7:2", "typeDescriptions": {}}}, "id": 431, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8607:10:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "8596:21:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 433, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1057, "src": "8619:6:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$1057_$", "typeString": "type(library Errors)"}}, "id": 434, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ERC20_BURN_FROM_ZERO_ADDRESS", "nodeType": "MemberAccess", "referencedDeclaration": 903, "src": "8619:35:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 426, "name": "_require", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 652, "src": "8587:8:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 435, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8587:68:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 436, "nodeType": "ExpressionStatement", "src": "8587:68:2"}, {"expression": {"arguments": [{"id": 438, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 421, "src": "8687:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"hexValue": "30", "id": 441, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8704:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 440, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8696:7:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 439, "name": "address", "nodeType": "ElementaryTypeName", "src": "8696:7:2", "typeDescriptions": {}}}, "id": 442, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8696:10:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"id": 443, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 423, "src": "8708:6:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 437, "name": "_beforeTokenTransfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 523, "src": "8666:20:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 444, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8666:49:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 445, "nodeType": "ExpressionStatement", "src": "8666:49:2"}, {"expression": {"id": 457, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 446, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 61, "src": "8726:9:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 448, "indexExpression": {"id": 447, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 421, "src": "8736:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "8726:18:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 453, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 423, "src": "8770:6:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 454, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1057, "src": "8778:6:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$1057_$", "typeString": "type(library Errors)"}}, "id": 455, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ERC20_BURN_EXCEEDS_ALLOWANCE", "nodeType": "MemberAccess", "referencedDeclaration": 921, "src": "8778:35:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"baseExpression": {"id": 449, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 61, "src": "8747:9:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 451, "indexExpression": {"id": 450, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 421, "src": "8757:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "8747:18:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 452, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 1212, "src": "8747:22:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"}}, "id": 456, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8747:67:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8726:88:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 458, "nodeType": "ExpressionStatement", "src": "8726:88:2"}, {"expression": {"id": 464, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 459, "name": "_totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 69, "src": "8824:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 462, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 423, "src": "8856:6:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 460, "name": "_totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 69, "src": "8839:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 461, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 1184, "src": "8839:16:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 463, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8839:24:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8824:39:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 465, "nodeType": "ExpressionStatement", "src": "8824:39:2"}, {"eventCall": {"arguments": [{"id": 467, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 421, "src": "8887:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"hexValue": "30", "id": 470, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8904:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 469, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8896:7:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 468, "name": "address", "nodeType": "ElementaryTypeName", "src": "8896:7:2", "typeDescriptions": {}}}, "id": 471, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8896:10:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"id": 472, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 423, "src": "8908:6:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 466, "name": "Transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1125, "src": "8878:8:2", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 473, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8878:37:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 474, "nodeType": "EmitStatement", "src": "8873:42:2"}]}, "documentation": {"id": 419, "nodeType": "StructuredDocumentation", "src": "8198:309:2", "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."}, "id": 476, "implemented": true, "kind": "function", "modifiers": [], "name": "_burn", "nodeType": "FunctionDefinition", "parameters": {"id": 424, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 421, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 476, "src": "8527:15:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 420, "name": "address", "nodeType": "ElementaryTypeName", "src": "8527:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 423, "mutability": "mutable", "name": "amount", "nodeType": "VariableDeclaration", "scope": 476, "src": "8544:14:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 422, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8544:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "8526:33:2"}, "returnParameters": {"id": 425, "nodeType": "ParameterList", "parameters": [], "src": "8577:0:2"}, "scope": 524, "src": "8512:410:2", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal"}, {"body": {"id": 500, "nodeType": "Block", "src": "9458:100:2", "statements": [{"expression": {"id": 492, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"baseExpression": {"id": 486, "name": "_allowances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 67, "src": "9468:11:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 489, "indexExpression": {"id": 487, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 479, "src": "9480:5:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9468:18:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 490, "indexExpression": {"id": 488, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 481, "src": "9487:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "9468:27:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 491, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 483, "src": "9498:6:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9468:36:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 493, "nodeType": "ExpressionStatement", "src": "9468:36:2"}, {"eventCall": {"arguments": [{"id": 495, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 479, "src": "9528:5:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 496, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 481, "src": "9535:7:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 497, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 483, "src": "9544:6:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 494, "name": "Approval", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1134, "src": "9519:8:2", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 498, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9519:32:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 499, "nodeType": "EmitStatement", "src": "9514:37:2"}]}, "documentation": {"id": 477, "nodeType": "StructuredDocumentation", "src": "8928:412:2", "text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."}, "id": 501, "implemented": true, "kind": "function", "modifiers": [], "name": "_approve", "nodeType": "FunctionDefinition", "parameters": {"id": 484, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 479, "mutability": "mutable", "name": "owner", "nodeType": "VariableDeclaration", "scope": 501, "src": "9372:13:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 478, "name": "address", "nodeType": "ElementaryTypeName", "src": "9372:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 481, "mutability": "mutable", "name": "spender", "nodeType": "VariableDeclaration", "scope": 501, "src": "9395:15:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 480, "name": "address", "nodeType": "ElementaryTypeName", "src": "9395:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 483, "mutability": "mutable", "name": "amount", "nodeType": "VariableDeclaration", "scope": 501, "src": "9420:14:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 482, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9420:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "9362:78:2"}, "returnParameters": {"id": 485, "nodeType": "ParameterList", "parameters": [], "src": "9458:0:2"}, "scope": 524, "src": "9345:213:2", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal"}, {"body": {"id": 511, "nodeType": "Block", "src": "9931:38:2", "statements": [{"expression": {"id": 509, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 507, "name": "_decimals", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 75, "src": "9941:9:2", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 508, "name": "decimals_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 504, "src": "9953:9:2", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "src": "9941:21:2", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "id": 510, "nodeType": "ExpressionStatement", "src": "9941:21:2"}]}, "documentation": {"id": 502, "nodeType": "StructuredDocumentation", "src": "9564:312:2", "text": " @dev Sets {decimals} to a value other than the default one of 18.\n WARNING: This function should only be called from the constructor. Most\n applications that interact with token contracts will not expect\n {decimals} to ever change, and may work incorrectly if it does."}, "id": 512, "implemented": true, "kind": "function", "modifiers": [], "name": "_setupDecimals", "nodeType": "FunctionDefinition", "parameters": {"id": 505, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 504, "mutability": "mutable", "name": "decimals_", "nodeType": "VariableDeclaration", "scope": 512, "src": "9905:15:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 503, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "9905:5:2", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "internal"}], "src": "9904:17:2"}, "returnParameters": {"id": 506, "nodeType": "ParameterList", "parameters": [], "src": "9931:0:2"}, "scope": 524, "src": "9881:88:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 522, "nodeType": "Block", "src": "10675:2:2", "statements": []}, "documentation": {"id": 513, "nodeType": "StructuredDocumentation", "src": "9975:576:2", "text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."}, "id": 523, "implemented": true, "kind": "function", "modifiers": [], "name": "_beforeTokenTransfer", "nodeType": "FunctionDefinition", "parameters": {"id": 520, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 515, "mutability": "mutable", "name": "from", "nodeType": "VariableDeclaration", "scope": 523, "src": "10595:12:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 514, "name": "address", "nodeType": "ElementaryTypeName", "src": "10595:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 517, "mutability": "mutable", "name": "to", "nodeType": "VariableDeclaration", "scope": 523, "src": "10617:10:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 516, "name": "address", "nodeType": "ElementaryTypeName", "src": "10617:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 519, "mutability": "mutable", "name": "amount", "nodeType": "VariableDeclaration", "scope": 523, "src": "10637:14:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 518, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10637:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "10585:72:2"}, "returnParameters": {"id": 521, "nodeType": "ParameterList", "parameters": [], "src": "10675:0:2"}, "scope": 524, "src": "10556:121:2", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal"}], "scope": 525, "src": "1311:9368:2"}], "src": "33:10647:2"}, "bytecode": "608060405234801561001057600080fd5b5060405161097f38038061097f8339818101604052604081101561003357600080fd5b810190808051604051939291908464010000000082111561005357600080fd5b90830190602082018581111561006857600080fd5b825164010000000081118282018810171561008257600080fd5b82525081516020918201929091019080838360005b838110156100af578181015183820152602001610097565b50505050905090810190601f1680156100dc5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156100ff57600080fd5b90830190602082018581111561011457600080fd5b825164010000000081118282018810171561012e57600080fd5b82525081516020918201929091019080838360005b8381101561015b578181015183820152602001610143565b50505050905090810190601f1680156101885780820380516001836020036101000a031916815260200191505b50604052505082516101a2915060039060208501906101cb565b5080516101b69060049060208401906101cb565b50506005805460ff191660121790555061026c565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826102015760008555610247565b82601f1061021a57805160ff1916838001178555610247565b82800160010185558215610247579182015b8281111561024757825182559160200191906001019061022c565b50610253929150610257565b5090565b5b808211156102535760008155600101610258565b6107048061027b6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063395093511161007157806339509351146101d957806370a082311461020557806395d89b411461022b578063a457c2d714610233578063a9059cbb1461025f578063dd62ed3e1461028b576100a9565b806306fdde03146100ae578063095ea7b31461012b57806318160ddd1461016b57806323b872dd14610185578063313ce567146101bb575b600080fd5b6100b66102b9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f05781810151838201526020016100d8565b50505050905090810190601f16801561011d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101576004803603604081101561014157600080fd5b506001600160a01b03813516906020013561034f565b604080519115158252519081900360200190f35b610173610365565b60408051918252519081900360200190f35b6101576004803603606081101561019b57600080fd5b506001600160a01b0381358116916020810135909116906040013561036b565b6101c36103bf565b6040805160ff9092168252519081900360200190f35b610157600480360360408110156101ef57600080fd5b506001600160a01b0381351690602001356103c8565b6101736004803603602081101561021b57600080fd5b50356001600160a01b03166103fe565b6100b6610419565b6101576004803603604081101561024957600080fd5b506001600160a01b03813516906020013561047a565b6101576004803603604081101561027557600080fd5b506001600160a01b0381351690602001356104b3565b610173600480360360408110156102a157600080fd5b506001600160a01b03813581169160200135166104c0565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050905090565b600061035c3384846104eb565b50600192915050565b60025490565b600061037884848461054d565b6001600160a01b0384166000908152600160209081526040808320338085529252909120546103b59186916103b0908661019e610635565b6104eb565b5060019392505050565b60055460ff1690565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161035c9185906103b0908661064b565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161035c9185906103b0908661019f610635565b600061035c33848461054d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6105646001600160a01b0384161515610198610664565b61057b6001600160a01b0383161515610199610664565b610586838383610676565b6001600160a01b0383166000908152602081905260409020546105ac90826101a0610635565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546105db908261064b565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60006106448484111583610664565b5050900390565b600082820161065d8482101583610664565b9392505050565b81610672576106728161067b565b5050565b505050565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fdfea2646970667358221220f4c9f660d8ad2147f56cd899935ebb085b7977d8c4ace94134de12d34a224b9664736f6c63430007060033", "bytecodeSha1": "c455c7c14b8a2bd6f4eac15ea87198138ce777ae", "compiler": {"evm_version": "berlin", "optimizer": {"enabled": true, "runs": 200}, "version": "0.7.6+commit.7338295f"}, "contractName": "ERC20", "coverageMap": {"branches": {"1": {}, "2": {}, "3": {}, "4": {}}, "statements": {"1": {"_require": {"25": [946, 964]}}, "2": {"ERC20._approve": {"14": [9468, 9504], "15": [9514, 9551]}, "ERC20._transfer": {"16": [7195, 7266], "17": [7276, 7348], "18": [7359, 7406], "19": [7417, 7505], "20": [7515, 7570], "21": [7580, 7620]}, "ERC20.allowance": {"13": [3993, 4027]}, "ERC20.approve": {"1": [4271, 4308], "2": [4318, 4329]}, "ERC20.balanceOf": {"9": [3422, 3447]}, "ERC20.decimals": {"7": [3098, 3114]}, "ERC20.decreaseAllowance": {"11": [6391, 6566]}, "ERC20.increaseAllowance": {"8": [5688, 5767]}, "ERC20.name": {"0": [2200, 2212]}, "ERC20.symbol": {"10": [2396, 2410]}, "ERC20.totalSupply": {"3": [3253, 3272]}, "ERC20.transfer": {"12": [3759, 3799]}, "ERC20.transferFrom": {"4": [4955, 4991], "5": [5001, 5161], "6": [5171, 5182]}}, "3": {}, "4": {"SafeMath.add": {"23": [1019, 1056], "24": [1067, 1075]}, "SafeMath.sub": {"22": [1861, 1888]}}}}, "dependencies": ["Errors", "IERC20", "SafeMath"], "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c8063395093511161007157806339509351146101d957806370a082311461020557806395d89b411461022b578063a457c2d714610233578063a9059cbb1461025f578063dd62ed3e1461028b576100a9565b806306fdde03146100ae578063095ea7b31461012b57806318160ddd1461016b57806323b872dd14610185578063313ce567146101bb575b600080fd5b6100b66102b9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f05781810151838201526020016100d8565b50505050905090810190601f16801561011d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101576004803603604081101561014157600080fd5b506001600160a01b03813516906020013561034f565b604080519115158252519081900360200190f35b610173610365565b60408051918252519081900360200190f35b6101576004803603606081101561019b57600080fd5b506001600160a01b0381358116916020810135909116906040013561036b565b6101c36103bf565b6040805160ff9092168252519081900360200190f35b610157600480360360408110156101ef57600080fd5b506001600160a01b0381351690602001356103c8565b6101736004803603602081101561021b57600080fd5b50356001600160a01b03166103fe565b6100b6610419565b6101576004803603604081101561024957600080fd5b506001600160a01b03813516906020013561047a565b6101576004803603604081101561027557600080fd5b506001600160a01b0381351690602001356104b3565b610173600480360360408110156102a157600080fd5b506001600160a01b03813581169160200135166104c0565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050905090565b600061035c3384846104eb565b50600192915050565b60025490565b600061037884848461054d565b6001600160a01b0384166000908152600160209081526040808320338085529252909120546103b59186916103b0908661019e610635565b6104eb565b5060019392505050565b60055460ff1690565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161035c9185906103b0908661064b565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161035c9185906103b0908661019f610635565b600061035c33848461054d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6105646001600160a01b0384161515610198610664565b61057b6001600160a01b0383161515610199610664565b610586838383610676565b6001600160a01b0383166000908152602081905260409020546105ac90826101a0610635565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546105db908261064b565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60006106448484111583610664565b5050900390565b600082820161065d8482101583610664565b9392505050565b81610672576106728161067b565b5050565b505050565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fdfea2646970667358221220f4c9f660d8ad2147f56cd899935ebb085b7977d8c4ace94134de12d34a224b9664736f6c63430007060033", "deployedSourceMap": "1311:9368:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2138:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4172:164;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4172:164:2;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3181:98;;;:::i;:::-;;;;;;;;;;;;;;;;4803:386;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4803:386:2;;;;;;;;;;;;;;;;;:::i;3040:81::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5584:211;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5584:211:2;;;;;;;;:::i;3337:117::-;;;;;;;;;;;;;;;;-1:-1:-1;3337:117:2;-1:-1:-1;;;;;3337:117:2;;:::i;2332:85::-;;;:::i;6282:312::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6282:312:2;;;;;;;;:::i;3657:170::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3657:170:2;;;;;;;;:::i;3885:149::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3885:149:2;;;;;;;;;;:::i;2138:81::-;2207:5;2200:12;;;;;;;;-1:-1:-1;;2200:12:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2175:13;;2200:12;;2207:5;;2200:12;;2207:5;2200:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2138:81;:::o;4172:164::-;4255:4;4271:37;4280:10;4292:7;4301:6;4271:8;:37::i;:::-;-1:-1:-1;4325:4:2;4172:164;;;;:::o;3181:98::-;3260:12;;3181:98;:::o;4803:386::-;4939:4;4955:36;4965:6;4973:9;4984:6;4955:9;:36::i;:::-;-1:-1:-1;;;;;5067:19:2;;;;;;:11;:19;;;;;;;;5043:10;5067:31;;;;;;;;;5001:160;;5023:6;;5067:84;;5103:6;9174:3:1;5067:35:2;:84::i;:::-;5001:8;:160::i;:::-;-1:-1:-1;5178:4:2;4803:386;;;;;:::o;3040:81::-;3105:9;;;;3040:81;:::o;5584:211::-;5697:10;5672:4;5718:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;5718:32:2;;;;;;;;;;5672:4;;5688:79;;5709:7;;5718:48;;5755:10;5718:36;:48::i;3337:117::-;-1:-1:-1;;;;;3429:18:2;3403:7;3429:18;;;;;;;;;;;;3337:117::o;2332:85::-;2403:7;2396:14;;;;;;;;-1:-1:-1;;2396:14:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2371:13;;2396:14;;2403:7;;2396:14;;2403:7;2396:14;;;;;;;;;;;;;;;;;;;;;;;;6282:312;6413:10;6375:4;6458:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;6458:32:2;;;;;;;;;;6375:4;;6391:175;;6437:7;;6458:98;;6495:15;9248:3:1;6458:36:2;:98::i;3657:170::-;3743:4;3759:40;3769:10;3781:9;3792:6;3759:9;:40::i;3885:149::-;-1:-1:-1;;;;;4000:18:2;;;3974:7;4000:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3885:149::o;9345:213::-;-1:-1:-1;;;;;9468:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9519:32;;;;;;;;;;;;;;;;;9345:213;;;:::o;7068:559::-;7195:71;-1:-1:-1;;;;;7204:20:2;;;;8770:3:1;7195:8:2;:71::i;:::-;7276:72;-1:-1:-1;;;;;7285:23:2;;;;8838:3:1;7276:8:2;:72::i;:::-;7359:47;7380:6;7388:9;7399:6;7359:20;:47::i;:::-;-1:-1:-1;;;;;7437:17:2;;:9;:17;;;;;;;;;;;:68;;7459:6;9316:3:1;7437:21:2;:68::i;:::-;-1:-1:-1;;;;;7417:17:2;;;:9;:17;;;;;;;;;;;:88;;;;7538:20;;;;;;;:32;;7563:6;7538:24;:32::i;:::-;-1:-1:-1;;;;;7515:20:2;;;:9;:20;;;;;;;;;;;;:55;;;;7585:35;;;;;;;7515:20;;7585:35;;;;;;;;;;;;;7068:559;;;:::o;1765:176:4:-;1842:7;1861:27;1875:1;1870;:6;;1878:9;1861:8;:27::i;:::-;-1:-1:-1;;1910:5:4;;;1765:176::o;915:167::-;973:7;1004:5;;;1019:37;1028:6;;;;973:7;1019:8;:37::i;:::-;1074:1;915:167;-1:-1:-1;;;915:167:4:o;866:101:1:-;935:9;930:34;;946:18;954:9;946:7;:18::i;:::-;866:101;;:::o;10556:121:2:-;;;;:::o;1074:3172:1:-;-1:-1:-1;;;3588:3:1;3581:79;;;3799:66;3793:4;3786:80;3941:1;3935:4;3928:15;2999:73;2210:2;2243:18;;;2288;;;2215:4;2284:29;;;3040:1;3036:14;2195:18;;;;3025:26;;;;2336:18;;;;2383;;;2379:29;;;3057:2;3053:17;3021:50;;;;2999:73;2994:3;2990:83;4008:4;4001:26;4234:3;;4224:14", "language": "Solidity", "natspec": {"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.", "kind": "dev", "methods": {"allowance(address,address)": {"details": "See {IERC20-allowance}."}, "approve(address,uint256)": {"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."}, "balanceOf(address)": {"details": "See {IERC20-balanceOf}."}, "constructor": {"details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."}, "decimals()": {"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."}, "decreaseAllowance(address,uint256)": {"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."}, "increaseAllowance(address,uint256)": {"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."}, "name()": {"details": "Returns the name of the token."}, "symbol()": {"details": "Returns the symbol of the token, usually a shorter version of the name."}, "totalSupply()": {"details": "See {IERC20-totalSupply}."}, "transfer(address,uint256)": {"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."}, "transferFrom(address,address,uint256)": {"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."}}, "version": 1}, "offset": [1311, 10679], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x28B JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x11D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH2 0x365 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x36B JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3C8 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3FE JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x419 JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x47A JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4B3 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x328 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35C CALLER DUP5 DUP5 PUSH2 0x4EB JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x378 DUP5 DUP5 DUP5 PUSH2 0x54D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x3B5 SWAP2 DUP7 SWAP2 PUSH2 0x3B0 SWAP1 DUP7 PUSH2 0x19E PUSH2 0x635 JUMP JUMPDEST PUSH2 0x4EB JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x35C SWAP2 DUP6 SWAP1 PUSH2 0x3B0 SWAP1 DUP7 PUSH2 0x64B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x35C SWAP2 DUP6 SWAP1 PUSH2 0x3B0 SWAP1 DUP7 PUSH2 0x19F PUSH2 0x635 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35C CALLER DUP5 DUP5 PUSH2 0x54D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x564 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO ISZERO PUSH2 0x198 PUSH2 0x664 JUMP JUMPDEST PUSH2 0x57B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x199 PUSH2 0x664 JUMP JUMPDEST PUSH2 0x586 DUP4 DUP4 DUP4 PUSH2 0x676 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x5AC SWAP1 DUP3 PUSH2 0x1A0 PUSH2 0x635 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x5DB SWAP1 DUP3 PUSH2 0x64B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x644 DUP5 DUP5 GT ISZERO DUP4 PUSH2 0x664 JUMP JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH2 0x65D DUP5 DUP3 LT ISZERO DUP4 PUSH2 0x664 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x672 JUMPI PUSH2 0x672 DUP2 PUSH2 0x67B JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH7 0x42414C23000030 PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD SWAP1 SWAP5 ADD PUSH1 0x10 SHL SWAP4 SWAP1 SWAP4 ADD ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL 0xC9 0xF6 PUSH1 0xD8 0xAD 0x21 SELFBALANCE CREATE2 PUSH13 0xD899935EBB085B7977D8C4ACE9 COINBASE CALLVALUE 0xDE SLT 0xD3 0x4A 0x22 0x4B SWAP7 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ", "pcMap": {"0": {"offset": [1311, 10679], "op": "PUSH1", "path": "2", "value": "0x80"}, "2": {"fn": null, "offset": [1311, 10679], "op": "PUSH1", "path": "2", "value": "0x40"}, "4": {"fn": null, "offset": [1311, 10679], "op": "MSTORE", "path": "2"}, "5": {"fn": null, "offset": [1311, 10679], "op": "CALLVALUE", "path": "2"}, "6": {"fn": null, "offset": [1311, 10679], "op": "DUP1", "path": "2"}, "7": {"fn": null, "offset": [1311, 10679], "op": "ISZERO", "path": "2"}, "8": {"fn": null, "offset": [1311, 10679], "op": "PUSH2", "path": "2", "value": "0x10"}, "11": {"fn": null, "offset": [1311, 10679], "op": "JUMPI", "path": "2"}, "12": {"fn": null, "offset": [1311, 10679], "op": "PUSH1", "path": "2", "value": "0x0"}, "14": {"fn": null, "offset": [1311, 10679], "op": "DUP1", "path": "2"}, "15": {"dev": "Cannot send ether to nonpayable function", "fn": null, "offset": [1311, 10679], "op": "REVERT", "path": "2"}, "16": {"fn": null, "offset": [1311, 10679], "op": "JUMPDEST", "path": "2"}, "17": {"fn": null, "offset": [1311, 10679], "op": "POP", "path": "2"}, "18": {"fn": null, "offset": [1311, 10679], "op": "PUSH1", "path": "2", "value": "0x4"}, "20": {"fn": null, "offset": [1311, 10679], "op": "CALLDATASIZE", "path": "2"}, "21": {"fn": null, "offset": [1311, 10679], "op": "LT", "path": "2"}, "22": {"fn": null, "offset": [1311, 10679], "op": "PUSH2", "path": "2", "value": "0xA9"}, "25": {"fn": null, "offset": [1311, 10679], "op": "JUMPI", "path": "2"}, "26": {"fn": null, "offset": [1311, 10679], "op": "PUSH1", "path": "2", "value": "0x0"}, "28": {"fn": null, "offset": [1311, 10679], "op": "CALLDATALOAD", "path": "2"}, "29": {"fn": null, "offset": [1311, 10679], "op": "PUSH1", "path": "2", "value": "0xE0"}, "31": {"fn": null, "offset": [1311, 10679], "op": "SHR", "path": "2"}, "32": {"fn": null, "offset": [1311, 10679], "op": "DUP1", "path": "2"}, "33": {"fn": null, "offset": [1311, 10679], "op": "PUSH4", "path": "2", "value": "0x39509351"}, "38": {"fn": null, "offset": [1311, 10679], "op": "GT", "path": "2"}, "39": {"fn": null, "offset": [1311, 10679], "op": "PUSH2", "path": "2", "value": "0x71"}, "42": {"fn": null, "offset": [1311, 10679], "op": "JUMPI", "path": "2"}, "43": {"fn": null, "offset": [1311, 10679], "op": "DUP1", "path": "2"}, "44": {"fn": null, "offset": [1311, 10679], "op": "PUSH4", "path": "2", "value": "0x39509351"}, "49": {"fn": null, "offset": [1311, 10679], "op": "EQ", "path": "2"}, "50": {"fn": null, "offset": [1311, 10679], "op": "PUSH2", "path": "2", "value": "0x1D9"}, "53": {"fn": null, "offset": [1311, 10679], "op": "JUMPI", "path": "2"}, "54": {"fn": null, "offset": [1311, 10679], "op": "DUP1", "path": "2"}, "55": {"fn": null, "offset": [1311, 10679], "op": "PUSH4", "path": "2", "value": "0x70A08231"}, "60": {"fn": null, "offset": [1311, 10679], "op": "EQ", "path": "2"}, "61": {"fn": null, "offset": [1311, 10679], "op": "PUSH2", "path": "2", "value": "0x205"}, "64": {"fn": null, "offset": [1311, 10679], "op": "JUMPI", "path": "2"}, "65": {"fn": null, "offset": [1311, 10679], "op": "DUP1", "path": "2"}, "66": {"fn": null, "offset": [1311, 10679], "op": "PUSH4", "path": "2", "value": "0x95D89B41"}, "71": {"fn": null, "offset": [1311, 10679], "op": "EQ", "path": "2"}, "72": {"fn": null, "offset": [1311, 10679], "op": "PUSH2", "path": "2", "value": "0x22B"}, "75": {"fn": null, "offset": [1311, 10679], "op": "JUMPI", "path": "2"}, "76": {"fn": null, "offset": [1311, 10679], "op": "DUP1", "path": "2"}, "77": {"fn": null, "offset": [1311, 10679], "op": "PUSH4", "path": "2", "value": "0xA457C2D7"}, "82": {"fn": null, "offset": [1311, 10679], "op": "EQ", "path": "2"}, "83": {"fn": null, "offset": [1311, 10679], "op": "PUSH2", "path": "2", "value": "0x233"}, "86": {"fn": null, "offset": [1311, 10679], "op": "JUMPI", "path": "2"}, "87": {"fn": null, "offset": [1311, 10679], "op": "DUP1", "path": "2"}, "88": {"fn": null, "offset": [1311, 10679], "op": "PUSH4", "path": "2", "value": "0xA9059CBB"}, "93": {"fn": null, "offset": [1311, 10679], "op": "EQ", "path": "2"}, "94": {"fn": null, "offset": [1311, 10679], "op": "PUSH2", "path": "2", "value": "0x25F"}, "97": {"fn": null, "offset": [1311, 10679], "op": "JUMPI", "path": "2"}, "98": {"fn": null, "offset": [1311, 10679], "op": "DUP1", "path": "2"}, "99": {"fn": null, "offset": [1311, 10679], "op": "PUSH4", "path": "2", "value": "0xDD62ED3E"}, "104": {"fn": null, "offset": [1311, 10679], "op": "EQ", "path": "2"}, "105": {"fn": null, "offset": [1311, 10679], "op": "PUSH2", "path": "2", "value": "0x28B"}, "108": {"fn": null, "offset": [1311, 10679], "op": "JUMPI", "path": "2"}, "109": {"fn": null, "offset": [1311, 10679], "op": "PUSH2", "path": "2", "value": "0xA9"}, "112": {"fn": null, "offset": [1311, 10679], "op": "JUMP", "path": "2"}, "113": {"fn": null, "offset": [1311, 10679], "op": "JUMPDEST", "path": "2"}, "114": {"fn": null, "offset": [1311, 10679], "op": "DUP1", "path": "2"}, "115": {"fn": null, "offset": [1311, 10679], "op": "PUSH4", "path": "2", "value": "0x6FDDE03"}, "120": {"fn": null, "offset": [1311, 10679], "op": "EQ", "path": "2"}, "121": {"fn": null, "offset": [1311, 10679], "op": "PUSH2", "path": "2", "value": "0xAE"}, "124": {"fn": null, "offset": [1311, 10679], "op": "JUMPI", "path": "2"}, "125": {"fn": null, "offset": [1311, 10679], "op": "DUP1", "path": "2"}, "126": {"fn": null, "offset": [1311, 10679], "op": "PUSH4", "path": "2", "value": "0x95EA7B3"}, "131": {"fn": null, "offset": [1311, 10679], "op": "EQ", "path": "2"}, "132": {"fn": null, "offset": [1311, 10679], "op": "PUSH2", "path": "2", "value": "0x12B"}, "135": {"fn": null, "offset": [1311, 10679], "op": "JUMPI", "path": "2"}, "136": {"fn": null, "offset": [1311, 10679], "op": "DUP1", "path": "2"}, "137": {"fn": null, "offset": [1311, 10679], "op": "PUSH4", "path": "2", "value": "0x18160DDD"}, "142": {"fn": null, "offset": [1311, 10679], "op": "EQ", "path": "2"}, "143": {"fn": null, "offset": [1311, 10679], "op": "PUSH2", "path": "2", "value": "0x16B"}, "146": {"fn": null, "offset": [1311, 10679], "op": "JUMPI", "path": "2"}, "147": {"fn": null, "offset": [1311, 10679], "op": "DUP1", "path": "2"}, "148": {"fn": null, "offset": [1311, 10679], "op": "PUSH4", "path": "2", "value": "0x23B872DD"}, "153": {"fn": null, "offset": [1311, 10679], "op": "EQ", "path": "2"}, "154": {"fn": null, "offset": [1311, 10679], "op": "PUSH2", "path": "2", "value": "0x185"}, "157": {"fn": null, "offset": [1311, 10679], "op": "JUMPI", "path": "2"}, "158": {"fn": null, "offset": [1311, 10679], "op": "DUP1", "path": "2"}, "159": {"fn": null, "offset": [1311, 10679], "op": "PUSH4", "path": "2", "value": "0x313CE567"}, "164": {"fn": null, "offset": [1311, 10679], "op": "EQ", "path": "2"}, "165": {"fn": null, "offset": [1311, 10679], "op": "PUSH2", "path": "2", "value": "0x1BB"}, "168": {"fn": null, "offset": [1311, 10679], "op": "JUMPI", "path": "2"}, "169": {"fn": null, "offset": [1311, 10679], "op": "JUMPDEST", "path": "2"}, "170": {"fn": null, "offset": [1311, 10679], "op": "PUSH1", "path": "2", "value": "0x0"}, "172": {"fn": null, "offset": [1311, 10679], "op": "DUP1", "path": "2"}, "173": {"first_revert": true, "fn": null, "offset": [1311, 10679], "op": "REVERT", "path": "2"}, "174": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "JUMPDEST", "path": "2"}, "175": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "PUSH2", "path": "2", "value": "0xB6"}, "178": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "PUSH2", "path": "2", "value": "0x2B9"}, "181": {"fn": "ERC20.name", "jump": "i", "offset": [2138, 2219], "op": "JUMP", "path": "2"}, "182": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "JUMPDEST", "path": "2"}, "183": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "PUSH1", "path": "2", "value": "0x40"}, "185": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "DUP1", "path": "2"}, "186": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "MLOAD", "path": "2"}, "187": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "PUSH1", "path": "2", "value": "0x20"}, "189": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "DUP1", "path": "2"}, "190": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "DUP3", "path": "2"}, "191": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "MSTORE", "path": "2"}, "192": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "DUP4", "path": "2"}, "193": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "MLOAD", "path": "2"}, "194": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "DUP2", "path": "2"}, "195": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "DUP4", "path": "2"}, "196": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "ADD", "path": "2"}, "197": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "MSTORE", "path": "2"}, "198": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "DUP4", "path": "2"}, "199": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "MLOAD", "path": "2"}, "200": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "SWAP2", "path": "2"}, "201": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "SWAP3", "path": "2"}, "202": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "DUP4", "path": "2"}, "203": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "SWAP3", "path": "2"}, "204": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "SWAP1", "path": "2"}, "205": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "DUP4", "path": "2"}, "206": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "ADD", "path": "2"}, "207": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "SWAP2", "path": "2"}, "208": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "DUP6", "path": "2"}, "209": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "ADD", "path": "2"}, "210": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "SWAP1", "path": "2"}, "211": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "DUP1", "path": "2"}, "212": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "DUP4", "path": "2"}, "213": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "DUP4", "path": "2"}, "214": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "PUSH1", "path": "2", "value": "0x0"}, "216": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "JUMPDEST", "path": "2"}, "217": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "DUP4", "path": "2"}, "218": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "DUP2", "path": "2"}, "219": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "LT", "path": "2"}, "220": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "ISZERO", "path": "2"}, "221": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "PUSH2", "path": "2", "value": "0xF0"}, "224": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "JUMPI", "path": "2"}, "225": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "DUP2", "path": "2"}, "226": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "DUP2", "path": "2"}, "227": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "ADD", "path": "2"}, "228": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "MLOAD", "path": "2"}, "229": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "DUP4", "path": "2"}, "230": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "DUP3", "path": "2"}, "231": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "ADD", "path": "2"}, "232": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "MSTORE", "path": "2"}, "233": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "PUSH1", "path": "2", "value": "0x20"}, "235": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "ADD", "path": "2"}, "236": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "PUSH2", "path": "2", "value": "0xD8"}, "239": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "JUMP", "path": "2"}, "240": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "JUMPDEST", "path": "2"}, "241": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "POP", "path": "2"}, "242": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "POP", "path": "2"}, "243": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "POP", "path": "2"}, "244": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "POP", "path": "2"}, "245": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "SWAP1", "path": "2"}, "246": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "POP", "path": "2"}, "247": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "SWAP1", "path": "2"}, "248": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "DUP2", "path": "2"}, "249": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "ADD", "path": "2"}, "250": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "SWAP1", "path": "2"}, "251": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "PUSH1", "path": "2", "value": "0x1F"}, "253": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "AND", "path": "2"}, "254": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "DUP1", "path": "2"}, "255": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "ISZERO", "path": "2"}, "256": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "PUSH2", "path": "2", "value": "0x11D"}, "259": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "JUMPI", "path": "2"}, "260": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "DUP1", "path": "2"}, "261": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "DUP3", "path": "2"}, "262": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "SUB", "path": "2"}, "263": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "DUP1", "path": "2"}, "264": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "MLOAD", "path": "2"}, "265": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "PUSH1", "path": "2", "value": "0x1"}, "267": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "DUP4", "path": "2"}, "268": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "PUSH1", "path": "2", "value": "0x20"}, "270": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "SUB", "path": "2"}, "271": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "PUSH2", "path": "2", "value": "0x100"}, "274": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "EXP", "path": "2"}, "275": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "SUB", "path": "2"}, "276": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "NOT", "path": "2"}, "277": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "AND", "path": "2"}, "278": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "DUP2", "path": "2"}, "279": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "MSTORE", "path": "2"}, "280": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "PUSH1", "path": "2", "value": "0x20"}, "282": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "ADD", "path": "2"}, "283": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "SWAP2", "path": "2"}, "284": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "POP", "path": "2"}, "285": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "JUMPDEST", "path": "2"}, "286": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "POP", "path": "2"}, "287": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "SWAP3", "path": "2"}, "288": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "POP", "path": "2"}, "289": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "POP", "path": "2"}, "290": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "POP", "path": "2"}, "291": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "PUSH1", "path": "2", "value": "0x40"}, "293": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "MLOAD", "path": "2"}, "294": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "DUP1", "path": "2"}, "295": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "SWAP2", "path": "2"}, "296": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "SUB", "path": "2"}, "297": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "SWAP1", "path": "2"}, "298": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "RETURN", "path": "2"}, "299": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "JUMPDEST", "path": "2"}, "300": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "PUSH2", "path": "2", "value": "0x157"}, "303": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "PUSH1", "path": "2", "value": "0x4"}, "305": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "DUP1", "path": "2"}, "306": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "CALLDATASIZE", "path": "2"}, "307": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "SUB", "path": "2"}, "308": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "PUSH1", "path": "2", "value": "0x40"}, "310": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "DUP2", "path": "2"}, "311": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "LT", "path": "2"}, "312": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "ISZERO", "path": "2"}, "313": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "PUSH2", "path": "2", "value": "0x141"}, "316": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "JUMPI", "path": "2"}, "317": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "PUSH1", "path": "2", "value": "0x0"}, "319": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "DUP1", "path": "2"}, "320": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "REVERT", "path": "2"}, "321": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "JUMPDEST", "path": "2"}, "322": {"op": "POP"}, "323": {"op": "PUSH1", "value": "0x1"}, "325": {"op": "PUSH1", "value": "0x1"}, "327": {"op": "PUSH1", "value": "0xA0"}, "329": {"op": "SHL"}, "330": {"op": "SUB"}, "331": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "DUP2", "path": "2"}, "332": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "CALLDATALOAD", "path": "2"}, "333": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "AND", "path": "2"}, "334": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "SWAP1", "path": "2"}, "335": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "PUSH1", "path": "2", "value": "0x20"}, "337": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "ADD", "path": "2"}, "338": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "CALLDATALOAD", "path": "2"}, "339": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "PUSH2", "path": "2", "value": "0x34F"}, "342": {"fn": "ERC20.approve", "jump": "i", "offset": [4172, 4336], "op": "JUMP", "path": "2"}, "343": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "JUMPDEST", "path": "2"}, "344": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "PUSH1", "path": "2", "value": "0x40"}, "346": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "DUP1", "path": "2"}, "347": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "MLOAD", "path": "2"}, "348": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "SWAP2", "path": "2"}, "349": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "ISZERO", "path": "2"}, "350": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "ISZERO", "path": "2"}, "351": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "DUP3", "path": "2"}, "352": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "MSTORE", "path": "2"}, "353": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "MLOAD", "path": "2"}, "354": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "SWAP1", "path": "2"}, "355": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "DUP2", "path": "2"}, "356": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "SWAP1", "path": "2"}, "357": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "SUB", "path": "2"}, "358": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "PUSH1", "path": "2", "value": "0x20"}, "360": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "ADD", "path": "2"}, "361": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "SWAP1", "path": "2"}, "362": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "RETURN", "path": "2"}, "363": {"fn": "ERC20.totalSupply", "offset": [3181, 3279], "op": "JUMPDEST", "path": "2"}, "364": {"fn": "ERC20.totalSupply", "offset": [3181, 3279], "op": "PUSH2", "path": "2", "value": "0x173"}, "367": {"fn": "ERC20.totalSupply", "offset": [3181, 3279], "op": "PUSH2", "path": "2", "value": "0x365"}, "370": {"fn": "ERC20.totalSupply", "jump": "i", "offset": [3181, 3279], "op": "JUMP", "path": "2"}, "371": {"fn": "ERC20.totalSupply", "offset": [3181, 3279], "op": "JUMPDEST", "path": "2"}, "372": {"fn": "ERC20.totalSupply", "offset": [3181, 3279], "op": "PUSH1", "path": "2", "value": "0x40"}, "374": {"fn": "ERC20.totalSupply", "offset": [3181, 3279], "op": "DUP1", "path": "2"}, "375": {"fn": "ERC20.totalSupply", "offset": [3181, 3279], "op": "MLOAD", "path": "2"}, "376": {"fn": "ERC20.totalSupply", "offset": [3181, 3279], "op": "SWAP2", "path": "2"}, "377": {"fn": "ERC20.totalSupply", "offset": [3181, 3279], "op": "DUP3", "path": "2"}, "378": {"fn": "ERC20.totalSupply", "offset": [3181, 3279], "op": "MSTORE", "path": "2"}, "379": {"fn": "ERC20.totalSupply", "offset": [3181, 3279], "op": "MLOAD", "path": "2"}, "380": {"fn": "ERC20.totalSupply", "offset": [3181, 3279], "op": "SWAP1", "path": "2"}, "381": {"fn": "ERC20.totalSupply", "offset": [3181, 3279], "op": "DUP2", "path": "2"}, "382": {"fn": "ERC20.totalSupply", "offset": [3181, 3279], "op": "SWAP1", "path": "2"}, "383": {"fn": "ERC20.totalSupply", "offset": [3181, 3279], "op": "SUB", "path": "2"}, "384": {"fn": "ERC20.totalSupply", "offset": [3181, 3279], "op": "PUSH1", "path": "2", "value": "0x20"}, "386": {"fn": "ERC20.totalSupply", "offset": [3181, 3279], "op": "ADD", "path": "2"}, "387": {"fn": "ERC20.totalSupply", "offset": [3181, 3279], "op": "SWAP1", "path": "2"}, "388": {"fn": "ERC20.totalSupply", "offset": [3181, 3279], "op": "RETURN", "path": "2"}, "389": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "JUMPDEST", "path": "2"}, "390": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "PUSH2", "path": "2", "value": "0x157"}, "393": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "PUSH1", "path": "2", "value": "0x4"}, "395": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "DUP1", "path": "2"}, "396": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "CALLDATASIZE", "path": "2"}, "397": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "SUB", "path": "2"}, "398": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "PUSH1", "path": "2", "value": "0x60"}, "400": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "DUP2", "path": "2"}, "401": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "LT", "path": "2"}, "402": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "ISZERO", "path": "2"}, "403": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "PUSH2", "path": "2", "value": "0x19B"}, "406": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "JUMPI", "path": "2"}, "407": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "PUSH1", "path": "2", "value": "0x0"}, "409": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "DUP1", "path": "2"}, "410": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "REVERT", "path": "2"}, "411": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "JUMPDEST", "path": "2"}, "412": {"op": "POP"}, "413": {"op": "PUSH1", "value": "0x1"}, "415": {"op": "PUSH1", "value": "0x1"}, "417": {"op": "PUSH1", "value": "0xA0"}, "419": {"op": "SHL"}, "420": {"op": "SUB"}, "421": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "DUP2", "path": "2"}, "422": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "CALLDATALOAD", "path": "2"}, "423": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "DUP2", "path": "2"}, "424": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "AND", "path": "2"}, "425": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "SWAP2", "path": "2"}, "426": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "PUSH1", "path": "2", "value": "0x20"}, "428": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "DUP2", "path": "2"}, "429": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "ADD", "path": "2"}, "430": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "CALLDATALOAD", "path": "2"}, "431": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "SWAP1", "path": "2"}, "432": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "SWAP2", "path": "2"}, "433": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "AND", "path": "2"}, "434": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "SWAP1", "path": "2"}, "435": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "PUSH1", "path": "2", "value": "0x40"}, "437": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "ADD", "path": "2"}, "438": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "CALLDATALOAD", "path": "2"}, "439": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "PUSH2", "path": "2", "value": "0x36B"}, "442": {"fn": "ERC20.transferFrom", "jump": "i", "offset": [4803, 5189], "op": "JUMP", "path": "2"}, "443": {"fn": "ERC20.decimals", "offset": [3040, 3121], "op": "JUMPDEST", "path": "2"}, "444": {"fn": "ERC20.decimals", "offset": [3040, 3121], "op": "PUSH2", "path": "2", "value": "0x1C3"}, "447": {"fn": "ERC20.decimals", "offset": [3040, 3121], "op": "PUSH2", "path": "2", "value": "0x3BF"}, "450": {"fn": "ERC20.decimals", "jump": "i", "offset": [3040, 3121], "op": "JUMP", "path": "2"}, "451": {"fn": "ERC20.decimals", "offset": [3040, 3121], "op": "JUMPDEST", "path": "2"}, "452": {"fn": "ERC20.decimals", "offset": [3040, 3121], "op": "PUSH1", "path": "2", "value": "0x40"}, "454": {"fn": "ERC20.decimals", "offset": [3040, 3121], "op": "DUP1", "path": "2"}, "455": {"fn": "ERC20.decimals", "offset": [3040, 3121], "op": "MLOAD", "path": "2"}, "456": {"fn": "ERC20.decimals", "offset": [3040, 3121], "op": "PUSH1", "path": "2", "value": "0xFF"}, "458": {"fn": "ERC20.decimals", "offset": [3040, 3121], "op": "SWAP1", "path": "2"}, "459": {"fn": "ERC20.decimals", "offset": [3040, 3121], "op": "SWAP3", "path": "2"}, "460": {"fn": "ERC20.decimals", "offset": [3040, 3121], "op": "AND", "path": "2"}, "461": {"fn": "ERC20.decimals", "offset": [3040, 3121], "op": "DUP3", "path": "2"}, "462": {"fn": "ERC20.decimals", "offset": [3040, 3121], "op": "MSTORE", "path": "2"}, "463": {"fn": "ERC20.decimals", "offset": [3040, 3121], "op": "MLOAD", "path": "2"}, "464": {"fn": "ERC20.decimals", "offset": [3040, 3121], "op": "SWAP1", "path": "2"}, "465": {"fn": "ERC20.decimals", "offset": [3040, 3121], "op": "DUP2", "path": "2"}, "466": {"fn": "ERC20.decimals", "offset": [3040, 3121], "op": "SWAP1", "path": "2"}, "467": {"fn": "ERC20.decimals", "offset": [3040, 3121], "op": "SUB", "path": "2"}, "468": {"fn": "ERC20.decimals", "offset": [3040, 3121], "op": "PUSH1", "path": "2", "value": "0x20"}, "470": {"fn": "ERC20.decimals", "offset": [3040, 3121], "op": "ADD", "path": "2"}, "471": {"fn": "ERC20.decimals", "offset": [3040, 3121], "op": "SWAP1", "path": "2"}, "472": {"fn": "ERC20.decimals", "offset": [3040, 3121], "op": "RETURN", "path": "2"}, "473": {"fn": "ERC20.increaseAllowance", "offset": [5584, 5795], "op": "JUMPDEST", "path": "2"}, "474": {"fn": "ERC20.increaseAllowance", "offset": [5584, 5795], "op": "PUSH2", "path": "2", "value": "0x157"}, "477": {"fn": "ERC20.increaseAllowance", "offset": [5584, 5795], "op": "PUSH1", "path": "2", "value": "0x4"}, "479": {"fn": "ERC20.increaseAllowance", "offset": [5584, 5795], "op": "DUP1", "path": "2"}, "480": {"fn": "ERC20.increaseAllowance", "offset": [5584, 5795], "op": "CALLDATASIZE", "path": "2"}, "481": {"fn": "ERC20.increaseAllowance", "offset": [5584, 5795], "op": "SUB", "path": "2"}, "482": {"fn": "ERC20.increaseAllowance", "offset": [5584, 5795], "op": "PUSH1", "path": "2", "value": "0x40"}, "484": {"fn": "ERC20.increaseAllowance", "offset": [5584, 5795], "op": "DUP2", "path": "2"}, "485": {"fn": "ERC20.increaseAllowance", "offset": [5584, 5795], "op": "LT", "path": "2"}, "486": {"fn": "ERC20.increaseAllowance", "offset": [5584, 5795], "op": "ISZERO", "path": "2"}, "487": {"fn": "ERC20.increaseAllowance", "offset": [5584, 5795], "op": "PUSH2", "path": "2", "value": "0x1EF"}, "490": {"fn": "ERC20.increaseAllowance", "offset": [5584, 5795], "op": "JUMPI", "path": "2"}, "491": {"fn": "ERC20.increaseAllowance", "offset": [5584, 5795], "op": "PUSH1", "path": "2", "value": "0x0"}, "493": {"fn": "ERC20.increaseAllowance", "offset": [5584, 5795], "op": "DUP1", "path": "2"}, "494": {"fn": "ERC20.increaseAllowance", "offset": [5584, 5795], "op": "REVERT", "path": "2"}, "495": {"fn": "ERC20.increaseAllowance", "offset": [5584, 5795], "op": "JUMPDEST", "path": "2"}, "496": {"op": "POP"}, "497": {"op": "PUSH1", "value": "0x1"}, "499": {"op": "PUSH1", "value": "0x1"}, "501": {"op": "PUSH1", "value": "0xA0"}, "503": {"op": "SHL"}, "504": {"op": "SUB"}, "505": {"fn": "ERC20.increaseAllowance", "offset": [5584, 5795], "op": "DUP2", "path": "2"}, "506": {"fn": "ERC20.increaseAllowance", "offset": [5584, 5795], "op": "CALLDATALOAD", "path": "2"}, "507": {"fn": "ERC20.increaseAllowance", "offset": [5584, 5795], "op": "AND", "path": "2"}, "508": {"fn": "ERC20.increaseAllowance", "offset": [5584, 5795], "op": "SWAP1", "path": "2"}, "509": {"fn": "ERC20.increaseAllowance", "offset": [5584, 5795], "op": "PUSH1", "path": "2", "value": "0x20"}, "511": {"fn": "ERC20.increaseAllowance", "offset": [5584, 5795], "op": "ADD", "path": "2"}, "512": {"fn": "ERC20.increaseAllowance", "offset": [5584, 5795], "op": "CALLDATALOAD", "path": "2"}, "513": {"fn": "ERC20.increaseAllowance", "offset": [5584, 5795], "op": "PUSH2", "path": "2", "value": "0x3C8"}, "516": {"fn": "ERC20.increaseAllowance", "jump": "i", "offset": [5584, 5795], "op": "JUMP", "path": "2"}, "517": {"fn": "ERC20.balanceOf", "offset": [3337, 3454], "op": "JUMPDEST", "path": "2"}, "518": {"fn": "ERC20.balanceOf", "offset": [3337, 3454], "op": "PUSH2", "path": "2", "value": "0x173"}, "521": {"fn": "ERC20.balanceOf", "offset": [3337, 3454], "op": "PUSH1", "path": "2", "value": "0x4"}, "523": {"fn": "ERC20.balanceOf", "offset": [3337, 3454], "op": "DUP1", "path": "2"}, "524": {"fn": "ERC20.balanceOf", "offset": [3337, 3454], "op": "CALLDATASIZE", "path": "2"}, "525": {"fn": "ERC20.balanceOf", "offset": [3337, 3454], "op": "SUB", "path": "2"}, "526": {"fn": "ERC20.balanceOf", "offset": [3337, 3454], "op": "PUSH1", "path": "2", "value": "0x20"}, "528": {"fn": "ERC20.balanceOf", "offset": [3337, 3454], "op": "DUP2", "path": "2"}, "529": {"fn": "ERC20.balanceOf", "offset": [3337, 3454], "op": "LT", "path": "2"}, "530": {"fn": "ERC20.balanceOf", "offset": [3337, 3454], "op": "ISZERO", "path": "2"}, "531": {"fn": "ERC20.balanceOf", "offset": [3337, 3454], "op": "PUSH2", "path": "2", "value": "0x21B"}, "534": {"fn": "ERC20.balanceOf", "offset": [3337, 3454], "op": "JUMPI", "path": "2"}, "535": {"fn": "ERC20.balanceOf", "offset": [3337, 3454], "op": "PUSH1", "path": "2", "value": "0x0"}, "537": {"fn": "ERC20.balanceOf", "offset": [3337, 3454], "op": "DUP1", "path": "2"}, "538": {"fn": "ERC20.balanceOf", "offset": [3337, 3454], "op": "REVERT", "path": "2"}, "539": {"fn": "ERC20.balanceOf", "offset": [3337, 3454], "op": "JUMPDEST", "path": "2"}, "540": {"op": "POP"}, "541": {"fn": "ERC20.balanceOf", "offset": [3337, 3454], "op": "CALLDATALOAD", "path": "2"}, "542": {"op": "PUSH1", "value": "0x1"}, "544": {"op": "PUSH1", "value": "0x1"}, "546": {"op": "PUSH1", "value": "0xA0"}, "548": {"op": "SHL"}, "549": {"op": "SUB"}, "550": {"fn": "ERC20.balanceOf", "offset": [3337, 3454], "op": "AND", "path": "2"}, "551": {"fn": "ERC20.balanceOf", "offset": [3337, 3454], "op": "PUSH2", "path": "2", "value": "0x3FE"}, "554": {"fn": "ERC20.balanceOf", "jump": "i", "offset": [3337, 3454], "op": "JUMP", "path": "2"}, "555": {"fn": "ERC20.symbol", "offset": [2332, 2417], "op": "JUMPDEST", "path": "2"}, "556": {"fn": "ERC20.symbol", "offset": [2332, 2417], "op": "PUSH2", "path": "2", "value": "0xB6"}, "559": {"fn": "ERC20.symbol", "offset": [2332, 2417], "op": "PUSH2", "path": "2", "value": "0x419"}, "562": {"fn": "ERC20.symbol", "jump": "i", "offset": [2332, 2417], "op": "JUMP", "path": "2"}, "563": {"fn": "ERC20.decreaseAllowance", "offset": [6282, 6594], "op": "JUMPDEST", "path": "2"}, "564": {"fn": "ERC20.decreaseAllowance", "offset": [6282, 6594], "op": "PUSH2", "path": "2", "value": "0x157"}, "567": {"fn": "ERC20.decreaseAllowance", "offset": [6282, 6594], "op": "PUSH1", "path": "2", "value": "0x4"}, "569": {"fn": "ERC20.decreaseAllowance", "offset": [6282, 6594], "op": "DUP1", "path": "2"}, "570": {"fn": "ERC20.decreaseAllowance", "offset": [6282, 6594], "op": "CALLDATASIZE", "path": "2"}, "571": {"fn": "ERC20.decreaseAllowance", "offset": [6282, 6594], "op": "SUB", "path": "2"}, "572": {"fn": "ERC20.decreaseAllowance", "offset": [6282, 6594], "op": "PUSH1", "path": "2", "value": "0x40"}, "574": {"fn": "ERC20.decreaseAllowance", "offset": [6282, 6594], "op": "DUP2", "path": "2"}, "575": {"fn": "ERC20.decreaseAllowance", "offset": [6282, 6594], "op": "LT", "path": "2"}, "576": {"fn": "ERC20.decreaseAllowance", "offset": [6282, 6594], "op": "ISZERO", "path": "2"}, "577": {"fn": "ERC20.decreaseAllowance", "offset": [6282, 6594], "op": "PUSH2", "path": "2", "value": "0x249"}, "580": {"fn": "ERC20.decreaseAllowance", "offset": [6282, 6594], "op": "JUMPI", "path": "2"}, "581": {"fn": "ERC20.decreaseAllowance", "offset": [6282, 6594], "op": "PUSH1", "path": "2", "value": "0x0"}, "583": {"fn": "ERC20.decreaseAllowance", "offset": [6282, 6594], "op": "DUP1", "path": "2"}, "584": {"fn": "ERC20.decreaseAllowance", "offset": [6282, 6594], "op": "REVERT", "path": "2"}, "585": {"fn": "ERC20.decreaseAllowance", "offset": [6282, 6594], "op": "JUMPDEST", "path": "2"}, "586": {"op": "POP"}, "587": {"op": "PUSH1", "value": "0x1"}, "589": {"op": "PUSH1", "value": "0x1"}, "591": {"op": "PUSH1", "value": "0xA0"}, "593": {"op": "SHL"}, "594": {"op": "SUB"}, "595": {"fn": "ERC20.decreaseAllowance", "offset": [6282, 6594], "op": "DUP2", "path": "2"}, "596": {"fn": "ERC20.decreaseAllowance", "offset": [6282, 6594], "op": "CALLDATALOAD", "path": "2"}, "597": {"fn": "ERC20.decreaseAllowance", "offset": [6282, 6594], "op": "AND", "path": "2"}, "598": {"fn": "ERC20.decreaseAllowance", "offset": [6282, 6594], "op": "SWAP1", "path": "2"}, "599": {"fn": "ERC20.decreaseAllowance", "offset": [6282, 6594], "op": "PUSH1", "path": "2", "value": "0x20"}, "601": {"fn": "ERC20.decreaseAllowance", "offset": [6282, 6594], "op": "ADD", "path": "2"}, "602": {"fn": "ERC20.decreaseAllowance", "offset": [6282, 6594], "op": "CALLDATALOAD", "path": "2"}, "603": {"fn": "ERC20.decreaseAllowance", "offset": [6282, 6594], "op": "PUSH2", "path": "2", "value": "0x47A"}, "606": {"fn": "ERC20.decreaseAllowance", "jump": "i", "offset": [6282, 6594], "op": "JUMP", "path": "2"}, "607": {"fn": "ERC20.transfer", "offset": [3657, 3827], "op": "JUMPDEST", "path": "2"}, "608": {"fn": "ERC20.transfer", "offset": [3657, 3827], "op": "PUSH2", "path": "2", "value": "0x157"}, "611": {"fn": "ERC20.transfer", "offset": [3657, 3827], "op": "PUSH1", "path": "2", "value": "0x4"}, "613": {"fn": "ERC20.transfer", "offset": [3657, 3827], "op": "DUP1", "path": "2"}, "614": {"fn": "ERC20.transfer", "offset": [3657, 3827], "op": "CALLDATASIZE", "path": "2"}, "615": {"fn": "ERC20.transfer", "offset": [3657, 3827], "op": "SUB", "path": "2"}, "616": {"fn": "ERC20.transfer", "offset": [3657, 3827], "op": "PUSH1", "path": "2", "value": "0x40"}, "618": {"fn": "ERC20.transfer", "offset": [3657, 3827], "op": "DUP2", "path": "2"}, "619": {"fn": "ERC20.transfer", "offset": [3657, 3827], "op": "LT", "path": "2"}, "620": {"fn": "ERC20.transfer", "offset": [3657, 3827], "op": "ISZERO", "path": "2"}, "621": {"fn": "ERC20.transfer", "offset": [3657, 3827], "op": "PUSH2", "path": "2", "value": "0x275"}, "624": {"fn": "ERC20.transfer", "offset": [3657, 3827], "op": "JUMPI", "path": "2"}, "625": {"fn": "ERC20.transfer", "offset": [3657, 3827], "op": "PUSH1", "path": "2", "value": "0x0"}, "627": {"fn": "ERC20.transfer", "offset": [3657, 3827], "op": "DUP1", "path": "2"}, "628": {"fn": "ERC20.transfer", "offset": [3657, 3827], "op": "REVERT", "path": "2"}, "629": {"fn": "ERC20.transfer", "offset": [3657, 3827], "op": "JUMPDEST", "path": "2"}, "630": {"op": "POP"}, "631": {"op": "PUSH1", "value": "0x1"}, "633": {"op": "PUSH1", "value": "0x1"}, "635": {"op": "PUSH1", "value": "0xA0"}, "637": {"op": "SHL"}, "638": {"op": "SUB"}, "639": {"fn": "ERC20.transfer", "offset": [3657, 3827], "op": "DUP2", "path": "2"}, "640": {"fn": "ERC20.transfer", "offset": [3657, 3827], "op": "CALLDATALOAD", "path": "2"}, "641": {"fn": "ERC20.transfer", "offset": [3657, 3827], "op": "AND", "path": "2"}, "642": {"fn": "ERC20.transfer", "offset": [3657, 3827], "op": "SWAP1", "path": "2"}, "643": {"fn": "ERC20.transfer", "offset": [3657, 3827], "op": "PUSH1", "path": "2", "value": "0x20"}, "645": {"fn": "ERC20.transfer", "offset": [3657, 3827], "op": "ADD", "path": "2"}, "646": {"fn": "ERC20.transfer", "offset": [3657, 3827], "op": "CALLDATALOAD", "path": "2"}, "647": {"fn": "ERC20.transfer", "offset": [3657, 3827], "op": "PUSH2", "path": "2", "value": "0x4B3"}, "650": {"fn": "ERC20.transfer", "jump": "i", "offset": [3657, 3827], "op": "JUMP", "path": "2"}, "651": {"fn": "ERC20.allowance", "offset": [3885, 4034], "op": "JUMPDEST", "path": "2"}, "652": {"fn": "ERC20.allowance", "offset": [3885, 4034], "op": "PUSH2", "path": "2", "value": "0x173"}, "655": {"fn": "ERC20.allowance", "offset": [3885, 4034], "op": "PUSH1", "path": "2", "value": "0x4"}, "657": {"fn": "ERC20.allowance", "offset": [3885, 4034], "op": "DUP1", "path": "2"}, "658": {"fn": "ERC20.allowance", "offset": [3885, 4034], "op": "CALLDATASIZE", "path": "2"}, "659": {"fn": "ERC20.allowance", "offset": [3885, 4034], "op": "SUB", "path": "2"}, "660": {"fn": "ERC20.allowance", "offset": [3885, 4034], "op": "PUSH1", "path": "2", "value": "0x40"}, "662": {"fn": "ERC20.allowance", "offset": [3885, 4034], "op": "DUP2", "path": "2"}, "663": {"fn": "ERC20.allowance", "offset": [3885, 4034], "op": "LT", "path": "2"}, "664": {"fn": "ERC20.allowance", "offset": [3885, 4034], "op": "ISZERO", "path": "2"}, "665": {"fn": "ERC20.allowance", "offset": [3885, 4034], "op": "PUSH2", "path": "2", "value": "0x2A1"}, "668": {"fn": "ERC20.allowance", "offset": [3885, 4034], "op": "JUMPI", "path": "2"}, "669": {"fn": "ERC20.allowance", "offset": [3885, 4034], "op": "PUSH1", "path": "2", "value": "0x0"}, "671": {"fn": "ERC20.allowance", "offset": [3885, 4034], "op": "DUP1", "path": "2"}, "672": {"fn": "ERC20.allowance", "offset": [3885, 4034], "op": "REVERT", "path": "2"}, "673": {"fn": "ERC20.allowance", "offset": [3885, 4034], "op": "JUMPDEST", "path": "2"}, "674": {"op": "POP"}, "675": {"op": "PUSH1", "value": "0x1"}, "677": {"op": "PUSH1", "value": "0x1"}, "679": {"op": "PUSH1", "value": "0xA0"}, "681": {"op": "SHL"}, "682": {"op": "SUB"}, "683": {"fn": "ERC20.allowance", "offset": [3885, 4034], "op": "DUP2", "path": "2"}, "684": {"fn": "ERC20.allowance", "offset": [3885, 4034], "op": "CALLDATALOAD", "path": "2"}, "685": {"fn": "ERC20.allowance", "offset": [3885, 4034], "op": "DUP2", "path": "2"}, "686": {"fn": "ERC20.allowance", "offset": [3885, 4034], "op": "AND", "path": "2"}, "687": {"fn": "ERC20.allowance", "offset": [3885, 4034], "op": "SWAP2", "path": "2"}, "688": {"fn": "ERC20.allowance", "offset": [3885, 4034], "op": "PUSH1", "path": "2", "value": "0x20"}, "690": {"fn": "ERC20.allowance", "offset": [3885, 4034], "op": "ADD", "path": "2"}, "691": {"fn": "ERC20.allowance", "offset": [3885, 4034], "op": "CALLDATALOAD", "path": "2"}, "692": {"fn": "ERC20.allowance", "offset": [3885, 4034], "op": "AND", "path": "2"}, "693": {"fn": "ERC20.allowance", "offset": [3885, 4034], "op": "PUSH2", "path": "2", "value": "0x4C0"}, "696": {"fn": "ERC20.allowance", "jump": "i", "offset": [3885, 4034], "op": "JUMP", "path": "2"}, "697": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "JUMPDEST", "path": "2"}, "698": {"fn": "ERC20.name", "offset": [2207, 2212], "op": "PUSH1", "path": "2", "statement": 0, "value": "0x3"}, "700": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "DUP1", "path": "2"}, "701": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "SLOAD", "path": "2"}, "702": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "PUSH1", "path": "2", "value": "0x40"}, "704": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "DUP1", "path": "2"}, "705": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "MLOAD", "path": "2"}, "706": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "PUSH1", "path": "2", "value": "0x20"}, "708": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "PUSH1", "path": "2", "value": "0x1F"}, "710": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "PUSH1", "path": "2", "value": "0x2"}, "712": {"op": "PUSH1", "value": "0x0"}, "714": {"op": "NOT"}, "715": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "PUSH2", "path": "2", "value": "0x100"}, "718": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "PUSH1", "path": "2", "value": "0x1"}, "720": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "DUP9", "path": "2"}, "721": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "AND", "path": "2"}, "722": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "ISZERO", "path": "2"}, "723": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "MUL", "path": "2"}, "724": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "ADD", "path": "2"}, "725": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "SWAP1", "path": "2"}, "726": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "SWAP6", "path": "2"}, "727": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "AND", "path": "2"}, "728": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "SWAP5", "path": "2"}, "729": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "SWAP1", "path": "2"}, "730": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "SWAP5", "path": "2"}, "731": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "DIV", "path": "2"}, "732": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "SWAP4", "path": "2"}, "733": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "DUP5", "path": "2"}, "734": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "ADD", "path": "2"}, "735": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "DUP2", "path": "2"}, "736": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "SWAP1", "path": "2"}, "737": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "DIV", "path": "2"}, "738": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "DUP2", "path": "2"}, "739": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "MUL", "path": "2"}, "740": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "DUP3", "path": "2"}, "741": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "ADD", "path": "2"}, "742": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "DUP2", "path": "2"}, "743": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "ADD", "path": "2"}, "744": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "SWAP1", "path": "2"}, "745": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "SWAP3", "path": "2"}, "746": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "MSTORE", "path": "2"}, "747": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "DUP3", "path": "2"}, "748": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "DUP2", "path": "2"}, "749": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "MSTORE", "path": "2"}, "750": {"fn": "ERC20.name", "offset": [2175, 2188], "op": "PUSH1", "path": "2", "value": "0x60"}, "752": {"fn": "ERC20.name", "offset": [2175, 2188], "op": "SWAP4", "path": "2"}, "753": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "SWAP1", "path": "2"}, "754": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "SWAP3", "path": "2"}, "755": {"fn": "ERC20.name", "offset": [2207, 2212], "op": "SWAP1", "path": "2"}, "756": {"fn": "ERC20.name", "offset": [2207, 2212], "op": "SWAP2", "path": "2"}, "757": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "DUP4", "path": "2"}, "758": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "ADD", "path": "2"}, "759": {"fn": "ERC20.name", "offset": [2207, 2212], "op": "DUP3", "path": "2"}, "760": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "DUP3", "path": "2"}, "761": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "DUP1", "path": "2"}, "762": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "ISZERO", "path": "2"}, "763": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "PUSH2", "path": "2", "value": "0x345"}, "766": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "JUMPI", "path": "2"}, "767": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "DUP1", "path": "2"}, "768": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "PUSH1", "path": "2", "value": "0x1F"}, "770": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "LT", "path": "2"}, "771": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "PUSH2", "path": "2", "value": "0x31A"}, "774": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "JUMPI", "path": "2"}, "775": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "PUSH2", "path": "2", "value": "0x100"}, "778": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "DUP1", "path": "2"}, "779": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "DUP4", "path": "2"}, "780": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "SLOAD", "path": "2"}, "781": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "DIV", "path": "2"}, "782": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "MUL", "path": "2"}, "783": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "DUP4", "path": "2"}, "784": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "MSTORE", "path": "2"}, "785": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "SWAP2", "path": "2"}, "786": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "PUSH1", "path": "2", "value": "0x20"}, "788": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "ADD", "path": "2"}, "789": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "SWAP2", "path": "2"}, "790": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "PUSH2", "path": "2", "value": "0x345"}, "793": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "JUMP", "path": "2"}, "794": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "JUMPDEST", "path": "2"}, "795": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "DUP3", "path": "2"}, "796": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "ADD", "path": "2"}, "797": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "SWAP2", "path": "2"}, "798": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "SWAP1", "path": "2"}, "799": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "PUSH1", "path": "2", "value": "0x0"}, "801": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "MSTORE", "path": "2"}, "802": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "PUSH1", "path": "2", "value": "0x20"}, "804": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "PUSH1", "path": "2", "value": "0x0"}, "806": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "KECCAK256", "path": "2"}, "807": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "SWAP1", "path": "2"}, "808": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "JUMPDEST", "path": "2"}, "809": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "DUP2", "path": "2"}, "810": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "SLOAD", "path": "2"}, "811": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "DUP2", "path": "2"}, "812": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "MSTORE", "path": "2"}, "813": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "SWAP1", "path": "2"}, "814": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "PUSH1", "path": "2", "value": "0x1"}, "816": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "ADD", "path": "2"}, "817": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "SWAP1", "path": "2"}, "818": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "PUSH1", "path": "2", "value": "0x20"}, "820": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "ADD", "path": "2"}, "821": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "DUP1", "path": "2"}, "822": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "DUP4", "path": "2"}, "823": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "GT", "path": "2"}, "824": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "PUSH2", "path": "2", "value": "0x328"}, "827": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "JUMPI", "path": "2"}, "828": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "DUP3", "path": "2"}, "829": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "SWAP1", "path": "2"}, "830": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "SUB", "path": "2"}, "831": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "PUSH1", "path": "2", "value": "0x1F"}, "833": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "AND", "path": "2"}, "834": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "DUP3", "path": "2"}, "835": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "ADD", "path": "2"}, "836": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "SWAP2", "path": "2"}, "837": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "JUMPDEST", "path": "2"}, "838": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "POP", "path": "2"}, "839": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "POP", "path": "2"}, "840": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "POP", "path": "2"}, "841": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "POP", "path": "2"}, "842": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "POP", "path": "2"}, "843": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "SWAP1", "path": "2"}, "844": {"fn": "ERC20.name", "offset": [2200, 2212], "op": "POP", "path": "2"}, "845": {"fn": "ERC20.name", "offset": [2138, 2219], "op": "SWAP1", "path": "2"}, "846": {"fn": "ERC20.name", "jump": "o", "offset": [2138, 2219], "op": "JUMP", "path": "2"}, "847": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "JUMPDEST", "path": "2"}, "848": {"fn": "ERC20.approve", "offset": [4255, 4259], "op": "PUSH1", "path": "2", "value": "0x0"}, "850": {"fn": "ERC20.approve", "offset": [4271, 4308], "op": "PUSH2", "path": "2", "statement": 1, "value": "0x35C"}, "853": {"fn": "ERC20.approve", "offset": [4280, 4290], "op": "CALLER", "path": "2"}, "854": {"fn": "ERC20.approve", "offset": [4292, 4299], "op": "DUP5", "path": "2"}, "855": {"fn": "ERC20.approve", "offset": [4301, 4307], "op": "DUP5", "path": "2"}, "856": {"fn": "ERC20.approve", "offset": [4271, 4279], "op": "PUSH2", "path": "2", "value": "0x4EB"}, "859": {"fn": "ERC20.approve", "jump": "i", "offset": [4271, 4308], "op": "JUMP", "path": "2"}, "860": {"fn": "ERC20.approve", "offset": [4271, 4308], "op": "JUMPDEST", "path": "2"}, "861": {"op": "POP"}, "862": {"fn": "ERC20.approve", "offset": [4325, 4329], "op": "PUSH1", "path": "2", "statement": 2, "value": "0x1"}, "864": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "SWAP3", "path": "2"}, "865": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "SWAP2", "path": "2"}, "866": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "POP", "path": "2"}, "867": {"fn": "ERC20.approve", "offset": [4172, 4336], "op": "POP", "path": "2"}, "868": {"fn": "ERC20.approve", "jump": "o", "offset": [4172, 4336], "op": "JUMP", "path": "2"}, "869": {"fn": "ERC20.totalSupply", "offset": [3181, 3279], "op": "JUMPDEST", "path": "2"}, "870": {"fn": "ERC20.totalSupply", "offset": [3260, 3272], "op": "PUSH1", "path": "2", "statement": 3, "value": "0x2"}, "872": {"fn": "ERC20.totalSupply", "offset": [3260, 3272], "op": "SLOAD", "path": "2"}, "873": {"fn": "ERC20.totalSupply", "offset": [3181, 3279], "op": "SWAP1", "path": "2"}, "874": {"fn": "ERC20.totalSupply", "jump": "o", "offset": [3181, 3279], "op": "JUMP", "path": "2"}, "875": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "JUMPDEST", "path": "2"}, "876": {"fn": "ERC20.transferFrom", "offset": [4939, 4943], "op": "PUSH1", "path": "2", "value": "0x0"}, "878": {"fn": "ERC20.transferFrom", "offset": [4955, 4991], "op": "PUSH2", "path": "2", "statement": 4, "value": "0x378"}, "881": {"fn": "ERC20.transferFrom", "offset": [4965, 4971], "op": "DUP5", "path": "2"}, "882": {"fn": "ERC20.transferFrom", "offset": [4973, 4982], "op": "DUP5", "path": "2"}, "883": {"fn": "ERC20.transferFrom", "offset": [4984, 4990], "op": "DUP5", "path": "2"}, "884": {"fn": "ERC20.transferFrom", "offset": [4955, 4964], "op": "PUSH2", "path": "2", "value": "0x54D"}, "887": {"fn": "ERC20.transferFrom", "jump": "i", "offset": [4955, 4991], "op": "JUMP", "path": "2"}, "888": {"fn": "ERC20.transferFrom", "offset": [4955, 4991], "op": "JUMPDEST", "path": "2"}, "889": {"op": "PUSH1", "value": "0x1"}, "891": {"op": "PUSH1", "value": "0x1"}, "893": {"op": "PUSH1", "value": "0xA0"}, "895": {"op": "SHL"}, "896": {"op": "SUB"}, "897": {"fn": "ERC20.transferFrom", "offset": [5067, 5086], "op": "DUP5", "path": "2", "statement": 5}, "898": {"fn": "ERC20.transferFrom", "offset": [5067, 5086], "op": "AND", "path": "2"}, "899": {"fn": "ERC20.transferFrom", "offset": [5067, 5086], "op": "PUSH1", "path": "2", "value": "0x0"}, "901": {"fn": "ERC20.transferFrom", "offset": [5067, 5086], "op": "SWAP1", "path": "2"}, "902": {"fn": "ERC20.transferFrom", "offset": [5067, 5086], "op": "DUP2", "path": "2"}, "903": {"fn": "ERC20.transferFrom", "offset": [5067, 5086], "op": "MSTORE", "path": "2"}, "904": {"fn": "ERC20.transferFrom", "offset": [5067, 5078], "op": "PUSH1", "path": "2", "value": "0x1"}, "906": {"fn": "ERC20.transferFrom", "offset": [5067, 5086], "op": "PUSH1", "path": "2", "value": "0x20"}, "908": {"fn": "ERC20.transferFrom", "offset": [5067, 5086], "op": "SWAP1", "path": "2"}, "909": {"fn": "ERC20.transferFrom", "offset": [5067, 5086], "op": "DUP2", "path": "2"}, "910": {"fn": "ERC20.transferFrom", "offset": [5067, 5086], "op": "MSTORE", "path": "2"}, "911": {"fn": "ERC20.transferFrom", "offset": [5067, 5086], "op": "PUSH1", "path": "2", "value": "0x40"}, "913": {"fn": "ERC20.transferFrom", "offset": [5067, 5086], "op": "DUP1", "path": "2"}, "914": {"fn": "ERC20.transferFrom", "offset": [5067, 5086], "op": "DUP4", "path": "2"}, "915": {"fn": "ERC20.transferFrom", "offset": [5067, 5086], "op": "KECCAK256", "path": "2"}, "916": {"fn": "ERC20.transferFrom", "offset": [5043, 5053], "op": "CALLER", "path": "2"}, "917": {"fn": "ERC20.transferFrom", "offset": [5067, 5098], "op": "DUP1", "path": "2"}, "918": {"fn": "ERC20.transferFrom", "offset": [5067, 5098], "op": "DUP6", "path": "2"}, "919": {"fn": "ERC20.transferFrom", "offset": [5067, 5098], "op": "MSTORE", "path": "2"}, "920": {"fn": "ERC20.transferFrom", "offset": [5067, 5098], "op": "SWAP3", "path": "2"}, "921": {"fn": "ERC20.transferFrom", "offset": [5067, 5098], "op": "MSTORE", "path": "2"}, "922": {"fn": "ERC20.transferFrom", "offset": [5067, 5098], "op": "SWAP1", "path": "2"}, "923": {"fn": "ERC20.transferFrom", "offset": [5067, 5098], "op": "SWAP2", "path": "2"}, "924": {"fn": "ERC20.transferFrom", "offset": [5067, 5098], "op": "KECCAK256", "path": "2"}, "925": {"fn": "ERC20.transferFrom", "offset": [5067, 5098], "op": "SLOAD", "path": "2"}, "926": {"fn": "ERC20.transferFrom", "offset": [5001, 5161], "op": "PUSH2", "path": "2", "value": "0x3B5"}, "929": {"fn": "ERC20.transferFrom", "offset": [5001, 5161], "op": "SWAP2", "path": "2"}, "930": {"fn": "ERC20.transferFrom", "offset": [5023, 5029], "op": "DUP7", "path": "2"}, "931": {"fn": "ERC20.transferFrom", "offset": [5023, 5029], "op": "SWAP2", "path": "2"}, "932": {"fn": "ERC20.transferFrom", "offset": [5067, 5151], "op": "PUSH2", "path": "2", "value": "0x3B0"}, "935": {"fn": "ERC20.transferFrom", "offset": [5067, 5151], "op": "SWAP1", "path": "2"}, "936": {"fn": "ERC20.transferFrom", "offset": [5103, 5109], "op": "DUP7", "path": "2"}, "937": {"offset": [9174, 9177], "op": "PUSH2", "path": "1", "value": "0x19E"}, "940": {"fn": "ERC20.transferFrom", "offset": [5067, 5102], "op": "PUSH2", "path": "2", "value": "0x635"}, "943": {"fn": "ERC20.transferFrom", "jump": "i", "offset": [5067, 5151], "op": "JUMP", "path": "2"}, "944": {"fn": "ERC20.transferFrom", "offset": [5067, 5151], "op": "JUMPDEST", "path": "2"}, "945": {"fn": "ERC20.transferFrom", "offset": [5001, 5009], "op": "PUSH2", "path": "2", "value": "0x4EB"}, "948": {"fn": "ERC20.transferFrom", "jump": "i", "offset": [5001, 5161], "op": "JUMP", "path": "2"}, "949": {"fn": "ERC20.transferFrom", "offset": [5001, 5161], "op": "JUMPDEST", "path": "2"}, "950": {"op": "POP"}, "951": {"fn": "ERC20.transferFrom", "offset": [5178, 5182], "op": "PUSH1", "path": "2", "statement": 6, "value": "0x1"}, "953": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "SWAP4", "path": "2"}, "954": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "SWAP3", "path": "2"}, "955": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "POP", "path": "2"}, "956": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "POP", "path": "2"}, "957": {"fn": "ERC20.transferFrom", "offset": [4803, 5189], "op": "POP", "path": "2"}, "958": {"fn": "ERC20.transferFrom", "jump": "o", "offset": [4803, 5189], "op": "JUMP", "path": "2"}, "959": {"fn": "ERC20.decimals", "offset": [3040, 3121], "op": "JUMPDEST", "path": "2"}, "960": {"fn": "ERC20.decimals", "offset": [3105, 3114], "op": "PUSH1", "path": "2", "statement": 7, "value": "0x5"}, "962": {"fn": "ERC20.decimals", "offset": [3105, 3114], "op": "SLOAD", "path": "2"}, "963": {"fn": "ERC20.decimals", "offset": [3105, 3114], "op": "PUSH1", "path": "2", "value": "0xFF"}, "965": {"fn": "ERC20.decimals", "offset": [3105, 3114], "op": "AND", "path": "2"}, "966": {"fn": "ERC20.decimals", "offset": [3040, 3121], "op": "SWAP1", "path": "2"}, "967": {"fn": "ERC20.decimals", "jump": "o", "offset": [3040, 3121], "op": "JUMP", "path": "2"}, "968": {"fn": "ERC20.increaseAllowance", "offset": [5584, 5795], "op": "JUMPDEST", "path": "2"}, "969": {"fn": "ERC20.increaseAllowance", "offset": [5697, 5707], "op": "CALLER", "path": "2", "statement": 8}, "970": {"fn": "ERC20.increaseAllowance", "offset": [5672, 5676], "op": "PUSH1", "path": "2", "value": "0x0"}, "972": {"fn": "ERC20.increaseAllowance", "offset": [5718, 5741], "op": "DUP2", "path": "2"}, "973": {"fn": "ERC20.increaseAllowance", "offset": [5718, 5741], "op": "DUP2", "path": "2"}, "974": {"fn": "ERC20.increaseAllowance", "offset": [5718, 5741], "op": "MSTORE", "path": "2"}, "975": {"fn": "ERC20.increaseAllowance", "offset": [5718, 5729], "op": "PUSH1", "path": "2", "value": "0x1"}, "977": {"fn": "ERC20.increaseAllowance", "offset": [5718, 5741], "op": "PUSH1", "path": "2", "value": "0x20"}, "979": {"fn": "ERC20.increaseAllowance", "offset": [5718, 5741], "op": "SWAP1", "path": "2"}, "980": {"fn": "ERC20.increaseAllowance", "offset": [5718, 5741], "op": "DUP2", "path": "2"}, "981": {"fn": "ERC20.increaseAllowance", "offset": [5718, 5741], "op": "MSTORE", "path": "2"}, "982": {"fn": "ERC20.increaseAllowance", "offset": [5718, 5741], "op": "PUSH1", "path": "2", "value": "0x40"}, "984": {"fn": "ERC20.increaseAllowance", "offset": [5718, 5741], "op": "DUP1", "path": "2"}, "985": {"fn": "ERC20.increaseAllowance", "offset": [5718, 5741], "op": "DUP4", "path": "2"}, "986": {"fn": "ERC20.increaseAllowance", "offset": [5718, 5741], "op": "KECCAK256", "path": "2"}, "987": {"op": "PUSH1", "value": "0x1"}, "989": {"op": "PUSH1", "value": "0x1"}, "991": {"op": "PUSH1", "value": "0xA0"}, "993": {"op": "SHL"}, "994": {"op": "SUB"}, "995": {"fn": "ERC20.increaseAllowance", "offset": [5718, 5750], "op": "DUP8", "path": "2"}, "996": {"fn": "ERC20.increaseAllowance", "offset": [5718, 5750], "op": "AND", "path": "2"}, "997": {"fn": "ERC20.increaseAllowance", "offset": [5718, 5750], "op": "DUP5", "path": "2"}, "998": {"fn": "ERC20.increaseAllowance", "offset": [5718, 5750], "op": "MSTORE", "path": "2"}, "999": {"fn": "ERC20.increaseAllowance", "offset": [5718, 5750], "op": "SWAP1", "path": "2"}, "1000": {"fn": "ERC20.increaseAllowance", "offset": [5718, 5750], "op": "SWAP2", "path": "2"}, "1001": {"fn": "ERC20.increaseAllowance", "offset": [5718, 5750], "op": "MSTORE", "path": "2"}, "1002": {"fn": "ERC20.increaseAllowance", "offset": [5718, 5750], "op": "DUP2", "path": "2"}, "1003": {"fn": "ERC20.increaseAllowance", "offset": [5718, 5750], "op": "KECCAK256", "path": "2"}, "1004": {"fn": "ERC20.increaseAllowance", "offset": [5718, 5750], "op": "SLOAD", "path": "2"}, "1005": {"fn": "ERC20.increaseAllowance", "offset": [5672, 5676], "op": "SWAP1", "path": "2"}, "1006": {"fn": "ERC20.increaseAllowance", "offset": [5672, 5676], "op": "SWAP2", "path": "2"}, "1007": {"fn": "ERC20.increaseAllowance", "offset": [5688, 5767], "op": "PUSH2", "path": "2", "value": "0x35C"}, "1010": {"fn": "ERC20.increaseAllowance", "offset": [5688, 5767], "op": "SWAP2", "path": "2"}, "1011": {"fn": "ERC20.increaseAllowance", "offset": [5709, 5716], "op": "DUP6", "path": "2"}, "1012": {"fn": "ERC20.increaseAllowance", "offset": [5709, 5716], "op": "SWAP1", "path": "2"}, "1013": {"fn": "ERC20.increaseAllowance", "offset": [5718, 5766], "op": "PUSH2", "path": "2", "value": "0x3B0"}, "1016": {"fn": "ERC20.increaseAllowance", "offset": [5718, 5766], "op": "SWAP1", "path": "2"}, "1017": {"fn": "ERC20.increaseAllowance", "offset": [5755, 5765], "op": "DUP7", "path": "2"}, "1018": {"fn": "ERC20.increaseAllowance", "offset": [5718, 5754], "op": "PUSH2", "path": "2", "value": "0x64B"}, "1021": {"fn": "ERC20.increaseAllowance", "jump": "i", "offset": [5718, 5766], "op": "JUMP", "path": "2"}, "1022": {"fn": "ERC20.balanceOf", "offset": [3337, 3454], "op": "JUMPDEST", "path": "2"}, "1023": {"op": "PUSH1", "value": "0x1"}, "1025": {"op": "PUSH1", "value": "0x1"}, "1027": {"op": "PUSH1", "value": "0xA0"}, "1029": {"op": "SHL"}, "1030": {"op": "SUB"}, "1031": {"fn": "ERC20.balanceOf", "offset": [3429, 3447], "op": "AND", "path": "2", "statement": 9}, "1032": {"fn": "ERC20.balanceOf", "offset": [3403, 3410], "op": "PUSH1", "path": "2", "value": "0x0"}, "1034": {"fn": "ERC20.balanceOf", "offset": [3429, 3447], "op": "SWAP1", "path": "2"}, "1035": {"fn": "ERC20.balanceOf", "offset": [3429, 3447], "op": "DUP2", "path": "2"}, "1036": {"fn": "ERC20.balanceOf", "offset": [3429, 3447], "op": "MSTORE", "path": "2"}, "1037": {"fn": "ERC20.balanceOf", "offset": [3429, 3447], "op": "PUSH1", "path": "2", "value": "0x20"}, "1039": {"fn": "ERC20.balanceOf", "offset": [3429, 3447], "op": "DUP2", "path": "2"}, "1040": {"fn": "ERC20.balanceOf", "offset": [3429, 3447], "op": "SWAP1", "path": "2"}, "1041": {"fn": "ERC20.balanceOf", "offset": [3429, 3447], "op": "MSTORE", "path": "2"}, "1042": {"fn": "ERC20.balanceOf", "offset": [3429, 3447], "op": "PUSH1", "path": "2", "value": "0x40"}, "1044": {"fn": "ERC20.balanceOf", "offset": [3429, 3447], "op": "SWAP1", "path": "2"}, "1045": {"fn": "ERC20.balanceOf", "offset": [3429, 3447], "op": "KECCAK256", "path": "2"}, "1046": {"fn": "ERC20.balanceOf", "offset": [3429, 3447], "op": "SLOAD", "path": "2"}, "1047": {"fn": "ERC20.balanceOf", "offset": [3429, 3447], "op": "SWAP1", "path": "2"}, "1048": {"fn": "ERC20.balanceOf", "jump": "o", "offset": [3337, 3454], "op": "JUMP", "path": "2"}, "1049": {"fn": "ERC20.symbol", "offset": [2332, 2417], "op": "JUMPDEST", "path": "2"}, "1050": {"fn": "ERC20.symbol", "offset": [2403, 2410], "op": "PUSH1", "path": "2", "statement": 10, "value": "0x4"}, "1052": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "DUP1", "path": "2"}, "1053": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "SLOAD", "path": "2"}, "1054": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "PUSH1", "path": "2", "value": "0x40"}, "1056": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "DUP1", "path": "2"}, "1057": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "MLOAD", "path": "2"}, "1058": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "PUSH1", "path": "2", "value": "0x20"}, "1060": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "PUSH1", "path": "2", "value": "0x1F"}, "1062": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "PUSH1", "path": "2", "value": "0x2"}, "1064": {"op": "PUSH1", "value": "0x0"}, "1066": {"op": "NOT"}, "1067": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "PUSH2", "path": "2", "value": "0x100"}, "1070": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "PUSH1", "path": "2", "value": "0x1"}, "1072": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "DUP9", "path": "2"}, "1073": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "AND", "path": "2"}, "1074": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "ISZERO", "path": "2"}, "1075": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "MUL", "path": "2"}, "1076": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "ADD", "path": "2"}, "1077": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "SWAP1", "path": "2"}, "1078": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "SWAP6", "path": "2"}, "1079": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "AND", "path": "2"}, "1080": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "SWAP5", "path": "2"}, "1081": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "SWAP1", "path": "2"}, "1082": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "SWAP5", "path": "2"}, "1083": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "DIV", "path": "2"}, "1084": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "SWAP4", "path": "2"}, "1085": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "DUP5", "path": "2"}, "1086": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "ADD", "path": "2"}, "1087": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "DUP2", "path": "2"}, "1088": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "SWAP1", "path": "2"}, "1089": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "DIV", "path": "2"}, "1090": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "DUP2", "path": "2"}, "1091": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "MUL", "path": "2"}, "1092": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "DUP3", "path": "2"}, "1093": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "ADD", "path": "2"}, "1094": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "DUP2", "path": "2"}, "1095": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "ADD", "path": "2"}, "1096": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "SWAP1", "path": "2"}, "1097": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "SWAP3", "path": "2"}, "1098": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "MSTORE", "path": "2"}, "1099": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "DUP3", "path": "2"}, "1100": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "DUP2", "path": "2"}, "1101": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "MSTORE", "path": "2"}, "1102": {"fn": "ERC20.symbol", "offset": [2371, 2384], "op": "PUSH1", "path": "2", "value": "0x60"}, "1104": {"fn": "ERC20.symbol", "offset": [2371, 2384], "op": "SWAP4", "path": "2"}, "1105": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "SWAP1", "path": "2"}, "1106": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "SWAP3", "path": "2"}, "1107": {"fn": "ERC20.symbol", "offset": [2403, 2410], "op": "SWAP1", "path": "2"}, "1108": {"fn": "ERC20.symbol", "offset": [2403, 2410], "op": "SWAP2", "path": "2"}, "1109": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "DUP4", "path": "2"}, "1110": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "ADD", "path": "2"}, "1111": {"fn": "ERC20.symbol", "offset": [2403, 2410], "op": "DUP3", "path": "2"}, "1112": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "DUP3", "path": "2"}, "1113": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "DUP1", "path": "2"}, "1114": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "ISZERO", "path": "2"}, "1115": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "PUSH2", "path": "2", "value": "0x345"}, "1118": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "JUMPI", "path": "2"}, "1119": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "DUP1", "path": "2"}, "1120": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "PUSH1", "path": "2", "value": "0x1F"}, "1122": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "LT", "path": "2"}, "1123": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "PUSH2", "path": "2", "value": "0x31A"}, "1126": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "JUMPI", "path": "2"}, "1127": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "PUSH2", "path": "2", "value": "0x100"}, "1130": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "DUP1", "path": "2"}, "1131": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "DUP4", "path": "2"}, "1132": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "SLOAD", "path": "2"}, "1133": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "DIV", "path": "2"}, "1134": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "MUL", "path": "2"}, "1135": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "DUP4", "path": "2"}, "1136": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "MSTORE", "path": "2"}, "1137": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "SWAP2", "path": "2"}, "1138": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "PUSH1", "path": "2", "value": "0x20"}, "1140": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "ADD", "path": "2"}, "1141": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "SWAP2", "path": "2"}, "1142": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "PUSH2", "path": "2", "value": "0x345"}, "1145": {"fn": "ERC20.symbol", "offset": [2396, 2410], "op": "JUMP", "path": "2"}, "1146": {"fn": "ERC20.decreaseAllowance", "offset": [6282, 6594], "op": "JUMPDEST", "path": "2"}, "1147": {"fn": "ERC20.decreaseAllowance", "offset": [6413, 6423], "op": "CALLER", "path": "2", "statement": 11}, "1148": {"fn": "ERC20.decreaseAllowance", "offset": [6375, 6379], "op": "PUSH1", "path": "2", "value": "0x0"}, "1150": {"fn": "ERC20.decreaseAllowance", "offset": [6458, 6481], "op": "DUP2", "path": "2"}, "1151": {"fn": "ERC20.decreaseAllowance", "offset": [6458, 6481], "op": "DUP2", "path": "2"}, "1152": {"fn": "ERC20.decreaseAllowance", "offset": [6458, 6481], "op": "MSTORE", "path": "2"}, "1153": {"fn": "ERC20.decreaseAllowance", "offset": [6458, 6469], "op": "PUSH1", "path": "2", "value": "0x1"}, "1155": {"fn": "ERC20.decreaseAllowance", "offset": [6458, 6481], "op": "PUSH1", "path": "2", "value": "0x20"}, "1157": {"fn": "ERC20.decreaseAllowance", "offset": [6458, 6481], "op": "SWAP1", "path": "2"}, "1158": {"fn": "ERC20.decreaseAllowance", "offset": [6458, 6481], "op": "DUP2", "path": "2"}, "1159": {"fn": "ERC20.decreaseAllowance", "offset": [6458, 6481], "op": "MSTORE", "path": "2"}, "1160": {"fn": "ERC20.decreaseAllowance", "offset": [6458, 6481], "op": "PUSH1", "path": "2", "value": "0x40"}, "1162": {"fn": "ERC20.decreaseAllowance", "offset": [6458, 6481], "op": "DUP1", "path": "2"}, "1163": {"fn": "ERC20.decreaseAllowance", "offset": [6458, 6481], "op": "DUP4", "path": "2"}, "1164": {"fn": "ERC20.decreaseAllowance", "offset": [6458, 6481], "op": "KECCAK256", "path": "2"}, "1165": {"op": "PUSH1", "value": "0x1"}, "1167": {"op": "PUSH1", "value": "0x1"}, "1169": {"op": "PUSH1", "value": "0xA0"}, "1171": {"op": "SHL"}, "1172": {"op": "SUB"}, "1173": {"fn": "ERC20.decreaseAllowance", "offset": [6458, 6490], "op": "DUP8", "path": "2"}, "1174": {"fn": "ERC20.decreaseAllowance", "offset": [6458, 6490], "op": "AND", "path": "2"}, "1175": {"fn": "ERC20.decreaseAllowance", "offset": [6458, 6490], "op": "DUP5", "path": "2"}, "1176": {"fn": "ERC20.decreaseAllowance", "offset": [6458, 6490], "op": "MSTORE", "path": "2"}, "1177": {"fn": "ERC20.decreaseAllowance", "offset": [6458, 6490], "op": "SWAP1", "path": "2"}, "1178": {"fn": "ERC20.decreaseAllowance", "offset": [6458, 6490], "op": "SWAP2", "path": "2"}, "1179": {"fn": "ERC20.decreaseAllowance", "offset": [6458, 6490], "op": "MSTORE", "path": "2"}, "1180": {"fn": "ERC20.decreaseAllowance", "offset": [6458, 6490], "op": "DUP2", "path": "2"}, "1181": {"fn": "ERC20.decreaseAllowance", "offset": [6458, 6490], "op": "KECCAK256", "path": "2"}, "1182": {"fn": "ERC20.decreaseAllowance", "offset": [6458, 6490], "op": "SLOAD", "path": "2"}, "1183": {"fn": "ERC20.decreaseAllowance", "offset": [6375, 6379], "op": "SWAP1", "path": "2"}, "1184": {"fn": "ERC20.decreaseAllowance", "offset": [6375, 6379], "op": "SWAP2", "path": "2"}, "1185": {"fn": "ERC20.decreaseAllowance", "offset": [6391, 6566], "op": "PUSH2", "path": "2", "value": "0x35C"}, "1188": {"fn": "ERC20.decreaseAllowance", "offset": [6391, 6566], "op": "SWAP2", "path": "2"}, "1189": {"fn": "ERC20.decreaseAllowance", "offset": [6437, 6444], "op": "DUP6", "path": "2"}, "1190": {"fn": "ERC20.decreaseAllowance", "offset": [6437, 6444], "op": "SWAP1", "path": "2"}, "1191": {"fn": "ERC20.decreaseAllowance", "offset": [6458, 6556], "op": "PUSH2", "path": "2", "value": "0x3B0"}, "1194": {"fn": "ERC20.decreaseAllowance", "offset": [6458, 6556], "op": "SWAP1", "path": "2"}, "1195": {"fn": "ERC20.decreaseAllowance", "offset": [6495, 6510], "op": "DUP7", "path": "2"}, "1196": {"offset": [9248, 9251], "op": "PUSH2", "path": "1", "value": "0x19F"}, "1199": {"fn": "ERC20.decreaseAllowance", "offset": [6458, 6494], "op": "PUSH2", "path": "2", "value": "0x635"}, "1202": {"fn": "ERC20.decreaseAllowance", "jump": "i", "offset": [6458, 6556], "op": "JUMP", "path": "2"}, "1203": {"fn": "ERC20.transfer", "offset": [3657, 3827], "op": "JUMPDEST", "path": "2"}, "1204": {"fn": "ERC20.transfer", "offset": [3743, 3747], "op": "PUSH1", "path": "2", "value": "0x0"}, "1206": {"fn": "ERC20.transfer", "offset": [3759, 3799], "op": "PUSH2", "path": "2", "statement": 12, "value": "0x35C"}, "1209": {"fn": "ERC20.transfer", "offset": [3769, 3779], "op": "CALLER", "path": "2"}, "1210": {"fn": "ERC20.transfer", "offset": [3781, 3790], "op": "DUP5", "path": "2"}, "1211": {"fn": "ERC20.transfer", "offset": [3792, 3798], "op": "DUP5", "path": "2"}, "1212": {"fn": "ERC20.transfer", "offset": [3759, 3768], "op": "PUSH2", "path": "2", "value": "0x54D"}, "1215": {"fn": "ERC20.transfer", "jump": "i", "offset": [3759, 3799], "op": "JUMP", "path": "2"}, "1216": {"fn": "ERC20.allowance", "offset": [3885, 4034], "op": "JUMPDEST", "path": "2"}, "1217": {"op": "PUSH1", "value": "0x1"}, "1219": {"op": "PUSH1", "value": "0x1"}, "1221": {"op": "PUSH1", "value": "0xA0"}, "1223": {"op": "SHL"}, "1224": {"op": "SUB"}, "1225": {"fn": "ERC20.allowance", "offset": [4000, 4018], "op": "SWAP2", "path": "2", "statement": 13}, "1226": {"fn": "ERC20.allowance", "offset": [4000, 4018], "op": "DUP3", "path": "2"}, "1227": {"fn": "ERC20.allowance", "offset": [4000, 4018], "op": "AND", "path": "2"}, "1228": {"fn": "ERC20.allowance", "offset": [3974, 3981], "op": "PUSH1", "path": "2", "value": "0x0"}, "1230": {"fn": "ERC20.allowance", "offset": [4000, 4018], "op": "SWAP1", "path": "2"}, "1231": {"fn": "ERC20.allowance", "offset": [4000, 4018], "op": "DUP2", "path": "2"}, "1232": {"fn": "ERC20.allowance", "offset": [4000, 4018], "op": "MSTORE", "path": "2"}, "1233": {"fn": "ERC20.allowance", "offset": [4000, 4011], "op": "PUSH1", "path": "2", "value": "0x1"}, "1235": {"fn": "ERC20.allowance", "offset": [4000, 4018], "op": "PUSH1", "path": "2", "value": "0x20"}, "1237": {"fn": "ERC20.allowance", "offset": [4000, 4018], "op": "SWAP1", "path": "2"}, "1238": {"fn": "ERC20.allowance", "offset": [4000, 4018], "op": "DUP2", "path": "2"}, "1239": {"fn": "ERC20.allowance", "offset": [4000, 4018], "op": "MSTORE", "path": "2"}, "1240": {"fn": "ERC20.allowance", "offset": [4000, 4018], "op": "PUSH1", "path": "2", "value": "0x40"}, "1242": {"fn": "ERC20.allowance", "offset": [4000, 4018], "op": "DUP1", "path": "2"}, "1243": {"fn": "ERC20.allowance", "offset": [4000, 4018], "op": "DUP4", "path": "2"}, "1244": {"fn": "ERC20.allowance", "offset": [4000, 4018], "op": "KECCAK256", "path": "2"}, "1245": {"fn": "ERC20.allowance", "offset": [4000, 4027], "op": "SWAP4", "path": "2"}, "1246": {"fn": "ERC20.allowance", "offset": [4000, 4027], "op": "SWAP1", "path": "2"}, "1247": {"fn": "ERC20.allowance", "offset": [4000, 4027], "op": "SWAP5", "path": "2"}, "1248": {"fn": "ERC20.allowance", "offset": [4000, 4027], "op": "AND", "path": "2"}, "1249": {"fn": "ERC20.allowance", "offset": [4000, 4027], "op": "DUP3", "path": "2"}, "1250": {"fn": "ERC20.allowance", "offset": [4000, 4027], "op": "MSTORE", "path": "2"}, "1251": {"fn": "ERC20.allowance", "offset": [4000, 4027], "op": "SWAP2", "path": "2"}, "1252": {"fn": "ERC20.allowance", "offset": [4000, 4027], "op": "SWAP1", "path": "2"}, "1253": {"fn": "ERC20.allowance", "offset": [4000, 4027], "op": "SWAP2", "path": "2"}, "1254": {"fn": "ERC20.allowance", "offset": [4000, 4027], "op": "MSTORE", "path": "2"}, "1255": {"fn": "ERC20.allowance", "offset": [4000, 4027], "op": "KECCAK256", "path": "2"}, "1256": {"fn": "ERC20.allowance", "offset": [4000, 4027], "op": "SLOAD", "path": "2"}, "1257": {"fn": "ERC20.allowance", "offset": [4000, 4027], "op": "SWAP1", "path": "2"}, "1258": {"fn": "ERC20.allowance", "jump": "o", "offset": [3885, 4034], "op": "JUMP", "path": "2"}, "1259": {"fn": "ERC20._approve", "offset": [9345, 9558], "op": "JUMPDEST", "path": "2"}, "1260": {"op": "PUSH1", "value": "0x1"}, "1262": {"op": "PUSH1", "value": "0x1"}, "1264": {"op": "PUSH1", "value": "0xA0"}, "1266": {"op": "SHL"}, "1267": {"op": "SUB"}, "1268": {"fn": "ERC20._approve", "offset": [9468, 9486], "op": "DUP1", "path": "2", "statement": 14}, "1269": {"fn": "ERC20._approve", "offset": [9468, 9486], "op": "DUP5", "path": "2"}, "1270": {"fn": "ERC20._approve", "offset": [9468, 9486], "op": "AND", "path": "2"}, "1271": {"fn": "ERC20._approve", "offset": [9468, 9486], "op": "PUSH1", "path": "2", "value": "0x0"}, "1273": {"fn": "ERC20._approve", "offset": [9468, 9486], "op": "DUP2", "path": "2"}, "1274": {"fn": "ERC20._approve", "offset": [9468, 9486], "op": "DUP2", "path": "2"}, "1275": {"fn": "ERC20._approve", "offset": [9468, 9486], "op": "MSTORE", "path": "2"}, "1276": {"fn": "ERC20._approve", "offset": [9468, 9479], "op": "PUSH1", "path": "2", "value": "0x1"}, "1278": {"fn": "ERC20._approve", "offset": [9468, 9486], "op": "PUSH1", "path": "2", "value": "0x20"}, "1280": {"fn": "ERC20._approve", "offset": [9468, 9486], "op": "SWAP1", "path": "2"}, "1281": {"fn": "ERC20._approve", "offset": [9468, 9486], "op": "DUP2", "path": "2"}, "1282": {"fn": "ERC20._approve", "offset": [9468, 9486], "op": "MSTORE", "path": "2"}, "1283": {"fn": "ERC20._approve", "offset": [9468, 9486], "op": "PUSH1", "path": "2", "value": "0x40"}, "1285": {"fn": "ERC20._approve", "offset": [9468, 9486], "op": "DUP1", "path": "2"}, "1286": {"fn": "ERC20._approve", "offset": [9468, 9486], "op": "DUP4", "path": "2"}, "1287": {"fn": "ERC20._approve", "offset": [9468, 9486], "op": "KECCAK256", "path": "2"}, "1288": {"fn": "ERC20._approve", "offset": [9468, 9495], "op": "SWAP5", "path": "2"}, "1289": {"fn": "ERC20._approve", "offset": [9468, 9495], "op": "DUP8", "path": "2"}, "1290": {"fn": "ERC20._approve", "offset": [9468, 9495], "op": "AND", "path": "2"}, "1291": {"fn": "ERC20._approve", "offset": [9468, 9495], "op": "DUP1", "path": "2"}, "1292": {"fn": "ERC20._approve", "offset": [9468, 9495], "op": "DUP5", "path": "2"}, "1293": {"fn": "ERC20._approve", "offset": [9468, 9495], "op": "MSTORE", "path": "2"}, "1294": {"fn": "ERC20._approve", "offset": [9468, 9495], "op": "SWAP5", "path": "2"}, "1295": {"fn": "ERC20._approve", "offset": [9468, 9495], "op": "DUP3", "path": "2"}, "1296": {"fn": "ERC20._approve", "offset": [9468, 9495], "op": "MSTORE", "path": "2"}, "1297": {"fn": "ERC20._approve", "offset": [9468, 9495], "op": "SWAP2", "path": "2"}, "1298": {"fn": "ERC20._approve", "offset": [9468, 9495], "op": "DUP3", "path": "2"}, "1299": {"fn": "ERC20._approve", "offset": [9468, 9495], "op": "SWAP1", "path": "2"}, "1300": {"fn": "ERC20._approve", "offset": [9468, 9495], "op": "KECCAK256", "path": "2"}, "1301": {"fn": "ERC20._approve", "offset": [9468, 9504], "op": "DUP6", "path": "2"}, "1302": {"fn": "ERC20._approve", "offset": [9468, 9504], "op": "SWAP1", "path": "2"}, "1303": {"fn": "ERC20._approve", "offset": [9468, 9504], "op": "SSTORE", "path": "2"}, "1304": {"fn": "ERC20._approve", "offset": [9519, 9551], "op": "DUP2", "path": "2", "statement": 15}, "1305": {"fn": "ERC20._approve", "offset": [9519, 9551], "op": "MLOAD", "path": "2"}, "1306": {"fn": "ERC20._approve", "offset": [9519, 9551], "op": "DUP6", "path": "2"}, "1307": {"fn": "ERC20._approve", "offset": [9519, 9551], "op": "DUP2", "path": "2"}, "1308": {"fn": "ERC20._approve", "offset": [9519, 9551], "op": "MSTORE", "path": "2"}, "1309": {"fn": "ERC20._approve", "offset": [9519, 9551], "op": "SWAP2", "path": "2"}, "1310": {"fn": "ERC20._approve", "offset": [9519, 9551], "op": "MLOAD", "path": "2"}, "1311": {"fn": "ERC20._approve", "offset": [9519, 9551], "op": "PUSH32", "path": "2", "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"}, "1344": {"fn": "ERC20._approve", "offset": [9519, 9551], "op": "SWAP3", "path": "2"}, "1345": {"fn": "ERC20._approve", "offset": [9519, 9551], "op": "DUP2", "path": "2"}, "1346": {"fn": "ERC20._approve", "offset": [9519, 9551], "op": "SWAP1", "path": "2"}, "1347": {"fn": "ERC20._approve", "offset": [9519, 9551], "op": "SUB", "path": "2"}, "1348": {"fn": "ERC20._approve", "offset": [9519, 9551], "op": "SWAP1", "path": "2"}, "1349": {"fn": "ERC20._approve", "offset": [9519, 9551], "op": "SWAP2", "path": "2"}, "1350": {"fn": "ERC20._approve", "offset": [9519, 9551], "op": "ADD", "path": "2"}, "1351": {"fn": "ERC20._approve", "offset": [9519, 9551], "op": "SWAP1", "path": "2"}, "1352": {"fn": "ERC20._approve", "offset": [9519, 9551], "op": "LOG3", "path": "2"}, "1353": {"fn": "ERC20._approve", "offset": [9345, 9558], "op": "POP", "path": "2"}, "1354": {"fn": "ERC20._approve", "offset": [9345, 9558], "op": "POP", "path": "2"}, "1355": {"fn": "ERC20._approve", "offset": [9345, 9558], "op": "POP", "path": "2"}, "1356": {"fn": "ERC20._approve", "jump": "o", "offset": [9345, 9558], "op": "JUMP", "path": "2"}, "1357": {"fn": "ERC20._transfer", "offset": [7068, 7627], "op": "JUMPDEST", "path": "2"}, "1358": {"fn": "ERC20._transfer", "offset": [7195, 7266], "op": "PUSH2", "path": "2", "statement": 16, "value": "0x564"}, "1361": {"op": "PUSH1", "value": "0x1"}, "1363": {"op": "PUSH1", "value": "0x1"}, "1365": {"op": "PUSH1", "value": "0xA0"}, "1367": {"op": "SHL"}, "1368": {"op": "SUB"}, "1369": {"fn": "ERC20._transfer", "offset": [7204, 7224], "op": "DUP5", "path": "2"}, "1370": {"fn": "ERC20._transfer", "offset": [7204, 7224], "op": "AND", "path": "2"}, "1371": {"fn": "ERC20._transfer", "offset": [7204, 7224], "op": "ISZERO", "path": "2"}, "1372": {"fn": "ERC20._transfer", "offset": [7204, 7224], "op": "ISZERO", "path": "2"}, "1373": {"offset": [8770, 8773], "op": "PUSH2", "path": "1", "value": "0x198"}, "1376": {"fn": "ERC20._transfer", "offset": [7195, 7203], "op": "PUSH2", "path": "2", "value": "0x664"}, "1379": {"fn": "ERC20._transfer", "jump": "i", "offset": [7195, 7266], "op": "JUMP", "path": "2"}, "1380": {"fn": "ERC20._transfer", "offset": [7195, 7266], "op": "JUMPDEST", "path": "2"}, "1381": {"fn": "ERC20._transfer", "offset": [7276, 7348], "op": "PUSH2", "path": "2", "statement": 17, "value": "0x57B"}, "1384": {"op": "PUSH1", "value": "0x1"}, "1386": {"op": "PUSH1", "value": "0x1"}, "1388": {"op": "PUSH1", "value": "0xA0"}, "1390": {"op": "SHL"}, "1391": {"op": "SUB"}, "1392": {"fn": "ERC20._transfer", "offset": [7285, 7308], "op": "DUP4", "path": "2"}, "1393": {"fn": "ERC20._transfer", "offset": [7285, 7308], "op": "AND", "path": "2"}, "1394": {"fn": "ERC20._transfer", "offset": [7285, 7308], "op": "ISZERO", "path": "2"}, "1395": {"fn": "ERC20._transfer", "offset": [7285, 7308], "op": "ISZERO", "path": "2"}, "1396": {"offset": [8838, 8841], "op": "PUSH2", "path": "1", "value": "0x199"}, "1399": {"fn": "ERC20._transfer", "offset": [7276, 7284], "op": "PUSH2", "path": "2", "value": "0x664"}, "1402": {"fn": "ERC20._transfer", "jump": "i", "offset": [7276, 7348], "op": "JUMP", "path": "2"}, "1403": {"fn": "ERC20._transfer", "offset": [7276, 7348], "op": "JUMPDEST", "path": "2"}, "1404": {"fn": "ERC20._transfer", "offset": [7359, 7406], "op": "PUSH2", "path": "2", "statement": 18, "value": "0x586"}, "1407": {"fn": "ERC20._transfer", "offset": [7380, 7386], "op": "DUP4", "path": "2"}, "1408": {"fn": "ERC20._transfer", "offset": [7388, 7397], "op": "DUP4", "path": "2"}, "1409": {"fn": "ERC20._transfer", "offset": [7399, 7405], "op": "DUP4", "path": "2"}, "1410": {"fn": "ERC20._transfer", "offset": [7359, 7379], "op": "PUSH2", "path": "2", "value": "0x676"}, "1413": {"fn": "ERC20._transfer", "jump": "i", "offset": [7359, 7406], "op": "JUMP", "path": "2"}, "1414": {"fn": "ERC20._transfer", "offset": [7359, 7406], "op": "JUMPDEST", "path": "2"}, "1415": {"op": "PUSH1", "value": "0x1"}, "1417": {"op": "PUSH1", "value": "0x1"}, "1419": {"op": "PUSH1", "value": "0xA0"}, "1421": {"op": "SHL"}, "1422": {"op": "SUB"}, "1423": {"fn": "ERC20._transfer", "offset": [7437, 7454], "op": "DUP4", "path": "2", "statement": 19}, "1424": {"fn": "ERC20._transfer", "offset": [7437, 7454], "op": "AND", "path": "2"}, "1425": {"fn": "ERC20._transfer", "offset": [7437, 7446], "op": "PUSH1", "path": "2", "value": "0x0"}, "1427": {"fn": "ERC20._transfer", "offset": [7437, 7454], "op": "SWAP1", "path": "2"}, "1428": {"fn": "ERC20._transfer", "offset": [7437, 7454], "op": "DUP2", "path": "2"}, "1429": {"fn": "ERC20._transfer", "offset": [7437, 7454], "op": "MSTORE", "path": "2"}, "1430": {"fn": "ERC20._transfer", "offset": [7437, 7454], "op": "PUSH1", "path": "2", "value": "0x20"}, "1432": {"fn": "ERC20._transfer", "offset": [7437, 7454], "op": "DUP2", "path": "2"}, "1433": {"fn": "ERC20._transfer", "offset": [7437, 7454], "op": "SWAP1", "path": "2"}, "1434": {"fn": "ERC20._transfer", "offset": [7437, 7454], "op": "MSTORE", "path": "2"}, "1435": {"fn": "ERC20._transfer", "offset": [7437, 7454], "op": "PUSH1", "path": "2", "value": "0x40"}, "1437": {"fn": "ERC20._transfer", "offset": [7437, 7454], "op": "SWAP1", "path": "2"}, "1438": {"fn": "ERC20._transfer", "offset": [7437, 7454], "op": "KECCAK256", "path": "2"}, "1439": {"fn": "ERC20._transfer", "offset": [7437, 7454], "op": "SLOAD", "path": "2"}, "1440": {"fn": "ERC20._transfer", "offset": [7437, 7505], "op": "PUSH2", "path": "2", "value": "0x5AC"}, "1443": {"fn": "ERC20._transfer", "offset": [7437, 7505], "op": "SWAP1", "path": "2"}, "1444": {"fn": "ERC20._transfer", "offset": [7459, 7465], "op": "DUP3", "path": "2"}, "1445": {"offset": [9316, 9319], "op": "PUSH2", "path": "1", "value": "0x1A0"}, "1448": {"fn": "ERC20._transfer", "offset": [7437, 7458], "op": "PUSH2", "path": "2", "value": "0x635"}, "1451": {"fn": "ERC20._transfer", "jump": "i", "offset": [7437, 7505], "op": "JUMP", "path": "2"}, "1452": {"fn": "ERC20._transfer", "offset": [7437, 7505], "op": "JUMPDEST", "path": "2"}, "1453": {"op": "PUSH1", "value": "0x1"}, "1455": {"op": "PUSH1", "value": "0x1"}, "1457": {"op": "PUSH1", "value": "0xA0"}, "1459": {"op": "SHL"}, "1460": {"op": "SUB"}, "1461": {"fn": "ERC20._transfer", "offset": [7417, 7434], "op": "DUP1", "path": "2"}, "1462": {"fn": "ERC20._transfer", "offset": [7417, 7434], "op": "DUP6", "path": "2"}, "1463": {"fn": "ERC20._transfer", "offset": [7417, 7434], "op": "AND", "path": "2"}, "1464": {"fn": "ERC20._transfer", "offset": [7417, 7426], "op": "PUSH1", "path": "2", "value": "0x0"}, "1466": {"fn": "ERC20._transfer", "offset": [7417, 7434], "op": "SWAP1", "path": "2"}, "1467": {"fn": "ERC20._transfer", "offset": [7417, 7434], "op": "DUP2", "path": "2"}, "1468": {"fn": "ERC20._transfer", "offset": [7417, 7434], "op": "MSTORE", "path": "2"}, "1469": {"fn": "ERC20._transfer", "offset": [7417, 7434], "op": "PUSH1", "path": "2", "value": "0x20"}, "1471": {"fn": "ERC20._transfer", "offset": [7417, 7434], "op": "DUP2", "path": "2"}, "1472": {"fn": "ERC20._transfer", "offset": [7417, 7434], "op": "SWAP1", "path": "2"}, "1473": {"fn": "ERC20._transfer", "offset": [7417, 7434], "op": "MSTORE", "path": "2"}, "1474": {"fn": "ERC20._transfer", "offset": [7417, 7434], "op": "PUSH1", "path": "2", "value": "0x40"}, "1476": {"fn": "ERC20._transfer", "offset": [7417, 7434], "op": "DUP1", "path": "2"}, "1477": {"fn": "ERC20._transfer", "offset": [7417, 7434], "op": "DUP3", "path": "2"}, "1478": {"fn": "ERC20._transfer", "offset": [7417, 7434], "op": "KECCAK256", "path": "2"}, "1479": {"fn": "ERC20._transfer", "offset": [7417, 7505], "op": "SWAP4", "path": "2"}, "1480": {"fn": "ERC20._transfer", "offset": [7417, 7505], "op": "SWAP1", "path": "2"}, "1481": {"fn": "ERC20._transfer", "offset": [7417, 7505], "op": "SWAP4", "path": "2"}, "1482": {"fn": "ERC20._transfer", "offset": [7417, 7505], "op": "SSTORE", "path": "2"}, "1483": {"fn": "ERC20._transfer", "offset": [7538, 7558], "op": "SWAP1", "path": "2", "statement": 20}, "1484": {"fn": "ERC20._transfer", "offset": [7538, 7558], "op": "DUP5", "path": "2"}, "1485": {"fn": "ERC20._transfer", "offset": [7538, 7558], "op": "AND", "path": "2"}, "1486": {"fn": "ERC20._transfer", "offset": [7538, 7558], "op": "DUP2", "path": "2"}, "1487": {"fn": "ERC20._transfer", "offset": [7538, 7558], "op": "MSTORE", "path": "2"}, "1488": {"fn": "ERC20._transfer", "offset": [7538, 7558], "op": "KECCAK256", "path": "2"}, "1489": {"fn": "ERC20._transfer", "offset": [7538, 7558], "op": "SLOAD", "path": "2"}, "1490": {"fn": "ERC20._transfer", "offset": [7538, 7570], "op": "PUSH2", "path": "2", "value": "0x5DB"}, "1493": {"fn": "ERC20._transfer", "offset": [7538, 7570], "op": "SWAP1", "path": "2"}, "1494": {"fn": "ERC20._transfer", "offset": [7563, 7569], "op": "DUP3", "path": "2"}, "1495": {"fn": "ERC20._transfer", "offset": [7538, 7562], "op": "PUSH2", "path": "2", "value": "0x64B"}, "1498": {"fn": "ERC20._transfer", "jump": "i", "offset": [7538, 7570], "op": "JUMP", "path": "2"}, "1499": {"fn": "ERC20._transfer", "offset": [7538, 7570], "op": "JUMPDEST", "path": "2"}, "1500": {"op": "PUSH1", "value": "0x1"}, "1502": {"op": "PUSH1", "value": "0x1"}, "1504": {"op": "PUSH1", "value": "0xA0"}, "1506": {"op": "SHL"}, "1507": {"op": "SUB"}, "1508": {"fn": "ERC20._transfer", "offset": [7515, 7535], "op": "DUP1", "path": "2"}, "1509": {"fn": "ERC20._transfer", "offset": [7515, 7535], "op": "DUP5", "path": "2"}, "1510": {"fn": "ERC20._transfer", "offset": [7515, 7535], "op": "AND", "path": "2"}, "1511": {"fn": "ERC20._transfer", "offset": [7515, 7524], "op": "PUSH1", "path": "2", "value": "0x0"}, "1513": {"fn": "ERC20._transfer", "offset": [7515, 7535], "op": "DUP2", "path": "2"}, "1514": {"fn": "ERC20._transfer", "offset": [7515, 7535], "op": "DUP2", "path": "2"}, "1515": {"fn": "ERC20._transfer", "offset": [7515, 7535], "op": "MSTORE", "path": "2"}, "1516": {"fn": "ERC20._transfer", "offset": [7515, 7535], "op": "PUSH1", "path": "2", "value": "0x20"}, "1518": {"fn": "ERC20._transfer", "offset": [7515, 7535], "op": "DUP2", "path": "2"}, "1519": {"fn": "ERC20._transfer", "offset": [7515, 7535], "op": "DUP2", "path": "2"}, "1520": {"fn": "ERC20._transfer", "offset": [7515, 7535], "op": "MSTORE", "path": "2"}, "1521": {"fn": "ERC20._transfer", "offset": [7515, 7535], "op": "PUSH1", "path": "2", "value": "0x40"}, "1523": {"fn": "ERC20._transfer", "offset": [7515, 7535], "op": "SWAP2", "path": "2"}, "1524": {"fn": "ERC20._transfer", "offset": [7515, 7535], "op": "DUP3", "path": "2"}, "1525": {"fn": "ERC20._transfer", "offset": [7515, 7535], "op": "SWAP1", "path": "2"}, "1526": {"fn": "ERC20._transfer", "offset": [7515, 7535], "op": "KECCAK256", "path": "2"}, "1527": {"fn": "ERC20._transfer", "offset": [7515, 7570], "op": "SWAP5", "path": "2"}, "1528": {"fn": "ERC20._transfer", "offset": [7515, 7570], "op": "SWAP1", "path": "2"}, "1529": {"fn": "ERC20._transfer", "offset": [7515, 7570], "op": "SWAP5", "path": "2"}, "1530": {"fn": "ERC20._transfer", "offset": [7515, 7570], "op": "SSTORE", "path": "2"}, "1531": {"fn": "ERC20._transfer", "offset": [7585, 7620], "op": "DUP1", "path": "2", "statement": 21}, "1532": {"fn": "ERC20._transfer", "offset": [7585, 7620], "op": "MLOAD", "path": "2"}, "1533": {"fn": "ERC20._transfer", "offset": [7585, 7620], "op": "DUP6", "path": "2"}, "1534": {"fn": "ERC20._transfer", "offset": [7585, 7620], "op": "DUP2", "path": "2"}, "1535": {"fn": "ERC20._transfer", "offset": [7585, 7620], "op": "MSTORE", "path": "2"}, "1536": {"fn": "ERC20._transfer", "offset": [7585, 7620], "op": "SWAP1", "path": "2"}, "1537": {"fn": "ERC20._transfer", "offset": [7585, 7620], "op": "MLOAD", "path": "2"}, "1538": {"fn": "ERC20._transfer", "offset": [7515, 7535], "op": "SWAP2", "path": "2"}, "1539": {"fn": "ERC20._transfer", "offset": [7515, 7535], "op": "SWAP4", "path": "2"}, "1540": {"fn": "ERC20._transfer", "offset": [7585, 7620], "op": "SWAP3", "path": "2"}, "1541": {"fn": "ERC20._transfer", "offset": [7585, 7620], "op": "DUP8", "path": "2"}, "1542": {"fn": "ERC20._transfer", "offset": [7585, 7620], "op": "AND", "path": "2"}, "1543": {"fn": "ERC20._transfer", "offset": [7585, 7620], "op": "SWAP3", "path": "2"}, "1544": {"fn": "ERC20._transfer", "offset": [7585, 7620], "op": "PUSH32", "path": "2", "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"}, "1577": {"fn": "ERC20._transfer", "offset": [7585, 7620], "op": "SWAP3", "path": "2"}, "1578": {"fn": "ERC20._transfer", "offset": [7585, 7620], "op": "SWAP2", "path": "2"}, "1579": {"fn": "ERC20._transfer", "offset": [7585, 7620], "op": "DUP3", "path": "2"}, "1580": {"fn": "ERC20._transfer", "offset": [7585, 7620], "op": "SWAP1", "path": "2"}, "1581": {"fn": "ERC20._transfer", "offset": [7585, 7620], "op": "SUB", "path": "2"}, "1582": {"fn": "ERC20._transfer", "offset": [7585, 7620], "op": "ADD", "path": "2"}, "1583": {"fn": "ERC20._transfer", "offset": [7585, 7620], "op": "SWAP1", "path": "2"}, "1584": {"fn": "ERC20._transfer", "offset": [7585, 7620], "op": "LOG3", "path": "2"}, "1585": {"fn": "ERC20._transfer", "offset": [7068, 7627], "op": "POP", "path": "2"}, "1586": {"fn": "ERC20._transfer", "offset": [7068, 7627], "op": "POP", "path": "2"}, "1587": {"fn": "ERC20._transfer", "offset": [7068, 7627], "op": "POP", "path": "2"}, "1588": {"fn": "ERC20._transfer", "jump": "o", "offset": [7068, 7627], "op": "JUMP", "path": "2"}, "1589": {"fn": "SafeMath.sub", "offset": [1765, 1941], "op": "JUMPDEST", "path": "4"}, "1590": {"fn": "SafeMath.sub", "offset": [1842, 1849], "op": "PUSH1", "path": "4", "value": "0x0"}, "1592": {"fn": "SafeMath.sub", "offset": [1861, 1888], "op": "PUSH2", "path": "4", "statement": 22, "value": "0x644"}, "1595": {"fn": "SafeMath.sub", "offset": [1875, 1876], "op": "DUP5", "path": "4"}, "1596": {"fn": "SafeMath.sub", "offset": [1870, 1871], "op": "DUP5", "path": "4"}, "1597": {"fn": "SafeMath.sub", "offset": [1870, 1876], "op": "GT", "path": "4"}, "1598": {"fn": "SafeMath.sub", "offset": [1870, 1876], "op": "ISZERO", "path": "4"}, "1599": {"fn": "SafeMath.sub", "offset": [1878, 1887], "op": "DUP4", "path": "4"}, "1600": {"fn": "SafeMath.sub", "offset": [1861, 1869], "op": "PUSH2", "path": "4", "value": "0x664"}, "1603": {"fn": "SafeMath.sub", "jump": "i", "offset": [1861, 1888], "op": "JUMP", "path": "4"}, "1604": {"fn": "SafeMath.sub", "offset": [1861, 1888], "op": "JUMPDEST", "path": "4"}, "1605": {"op": "POP"}, "1606": {"op": "POP"}, "1607": {"fn": "SafeMath.sub", "offset": [1910, 1915], "op": "SWAP1", "path": "4"}, "1608": {"fn": "SafeMath.sub", "offset": [1910, 1915], "op": "SUB", "path": "4"}, "1609": {"fn": "SafeMath.sub", "offset": [1910, 1915], "op": "SWAP1", "path": "4"}, "1610": {"fn": "SafeMath.sub", "jump": "o", "offset": [1765, 1941], "op": "JUMP", "path": "4"}, "1611": {"fn": "SafeMath.add", "offset": [915, 1082], "op": "JUMPDEST", "path": "4"}, "1612": {"fn": "SafeMath.add", "offset": [973, 980], "op": "PUSH1", "path": "4", "value": "0x0"}, "1614": {"fn": "SafeMath.add", "offset": [1004, 1009], "op": "DUP3", "path": "4"}, "1615": {"fn": "SafeMath.add", "offset": [1004, 1009], "op": "DUP3", "path": "4"}, "1616": {"fn": "SafeMath.add", "offset": [1004, 1009], "op": "ADD", "path": "4"}, "1617": {"fn": "SafeMath.add", "offset": [1019, 1056], "op": "PUSH2", "path": "4", "statement": 23, "value": "0x65D"}, "1620": {"fn": "SafeMath.add", "offset": [1028, 1034], "op": "DUP5", "path": "4"}, "1621": {"fn": "SafeMath.add", "offset": [1028, 1034], "op": "DUP3", "path": "4"}, "1622": {"fn": "SafeMath.add", "offset": [1028, 1034], "op": "LT", "path": "4"}, "1623": {"fn": "SafeMath.add", "offset": [1028, 1034], "op": "ISZERO", "path": "4"}, "1624": {"fn": "SafeMath.add", "offset": [973, 980], "op": "DUP4", "path": "4"}, "1625": {"fn": "SafeMath.add", "offset": [1019, 1027], "op": "PUSH2", "path": "4", "value": "0x664"}, "1628": {"fn": "SafeMath.add", "jump": "i", "offset": [1019, 1056], "op": "JUMP", "path": "4"}, "1629": {"fn": "SafeMath.add", "offset": [1019, 1056], "op": "JUMPDEST", "path": "4"}, "1630": {"fn": "SafeMath.add", "offset": [1074, 1075], "op": "SWAP4", "path": "4", "statement": 24}, "1631": {"fn": "SafeMath.add", "offset": [915, 1082], "op": "SWAP3", "path": "4"}, "1632": {"op": "POP"}, "1633": {"op": "POP"}, "1634": {"op": "POP"}, "1635": {"fn": "SafeMath.add", "jump": "o", "offset": [915, 1082], "op": "JUMP", "path": "4"}, "1636": {"fn": "_require", "offset": [866, 967], "op": "JUMPDEST", "path": "1"}, "1637": {"fn": "_require", "offset": [935, 944], "op": "DUP2", "path": "1"}, "1638": {"fn": "_require", "offset": [930, 964], "op": "PUSH2", "path": "1", "value": "0x672"}, "1641": {"fn": "_require", "offset": [930, 964], "op": "JUMPI", "path": "1"}, "1642": {"fn": "_require", "offset": [946, 964], "op": "PUSH2", "path": "1", "statement": 25, "value": "0x672"}, "1645": {"fn": "_require", "offset": [954, 963], "op": "DUP2", "path": "1"}, "1646": {"fn": "_require", "offset": [946, 953], "op": "PUSH2", "path": "1", "value": "0x67B"}, "1649": {"fn": "_require", "jump": "i", "offset": [946, 964], "op": "JUMP", "path": "1"}, "1650": {"fn": "_require", "offset": [946, 964], "op": "JUMPDEST", "path": "1"}, "1651": {"fn": "_require", "offset": [866, 967], "op": "POP", "path": "1"}, "1652": {"fn": "_require", "offset": [866, 967], "op": "POP", "path": "1"}, "1653": {"fn": "_require", "jump": "o", "offset": [866, 967], "op": "JUMP", "path": "1"}, "1654": {"fn": "ERC20._beforeTokenTransfer", "offset": [10556, 10677], "op": "JUMPDEST", "path": "2"}, "1655": {"fn": "ERC20._beforeTokenTransfer", "offset": [10556, 10677], "op": "POP", "path": "2"}, "1656": {"fn": "ERC20._beforeTokenTransfer", "offset": [10556, 10677], "op": "POP", "path": "2"}, "1657": {"fn": "ERC20._beforeTokenTransfer", "offset": [10556, 10677], "op": "POP", "path": "2"}, "1658": {"fn": "ERC20._beforeTokenTransfer", "jump": "o", "offset": [10556, 10677], "op": "JUMP", "path": "2"}, "1659": {"fn": "_revert", "offset": [1074, 4246], "op": "JUMPDEST", "path": "1"}, "1660": {"op": "PUSH3", "value": "0x461BCD"}, "1664": {"op": "PUSH1", "value": "0xE5"}, "1666": {"op": "SHL"}, "1667": {"fn": "_revert", "offset": [3588, 3591], "op": "PUSH1", "path": "1", "value": "0x0"}, "1669": {"fn": "_revert", "offset": [3581, 3660], "op": "SWAP1", "path": "1"}, "1670": {"fn": "_revert", "offset": [3581, 3660], "op": "DUP2", "path": "1"}, "1671": {"fn": "_revert", "offset": [3581, 3660], "op": "MSTORE", "path": "1"}, "1672": {"fn": "_revert", "offset": [3799, 3865], "op": "PUSH1", "path": "1", "value": "0x20"}, "1674": {"fn": "_revert", "offset": [3793, 3797], "op": "PUSH1", "path": "1", "value": "0x4"}, "1676": {"fn": "_revert", "offset": [3786, 3866], "op": "MSTORE", "path": "1"}, "1677": {"fn": "_revert", "offset": [3941, 3942], "op": "PUSH1", "path": "1", "value": "0x7"}, "1679": {"fn": "_revert", "offset": [3935, 3939], "op": "PUSH1", "path": "1", "value": "0x24"}, "1681": {"fn": "_revert", "offset": [3928, 3943], "op": "MSTORE", "path": "1"}, "1682": {"fn": "_revert", "offset": [2999, 3072], "op": "PUSH7", "path": "1", "value": "0x42414C23000030"}, "1690": {"fn": "_revert", "offset": [2210, 2212], "op": "PUSH1", "path": "1", "value": "0xA"}, "1692": {"fn": "_revert", "offset": [2243, 2261], "op": "DUP1", "path": "1"}, "1693": {"fn": "_revert", "offset": [2243, 2261], "op": "DUP5", "path": "1"}, "1694": {"fn": "_revert", "offset": [2243, 2261], "op": "DIV", "path": "1"}, "1695": {"fn": "_revert", "offset": [2288, 2306], "op": "DUP2", "path": "1"}, "1696": {"fn": "_revert", "offset": [2288, 2306], "op": "DUP2", "path": "1"}, "1697": {"fn": "_revert", "offset": [2288, 2306], "op": "MOD", "path": "1"}, "1698": {"fn": "_revert", "offset": [2215, 2219], "op": "PUSH1", "path": "1", "value": "0x30"}, "1700": {"fn": "_revert", "offset": [2284, 2313], "op": "SWAP1", "path": "1"}, "1701": {"fn": "_revert", "offset": [2284, 2313], "op": "DUP2", "path": "1"}, "1702": {"fn": "_revert", "offset": [2284, 2313], "op": "ADD", "path": "1"}, "1703": {"fn": "_revert", "offset": [3040, 3041], "op": "PUSH1", "path": "1", "value": "0x8"}, "1705": {"fn": "_revert", "offset": [3036, 3050], "op": "SHL", "path": "1"}, "1706": {"fn": "_revert", "offset": [2195, 2213], "op": "SWAP6", "path": "1"}, "1707": {"fn": "_revert", "offset": [2195, 2213], "op": "DUP4", "path": "1"}, "1708": {"fn": "_revert", "offset": [2195, 2213], "op": "SWAP1", "path": "1"}, "1709": {"fn": "_revert", "offset": [2195, 2213], "op": "MOD", "path": "1"}, "1710": {"fn": "_revert", "offset": [3025, 3051], "op": "SWAP6", "path": "1"}, "1711": {"fn": "_revert", "offset": [3025, 3051], "op": "SWAP1", "path": "1"}, "1712": {"fn": "_revert", "offset": [3025, 3051], "op": "SWAP6", "path": "1"}, "1713": {"fn": "_revert", "offset": [3025, 3051], "op": "ADD", "path": "1"}, "1714": {"fn": "_revert", "offset": [2336, 2354], "op": "SWAP1", "path": "1"}, "1715": {"fn": "_revert", "offset": [2336, 2354], "op": "DUP3", "path": "1"}, "1716": {"fn": "_revert", "offset": [2336, 2354], "op": "SWAP1", "path": "1"}, "1717": {"fn": "_revert", "offset": [2336, 2354], "op": "DIV", "path": "1"}, "1718": {"fn": "_revert", "offset": [2383, 2401], "op": "SWAP2", "path": "1"}, "1719": {"fn": "_revert", "offset": [2383, 2401], "op": "DUP3", "path": "1"}, "1720": {"fn": "_revert", "offset": [2383, 2401], "op": "MOD", "path": "1"}, "1721": {"fn": "_revert", "offset": [2379, 2408], "op": "SWAP1", "path": "1"}, "1722": {"fn": "_revert", "offset": [2379, 2408], "op": "SWAP5", "path": "1"}, "1723": {"fn": "_revert", "offset": [2379, 2408], "op": "ADD", "path": "1"}, "1724": {"fn": "_revert", "offset": [3057, 3059], "op": "PUSH1", "path": "1", "value": "0x10"}, "1726": {"fn": "_revert", "offset": [3053, 3070], "op": "SHL", "path": "1"}, "1727": {"fn": "_revert", "offset": [3021, 3071], "op": "SWAP4", "path": "1"}, "1728": {"fn": "_revert", "offset": [3021, 3071], "op": "SWAP1", "path": "1"}, "1729": {"fn": "_revert", "offset": [3021, 3071], "op": "SWAP4", "path": "1"}, "1730": {"fn": "_revert", "offset": [3021, 3071], "op": "ADD", "path": "1"}, "1731": {"fn": "_revert", "offset": [2999, 3072], "op": "ADD", "path": "1"}, "1732": {"fn": "_revert", "offset": [2994, 2997], "op": "PUSH1", "path": "1", "value": "0xC8"}, "1734": {"fn": "_revert", "offset": [2990, 3073], "op": "SHL", "path": "1"}, "1735": {"fn": "_revert", "offset": [4008, 4012], "op": "PUSH1", "path": "1", "value": "0x44"}, "1737": {"fn": "_revert", "offset": [4001, 4027], "op": "MSTORE", "path": "1"}, "1738": {"fn": "_revert", "offset": [4234, 4237], "op": "PUSH1", "path": "1", "value": "0x64"}, "1740": {"fn": "_revert", "offset": [4234, 4237], "op": "SWAP1", "path": "1"}, "1741": {"fn": "_revert", "offset": [4224, 4238], "op": "REVERT", "path": "1"}}, "sha1": "cbcb83eb6502597163a7147d51c44cc5472472e1", "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\nimport \"../helpers/BalancerErrors.sol\";\n\nimport \"./IERC20.sol\";\nimport \"./SafeMath.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is IERC20 {\n    using SafeMath for uint256;\n\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n     * a default value of 18.\n     *\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        _decimals = 18;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(msg.sender, recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(msg.sender, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(\n            sender,\n            msg.sender,\n            _allowances[sender][msg.sender].sub(amount, Errors.ERC20_TRANSFER_EXCEEDS_ALLOWANCE)\n        );\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(\n            msg.sender,\n            spender,\n            _allowances[msg.sender][spender].sub(subtractedValue, Errors.ERC20_DECREASED_ALLOWANCE_BELOW_ZERO)\n        );\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual {\n        _require(sender != address(0), Errors.ERC20_TRANSFER_FROM_ZERO_ADDRESS);\n        _require(recipient != address(0), Errors.ERC20_TRANSFER_TO_ZERO_ADDRESS);\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, Errors.ERC20_TRANSFER_EXCEEDS_BALANCE);\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        _require(account != address(0), Errors.ERC20_BURN_FROM_ZERO_ADDRESS);\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, Errors.ERC20_BURN_EXCEEDS_ALLOWANCE);\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Sets {decimals} to a value other than the default one of 18.\n     *\n     * WARNING: This function should only be called from the constructor. Most\n     * applications that interact with token contracts will not expect\n     * {decimals} to ever change, and may work incorrectly if it does.\n     */\n    function _setupDecimals(uint8 decimals_) internal {\n        _decimals = decimals_;\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n", "sourceMap": "1311:9368:2:-:0;;;1936:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1936:137:2;;;;;;;;;;-1:-1:-1;1936:137:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1936:137:2;;;;;;;;;;-1:-1:-1;1936:137:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1936:137:2;;-1:-1:-1;;2002:13:2;;;;-1:-1:-1;2002:5:2;;:13;;;;;:::i;:::-;-1:-1:-1;2025:17:2;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2052:9:2;:14;;-1:-1:-1;;2052:14:2;2064:2;2052:14;;;-1:-1:-1;1311:9368:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1311:9368:2;;;-1:-1:-1;1311:9368:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ERC20.sol", "type": "contract", "deployment": {"address": "0x254dffcd3277C0b1660F6d42EFbB754edaBAbC2B", "chainid": "1337", "blockHeight": 4}}