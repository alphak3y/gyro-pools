{"abi": [], "allSourcePaths": {"20": "node_modules/@balancer-labs/v2-pool-utils/contracts/oracle/Buffer.sol", "22": "node_modules/@balancer-labs/v2-pool-utils/contracts/oracle/QueryProcessor.sol", "23": "node_modules/@balancer-labs/v2-pool-utils/contracts/oracle/Samples.sol", "30": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol", "35": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/LogCompression.sol", "37": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/WordCodec.sol", "39": "node_modules/@balancer-labs/v2-solidity-utils/contracts/math/LogExpMath.sol"}, "ast": {"absolutePath": "node_modules/@balancer-labs/v2-pool-utils/contracts/oracle/QueryProcessor.sol", "exportedSymbols": {"Buffer": [14628], "Errors": [11695], "IPriceOracle": [20201], "LogCompression": [8390], "LogExpMath": [12993], "QueryProcessor": [20652], "Samples": [21049], "WordCodec": [17709], "_require": [11290], "_revert": [11298]}, "id": 20653, "license": "GPL-3.0-or-later", "nodeType": "SourceUnit", "nodes": [{"id": 20203, "literals": ["solidity", "^", "0.7", ".0"], "nodeType": "PragmaDirective", "src": "688:23:22"}, {"id": 20204, "literals": ["experimental", "ABIEncoderV2"], "nodeType": "PragmaDirective", "src": "712:33:22"}, {"absolutePath": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol", "file": "@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol", "id": 20205, "nodeType": "ImportDirective", "scope": 20653, "sourceUnit": 11696, "src": "747:79:22", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/LogCompression.sol", "file": "@balancer-labs/v2-solidity-utils/contracts/helpers/LogCompression.sol", "id": 20206, "nodeType": "ImportDirective", "scope": 20653, "sourceUnit": 8391, "src": "827:79:22", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "node_modules/@balancer-labs/v2-pool-utils/contracts/interfaces/IPriceOracle.sol", "file": "../interfaces/IPriceOracle.sol", "id": 20207, "nodeType": "ImportDirective", "scope": 20653, "sourceUnit": 20202, "src": "908:40:22", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "node_modules/@balancer-labs/v2-pool-utils/contracts/oracle/Buffer.sol", "file": "./Buffer.sol", "id": 20208, "nodeType": "ImportDirective", "scope": 20653, "sourceUnit": 14629, "src": "950:22:22", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "node_modules/@balancer-labs/v2-pool-utils/contracts/oracle/Samples.sol", "file": "./Samples.sol", "id": 20209, "nodeType": "ImportDirective", "scope": 20653, "sourceUnit": 21050, "src": "973:23:22", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [], "contractDependencies": [], "contractKind": "library", "documentation": {"id": 20210, "nodeType": "StructuredDocumentation", "src": "998:380:22", "text": " @dev Auxiliary library for PoolPriceOracle, offloading most of the query code to reduce bytecode size by using this\n as a linked library. The downside is an extra DELEGATECALL is added (2600 gas as of the Berlin hardfork), but the\n bytecode size gains are so big (specially of the oracle contract does not use `LogCompression.fromLowResLog`) that\n it is worth it."}, "fullyImplemented": true, "id": 20652, "linearizedBaseContracts": [20652], "name": "QueryProcessor", "nodeType": "ContractDefinition", "nodes": [{"id": 20213, "libraryName": {"id": 20211, "name": "Buffer", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 14628, "src": "1414:6:22", "typeDescriptions": {"typeIdentifier": "t_contract$_Buffer_$14628", "typeString": "library Buffer"}}, "nodeType": "UsingForDirective", "src": "1408:25:22", "typeName": {"id": 20212, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1425:7:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"id": 20216, "libraryName": {"id": 20214, "name": "Samples", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 21049, "src": "1444:7:22", "typeDescriptions": {"typeIdentifier": "t_contract$_Samples_$21049", "typeString": "library Samples"}}, "nodeType": "UsingForDirective", "src": "1438:26:22", "typeName": {"id": 20215, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1456:7:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}}, {"id": 20219, "libraryName": {"id": 20217, "name": "LogCompression", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 8390, "src": "1475:14:22", "typeDescriptions": {"typeIdentifier": "t_contract$_LogCompression_$8390", "typeString": "library LogCompression"}}, "nodeType": "UsingForDirective", "src": "1469:32:22", "typeName": {"id": 20218, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1494:6:22", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}}, {"body": {"id": 20261, "nodeType": "Block", "src": "1770:243:22", "statements": [{"assignments": [20234], "declarations": [{"constant": false, "id": 20234, "mutability": "mutable", "name": "sample", "nodeType": "VariableDeclaration", "scope": 20261, "src": "1780:14:22", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 20233, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1780:7:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 20238, "initialValue": {"baseExpression": {"id": 20235, "name": "samples", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20224, "src": "1797:7:22", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$", "typeString": "mapping(uint256 => bytes32)"}}, "id": 20237, "indexExpression": {"id": 20236, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20228, "src": "1805:5:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1797:14:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "1780:31:22"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 20244, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 20240, "name": "sample", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20234, "src": "1830:6:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 20241, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "referencedDeclaration": 20845, "src": "1830:16:22", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (uint256)"}}, "id": 20242, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1830:18:22", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 20243, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1851:1:22", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "1830:22:22", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 20245, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11695, "src": "1854:6:22", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$11695_$", "typeString": "type(library Errors)"}}, "id": 20246, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ORACLE_NOT_INITIALIZED", "nodeType": "MemberAccess", "referencedDeclaration": 11418, "src": "1854:29:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 20239, "name": "_require", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11290, "src": "1821:8:22", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 20247, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1821:63:22", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20248, "nodeType": "ExpressionStatement", "src": "1821:63:22"}, {"assignments": [20250], "declarations": [{"constant": false, "id": 20250, "mutability": "mutable", "name": "rawInstantValue", "nodeType": "VariableDeclaration", "scope": 20261, "src": "1895:22:22", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 20249, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1895:6:22", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 20255, "initialValue": {"arguments": [{"id": 20253, "name": "variable", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20226, "src": "1935:8:22", "typeDescriptions": {"typeIdentifier": "t_enum$_Variable_$20154", "typeString": "enum IPriceOracle.Variable"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_enum$_Variable_$20154", "typeString": "enum IPriceOracle.Variable"}], "expression": {"id": 20251, "name": "sample", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20234, "src": "1920:6:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 20252, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "instant", "nodeType": "MemberAccess", "referencedDeclaration": 20793, "src": "1920:14:22", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_enum$_Variable_$20154_$returns$_t_int256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32,enum IPriceOracle.Variable) pure returns (int256)"}}, "id": 20254, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1920:24:22", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "VariableDeclarationStatement", "src": "1895:49:22"}, {"expression": {"arguments": [{"id": 20258, "name": "rawInstantValue", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20250, "src": "1990:15:22", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 20256, "name": "LogCompression", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8390, "src": "1961:14:22", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_LogCompression_$8390_$", "typeString": "type(library LogCompression)"}}, "id": 20257, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "fromLowResLog", "nodeType": "MemberAccess", "referencedDeclaration": 8389, "src": "1961:28:22", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$", "typeString": "function (int256) pure returns (uint256)"}}, "id": 20259, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1961:45:22", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 20232, "id": 20260, "nodeType": "Return", "src": "1954:52:22"}]}, "documentation": {"id": 20220, "nodeType": "StructuredDocumentation", "src": "1507:79:22", "text": " @dev Returns the value for `variable` at the indexed sample."}, "functionSelector": "0397bee0", "id": 20262, "implemented": true, "kind": "function", "modifiers": [], "name": "getInstantValue", "nodeType": "FunctionDefinition", "parameters": {"id": 20229, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20224, "mutability": "mutable", "name": "samples", "nodeType": "VariableDeclaration", "scope": 20262, "src": "1625:43:22", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$", "typeString": "mapping(uint256 => bytes32)"}, "typeName": {"id": 20223, "keyType": {"id": 20221, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1633:7:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Mapping", "src": "1625:27:22", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$", "typeString": "mapping(uint256 => bytes32)"}, "valueType": {"id": 20222, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1644:7:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}}, "visibility": "internal"}, {"constant": false, "id": 20226, "mutability": "mutable", "name": "variable", "nodeType": "VariableDeclaration", "scope": 20262, "src": "1678:30:22", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_Variable_$20154", "typeString": "enum IPriceOracle.Variable"}, "typeName": {"id": 20225, "name": "IPriceOracle.Variable", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 20154, "src": "1678:21:22", "typeDescriptions": {"typeIdentifier": "t_enum$_Variable_$20154", "typeString": "enum IPriceOracle.Variable"}}, "visibility": "internal"}, {"constant": false, "id": 20228, "mutability": "mutable", "name": "index", "nodeType": "VariableDeclaration", "scope": 20262, "src": "1718:13:22", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20227, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1718:7:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1615:122:22"}, "returnParameters": {"id": 20232, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20231, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 20262, "src": "1761:7:22", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20230, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1761:7:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1760:9:22"}, "scope": 20652, "src": "1591:422:22", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 20324, "nodeType": "Block", "src": "2319:387:22", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 20280, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 20277, "name": "query", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20269, "src": "2338:5:22", "typeDescriptions": {"typeIdentifier": "t_struct$_OracleAverageQuery_$20179_memory_ptr", "typeString": "struct IPriceOracle.OracleAverageQuery memory"}}, "id": 20278, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "secs", "nodeType": "MemberAccess", "referencedDeclaration": 20176, "src": "2338:10:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 20279, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2352:1:22", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "2338:15:22", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 20281, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11695, "src": "2355:6:22", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$11695_$", "typeString": "type(library Errors)"}}, "id": 20282, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ORACLE_BAD_SECS", "nodeType": "MemberAccess", "referencedDeclaration": 11427, "src": "2355:22:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 20276, "name": "_require", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11290, "src": "2329:8:22", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 20283, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2329:49:22", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20284, "nodeType": "ExpressionStatement", "src": "2329:49:22"}, {"assignments": [20286], "declarations": [{"constant": false, "id": 20286, "mutability": "mutable", "name": "beginAccumulator", "nodeType": "VariableDeclaration", "scope": 20324, "src": "2389:23:22", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 20285, "name": "int256", "nodeType": "ElementaryTypeName", "src": "2389:6:22", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 20298, "initialValue": {"arguments": [{"id": 20288, "name": "samples", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20267, "src": "2434:7:22", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$", "typeString": "mapping(uint256 => bytes32)"}}, {"expression": {"id": 20289, "name": "query", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20269, "src": "2443:5:22", "typeDescriptions": {"typeIdentifier": "t_struct$_OracleAverageQuery_$20179_memory_ptr", "typeString": "struct IPriceOracle.OracleAverageQuery memory"}}, "id": 20290, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "variable", "nodeType": "MemberAccess", "referencedDeclaration": 20174, "src": "2443:14:22", "typeDescriptions": {"typeIdentifier": "t_enum$_Variable_$20154", "typeString": "enum IPriceOracle.Variable"}}, {"id": 20291, "name": "latestIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20271, "src": "2459:11:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 20296, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 20292, "name": "query", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20269, "src": "2472:5:22", "typeDescriptions": {"typeIdentifier": "t_struct$_OracleAverageQuery_$20179_memory_ptr", "typeString": "struct IPriceOracle.OracleAverageQuery memory"}}, "id": 20293, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ago", "nodeType": "MemberAccess", "referencedDeclaration": 20178, "src": "2472:9:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"expression": {"id": 20294, "name": "query", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20269, "src": "2484:5:22", "typeDescriptions": {"typeIdentifier": "t_struct$_OracleAverageQuery_$20179_memory_ptr", "typeString": "struct IPriceOracle.OracleAverageQuery memory"}}, "id": 20295, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "secs", "nodeType": "MemberAccess", "referencedDeclaration": 20176, "src": "2484:10:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2472:22:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$", "typeString": "mapping(uint256 => bytes32)"}, {"typeIdentifier": "t_enum$_Variable_$20154", "typeString": "enum IPriceOracle.Variable"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 20287, "name": "getPastAccumulator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20534, "src": "2415:18:22", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_mapping$_t_uint256_$_t_bytes32_$_$_t_enum$_Variable_$20154_$_t_uint256_$_t_uint256_$returns$_t_int256_$", "typeString": "function (mapping(uint256 => bytes32),enum IPriceOracle.Variable,uint256,uint256) view returns (int256)"}}, "id": 20297, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2415:80:22", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "VariableDeclarationStatement", "src": "2389:106:22"}, {"assignments": [20300], "declarations": [{"constant": false, "id": 20300, "mutability": "mutable", "name": "endAccumulator", "nodeType": "VariableDeclaration", "scope": 20324, "src": "2505:21:22", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 20299, "name": "int256", "nodeType": "ElementaryTypeName", "src": "2505:6:22", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 20309, "initialValue": {"arguments": [{"id": 20302, "name": "samples", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20267, "src": "2548:7:22", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$", "typeString": "mapping(uint256 => bytes32)"}}, {"expression": {"id": 20303, "name": "query", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20269, "src": "2557:5:22", "typeDescriptions": {"typeIdentifier": "t_struct$_OracleAverageQuery_$20179_memory_ptr", "typeString": "struct IPriceOracle.OracleAverageQuery memory"}}, "id": 20304, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "variable", "nodeType": "MemberAccess", "referencedDeclaration": 20174, "src": "2557:14:22", "typeDescriptions": {"typeIdentifier": "t_enum$_Variable_$20154", "typeString": "enum IPriceOracle.Variable"}}, {"id": 20305, "name": "latestIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20271, "src": "2573:11:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 20306, "name": "query", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20269, "src": "2586:5:22", "typeDescriptions": {"typeIdentifier": "t_struct$_OracleAverageQuery_$20179_memory_ptr", "typeString": "struct IPriceOracle.OracleAverageQuery memory"}}, "id": 20307, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ago", "nodeType": "MemberAccess", "referencedDeclaration": 20178, "src": "2586:9:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$", "typeString": "mapping(uint256 => bytes32)"}, {"typeIdentifier": "t_enum$_Variable_$20154", "typeString": "enum IPriceOracle.Variable"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 20301, "name": "getPastAccumulator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20534, "src": "2529:18:22", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_mapping$_t_uint256_$_t_bytes32_$_$_t_enum$_Variable_$20154_$_t_uint256_$_t_uint256_$returns$_t_int256_$", "typeString": "function (mapping(uint256 => bytes32),enum IPriceOracle.Variable,uint256,uint256) view returns (int256)"}}, "id": 20308, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2529:67:22", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "VariableDeclarationStatement", "src": "2505:91:22"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 20321, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 20314, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20312, "name": "endAccumulator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20300, "src": "2643:14:22", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 20313, "name": "beginAccumulator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20286, "src": "2660:16:22", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "2643:33:22", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 20315, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "2642:35:22", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"arguments": [{"expression": {"id": 20318, "name": "query", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20269, "src": "2687:5:22", "typeDescriptions": {"typeIdentifier": "t_struct$_OracleAverageQuery_$20179_memory_ptr", "typeString": "struct IPriceOracle.OracleAverageQuery memory"}}, "id": 20319, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "secs", "nodeType": "MemberAccess", "referencedDeclaration": 20176, "src": "2687:10:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 20317, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2680:6:22", "typeDescriptions": {"typeIdentifier": "t_type$_t_int256_$", "typeString": "type(int256)"}, "typeName": {"id": 20316, "name": "int256", "nodeType": "ElementaryTypeName", "src": "2680:6:22", "typeDescriptions": {}}}, "id": 20320, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2680:18:22", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "2642:56:22", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 20310, "name": "LogCompression", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8390, "src": "2613:14:22", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_LogCompression_$8390_$", "typeString": "type(library LogCompression)"}}, "id": 20311, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "fromLowResLog", "nodeType": "MemberAccess", "referencedDeclaration": 8389, "src": "2613:28:22", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$", "typeString": "function (int256) pure returns (uint256)"}}, "id": 20322, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2613:86:22", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 20275, "id": 20323, "nodeType": "Return", "src": "2606:93:22"}]}, "documentation": {"id": 20263, "nodeType": "StructuredDocumentation", "src": "2019:89:22", "text": " @dev Returns the time average weighted price corresponding to `query`."}, "functionSelector": "79eaef82", "id": 20325, "implemented": true, "kind": "function", "modifiers": [], "name": "getTimeWeightedAverage", "nodeType": "FunctionDefinition", "parameters": {"id": 20272, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20267, "mutability": "mutable", "name": "samples", "nodeType": "VariableDeclaration", "scope": 20325, "src": "2154:43:22", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$", "typeString": "mapping(uint256 => bytes32)"}, "typeName": {"id": 20266, "keyType": {"id": 20264, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2162:7:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Mapping", "src": "2154:27:22", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$", "typeString": "mapping(uint256 => bytes32)"}, "valueType": {"id": 20265, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "2173:7:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}}, "visibility": "internal"}, {"constant": false, "id": 20269, "mutability": "mutable", "name": "query", "nodeType": "VariableDeclaration", "scope": 20325, "src": "2207:44:22", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_OracleAverageQuery_$20179_memory_ptr", "typeString": "struct IPriceOracle.OracleAverageQuery"}, "typeName": {"id": 20268, "name": "IPriceOracle.OracleAverageQuery", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 20179, "src": "2207:31:22", "typeDescriptions": {"typeIdentifier": "t_struct$_OracleAverageQuery_$20179_storage_ptr", "typeString": "struct IPriceOracle.OracleAverageQuery"}}, "visibility": "internal"}, {"constant": false, "id": 20271, "mutability": "mutable", "name": "latestIndex", "nodeType": "VariableDeclaration", "scope": 20325, "src": "2261:19:22", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20270, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2261:7:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2144:142:22"}, "returnParameters": {"id": 20275, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20274, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 20325, "src": "2310:7:22", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20273, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2310:7:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2309:9:22"}, "scope": 20652, "src": "2113:593:22", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 20533, "nodeType": "Block", "src": "3902:3926:22", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 20345, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 20342, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "4012:5:22", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 20343, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "4012:15:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 20344, "name": "ago", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20336, "src": "4031:3:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4012:22:22", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 20346, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11695, "src": "4036:6:22", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$11695_$", "typeString": "type(library Errors)"}}, "id": 20347, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ORACLE_INVALID_SECONDS_QUERY", "nodeType": "MemberAccess", "referencedDeclaration": 11415, "src": "4036:35:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 20341, "name": "_require", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11290, "src": "4003:8:22", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 20348, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4003:69:22", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20349, "nodeType": "ExpressionStatement", "src": "4003:69:22"}, {"assignments": [20351], "declarations": [{"constant": false, "id": 20351, "mutability": "mutable", "name": "lookUpTime", "nodeType": "VariableDeclaration", "scope": 20533, "src": "4082:18:22", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20350, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4082:7:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 20356, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 20355, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 20352, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "4103:5:22", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 20353, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "4103:15:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 20354, "name": "ago", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20336, "src": "4121:3:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4103:21:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "4082:42:22"}, {"assignments": [20358], "declarations": [{"constant": false, "id": 20358, "mutability": "mutable", "name": "latestSample", "nodeType": "VariableDeclaration", "scope": 20533, "src": "4135:20:22", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 20357, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "4135:7:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 20362, "initialValue": {"baseExpression": {"id": 20359, "name": "samples", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20330, "src": "4158:7:22", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$", "typeString": "mapping(uint256 => bytes32)"}}, "id": 20361, "indexExpression": {"id": 20360, "name": "latestIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20334, "src": "4166:11:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4158:20:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "4135:43:22"}, {"assignments": [20364], "declarations": [{"constant": false, "id": 20364, "mutability": "mutable", "name": "latestTimestamp", "nodeType": "VariableDeclaration", "scope": 20533, "src": "4188:23:22", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20363, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4188:7:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 20368, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 20365, "name": "latestSample", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20358, "src": "4214:12:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 20366, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "referencedDeclaration": 20845, "src": "4214:22:22", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (uint256)"}}, "id": 20367, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4214:24:22", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "4188:50:22"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 20372, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20370, "name": "latestTimestamp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20364, "src": "4373:15:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 20371, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4391:1:22", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "4373:19:22", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 20373, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11695, "src": "4394:6:22", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$11695_$", "typeString": "type(library Errors)"}}, "id": 20374, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ORACLE_NOT_INITIALIZED", "nodeType": "MemberAccess", "referencedDeclaration": 11418, "src": "4394:29:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 20369, "name": "_require", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11290, "src": "4364:8:22", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 20375, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4364:60:22", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20376, "nodeType": "ExpressionStatement", "src": "4364:60:22"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 20379, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20377, "name": "latestTimestamp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20364, "src": "4439:15:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"id": 20378, "name": "lookUpTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20351, "src": "4458:10:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4439:29:22", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 20531, "nodeType": "Block", "src": "5056:2766:22", "statements": [{"assignments": [20404], "declarations": [{"constant": false, "id": 20404, "mutability": "mutable", "name": "bufferLength", "nodeType": "VariableDeclaration", "scope": 20531, "src": "5310:20:22", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20403, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5310:7:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 20405, "nodeType": "VariableDeclarationStatement", "src": "5310:20:22"}, {"assignments": [20407], "declarations": [{"constant": false, "id": 20407, "mutability": "mutable", "name": "oldestIndex", "nodeType": "VariableDeclaration", "scope": 20531, "src": "5344:19:22", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20406, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5344:7:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 20411, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 20408, "name": "latestIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20334, "src": "5366:11:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 20409, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "next", "nodeType": "MemberAccess", "referencedDeclaration": 14589, "src": "5366:16:22", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256) pure returns (uint256)"}}, "id": 20410, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5366:18:22", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "5344:40:22"}, {"id": 20459, "nodeType": "Block", "src": "5398:1072:22", "statements": [{"assignments": [20413], "declarations": [{"constant": false, "id": 20413, "mutability": "mutable", "name": "oldestSample", "nodeType": "VariableDeclaration", "scope": 20459, "src": "5486:20:22", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 20412, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "5486:7:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 20417, "initialValue": {"baseExpression": {"id": 20414, "name": "samples", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20330, "src": "5509:7:22", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$", "typeString": "mapping(uint256 => bytes32)"}}, "id": 20416, "indexExpression": {"id": 20415, "name": "oldestIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20407, "src": "5517:11:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5509:20:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "5486:43:22"}, {"assignments": [20419], "declarations": [{"constant": false, "id": 20419, "mutability": "mutable", "name": "oldestTimestamp", "nodeType": "VariableDeclaration", "scope": 20459, "src": "5547:23:22", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20418, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5547:7:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 20423, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 20420, "name": "oldestSample", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20413, "src": "5573:12:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 20421, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "referencedDeclaration": 20845, "src": "5573:22:22", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (uint256)"}}, "id": 20422, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5573:24:22", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "5547:50:22"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 20426, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20424, "name": "oldestTimestamp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20419, "src": "5620:15:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 20425, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5638:1:22", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "5620:19:22", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 20449, "nodeType": "Block", "src": "5817:456:22", "statements": [{"expression": {"id": 20435, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20433, "name": "bufferLength", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20404, "src": "6098:12:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 20434, "name": "oldestIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20407, "src": "6113:11:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6098:26:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 20436, "nodeType": "ExpressionStatement", "src": "6098:26:22"}, {"expression": {"id": 20439, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20437, "name": "oldestIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20407, "src": "6177:11:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 20438, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6191:1:22", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "6177:15:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 20440, "nodeType": "ExpressionStatement", "src": "6177:15:22"}, {"expression": {"id": 20447, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20441, "name": "oldestTimestamp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20419, "src": "6214:15:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"baseExpression": {"id": 20442, "name": "samples", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20330, "src": "6232:7:22", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$", "typeString": "mapping(uint256 => bytes32)"}}, "id": 20444, "indexExpression": {"hexValue": "30", "id": 20443, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6240:1:22", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6232:10:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 20445, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "referencedDeclaration": 20845, "src": "6232:20:22", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (uint256)"}}, "id": 20446, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6232:22:22", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6214:40:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 20448, "nodeType": "ExpressionStatement", "src": "6214:40:22"}]}, "id": 20450, "nodeType": "IfStatement", "src": "5616:657:22", "trueBody": {"id": 20432, "nodeType": "Block", "src": "5641:170:22", "statements": [{"expression": {"id": 20430, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20427, "name": "bufferLength", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20404, "src": "5766:12:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 20428, "name": "Buffer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14628, "src": "5781:6:22", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Buffer_$14628_$", "typeString": "type(library Buffer)"}}, "id": 20429, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "SIZE", "nodeType": "MemberAccess", "referencedDeclaration": 14561, "src": "5781:11:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5766:26:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 20431, "nodeType": "ExpressionStatement", "src": "5766:26:22"}]}}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 20454, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20452, "name": "oldestTimestamp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20419, "src": "6396:15:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"id": 20453, "name": "lookUpTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20351, "src": "6415:10:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6396:29:22", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 20455, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11695, "src": "6427:6:22", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$11695_$", "typeString": "type(library Errors)"}}, "id": 20456, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ORACLE_QUERY_TOO_OLD", "nodeType": "MemberAccess", "referencedDeclaration": 11421, "src": "6427:27:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 20451, "name": "_require", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11290, "src": "6387:8:22", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 20457, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6387:68:22", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20458, "nodeType": "ExpressionStatement", "src": "6387:68:22"}]}, {"assignments": [20461, 20463], "declarations": [{"constant": false, "id": 20461, "mutability": "mutable", "name": "prev", "nodeType": "VariableDeclaration", "scope": 20531, "src": "6572:12:22", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 20460, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "6572:7:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 20463, "mutability": "mutable", "name": "next", "nodeType": "VariableDeclaration", "scope": 20531, "src": "6586:12:22", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 20462, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "6586:7:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 20470, "initialValue": {"arguments": [{"id": 20465, "name": "samples", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20330, "src": "6620:7:22", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$", "typeString": "mapping(uint256 => bytes32)"}}, {"id": 20466, "name": "lookUpTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20351, "src": "6629:10:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 20467, "name": "oldestIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20407, "src": "6641:11:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 20468, "name": "bufferLength", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20404, "src": "6654:12:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$", "typeString": "mapping(uint256 => bytes32)"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 20464, "name": "findNearestSample", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20651, "src": "6602:17:22", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_mapping$_t_uint256_$_t_bytes32_$_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$", "typeString": "function (mapping(uint256 => bytes32),uint256,uint256,uint256) view returns (bytes32,bytes32)"}}, "id": 20469, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6602:65:22", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$", "typeString": "tuple(bytes32,bytes32)"}}, "nodeType": "VariableDeclarationStatement", "src": "6571:96:22"}, {"assignments": [20472], "declarations": [{"constant": false, "id": 20472, "mutability": "mutable", "name": "samplesTimeDiff", "nodeType": "VariableDeclaration", "scope": 20531, "src": "6793:23:22", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20471, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6793:7:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 20480, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 20479, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 20473, "name": "next", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20463, "src": "6819:4:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 20474, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "referencedDeclaration": 20845, "src": "6819:14:22", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (uint256)"}}, "id": 20475, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6819:16:22", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 20476, "name": "prev", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20461, "src": "6838:4:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 20477, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "referencedDeclaration": 20845, "src": "6838:14:22", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (uint256)"}}, "id": 20478, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6838:16:22", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6819:35:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6793:61:22"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 20483, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20481, "name": "samplesTimeDiff", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20472, "src": "6873:15:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 20482, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6891:1:22", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "6873:19:22", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 20529, "nodeType": "Block", "src": "7511:301:22", "statements": [{"expression": {"arguments": [{"id": 20526, "name": "variable", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20332, "src": "7788:8:22", "typeDescriptions": {"typeIdentifier": "t_enum$_Variable_$20154", "typeString": "enum IPriceOracle.Variable"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_enum$_Variable_$20154", "typeString": "enum IPriceOracle.Variable"}], "expression": {"id": 20524, "name": "prev", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20461, "src": "7771:4:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 20525, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "accumulator", "nodeType": "MemberAccess", "referencedDeclaration": 20831, "src": "7771:16:22", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_enum$_Variable_$20154_$returns$_t_int256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32,enum IPriceOracle.Variable) pure returns (int256)"}}, "id": 20527, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7771:26:22", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "functionReturnParameters": 20340, "id": 20528, "nodeType": "Return", "src": "7764:33:22"}]}, "id": 20530, "nodeType": "IfStatement", "src": "6869:943:22", "trueBody": {"id": 20523, "nodeType": "Block", "src": "6894:611:22", "statements": [{"assignments": [20485], "declarations": [{"constant": false, "id": 20485, "mutability": "mutable", "name": "samplesAccDiff", "nodeType": "VariableDeclaration", "scope": 20523, "src": "7230:21:22", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 20484, "name": "int256", "nodeType": "ElementaryTypeName", "src": "7230:6:22", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 20495, "initialValue": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 20494, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 20488, "name": "variable", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20332, "src": "7271:8:22", "typeDescriptions": {"typeIdentifier": "t_enum$_Variable_$20154", "typeString": "enum IPriceOracle.Variable"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_enum$_Variable_$20154", "typeString": "enum IPriceOracle.Variable"}], "expression": {"id": 20486, "name": "next", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20463, "src": "7254:4:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 20487, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "accumulator", "nodeType": "MemberAccess", "referencedDeclaration": 20831, "src": "7254:16:22", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_enum$_Variable_$20154_$returns$_t_int256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32,enum IPriceOracle.Variable) pure returns (int256)"}}, "id": 20489, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7254:26:22", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"arguments": [{"id": 20492, "name": "variable", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20332, "src": "7300:8:22", "typeDescriptions": {"typeIdentifier": "t_enum$_Variable_$20154", "typeString": "enum IPriceOracle.Variable"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_enum$_Variable_$20154", "typeString": "enum IPriceOracle.Variable"}], "expression": {"id": 20490, "name": "prev", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20461, "src": "7283:4:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 20491, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "accumulator", "nodeType": "MemberAccess", "referencedDeclaration": 20831, "src": "7283:16:22", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_enum$_Variable_$20154_$returns$_t_int256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32,enum IPriceOracle.Variable) pure returns (int256)"}}, "id": 20493, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7283:26:22", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "7254:55:22", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "VariableDeclarationStatement", "src": "7230:79:22"}, {"assignments": [20497], "declarations": [{"constant": false, "id": 20497, "mutability": "mutable", "name": "elapsed", "nodeType": "VariableDeclaration", "scope": 20523, "src": "7327:15:22", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20496, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7327:7:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 20503, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 20502, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20498, "name": "lookUpTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20351, "src": "7345:10:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 20499, "name": "prev", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20461, "src": "7358:4:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 20500, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "referencedDeclaration": 20845, "src": "7358:14:22", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (uint256)"}}, "id": 20501, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7358:16:22", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7345:29:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "7327:47:22"}, {"expression": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 20521, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 20506, "name": "variable", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20332, "src": "7416:8:22", "typeDescriptions": {"typeIdentifier": "t_enum$_Variable_$20154", "typeString": "enum IPriceOracle.Variable"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_enum$_Variable_$20154", "typeString": "enum IPriceOracle.Variable"}], "expression": {"id": 20504, "name": "prev", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20461, "src": "7399:4:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 20505, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "accumulator", "nodeType": "MemberAccess", "referencedDeclaration": 20831, "src": "7399:16:22", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_enum$_Variable_$20154_$returns$_t_int256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32,enum IPriceOracle.Variable) pure returns (int256)"}}, "id": 20507, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7399:26:22", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"components": [{"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 20519, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 20513, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20508, "name": "samplesAccDiff", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20485, "src": "7430:14:22", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"arguments": [{"id": 20511, "name": "elapsed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20497, "src": "7454:7:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 20510, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "7447:6:22", "typeDescriptions": {"typeIdentifier": "t_type$_t_int256_$", "typeString": "type(int256)"}, "typeName": {"id": 20509, "name": "int256", "nodeType": "ElementaryTypeName", "src": "7447:6:22", "typeDescriptions": {}}}, "id": 20512, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7447:15:22", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "7430:32:22", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 20514, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "7429:34:22", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"arguments": [{"id": 20517, "name": "samplesTimeDiff", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20472, "src": "7473:15:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 20516, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "7466:6:22", "typeDescriptions": {"typeIdentifier": "t_type$_t_int256_$", "typeString": "type(int256)"}, "typeName": {"id": 20515, "name": "int256", "nodeType": "ElementaryTypeName", "src": "7466:6:22", "typeDescriptions": {}}}, "id": 20518, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7466:23:22", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "7429:60:22", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 20520, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "7428:62:22", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "7399:91:22", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "functionReturnParameters": 20340, "id": 20522, "nodeType": "Return", "src": "7392:98:22"}]}}]}, "id": 20532, "nodeType": "IfStatement", "src": "4435:3387:22", "trueBody": {"id": 20402, "nodeType": "Block", "src": "4470:580:22", "statements": [{"assignments": [20381], "declarations": [{"constant": false, "id": 20381, "mutability": "mutable", "name": "elapsed", "nodeType": "VariableDeclaration", "scope": 20402, "src": "4885:15:22", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20380, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4885:7:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 20385, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 20384, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20382, "name": "lookUpTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20351, "src": "4903:10:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 20383, "name": "latestTimestamp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20364, "src": "4916:15:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4903:28:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "4885:46:22"}, {"expression": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 20400, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 20388, "name": "variable", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20332, "src": "4977:8:22", "typeDescriptions": {"typeIdentifier": "t_enum$_Variable_$20154", "typeString": "enum IPriceOracle.Variable"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_enum$_Variable_$20154", "typeString": "enum IPriceOracle.Variable"}], "expression": {"id": 20386, "name": "latestSample", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20358, "src": "4952:12:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 20387, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "accumulator", "nodeType": "MemberAccess", "referencedDeclaration": 20831, "src": "4952:24:22", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_enum$_Variable_$20154_$returns$_t_int256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32,enum IPriceOracle.Variable) pure returns (int256)"}}, "id": 20389, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4952:34:22", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"components": [{"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 20398, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 20392, "name": "variable", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20332, "src": "5011:8:22", "typeDescriptions": {"typeIdentifier": "t_enum$_Variable_$20154", "typeString": "enum IPriceOracle.Variable"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_enum$_Variable_$20154", "typeString": "enum IPriceOracle.Variable"}], "expression": {"id": 20390, "name": "latestSample", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20358, "src": "4990:12:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 20391, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "instant", "nodeType": "MemberAccess", "referencedDeclaration": 20793, "src": "4990:20:22", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_enum$_Variable_$20154_$returns$_t_int256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32,enum IPriceOracle.Variable) pure returns (int256)"}}, "id": 20393, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4990:30:22", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"arguments": [{"id": 20396, "name": "elapsed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20381, "src": "5030:7:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 20395, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5023:6:22", "typeDescriptions": {"typeIdentifier": "t_type$_t_int256_$", "typeString": "type(int256)"}, "typeName": {"id": 20394, "name": "int256", "nodeType": "ElementaryTypeName", "src": "5023:6:22", "typeDescriptions": {}}}, "id": 20397, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5023:15:22", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "4990:48:22", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 20399, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4989:50:22", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "4952:87:22", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "functionReturnParameters": 20340, "id": 20401, "nodeType": "Return", "src": "4945:94:22"}]}}]}, "documentation": {"id": 20326, "nodeType": "StructuredDocumentation", "src": "2712:979:22", "text": " @dev Returns the value of the accumulator for `variable` `ago` seconds ago. `latestIndex` must be the index of\n the latest sample in the buffer.\n Reverts under the following conditions:\n  - if the buffer is empty.\n  - if querying past information and the buffer has not been fully initialized.\n  - if querying older information than available in the buffer. Note that a full buffer guarantees queries for the\n    past 34 hours will not revert.\n If requesting information for a timestamp later than the latest one, it is extrapolated using the latest\n available data.\n When no exact information is available for the requested past timestamp (as usually happens, since at most one\n timestamp is stored every two minutes), it is estimated by performing linear interpolation using the closest\n values. This process is guaranteed to complete performing at most 10 storage reads."}, "functionSelector": "34171a85", "id": 20534, "implemented": true, "kind": "function", "modifiers": [], "name": "getPastAccumulator", "nodeType": "FunctionDefinition", "parameters": {"id": 20337, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20330, "mutability": "mutable", "name": "samples", "nodeType": "VariableDeclaration", "scope": 20534, "src": "3733:43:22", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$", "typeString": "mapping(uint256 => bytes32)"}, "typeName": {"id": 20329, "keyType": {"id": 20327, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3741:7:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Mapping", "src": "3733:27:22", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$", "typeString": "mapping(uint256 => bytes32)"}, "valueType": {"id": 20328, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "3752:7:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}}, "visibility": "internal"}, {"constant": false, "id": 20332, "mutability": "mutable", "name": "variable", "nodeType": "VariableDeclaration", "scope": 20534, "src": "3786:30:22", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_Variable_$20154", "typeString": "enum IPriceOracle.Variable"}, "typeName": {"id": 20331, "name": "IPriceOracle.Variable", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 20154, "src": "3786:21:22", "typeDescriptions": {"typeIdentifier": "t_enum$_Variable_$20154", "typeString": "enum IPriceOracle.Variable"}}, "visibility": "internal"}, {"constant": false, "id": 20334, "mutability": "mutable", "name": "latestIndex", "nodeType": "VariableDeclaration", "scope": 20534, "src": "3826:19:22", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20333, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3826:7:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 20336, "mutability": "mutable", "name": "ago", "nodeType": "VariableDeclaration", "scope": 20534, "src": "3855:11:22", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20335, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3855:7:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3723:149:22"}, "returnParameters": {"id": 20340, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20339, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 20534, "src": "3894:6:22", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 20338, "name": "int256", "nodeType": "ElementaryTypeName", "src": "3894:6:22", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "src": "3893:8:22"}, "scope": 20652, "src": "3696:4132:22", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 20650, "nodeType": "Block", "src": "8492:2399:22", "statements": [{"assignments": [20553], "declarations": [{"constant": false, "id": 20553, "mutability": "mutable", "name": "low", "nodeType": "VariableDeclaration", "scope": 20650, "src": "8987:11:22", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20552, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8987:7:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 20555, "initialValue": {"hexValue": "30", "id": 20554, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9001:1:22", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "8987:15:22"}, {"assignments": [20557], "declarations": [{"constant": false, "id": 20557, "mutability": "mutable", "name": "high", "nodeType": "VariableDeclaration", "scope": 20650, "src": "9012:12:22", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20556, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9012:7:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 20561, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 20560, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20558, "name": "length", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20545, "src": "9027:6:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"hexValue": "31", "id": 20559, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9036:1:22", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "9027:10:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "9012:25:22"}, {"assignments": [20563], "declarations": [{"constant": false, "id": 20563, "mutability": "mutable", "name": "mid", "nodeType": "VariableDeclaration", "scope": 20650, "src": "9047:11:22", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20562, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9047:7:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 20564, "nodeType": "VariableDeclarationStatement", "src": "9047:11:22"}, {"assignments": [20566], "declarations": [{"constant": false, "id": 20566, "mutability": "mutable", "name": "sample", "nodeType": "VariableDeclaration", "scope": 20650, "src": "9356:14:22", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 20565, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "9356:7:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 20567, "nodeType": "VariableDeclarationStatement", "src": "9356:14:22"}, {"assignments": [20569], "declarations": [{"constant": false, "id": 20569, "mutability": "mutable", "name": "sampleTimestamp", "nodeType": "VariableDeclaration", "scope": 20650, "src": "9380:23:22", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20568, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9380:7:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 20570, "nodeType": "VariableDeclarationStatement", "src": "9380:23:22"}, {"body": {"id": 20629, "nodeType": "Block", "src": "9434:1242:22", "statements": [{"assignments": [20575], "declarations": [{"constant": false, "id": 20575, "mutability": "mutable", "name": "midWithoutOffset", "nodeType": "VariableDeclaration", "scope": 20629, "src": "9496:24:22", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20574, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9496:7:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 20582, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 20581, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 20578, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20576, "name": "high", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20557, "src": "9524:4:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 20577, "name": "low", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20553, "src": "9531:3:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9524:10:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 20579, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "9523:12:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"hexValue": "32", "id": 20580, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9538:1:22", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "src": "9523:16:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "9496:43:22"}, {"expression": {"id": 20588, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20583, "name": "mid", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20563, "src": "9674:3:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 20586, "name": "offset", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20543, "src": "9701:6:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 20584, "name": "midWithoutOffset", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20575, "src": "9680:16:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 20585, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 14607, "src": "9680:20:22", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 20587, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9680:28:22", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9674:34:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 20589, "nodeType": "ExpressionStatement", "src": "9674:34:22"}, {"expression": {"id": 20594, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20590, "name": "sample", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20566, "src": "9722:6:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"baseExpression": {"id": 20591, "name": "samples", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20539, "src": "9731:7:22", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$", "typeString": "mapping(uint256 => bytes32)"}}, "id": 20593, "indexExpression": {"id": 20592, "name": "mid", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20563, "src": "9739:3:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9731:12:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "9722:21:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 20595, "nodeType": "ExpressionStatement", "src": "9722:21:22"}, {"expression": {"id": 20600, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20596, "name": "sampleTimestamp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20569, "src": "9757:15:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 20597, "name": "sample", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20566, "src": "9775:6:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 20598, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "referencedDeclaration": 20845, "src": "9775:16:22", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (uint256)"}}, "id": 20599, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9775:18:22", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9757:36:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 20601, "nodeType": "ExpressionStatement", "src": "9757:36:22"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 20604, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20602, "name": "sampleTimestamp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20569, "src": "9812:15:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 20603, "name": "lookUpDate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20541, "src": "9830:10:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9812:28:22", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 20614, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20612, "name": "sampleTimestamp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20569, "src": "10025:15:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"id": 20613, "name": "lookUpDate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20541, "src": "10043:10:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10025:28:22", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 20626, "nodeType": "Block", "src": "10470:196:22", "statements": [{"expression": {"components": [{"id": 20622, "name": "sample", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20566, "src": "10636:6:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 20623, "name": "sample", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20566, "src": "10644:6:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "id": 20624, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "10635:16:22", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$", "typeString": "tuple(bytes32,bytes32)"}}, "functionReturnParameters": 20551, "id": 20625, "nodeType": "Return", "src": "10628:23:22"}]}, "id": 20627, "nodeType": "IfStatement", "src": "10021:645:22", "trueBody": {"id": 20621, "nodeType": "Block", "src": "10055:409:22", "statements": [{"expression": {"id": 20619, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20615, "name": "high", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20557, "src": "10422:4:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 20618, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20616, "name": "midWithoutOffset", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20575, "src": "10429:16:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"hexValue": "31", "id": 20617, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10448:1:22", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "10429:20:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10422:27:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 20620, "nodeType": "ExpressionStatement", "src": "10422:27:22"}]}}, "id": 20628, "nodeType": "IfStatement", "src": "9808:858:22", "trueBody": {"id": 20611, "nodeType": "Block", "src": "9842:173:22", "statements": [{"expression": {"id": 20609, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20605, "name": "low", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20553, "src": "9974:3:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 20608, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20606, "name": "midWithoutOffset", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20575, "src": "9980:16:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"hexValue": "31", "id": 20607, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9999:1:22", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "9980:20:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9974:26:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 20610, "nodeType": "ExpressionStatement", "src": "9974:26:22"}]}}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 20573, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20571, "name": "low", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20553, "src": "9421:3:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"id": 20572, "name": "high", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20557, "src": "9428:4:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9421:11:22", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 20630, "nodeType": "WhileStatement", "src": "9414:1262:22"}, {"expression": {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 20633, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20631, "name": "sampleTimestamp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20569, "src": "10792:15:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 20632, "name": "lookUpDate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20541, "src": "10810:10:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10792:28:22", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"components": [{"baseExpression": {"id": 20641, "name": "samples", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20539, "src": "10856:7:22", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$", "typeString": "mapping(uint256 => bytes32)"}}, "id": 20645, "indexExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 20642, "name": "mid", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20563, "src": "10864:3:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 20643, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "prev", "nodeType": "MemberAccess", "referencedDeclaration": 14575, "src": "10864:8:22", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256) pure returns (uint256)"}}, "id": 20644, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10864:10:22", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10856:19:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 20646, "name": "sample", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20566, "src": "10877:6:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "id": 20647, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "10855:29:22", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$", "typeString": "tuple(bytes32,bytes32)"}}, "id": 20648, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "10792:92:22", "trueExpression": {"components": [{"id": 20634, "name": "sample", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20566, "src": "10824:6:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"baseExpression": {"id": 20635, "name": "samples", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20539, "src": "10832:7:22", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$", "typeString": "mapping(uint256 => bytes32)"}}, "id": 20639, "indexExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 20636, "name": "mid", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20563, "src": "10840:3:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 20637, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "next", "nodeType": "MemberAccess", "referencedDeclaration": 14589, "src": "10840:8:22", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256) pure returns (uint256)"}}, "id": 20638, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10840:10:22", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10832:19:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "id": 20640, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "10823:29:22", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$", "typeString": "tuple(bytes32,bytes32)"}}, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$", "typeString": "tuple(bytes32,bytes32)"}}, "functionReturnParameters": 20551, "id": 20649, "nodeType": "Return", "src": "10785:99:22"}]}, "documentation": {"id": 20535, "nodeType": "StructuredDocumentation", "src": "7834:442:22", "text": " @dev Finds the two samples with timestamps before and after `lookUpDate`. If one of the samples matches exactly,\n both `prev` and `next` will be it. `offset` is the index of the oldest sample in the buffer. `length` is the size\n of the samples list.\n Assumes `lookUpDate` is greater or equal than the timestamp of the oldest sample, and less or equal than the\n timestamp of the latest sample."}, "functionSelector": "3d60fb0a", "id": 20651, "implemented": true, "kind": "function", "modifiers": [], "name": "findNearestSample", "nodeType": "FunctionDefinition", "parameters": {"id": 20546, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20539, "mutability": "mutable", "name": "samples", "nodeType": "VariableDeclaration", "scope": 20651, "src": "8317:43:22", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$", "typeString": "mapping(uint256 => bytes32)"}, "typeName": {"id": 20538, "keyType": {"id": 20536, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8325:7:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Mapping", "src": "8317:27:22", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$", "typeString": "mapping(uint256 => bytes32)"}, "valueType": {"id": 20537, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "8336:7:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}}, "visibility": "internal"}, {"constant": false, "id": 20541, "mutability": "mutable", "name": "lookUpDate", "nodeType": "VariableDeclaration", "scope": 20651, "src": "8370:18:22", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20540, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8370:7:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 20543, "mutability": "mutable", "name": "offset", "nodeType": "VariableDeclaration", "scope": 20651, "src": "8398:14:22", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20542, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8398:7:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 20545, "mutability": "mutable", "name": "length", "nodeType": "VariableDeclaration", "scope": 20651, "src": "8422:14:22", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20544, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8422:7:22", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "8307:135:22"}, "returnParameters": {"id": 20551, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20548, "mutability": "mutable", "name": "prev", "nodeType": "VariableDeclaration", "scope": 20651, "src": "8464:12:22", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 20547, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "8464:7:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 20550, "mutability": "mutable", "name": "next", "nodeType": "VariableDeclaration", "scope": 20651, "src": "8478:12:22", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 20549, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "8478:7:22", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "8463:28:22"}, "scope": 20652, "src": "8281:2610:22", "stateMutability": "view", "virtual": false, "visibility": "public"}], "scope": 20653, "src": "1379:9514:22"}], "src": "688:10206:22"}, "bytecode": "610b26610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c80630397bee01461005b57806334171a85146100845780633d60fb0a1461009757806379eaef82146100b8575b600080fd5b61006e6100693660046109bd565b6100cb565b60405161007b9190610ae7565b60405180910390f35b61006e6100923660046109f1565b610111565b6100aa6100a5366004610aa8565b61028b565b60405161007b929190610ad9565b61006e6100c6366004610a2b565b610363565b6000818152602084905260408120546100f0826100e7836103c7565b116101396103db565b60006100fc82866103ed565b90506101078161043e565b9695505050505050565b6000610122824210156101386103db565b600083815260208690526040812054428490039161013f826103c7565b9050610150600082116101396103db565b82811161017c5780830380610165848a6103ed565b02610170848a610451565b01945050505050610283565b60008061018888610495565b600081815260208c905260408120549192506101a3826103c7565b905080156101b55761040093506101d4565b600080805260208d90526040812054939450926101d1906103c7565b90505b6101e38782111561013a6103db565b50506000806101f48c88858761028b565b915091506000610203836103c7565b61020c836103c7565b039050801561026e576000610221848e610451565b61022b848f610451565b0390506000610239856103c7565b8a039050828183028161024857fe5b0561025c8f8761045190919063ffffffff16565b019a5050505050505050505050610283565b610278838d610451565b985050505050505050505b949350505050565b6000808060001984018180805b83851161030b576002858501046102af818b61049e565b600081815260208e9052604090205490945092506102cc836103c7565b91508a8210156102e157806001019550610305565b8a8211156102f457600181039450610305565b82839750975050505050505061035a565b50610298565b898110610333578a600061031e856104af565b81526020019081526020016000205482610350565b818b600061034086610495565b8152602001908152602001600020545b9650965050505050505b94509492505050565b600061037983602001516000141561013c6103db565b6000610395858560000151858760200151886040015101610111565b905060006103ad868660000151868860400151610111565b90506101078560200151838303816103c157fe5b0561043e565b60006103d382826104bc565b90505b919050565b816103e9576103e9816104c6565b5050565b6000808260028111156103fc57fe5b14156104125761040b83610519565b9050610438565b600182600281111561042057fe5b141561042f5761040b83610526565b61040b83610533565b92915050565b60006103d3655af3107a40008302610540565b60008082600281111561046057fe5b141561046f5761040b8361091e565b600182600281111561047d57fe5b141561048c5761040b8361092b565b61040b83610938565b60006103d38260015b60006104008383015b069392505050565b60006103d3826001610945565b1c637fffffff1690565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b60006103d38260ea610954565b60006103d382609f610954565b60006103d3826054610954565b600061056f680238fd42c5cf03ffff198312158015610568575068070c1cc73b00c800008313155b60096103db565b60008212156105a35761058482600003610540565b6ec097ce7bc90715b34b9f10000000008161059b57fe5b0590506103d6565b60006806f05b59d3b200000083126105e357506806f05b59d3b1ffffff1990910190770195e54c5dd42177f53a27172fa9ec630262827000000000610619565b6803782dace9d9000000831261061557506803782dace9d8ffffff19909101906b1425982cf597cd205cef7380610619565b5060015b6064929092029168056bc75e2d6310000068ad78ebc5ac6200000084126106695768ad78ebc5ac61ffffff199093019268056bc75e2d631000006e01855144814a7ff805980ff008400082020590505b6856bc75e2d63100000084126106a5576856bc75e2d630ffffff199093019268056bc75e2d631000006b02df0ab5a80a22c61ab5a70082020590505b682b5e3af16b1880000084126106df57682b5e3af16b187fffff199093019268056bc75e2d63100000693f1fce3da636ea5cf85082020590505b6815af1d78b58c4000008412610719576815af1d78b58c3fffff199093019268056bc75e2d63100000690127fa27722cc06cc5e282020590505b680ad78ebc5ac6200000841261075257680ad78ebc5ac61fffff199093019268056bc75e2d6310000068280e60114edb805d0382020590505b68056bc75e2d63100000841261078b5768056bc75e2d630fffff199093019268056bc75e2d63100000680ebc5fb4174612111082020590505b6802b5e3af16b188000084126107c4576802b5e3af16b187ffff199093019268056bc75e2d631000006808f00f760a4b2db55d82020590505b68015af1d78b58c4000084126107fd5768015af1d78b58c3ffff199093019268056bc75e2d631000006806f5f177578893793782020590505b68056bc75e2d631000008481019085906002908280020505918201919050600368056bc75e2d631000008783020505918201919050600468056bc75e2d631000008783020505918201919050600568056bc75e2d631000008783020505918201919050600668056bc75e2d631000008783020505918201919050600768056bc75e2d631000008783020505918201919050600868056bc75e2d631000008783020505918201919050600968056bc75e2d631000008783020505918201919050600a68056bc75e2d631000008783020505918201919050600b68056bc75e2d631000008783020505918201919050600c68056bc75e2d631000008783020505918201919050606468056bc75e2d63100000848402058502059695505050505050565b60006103d38260b561097b565b60006103d382606a61097b565b60006103d382601f61097b565b600061040082840381016104a7565b600082821c623fffff16621fffff811361096e5780610283565b623fffff19179392505050565b600082821c661fffffffffffff16660fffffffffffff811361099d5780610283565b661fffffffffffff19179392505050565b8035600381106103d657600080fd5b6000806000606084860312156109d1578283fd5b833592506109e1602085016109ae565b9150604084013590509250925092565b60008060008060808587031215610a06578081fd5b84359350610a16602086016109ae565b93969395505050506040820135916060013590565b600080600083850360a0811215610a40578384fd5b843593506060601f1982011215610a55578283fd5b506040516060810181811067ffffffffffffffff82111715610a7357fe5b604052610a82602086016109ae565b815260408581013560208301526060860135908201529295929450505060809091013590565b60008060008060808587031215610abd578384fd5b5050823594602084013594506040840135936060013592509050565b918252602082015260400190565b9081526020019056fea264697066735822122079d9bb4b9613696a2ecd5ba3e0f530df3429acb928e6c86a2ef3c6364d49268164736f6c63430007060033", "bytecodeSha1": "ab5e45c1ce253c46ceb4d99c9243032336b5d68a", "compiler": {"evm_version": "berlin", "optimizer": {"enabled": true, "runs": 200}, "version": "0.7.6+commit.7338295f"}, "contractName": "QueryProcessor", "coverageMap": {"branches": {"20": {}, "22": {"QueryProcessor.findNearestSample": {"92": [9812, 9840, false], "93": [10025, 10053, false], "94": [10792, 10820, true]}, "QueryProcessor.getPastAccumulator": {"89": [4439, 4468, false], "90": [5620, 5639, false], "91": [6873, 6892, false]}}, "23": {"Samples.accumulator": {"108": [5180, 5224, false], "109": [5292, 5335, false]}, "Samples.instant": {"106": [4625, 4669, false], "107": [4738, 4781, false]}}, "30": {}, "35": {}, "37": {"WordCodec.decodeInt22": {"110": [12558, 12577, true]}, "WordCodec.decodeInt53": {"111": [13167, 13186, true]}}, "39": {"LogExpMath.exp": {"95": [7439, 7444, false], "96": [9117, 9124, false], "97": [9194, 9201, false], "98": [9742, 9749, false], "99": [9843, 9850, false], "100": [9944, 9951, false], "101": [10045, 10052, false], "102": [10146, 10153, false], "103": [10247, 10254, false], "104": [10348, 10355, false], "105": [10449, 10456, false]}}}, "statements": {"20": {"Buffer.add": {"31": [1504, 1534]}, "Buffer.next": {"30": [1276, 1296]}, "Buffer.prev": {"32": [1077, 1097]}, "Buffer.sub": {"86": [1743, 1780]}}, "22": {"QueryProcessor.findNearestSample": {"12": [9674, 9708], "13": [9722, 9743], "14": [9757, 9793], "15": [9974, 10000], "16": [10422, 10449], "17": [10628, 10651], "18": [10785, 10884]}, "QueryProcessor.getInstantValue": {"0": [1821, 1884], "1": [1954, 2006]}, "QueryProcessor.getPastAccumulator": {"2": [4003, 4072], "3": [4364, 4424], "4": [4945, 5039], "5": [5766, 5792], "6": [6177, 6192], "7": [6214, 6254], "8": [6098, 6124], "9": [6387, 6455], "10": [7392, 7490], "11": [7764, 7797]}, "QueryProcessor.getTimeWeightedAverage": {"19": [2329, 2378], "20": [2606, 2699]}}, "23": {"Samples._accLogBptPrice": {"84": [6629, 6681]}, "Samples._accLogInvariant": {"85": [7116, 7168]}, "Samples._accLogPairPrice": {"83": [6143, 6196]}, "Samples._instLogBptPrice": {"35": [6388, 6441]}, "Samples._instLogInvariant": {"36": [6874, 6927]}, "Samples._instLogPairPrice": {"34": [5899, 5953]}, "Samples.accumulator": {"27": [5240, 5271], "28": [5351, 5381], "29": [5471, 5502]}, "Samples.instant": {"23": [4685, 4717], "24": [4797, 4828], "25": [4918, 4950]}, "Samples.timestamp": {"21": [5660, 5705]}}, "30": {"_require": {"22": [946, 964]}}, "35": {"LogCompression.fromLowResLog": {"26": [2669, 2732]}}, "37": {"WordCodec.decodeInt22": {"87": [12551, 12615]}, "WordCodec.decodeInt53": {"88": [13160, 13224]}, "WordCodec.decodeUint31": {"33": [11156, 11197]}}, "39": {"LogExpMath.exp": {"37": [7335, 7424], "38": [7741, 7777], "39": [9140, 9147], "40": [9217, 9224], "41": [9281, 9292], "42": [9483, 9491], "43": [9765, 9772], "44": [9786, 9819], "45": [9866, 9873], "46": [9887, 9920], "47": [9967, 9974], "48": [9988, 10021], "49": [10068, 10075], "50": [10089, 10122], "51": [10169, 10176], "52": [10190, 10223], "53": [10270, 10277], "54": [10291, 10324], "55": [10371, 10378], "56": [10392, 10425], "57": [10472, 10479], "58": [10493, 10526], "59": [11069, 11086], "60": [11323, 11355], "61": [11365, 11382], "62": [11393, 11425], "63": [11435, 11452], "64": [11463, 11495], "65": [11505, 11522], "66": [11533, 11565], "67": [11575, 11592], "68": [11603, 11635], "69": [11645, 11662], "70": [11673, 11705], "71": [11715, 11732], "72": [11743, 11775], "73": [11785, 11802], "74": [11813, 11845], "75": [11855, 11872], "76": [11883, 11916], "77": [11926, 11943], "78": [11954, 11987], "79": [11997, 12014], "80": [12025, 12058], "81": [12068, 12085], "82": [12586, 12643]}}}}, "dependencies": ["Buffer", "Errors", "LogCompression", "LogExpMath", "Samples", "WordCodec"], "deployedBytecode": "73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c80630397bee01461005b57806334171a85146100845780633d60fb0a1461009757806379eaef82146100b8575b600080fd5b61006e6100693660046109bd565b6100cb565b60405161007b9190610ae7565b60405180910390f35b61006e6100923660046109f1565b610111565b6100aa6100a5366004610aa8565b61028b565b60405161007b929190610ad9565b61006e6100c6366004610a2b565b610363565b6000818152602084905260408120546100f0826100e7836103c7565b116101396103db565b60006100fc82866103ed565b90506101078161043e565b9695505050505050565b6000610122824210156101386103db565b600083815260208690526040812054428490039161013f826103c7565b9050610150600082116101396103db565b82811161017c5780830380610165848a6103ed565b02610170848a610451565b01945050505050610283565b60008061018888610495565b600081815260208c905260408120549192506101a3826103c7565b905080156101b55761040093506101d4565b600080805260208d90526040812054939450926101d1906103c7565b90505b6101e38782111561013a6103db565b50506000806101f48c88858761028b565b915091506000610203836103c7565b61020c836103c7565b039050801561026e576000610221848e610451565b61022b848f610451565b0390506000610239856103c7565b8a039050828183028161024857fe5b0561025c8f8761045190919063ffffffff16565b019a5050505050505050505050610283565b610278838d610451565b985050505050505050505b949350505050565b6000808060001984018180805b83851161030b576002858501046102af818b61049e565b600081815260208e9052604090205490945092506102cc836103c7565b91508a8210156102e157806001019550610305565b8a8211156102f457600181039450610305565b82839750975050505050505061035a565b50610298565b898110610333578a600061031e856104af565b81526020019081526020016000205482610350565b818b600061034086610495565b8152602001908152602001600020545b9650965050505050505b94509492505050565b600061037983602001516000141561013c6103db565b6000610395858560000151858760200151886040015101610111565b905060006103ad868660000151868860400151610111565b90506101078560200151838303816103c157fe5b0561043e565b60006103d382826104bc565b90505b919050565b816103e9576103e9816104c6565b5050565b6000808260028111156103fc57fe5b14156104125761040b83610519565b9050610438565b600182600281111561042057fe5b141561042f5761040b83610526565b61040b83610533565b92915050565b60006103d3655af3107a40008302610540565b60008082600281111561046057fe5b141561046f5761040b8361091e565b600182600281111561047d57fe5b141561048c5761040b8361092b565b61040b83610938565b60006103d38260015b60006104008383015b069392505050565b60006103d3826001610945565b1c637fffffff1690565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b60006103d38260ea610954565b60006103d382609f610954565b60006103d3826054610954565b600061056f680238fd42c5cf03ffff198312158015610568575068070c1cc73b00c800008313155b60096103db565b60008212156105a35761058482600003610540565b6ec097ce7bc90715b34b9f10000000008161059b57fe5b0590506103d6565b60006806f05b59d3b200000083126105e357506806f05b59d3b1ffffff1990910190770195e54c5dd42177f53a27172fa9ec630262827000000000610619565b6803782dace9d9000000831261061557506803782dace9d8ffffff19909101906b1425982cf597cd205cef7380610619565b5060015b6064929092029168056bc75e2d6310000068ad78ebc5ac6200000084126106695768ad78ebc5ac61ffffff199093019268056bc75e2d631000006e01855144814a7ff805980ff008400082020590505b6856bc75e2d63100000084126106a5576856bc75e2d630ffffff199093019268056bc75e2d631000006b02df0ab5a80a22c61ab5a70082020590505b682b5e3af16b1880000084126106df57682b5e3af16b187fffff199093019268056bc75e2d63100000693f1fce3da636ea5cf85082020590505b6815af1d78b58c4000008412610719576815af1d78b58c3fffff199093019268056bc75e2d63100000690127fa27722cc06cc5e282020590505b680ad78ebc5ac6200000841261075257680ad78ebc5ac61fffff199093019268056bc75e2d6310000068280e60114edb805d0382020590505b68056bc75e2d63100000841261078b5768056bc75e2d630fffff199093019268056bc75e2d63100000680ebc5fb4174612111082020590505b6802b5e3af16b188000084126107c4576802b5e3af16b187ffff199093019268056bc75e2d631000006808f00f760a4b2db55d82020590505b68015af1d78b58c4000084126107fd5768015af1d78b58c3ffff199093019268056bc75e2d631000006806f5f177578893793782020590505b68056bc75e2d631000008481019085906002908280020505918201919050600368056bc75e2d631000008783020505918201919050600468056bc75e2d631000008783020505918201919050600568056bc75e2d631000008783020505918201919050600668056bc75e2d631000008783020505918201919050600768056bc75e2d631000008783020505918201919050600868056bc75e2d631000008783020505918201919050600968056bc75e2d631000008783020505918201919050600a68056bc75e2d631000008783020505918201919050600b68056bc75e2d631000008783020505918201919050600c68056bc75e2d631000008783020505918201919050606468056bc75e2d63100000848402058502059695505050505050565b60006103d38260b561097b565b60006103d382606a61097b565b60006103d382601f61097b565b600061040082840381016104a7565b600082821c623fffff16621fffff811361096e5780610283565b623fffff19179392505050565b600082821c661fffffffffffff16660fffffffffffff811361099d5780610283565b661fffffffffffff19179392505050565b8035600381106103d657600080fd5b6000806000606084860312156109d1578283fd5b833592506109e1602085016109ae565b9150604084013590509250925092565b60008060008060808587031215610a06578081fd5b84359350610a16602086016109ae565b93969395505050506040820135916060013590565b600080600083850360a0811215610a40578384fd5b843593506060601f1982011215610a55578283fd5b506040516060810181811067ffffffffffffffff82111715610a7357fe5b604052610a82602086016109ae565b815260408581013560208301526060860135908201529295929450505060809091013590565b60008060008060808587031215610abd578384fd5b5050823594602084013594506040840135936060013592509050565b918252602082015260400190565b9081526020019056fea264697066735822122079d9bb4b9613696a2ecd5ba3e0f530df3429acb928e6c86a2ef3c6364d49268164736f6c63430007060033", "deployedSourceMap": "1379:9514:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1591:422;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3696:4132;;;;;;:::i;:::-;;:::i;8281:2610::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2113:593::-;;;;;;:::i;:::-;;:::i;1591:422::-;1761:7;1797:14;;;;;;;;;;;1821:63;1761:7;1830:18;1797:14;1830:16;:18::i;:::-;:22;6441:3:30;1821:8:22;:63::i;:::-;1895:22;1920:24;:6;1935:8;1920:14;:24::i;:::-;1895:49;;1961:45;1990:15;1961:28;:45::i;:::-;1954:52;1591:422;-1:-1:-1;;;;;;1591:422:22:o;3696:4132::-;3894:6;4003:69;4031:3;4012:15;:22;;6381:3:30;4003:8:22;:69::i;:::-;4082:18;4158:20;;;;;;;;;;;4103:15;:21;;;;4214:24;4158:20;4214:22;:24::i;:::-;4188:50;;4364:60;4391:1;4373:15;:19;6441:3:30;4364:8:22;:60::i;:::-;4458:10;4439:15;:29;4435:3387;;4903:28;;;;4990:30;:12;5011:8;4990:20;:30::i;:::-;:48;4952:34;:12;4977:8;4952:24;:34::i;:::-;:87;4945:94;;;;;;;;4435:3387;5310:20;5344:19;5366:18;:11;:16;:18::i;:::-;5486:20;5509;;;;;;;;;;;5344:40;;-1:-1:-1;5573:24:22;5509:20;5573:22;:24::i;:::-;5547:50;-1:-1:-1;5620:19:22;;5616:657;;899:4:20;5766:26:22;;5616:657;;;6191:1;6232:10;;;;;;;;;;;6113:11;;-1:-1:-1;6191:1:22;6232:22;;:20;:22::i;:::-;6214:40;;5616:657;6387:68;6415:10;6396:15;:29;;6499:3:30;6387:8:22;:68::i;:::-;4435:3387;;6572:12;6586;6602:65;6620:7;6629:10;6641:11;6654:12;6602:17;:65::i;:::-;6571:96;;;;6793:23;6838:16;:4;:14;:16::i;:::-;6819;:4;:14;:16::i;:::-;:35;;-1:-1:-1;6873:19:22;;6869:943;;7230:21;7283:26;:4;7300:8;7283:16;:26::i;:::-;7254;:4;7271:8;7254:16;:26::i;:::-;:55;7230:79;;7327:15;7358:16;:4;:14;:16::i;:::-;7345:10;:29;7327:47;;7473:15;7454:7;7430:14;:32;7429:60;;;;;;7399:26;7416:8;7399:4;:16;;:26;;;;:::i;:::-;:91;7392:98;;;;;;;;;;;;;;6869:943;7771:26;:4;7788:8;7771:16;:26::i;:::-;7764:33;;;;;;;;;;3696:4132;;;;;;;:::o;8281:2610::-;8464:12;;;-1:-1:-1;;9027:10:22;;8464:12;;;9414:1262;9428:4;9421:3;:11;9414:1262;;9538:1;9524:10;;;9523:16;9680:28;9523:16;9701:6;9680:20;:28::i;:::-;9731:12;;;;;;;;;;;;9674:34;;-1:-1:-1;9731:12:22;-1:-1:-1;9775:18:22;9731:12;9775:16;:18::i;:::-;9757:36;;9830:10;9812:15;:28;9808:858;;;9980:16;9999:1;9980:20;9974:26;;9808:858;;;10043:10;10025:15;:28;10021:645;;;10448:1;10429:16;:20;10422:27;;10021:645;;;10636:6;10644;10628:23;;;;;;;;;;;;10021:645;9414:1262;;;;10810:10;10792:15;:28;:92;;10856:7;:19;10864:10;:3;:8;:10::i;:::-;10856:19;;;;;;;;;;;;10877:6;10792:92;;;10824:6;10832:7;:19;10840:10;:3;:8;:10::i;:::-;10832:19;;;;;;;;;;;;10792:92;10785:99;;;;;;;;;8281:2610;;;;;;;;:::o;2113:593::-;2310:7;2329:49;2338:5;:10;;;2352:1;2338:15;;6610:3:30;2329:8:22;:49::i;:::-;2389:23;2415:80;2434:7;2443:5;:14;;;2459:11;2484:5;:10;;;2472:5;:9;;;:22;2415:18;:80::i;:::-;2389:106;;2505:21;2529:67;2548:7;2557:5;:14;;;2573:11;2586:5;:9;;;2529:18;:67::i;:::-;2505:91;;2613:86;2687:5;:10;;;2660:16;2643:14;:33;2642:56;;;;;;2613:28;:86::i;5583:129:23:-;5641:7;5667:38;:6;5641:7;5667:19;:38::i;:::-;5660:45;;5583:129;;;;:::o;866:101:30:-;935:9;930:34;;946:18;954:9;946:7;:18::i;:::-;866:101;;:::o;4515:452:23:-;4603:6;;4625:8;:44;;;;;;;;;4621:340;;;4692:25;4710:6;4692:17;:25::i;:::-;4685:32;;;;4621:340;4750:31;4738:8;:43;;;;;;;;;4734:227;;;4804:24;4821:6;4804:16;:24::i;4734:227::-;4925:25;4943:6;4925:17;:25::i;4734:227::-;4515:452;;;;:::o;2590:149:35:-;2650:7;2684:47;1259:4;2699:5;:31;2684:14;:47::i;5066:453:23:-;5158:6;;5180:8;:44;;;;;;;;;5176:337;;;5247:24;5264:6;5247:16;:24::i;5176:337::-;5304:31;5292:8;:43;;;;;;;;;5288:225;;;5358:23;5374:6;5358:15;:23::i;5288:225::-;5478:24;5495:6;5478:16;:24::i;1205:98:20:-;1257:7;1283:13;1287:5;1294:1;1418:123;1485:7;899:4;1512:14;;;1511:23;;;1418:123;-1:-1:-1;;;1418:123:20:o;1006:98::-;1058:7;1084:13;1088:5;1095:1;1084:3;:13::i;11062:142:37:-;11171:14;2439:11;11163:34;;11062:142::o;1074:3172:30:-;-1:-1:-1;;;3588:3:30;3581:79;;;3799:66;3793:4;3786:80;3941:1;3935:4;3928:15;2999:73;2210:2;2243:18;;;2288;;;2215:4;2284:29;;;3040:1;3036:14;2195:18;;;;3025:26;;;;2336:18;;;;2383;;;2379:29;;;3057:2;3053:17;3021:50;;;;2999:73;2994:3;2990:83;4008:4;4001:26;4234:3;;4224:14;5816:144:23;5881:6;5906:47;:6;2923:3;5906:18;:47::i;6306:142::-;6370:6;6395:46;:6;2794:3;6395:18;:46::i;6791:143::-;6856:6;6881:46;:6;2668:2;6881:18;:46::i;7271:5379:39:-;7317:6;7335:89;-1:-1:-1;;7344:1:39;:25;;:54;;;;;2720:6;7373:1;:25;;7344:54;4775:1:30;7335:8:39;:89::i;:::-;7443:1;7439;:5;7435:353;;;7769:7;7774:1;7773:2;;7769:3;:7::i;:::-;7750:15;7749:27;;;;;;7741:36;;;;7435:353;9089:14;3158:21;9117:1;:7;9113:220;;-1:-1:-1;;;9140:7:39;;;;3214:56;9113:220;;;3322:20;9194:1;:7;9190:143;;-1:-1:-1;;;9217:7:39;;;;3377:28;9190:143;;;-1:-1:-1;9291:1:39;9190:143;9488:3;9483:8;;;;;2125:4;3486:22;9742:7;;9738:92;;-1:-1:-1;;9765:7:39;;;;2125:4;3543:34;9797:12;;9796:23;9786:33;;9738:92;3615:22;9843:1;:7;9839:92;;-1:-1:-1;;9866:7:39;;;;2125:4;3672:27;9898:12;;9897:23;9887:33;;9839:92;3737:21;9944:1;:7;9940:92;;-1:-1:-1;;9967:7:39;;;;2125:4;3793:24;9999:12;;9998:23;9988:33;;9940:92;3855:21;10045:1;:7;10041:92;;-1:-1:-1;;10068:7:39;;;;2125:4;3911:22;10100:12;;10099:23;10089:33;;10041:92;3971:21;10146:1;:7;10142:92;;-1:-1:-1;;10169:7:39;;;;2125:4;4027:21;10201:12;;10200:23;10190:33;;10142:92;4086:21;10247:1;:7;10243:92;;-1:-1:-1;;10270:7:39;;;;4086:21;4142;10302:12;;10301:23;10291:33;;10243:92;4201:20;10348:1;:7;10344:92;;-1:-1:-1;;10371:7:39;;;;2125:4;4257:21;10403:12;;10402:23;10392:33;;10344:92;4316:20;10449:1;:7;10445:92;;-1:-1:-1;;10472:7:39;;;;2125:4;4372:21;10504:12;;10503:23;10493:33;;10445:92;2125:4;11069:17;;;;;;11354:1;;11332:8;;;11331:19;11330:25;11365:17;;;;11330:25;-1:-1:-1;11424:1:39;2125:4;11402:8;;;11401:19;11400:25;11435:17;;;;11400:25;-1:-1:-1;11494:1:39;2125:4;11472:8;;;11471:19;11470:25;11505:17;;;;11470:25;-1:-1:-1;11564:1:39;2125:4;11542:8;;;11541:19;11540:25;11575:17;;;;11540:25;-1:-1:-1;11634:1:39;2125:4;11612:8;;;11611:19;11610:25;11645:17;;;;11610:25;-1:-1:-1;11704:1:39;2125:4;11682:8;;;11681:19;11680:25;11715:17;;;;11680:25;-1:-1:-1;11774:1:39;2125:4;11752:8;;;11751:19;11750:25;11785:17;;;;11750:25;-1:-1:-1;11844:1:39;2125:4;11822:8;;;11821:19;11820:25;11855:17;;;;11820:25;-1:-1:-1;11914:2:39;2125:4;11892:8;;;11891:19;11890:26;11926:17;;;;11890:26;-1:-1:-1;11985:2:39;2125:4;11963:8;;;11962:19;11961:26;11997:17;;;;11961:26;-1:-1:-1;12056:2:39;2125:4;12034:8;;;12033:19;12032:26;12068:17;;;;12032:26;-1:-1:-1;12640:3:39;2125:4;12596:19;;;12595:30;12594:42;;12593:50;;7271:5379;-1:-1:-1;;;;;;7271:5379:39:o;6061:142:23:-;6125:6;6150:46;:6;2858:3;6150:18;:46::i;6548:140::-;6611:6;6636:45;:6;2730:3;6636:18;:45::i;7034:141::-;7098:6;7123:45;:6;2605:2;7123:18;:45::i;1657:130:20:-;1724:7;899:4;1751:21;;;;;1750:30;;12135:487:37;12209:6;12257:14;;;2386:11;12249:34;2846:11;12558:19;;:57;;12610:5;12558:57;;;-1:-1:-1;;12581:25:37;;12551:64;-1:-1:-1;;;12135:487:37:o;12743:488::-;12817:6;12865:14;;;2545:11;12857:34;2901:11;13167:19;;:57;;13219:5;13167:57;;;-1:-1:-1;;13190:25:37;;12743:488;-1:-1:-1;;;12743:488:37:o;14:152:58:-;91:20;;140:1;130:12;;120:2;;156:1;153;146:12;171:380;;;;356:2;344:9;335:7;331:23;327:32;324:2;;;377:6;369;362:22;324:2;418:9;405:23;395:33;;447:47;490:2;479:9;475:18;447:47;:::i;:::-;437:57;;541:2;530:9;526:18;513:32;503:42;;314:237;;;;;:::o;556:449::-;;;;;758:3;746:9;737:7;733:23;729:33;726:2;;;780:6;772;765:22;726:2;821:9;808:23;798:33;;850:47;893:2;882:9;878:18;850:47;:::i;:::-;716:289;;840:57;;-1:-1:-1;;;;944:2:58;929:18;;916:32;;995:2;980:18;967:32;;716:289::o;1010:852::-;;;;1209:9;1200:7;1196:23;1239:3;1235:2;1231:12;1228:2;;;1261:6;1253;1246:22;1228:2;1289:23;;;-1:-1:-1;1346:4:58;-1:-1:-1;;1328:16:58;;1324:27;1321:2;;;1369:6;1361;1354:22;1321:2;;1407;1401:9;1449:4;1441:6;1437:17;1520:6;1508:10;1505:22;1484:18;1472:10;1469:34;1466:62;1463:2;;;1531:9;1463:2;1558;1551:22;1597:47;1640:2;1625:18;;1597:47;:::i;:::-;1582:63;;1706:2;1691:18;;;1678:32;1673:2;1661:15;;1654:57;1772:4;1757:20;;1744:34;1727:15;;;1720:59;1176:686;;1589:6;;-1:-1:-1;;;1851:3:58;1836:19;;;1823:33;;1176:686::o;1867:420::-;;;;;2055:3;2043:9;2034:7;2030:23;2026:33;2023:2;;;2077:6;2069;2062:22;2023:2;-1:-1:-1;;2105:23:58;;;2175:2;2160:18;;2147:32;;-1:-1:-1;2226:2:58;2211:18;;2198:32;;2277:2;2262:18;2249:32;;-1:-1:-1;2013:274:58;-1:-1:-1;2013:274:58:o;2292:256::-;2474:25;;;2530:2;2515:18;;2508:34;2462:2;2447:18;;2429:119::o;2553:183::-;2705:25;;;2693:2;2678:18;;2660:76::o", "language": "Solidity", "natspec": {"details": "Auxiliary library for PoolPriceOracle, offloading most of the query code to reduce bytecode size by using this as a linked library. The downside is an extra DELEGATECALL is added (2600 gas as of the Berlin hardfork), but the bytecode size gains are so big (specially of the oracle contract does not use `LogCompression.fromLowResLog`) that it is worth it.", "kind": "dev", "methods": {"findNearestSample(mapping(uint256 => bytes32) storage,uint256,uint256,uint256)": {"details": "Finds the two samples with timestamps before and after `lookUpDate`. If one of the samples matches exactly, both `prev` and `next` will be it. `offset` is the index of the oldest sample in the buffer. `length` is the size of the samples list. Assumes `lookUpDate` is greater or equal than the timestamp of the oldest sample, and less or equal than the timestamp of the latest sample."}, "getInstantValue(mapping(uint256 => bytes32) storage,IPriceOracle.Variable,uint256)": {"details": "Returns the value for `variable` at the indexed sample."}, "getPastAccumulator(mapping(uint256 => bytes32) storage,IPriceOracle.Variable,uint256,uint256)": {"details": "Returns the value of the accumulator for `variable` `ago` seconds ago. `latestIndex` must be the index of the latest sample in the buffer. Reverts under the following conditions:  - if the buffer is empty.  - if querying past information and the buffer has not been fully initialized.  - if querying older information than available in the buffer. Note that a full buffer guarantees queries for the    past 34 hours will not revert. If requesting information for a timestamp later than the latest one, it is extrapolated using the latest available data. When no exact information is available for the requested past timestamp (as usually happens, since at most one timestamp is stored every two minutes), it is estimated by performing linear interpolation using the closest values. This process is guaranteed to complete performing at most 10 storage reads."}, "getTimeWeightedAverage(mapping(uint256 => bytes32) storage,IPriceOracle.OracleAverageQuery,uint256)": {"details": "Returns the time average weighted price corresponding to `query`."}}, "version": 1}, "offset": [1379, 10893], "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x56 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x397BEE0 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x34171A85 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0x3D60FB0A EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x79EAEF82 EQ PUSH2 0xB8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6E PUSH2 0x69 CALLDATASIZE PUSH1 0x4 PUSH2 0x9BD JUMP JUMPDEST PUSH2 0xCB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B SWAP2 SWAP1 PUSH2 0xAE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6E PUSH2 0x92 CALLDATASIZE PUSH1 0x4 PUSH2 0x9F1 JUMP JUMPDEST PUSH2 0x111 JUMP JUMPDEST PUSH2 0xAA PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0x28B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B SWAP3 SWAP2 SWAP1 PUSH2 0xAD9 JUMP JUMPDEST PUSH2 0x6E PUSH2 0xC6 CALLDATASIZE PUSH1 0x4 PUSH2 0xA2B JUMP JUMPDEST PUSH2 0x363 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP5 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xF0 DUP3 PUSH2 0xE7 DUP4 PUSH2 0x3C7 JUMP JUMPDEST GT PUSH2 0x139 PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC DUP3 DUP7 PUSH2 0x3ED JUMP JUMPDEST SWAP1 POP PUSH2 0x107 DUP2 PUSH2 0x43E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x122 DUP3 TIMESTAMP LT ISZERO PUSH2 0x138 PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP7 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD TIMESTAMP DUP5 SWAP1 SUB SWAP2 PUSH2 0x13F DUP3 PUSH2 0x3C7 JUMP JUMPDEST SWAP1 POP PUSH2 0x150 PUSH1 0x0 DUP3 GT PUSH2 0x139 PUSH2 0x3DB JUMP JUMPDEST DUP3 DUP2 GT PUSH2 0x17C JUMPI DUP1 DUP4 SUB DUP1 PUSH2 0x165 DUP5 DUP11 PUSH2 0x3ED JUMP JUMPDEST MUL PUSH2 0x170 DUP5 DUP11 PUSH2 0x451 JUMP JUMPDEST ADD SWAP5 POP POP POP POP POP PUSH2 0x283 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x188 DUP9 PUSH2 0x495 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP13 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH2 0x1A3 DUP3 PUSH2 0x3C7 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1B5 JUMPI PUSH2 0x400 SWAP4 POP PUSH2 0x1D4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE PUSH1 0x20 DUP14 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP4 SWAP5 POP SWAP3 PUSH2 0x1D1 SWAP1 PUSH2 0x3C7 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x1E3 DUP8 DUP3 GT ISZERO PUSH2 0x13A PUSH2 0x3DB JUMP JUMPDEST POP POP PUSH1 0x0 DUP1 PUSH2 0x1F4 DUP13 DUP9 DUP6 DUP8 PUSH2 0x28B JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x203 DUP4 PUSH2 0x3C7 JUMP JUMPDEST PUSH2 0x20C DUP4 PUSH2 0x3C7 JUMP JUMPDEST SUB SWAP1 POP DUP1 ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 PUSH2 0x221 DUP5 DUP15 PUSH2 0x451 JUMP JUMPDEST PUSH2 0x22B DUP5 DUP16 PUSH2 0x451 JUMP JUMPDEST SUB SWAP1 POP PUSH1 0x0 PUSH2 0x239 DUP6 PUSH2 0x3C7 JUMP JUMPDEST DUP11 SUB SWAP1 POP DUP3 DUP2 DUP4 MUL DUP2 PUSH2 0x248 JUMPI INVALID JUMPDEST SDIV PUSH2 0x25C DUP16 DUP8 PUSH2 0x451 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ADD SWAP11 POP POP POP POP POP POP POP POP POP POP POP PUSH2 0x283 JUMP JUMPDEST PUSH2 0x278 DUP4 DUP14 PUSH2 0x451 JUMP JUMPDEST SWAP9 POP POP POP POP POP POP POP POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x0 NOT DUP5 ADD DUP2 DUP1 DUP1 JUMPDEST DUP4 DUP6 GT PUSH2 0x30B JUMPI PUSH1 0x2 DUP6 DUP6 ADD DIV PUSH2 0x2AF DUP2 DUP12 PUSH2 0x49E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP15 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x2CC DUP4 PUSH2 0x3C7 JUMP JUMPDEST SWAP2 POP DUP11 DUP3 LT ISZERO PUSH2 0x2E1 JUMPI DUP1 PUSH1 0x1 ADD SWAP6 POP PUSH2 0x305 JUMP JUMPDEST DUP11 DUP3 GT ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x1 DUP2 SUB SWAP5 POP PUSH2 0x305 JUMP JUMPDEST DUP3 DUP4 SWAP8 POP SWAP8 POP POP POP POP POP POP POP PUSH2 0x35A JUMP JUMPDEST POP PUSH2 0x298 JUMP JUMPDEST DUP10 DUP2 LT PUSH2 0x333 JUMPI DUP11 PUSH1 0x0 PUSH2 0x31E DUP6 PUSH2 0x4AF JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH2 0x350 JUMP JUMPDEST DUP2 DUP12 PUSH1 0x0 PUSH2 0x340 DUP7 PUSH2 0x495 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD JUMPDEST SWAP7 POP SWAP7 POP POP POP POP POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x379 DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x13C PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x395 DUP6 DUP6 PUSH1 0x0 ADD MLOAD DUP6 DUP8 PUSH1 0x20 ADD MLOAD DUP9 PUSH1 0x40 ADD MLOAD ADD PUSH2 0x111 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3AD DUP7 DUP7 PUSH1 0x0 ADD MLOAD DUP7 DUP9 PUSH1 0x40 ADD MLOAD PUSH2 0x111 JUMP JUMPDEST SWAP1 POP PUSH2 0x107 DUP6 PUSH1 0x20 ADD MLOAD DUP4 DUP4 SUB DUP2 PUSH2 0x3C1 JUMPI INVALID JUMPDEST SDIV PUSH2 0x43E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D3 DUP3 DUP3 PUSH2 0x4BC JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH2 0x3E9 JUMPI PUSH2 0x3E9 DUP2 PUSH2 0x4C6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3FC JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x412 JUMPI PUSH2 0x40B DUP4 PUSH2 0x519 JUMP JUMPDEST SWAP1 POP PUSH2 0x438 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x420 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x42F JUMPI PUSH2 0x40B DUP4 PUSH2 0x526 JUMP JUMPDEST PUSH2 0x40B DUP4 PUSH2 0x533 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D3 PUSH6 0x5AF3107A4000 DUP4 MUL PUSH2 0x540 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x460 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x46F JUMPI PUSH2 0x40B DUP4 PUSH2 0x91E JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x47D JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x48C JUMPI PUSH2 0x40B DUP4 PUSH2 0x92B JUMP JUMPDEST PUSH2 0x40B DUP4 PUSH2 0x938 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D3 DUP3 PUSH1 0x1 JUMPDEST PUSH1 0x0 PUSH2 0x400 DUP4 DUP4 ADD JUMPDEST MOD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D3 DUP3 PUSH1 0x1 PUSH2 0x945 JUMP JUMPDEST SHR PUSH4 0x7FFFFFFF AND SWAP1 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH7 0x42414C23000030 PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD SWAP1 SWAP5 ADD PUSH1 0x10 SHL SWAP4 SWAP1 SWAP4 ADD ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3D3 DUP3 PUSH1 0xEA PUSH2 0x954 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D3 DUP3 PUSH1 0x9F PUSH2 0x954 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D3 DUP3 PUSH1 0x54 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56F PUSH9 0x238FD42C5CF03FFFF NOT DUP4 SLT ISZERO DUP1 ISZERO PUSH2 0x568 JUMPI POP PUSH9 0x70C1CC73B00C80000 DUP4 SGT ISZERO JUMPDEST PUSH1 0x9 PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x0 DUP3 SLT ISZERO PUSH2 0x5A3 JUMPI PUSH2 0x584 DUP3 PUSH1 0x0 SUB PUSH2 0x540 JUMP JUMPDEST PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP2 PUSH2 0x59B JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x0 PUSH9 0x6F05B59D3B2000000 DUP4 SLT PUSH2 0x5E3 JUMPI POP PUSH9 0x6F05B59D3B1FFFFFF NOT SWAP1 SWAP2 ADD SWAP1 PUSH24 0x195E54C5DD42177F53A27172FA9EC630262827000000000 PUSH2 0x619 JUMP JUMPDEST PUSH9 0x3782DACE9D9000000 DUP4 SLT PUSH2 0x615 JUMPI POP PUSH9 0x3782DACE9D8FFFFFF NOT SWAP1 SWAP2 ADD SWAP1 PUSH12 0x1425982CF597CD205CEF7380 PUSH2 0x619 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST PUSH1 0x64 SWAP3 SWAP1 SWAP3 MUL SWAP2 PUSH9 0x56BC75E2D63100000 PUSH9 0xAD78EBC5AC62000000 DUP5 SLT PUSH2 0x669 JUMPI PUSH9 0xAD78EBC5AC61FFFFFF NOT SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH15 0x1855144814A7FF805980FF0084000 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x56BC75E2D631000000 DUP5 SLT PUSH2 0x6A5 JUMPI PUSH9 0x56BC75E2D630FFFFFF NOT SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH12 0x2DF0AB5A80A22C61AB5A700 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x2B5E3AF16B18800000 DUP5 SLT PUSH2 0x6DF JUMPI PUSH9 0x2B5E3AF16B187FFFFF NOT SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH10 0x3F1FCE3DA636EA5CF850 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x15AF1D78B58C400000 DUP5 SLT PUSH2 0x719 JUMPI PUSH9 0x15AF1D78B58C3FFFFF NOT SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH10 0x127FA27722CC06CC5E2 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0xAD78EBC5AC6200000 DUP5 SLT PUSH2 0x752 JUMPI PUSH9 0xAD78EBC5AC61FFFFF NOT SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH9 0x280E60114EDB805D03 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x56BC75E2D63100000 DUP5 SLT PUSH2 0x78B JUMPI PUSH9 0x56BC75E2D630FFFFF NOT SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH9 0xEBC5FB41746121110 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x2B5E3AF16B1880000 DUP5 SLT PUSH2 0x7C4 JUMPI PUSH9 0x2B5E3AF16B187FFFF NOT SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH9 0x8F00F760A4B2DB55D DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x15AF1D78B58C40000 DUP5 SLT PUSH2 0x7FD JUMPI PUSH9 0x15AF1D78B58C3FFFF NOT SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH9 0x6F5F1775788937937 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x56BC75E2D63100000 DUP5 DUP2 ADD SWAP1 DUP6 SWAP1 PUSH1 0x2 SWAP1 DUP3 DUP1 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x3 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x4 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x5 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x6 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x7 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x8 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x9 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0xA PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0xB PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0xC PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x64 PUSH9 0x56BC75E2D63100000 DUP5 DUP5 MUL SDIV DUP6 MUL SDIV SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D3 DUP3 PUSH1 0xB5 PUSH2 0x97B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D3 DUP3 PUSH1 0x6A PUSH2 0x97B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D3 DUP3 PUSH1 0x1F PUSH2 0x97B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x400 DUP3 DUP5 SUB DUP2 ADD PUSH2 0x4A7 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR PUSH3 0x3FFFFF AND PUSH3 0x1FFFFF DUP2 SGT PUSH2 0x96E JUMPI DUP1 PUSH2 0x283 JUMP JUMPDEST PUSH3 0x3FFFFF NOT OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR PUSH7 0x1FFFFFFFFFFFFF AND PUSH7 0xFFFFFFFFFFFFF DUP2 SGT PUSH2 0x99D JUMPI DUP1 PUSH2 0x283 JUMP JUMPDEST PUSH7 0x1FFFFFFFFFFFFF NOT OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9D1 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x9E1 PUSH1 0x20 DUP6 ADD PUSH2 0x9AE JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xA06 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0xA16 PUSH1 0x20 DUP7 ADD PUSH2 0x9AE JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP6 SUB PUSH1 0xA0 DUP2 SLT ISZERO PUSH2 0xA40 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x60 PUSH1 0x1F NOT DUP3 ADD SLT ISZERO PUSH2 0xA55 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xA73 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE PUSH2 0xA82 PUSH1 0x20 DUP7 ADD PUSH2 0x9AE JUMP JUMPDEST DUP2 MSTORE PUSH1 0x40 DUP6 DUP2 ADD CALLDATALOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x80 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xABD JUMPI DUP4 DUP5 REVERT JUMPDEST POP POP DUP3 CALLDATALOAD SWAP5 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xD9BB4B9613696A2ECD5BA3E0F530DF3429ACB928E6C86A2EF3C6 CALLDATASIZE 0x4D 0x49 0x26 DUP2 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ", "pcMap": {"0": {"offset": [1379, 10893], "op": "PUSH20", "path": "22", "value": "0x0"}, "21": {"fn": null, "offset": [1379, 10893], "op": "ADDRESS", "path": "22"}, "22": {"fn": null, "offset": [1379, 10893], "op": "EQ", "path": "22"}, "23": {"fn": null, "offset": [1379, 10893], "op": "PUSH1", "path": "22", "value": "0x80"}, "25": {"fn": null, "offset": [1379, 10893], "op": "PUSH1", "path": "22", "value": "0x40"}, "27": {"fn": null, "offset": [1379, 10893], "op": "MSTORE", "path": "22"}, "28": {"fn": null, "offset": [1379, 10893], "op": "PUSH1", "path": "22", "value": "0x4"}, "30": {"fn": null, "offset": [1379, 10893], "op": "CALLDATASIZE", "path": "22"}, "31": {"fn": null, "offset": [1379, 10893], "op": "LT", "path": "22"}, "32": {"fn": null, "offset": [1379, 10893], "op": "PUSH2", "path": "22", "value": "0x56"}, "35": {"fn": null, "offset": [1379, 10893], "op": "JUMPI", "path": "22"}, "36": {"fn": null, "offset": [1379, 10893], "op": "PUSH1", "path": "22", "value": "0x0"}, "38": {"fn": null, "offset": [1379, 10893], "op": "CALLDATALOAD", "path": "22"}, "39": {"fn": null, "offset": [1379, 10893], "op": "PUSH1", "path": "22", "value": "0xE0"}, "41": {"fn": null, "offset": [1379, 10893], "op": "SHR", "path": "22"}, "42": {"fn": null, "offset": [1379, 10893], "op": "DUP1", "path": "22"}, "43": {"fn": null, "offset": [1379, 10893], "op": "PUSH4", "path": "22", "value": "0x397BEE0"}, "48": {"fn": null, "offset": [1379, 10893], "op": "EQ", "path": "22"}, "49": {"fn": null, "offset": [1379, 10893], "op": "PUSH2", "path": "22", "value": "0x5B"}, "52": {"fn": null, "offset": [1379, 10893], "op": "JUMPI", "path": "22"}, "53": {"fn": null, "offset": [1379, 10893], "op": "DUP1", "path": "22"}, "54": {"fn": null, "offset": [1379, 10893], "op": "PUSH4", "path": "22", "value": "0x34171A85"}, "59": {"fn": null, "offset": [1379, 10893], "op": "EQ", "path": "22"}, "60": {"fn": null, "offset": [1379, 10893], "op": "PUSH2", "path": "22", "value": "0x84"}, "63": {"fn": null, "offset": [1379, 10893], "op": "JUMPI", "path": "22"}, "64": {"fn": null, "offset": [1379, 10893], "op": "DUP1", "path": "22"}, "65": {"fn": null, "offset": [1379, 10893], "op": "PUSH4", "path": "22", "value": "0x3D60FB0A"}, "70": {"fn": null, "offset": [1379, 10893], "op": "EQ", "path": "22"}, "71": {"fn": null, "offset": [1379, 10893], "op": "PUSH2", "path": "22", "value": "0x97"}, "74": {"fn": null, "offset": [1379, 10893], "op": "JUMPI", "path": "22"}, "75": {"fn": null, "offset": [1379, 10893], "op": "DUP1", "path": "22"}, "76": {"fn": null, "offset": [1379, 10893], "op": "PUSH4", "path": "22", "value": "0x79EAEF82"}, "81": {"fn": null, "offset": [1379, 10893], "op": "EQ", "path": "22"}, "82": {"fn": null, "offset": [1379, 10893], "op": "PUSH2", "path": "22", "value": "0xB8"}, "85": {"fn": null, "offset": [1379, 10893], "op": "JUMPI", "path": "22"}, "86": {"fn": null, "offset": [1379, 10893], "op": "JUMPDEST", "path": "22"}, "87": {"fn": null, "offset": [1379, 10893], "op": "PUSH1", "path": "22", "value": "0x0"}, "89": {"fn": null, "offset": [1379, 10893], "op": "DUP1", "path": "22"}, "90": {"first_revert": true, "fn": null, "offset": [1379, 10893], "op": "REVERT", "path": "22"}, "91": {"fn": "QueryProcessor.getInstantValue", "offset": [1591, 2013], "op": "JUMPDEST", "path": "22"}, "92": {"fn": "QueryProcessor.getInstantValue", "offset": [1591, 2013], "op": "PUSH2", "path": "22", "value": "0x6E"}, "95": {"fn": "QueryProcessor.getInstantValue", "offset": [1591, 2013], "op": "PUSH2", "path": "22", "value": "0x69"}, "98": {"fn": "QueryProcessor.getInstantValue", "offset": [1591, 2013], "op": "CALLDATASIZE", "path": "22"}, "99": {"fn": "QueryProcessor.getInstantValue", "offset": [1591, 2013], "op": "PUSH1", "path": "22", "value": "0x4"}, "101": {"fn": "QueryProcessor.getInstantValue", "offset": [1591, 2013], "op": "PUSH2", "path": "22", "value": "0x9BD"}, "104": {"fn": "QueryProcessor.getInstantValue", "jump": "i", "offset": [1591, 2013], "op": "JUMP", "path": "22"}, "105": {"fn": "QueryProcessor.getInstantValue", "offset": [1591, 2013], "op": "JUMPDEST", "path": "22"}, "106": {"fn": "QueryProcessor.getInstantValue", "offset": [1591, 2013], "op": "PUSH2", "path": "22", "value": "0xCB"}, "109": {"fn": "QueryProcessor.getInstantValue", "jump": "i", "offset": [1591, 2013], "op": "JUMP", "path": "22"}, "110": {"fn": "QueryProcessor.getInstantValue", "offset": [1591, 2013], "op": "JUMPDEST", "path": "22"}, "111": {"fn": "QueryProcessor.getInstantValue", "offset": [1591, 2013], "op": "PUSH1", "path": "22", "value": "0x40"}, "113": {"fn": "QueryProcessor.getInstantValue", "offset": [1591, 2013], "op": "MLOAD", "path": "22"}, "114": {"fn": "QueryProcessor.getInstantValue", "offset": [1591, 2013], "op": "PUSH2", "path": "22", "value": "0x7B"}, "117": {"fn": "QueryProcessor.getInstantValue", "offset": [1591, 2013], "op": "SWAP2", "path": "22"}, "118": {"fn": "QueryProcessor.getInstantValue", "offset": [1591, 2013], "op": "SWAP1", "path": "22"}, "119": {"fn": "QueryProcessor.getInstantValue", "offset": [1591, 2013], "op": "PUSH2", "path": "22", "value": "0xAE7"}, "122": {"fn": "QueryProcessor.getInstantValue", "jump": "i", "offset": [1591, 2013], "op": "JUMP", "path": "22"}, "123": {"fn": "QueryProcessor.getInstantValue", "offset": [1591, 2013], "op": "JUMPDEST", "path": "22"}, "124": {"fn": "QueryProcessor.getInstantValue", "offset": [1591, 2013], "op": "PUSH1", "path": "22", "value": "0x40"}, "126": {"fn": "QueryProcessor.getInstantValue", "offset": [1591, 2013], "op": "MLOAD", "path": "22"}, "127": {"fn": "QueryProcessor.getInstantValue", "offset": [1591, 2013], "op": "DUP1", "path": "22"}, "128": {"fn": "QueryProcessor.getInstantValue", "offset": [1591, 2013], "op": "SWAP2", "path": "22"}, "129": {"fn": "QueryProcessor.getInstantValue", "offset": [1591, 2013], "op": "SUB", "path": "22"}, "130": {"fn": "QueryProcessor.getInstantValue", "offset": [1591, 2013], "op": "SWAP1", "path": "22"}, "131": {"fn": "QueryProcessor.getInstantValue", "offset": [1591, 2013], "op": "RETURN", "path": "22"}, "132": {"fn": "QueryProcessor.getPastAccumulator", "offset": [3696, 7828], "op": "JUMPDEST", "path": "22"}, "133": {"fn": "QueryProcessor.getPastAccumulator", "offset": [3696, 7828], "op": "PUSH2", "path": "22", "value": "0x6E"}, "136": {"fn": "QueryProcessor.getPastAccumulator", "offset": [3696, 7828], "op": "PUSH2", "path": "22", "value": "0x92"}, "139": {"fn": "QueryProcessor.getPastAccumulator", "offset": [3696, 7828], "op": "CALLDATASIZE", "path": "22"}, "140": {"fn": "QueryProcessor.getPastAccumulator", "offset": [3696, 7828], "op": "PUSH1", "path": "22", "value": "0x4"}, "142": {"fn": "QueryProcessor.getPastAccumulator", "offset": [3696, 7828], "op": "PUSH2", "path": "22", "value": "0x9F1"}, "145": {"fn": "QueryProcessor.getPastAccumulator", "jump": "i", "offset": [3696, 7828], "op": "JUMP", "path": "22"}, "146": {"fn": "QueryProcessor.getPastAccumulator", "offset": [3696, 7828], "op": "JUMPDEST", "path": "22"}, "147": {"fn": "QueryProcessor.getPastAccumulator", "offset": [3696, 7828], "op": "PUSH2", "path": "22", "value": "0x111"}, "150": {"fn": "QueryProcessor.getPastAccumulator", "jump": "i", "offset": [3696, 7828], "op": "JUMP", "path": "22"}, "151": {"fn": "QueryProcessor.findNearestSample", "offset": [8281, 10891], "op": "JUMPDEST", "path": "22"}, "152": {"fn": "QueryProcessor.findNearestSample", "offset": [8281, 10891], "op": "PUSH2", "path": "22", "value": "0xAA"}, "155": {"fn": "QueryProcessor.findNearestSample", "offset": [8281, 10891], "op": "PUSH2", "path": "22", "value": "0xA5"}, "158": {"fn": "QueryProcessor.findNearestSample", "offset": [8281, 10891], "op": "CALLDATASIZE", "path": "22"}, "159": {"fn": "QueryProcessor.findNearestSample", "offset": [8281, 10891], "op": "PUSH1", "path": "22", "value": "0x4"}, "161": {"fn": "QueryProcessor.findNearestSample", "offset": [8281, 10891], "op": "PUSH2", "path": "22", "value": "0xAA8"}, "164": {"fn": "QueryProcessor.findNearestSample", "jump": "i", "offset": [8281, 10891], "op": "JUMP", "path": "22"}, "165": {"fn": "QueryProcessor.findNearestSample", "offset": [8281, 10891], "op": "JUMPDEST", "path": "22"}, "166": {"fn": "QueryProcessor.findNearestSample", "offset": [8281, 10891], "op": "PUSH2", "path": "22", "value": "0x28B"}, "169": {"fn": "QueryProcessor.findNearestSample", "jump": "i", "offset": [8281, 10891], "op": "JUMP", "path": "22"}, "170": {"fn": "QueryProcessor.findNearestSample", "offset": [8281, 10891], "op": "JUMPDEST", "path": "22"}, "171": {"fn": "QueryProcessor.findNearestSample", "offset": [8281, 10891], "op": "PUSH1", "path": "22", "value": "0x40"}, "173": {"fn": "QueryProcessor.findNearestSample", "offset": [8281, 10891], "op": "MLOAD", "path": "22"}, "174": {"fn": "QueryProcessor.findNearestSample", "offset": [8281, 10891], "op": "PUSH2", "path": "22", "value": "0x7B"}, "177": {"fn": "QueryProcessor.findNearestSample", "offset": [8281, 10891], "op": "SWAP3", "path": "22"}, "178": {"fn": "QueryProcessor.findNearestSample", "offset": [8281, 10891], "op": "SWAP2", "path": "22"}, "179": {"fn": "QueryProcessor.findNearestSample", "offset": [8281, 10891], "op": "SWAP1", "path": "22"}, "180": {"fn": "QueryProcessor.findNearestSample", "offset": [8281, 10891], "op": "PUSH2", "path": "22", "value": "0xAD9"}, "183": {"fn": "QueryProcessor.findNearestSample", "jump": "i", "offset": [8281, 10891], "op": "JUMP", "path": "22"}, "184": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2113, 2706], "op": "JUMPDEST", "path": "22"}, "185": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2113, 2706], "op": "PUSH2", "path": "22", "value": "0x6E"}, "188": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2113, 2706], "op": "PUSH2", "path": "22", "value": "0xC6"}, "191": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2113, 2706], "op": "CALLDATASIZE", "path": "22"}, "192": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2113, 2706], "op": "PUSH1", "path": "22", "value": "0x4"}, "194": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2113, 2706], "op": "PUSH2", "path": "22", "value": "0xA2B"}, "197": {"fn": "QueryProcessor.getTimeWeightedAverage", "jump": "i", "offset": [2113, 2706], "op": "JUMP", "path": "22"}, "198": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2113, 2706], "op": "JUMPDEST", "path": "22"}, "199": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2113, 2706], "op": "PUSH2", "path": "22", "value": "0x363"}, "202": {"fn": "QueryProcessor.getTimeWeightedAverage", "jump": "i", "offset": [2113, 2706], "op": "JUMP", "path": "22"}, "203": {"fn": "QueryProcessor.getInstantValue", "offset": [1591, 2013], "op": "JUMPDEST", "path": "22"}, "204": {"fn": "QueryProcessor.getInstantValue", "offset": [1761, 1768], "op": "PUSH1", "path": "22", "value": "0x0"}, "206": {"fn": "QueryProcessor.getInstantValue", "offset": [1797, 1811], "op": "DUP2", "path": "22"}, "207": {"fn": "QueryProcessor.getInstantValue", "offset": [1797, 1811], "op": "DUP2", "path": "22"}, "208": {"fn": "QueryProcessor.getInstantValue", "offset": [1797, 1811], "op": "MSTORE", "path": "22"}, "209": {"fn": "QueryProcessor.getInstantValue", "offset": [1797, 1811], "op": "PUSH1", "path": "22", "value": "0x20"}, "211": {"fn": "QueryProcessor.getInstantValue", "offset": [1797, 1811], "op": "DUP5", "path": "22"}, "212": {"fn": "QueryProcessor.getInstantValue", "offset": [1797, 1811], "op": "SWAP1", "path": "22"}, "213": {"fn": "QueryProcessor.getInstantValue", "offset": [1797, 1811], "op": "MSTORE", "path": "22"}, "214": {"fn": "QueryProcessor.getInstantValue", "offset": [1797, 1811], "op": "PUSH1", "path": "22", "value": "0x40"}, "216": {"fn": "QueryProcessor.getInstantValue", "offset": [1797, 1811], "op": "DUP2", "path": "22"}, "217": {"fn": "QueryProcessor.getInstantValue", "offset": [1797, 1811], "op": "KECCAK256", "path": "22"}, "218": {"fn": "QueryProcessor.getInstantValue", "offset": [1797, 1811], "op": "SLOAD", "path": "22"}, "219": {"fn": "QueryProcessor.getInstantValue", "offset": [1821, 1884], "op": "PUSH2", "path": "22", "statement": 0, "value": "0xF0"}, "222": {"fn": "QueryProcessor.getInstantValue", "offset": [1761, 1768], "op": "DUP3", "path": "22"}, "223": {"fn": "QueryProcessor.getInstantValue", "offset": [1830, 1848], "op": "PUSH2", "path": "22", "value": "0xE7"}, "226": {"fn": "QueryProcessor.getInstantValue", "offset": [1797, 1811], "op": "DUP4", "path": "22"}, "227": {"fn": "QueryProcessor.getInstantValue", "offset": [1830, 1846], "op": "PUSH2", "path": "22", "value": "0x3C7"}, "230": {"fn": "QueryProcessor.getInstantValue", "jump": "i", "offset": [1830, 1848], "op": "JUMP", "path": "22"}, "231": {"fn": "QueryProcessor.getInstantValue", "offset": [1830, 1848], "op": "JUMPDEST", "path": "22"}, "232": {"fn": "QueryProcessor.getInstantValue", "offset": [1830, 1852], "op": "GT", "path": "22"}, "233": {"offset": [6441, 6444], "op": "PUSH2", "path": "30", "value": "0x139"}, "236": {"fn": "QueryProcessor.getInstantValue", "offset": [1821, 1829], "op": "PUSH2", "path": "22", "value": "0x3DB"}, "239": {"fn": "QueryProcessor.getInstantValue", "jump": "i", "offset": [1821, 1884], "op": "JUMP", "path": "22"}, "240": {"fn": "QueryProcessor.getInstantValue", "offset": [1821, 1884], "op": "JUMPDEST", "path": "22"}, "241": {"fn": "QueryProcessor.getInstantValue", "offset": [1895, 1917], "op": "PUSH1", "path": "22", "value": "0x0"}, "243": {"fn": "QueryProcessor.getInstantValue", "offset": [1920, 1944], "op": "PUSH2", "path": "22", "value": "0xFC"}, "246": {"fn": "QueryProcessor.getInstantValue", "offset": [1920, 1926], "op": "DUP3", "path": "22"}, "247": {"fn": "QueryProcessor.getInstantValue", "offset": [1935, 1943], "op": "DUP7", "path": "22"}, "248": {"fn": "QueryProcessor.getInstantValue", "offset": [1920, 1934], "op": "PUSH2", "path": "22", "value": "0x3ED"}, "251": {"fn": "QueryProcessor.getInstantValue", "jump": "i", "offset": [1920, 1944], "op": "JUMP", "path": "22"}, "252": {"fn": "QueryProcessor.getInstantValue", "offset": [1920, 1944], "op": "JUMPDEST", "path": "22"}, "253": {"fn": "QueryProcessor.getInstantValue", "offset": [1895, 1944], "op": "SWAP1", "path": "22"}, "254": {"fn": "QueryProcessor.getInstantValue", "offset": [1895, 1944], "op": "POP", "path": "22"}, "255": {"fn": "QueryProcessor.getInstantValue", "offset": [1961, 2006], "op": "PUSH2", "path": "22", "statement": 1, "value": "0x107"}, "258": {"fn": "QueryProcessor.getInstantValue", "offset": [1990, 2005], "op": "DUP2", "path": "22"}, "259": {"fn": "QueryProcessor.getInstantValue", "offset": [1961, 1989], "op": "PUSH2", "path": "22", "value": "0x43E"}, "262": {"fn": "QueryProcessor.getInstantValue", "jump": "i", "offset": [1961, 2006], "op": "JUMP", "path": "22"}, "263": {"fn": "QueryProcessor.getInstantValue", "offset": [1961, 2006], "op": "JUMPDEST", "path": "22"}, "264": {"fn": "QueryProcessor.getInstantValue", "offset": [1954, 2006], "op": "SWAP7", "path": "22"}, "265": {"fn": "QueryProcessor.getInstantValue", "offset": [1591, 2013], "op": "SWAP6", "path": "22"}, "266": {"op": "POP"}, "267": {"op": "POP"}, "268": {"op": "POP"}, "269": {"op": "POP"}, "270": {"op": "POP"}, "271": {"op": "POP"}, "272": {"fn": "QueryProcessor.getInstantValue", "jump": "o", "offset": [1591, 2013], "op": "JUMP", "path": "22"}, "273": {"fn": "QueryProcessor.getPastAccumulator", "offset": [3696, 7828], "op": "JUMPDEST", "path": "22"}, "274": {"fn": "QueryProcessor.getPastAccumulator", "offset": [3894, 3900], "op": "PUSH1", "path": "22", "value": "0x0"}, "276": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4003, 4072], "op": "PUSH2", "path": "22", "statement": 2, "value": "0x122"}, "279": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4031, 4034], "op": "DUP3", "path": "22"}, "280": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4012, 4027], "op": "TIMESTAMP", "path": "22"}, "281": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4012, 4034], "op": "LT", "path": "22"}, "282": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4012, 4034], "op": "ISZERO", "path": "22"}, "283": {"offset": [6381, 6384], "op": "PUSH2", "path": "30", "value": "0x138"}, "286": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4003, 4011], "op": "PUSH2", "path": "22", "value": "0x3DB"}, "289": {"fn": "QueryProcessor.getPastAccumulator", "jump": "i", "offset": [4003, 4072], "op": "JUMP", "path": "22"}, "290": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4003, 4072], "op": "JUMPDEST", "path": "22"}, "291": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4082, 4100], "op": "PUSH1", "path": "22", "value": "0x0"}, "293": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4158, 4178], "op": "DUP4", "path": "22"}, "294": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4158, 4178], "op": "DUP2", "path": "22"}, "295": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4158, 4178], "op": "MSTORE", "path": "22"}, "296": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4158, 4178], "op": "PUSH1", "path": "22", "value": "0x20"}, "298": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4158, 4178], "op": "DUP7", "path": "22"}, "299": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4158, 4178], "op": "SWAP1", "path": "22"}, "300": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4158, 4178], "op": "MSTORE", "path": "22"}, "301": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4158, 4178], "op": "PUSH1", "path": "22", "value": "0x40"}, "303": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4158, 4178], "op": "DUP2", "path": "22"}, "304": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4158, 4178], "op": "KECCAK256", "path": "22"}, "305": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4158, 4178], "op": "SLOAD", "path": "22"}, "306": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4103, 4118], "op": "TIMESTAMP", "path": "22"}, "307": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4103, 4124], "op": "DUP5", "path": "22"}, "308": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4103, 4124], "op": "SWAP1", "path": "22"}, "309": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4103, 4124], "op": "SUB", "path": "22"}, "310": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4103, 4124], "op": "SWAP2", "path": "22"}, "311": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4214, 4238], "op": "PUSH2", "path": "22", "value": "0x13F"}, "314": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4158, 4178], "op": "DUP3", "path": "22"}, "315": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4214, 4236], "op": "PUSH2", "path": "22", "value": "0x3C7"}, "318": {"fn": "QueryProcessor.getPastAccumulator", "jump": "i", "offset": [4214, 4238], "op": "JUMP", "path": "22"}, "319": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4214, 4238], "op": "JUMPDEST", "path": "22"}, "320": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4188, 4238], "op": "SWAP1", "path": "22"}, "321": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4188, 4238], "op": "POP", "path": "22"}, "322": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4364, 4424], "op": "PUSH2", "path": "22", "statement": 3, "value": "0x150"}, "325": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4391, 4392], "op": "PUSH1", "path": "22", "value": "0x0"}, "327": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4373, 4388], "op": "DUP3", "path": "22"}, "328": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4373, 4392], "op": "GT", "path": "22"}, "329": {"offset": [6441, 6444], "op": "PUSH2", "path": "30", "value": "0x139"}, "332": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4364, 4372], "op": "PUSH2", "path": "22", "value": "0x3DB"}, "335": {"fn": "QueryProcessor.getPastAccumulator", "jump": "i", "offset": [4364, 4424], "op": "JUMP", "path": "22"}, "336": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4364, 4424], "op": "JUMPDEST", "path": "22"}, "337": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4458, 4468], "op": "DUP3", "path": "22"}, "338": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4439, 4454], "op": "DUP2", "path": "22"}, "339": {"branch": 89, "fn": "QueryProcessor.getPastAccumulator", "offset": [4439, 4468], "op": "GT", "path": "22"}, "340": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4435, 7822], "op": "PUSH2", "path": "22", "value": "0x17C"}, "343": {"branch": 89, "fn": "QueryProcessor.getPastAccumulator", "offset": [4435, 7822], "op": "JUMPI", "path": "22"}, "344": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4903, 4931], "op": "DUP1", "path": "22"}, "345": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4903, 4931], "op": "DUP4", "path": "22"}, "346": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4903, 4931], "op": "SUB", "path": "22"}, "347": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4903, 4931], "op": "DUP1", "path": "22"}, "348": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4990, 5020], "op": "PUSH2", "path": "22", "statement": 4, "value": "0x165"}, "351": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4990, 5002], "op": "DUP5", "path": "22"}, "352": {"fn": "QueryProcessor.getPastAccumulator", "offset": [5011, 5019], "op": "DUP11", "path": "22"}, "353": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4990, 5010], "op": "PUSH2", "path": "22", "value": "0x3ED"}, "356": {"fn": "QueryProcessor.getPastAccumulator", "jump": "i", "offset": [4990, 5020], "op": "JUMP", "path": "22"}, "357": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4990, 5020], "op": "JUMPDEST", "path": "22"}, "358": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4990, 5038], "op": "MUL", "path": "22"}, "359": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4952, 4986], "op": "PUSH2", "path": "22", "value": "0x170"}, "362": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4952, 4964], "op": "DUP5", "path": "22"}, "363": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4977, 4985], "op": "DUP11", "path": "22"}, "364": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4952, 4976], "op": "PUSH2", "path": "22", "value": "0x451"}, "367": {"fn": "QueryProcessor.getPastAccumulator", "jump": "i", "offset": [4952, 4986], "op": "JUMP", "path": "22"}, "368": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4952, 4986], "op": "JUMPDEST", "path": "22"}, "369": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4952, 5039], "op": "ADD", "path": "22"}, "370": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4945, 5039], "op": "SWAP5", "path": "22"}, "371": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4945, 5039], "op": "POP", "path": "22"}, "372": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4945, 5039], "op": "POP", "path": "22"}, "373": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4945, 5039], "op": "POP", "path": "22"}, "374": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4945, 5039], "op": "POP", "path": "22"}, "375": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4945, 5039], "op": "POP", "path": "22"}, "376": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4945, 5039], "op": "PUSH2", "path": "22", "value": "0x283"}, "379": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4945, 5039], "op": "JUMP", "path": "22"}, "380": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4435, 7822], "op": "JUMPDEST", "path": "22"}, "381": {"fn": "QueryProcessor.getPastAccumulator", "offset": [5310, 5330], "op": "PUSH1", "path": "22", "value": "0x0"}, "383": {"fn": "QueryProcessor.getPastAccumulator", "offset": [5344, 5363], "op": "DUP1", "path": "22"}, "384": {"fn": "QueryProcessor.getPastAccumulator", "offset": [5366, 5384], "op": "PUSH2", "path": "22", "value": "0x188"}, "387": {"fn": "QueryProcessor.getPastAccumulator", "offset": [5366, 5377], "op": "DUP9", "path": "22"}, "388": {"fn": "QueryProcessor.getPastAccumulator", "offset": [5366, 5382], "op": "PUSH2", "path": "22", "value": "0x495"}, "391": {"fn": "QueryProcessor.getPastAccumulator", "jump": "i", "offset": [5366, 5384], "op": "JUMP", "path": "22"}, "392": {"fn": "QueryProcessor.getPastAccumulator", "offset": [5366, 5384], "op": "JUMPDEST", "path": "22"}, "393": {"fn": "QueryProcessor.getPastAccumulator", "offset": [5486, 5506], "op": "PUSH1", "path": "22", "value": "0x0"}, "395": {"fn": "QueryProcessor.getPastAccumulator", "offset": [5509, 5529], "op": "DUP2", "path": "22"}, "396": {"fn": "QueryProcessor.getPastAccumulator", "offset": [5509, 5529], "op": "DUP2", "path": "22"}, "397": {"fn": "QueryProcessor.getPastAccumulator", "offset": [5509, 5529], "op": "MSTORE", "path": "22"}, "398": {"fn": "QueryProcessor.getPastAccumulator", "offset": [5509, 5529], "op": "PUSH1", "path": "22", "value": "0x20"}, "400": {"fn": "QueryProcessor.getPastAccumulator", "offset": [5509, 5529], "op": "DUP13", "path": "22"}, "401": {"fn": "QueryProcessor.getPastAccumulator", "offset": [5509, 5529], "op": "SWAP1", "path": "22"}, "402": {"fn": "QueryProcessor.getPastAccumulator", "offset": [5509, 5529], "op": "MSTORE", "path": "22"}, "403": {"fn": "QueryProcessor.getPastAccumulator", "offset": [5509, 5529], "op": "PUSH1", "path": "22", "value": "0x40"}, "405": {"fn": "QueryProcessor.getPastAccumulator", "offset": [5509, 5529], "op": "DUP2", "path": "22"}, "406": {"fn": "QueryProcessor.getPastAccumulator", "offset": [5509, 5529], "op": "KECCAK256", "path": "22"}, "407": {"fn": "QueryProcessor.getPastAccumulator", "offset": [5509, 5529], "op": "SLOAD", "path": "22"}, "408": {"fn": "QueryProcessor.getPastAccumulator", "offset": [5344, 5384], "op": "SWAP2", "path": "22"}, "409": {"fn": "QueryProcessor.getPastAccumulator", "offset": [5344, 5384], "op": "SWAP3", "path": "22"}, "410": {"op": "POP"}, "411": {"fn": "QueryProcessor.getPastAccumulator", "offset": [5573, 5597], "op": "PUSH2", "path": "22", "value": "0x1A3"}, "414": {"fn": "QueryProcessor.getPastAccumulator", "offset": [5509, 5529], "op": "DUP3", "path": "22"}, "415": {"fn": "QueryProcessor.getPastAccumulator", "offset": [5573, 5595], "op": "PUSH2", "path": "22", "value": "0x3C7"}, "418": {"fn": "QueryProcessor.getPastAccumulator", "jump": "i", "offset": [5573, 5597], "op": "JUMP", "path": "22"}, "419": {"fn": "QueryProcessor.getPastAccumulator", "offset": [5573, 5597], "op": "JUMPDEST", "path": "22"}, "420": {"fn": "QueryProcessor.getPastAccumulator", "offset": [5547, 5597], "op": "SWAP1", "path": "22"}, "421": {"op": "POP"}, "422": {"fn": "QueryProcessor.getPastAccumulator", "offset": [5620, 5639], "op": "DUP1", "path": "22"}, "423": {"branch": 90, "fn": "QueryProcessor.getPastAccumulator", "offset": [5620, 5639], "op": "ISZERO", "path": "22"}, "424": {"fn": "QueryProcessor.getPastAccumulator", "offset": [5616, 6273], "op": "PUSH2", "path": "22", "value": "0x1B5"}, "427": {"branch": 90, "fn": "QueryProcessor.getPastAccumulator", "offset": [5616, 6273], "op": "JUMPI", "path": "22"}, "428": {"offset": [899, 903], "op": "PUSH2", "path": "20", "value": "0x400"}, "431": {"fn": "QueryProcessor.getPastAccumulator", "offset": [5766, 5792], "op": "SWAP4", "path": "22", "statement": 5}, "432": {"fn": "QueryProcessor.getPastAccumulator", "offset": [5766, 5792], "op": "POP", "path": "22"}, "433": {"fn": "QueryProcessor.getPastAccumulator", "offset": [5616, 6273], "op": "PUSH2", "path": "22", "value": "0x1D4"}, "436": {"fn": "QueryProcessor.getPastAccumulator", "offset": [5616, 6273], "op": "JUMP", "path": "22"}, "437": {"fn": "QueryProcessor.getPastAccumulator", "offset": [5616, 6273], "op": "JUMPDEST", "path": "22"}, "438": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6191, 6192], "op": "PUSH1", "path": "22", "statement": 6, "value": "0x0"}, "440": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6232, 6242], "op": "DUP1", "path": "22", "statement": 7}, "441": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6232, 6242], "op": "DUP1", "path": "22"}, "442": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6232, 6242], "op": "MSTORE", "path": "22"}, "443": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6232, 6242], "op": "PUSH1", "path": "22", "value": "0x20"}, "445": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6232, 6242], "op": "DUP14", "path": "22"}, "446": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6232, 6242], "op": "SWAP1", "path": "22"}, "447": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6232, 6242], "op": "MSTORE", "path": "22"}, "448": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6232, 6242], "op": "PUSH1", "path": "22", "value": "0x40"}, "450": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6232, 6242], "op": "DUP2", "path": "22"}, "451": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6232, 6242], "op": "KECCAK256", "path": "22"}, "452": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6232, 6242], "op": "SLOAD", "path": "22"}, "453": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6113, 6124], "op": "SWAP4", "path": "22", "statement": 8}, "454": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6113, 6124], "op": "SWAP5", "path": "22"}, "455": {"op": "POP"}, "456": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6191, 6192], "op": "SWAP3", "path": "22"}, "457": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6232, 6254], "op": "PUSH2", "path": "22", "value": "0x1D1"}, "460": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6232, 6254], "op": "SWAP1", "path": "22"}, "461": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6232, 6252], "op": "PUSH2", "path": "22", "value": "0x3C7"}, "464": {"fn": "QueryProcessor.getPastAccumulator", "jump": "i", "offset": [6232, 6254], "op": "JUMP", "path": "22"}, "465": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6232, 6254], "op": "JUMPDEST", "path": "22"}, "466": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6214, 6254], "op": "SWAP1", "path": "22"}, "467": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6214, 6254], "op": "POP", "path": "22"}, "468": {"fn": "QueryProcessor.getPastAccumulator", "offset": [5616, 6273], "op": "JUMPDEST", "path": "22"}, "469": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6387, 6455], "op": "PUSH2", "path": "22", "statement": 9, "value": "0x1E3"}, "472": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6415, 6425], "op": "DUP8", "path": "22"}, "473": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6396, 6411], "op": "DUP3", "path": "22"}, "474": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6396, 6425], "op": "GT", "path": "22"}, "475": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6396, 6425], "op": "ISZERO", "path": "22"}, "476": {"offset": [6499, 6502], "op": "PUSH2", "path": "30", "value": "0x13A"}, "479": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6387, 6395], "op": "PUSH2", "path": "22", "value": "0x3DB"}, "482": {"fn": "QueryProcessor.getPastAccumulator", "jump": "i", "offset": [6387, 6455], "op": "JUMP", "path": "22"}, "483": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6387, 6455], "op": "JUMPDEST", "path": "22"}, "484": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4435, 7822], "op": "POP", "path": "22"}, "485": {"fn": "QueryProcessor.getPastAccumulator", "offset": [4435, 7822], "op": "POP", "path": "22"}, "486": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6572, 6584], "op": "PUSH1", "path": "22", "value": "0x0"}, "488": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6586, 6598], "op": "DUP1", "path": "22"}, "489": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6602, 6667], "op": "PUSH2", "path": "22", "value": "0x1F4"}, "492": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6620, 6627], "op": "DUP13", "path": "22"}, "493": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6629, 6639], "op": "DUP9", "path": "22"}, "494": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6641, 6652], "op": "DUP6", "path": "22"}, "495": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6654, 6666], "op": "DUP8", "path": "22"}, "496": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6602, 6619], "op": "PUSH2", "path": "22", "value": "0x28B"}, "499": {"fn": "QueryProcessor.getPastAccumulator", "jump": "i", "offset": [6602, 6667], "op": "JUMP", "path": "22"}, "500": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6602, 6667], "op": "JUMPDEST", "path": "22"}, "501": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6571, 6667], "op": "SWAP2", "path": "22"}, "502": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6571, 6667], "op": "POP", "path": "22"}, "503": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6571, 6667], "op": "SWAP2", "path": "22"}, "504": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6571, 6667], "op": "POP", "path": "22"}, "505": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6793, 6816], "op": "PUSH1", "path": "22", "value": "0x0"}, "507": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6838, 6854], "op": "PUSH2", "path": "22", "value": "0x203"}, "510": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6838, 6842], "op": "DUP4", "path": "22"}, "511": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6838, 6852], "op": "PUSH2", "path": "22", "value": "0x3C7"}, "514": {"fn": "QueryProcessor.getPastAccumulator", "jump": "i", "offset": [6838, 6854], "op": "JUMP", "path": "22"}, "515": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6838, 6854], "op": "JUMPDEST", "path": "22"}, "516": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6819, 6835], "op": "PUSH2", "path": "22", "value": "0x20C"}, "519": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6819, 6823], "op": "DUP4", "path": "22"}, "520": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6819, 6833], "op": "PUSH2", "path": "22", "value": "0x3C7"}, "523": {"fn": "QueryProcessor.getPastAccumulator", "jump": "i", "offset": [6819, 6835], "op": "JUMP", "path": "22"}, "524": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6819, 6835], "op": "JUMPDEST", "path": "22"}, "525": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6819, 6854], "op": "SUB", "path": "22"}, "526": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6819, 6854], "op": "SWAP1", "path": "22"}, "527": {"op": "POP"}, "528": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6873, 6892], "op": "DUP1", "path": "22"}, "529": {"branch": 91, "fn": "QueryProcessor.getPastAccumulator", "offset": [6873, 6892], "op": "ISZERO", "path": "22"}, "530": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6869, 7812], "op": "PUSH2", "path": "22", "value": "0x26E"}, "533": {"branch": 91, "fn": "QueryProcessor.getPastAccumulator", "offset": [6869, 7812], "op": "JUMPI", "path": "22"}, "534": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7230, 7251], "op": "PUSH1", "path": "22", "value": "0x0"}, "536": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7283, 7309], "op": "PUSH2", "path": "22", "value": "0x221"}, "539": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7283, 7287], "op": "DUP5", "path": "22"}, "540": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7300, 7308], "op": "DUP15", "path": "22"}, "541": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7283, 7299], "op": "PUSH2", "path": "22", "value": "0x451"}, "544": {"fn": "QueryProcessor.getPastAccumulator", "jump": "i", "offset": [7283, 7309], "op": "JUMP", "path": "22"}, "545": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7283, 7309], "op": "JUMPDEST", "path": "22"}, "546": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7254, 7280], "op": "PUSH2", "path": "22", "value": "0x22B"}, "549": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7254, 7258], "op": "DUP5", "path": "22"}, "550": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7271, 7279], "op": "DUP16", "path": "22"}, "551": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7254, 7270], "op": "PUSH2", "path": "22", "value": "0x451"}, "554": {"fn": "QueryProcessor.getPastAccumulator", "jump": "i", "offset": [7254, 7280], "op": "JUMP", "path": "22"}, "555": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7254, 7280], "op": "JUMPDEST", "path": "22"}, "556": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7254, 7309], "op": "SUB", "path": "22"}, "557": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7230, 7309], "op": "SWAP1", "path": "22"}, "558": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7230, 7309], "op": "POP", "path": "22"}, "559": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7327, 7342], "op": "PUSH1", "path": "22", "value": "0x0"}, "561": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7358, 7374], "op": "PUSH2", "path": "22", "value": "0x239"}, "564": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7358, 7362], "op": "DUP6", "path": "22"}, "565": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7358, 7372], "op": "PUSH2", "path": "22", "value": "0x3C7"}, "568": {"fn": "QueryProcessor.getPastAccumulator", "jump": "i", "offset": [7358, 7374], "op": "JUMP", "path": "22"}, "569": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7358, 7374], "op": "JUMPDEST", "path": "22"}, "570": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7345, 7355], "op": "DUP11", "path": "22"}, "571": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7345, 7374], "op": "SUB", "path": "22"}, "572": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7327, 7374], "op": "SWAP1", "path": "22"}, "573": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7327, 7374], "op": "POP", "path": "22"}, "574": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7473, 7488], "op": "DUP3", "path": "22", "statement": 10}, "575": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7454, 7461], "op": "DUP2", "path": "22"}, "576": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7430, 7444], "op": "DUP4", "path": "22"}, "577": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7430, 7462], "op": "MUL", "path": "22"}, "578": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7429, 7489], "op": "DUP2", "path": "22"}, "579": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7429, 7489], "op": "PUSH2", "path": "22", "value": "0x248"}, "582": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7429, 7489], "op": "JUMPI", "path": "22"}, "583": {"dev": "Division by zero", "fn": "QueryProcessor.getPastAccumulator", "offset": [7429, 7489], "op": "INVALID", "path": "22"}, "584": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7429, 7489], "op": "JUMPDEST", "path": "22"}, "585": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7429, 7489], "op": "SDIV", "path": "22"}, "586": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7399, 7425], "op": "PUSH2", "path": "22", "value": "0x25C"}, "589": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7416, 7424], "op": "DUP16", "path": "22"}, "590": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7399, 7403], "op": "DUP8", "path": "22"}, "591": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7399, 7415], "op": "PUSH2", "path": "22", "value": "0x451"}, "594": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7399, 7415], "op": "SWAP1", "path": "22"}, "595": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7399, 7425], "op": "SWAP2", "path": "22"}, "596": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7399, 7425], "op": "SWAP1", "path": "22"}, "597": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7399, 7425], "op": "PUSH4", "path": "22", "value": "0xFFFFFFFF"}, "602": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7399, 7425], "op": "AND", "path": "22"}, "603": {"fn": "QueryProcessor.getPastAccumulator", "jump": "i", "offset": [7399, 7425], "op": "JUMP", "path": "22"}, "604": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7399, 7425], "op": "JUMPDEST", "path": "22"}, "605": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7399, 7490], "op": "ADD", "path": "22"}, "606": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7392, 7490], "op": "SWAP11", "path": "22"}, "607": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7392, 7490], "op": "POP", "path": "22"}, "608": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7392, 7490], "op": "POP", "path": "22"}, "609": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7392, 7490], "op": "POP", "path": "22"}, "610": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7392, 7490], "op": "POP", "path": "22"}, "611": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7392, 7490], "op": "POP", "path": "22"}, "612": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7392, 7490], "op": "POP", "path": "22"}, "613": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7392, 7490], "op": "POP", "path": "22"}, "614": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7392, 7490], "op": "POP", "path": "22"}, "615": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7392, 7490], "op": "POP", "path": "22"}, "616": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7392, 7490], "op": "POP", "path": "22"}, "617": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7392, 7490], "op": "POP", "path": "22"}, "618": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7392, 7490], "op": "PUSH2", "path": "22", "value": "0x283"}, "621": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7392, 7490], "op": "JUMP", "path": "22"}, "622": {"fn": "QueryProcessor.getPastAccumulator", "offset": [6869, 7812], "op": "JUMPDEST", "path": "22"}, "623": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7771, 7797], "op": "PUSH2", "path": "22", "statement": 11, "value": "0x278"}, "626": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7771, 7775], "op": "DUP4", "path": "22"}, "627": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7788, 7796], "op": "DUP14", "path": "22"}, "628": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7771, 7787], "op": "PUSH2", "path": "22", "value": "0x451"}, "631": {"fn": "QueryProcessor.getPastAccumulator", "jump": "i", "offset": [7771, 7797], "op": "JUMP", "path": "22"}, "632": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7771, 7797], "op": "JUMPDEST", "path": "22"}, "633": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7764, 7797], "op": "SWAP9", "path": "22"}, "634": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7764, 7797], "op": "POP", "path": "22"}, "635": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7764, 7797], "op": "POP", "path": "22"}, "636": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7764, 7797], "op": "POP", "path": "22"}, "637": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7764, 7797], "op": "POP", "path": "22"}, "638": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7764, 7797], "op": "POP", "path": "22"}, "639": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7764, 7797], "op": "POP", "path": "22"}, "640": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7764, 7797], "op": "POP", "path": "22"}, "641": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7764, 7797], "op": "POP", "path": "22"}, "642": {"fn": "QueryProcessor.getPastAccumulator", "offset": [7764, 7797], "op": "POP", "path": "22"}, "643": {"fn": "QueryProcessor.getPastAccumulator", "offset": [3696, 7828], "op": "JUMPDEST", "path": "22"}, "644": {"fn": "QueryProcessor.getPastAccumulator", "offset": [3696, 7828], "op": "SWAP5", "path": "22"}, "645": {"fn": "QueryProcessor.getPastAccumulator", "offset": [3696, 7828], "op": "SWAP4", "path": "22"}, "646": {"fn": "QueryProcessor.getPastAccumulator", "offset": [3696, 7828], "op": "POP", "path": "22"}, "647": {"fn": "QueryProcessor.getPastAccumulator", "offset": [3696, 7828], "op": "POP", "path": "22"}, "648": {"fn": "QueryProcessor.getPastAccumulator", "offset": [3696, 7828], "op": "POP", "path": "22"}, "649": {"fn": "QueryProcessor.getPastAccumulator", "offset": [3696, 7828], "op": "POP", "path": "22"}, "650": {"fn": "QueryProcessor.getPastAccumulator", "jump": "o", "offset": [3696, 7828], "op": "JUMP", "path": "22"}, "651": {"fn": "QueryProcessor.findNearestSample", "offset": [8281, 10891], "op": "JUMPDEST", "path": "22"}, "652": {"fn": "QueryProcessor.findNearestSample", "offset": [8464, 8476], "op": "PUSH1", "path": "22", "value": "0x0"}, "654": {"fn": "QueryProcessor.findNearestSample", "offset": [8464, 8476], "op": "DUP1", "path": "22"}, "655": {"fn": "QueryProcessor.findNearestSample", "offset": [8464, 8476], "op": "DUP1", "path": "22"}, "656": {"op": "PUSH1", "value": "0x0"}, "658": {"op": "NOT"}, "659": {"fn": "QueryProcessor.findNearestSample", "offset": [9027, 9037], "op": "DUP5", "path": "22"}, "660": {"fn": "QueryProcessor.findNearestSample", "offset": [9027, 9037], "op": "ADD", "path": "22"}, "661": {"fn": "QueryProcessor.findNearestSample", "offset": [8464, 8476], "op": "DUP2", "path": "22"}, "662": {"fn": "QueryProcessor.findNearestSample", "offset": [8464, 8476], "op": "DUP1", "path": "22"}, "663": {"fn": "QueryProcessor.findNearestSample", "offset": [8464, 8476], "op": "DUP1", "path": "22"}, "664": {"fn": "QueryProcessor.findNearestSample", "offset": [9414, 10676], "op": "JUMPDEST", "path": "22"}, "665": {"fn": "QueryProcessor.findNearestSample", "offset": [9428, 9432], "op": "DUP4", "path": "22"}, "666": {"fn": "QueryProcessor.findNearestSample", "offset": [9421, 9424], "op": "DUP6", "path": "22"}, "667": {"fn": "QueryProcessor.findNearestSample", "offset": [9421, 9432], "op": "GT", "path": "22"}, "668": {"fn": "QueryProcessor.findNearestSample", "offset": [9414, 10676], "op": "PUSH2", "path": "22", "value": "0x30B"}, "671": {"fn": "QueryProcessor.findNearestSample", "offset": [9414, 10676], "op": "JUMPI", "path": "22"}, "672": {"fn": "QueryProcessor.findNearestSample", "offset": [9538, 9539], "op": "PUSH1", "path": "22", "value": "0x2"}, "674": {"fn": "QueryProcessor.findNearestSample", "offset": [9524, 9534], "op": "DUP6", "path": "22"}, "675": {"fn": "QueryProcessor.findNearestSample", "offset": [9524, 9534], "op": "DUP6", "path": "22"}, "676": {"fn": "QueryProcessor.findNearestSample", "offset": [9524, 9534], "op": "ADD", "path": "22"}, "677": {"fn": "QueryProcessor.findNearestSample", "offset": [9523, 9539], "op": "DIV", "path": "22"}, "678": {"fn": "QueryProcessor.findNearestSample", "offset": [9680, 9708], "op": "PUSH2", "path": "22", "statement": 12, "value": "0x2AF"}, "681": {"fn": "QueryProcessor.findNearestSample", "offset": [9523, 9539], "op": "DUP2", "path": "22"}, "682": {"fn": "QueryProcessor.findNearestSample", "offset": [9701, 9707], "op": "DUP12", "path": "22"}, "683": {"fn": "QueryProcessor.findNearestSample", "offset": [9680, 9700], "op": "PUSH2", "path": "22", "value": "0x49E"}, "686": {"fn": "QueryProcessor.findNearestSample", "jump": "i", "offset": [9680, 9708], "op": "JUMP", "path": "22"}, "687": {"fn": "QueryProcessor.findNearestSample", "offset": [9680, 9708], "op": "JUMPDEST", "path": "22"}, "688": {"fn": "QueryProcessor.findNearestSample", "offset": [9731, 9743], "op": "PUSH1", "path": "22", "statement": 13, "value": "0x0"}, "690": {"fn": "QueryProcessor.findNearestSample", "offset": [9731, 9743], "op": "DUP2", "path": "22"}, "691": {"fn": "QueryProcessor.findNearestSample", "offset": [9731, 9743], "op": "DUP2", "path": "22"}, "692": {"fn": "QueryProcessor.findNearestSample", "offset": [9731, 9743], "op": "MSTORE", "path": "22"}, "693": {"fn": "QueryProcessor.findNearestSample", "offset": [9731, 9743], "op": "PUSH1", "path": "22", "value": "0x20"}, "695": {"fn": "QueryProcessor.findNearestSample", "offset": [9731, 9743], "op": "DUP15", "path": "22"}, "696": {"fn": "QueryProcessor.findNearestSample", "offset": [9731, 9743], "op": "SWAP1", "path": "22"}, "697": {"fn": "QueryProcessor.findNearestSample", "offset": [9731, 9743], "op": "MSTORE", "path": "22"}, "698": {"fn": "QueryProcessor.findNearestSample", "offset": [9731, 9743], "op": "PUSH1", "path": "22", "value": "0x40"}, "700": {"fn": "QueryProcessor.findNearestSample", "offset": [9731, 9743], "op": "SWAP1", "path": "22"}, "701": {"fn": "QueryProcessor.findNearestSample", "offset": [9731, 9743], "op": "KECCAK256", "path": "22"}, "702": {"fn": "QueryProcessor.findNearestSample", "offset": [9731, 9743], "op": "SLOAD", "path": "22"}, "703": {"fn": "QueryProcessor.findNearestSample", "offset": [9674, 9708], "op": "SWAP1", "path": "22"}, "704": {"fn": "QueryProcessor.findNearestSample", "offset": [9674, 9708], "op": "SWAP5", "path": "22"}, "705": {"op": "POP"}, "706": {"fn": "QueryProcessor.findNearestSample", "offset": [9731, 9743], "op": "SWAP3", "path": "22"}, "707": {"op": "POP"}, "708": {"fn": "QueryProcessor.findNearestSample", "offset": [9775, 9793], "op": "PUSH2", "path": "22", "statement": 14, "value": "0x2CC"}, "711": {"fn": "QueryProcessor.findNearestSample", "offset": [9731, 9743], "op": "DUP4", "path": "22"}, "712": {"fn": "QueryProcessor.findNearestSample", "offset": [9775, 9791], "op": "PUSH2", "path": "22", "value": "0x3C7"}, "715": {"fn": "QueryProcessor.findNearestSample", "jump": "i", "offset": [9775, 9793], "op": "JUMP", "path": "22"}, "716": {"fn": "QueryProcessor.findNearestSample", "offset": [9775, 9793], "op": "JUMPDEST", "path": "22"}, "717": {"fn": "QueryProcessor.findNearestSample", "offset": [9757, 9793], "op": "SWAP2", "path": "22"}, "718": {"fn": "QueryProcessor.findNearestSample", "offset": [9757, 9793], "op": "POP", "path": "22"}, "719": {"fn": "QueryProcessor.findNearestSample", "offset": [9830, 9840], "op": "DUP11", "path": "22"}, "720": {"fn": "QueryProcessor.findNearestSample", "offset": [9812, 9827], "op": "DUP3", "path": "22"}, "721": {"branch": 92, "fn": "QueryProcessor.findNearestSample", "offset": [9812, 9840], "op": "LT", "path": "22"}, "722": {"fn": "QueryProcessor.findNearestSample", "offset": [9808, 10666], "op": "ISZERO", "path": "22"}, "723": {"fn": "QueryProcessor.findNearestSample", "offset": [9808, 10666], "op": "PUSH2", "path": "22", "value": "0x2E1"}, "726": {"branch": 92, "fn": "QueryProcessor.findNearestSample", "offset": [9808, 10666], "op": "JUMPI", "path": "22"}, "727": {"fn": "QueryProcessor.findNearestSample", "offset": [9980, 9996], "op": "DUP1", "path": "22", "statement": 15}, "728": {"fn": "QueryProcessor.findNearestSample", "offset": [9999, 10000], "op": "PUSH1", "path": "22", "value": "0x1"}, "730": {"fn": "QueryProcessor.findNearestSample", "offset": [9980, 10000], "op": "ADD", "path": "22"}, "731": {"fn": "QueryProcessor.findNearestSample", "offset": [9974, 10000], "op": "SWAP6", "path": "22"}, "732": {"fn": "QueryProcessor.findNearestSample", "offset": [9974, 10000], "op": "POP", "path": "22"}, "733": {"fn": "QueryProcessor.findNearestSample", "offset": [9808, 10666], "op": "PUSH2", "path": "22", "value": "0x305"}, "736": {"fn": "QueryProcessor.findNearestSample", "offset": [9808, 10666], "op": "JUMP", "path": "22"}, "737": {"fn": "QueryProcessor.findNearestSample", "offset": [9808, 10666], "op": "JUMPDEST", "path": "22"}, "738": {"fn": "QueryProcessor.findNearestSample", "offset": [10043, 10053], "op": "DUP11", "path": "22"}, "739": {"fn": "QueryProcessor.findNearestSample", "offset": [10025, 10040], "op": "DUP3", "path": "22"}, "740": {"branch": 93, "fn": "QueryProcessor.findNearestSample", "offset": [10025, 10053], "op": "GT", "path": "22"}, "741": {"fn": "QueryProcessor.findNearestSample", "offset": [10021, 10666], "op": "ISZERO", "path": "22"}, "742": {"fn": "QueryProcessor.findNearestSample", "offset": [10021, 10666], "op": "PUSH2", "path": "22", "value": "0x2F4"}, "745": {"branch": 93, "fn": "QueryProcessor.findNearestSample", "offset": [10021, 10666], "op": "JUMPI", "path": "22"}, "746": {"fn": "QueryProcessor.findNearestSample", "offset": [10448, 10449], "op": "PUSH1", "path": "22", "statement": 16, "value": "0x1"}, "748": {"fn": "QueryProcessor.findNearestSample", "offset": [10429, 10445], "op": "DUP2", "path": "22"}, "749": {"fn": "QueryProcessor.findNearestSample", "offset": [10429, 10449], "op": "SUB", "path": "22"}, "750": {"fn": "QueryProcessor.findNearestSample", "offset": [10422, 10449], "op": "SWAP5", "path": "22"}, "751": {"fn": "QueryProcessor.findNearestSample", "offset": [10422, 10449], "op": "POP", "path": "22"}, "752": {"fn": "QueryProcessor.findNearestSample", "offset": [10021, 10666], "op": "PUSH2", "path": "22", "value": "0x305"}, "755": {"fn": "QueryProcessor.findNearestSample", "offset": [10021, 10666], "op": "JUMP", "path": "22"}, "756": {"fn": "QueryProcessor.findNearestSample", "offset": [10021, 10666], "op": "JUMPDEST", "path": "22"}, "757": {"fn": "QueryProcessor.findNearestSample", "offset": [10636, 10642], "op": "DUP3", "path": "22", "statement": 17}, "758": {"fn": "QueryProcessor.findNearestSample", "offset": [10644, 10650], "op": "DUP4", "path": "22"}, "759": {"fn": "QueryProcessor.findNearestSample", "offset": [10628, 10651], "op": "SWAP8", "path": "22"}, "760": {"fn": "QueryProcessor.findNearestSample", "offset": [10628, 10651], "op": "POP", "path": "22"}, "761": {"fn": "QueryProcessor.findNearestSample", "offset": [10628, 10651], "op": "SWAP8", "path": "22"}, "762": {"fn": "QueryProcessor.findNearestSample", "offset": [10628, 10651], "op": "POP", "path": "22"}, "763": {"fn": "QueryProcessor.findNearestSample", "offset": [10628, 10651], "op": "POP", "path": "22"}, "764": {"fn": "QueryProcessor.findNearestSample", "offset": [10628, 10651], "op": "POP", "path": "22"}, "765": {"fn": "QueryProcessor.findNearestSample", "offset": [10628, 10651], "op": "POP", "path": "22"}, "766": {"fn": "QueryProcessor.findNearestSample", "offset": [10628, 10651], "op": "POP", "path": "22"}, "767": {"fn": "QueryProcessor.findNearestSample", "offset": [10628, 10651], "op": "POP", "path": "22"}, "768": {"fn": "QueryProcessor.findNearestSample", "offset": [10628, 10651], "op": "POP", "path": "22"}, "769": {"fn": "QueryProcessor.findNearestSample", "offset": [10628, 10651], "op": "PUSH2", "path": "22", "value": "0x35A"}, "772": {"fn": "QueryProcessor.findNearestSample", "offset": [10628, 10651], "op": "JUMP", "path": "22"}, "773": {"fn": "QueryProcessor.findNearestSample", "offset": [10021, 10666], "op": "JUMPDEST", "path": "22"}, "774": {"fn": "QueryProcessor.findNearestSample", "offset": [9414, 10676], "op": "POP", "path": "22"}, "775": {"fn": "QueryProcessor.findNearestSample", "offset": [9414, 10676], "op": "PUSH2", "path": "22", "value": "0x298"}, "778": {"fn": "QueryProcessor.findNearestSample", "offset": [9414, 10676], "op": "JUMP", "path": "22"}, "779": {"fn": "QueryProcessor.findNearestSample", "offset": [9414, 10676], "op": "JUMPDEST", "path": "22"}, "780": {"fn": "QueryProcessor.findNearestSample", "offset": [10810, 10820], "op": "DUP10", "path": "22", "statement": 18}, "781": {"fn": "QueryProcessor.findNearestSample", "offset": [10792, 10807], "op": "DUP2", "path": "22"}, "782": {"branch": 94, "fn": "QueryProcessor.findNearestSample", "offset": [10792, 10820], "op": "LT", "path": "22"}, "783": {"fn": "QueryProcessor.findNearestSample", "offset": [10792, 10884], "op": "PUSH2", "path": "22", "value": "0x333"}, "786": {"branch": 94, "fn": "QueryProcessor.findNearestSample", "offset": [10792, 10884], "op": "JUMPI", "path": "22"}, "787": {"fn": "QueryProcessor.findNearestSample", "offset": [10856, 10863], "op": "DUP11", "path": "22"}, "788": {"fn": "QueryProcessor.findNearestSample", "offset": [10856, 10875], "op": "PUSH1", "path": "22", "value": "0x0"}, "790": {"fn": "QueryProcessor.findNearestSample", "offset": [10864, 10874], "op": "PUSH2", "path": "22", "value": "0x31E"}, "793": {"fn": "QueryProcessor.findNearestSample", "offset": [10864, 10867], "op": "DUP6", "path": "22"}, "794": {"fn": "QueryProcessor.findNearestSample", "offset": [10864, 10872], "op": "PUSH2", "path": "22", "value": "0x4AF"}, "797": {"fn": "QueryProcessor.findNearestSample", "jump": "i", "offset": [10864, 10874], "op": "JUMP", "path": "22"}, "798": {"fn": "QueryProcessor.findNearestSample", "offset": [10864, 10874], "op": "JUMPDEST", "path": "22"}, "799": {"fn": "QueryProcessor.findNearestSample", "offset": [10856, 10875], "op": "DUP2", "path": "22"}, "800": {"fn": "QueryProcessor.findNearestSample", "offset": [10856, 10875], "op": "MSTORE", "path": "22"}, "801": {"fn": "QueryProcessor.findNearestSample", "offset": [10856, 10875], "op": "PUSH1", "path": "22", "value": "0x20"}, "803": {"fn": "QueryProcessor.findNearestSample", "offset": [10856, 10875], "op": "ADD", "path": "22"}, "804": {"fn": "QueryProcessor.findNearestSample", "offset": [10856, 10875], "op": "SWAP1", "path": "22"}, "805": {"fn": "QueryProcessor.findNearestSample", "offset": [10856, 10875], "op": "DUP2", "path": "22"}, "806": {"fn": "QueryProcessor.findNearestSample", "offset": [10856, 10875], "op": "MSTORE", "path": "22"}, "807": {"fn": "QueryProcessor.findNearestSample", "offset": [10856, 10875], "op": "PUSH1", "path": "22", "value": "0x20"}, "809": {"fn": "QueryProcessor.findNearestSample", "offset": [10856, 10875], "op": "ADD", "path": "22"}, "810": {"fn": "QueryProcessor.findNearestSample", "offset": [10856, 10875], "op": "PUSH1", "path": "22", "value": "0x0"}, "812": {"fn": "QueryProcessor.findNearestSample", "offset": [10856, 10875], "op": "KECCAK256", "path": "22"}, "813": {"fn": "QueryProcessor.findNearestSample", "offset": [10856, 10875], "op": "SLOAD", "path": "22"}, "814": {"fn": "QueryProcessor.findNearestSample", "offset": [10877, 10883], "op": "DUP3", "path": "22"}, "815": {"fn": "QueryProcessor.findNearestSample", "offset": [10792, 10884], "op": "PUSH2", "path": "22", "value": "0x350"}, "818": {"fn": "QueryProcessor.findNearestSample", "offset": [10792, 10884], "op": "JUMP", "path": "22"}, "819": {"fn": "QueryProcessor.findNearestSample", "offset": [10792, 10884], "op": "JUMPDEST", "path": "22"}, "820": {"fn": "QueryProcessor.findNearestSample", "offset": [10824, 10830], "op": "DUP2", "path": "22"}, "821": {"fn": "QueryProcessor.findNearestSample", "offset": [10832, 10839], "op": "DUP12", "path": "22"}, "822": {"fn": "QueryProcessor.findNearestSample", "offset": [10832, 10851], "op": "PUSH1", "path": "22", "value": "0x0"}, "824": {"fn": "QueryProcessor.findNearestSample", "offset": [10840, 10850], "op": "PUSH2", "path": "22", "value": "0x340"}, "827": {"fn": "QueryProcessor.findNearestSample", "offset": [10840, 10843], "op": "DUP7", "path": "22"}, "828": {"fn": "QueryProcessor.findNearestSample", "offset": [10840, 10848], "op": "PUSH2", "path": "22", "value": "0x495"}, "831": {"fn": "QueryProcessor.findNearestSample", "jump": "i", "offset": [10840, 10850], "op": "JUMP", "path": "22"}, "832": {"fn": "QueryProcessor.findNearestSample", "offset": [10840, 10850], "op": "JUMPDEST", "path": "22"}, "833": {"fn": "QueryProcessor.findNearestSample", "offset": [10832, 10851], "op": "DUP2", "path": "22"}, "834": {"fn": "QueryProcessor.findNearestSample", "offset": [10832, 10851], "op": "MSTORE", "path": "22"}, "835": {"fn": "QueryProcessor.findNearestSample", "offset": [10832, 10851], "op": "PUSH1", "path": "22", "value": "0x20"}, "837": {"fn": "QueryProcessor.findNearestSample", "offset": [10832, 10851], "op": "ADD", "path": "22"}, "838": {"fn": "QueryProcessor.findNearestSample", "offset": [10832, 10851], "op": "SWAP1", "path": "22"}, "839": {"fn": "QueryProcessor.findNearestSample", "offset": [10832, 10851], "op": "DUP2", "path": "22"}, "840": {"fn": "QueryProcessor.findNearestSample", "offset": [10832, 10851], "op": "MSTORE", "path": "22"}, "841": {"fn": "QueryProcessor.findNearestSample", "offset": [10832, 10851], "op": "PUSH1", "path": "22", "value": "0x20"}, "843": {"fn": "QueryProcessor.findNearestSample", "offset": [10832, 10851], "op": "ADD", "path": "22"}, "844": {"fn": "QueryProcessor.findNearestSample", "offset": [10832, 10851], "op": "PUSH1", "path": "22", "value": "0x0"}, "846": {"fn": "QueryProcessor.findNearestSample", "offset": [10832, 10851], "op": "KECCAK256", "path": "22"}, "847": {"fn": "QueryProcessor.findNearestSample", "offset": [10832, 10851], "op": "SLOAD", "path": "22"}, "848": {"fn": "QueryProcessor.findNearestSample", "offset": [10792, 10884], "op": "JUMPDEST", "path": "22"}, "849": {"fn": "QueryProcessor.findNearestSample", "offset": [10785, 10884], "op": "SWAP7", "path": "22"}, "850": {"fn": "QueryProcessor.findNearestSample", "offset": [10785, 10884], "op": "POP", "path": "22"}, "851": {"fn": "QueryProcessor.findNearestSample", "offset": [10785, 10884], "op": "SWAP7", "path": "22"}, "852": {"fn": "QueryProcessor.findNearestSample", "offset": [10785, 10884], "op": "POP", "path": "22"}, "853": {"fn": "QueryProcessor.findNearestSample", "offset": [10785, 10884], "op": "POP", "path": "22"}, "854": {"fn": "QueryProcessor.findNearestSample", "offset": [10785, 10884], "op": "POP", "path": "22"}, "855": {"fn": "QueryProcessor.findNearestSample", "offset": [10785, 10884], "op": "POP", "path": "22"}, "856": {"fn": "QueryProcessor.findNearestSample", "offset": [10785, 10884], "op": "POP", "path": "22"}, "857": {"fn": "QueryProcessor.findNearestSample", "offset": [10785, 10884], "op": "POP", "path": "22"}, "858": {"fn": "QueryProcessor.findNearestSample", "offset": [8281, 10891], "op": "JUMPDEST", "path": "22"}, "859": {"fn": "QueryProcessor.findNearestSample", "offset": [8281, 10891], "op": "SWAP5", "path": "22"}, "860": {"fn": "QueryProcessor.findNearestSample", "offset": [8281, 10891], "op": "POP", "path": "22"}, "861": {"fn": "QueryProcessor.findNearestSample", "offset": [8281, 10891], "op": "SWAP5", "path": "22"}, "862": {"fn": "QueryProcessor.findNearestSample", "offset": [8281, 10891], "op": "SWAP3", "path": "22"}, "863": {"fn": "QueryProcessor.findNearestSample", "offset": [8281, 10891], "op": "POP", "path": "22"}, "864": {"fn": "QueryProcessor.findNearestSample", "offset": [8281, 10891], "op": "POP", "path": "22"}, "865": {"fn": "QueryProcessor.findNearestSample", "offset": [8281, 10891], "op": "POP", "path": "22"}, "866": {"fn": "QueryProcessor.findNearestSample", "jump": "o", "offset": [8281, 10891], "op": "JUMP", "path": "22"}, "867": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2113, 2706], "op": "JUMPDEST", "path": "22"}, "868": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2310, 2317], "op": "PUSH1", "path": "22", "value": "0x0"}, "870": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2329, 2378], "op": "PUSH2", "path": "22", "statement": 19, "value": "0x379"}, "873": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2338, 2343], "op": "DUP4", "path": "22"}, "874": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2338, 2348], "op": "PUSH1", "path": "22", "value": "0x20"}, "876": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2338, 2348], "op": "ADD", "path": "22"}, "877": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2338, 2348], "op": "MLOAD", "path": "22"}, "878": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2352, 2353], "op": "PUSH1", "path": "22", "value": "0x0"}, "880": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2338, 2353], "op": "EQ", "path": "22"}, "881": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2338, 2353], "op": "ISZERO", "path": "22"}, "882": {"offset": [6610, 6613], "op": "PUSH2", "path": "30", "value": "0x13C"}, "885": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2329, 2337], "op": "PUSH2", "path": "22", "value": "0x3DB"}, "888": {"fn": "QueryProcessor.getTimeWeightedAverage", "jump": "i", "offset": [2329, 2378], "op": "JUMP", "path": "22"}, "889": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2329, 2378], "op": "JUMPDEST", "path": "22"}, "890": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2389, 2412], "op": "PUSH1", "path": "22", "value": "0x0"}, "892": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2415, 2495], "op": "PUSH2", "path": "22", "value": "0x395"}, "895": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2434, 2441], "op": "DUP6", "path": "22"}, "896": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2443, 2448], "op": "DUP6", "path": "22"}, "897": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2443, 2457], "op": "PUSH1", "path": "22", "value": "0x0"}, "899": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2443, 2457], "op": "ADD", "path": "22"}, "900": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2443, 2457], "op": "MLOAD", "path": "22"}, "901": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2459, 2470], "op": "DUP6", "path": "22"}, "902": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2484, 2489], "op": "DUP8", "path": "22"}, "903": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2484, 2494], "op": "PUSH1", "path": "22", "value": "0x20"}, "905": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2484, 2494], "op": "ADD", "path": "22"}, "906": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2484, 2494], "op": "MLOAD", "path": "22"}, "907": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2472, 2477], "op": "DUP9", "path": "22"}, "908": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2472, 2481], "op": "PUSH1", "path": "22", "value": "0x40"}, "910": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2472, 2481], "op": "ADD", "path": "22"}, "911": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2472, 2481], "op": "MLOAD", "path": "22"}, "912": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2472, 2494], "op": "ADD", "path": "22"}, "913": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2415, 2433], "op": "PUSH2", "path": "22", "value": "0x111"}, "916": {"fn": "QueryProcessor.getTimeWeightedAverage", "jump": "i", "offset": [2415, 2495], "op": "JUMP", "path": "22"}, "917": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2415, 2495], "op": "JUMPDEST", "path": "22"}, "918": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2389, 2495], "op": "SWAP1", "path": "22"}, "919": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2389, 2495], "op": "POP", "path": "22"}, "920": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2505, 2526], "op": "PUSH1", "path": "22", "value": "0x0"}, "922": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2529, 2596], "op": "PUSH2", "path": "22", "value": "0x3AD"}, "925": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2548, 2555], "op": "DUP7", "path": "22"}, "926": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2557, 2562], "op": "DUP7", "path": "22"}, "927": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2557, 2571], "op": "PUSH1", "path": "22", "value": "0x0"}, "929": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2557, 2571], "op": "ADD", "path": "22"}, "930": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2557, 2571], "op": "MLOAD", "path": "22"}, "931": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2573, 2584], "op": "DUP7", "path": "22"}, "932": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2586, 2591], "op": "DUP9", "path": "22"}, "933": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2586, 2595], "op": "PUSH1", "path": "22", "value": "0x40"}, "935": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2586, 2595], "op": "ADD", "path": "22"}, "936": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2586, 2595], "op": "MLOAD", "path": "22"}, "937": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2529, 2547], "op": "PUSH2", "path": "22", "value": "0x111"}, "940": {"fn": "QueryProcessor.getTimeWeightedAverage", "jump": "i", "offset": [2529, 2596], "op": "JUMP", "path": "22"}, "941": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2529, 2596], "op": "JUMPDEST", "path": "22"}, "942": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2505, 2596], "op": "SWAP1", "path": "22"}, "943": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2505, 2596], "op": "POP", "path": "22"}, "944": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2613, 2699], "op": "PUSH2", "path": "22", "statement": 20, "value": "0x107"}, "947": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2687, 2692], "op": "DUP6", "path": "22"}, "948": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2687, 2697], "op": "PUSH1", "path": "22", "value": "0x20"}, "950": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2687, 2697], "op": "ADD", "path": "22"}, "951": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2687, 2697], "op": "MLOAD", "path": "22"}, "952": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2660, 2676], "op": "DUP4", "path": "22"}, "953": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2643, 2657], "op": "DUP4", "path": "22"}, "954": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2643, 2676], "op": "SUB", "path": "22"}, "955": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2642, 2698], "op": "DUP2", "path": "22"}, "956": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2642, 2698], "op": "PUSH2", "path": "22", "value": "0x3C1"}, "959": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2642, 2698], "op": "JUMPI", "path": "22"}, "960": {"dev": "Division by zero", "fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2642, 2698], "op": "INVALID", "path": "22"}, "961": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2642, 2698], "op": "JUMPDEST", "path": "22"}, "962": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2642, 2698], "op": "SDIV", "path": "22"}, "963": {"fn": "QueryProcessor.getTimeWeightedAverage", "offset": [2613, 2641], "op": "PUSH2", "path": "22", "value": "0x43E"}, "966": {"fn": "QueryProcessor.getTimeWeightedAverage", "jump": "i", "offset": [2613, 2699], "op": "JUMP", "path": "22"}, "967": {"fn": "Samples.timestamp", "offset": [5583, 5712], "op": "JUMPDEST", "path": "23"}, "968": {"fn": "Samples.timestamp", "offset": [5641, 5648], "op": "PUSH1", "path": "23", "value": "0x0"}, "970": {"fn": "Samples.timestamp", "offset": [5667, 5705], "op": "PUSH2", "path": "23", "statement": 21, "value": "0x3D3"}, "973": {"fn": "Samples.timestamp", "offset": [5667, 5673], "op": "DUP3", "path": "23"}, "974": {"fn": "Samples.timestamp", "offset": [5641, 5648], "op": "DUP3", "path": "23"}, "975": {"fn": "Samples.timestamp", "offset": [5667, 5686], "op": "PUSH2", "path": "23", "value": "0x4BC"}, "978": {"fn": "Samples.timestamp", "jump": "i", "offset": [5667, 5705], "op": "JUMP", "path": "23"}, "979": {"fn": "Samples.timestamp", "offset": [5667, 5705], "op": "JUMPDEST", "path": "23"}, "980": {"fn": "Samples.timestamp", "offset": [5660, 5705], "op": "SWAP1", "path": "23"}, "981": {"fn": "Samples.timestamp", "offset": [5660, 5705], "op": "POP", "path": "23"}, "982": {"fn": "Samples.timestamp", "offset": [5583, 5712], "op": "JUMPDEST", "path": "23"}, "983": {"fn": "Samples.timestamp", "offset": [5583, 5712], "op": "SWAP2", "path": "23"}, "984": {"fn": "Samples.timestamp", "offset": [5583, 5712], "op": "SWAP1", "path": "23"}, "985": {"fn": "Samples.timestamp", "offset": [5583, 5712], "op": "POP", "path": "23"}, "986": {"fn": "Samples.timestamp", "jump": "o", "offset": [5583, 5712], "op": "JUMP", "path": "23"}, "987": {"fn": "_require", "offset": [866, 967], "op": "JUMPDEST", "path": "30"}, "988": {"fn": "_require", "offset": [935, 944], "op": "DUP2", "path": "30"}, "989": {"fn": "_require", "offset": [930, 964], "op": "PUSH2", "path": "30", "value": "0x3E9"}, "992": {"fn": "_require", "offset": [930, 964], "op": "JUMPI", "path": "30"}, "993": {"fn": "_require", "offset": [946, 964], "op": "PUSH2", "path": "30", "statement": 22, "value": "0x3E9"}, "996": {"fn": "_require", "offset": [954, 963], "op": "DUP2", "path": "30"}, "997": {"fn": "_require", "offset": [946, 953], "op": "PUSH2", "path": "30", "value": "0x4C6"}, "1000": {"fn": "_require", "jump": "i", "offset": [946, 964], "op": "JUMP", "path": "30"}, "1001": {"fn": "_require", "offset": [946, 964], "op": "JUMPDEST", "path": "30"}, "1002": {"fn": "_require", "offset": [866, 967], "op": "POP", "path": "30"}, "1003": {"fn": "_require", "offset": [866, 967], "op": "POP", "path": "30"}, "1004": {"fn": "_require", "jump": "o", "offset": [866, 967], "op": "JUMP", "path": "30"}, "1005": {"fn": "Samples.instant", "offset": [4515, 4967], "op": "JUMPDEST", "path": "23"}, "1006": {"fn": "Samples.instant", "offset": [4603, 4609], "op": "PUSH1", "path": "23", "value": "0x0"}, "1008": {"fn": "Samples.instant", "offset": [4603, 4609], "op": "DUP1", "path": "23"}, "1009": {"fn": "Samples.instant", "offset": [4625, 4633], "op": "DUP3", "path": "23"}, "1010": {"fn": "Samples.instant", "offset": [4625, 4669], "op": "PUSH1", "path": "23", "value": "0x2"}, "1012": {"fn": "Samples.instant", "offset": [4625, 4669], "op": "DUP2", "path": "23"}, "1013": {"fn": "Samples.instant", "offset": [4625, 4669], "op": "GT", "path": "23"}, "1014": {"fn": "Samples.instant", "offset": [4625, 4669], "op": "ISZERO", "path": "23"}, "1015": {"fn": "Samples.instant", "offset": [4625, 4669], "op": "PUSH2", "path": "23", "value": "0x3FC"}, "1018": {"fn": "Samples.instant", "offset": [4625, 4669], "op": "JUMPI", "path": "23"}, "1019": {"fn": "Samples.instant", "offset": [4625, 4669], "op": "INVALID", "path": "23"}, "1020": {"fn": "Samples.instant", "offset": [4625, 4669], "op": "JUMPDEST", "path": "23"}, "1021": {"branch": 106, "fn": "Samples.instant", "offset": [4625, 4669], "op": "EQ", "path": "23"}, "1022": {"fn": "Samples.instant", "offset": [4621, 4961], "op": "ISZERO", "path": "23"}, "1023": {"fn": "Samples.instant", "offset": [4621, 4961], "op": "PUSH2", "path": "23", "value": "0x412"}, "1026": {"branch": 106, "fn": "Samples.instant", "offset": [4621, 4961], "op": "JUMPI", "path": "23"}, "1027": {"fn": "Samples.instant", "offset": [4692, 4717], "op": "PUSH2", "path": "23", "statement": 23, "value": "0x40B"}, "1030": {"fn": "Samples.instant", "offset": [4710, 4716], "op": "DUP4", "path": "23"}, "1031": {"fn": "Samples.instant", "offset": [4692, 4709], "op": "PUSH2", "path": "23", "value": "0x519"}, "1034": {"fn": "Samples.instant", "jump": "i", "offset": [4692, 4717], "op": "JUMP", "path": "23"}, "1035": {"fn": "Samples.instant", "offset": [4692, 4717], "op": "JUMPDEST", "path": "23"}, "1036": {"fn": "Samples.instant", "offset": [4685, 4717], "op": "SWAP1", "path": "23"}, "1037": {"fn": "Samples.instant", "offset": [4685, 4717], "op": "POP", "path": "23"}, "1038": {"fn": "Samples.instant", "offset": [4685, 4717], "op": "PUSH2", "path": "23", "value": "0x438"}, "1041": {"fn": "Samples.instant", "offset": [4685, 4717], "op": "JUMP", "path": "23"}, "1042": {"fn": "Samples.instant", "offset": [4621, 4961], "op": "JUMPDEST", "path": "23"}, "1043": {"fn": "Samples.instant", "offset": [4750, 4781], "op": "PUSH1", "path": "23", "value": "0x1"}, "1045": {"fn": "Samples.instant", "offset": [4738, 4746], "op": "DUP3", "path": "23"}, "1046": {"fn": "Samples.instant", "offset": [4738, 4781], "op": "PUSH1", "path": "23", "value": "0x2"}, "1048": {"fn": "Samples.instant", "offset": [4738, 4781], "op": "DUP2", "path": "23"}, "1049": {"fn": "Samples.instant", "offset": [4738, 4781], "op": "GT", "path": "23"}, "1050": {"fn": "Samples.instant", "offset": [4738, 4781], "op": "ISZERO", "path": "23"}, "1051": {"fn": "Samples.instant", "offset": [4738, 4781], "op": "PUSH2", "path": "23", "value": "0x420"}, "1054": {"fn": "Samples.instant", "offset": [4738, 4781], "op": "JUMPI", "path": "23"}, "1055": {"fn": "Samples.instant", "offset": [4738, 4781], "op": "INVALID", "path": "23"}, "1056": {"fn": "Samples.instant", "offset": [4738, 4781], "op": "JUMPDEST", "path": "23"}, "1057": {"branch": 107, "fn": "Samples.instant", "offset": [4738, 4781], "op": "EQ", "path": "23"}, "1058": {"fn": "Samples.instant", "offset": [4734, 4961], "op": "ISZERO", "path": "23"}, "1059": {"fn": "Samples.instant", "offset": [4734, 4961], "op": "PUSH2", "path": "23", "value": "0x42F"}, "1062": {"branch": 107, "fn": "Samples.instant", "offset": [4734, 4961], "op": "JUMPI", "path": "23"}, "1063": {"fn": "Samples.instant", "offset": [4804, 4828], "op": "PUSH2", "path": "23", "statement": 24, "value": "0x40B"}, "1066": {"fn": "Samples.instant", "offset": [4821, 4827], "op": "DUP4", "path": "23"}, "1067": {"fn": "Samples.instant", "offset": [4804, 4820], "op": "PUSH2", "path": "23", "value": "0x526"}, "1070": {"fn": "Samples.instant", "jump": "i", "offset": [4804, 4828], "op": "JUMP", "path": "23"}, "1071": {"fn": "Samples.instant", "offset": [4734, 4961], "op": "JUMPDEST", "path": "23"}, "1072": {"fn": "Samples.instant", "offset": [4925, 4950], "op": "PUSH2", "path": "23", "statement": 25, "value": "0x40B"}, "1075": {"fn": "Samples.instant", "offset": [4943, 4949], "op": "DUP4", "path": "23"}, "1076": {"fn": "Samples.instant", "offset": [4925, 4942], "op": "PUSH2", "path": "23", "value": "0x533"}, "1079": {"fn": "Samples.instant", "jump": "i", "offset": [4925, 4950], "op": "JUMP", "path": "23"}, "1080": {"fn": "Samples.instant", "offset": [4734, 4961], "op": "JUMPDEST", "path": "23"}, "1081": {"fn": "Samples.instant", "offset": [4515, 4967], "op": "SWAP3", "path": "23"}, "1082": {"fn": "Samples.instant", "offset": [4515, 4967], "op": "SWAP2", "path": "23"}, "1083": {"fn": "Samples.instant", "offset": [4515, 4967], "op": "POP", "path": "23"}, "1084": {"fn": "Samples.instant", "offset": [4515, 4967], "op": "POP", "path": "23"}, "1085": {"fn": "Samples.instant", "jump": "o", "offset": [4515, 4967], "op": "JUMP", "path": "23"}, "1086": {"fn": "LogCompression.fromLowResLog", "offset": [2590, 2739], "op": "JUMPDEST", "path": "35"}, "1087": {"fn": "LogCompression.fromLowResLog", "offset": [2650, 2657], "op": "PUSH1", "path": "35", "value": "0x0"}, "1089": {"fn": "LogCompression.fromLowResLog", "offset": [2684, 2731], "op": "PUSH2", "path": "35", "statement": 26, "value": "0x3D3"}, "1092": {"offset": [1259, 1263], "op": "PUSH6", "path": "35", "value": "0x5AF3107A4000"}, "1099": {"fn": "LogCompression.fromLowResLog", "offset": [2699, 2704], "op": "DUP4", "path": "35"}, "1100": {"fn": "LogCompression.fromLowResLog", "offset": [2699, 2730], "op": "MUL", "path": "35"}, "1101": {"fn": "LogCompression.fromLowResLog", "offset": [2684, 2698], "op": "PUSH2", "path": "35", "value": "0x540"}, "1104": {"fn": "LogCompression.fromLowResLog", "jump": "i", "offset": [2684, 2731], "op": "JUMP", "path": "35"}, "1105": {"fn": "Samples.accumulator", "offset": [5066, 5519], "op": "JUMPDEST", "path": "23"}, "1106": {"fn": "Samples.accumulator", "offset": [5158, 5164], "op": "PUSH1", "path": "23", "value": "0x0"}, "1108": {"fn": "Samples.accumulator", "offset": [5158, 5164], "op": "DUP1", "path": "23"}, "1109": {"fn": "Samples.accumulator", "offset": [5180, 5188], "op": "DUP3", "path": "23"}, "1110": {"fn": "Samples.accumulator", "offset": [5180, 5224], "op": "PUSH1", "path": "23", "value": "0x2"}, "1112": {"fn": "Samples.accumulator", "offset": [5180, 5224], "op": "DUP2", "path": "23"}, "1113": {"fn": "Samples.accumulator", "offset": [5180, 5224], "op": "GT", "path": "23"}, "1114": {"fn": "Samples.accumulator", "offset": [5180, 5224], "op": "ISZERO", "path": "23"}, "1115": {"fn": "Samples.accumulator", "offset": [5180, 5224], "op": "PUSH2", "path": "23", "value": "0x460"}, "1118": {"fn": "Samples.accumulator", "offset": [5180, 5224], "op": "JUMPI", "path": "23"}, "1119": {"fn": "Samples.accumulator", "offset": [5180, 5224], "op": "INVALID", "path": "23"}, "1120": {"fn": "Samples.accumulator", "offset": [5180, 5224], "op": "JUMPDEST", "path": "23"}, "1121": {"branch": 108, "fn": "Samples.accumulator", "offset": [5180, 5224], "op": "EQ", "path": "23"}, "1122": {"fn": "Samples.accumulator", "offset": [5176, 5513], "op": "ISZERO", "path": "23"}, "1123": {"fn": "Samples.accumulator", "offset": [5176, 5513], "op": "PUSH2", "path": "23", "value": "0x46F"}, "1126": {"branch": 108, "fn": "Samples.accumulator", "offset": [5176, 5513], "op": "JUMPI", "path": "23"}, "1127": {"fn": "Samples.accumulator", "offset": [5247, 5271], "op": "PUSH2", "path": "23", "statement": 27, "value": "0x40B"}, "1130": {"fn": "Samples.accumulator", "offset": [5264, 5270], "op": "DUP4", "path": "23"}, "1131": {"fn": "Samples.accumulator", "offset": [5247, 5263], "op": "PUSH2", "path": "23", "value": "0x91E"}, "1134": {"fn": "Samples.accumulator", "jump": "i", "offset": [5247, 5271], "op": "JUMP", "path": "23"}, "1135": {"fn": "Samples.accumulator", "offset": [5176, 5513], "op": "JUMPDEST", "path": "23"}, "1136": {"fn": "Samples.accumulator", "offset": [5304, 5335], "op": "PUSH1", "path": "23", "value": "0x1"}, "1138": {"fn": "Samples.accumulator", "offset": [5292, 5300], "op": "DUP3", "path": "23"}, "1139": {"fn": "Samples.accumulator", "offset": [5292, 5335], "op": "PUSH1", "path": "23", "value": "0x2"}, "1141": {"fn": "Samples.accumulator", "offset": [5292, 5335], "op": "DUP2", "path": "23"}, "1142": {"fn": "Samples.accumulator", "offset": [5292, 5335], "op": "GT", "path": "23"}, "1143": {"fn": "Samples.accumulator", "offset": [5292, 5335], "op": "ISZERO", "path": "23"}, "1144": {"fn": "Samples.accumulator", "offset": [5292, 5335], "op": "PUSH2", "path": "23", "value": "0x47D"}, "1147": {"fn": "Samples.accumulator", "offset": [5292, 5335], "op": "JUMPI", "path": "23"}, "1148": {"fn": "Samples.accumulator", "offset": [5292, 5335], "op": "INVALID", "path": "23"}, "1149": {"fn": "Samples.accumulator", "offset": [5292, 5335], "op": "JUMPDEST", "path": "23"}, "1150": {"branch": 109, "fn": "Samples.accumulator", "offset": [5292, 5335], "op": "EQ", "path": "23"}, "1151": {"fn": "Samples.accumulator", "offset": [5288, 5513], "op": "ISZERO", "path": "23"}, "1152": {"fn": "Samples.accumulator", "offset": [5288, 5513], "op": "PUSH2", "path": "23", "value": "0x48C"}, "1155": {"branch": 109, "fn": "Samples.accumulator", "offset": [5288, 5513], "op": "JUMPI", "path": "23"}, "1156": {"fn": "Samples.accumulator", "offset": [5358, 5381], "op": "PUSH2", "path": "23", "statement": 28, "value": "0x40B"}, "1159": {"fn": "Samples.accumulator", "offset": [5374, 5380], "op": "DUP4", "path": "23"}, "1160": {"fn": "Samples.accumulator", "offset": [5358, 5373], "op": "PUSH2", "path": "23", "value": "0x92B"}, "1163": {"fn": "Samples.accumulator", "jump": "i", "offset": [5358, 5381], "op": "JUMP", "path": "23"}, "1164": {"fn": "Samples.accumulator", "offset": [5288, 5513], "op": "JUMPDEST", "path": "23"}, "1165": {"fn": "Samples.accumulator", "offset": [5478, 5502], "op": "PUSH2", "path": "23", "statement": 29, "value": "0x40B"}, "1168": {"fn": "Samples.accumulator", "offset": [5495, 5501], "op": "DUP4", "path": "23"}, "1169": {"fn": "Samples.accumulator", "offset": [5478, 5494], "op": "PUSH2", "path": "23", "value": "0x938"}, "1172": {"fn": "Samples.accumulator", "jump": "i", "offset": [5478, 5502], "op": "JUMP", "path": "23"}, "1173": {"fn": "Buffer.next", "offset": [1205, 1303], "op": "JUMPDEST", "path": "20"}, "1174": {"fn": "Buffer.next", "offset": [1257, 1264], "op": "PUSH1", "path": "20", "value": "0x0"}, "1176": {"fn": "Buffer.next", "offset": [1283, 1296], "op": "PUSH2", "path": "20", "statement": 30, "value": "0x3D3"}, "1179": {"fn": "Buffer.next", "offset": [1287, 1292], "op": "DUP3", "path": "20"}, "1180": {"fn": "Buffer.next", "offset": [1294, 1295], "op": "PUSH1", "path": "20", "value": "0x1"}, "1182": {"fn": "Buffer.add", "offset": [1418, 1541], "op": "JUMPDEST", "path": "20"}, "1183": {"fn": "Buffer.add", "offset": [1485, 1492], "op": "PUSH1", "path": "20", "value": "0x0"}, "1185": {"offset": [899, 903], "op": "PUSH2", "path": "20", "value": "0x400"}, "1188": {"fn": "Buffer.add", "offset": [1512, 1526], "op": "DUP4", "path": "20", "statement": 31}, "1189": {"fn": "Buffer.add", "offset": [1512, 1526], "op": "DUP4", "path": "20"}, "1190": {"fn": "Buffer.add", "offset": [1512, 1526], "op": "ADD", "path": "20"}, "1191": {"fn": "Buffer.add", "offset": [1511, 1534], "op": "JUMPDEST", "path": "20"}, "1192": {"fn": "Buffer.add", "offset": [1511, 1534], "op": "MOD", "path": "20"}, "1193": {"fn": "Buffer.add", "offset": [1511, 1534], "op": "SWAP4", "path": "20"}, "1194": {"fn": "Buffer.add", "offset": [1418, 1541], "op": "SWAP3", "path": "20"}, "1195": {"op": "POP"}, "1196": {"op": "POP"}, "1197": {"op": "POP"}, "1198": {"fn": "Buffer.add", "jump": "o", "offset": [1418, 1541], "op": "JUMP", "path": "20"}, "1199": {"fn": "Buffer.prev", "offset": [1006, 1104], "op": "JUMPDEST", "path": "20"}, "1200": {"fn": "Buffer.prev", "offset": [1058, 1065], "op": "PUSH1", "path": "20", "value": "0x0"}, "1202": {"fn": "Buffer.prev", "offset": [1084, 1097], "op": "PUSH2", "path": "20", "statement": 32, "value": "0x3D3"}, "1205": {"fn": "Buffer.prev", "offset": [1088, 1093], "op": "DUP3", "path": "20"}, "1206": {"fn": "Buffer.prev", "offset": [1095, 1096], "op": "PUSH1", "path": "20", "value": "0x1"}, "1208": {"fn": "Buffer.prev", "offset": [1084, 1087], "op": "PUSH2", "path": "20", "value": "0x945"}, "1211": {"fn": "Buffer.prev", "jump": "i", "offset": [1084, 1097], "op": "JUMP", "path": "20"}, "1212": {"fn": "WordCodec.decodeUint31", "offset": [11062, 11204], "op": "JUMPDEST", "path": "37"}, "1213": {"fn": "WordCodec.decodeUint31", "offset": [11171, 11185], "op": "SHR", "path": "37", "statement": 33}, "1214": {"offset": [2439, 2450], "op": "PUSH4", "path": "37", "value": "0x7FFFFFFF"}, "1219": {"fn": "WordCodec.decodeUint31", "offset": [11163, 11197], "op": "AND", "path": "37"}, "1220": {"fn": "WordCodec.decodeUint31", "offset": [11163, 11197], "op": "SWAP1", "path": "37"}, "1221": {"fn": "WordCodec.decodeUint31", "jump": "o", "offset": [11062, 11204], "op": "JUMP", "path": "37"}, "1222": {"fn": "_revert", "offset": [1074, 4246], "op": "JUMPDEST", "path": "30"}, "1223": {"op": "PUSH3", "value": "0x461BCD"}, "1227": {"op": "PUSH1", "value": "0xE5"}, "1229": {"op": "SHL"}, "1230": {"fn": "_revert", "offset": [3588, 3591], "op": "PUSH1", "path": "30", "value": "0x0"}, "1232": {"fn": "_revert", "offset": [3581, 3660], "op": "SWAP1", "path": "30"}, "1233": {"fn": "_revert", "offset": [3581, 3660], "op": "DUP2", "path": "30"}, "1234": {"fn": "_revert", "offset": [3581, 3660], "op": "MSTORE", "path": "30"}, "1235": {"fn": "_revert", "offset": [3799, 3865], "op": "PUSH1", "path": "30", "value": "0x20"}, "1237": {"fn": "_revert", "offset": [3793, 3797], "op": "PUSH1", "path": "30", "value": "0x4"}, "1239": {"fn": "_revert", "offset": [3786, 3866], "op": "MSTORE", "path": "30"}, "1240": {"fn": "_revert", "offset": [3941, 3942], "op": "PUSH1", "path": "30", "value": "0x7"}, "1242": {"fn": "_revert", "offset": [3935, 3939], "op": "PUSH1", "path": "30", "value": "0x24"}, "1244": {"fn": "_revert", "offset": [3928, 3943], "op": "MSTORE", "path": "30"}, "1245": {"fn": "_revert", "offset": [2999, 3072], "op": "PUSH7", "path": "30", "value": "0x42414C23000030"}, "1253": {"fn": "_revert", "offset": [2210, 2212], "op": "PUSH1", "path": "30", "value": "0xA"}, "1255": {"fn": "_revert", "offset": [2243, 2261], "op": "DUP1", "path": "30"}, "1256": {"fn": "_revert", "offset": [2243, 2261], "op": "DUP5", "path": "30"}, "1257": {"fn": "_revert", "offset": [2243, 2261], "op": "DIV", "path": "30"}, "1258": {"fn": "_revert", "offset": [2288, 2306], "op": "DUP2", "path": "30"}, "1259": {"fn": "_revert", "offset": [2288, 2306], "op": "DUP2", "path": "30"}, "1260": {"fn": "_revert", "offset": [2288, 2306], "op": "MOD", "path": "30"}, "1261": {"fn": "_revert", "offset": [2215, 2219], "op": "PUSH1", "path": "30", "value": "0x30"}, "1263": {"fn": "_revert", "offset": [2284, 2313], "op": "SWAP1", "path": "30"}, "1264": {"fn": "_revert", "offset": [2284, 2313], "op": "DUP2", "path": "30"}, "1265": {"fn": "_revert", "offset": [2284, 2313], "op": "ADD", "path": "30"}, "1266": {"fn": "_revert", "offset": [3040, 3041], "op": "PUSH1", "path": "30", "value": "0x8"}, "1268": {"fn": "_revert", "offset": [3036, 3050], "op": "SHL", "path": "30"}, "1269": {"fn": "_revert", "offset": [2195, 2213], "op": "SWAP6", "path": "30"}, "1270": {"fn": "_revert", "offset": [2195, 2213], "op": "DUP4", "path": "30"}, "1271": {"fn": "_revert", "offset": [2195, 2213], "op": "SWAP1", "path": "30"}, "1272": {"fn": "_revert", "offset": [2195, 2213], "op": "MOD", "path": "30"}, "1273": {"fn": "_revert", "offset": [3025, 3051], "op": "SWAP6", "path": "30"}, "1274": {"fn": "_revert", "offset": [3025, 3051], "op": "SWAP1", "path": "30"}, "1275": {"fn": "_revert", "offset": [3025, 3051], "op": "SWAP6", "path": "30"}, "1276": {"fn": "_revert", "offset": [3025, 3051], "op": "ADD", "path": "30"}, "1277": {"fn": "_revert", "offset": [2336, 2354], "op": "SWAP1", "path": "30"}, "1278": {"fn": "_revert", "offset": [2336, 2354], "op": "DUP3", "path": "30"}, "1279": {"fn": "_revert", "offset": [2336, 2354], "op": "SWAP1", "path": "30"}, "1280": {"fn": "_revert", "offset": [2336, 2354], "op": "DIV", "path": "30"}, "1281": {"fn": "_revert", "offset": [2383, 2401], "op": "SWAP2", "path": "30"}, "1282": {"fn": "_revert", "offset": [2383, 2401], "op": "DUP3", "path": "30"}, "1283": {"fn": "_revert", "offset": [2383, 2401], "op": "MOD", "path": "30"}, "1284": {"fn": "_revert", "offset": [2379, 2408], "op": "SWAP1", "path": "30"}, "1285": {"fn": "_revert", "offset": [2379, 2408], "op": "SWAP5", "path": "30"}, "1286": {"fn": "_revert", "offset": [2379, 2408], "op": "ADD", "path": "30"}, "1287": {"fn": "_revert", "offset": [3057, 3059], "op": "PUSH1", "path": "30", "value": "0x10"}, "1289": {"fn": "_revert", "offset": [3053, 3070], "op": "SHL", "path": "30"}, "1290": {"fn": "_revert", "offset": [3021, 3071], "op": "SWAP4", "path": "30"}, "1291": {"fn": "_revert", "offset": [3021, 3071], "op": "SWAP1", "path": "30"}, "1292": {"fn": "_revert", "offset": [3021, 3071], "op": "SWAP4", "path": "30"}, "1293": {"fn": "_revert", "offset": [3021, 3071], "op": "ADD", "path": "30"}, "1294": {"fn": "_revert", "offset": [2999, 3072], "op": "ADD", "path": "30"}, "1295": {"fn": "_revert", "offset": [2994, 2997], "op": "PUSH1", "path": "30", "value": "0xC8"}, "1297": {"fn": "_revert", "offset": [2990, 3073], "op": "SHL", "path": "30"}, "1298": {"fn": "_revert", "offset": [4008, 4012], "op": "PUSH1", "path": "30", "value": "0x44"}, "1300": {"fn": "_revert", "offset": [4001, 4027], "op": "MSTORE", "path": "30"}, "1301": {"fn": "_revert", "offset": [4234, 4237], "op": "PUSH1", "path": "30", "value": "0x64"}, "1303": {"fn": "_revert", "offset": [4234, 4237], "op": "SWAP1", "path": "30"}, "1304": {"fn": "_revert", "offset": [4224, 4238], "op": "REVERT", "path": "30"}, "1305": {"fn": "Samples._instLogPairPrice", "offset": [5816, 5960], "op": "JUMPDEST", "path": "23"}, "1306": {"fn": "Samples._instLogPairPrice", "offset": [5881, 5887], "op": "PUSH1", "path": "23", "value": "0x0"}, "1308": {"fn": "Samples._instLogPairPrice", "offset": [5906, 5953], "op": "PUSH2", "path": "23", "statement": 34, "value": "0x3D3"}, "1311": {"fn": "Samples._instLogPairPrice", "offset": [5906, 5912], "op": "DUP3", "path": "23"}, "1312": {"offset": [2923, 2926], "op": "PUSH1", "path": "23", "value": "0xEA"}, "1314": {"fn": "Samples._instLogPairPrice", "offset": [5906, 5924], "op": "PUSH2", "path": "23", "value": "0x954"}, "1317": {"fn": "Samples._instLogPairPrice", "jump": "i", "offset": [5906, 5953], "op": "JUMP", "path": "23"}, "1318": {"fn": "Samples._instLogBptPrice", "offset": [6306, 6448], "op": "JUMPDEST", "path": "23"}, "1319": {"fn": "Samples._instLogBptPrice", "offset": [6370, 6376], "op": "PUSH1", "path": "23", "value": "0x0"}, "1321": {"fn": "Samples._instLogBptPrice", "offset": [6395, 6441], "op": "PUSH2", "path": "23", "statement": 35, "value": "0x3D3"}, "1324": {"fn": "Samples._instLogBptPrice", "offset": [6395, 6401], "op": "DUP3", "path": "23"}, "1325": {"offset": [2794, 2797], "op": "PUSH1", "path": "23", "value": "0x9F"}, "1327": {"fn": "Samples._instLogBptPrice", "offset": [6395, 6413], "op": "PUSH2", "path": "23", "value": "0x954"}, "1330": {"fn": "Samples._instLogBptPrice", "jump": "i", "offset": [6395, 6441], "op": "JUMP", "path": "23"}, "1331": {"fn": "Samples._instLogInvariant", "offset": [6791, 6934], "op": "JUMPDEST", "path": "23"}, "1332": {"fn": "Samples._instLogInvariant", "offset": [6856, 6862], "op": "PUSH1", "path": "23", "value": "0x0"}, "1334": {"fn": "Samples._instLogInvariant", "offset": [6881, 6927], "op": "PUSH2", "path": "23", "statement": 36, "value": "0x3D3"}, "1337": {"fn": "Samples._instLogInvariant", "offset": [6881, 6887], "op": "DUP3", "path": "23"}, "1338": {"offset": [2668, 2670], "op": "PUSH1", "path": "23", "value": "0x54"}, "1340": {"fn": "Samples._instLogInvariant", "offset": [6881, 6899], "op": "PUSH2", "path": "23", "value": "0x954"}, "1343": {"fn": "Samples._instLogInvariant", "jump": "i", "offset": [6881, 6927], "op": "JUMP", "path": "23"}, "1344": {"fn": "LogExpMath.exp", "offset": [7271, 12650], "op": "JUMPDEST", "path": "39"}, "1345": {"fn": "LogExpMath.exp", "offset": [7317, 7323], "op": "PUSH1", "path": "39", "value": "0x0"}, "1347": {"fn": "LogExpMath.exp", "offset": [7335, 7424], "op": "PUSH2", "path": "39", "statement": 37, "value": "0x56F"}, "1350": {"op": "PUSH9", "value": "0x238FD42C5CF03FFFF"}, "1360": {"op": "NOT"}, "1361": {"fn": "LogExpMath.exp", "offset": [7344, 7345], "op": "DUP4", "path": "39"}, "1362": {"fn": "LogExpMath.exp", "offset": [7344, 7369], "op": "SLT", "path": "39"}, "1363": {"fn": "LogExpMath.exp", "offset": [7344, 7369], "op": "ISZERO", "path": "39"}, "1364": {"fn": "LogExpMath.exp", "offset": [7344, 7398], "op": "DUP1", "path": "39"}, "1365": {"fn": "LogExpMath.exp", "offset": [7344, 7398], "op": "ISZERO", "path": "39"}, "1366": {"fn": "LogExpMath.exp", "offset": [7344, 7398], "op": "PUSH2", "path": "39", "value": "0x568"}, "1369": {"fn": "LogExpMath.exp", "offset": [7344, 7398], "op": "JUMPI", "path": "39"}, "1370": {"fn": "LogExpMath.exp", "offset": [7344, 7398], "op": "POP", "path": "39"}, "1371": {"offset": [2720, 2726], "op": "PUSH9", "path": "39", "value": "0x70C1CC73B00C80000"}, "1381": {"fn": "LogExpMath.exp", "offset": [7373, 7374], "op": "DUP4", "path": "39"}, "1382": {"fn": "LogExpMath.exp", "offset": [7373, 7398], "op": "SGT", "path": "39"}, "1383": {"fn": "LogExpMath.exp", "offset": [7373, 7398], "op": "ISZERO", "path": "39"}, "1384": {"fn": "LogExpMath.exp", "offset": [7344, 7398], "op": "JUMPDEST", "path": "39"}, "1385": {"offset": [4775, 4776], "op": "PUSH1", "path": "30", "value": "0x9"}, "1387": {"fn": "LogExpMath.exp", "offset": [7335, 7343], "op": "PUSH2", "path": "39", "value": "0x3DB"}, "1390": {"fn": "LogExpMath.exp", "jump": "i", "offset": [7335, 7424], "op": "JUMP", "path": "39"}, "1391": {"fn": "LogExpMath.exp", "offset": [7335, 7424], "op": "JUMPDEST", "path": "39"}, "1392": {"fn": "LogExpMath.exp", "offset": [7443, 7444], "op": "PUSH1", "path": "39", "value": "0x0"}, "1394": {"fn": "LogExpMath.exp", "offset": [7439, 7440], "op": "DUP3", "path": "39"}, "1395": {"branch": 95, "fn": "LogExpMath.exp", "offset": [7439, 7444], "op": "SLT", "path": "39"}, "1396": {"fn": "LogExpMath.exp", "offset": [7435, 7788], "op": "ISZERO", "path": "39"}, "1397": {"fn": "LogExpMath.exp", "offset": [7435, 7788], "op": "PUSH2", "path": "39", "value": "0x5A3"}, "1400": {"branch": 95, "fn": "LogExpMath.exp", "offset": [7435, 7788], "op": "JUMPI", "path": "39"}, "1401": {"fn": "LogExpMath.exp", "offset": [7769, 7776], "op": "PUSH2", "path": "39", "statement": 38, "value": "0x584"}, "1404": {"fn": "LogExpMath.exp", "offset": [7774, 7775], "op": "DUP3", "path": "39"}, "1405": {"fn": "LogExpMath.exp", "offset": [7773, 7775], "op": "PUSH1", "path": "39", "value": "0x0"}, "1407": {"fn": "LogExpMath.exp", "offset": [7773, 7775], "op": "SUB", "path": "39"}, "1408": {"fn": "LogExpMath.exp", "offset": [7769, 7772], "op": "PUSH2", "path": "39", "value": "0x540"}, "1411": {"fn": "LogExpMath.exp", "jump": "i", "offset": [7769, 7776], "op": "JUMP", "path": "39"}, "1412": {"fn": "LogExpMath.exp", "offset": [7769, 7776], "op": "JUMPDEST", "path": "39"}, "1413": {"fn": "LogExpMath.exp", "offset": [7750, 7765], "op": "PUSH15", "path": "39", "value": "0xC097CE7BC90715B34B9F1000000000"}, "1429": {"fn": "LogExpMath.exp", "offset": [7749, 7776], "op": "DUP2", "path": "39"}, "1430": {"fn": "LogExpMath.exp", "offset": [7749, 7776], "op": "PUSH2", "path": "39", "value": "0x59B"}, "1433": {"fn": "LogExpMath.exp", "offset": [7749, 7776], "op": "JUMPI", "path": "39"}, "1434": {"dev": "Division by zero", "fn": "LogExpMath.exp", "offset": [7749, 7776], "op": "INVALID", "path": "39"}, "1435": {"fn": "LogExpMath.exp", "offset": [7749, 7776], "op": "JUMPDEST", "path": "39"}, "1436": {"fn": "LogExpMath.exp", "offset": [7749, 7776], "op": "SDIV", "path": "39"}, "1437": {"fn": "LogExpMath.exp", "offset": [7741, 7777], "op": "SWAP1", "path": "39"}, "1438": {"fn": "LogExpMath.exp", "offset": [7741, 7777], "op": "POP", "path": "39"}, "1439": {"fn": "LogExpMath.exp", "offset": [7741, 7777], "op": "PUSH2", "path": "39", "value": "0x3D6"}, "1442": {"fn": "LogExpMath.exp", "offset": [7741, 7777], "op": "JUMP", "path": "39"}, "1443": {"fn": "LogExpMath.exp", "offset": [7435, 7788], "op": "JUMPDEST", "path": "39"}, "1444": {"fn": "LogExpMath.exp", "offset": [9089, 9103], "op": "PUSH1", "path": "39", "value": "0x0"}, "1446": {"offset": [3158, 3179], "op": "PUSH9", "path": "39", "value": "0x6F05B59D3B2000000"}, "1456": {"fn": "LogExpMath.exp", "offset": [9117, 9118], "op": "DUP4", "path": "39"}, "1457": {"branch": 96, "fn": "LogExpMath.exp", "offset": [9117, 9124], "op": "SLT", "path": "39"}, "1458": {"fn": "LogExpMath.exp", "offset": [9113, 9333], "op": "PUSH2", "path": "39", "value": "0x5E3"}, "1461": {"branch": 96, "fn": "LogExpMath.exp", "offset": [9113, 9333], "op": "JUMPI", "path": "39"}, "1462": {"op": "POP"}, "1463": {"op": "PUSH9", "value": "0x6F05B59D3B1FFFFFF"}, "1473": {"op": "NOT"}, "1474": {"fn": "LogExpMath.exp", "offset": [9140, 9147], "op": "SWAP1", "path": "39", "statement": 39}, "1475": {"fn": "LogExpMath.exp", "offset": [9140, 9147], "op": "SWAP2", "path": "39"}, "1476": {"fn": "LogExpMath.exp", "offset": [9140, 9147], "op": "ADD", "path": "39"}, "1477": {"fn": "LogExpMath.exp", "offset": [9140, 9147], "op": "SWAP1", "path": "39"}, "1478": {"offset": [3214, 3270], "op": "PUSH24", "path": "39", "value": "0x195E54C5DD42177F53A27172FA9EC630262827000000000"}, "1503": {"fn": "LogExpMath.exp", "offset": [9113, 9333], "op": "PUSH2", "path": "39", "value": "0x619"}, "1506": {"fn": "LogExpMath.exp", "offset": [9113, 9333], "op": "JUMP", "path": "39"}, "1507": {"fn": "LogExpMath.exp", "offset": [9113, 9333], "op": "JUMPDEST", "path": "39"}, "1508": {"offset": [3322, 3342], "op": "PUSH9", "path": "39", "value": "0x3782DACE9D9000000"}, "1518": {"fn": "LogExpMath.exp", "offset": [9194, 9195], "op": "DUP4", "path": "39"}, "1519": {"branch": 97, "fn": "LogExpMath.exp", "offset": [9194, 9201], "op": "SLT", "path": "39"}, "1520": {"fn": "LogExpMath.exp", "offset": [9190, 9333], "op": "PUSH2", "path": "39", "value": "0x615"}, "1523": {"branch": 97, "fn": "LogExpMath.exp", "offset": [9190, 9333], "op": "JUMPI", "path": "39"}, "1524": {"op": "POP"}, "1525": {"op": "PUSH9", "value": "0x3782DACE9D8FFFFFF"}, "1535": {"op": "NOT"}, "1536": {"fn": "LogExpMath.exp", "offset": [9217, 9224], "op": "SWAP1", "path": "39", "statement": 40}, "1537": {"fn": "LogExpMath.exp", "offset": [9217, 9224], "op": "SWAP2", "path": "39"}, "1538": {"fn": "LogExpMath.exp", "offset": [9217, 9224], "op": "ADD", "path": "39"}, "1539": {"fn": "LogExpMath.exp", "offset": [9217, 9224], "op": "SWAP1", "path": "39"}, "1540": {"offset": [3377, 3405], "op": "PUSH12", "path": "39", "value": "0x1425982CF597CD205CEF7380"}, "1553": {"fn": "LogExpMath.exp", "offset": [9190, 9333], "op": "PUSH2", "path": "39", "value": "0x619"}, "1556": {"fn": "LogExpMath.exp", "offset": [9190, 9333], "op": "JUMP", "path": "39"}, "1557": {"fn": "LogExpMath.exp", "offset": [9190, 9333], "op": "JUMPDEST", "path": "39"}, "1558": {"op": "POP"}, "1559": {"fn": "LogExpMath.exp", "offset": [9291, 9292], "op": "PUSH1", "path": "39", "statement": 41, "value": "0x1"}, "1561": {"fn": "LogExpMath.exp", "offset": [9190, 9333], "op": "JUMPDEST", "path": "39"}, "1562": {"fn": "LogExpMath.exp", "offset": [9488, 9491], "op": "PUSH1", "path": "39", "statement": 42, "value": "0x64"}, "1564": {"fn": "LogExpMath.exp", "offset": [9483, 9491], "op": "SWAP3", "path": "39"}, "1565": {"fn": "LogExpMath.exp", "offset": [9483, 9491], "op": "SWAP1", "path": "39"}, "1566": {"fn": "LogExpMath.exp", "offset": [9483, 9491], "op": "SWAP3", "path": "39"}, "1567": {"fn": "LogExpMath.exp", "offset": [9483, 9491], "op": "MUL", "path": "39"}, "1568": {"fn": "LogExpMath.exp", "offset": [9483, 9491], "op": "SWAP2", "path": "39"}, "1569": {"offset": [2125, 2129], "op": "PUSH9", "path": "39", "value": "0x56BC75E2D63100000"}, "1579": {"offset": [3486, 3508], "op": "PUSH9", "path": "39", "value": "0xAD78EBC5AC62000000"}, "1589": {"fn": "LogExpMath.exp", "offset": [9742, 9749], "op": "DUP5", "path": "39"}, "1590": {"branch": 98, "fn": "LogExpMath.exp", "offset": [9742, 9749], "op": "SLT", "path": "39"}, "1591": {"fn": "LogExpMath.exp", "offset": [9738, 9830], "op": "PUSH2", "path": "39", "value": "0x669"}, "1594": {"branch": 98, "fn": "LogExpMath.exp", "offset": [9738, 9830], "op": "JUMPI", "path": "39"}, "1595": {"op": "PUSH9", "value": "0xAD78EBC5AC61FFFFFF"}, "1605": {"op": "NOT"}, "1606": {"fn": "LogExpMath.exp", "offset": [9765, 9772], "op": "SWAP1", "path": "39", "statement": 43}, "1607": {"fn": "LogExpMath.exp", "offset": [9765, 9772], "op": "SWAP4", "path": "39"}, "1608": {"fn": "LogExpMath.exp", "offset": [9765, 9772], "op": "ADD", "path": "39"}, "1609": {"fn": "LogExpMath.exp", "offset": [9765, 9772], "op": "SWAP3", "path": "39"}, "1610": {"offset": [2125, 2129], "op": "PUSH9", "path": "39", "value": "0x56BC75E2D63100000"}, "1620": {"offset": [3543, 3577], "op": "PUSH15", "path": "39", "value": "0x1855144814A7FF805980FF0084000"}, "1636": {"fn": "LogExpMath.exp", "offset": [9797, 9809], "op": "DUP3", "path": "39", "statement": 44}, "1637": {"fn": "LogExpMath.exp", "offset": [9797, 9809], "op": "MUL", "path": "39"}, "1638": {"fn": "LogExpMath.exp", "offset": [9796, 9819], "op": "SDIV", "path": "39"}, "1639": {"fn": "LogExpMath.exp", "offset": [9786, 9819], "op": "SWAP1", "path": "39"}, "1640": {"fn": "LogExpMath.exp", "offset": [9786, 9819], "op": "POP", "path": "39"}, "1641": {"fn": "LogExpMath.exp", "offset": [9738, 9830], "op": "JUMPDEST", "path": "39"}, "1642": {"offset": [3615, 3637], "op": "PUSH9", "path": "39", "value": "0x56BC75E2D631000000"}, "1652": {"fn": "LogExpMath.exp", "offset": [9843, 9844], "op": "DUP5", "path": "39"}, "1653": {"branch": 99, "fn": "LogExpMath.exp", "offset": [9843, 9850], "op": "SLT", "path": "39"}, "1654": {"fn": "LogExpMath.exp", "offset": [9839, 9931], "op": "PUSH2", "path": "39", "value": "0x6A5"}, "1657": {"branch": 99, "fn": "LogExpMath.exp", "offset": [9839, 9931], "op": "JUMPI", "path": "39"}, "1658": {"op": "PUSH9", "value": "0x56BC75E2D630FFFFFF"}, "1668": {"op": "NOT"}, "1669": {"fn": "LogExpMath.exp", "offset": [9866, 9873], "op": "SWAP1", "path": "39", "statement": 45}, "1670": {"fn": "LogExpMath.exp", "offset": [9866, 9873], "op": "SWAP4", "path": "39"}, "1671": {"fn": "LogExpMath.exp", "offset": [9866, 9873], "op": "ADD", "path": "39"}, "1672": {"fn": "LogExpMath.exp", "offset": [9866, 9873], "op": "SWAP3", "path": "39"}, "1673": {"offset": [2125, 2129], "op": "PUSH9", "path": "39", "value": "0x56BC75E2D63100000"}, "1683": {"offset": [3672, 3699], "op": "PUSH12", "path": "39", "value": "0x2DF0AB5A80A22C61AB5A700"}, "1696": {"fn": "LogExpMath.exp", "offset": [9898, 9910], "op": "DUP3", "path": "39", "statement": 46}, "1697": {"fn": "LogExpMath.exp", "offset": [9898, 9910], "op": "MUL", "path": "39"}, "1698": {"fn": "LogExpMath.exp", "offset": [9897, 9920], "op": "SDIV", "path": "39"}, "1699": {"fn": "LogExpMath.exp", "offset": [9887, 9920], "op": "SWAP1", "path": "39"}, "1700": {"fn": "LogExpMath.exp", "offset": [9887, 9920], "op": "POP", "path": "39"}, "1701": {"fn": "LogExpMath.exp", "offset": [9839, 9931], "op": "JUMPDEST", "path": "39"}, "1702": {"offset": [3737, 3758], "op": "PUSH9", "path": "39", "value": "0x2B5E3AF16B18800000"}, "1712": {"fn": "LogExpMath.exp", "offset": [9944, 9945], "op": "DUP5", "path": "39"}, "1713": {"branch": 100, "fn": "LogExpMath.exp", "offset": [9944, 9951], "op": "SLT", "path": "39"}, "1714": {"fn": "LogExpMath.exp", "offset": [9940, 10032], "op": "PUSH2", "path": "39", "value": "0x6DF"}, "1717": {"branch": 100, "fn": "LogExpMath.exp", "offset": [9940, 10032], "op": "JUMPI", "path": "39"}, "1718": {"op": "PUSH9", "value": "0x2B5E3AF16B187FFFFF"}, "1728": {"op": "NOT"}, "1729": {"fn": "LogExpMath.exp", "offset": [9967, 9974], "op": "SWAP1", "path": "39", "statement": 47}, "1730": {"fn": "LogExpMath.exp", "offset": [9967, 9974], "op": "SWAP4", "path": "39"}, "1731": {"fn": "LogExpMath.exp", "offset": [9967, 9974], "op": "ADD", "path": "39"}, "1732": {"fn": "LogExpMath.exp", "offset": [9967, 9974], "op": "SWAP3", "path": "39"}, "1733": {"offset": [2125, 2129], "op": "PUSH9", "path": "39", "value": "0x56BC75E2D63100000"}, "1743": {"offset": [3793, 3817], "op": "PUSH10", "path": "39", "value": "0x3F1FCE3DA636EA5CF850"}, "1754": {"fn": "LogExpMath.exp", "offset": [9999, 10011], "op": "DUP3", "path": "39", "statement": 48}, "1755": {"fn": "LogExpMath.exp", "offset": [9999, 10011], "op": "MUL", "path": "39"}, "1756": {"fn": "LogExpMath.exp", "offset": [9998, 10021], "op": "SDIV", "path": "39"}, "1757": {"fn": "LogExpMath.exp", "offset": [9988, 10021], "op": "SWAP1", "path": "39"}, "1758": {"fn": "LogExpMath.exp", "offset": [9988, 10021], "op": "POP", "path": "39"}, "1759": {"fn": "LogExpMath.exp", "offset": [9940, 10032], "op": "JUMPDEST", "path": "39"}, "1760": {"offset": [3855, 3876], "op": "PUSH9", "path": "39", "value": "0x15AF1D78B58C400000"}, "1770": {"fn": "LogExpMath.exp", "offset": [10045, 10046], "op": "DUP5", "path": "39"}, "1771": {"branch": 101, "fn": "LogExpMath.exp", "offset": [10045, 10052], "op": "SLT", "path": "39"}, "1772": {"fn": "LogExpMath.exp", "offset": [10041, 10133], "op": "PUSH2", "path": "39", "value": "0x719"}, "1775": {"branch": 101, "fn": "LogExpMath.exp", "offset": [10041, 10133], "op": "JUMPI", "path": "39"}, "1776": {"op": "PUSH9", "value": "0x15AF1D78B58C3FFFFF"}, "1786": {"op": "NOT"}, "1787": {"fn": "LogExpMath.exp", "offset": [10068, 10075], "op": "SWAP1", "path": "39", "statement": 49}, "1788": {"fn": "LogExpMath.exp", "offset": [10068, 10075], "op": "SWAP4", "path": "39"}, "1789": {"fn": "LogExpMath.exp", "offset": [10068, 10075], "op": "ADD", "path": "39"}, "1790": {"fn": "LogExpMath.exp", "offset": [10068, 10075], "op": "SWAP3", "path": "39"}, "1791": {"offset": [2125, 2129], "op": "PUSH9", "path": "39", "value": "0x56BC75E2D63100000"}, "1801": {"offset": [3911, 3933], "op": "PUSH10", "path": "39", "value": "0x127FA27722CC06CC5E2"}, "1812": {"fn": "LogExpMath.exp", "offset": [10100, 10112], "op": "DUP3", "path": "39", "statement": 50}, "1813": {"fn": "LogExpMath.exp", "offset": [10100, 10112], "op": "MUL", "path": "39"}, "1814": {"fn": "LogExpMath.exp", "offset": [10099, 10122], "op": "SDIV", "path": "39"}, "1815": {"fn": "LogExpMath.exp", "offset": [10089, 10122], "op": "SWAP1", "path": "39"}, "1816": {"fn": "LogExpMath.exp", "offset": [10089, 10122], "op": "POP", "path": "39"}, "1817": {"fn": "LogExpMath.exp", "offset": [10041, 10133], "op": "JUMPDEST", "path": "39"}, "1818": {"offset": [3971, 3992], "op": "PUSH9", "path": "39", "value": "0xAD78EBC5AC6200000"}, "1828": {"fn": "LogExpMath.exp", "offset": [10146, 10147], "op": "DUP5", "path": "39"}, "1829": {"branch": 102, "fn": "LogExpMath.exp", "offset": [10146, 10153], "op": "SLT", "path": "39"}, "1830": {"fn": "LogExpMath.exp", "offset": [10142, 10234], "op": "PUSH2", "path": "39", "value": "0x752"}, "1833": {"branch": 102, "fn": "LogExpMath.exp", "offset": [10142, 10234], "op": "JUMPI", "path": "39"}, "1834": {"op": "PUSH9", "value": "0xAD78EBC5AC61FFFFF"}, "1844": {"op": "NOT"}, "1845": {"fn": "LogExpMath.exp", "offset": [10169, 10176], "op": "SWAP1", "path": "39", "statement": 51}, "1846": {"fn": "LogExpMath.exp", "offset": [10169, 10176], "op": "SWAP4", "path": "39"}, "1847": {"fn": "LogExpMath.exp", "offset": [10169, 10176], "op": "ADD", "path": "39"}, "1848": {"fn": "LogExpMath.exp", "offset": [10169, 10176], "op": "SWAP3", "path": "39"}, "1849": {"offset": [2125, 2129], "op": "PUSH9", "path": "39", "value": "0x56BC75E2D63100000"}, "1859": {"offset": [4027, 4048], "op": "PUSH9", "path": "39", "value": "0x280E60114EDB805D03"}, "1869": {"fn": "LogExpMath.exp", "offset": [10201, 10213], "op": "DUP3", "path": "39", "statement": 52}, "1870": {"fn": "LogExpMath.exp", "offset": [10201, 10213], "op": "MUL", "path": "39"}, "1871": {"fn": "LogExpMath.exp", "offset": [10200, 10223], "op": "SDIV", "path": "39"}, "1872": {"fn": "LogExpMath.exp", "offset": [10190, 10223], "op": "SWAP1", "path": "39"}, "1873": {"fn": "LogExpMath.exp", "offset": [10190, 10223], "op": "POP", "path": "39"}, "1874": {"fn": "LogExpMath.exp", "offset": [10142, 10234], "op": "JUMPDEST", "path": "39"}, "1875": {"offset": [4086, 4107], "op": "PUSH9", "path": "39", "value": "0x56BC75E2D63100000"}, "1885": {"fn": "LogExpMath.exp", "offset": [10247, 10248], "op": "DUP5", "path": "39"}, "1886": {"branch": 103, "fn": "LogExpMath.exp", "offset": [10247, 10254], "op": "SLT", "path": "39"}, "1887": {"fn": "LogExpMath.exp", "offset": [10243, 10335], "op": "PUSH2", "path": "39", "value": "0x78B"}, "1890": {"branch": 103, "fn": "LogExpMath.exp", "offset": [10243, 10335], "op": "JUMPI", "path": "39"}, "1891": {"op": "PUSH9", "value": "0x56BC75E2D630FFFFF"}, "1901": {"op": "NOT"}, "1902": {"fn": "LogExpMath.exp", "offset": [10270, 10277], "op": "SWAP1", "path": "39", "statement": 53}, "1903": {"fn": "LogExpMath.exp", "offset": [10270, 10277], "op": "SWAP4", "path": "39"}, "1904": {"fn": "LogExpMath.exp", "offset": [10270, 10277], "op": "ADD", "path": "39"}, "1905": {"fn": "LogExpMath.exp", "offset": [10270, 10277], "op": "SWAP3", "path": "39"}, "1906": {"offset": [4086, 4107], "op": "PUSH9", "path": "39", "value": "0x56BC75E2D63100000"}, "1916": {"offset": [4142, 4163], "op": "PUSH9", "path": "39", "value": "0xEBC5FB41746121110"}, "1926": {"fn": "LogExpMath.exp", "offset": [10302, 10314], "op": "DUP3", "path": "39", "statement": 54}, "1927": {"fn": "LogExpMath.exp", "offset": [10302, 10314], "op": "MUL", "path": "39"}, "1928": {"fn": "LogExpMath.exp", "offset": [10301, 10324], "op": "SDIV", "path": "39"}, "1929": {"fn": "LogExpMath.exp", "offset": [10291, 10324], "op": "SWAP1", "path": "39"}, "1930": {"fn": "LogExpMath.exp", "offset": [10291, 10324], "op": "POP", "path": "39"}, "1931": {"fn": "LogExpMath.exp", "offset": [10243, 10335], "op": "JUMPDEST", "path": "39"}, "1932": {"offset": [4201, 4221], "op": "PUSH9", "path": "39", "value": "0x2B5E3AF16B1880000"}, "1942": {"fn": "LogExpMath.exp", "offset": [10348, 10349], "op": "DUP5", "path": "39"}, "1943": {"branch": 104, "fn": "LogExpMath.exp", "offset": [10348, 10355], "op": "SLT", "path": "39"}, "1944": {"fn": "LogExpMath.exp", "offset": [10344, 10436], "op": "PUSH2", "path": "39", "value": "0x7C4"}, "1947": {"branch": 104, "fn": "LogExpMath.exp", "offset": [10344, 10436], "op": "JUMPI", "path": "39"}, "1948": {"op": "PUSH9", "value": "0x2B5E3AF16B187FFFF"}, "1958": {"op": "NOT"}, "1959": {"fn": "LogExpMath.exp", "offset": [10371, 10378], "op": "SWAP1", "path": "39", "statement": 55}, "1960": {"fn": "LogExpMath.exp", "offset": [10371, 10378], "op": "SWAP4", "path": "39"}, "1961": {"fn": "LogExpMath.exp", "offset": [10371, 10378], "op": "ADD", "path": "39"}, "1962": {"fn": "LogExpMath.exp", "offset": [10371, 10378], "op": "SWAP3", "path": "39"}, "1963": {"offset": [2125, 2129], "op": "PUSH9", "path": "39", "value": "0x56BC75E2D63100000"}, "1973": {"offset": [4257, 4278], "op": "PUSH9", "path": "39", "value": "0x8F00F760A4B2DB55D"}, "1983": {"fn": "LogExpMath.exp", "offset": [10403, 10415], "op": "DUP3", "path": "39", "statement": 56}, "1984": {"fn": "LogExpMath.exp", "offset": [10403, 10415], "op": "MUL", "path": "39"}, "1985": {"fn": "LogExpMath.exp", "offset": [10402, 10425], "op": "SDIV", "path": "39"}, "1986": {"fn": "LogExpMath.exp", "offset": [10392, 10425], "op": "SWAP1", "path": "39"}, "1987": {"fn": "LogExpMath.exp", "offset": [10392, 10425], "op": "POP", "path": "39"}, "1988": {"fn": "LogExpMath.exp", "offset": [10344, 10436], "op": "JUMPDEST", "path": "39"}, "1989": {"offset": [4316, 4336], "op": "PUSH9", "path": "39", "value": "0x15AF1D78B58C40000"}, "1999": {"fn": "LogExpMath.exp", "offset": [10449, 10450], "op": "DUP5", "path": "39"}, "2000": {"branch": 105, "fn": "LogExpMath.exp", "offset": [10449, 10456], "op": "SLT", "path": "39"}, "2001": {"fn": "LogExpMath.exp", "offset": [10445, 10537], "op": "PUSH2", "path": "39", "value": "0x7FD"}, "2004": {"branch": 105, "fn": "LogExpMath.exp", "offset": [10445, 10537], "op": "JUMPI", "path": "39"}, "2005": {"op": "PUSH9", "value": "0x15AF1D78B58C3FFFF"}, "2015": {"op": "NOT"}, "2016": {"fn": "LogExpMath.exp", "offset": [10472, 10479], "op": "SWAP1", "path": "39", "statement": 57}, "2017": {"fn": "LogExpMath.exp", "offset": [10472, 10479], "op": "SWAP4", "path": "39"}, "2018": {"fn": "LogExpMath.exp", "offset": [10472, 10479], "op": "ADD", "path": "39"}, "2019": {"fn": "LogExpMath.exp", "offset": [10472, 10479], "op": "SWAP3", "path": "39"}, "2020": {"offset": [2125, 2129], "op": "PUSH9", "path": "39", "value": "0x56BC75E2D63100000"}, "2030": {"offset": [4372, 4393], "op": "PUSH9", "path": "39", "value": "0x6F5F1775788937937"}, "2040": {"fn": "LogExpMath.exp", "offset": [10504, 10516], "op": "DUP3", "path": "39", "statement": 58}, "2041": {"fn": "LogExpMath.exp", "offset": [10504, 10516], "op": "MUL", "path": "39"}, "2042": {"fn": "LogExpMath.exp", "offset": [10503, 10526], "op": "SDIV", "path": "39"}, "2043": {"fn": "LogExpMath.exp", "offset": [10493, 10526], "op": "SWAP1", "path": "39"}, "2044": {"fn": "LogExpMath.exp", "offset": [10493, 10526], "op": "POP", "path": "39"}, "2045": {"fn": "LogExpMath.exp", "offset": [10445, 10537], "op": "JUMPDEST", "path": "39"}, "2046": {"offset": [2125, 2129], "op": "PUSH9", "path": "39", "value": "0x56BC75E2D63100000"}, "2056": {"fn": "LogExpMath.exp", "offset": [11069, 11086], "op": "DUP5", "path": "39", "statement": 59}, "2057": {"fn": "LogExpMath.exp", "offset": [11069, 11086], "op": "DUP2", "path": "39"}, "2058": {"fn": "LogExpMath.exp", "offset": [11069, 11086], "op": "ADD", "path": "39"}, "2059": {"fn": "LogExpMath.exp", "offset": [11069, 11086], "op": "SWAP1", "path": "39"}, "2060": {"fn": "LogExpMath.exp", "offset": [11069, 11086], "op": "DUP6", "path": "39"}, "2061": {"fn": "LogExpMath.exp", "offset": [11069, 11086], "op": "SWAP1", "path": "39"}, "2062": {"fn": "LogExpMath.exp", "offset": [11354, 11355], "op": "PUSH1", "path": "39", "statement": 60, "value": "0x2"}, "2064": {"fn": "LogExpMath.exp", "offset": [11354, 11355], "op": "SWAP1", "path": "39"}, "2065": {"fn": "LogExpMath.exp", "offset": [11332, 11340], "op": "DUP3", "path": "39"}, "2066": {"fn": "LogExpMath.exp", "offset": [11332, 11340], "op": "DUP1", "path": "39"}, "2067": {"fn": "LogExpMath.exp", "offset": [11332, 11340], "op": "MUL", "path": "39"}, "2068": {"fn": "LogExpMath.exp", "offset": [11331, 11350], "op": "SDIV", "path": "39"}, "2069": {"fn": "LogExpMath.exp", "offset": [11330, 11355], "op": "SDIV", "path": "39"}, "2070": {"fn": "LogExpMath.exp", "offset": [11365, 11382], "op": "SWAP2", "path": "39", "statement": 61}, "2071": {"fn": "LogExpMath.exp", "offset": [11365, 11382], "op": "DUP3", "path": "39"}, "2072": {"fn": "LogExpMath.exp", "offset": [11365, 11382], "op": "ADD", "path": "39"}, "2073": {"fn": "LogExpMath.exp", "offset": [11365, 11382], "op": "SWAP2", "path": "39"}, "2074": {"fn": "LogExpMath.exp", "offset": [11330, 11355], "op": "SWAP1", "path": "39"}, "2075": {"op": "POP"}, "2076": {"fn": "LogExpMath.exp", "offset": [11424, 11425], "op": "PUSH1", "path": "39", "statement": 62, "value": "0x3"}, "2078": {"offset": [2125, 2129], "op": "PUSH9", "path": "39", "value": "0x56BC75E2D63100000"}, "2088": {"fn": "LogExpMath.exp", "offset": [11402, 11410], "op": "DUP8", "path": "39"}, "2089": {"fn": "LogExpMath.exp", "offset": [11402, 11410], "op": "DUP4", "path": "39"}, "2090": {"fn": "LogExpMath.exp", "offset": [11402, 11410], "op": "MUL", "path": "39"}, "2091": {"fn": "LogExpMath.exp", "offset": [11401, 11420], "op": "SDIV", "path": "39"}, "2092": {"fn": "LogExpMath.exp", "offset": [11400, 11425], "op": "SDIV", "path": "39"}, "2093": {"fn": "LogExpMath.exp", "offset": [11435, 11452], "op": "SWAP2", "path": "39", "statement": 63}, "2094": {"fn": "LogExpMath.exp", "offset": [11435, 11452], "op": "DUP3", "path": "39"}, "2095": {"fn": "LogExpMath.exp", "offset": [11435, 11452], "op": "ADD", "path": "39"}, "2096": {"fn": "LogExpMath.exp", "offset": [11435, 11452], "op": "SWAP2", "path": "39"}, "2097": {"fn": "LogExpMath.exp", "offset": [11400, 11425], "op": "SWAP1", "path": "39"}, "2098": {"op": "POP"}, "2099": {"fn": "LogExpMath.exp", "offset": [11494, 11495], "op": "PUSH1", "path": "39", "statement": 64, "value": "0x4"}, "2101": {"offset": [2125, 2129], "op": "PUSH9", "path": "39", "value": "0x56BC75E2D63100000"}, "2111": {"fn": "LogExpMath.exp", "offset": [11472, 11480], "op": "DUP8", "path": "39"}, "2112": {"fn": "LogExpMath.exp", "offset": [11472, 11480], "op": "DUP4", "path": "39"}, "2113": {"fn": "LogExpMath.exp", "offset": [11472, 11480], "op": "MUL", "path": "39"}, "2114": {"fn": "LogExpMath.exp", "offset": [11471, 11490], "op": "SDIV", "path": "39"}, "2115": {"fn": "LogExpMath.exp", "offset": [11470, 11495], "op": "SDIV", "path": "39"}, "2116": {"fn": "LogExpMath.exp", "offset": [11505, 11522], "op": "SWAP2", "path": "39", "statement": 65}, "2117": {"fn": "LogExpMath.exp", "offset": [11505, 11522], "op": "DUP3", "path": "39"}, "2118": {"fn": "LogExpMath.exp", "offset": [11505, 11522], "op": "ADD", "path": "39"}, "2119": {"fn": "LogExpMath.exp", "offset": [11505, 11522], "op": "SWAP2", "path": "39"}, "2120": {"fn": "LogExpMath.exp", "offset": [11470, 11495], "op": "SWAP1", "path": "39"}, "2121": {"op": "POP"}, "2122": {"fn": "LogExpMath.exp", "offset": [11564, 11565], "op": "PUSH1", "path": "39", "statement": 66, "value": "0x5"}, "2124": {"offset": [2125, 2129], "op": "PUSH9", "path": "39", "value": "0x56BC75E2D63100000"}, "2134": {"fn": "LogExpMath.exp", "offset": [11542, 11550], "op": "DUP8", "path": "39"}, "2135": {"fn": "LogExpMath.exp", "offset": [11542, 11550], "op": "DUP4", "path": "39"}, "2136": {"fn": "LogExpMath.exp", "offset": [11542, 11550], "op": "MUL", "path": "39"}, "2137": {"fn": "LogExpMath.exp", "offset": [11541, 11560], "op": "SDIV", "path": "39"}, "2138": {"fn": "LogExpMath.exp", "offset": [11540, 11565], "op": "SDIV", "path": "39"}, "2139": {"fn": "LogExpMath.exp", "offset": [11575, 11592], "op": "SWAP2", "path": "39", "statement": 67}, "2140": {"fn": "LogExpMath.exp", "offset": [11575, 11592], "op": "DUP3", "path": "39"}, "2141": {"fn": "LogExpMath.exp", "offset": [11575, 11592], "op": "ADD", "path": "39"}, "2142": {"fn": "LogExpMath.exp", "offset": [11575, 11592], "op": "SWAP2", "path": "39"}, "2143": {"fn": "LogExpMath.exp", "offset": [11540, 11565], "op": "SWAP1", "path": "39"}, "2144": {"op": "POP"}, "2145": {"fn": "LogExpMath.exp", "offset": [11634, 11635], "op": "PUSH1", "path": "39", "statement": 68, "value": "0x6"}, "2147": {"offset": [2125, 2129], "op": "PUSH9", "path": "39", "value": "0x56BC75E2D63100000"}, "2157": {"fn": "LogExpMath.exp", "offset": [11612, 11620], "op": "DUP8", "path": "39"}, "2158": {"fn": "LogExpMath.exp", "offset": [11612, 11620], "op": "DUP4", "path": "39"}, "2159": {"fn": "LogExpMath.exp", "offset": [11612, 11620], "op": "MUL", "path": "39"}, "2160": {"fn": "LogExpMath.exp", "offset": [11611, 11630], "op": "SDIV", "path": "39"}, "2161": {"fn": "LogExpMath.exp", "offset": [11610, 11635], "op": "SDIV", "path": "39"}, "2162": {"fn": "LogExpMath.exp", "offset": [11645, 11662], "op": "SWAP2", "path": "39", "statement": 69}, "2163": {"fn": "LogExpMath.exp", "offset": [11645, 11662], "op": "DUP3", "path": "39"}, "2164": {"fn": "LogExpMath.exp", "offset": [11645, 11662], "op": "ADD", "path": "39"}, "2165": {"fn": "LogExpMath.exp", "offset": [11645, 11662], "op": "SWAP2", "path": "39"}, "2166": {"fn": "LogExpMath.exp", "offset": [11610, 11635], "op": "SWAP1", "path": "39"}, "2167": {"op": "POP"}, "2168": {"fn": "LogExpMath.exp", "offset": [11704, 11705], "op": "PUSH1", "path": "39", "statement": 70, "value": "0x7"}, "2170": {"offset": [2125, 2129], "op": "PUSH9", "path": "39", "value": "0x56BC75E2D63100000"}, "2180": {"fn": "LogExpMath.exp", "offset": [11682, 11690], "op": "DUP8", "path": "39"}, "2181": {"fn": "LogExpMath.exp", "offset": [11682, 11690], "op": "DUP4", "path": "39"}, "2182": {"fn": "LogExpMath.exp", "offset": [11682, 11690], "op": "MUL", "path": "39"}, "2183": {"fn": "LogExpMath.exp", "offset": [11681, 11700], "op": "SDIV", "path": "39"}, "2184": {"fn": "LogExpMath.exp", "offset": [11680, 11705], "op": "SDIV", "path": "39"}, "2185": {"fn": "LogExpMath.exp", "offset": [11715, 11732], "op": "SWAP2", "path": "39", "statement": 71}, "2186": {"fn": "LogExpMath.exp", "offset": [11715, 11732], "op": "DUP3", "path": "39"}, "2187": {"fn": "LogExpMath.exp", "offset": [11715, 11732], "op": "ADD", "path": "39"}, "2188": {"fn": "LogExpMath.exp", "offset": [11715, 11732], "op": "SWAP2", "path": "39"}, "2189": {"fn": "LogExpMath.exp", "offset": [11680, 11705], "op": "SWAP1", "path": "39"}, "2190": {"op": "POP"}, "2191": {"fn": "LogExpMath.exp", "offset": [11774, 11775], "op": "PUSH1", "path": "39", "statement": 72, "value": "0x8"}, "2193": {"offset": [2125, 2129], "op": "PUSH9", "path": "39", "value": "0x56BC75E2D63100000"}, "2203": {"fn": "LogExpMath.exp", "offset": [11752, 11760], "op": "DUP8", "path": "39"}, "2204": {"fn": "LogExpMath.exp", "offset": [11752, 11760], "op": "DUP4", "path": "39"}, "2205": {"fn": "LogExpMath.exp", "offset": [11752, 11760], "op": "MUL", "path": "39"}, "2206": {"fn": "LogExpMath.exp", "offset": [11751, 11770], "op": "SDIV", "path": "39"}, "2207": {"fn": "LogExpMath.exp", "offset": [11750, 11775], "op": "SDIV", "path": "39"}, "2208": {"fn": "LogExpMath.exp", "offset": [11785, 11802], "op": "SWAP2", "path": "39", "statement": 73}, "2209": {"fn": "LogExpMath.exp", "offset": [11785, 11802], "op": "DUP3", "path": "39"}, "2210": {"fn": "LogExpMath.exp", "offset": [11785, 11802], "op": "ADD", "path": "39"}, "2211": {"fn": "LogExpMath.exp", "offset": [11785, 11802], "op": "SWAP2", "path": "39"}, "2212": {"fn": "LogExpMath.exp", "offset": [11750, 11775], "op": "SWAP1", "path": "39"}, "2213": {"op": "POP"}, "2214": {"fn": "LogExpMath.exp", "offset": [11844, 11845], "op": "PUSH1", "path": "39", "statement": 74, "value": "0x9"}, "2216": {"offset": [2125, 2129], "op": "PUSH9", "path": "39", "value": "0x56BC75E2D63100000"}, "2226": {"fn": "LogExpMath.exp", "offset": [11822, 11830], "op": "DUP8", "path": "39"}, "2227": {"fn": "LogExpMath.exp", "offset": [11822, 11830], "op": "DUP4", "path": "39"}, "2228": {"fn": "LogExpMath.exp", "offset": [11822, 11830], "op": "MUL", "path": "39"}, "2229": {"fn": "LogExpMath.exp", "offset": [11821, 11840], "op": "SDIV", "path": "39"}, "2230": {"fn": "LogExpMath.exp", "offset": [11820, 11845], "op": "SDIV", "path": "39"}, "2231": {"fn": "LogExpMath.exp", "offset": [11855, 11872], "op": "SWAP2", "path": "39", "statement": 75}, "2232": {"fn": "LogExpMath.exp", "offset": [11855, 11872], "op": "DUP3", "path": "39"}, "2233": {"fn": "LogExpMath.exp", "offset": [11855, 11872], "op": "ADD", "path": "39"}, "2234": {"fn": "LogExpMath.exp", "offset": [11855, 11872], "op": "SWAP2", "path": "39"}, "2235": {"fn": "LogExpMath.exp", "offset": [11820, 11845], "op": "SWAP1", "path": "39"}, "2236": {"op": "POP"}, "2237": {"fn": "LogExpMath.exp", "offset": [11914, 11916], "op": "PUSH1", "path": "39", "statement": 76, "value": "0xA"}, "2239": {"offset": [2125, 2129], "op": "PUSH9", "path": "39", "value": "0x56BC75E2D63100000"}, "2249": {"fn": "LogExpMath.exp", "offset": [11892, 11900], "op": "DUP8", "path": "39"}, "2250": {"fn": "LogExpMath.exp", "offset": [11892, 11900], "op": "DUP4", "path": "39"}, "2251": {"fn": "LogExpMath.exp", "offset": [11892, 11900], "op": "MUL", "path": "39"}, "2252": {"fn": "LogExpMath.exp", "offset": [11891, 11910], "op": "SDIV", "path": "39"}, "2253": {"fn": "LogExpMath.exp", "offset": [11890, 11916], "op": "SDIV", "path": "39"}, "2254": {"fn": "LogExpMath.exp", "offset": [11926, 11943], "op": "SWAP2", "path": "39", "statement": 77}, "2255": {"fn": "LogExpMath.exp", "offset": [11926, 11943], "op": "DUP3", "path": "39"}, "2256": {"fn": "LogExpMath.exp", "offset": [11926, 11943], "op": "ADD", "path": "39"}, "2257": {"fn": "LogExpMath.exp", "offset": [11926, 11943], "op": "SWAP2", "path": "39"}, "2258": {"fn": "LogExpMath.exp", "offset": [11890, 11916], "op": "SWAP1", "path": "39"}, "2259": {"op": "POP"}, "2260": {"fn": "LogExpMath.exp", "offset": [11985, 11987], "op": "PUSH1", "path": "39", "statement": 78, "value": "0xB"}, "2262": {"offset": [2125, 2129], "op": "PUSH9", "path": "39", "value": "0x56BC75E2D63100000"}, "2272": {"fn": "LogExpMath.exp", "offset": [11963, 11971], "op": "DUP8", "path": "39"}, "2273": {"fn": "LogExpMath.exp", "offset": [11963, 11971], "op": "DUP4", "path": "39"}, "2274": {"fn": "LogExpMath.exp", "offset": [11963, 11971], "op": "MUL", "path": "39"}, "2275": {"fn": "LogExpMath.exp", "offset": [11962, 11981], "op": "SDIV", "path": "39"}, "2276": {"fn": "LogExpMath.exp", "offset": [11961, 11987], "op": "SDIV", "path": "39"}, "2277": {"fn": "LogExpMath.exp", "offset": [11997, 12014], "op": "SWAP2", "path": "39", "statement": 79}, "2278": {"fn": "LogExpMath.exp", "offset": [11997, 12014], "op": "DUP3", "path": "39"}, "2279": {"fn": "LogExpMath.exp", "offset": [11997, 12014], "op": "ADD", "path": "39"}, "2280": {"fn": "LogExpMath.exp", "offset": [11997, 12014], "op": "SWAP2", "path": "39"}, "2281": {"fn": "LogExpMath.exp", "offset": [11961, 11987], "op": "SWAP1", "path": "39"}, "2282": {"op": "POP"}, "2283": {"fn": "LogExpMath.exp", "offset": [12056, 12058], "op": "PUSH1", "path": "39", "statement": 80, "value": "0xC"}, "2285": {"offset": [2125, 2129], "op": "PUSH9", "path": "39", "value": "0x56BC75E2D63100000"}, "2295": {"fn": "LogExpMath.exp", "offset": [12034, 12042], "op": "DUP8", "path": "39"}, "2296": {"fn": "LogExpMath.exp", "offset": [12034, 12042], "op": "DUP4", "path": "39"}, "2297": {"fn": "LogExpMath.exp", "offset": [12034, 12042], "op": "MUL", "path": "39"}, "2298": {"fn": "LogExpMath.exp", "offset": [12033, 12052], "op": "SDIV", "path": "39"}, "2299": {"fn": "LogExpMath.exp", "offset": [12032, 12058], "op": "SDIV", "path": "39"}, "2300": {"fn": "LogExpMath.exp", "offset": [12068, 12085], "op": "SWAP2", "path": "39", "statement": 81}, "2301": {"fn": "LogExpMath.exp", "offset": [12068, 12085], "op": "DUP3", "path": "39"}, "2302": {"fn": "LogExpMath.exp", "offset": [12068, 12085], "op": "ADD", "path": "39"}, "2303": {"fn": "LogExpMath.exp", "offset": [12068, 12085], "op": "SWAP2", "path": "39"}, "2304": {"fn": "LogExpMath.exp", "offset": [12032, 12058], "op": "SWAP1", "path": "39"}, "2305": {"op": "POP"}, "2306": {"fn": "LogExpMath.exp", "offset": [12640, 12643], "op": "PUSH1", "path": "39", "statement": 82, "value": "0x64"}, "2308": {"offset": [2125, 2129], "op": "PUSH9", "path": "39", "value": "0x56BC75E2D63100000"}, "2318": {"fn": "LogExpMath.exp", "offset": [12596, 12615], "op": "DUP5", "path": "39"}, "2319": {"fn": "LogExpMath.exp", "offset": [12596, 12615], "op": "DUP5", "path": "39"}, "2320": {"fn": "LogExpMath.exp", "offset": [12596, 12615], "op": "MUL", "path": "39"}, "2321": {"fn": "LogExpMath.exp", "offset": [12595, 12625], "op": "SDIV", "path": "39"}, "2322": {"fn": "LogExpMath.exp", "offset": [12594, 12636], "op": "DUP6", "path": "39"}, "2323": {"fn": "LogExpMath.exp", "offset": [12594, 12636], "op": "MUL", "path": "39"}, "2324": {"fn": "LogExpMath.exp", "offset": [12593, 12643], "op": "SDIV", "path": "39"}, "2325": {"fn": "LogExpMath.exp", "offset": [12593, 12643], "op": "SWAP7", "path": "39"}, "2326": {"fn": "LogExpMath.exp", "offset": [7271, 12650], "op": "SWAP6", "path": "39"}, "2327": {"op": "POP"}, "2328": {"op": "POP"}, "2329": {"op": "POP"}, "2330": {"op": "POP"}, "2331": {"op": "POP"}, "2332": {"op": "POP"}, "2333": {"fn": "LogExpMath.exp", "jump": "o", "offset": [7271, 12650], "op": "JUMP", "path": "39"}, "2334": {"fn": "Samples._accLogPairPrice", "offset": [6061, 6203], "op": "JUMPDEST", "path": "23"}, "2335": {"fn": "Samples._accLogPairPrice", "offset": [6125, 6131], "op": "PUSH1", "path": "23", "value": "0x0"}, "2337": {"fn": "Samples._accLogPairPrice", "offset": [6150, 6196], "op": "PUSH2", "path": "23", "statement": 83, "value": "0x3D3"}, "2340": {"fn": "Samples._accLogPairPrice", "offset": [6150, 6156], "op": "DUP3", "path": "23"}, "2341": {"offset": [2858, 2861], "op": "PUSH1", "path": "23", "value": "0xB5"}, "2343": {"fn": "Samples._accLogPairPrice", "offset": [6150, 6168], "op": "PUSH2", "path": "23", "value": "0x97B"}, "2346": {"fn": "Samples._accLogPairPrice", "jump": "i", "offset": [6150, 6196], "op": "JUMP", "path": "23"}, "2347": {"fn": "Samples._accLogBptPrice", "offset": [6548, 6688], "op": "JUMPDEST", "path": "23"}, "2348": {"fn": "Samples._accLogBptPrice", "offset": [6611, 6617], "op": "PUSH1", "path": "23", "value": "0x0"}, "2350": {"fn": "Samples._accLogBptPrice", "offset": [6636, 6681], "op": "PUSH2", "path": "23", "statement": 84, "value": "0x3D3"}, "2353": {"fn": "Samples._accLogBptPrice", "offset": [6636, 6642], "op": "DUP3", "path": "23"}, "2354": {"offset": [2730, 2733], "op": "PUSH1", "path": "23", "value": "0x6A"}, "2356": {"fn": "Samples._accLogBptPrice", "offset": [6636, 6654], "op": "PUSH2", "path": "23", "value": "0x97B"}, "2359": {"fn": "Samples._accLogBptPrice", "jump": "i", "offset": [6636, 6681], "op": "JUMP", "path": "23"}, "2360": {"fn": "Samples._accLogInvariant", "offset": [7034, 7175], "op": "JUMPDEST", "path": "23"}, "2361": {"fn": "Samples._accLogInvariant", "offset": [7098, 7104], "op": "PUSH1", "path": "23", "value": "0x0"}, "2363": {"fn": "Samples._accLogInvariant", "offset": [7123, 7168], "op": "PUSH2", "path": "23", "statement": 85, "value": "0x3D3"}, "2366": {"fn": "Samples._accLogInvariant", "offset": [7123, 7129], "op": "DUP3", "path": "23"}, "2367": {"offset": [2605, 2607], "op": "PUSH1", "path": "23", "value": "0x1F"}, "2369": {"fn": "Samples._accLogInvariant", "offset": [7123, 7141], "op": "PUSH2", "path": "23", "value": "0x97B"}, "2372": {"fn": "Samples._accLogInvariant", "jump": "i", "offset": [7123, 7168], "op": "JUMP", "path": "23"}, "2373": {"fn": "Buffer.sub", "offset": [1657, 1787], "op": "JUMPDEST", "path": "20"}, "2374": {"fn": "Buffer.sub", "offset": [1724, 1731], "op": "PUSH1", "path": "20", "value": "0x0"}, "2376": {"offset": [899, 903], "op": "PUSH2", "path": "20", "value": "0x400"}, "2379": {"fn": "Buffer.sub", "offset": [1751, 1772], "op": "DUP3", "path": "20", "statement": 86}, "2380": {"fn": "Buffer.sub", "offset": [1751, 1772], "op": "DUP5", "path": "20"}, "2381": {"fn": "Buffer.sub", "offset": [1751, 1772], "op": "SUB", "path": "20"}, "2382": {"fn": "Buffer.sub", "offset": [1751, 1772], "op": "DUP2", "path": "20"}, "2383": {"fn": "Buffer.sub", "offset": [1751, 1772], "op": "ADD", "path": "20"}, "2384": {"fn": "Buffer.sub", "offset": [1750, 1780], "op": "PUSH2", "path": "20", "value": "0x4A7"}, "2387": {"fn": "Buffer.sub", "offset": [1750, 1780], "op": "JUMP", "path": "20"}, "2388": {"fn": "WordCodec.decodeInt22", "offset": [12135, 12622], "op": "JUMPDEST", "path": "37"}, "2389": {"fn": "WordCodec.decodeInt22", "offset": [12209, 12215], "op": "PUSH1", "path": "37", "value": "0x0"}, "2391": {"fn": "WordCodec.decodeInt22", "offset": [12257, 12271], "op": "DUP3", "path": "37"}, "2392": {"fn": "WordCodec.decodeInt22", "offset": [12257, 12271], "op": "DUP3", "path": "37"}, "2393": {"fn": "WordCodec.decodeInt22", "offset": [12257, 12271], "op": "SHR", "path": "37"}, "2394": {"offset": [2386, 2397], "op": "PUSH3", "path": "37", "value": "0x3FFFFF"}, "2398": {"fn": "WordCodec.decodeInt22", "offset": [12249, 12283], "op": "AND", "path": "37"}, "2399": {"offset": [2846, 2857], "op": "PUSH3", "path": "37", "value": "0x1FFFFF"}, "2403": {"fn": "WordCodec.decodeInt22", "offset": [12558, 12577], "op": "DUP2", "path": "37", "statement": 87}, "2404": {"branch": 110, "fn": "WordCodec.decodeInt22", "offset": [12558, 12577], "op": "SGT", "path": "37"}, "2405": {"fn": "WordCodec.decodeInt22", "offset": [12558, 12615], "op": "PUSH2", "path": "37", "value": "0x96E"}, "2408": {"branch": 110, "fn": "WordCodec.decodeInt22", "offset": [12558, 12615], "op": "JUMPI", "path": "37"}, "2409": {"fn": "WordCodec.decodeInt22", "offset": [12610, 12615], "op": "DUP1", "path": "37"}, "2410": {"fn": "WordCodec.decodeInt22", "offset": [12558, 12615], "op": "PUSH2", "path": "37", "value": "0x283"}, "2413": {"fn": "WordCodec.decodeInt22", "offset": [12558, 12615], "op": "JUMP", "path": "37"}, "2414": {"fn": "WordCodec.decodeInt22", "offset": [12558, 12615], "op": "JUMPDEST", "path": "37"}, "2415": {"op": "PUSH3", "value": "0x3FFFFF"}, "2419": {"op": "NOT"}, "2420": {"fn": "WordCodec.decodeInt22", "offset": [12581, 12606], "op": "OR", "path": "37"}, "2421": {"fn": "WordCodec.decodeInt22", "offset": [12581, 12606], "op": "SWAP4", "path": "37"}, "2422": {"fn": "WordCodec.decodeInt22", "offset": [12551, 12615], "op": "SWAP3", "path": "37"}, "2423": {"op": "POP"}, "2424": {"op": "POP"}, "2425": {"op": "POP"}, "2426": {"fn": "WordCodec.decodeInt22", "jump": "o", "offset": [12135, 12622], "op": "JUMP", "path": "37"}, "2427": {"fn": "WordCodec.decodeInt53", "offset": [12743, 13231], "op": "JUMPDEST", "path": "37"}, "2428": {"fn": "WordCodec.decodeInt53", "offset": [12817, 12823], "op": "PUSH1", "path": "37", "value": "0x0"}, "2430": {"fn": "WordCodec.decodeInt53", "offset": [12865, 12879], "op": "DUP3", "path": "37"}, "2431": {"fn": "WordCodec.decodeInt53", "offset": [12865, 12879], "op": "DUP3", "path": "37"}, "2432": {"fn": "WordCodec.decodeInt53", "offset": [12865, 12879], "op": "SHR", "path": "37"}, "2433": {"offset": [2545, 2556], "op": "PUSH7", "path": "37", "value": "0x1FFFFFFFFFFFFF"}, "2441": {"fn": "WordCodec.decodeInt53", "offset": [12857, 12891], "op": "AND", "path": "37"}, "2442": {"offset": [2901, 2912], "op": "PUSH7", "path": "37", "value": "0xFFFFFFFFFFFFF"}, "2450": {"fn": "WordCodec.decodeInt53", "offset": [13167, 13186], "op": "DUP2", "path": "37", "statement": 88}, "2451": {"branch": 111, "fn": "WordCodec.decodeInt53", "offset": [13167, 13186], "op": "SGT", "path": "37"}, "2452": {"fn": "WordCodec.decodeInt53", "offset": [13167, 13224], "op": "PUSH2", "path": "37", "value": "0x99D"}, "2455": {"branch": 111, "fn": "WordCodec.decodeInt53", "offset": [13167, 13224], "op": "JUMPI", "path": "37"}, "2456": {"fn": "WordCodec.decodeInt53", "offset": [13219, 13224], "op": "DUP1", "path": "37"}, "2457": {"fn": "WordCodec.decodeInt53", "offset": [13167, 13224], "op": "PUSH2", "path": "37", "value": "0x283"}, "2460": {"fn": "WordCodec.decodeInt53", "offset": [13167, 13224], "op": "JUMP", "path": "37"}, "2461": {"fn": "WordCodec.decodeInt53", "offset": [13167, 13224], "op": "JUMPDEST", "path": "37"}, "2462": {"op": "PUSH7", "value": "0x1FFFFFFFFFFFFF"}, "2470": {"op": "NOT"}, "2471": {"fn": "WordCodec.decodeInt53", "offset": [13190, 13215], "op": "OR", "path": "37"}, "2472": {"fn": "WordCodec.decodeInt53", "offset": [13190, 13215], "op": "SWAP4", "path": "37"}, "2473": {"fn": "WordCodec.decodeInt53", "offset": [12743, 13231], "op": "SWAP3", "path": "37"}, "2474": {"op": "POP"}, "2475": {"op": "POP"}, "2476": {"op": "POP"}, "2477": {"fn": "WordCodec.decodeInt53", "jump": "o", "offset": [12743, 13231], "op": "JUMP", "path": "37"}, "2478": {"op": "JUMPDEST"}, "2479": {"op": "DUP1"}, "2480": {"op": "CALLDATALOAD"}, "2481": {"op": "PUSH1", "value": "0x3"}, "2483": {"op": "DUP2"}, "2484": {"op": "LT"}, "2485": {"op": "PUSH2", "value": "0x3D6"}, "2488": {"op": "JUMPI"}, "2489": {"op": "PUSH1", "value": "0x0"}, "2491": {"op": "DUP1"}, "2492": {"op": "REVERT"}, "2493": {"op": "JUMPDEST"}, "2494": {"op": "PUSH1", "value": "0x0"}, "2496": {"op": "DUP1"}, "2497": {"op": "PUSH1", "value": "0x0"}, "2499": {"op": "PUSH1", "value": "0x60"}, "2501": {"op": "DUP5"}, "2502": {"op": "DUP7"}, "2503": {"op": "SUB"}, "2504": {"op": "SLT"}, "2505": {"op": "ISZERO"}, "2506": {"op": "PUSH2", "value": "0x9D1"}, "2509": {"op": "JUMPI"}, "2510": {"op": "DUP3"}, "2511": {"op": "DUP4"}, "2512": {"op": "REVERT"}, "2513": {"op": "JUMPDEST"}, "2514": {"op": "DUP4"}, "2515": {"op": "CALLDATALOAD"}, "2516": {"op": "SWAP3"}, "2517": {"op": "POP"}, "2518": {"op": "PUSH2", "value": "0x9E1"}, "2521": {"op": "PUSH1", "value": "0x20"}, "2523": {"op": "DUP6"}, "2524": {"op": "ADD"}, "2525": {"op": "PUSH2", "value": "0x9AE"}, "2528": {"jump": "i", "op": "JUMP"}, "2529": {"op": "JUMPDEST"}, "2530": {"op": "SWAP2"}, "2531": {"op": "POP"}, "2532": {"op": "PUSH1", "value": "0x40"}, "2534": {"op": "DUP5"}, "2535": {"op": "ADD"}, "2536": {"op": "CALLDATALOAD"}, "2537": {"op": "SWAP1"}, "2538": {"op": "POP"}, "2539": {"op": "SWAP3"}, "2540": {"op": "POP"}, "2541": {"op": "SWAP3"}, "2542": {"op": "POP"}, "2543": {"op": "SWAP3"}, "2544": {"jump": "o", "op": "JUMP"}, "2545": {"op": "JUMPDEST"}, "2546": {"op": "PUSH1", "value": "0x0"}, "2548": {"op": "DUP1"}, "2549": {"op": "PUSH1", "value": "0x0"}, "2551": {"op": "DUP1"}, "2552": {"op": "PUSH1", "value": "0x80"}, "2554": {"op": "DUP6"}, "2555": {"op": "DUP8"}, "2556": {"op": "SUB"}, "2557": {"op": "SLT"}, "2558": {"op": "ISZERO"}, "2559": {"op": "PUSH2", "value": "0xA06"}, "2562": {"op": "JUMPI"}, "2563": {"op": "DUP1"}, "2564": {"op": "DUP2"}, "2565": {"op": "REVERT"}, "2566": {"op": "JUMPDEST"}, "2567": {"op": "DUP5"}, "2568": {"op": "CALLDATALOAD"}, "2569": {"op": "SWAP4"}, "2570": {"op": "POP"}, "2571": {"op": "PUSH2", "value": "0xA16"}, "2574": {"op": "PUSH1", "value": "0x20"}, "2576": {"op": "DUP7"}, "2577": {"op": "ADD"}, "2578": {"op": "PUSH2", "value": "0x9AE"}, "2581": {"jump": "i", "op": "JUMP"}, "2582": {"op": "JUMPDEST"}, "2583": {"op": "SWAP4"}, "2584": {"op": "SWAP7"}, "2585": {"op": "SWAP4"}, "2586": {"op": "SWAP6"}, "2587": {"op": "POP"}, "2588": {"op": "POP"}, "2589": {"op": "POP"}, "2590": {"op": "POP"}, "2591": {"op": "PUSH1", "value": "0x40"}, "2593": {"op": "DUP3"}, "2594": {"op": "ADD"}, "2595": {"op": "CALLDATALOAD"}, "2596": {"op": "SWAP2"}, "2597": {"op": "PUSH1", "value": "0x60"}, "2599": {"op": "ADD"}, "2600": {"op": "CALLDATALOAD"}, "2601": {"op": "SWAP1"}, "2602": {"jump": "o", "op": "JUMP"}, "2603": {"op": "JUMPDEST"}, "2604": {"op": "PUSH1", "value": "0x0"}, "2606": {"op": "DUP1"}, "2607": {"op": "PUSH1", "value": "0x0"}, "2609": {"op": "DUP4"}, "2610": {"op": "DUP6"}, "2611": {"op": "SUB"}, "2612": {"op": "PUSH1", "value": "0xA0"}, "2614": {"op": "DUP2"}, "2615": {"op": "SLT"}, "2616": {"op": "ISZERO"}, "2617": {"op": "PUSH2", "value": "0xA40"}, "2620": {"op": "JUMPI"}, "2621": {"op": "DUP4"}, "2622": {"op": "DUP5"}, "2623": {"op": "REVERT"}, "2624": {"op": "JUMPDEST"}, "2625": {"op": "DUP5"}, "2626": {"op": "CALLDATALOAD"}, "2627": {"op": "SWAP4"}, "2628": {"op": "POP"}, "2629": {"op": "PUSH1", "value": "0x60"}, "2631": {"op": "PUSH1", "value": "0x1F"}, "2633": {"op": "NOT"}, "2634": {"op": "DUP3"}, "2635": {"op": "ADD"}, "2636": {"op": "SLT"}, "2637": {"op": "ISZERO"}, "2638": {"op": "PUSH2", "value": "0xA55"}, "2641": {"op": "JUMPI"}, "2642": {"op": "DUP3"}, "2643": {"op": "DUP4"}, "2644": {"op": "REVERT"}, "2645": {"op": "JUMPDEST"}, "2646": {"op": "POP"}, "2647": {"op": "PUSH1", "value": "0x40"}, "2649": {"op": "MLOAD"}, "2650": {"op": "PUSH1", "value": "0x60"}, "2652": {"op": "DUP2"}, "2653": {"op": "ADD"}, "2654": {"op": "DUP2"}, "2655": {"op": "DUP2"}, "2656": {"op": "LT"}, "2657": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "2666": {"op": "DUP3"}, "2667": {"op": "GT"}, "2668": {"op": "OR"}, "2669": {"op": "ISZERO"}, "2670": {"op": "PUSH2", "value": "0xA73"}, "2673": {"op": "JUMPI"}, "2674": {"op": "INVALID"}, "2675": {"op": "JUMPDEST"}, "2676": {"op": "PUSH1", "value": "0x40"}, "2678": {"op": "MSTORE"}, "2679": {"op": "PUSH2", "value": "0xA82"}, "2682": {"op": "PUSH1", "value": "0x20"}, "2684": {"op": "DUP7"}, "2685": {"op": "ADD"}, "2686": {"op": "PUSH2", "value": "0x9AE"}, "2689": {"jump": "i", "op": "JUMP"}, "2690": {"op": "JUMPDEST"}, "2691": {"op": "DUP2"}, "2692": {"op": "MSTORE"}, "2693": {"op": "PUSH1", "value": "0x40"}, "2695": {"op": "DUP6"}, "2696": {"op": "DUP2"}, "2697": {"op": "ADD"}, "2698": {"op": "CALLDATALOAD"}, "2699": {"op": "PUSH1", "value": "0x20"}, "2701": {"op": "DUP4"}, "2702": {"op": "ADD"}, "2703": {"op": "MSTORE"}, "2704": {"op": "PUSH1", "value": "0x60"}, "2706": {"op": "DUP7"}, "2707": {"op": "ADD"}, "2708": {"op": "CALLDATALOAD"}, "2709": {"op": "SWAP1"}, "2710": {"op": "DUP3"}, "2711": {"op": "ADD"}, "2712": {"op": "MSTORE"}, "2713": {"op": "SWAP3"}, "2714": {"op": "SWAP6"}, "2715": {"op": "SWAP3"}, "2716": {"op": "SWAP5"}, "2717": {"op": "POP"}, "2718": {"op": "POP"}, "2719": {"op": "POP"}, "2720": {"op": "PUSH1", "value": "0x80"}, "2722": {"op": "SWAP1"}, "2723": {"op": "SWAP2"}, "2724": {"op": "ADD"}, "2725": {"op": "CALLDATALOAD"}, "2726": {"op": "SWAP1"}, "2727": {"jump": "o", "op": "JUMP"}, "2728": {"op": "JUMPDEST"}, "2729": {"op": "PUSH1", "value": "0x0"}, "2731": {"op": "DUP1"}, "2732": {"op": "PUSH1", "value": "0x0"}, "2734": {"op": "DUP1"}, "2735": {"op": "PUSH1", "value": "0x80"}, "2737": {"op": "DUP6"}, "2738": {"op": "DUP8"}, "2739": {"op": "SUB"}, "2740": {"op": "SLT"}, "2741": {"op": "ISZERO"}, "2742": {"op": "PUSH2", "value": "0xABD"}, "2745": {"op": "JUMPI"}, "2746": {"op": "DUP4"}, "2747": {"op": "DUP5"}, "2748": {"op": "REVERT"}, "2749": {"op": "JUMPDEST"}, "2750": {"op": "POP"}, "2751": {"op": "POP"}, "2752": {"op": "DUP3"}, "2753": {"op": "CALLDATALOAD"}, "2754": {"op": "SWAP5"}, "2755": {"op": "PUSH1", "value": "0x20"}, "2757": {"op": "DUP5"}, "2758": {"op": "ADD"}, "2759": {"op": "CALLDATALOAD"}, "2760": {"op": "SWAP5"}, "2761": {"op": "POP"}, "2762": {"op": "PUSH1", "value": "0x40"}, "2764": {"op": "DUP5"}, "2765": {"op": "ADD"}, "2766": {"op": "CALLDATALOAD"}, "2767": {"op": "SWAP4"}, "2768": {"op": "PUSH1", "value": "0x60"}, "2770": {"op": "ADD"}, "2771": {"op": "CALLDATALOAD"}, "2772": {"op": "SWAP3"}, "2773": {"op": "POP"}, "2774": {"op": "SWAP1"}, "2775": {"op": "POP"}, "2776": {"jump": "o", "op": "JUMP"}, "2777": {"op": "JUMPDEST"}, "2778": {"op": "SWAP2"}, "2779": {"op": "DUP3"}, "2780": {"op": "MSTORE"}, "2781": {"op": "PUSH1", "value": "0x20"}, "2783": {"op": "DUP3"}, "2784": {"op": "ADD"}, "2785": {"op": "MSTORE"}, "2786": {"op": "PUSH1", "value": "0x40"}, "2788": {"op": "ADD"}, "2789": {"op": "SWAP1"}, "2790": {"jump": "o", "op": "JUMP"}, "2791": {"op": "JUMPDEST"}, "2792": {"op": "SWAP1"}, "2793": {"op": "DUP2"}, "2794": {"op": "MSTORE"}, "2795": {"op": "PUSH1", "value": "0x20"}, "2797": {"op": "ADD"}, "2798": {"op": "SWAP1"}, "2799": {"jump": "o", "op": "JUMP"}}, "sha1": "bc05072028a7efd71c4f4051a8c45ec6be4811a2", "source": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\npragma experimental ABIEncoderV2;\n\nimport \"@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol\";\nimport \"@balancer-labs/v2-solidity-utils/contracts/helpers/LogCompression.sol\";\n\nimport \"../interfaces/IPriceOracle.sol\";\n\nimport \"./Buffer.sol\";\nimport \"./Samples.sol\";\n\n/**\n * @dev Auxiliary library for PoolPriceOracle, offloading most of the query code to reduce bytecode size by using this\n * as a linked library. The downside is an extra DELEGATECALL is added (2600 gas as of the Berlin hardfork), but the\n * bytecode size gains are so big (specially of the oracle contract does not use `LogCompression.fromLowResLog`) that\n * it is worth it.\n */\nlibrary QueryProcessor {\n    using Buffer for uint256;\n    using Samples for bytes32;\n    using LogCompression for int256;\n\n    /**\n     * @dev Returns the value for `variable` at the indexed sample.\n     */\n    function getInstantValue(\n        mapping(uint256 => bytes32) storage samples,\n        IPriceOracle.Variable variable,\n        uint256 index\n    ) external view returns (uint256) {\n        bytes32 sample = samples[index];\n        _require(sample.timestamp() > 0, Errors.ORACLE_NOT_INITIALIZED);\n\n        int256 rawInstantValue = sample.instant(variable);\n        return LogCompression.fromLowResLog(rawInstantValue);\n    }\n\n    /**\n     * @dev Returns the time average weighted price corresponding to `query`.\n     */\n    function getTimeWeightedAverage(\n        mapping(uint256 => bytes32) storage samples,\n        IPriceOracle.OracleAverageQuery memory query,\n        uint256 latestIndex\n    ) external view returns (uint256) {\n        _require(query.secs != 0, Errors.ORACLE_BAD_SECS);\n\n        int256 beginAccumulator = getPastAccumulator(samples, query.variable, latestIndex, query.ago + query.secs);\n        int256 endAccumulator = getPastAccumulator(samples, query.variable, latestIndex, query.ago);\n        return LogCompression.fromLowResLog((endAccumulator - beginAccumulator) / int256(query.secs));\n    }\n\n    /**\n     * @dev Returns the value of the accumulator for `variable` `ago` seconds ago. `latestIndex` must be the index of\n     * the latest sample in the buffer.\n     *\n     * Reverts under the following conditions:\n     *  - if the buffer is empty.\n     *  - if querying past information and the buffer has not been fully initialized.\n     *  - if querying older information than available in the buffer. Note that a full buffer guarantees queries for the\n     *    past 34 hours will not revert.\n     *\n     * If requesting information for a timestamp later than the latest one, it is extrapolated using the latest\n     * available data.\n     *\n     * When no exact information is available for the requested past timestamp (as usually happens, since at most one\n     * timestamp is stored every two minutes), it is estimated by performing linear interpolation using the closest\n     * values. This process is guaranteed to complete performing at most 10 storage reads.\n     */\n    function getPastAccumulator(\n        mapping(uint256 => bytes32) storage samples,\n        IPriceOracle.Variable variable,\n        uint256 latestIndex,\n        uint256 ago\n    ) public view returns (int256) {\n        // solhint-disable not-rely-on-time\n        // `ago` must not be before the epoch.\n        _require(block.timestamp >= ago, Errors.ORACLE_INVALID_SECONDS_QUERY);\n        uint256 lookUpTime = block.timestamp - ago;\n\n        bytes32 latestSample = samples[latestIndex];\n        uint256 latestTimestamp = latestSample.timestamp();\n\n        // The latest sample only has a non-zero timestamp if no data was ever processed and stored in the buffer.\n        _require(latestTimestamp > 0, Errors.ORACLE_NOT_INITIALIZED);\n\n        if (latestTimestamp <= lookUpTime) {\n            // The accumulator at times ahead of the latest one are computed by extrapolating the latest data. This is\n            // equivalent to the instant value not changing between the last timestamp and the look up time.\n\n            // We can use unchecked arithmetic since the accumulator can be represented in 53 bits, timestamps in 31\n            // bits, and the instant value in 22 bits.\n            uint256 elapsed = lookUpTime - latestTimestamp;\n            return latestSample.accumulator(variable) + (latestSample.instant(variable) * int256(elapsed));\n        } else {\n            // The look up time is before the latest sample, but we need to make sure that it is not before the oldest\n            // sample as well.\n\n            // Since we use a circular buffer, the oldest sample is simply the next one.\n            uint256 bufferLength;\n            uint256 oldestIndex = latestIndex.next();\n            {\n                // Local scope used to prevent stack-too-deep errors.\n                bytes32 oldestSample = samples[oldestIndex];\n                uint256 oldestTimestamp = oldestSample.timestamp();\n\n                if (oldestTimestamp > 0) {\n                    // If the oldest timestamp is not zero, it means the buffer was fully initialized.\n                    bufferLength = Buffer.SIZE;\n                } else {\n                    // If the buffer was not fully initialized, we haven't wrapped around it yet,\n                    // and can treat it as a regular array where the oldest index is the first one,\n                    // and the length the number of samples.\n                    bufferLength = oldestIndex; // Equal to latestIndex.next()\n                    oldestIndex = 0;\n                    oldestTimestamp = samples[0].timestamp();\n                }\n\n                // Finally check that the look up time is not previous to the oldest timestamp.\n                _require(oldestTimestamp <= lookUpTime, Errors.ORACLE_QUERY_TOO_OLD);\n            }\n\n            // Perform binary search to find nearest samples to the desired timestamp.\n            (bytes32 prev, bytes32 next) = findNearestSample(samples, lookUpTime, oldestIndex, bufferLength);\n\n            // `next`'s timestamp is guaranteed to be larger than `prev`'s, so we can skip checked arithmetic.\n            uint256 samplesTimeDiff = next.timestamp() - prev.timestamp();\n\n            if (samplesTimeDiff > 0) {\n                // We estimate the accumulator at the requested look up time by interpolating linearly between the\n                // previous and next accumulators.\n\n                // We can use unchecked arithmetic since the accumulators can be represented in 53 bits, and timestamps\n                // in 31 bits.\n                int256 samplesAccDiff = next.accumulator(variable) - prev.accumulator(variable);\n                uint256 elapsed = lookUpTime - prev.timestamp();\n                return prev.accumulator(variable) + ((samplesAccDiff * int256(elapsed)) / int256(samplesTimeDiff));\n            } else {\n                // Rarely, one of the samples will have the exact requested look up time, which is indicated by `prev`\n                // and `next` being the same. In this case, we simply return the accumulator at that point in time.\n                return prev.accumulator(variable);\n            }\n        }\n    }\n\n    /**\n     * @dev Finds the two samples with timestamps before and after `lookUpDate`. If one of the samples matches exactly,\n     * both `prev` and `next` will be it. `offset` is the index of the oldest sample in the buffer. `length` is the size\n     * of the samples list.\n     *\n     * Assumes `lookUpDate` is greater or equal than the timestamp of the oldest sample, and less or equal than the\n     * timestamp of the latest sample.\n     */\n    function findNearestSample(\n        mapping(uint256 => bytes32) storage samples,\n        uint256 lookUpDate,\n        uint256 offset,\n        uint256 length\n    ) public view returns (bytes32 prev, bytes32 next) {\n        // We're going to perform a binary search in the circular buffer, which requires it to be sorted. To achieve\n        // this, we offset all buffer accesses by `offset`, making the first element the oldest one.\n\n        // Auxiliary variables in a typical binary search: we will look at some value `mid` between `low` and `high`,\n        // periodically increasing `low` or decreasing `high` until we either find a match or determine the element is\n        // not in the array.\n        uint256 low = 0;\n        uint256 high = length - 1;\n        uint256 mid;\n\n        // If the search fails and no sample has a timestamp of `lookUpDate` (as is the most common scenario), `sample`\n        // will be either the sample with the largest timestamp smaller than `lookUpDate`, or the one with the smallest\n        // timestamp larger than `lookUpDate`.\n        bytes32 sample;\n        uint256 sampleTimestamp;\n\n        while (low <= high) {\n            // Mid is the floor of the average.\n            uint256 midWithoutOffset = (high + low) / 2;\n\n            // Recall that the buffer is not actually sorted: we need to apply the offset to access it in a sorted way.\n            mid = midWithoutOffset.add(offset);\n            sample = samples[mid];\n            sampleTimestamp = sample.timestamp();\n\n            if (sampleTimestamp < lookUpDate) {\n                // If the mid sample is bellow the look up date, then increase the low index to start from there.\n                low = midWithoutOffset + 1;\n            } else if (sampleTimestamp > lookUpDate) {\n                // If the mid sample is above the look up date, then decrease the high index to start from there.\n\n                // We can skip checked arithmetic: it is impossible for `high` to ever be 0, as a scenario where `low`\n                // equals 0 and `high` equals 1 would result in `low` increasing to 1 in the previous `if` clause.\n                high = midWithoutOffset - 1;\n            } else {\n                // sampleTimestamp == lookUpDate\n                // If we have an exact match, return the sample as both `prev` and `next`.\n                return (sample, sample);\n            }\n        }\n\n        // In case we reach here, it means we didn't find exactly the sample we where looking for.\n        return sampleTimestamp < lookUpDate ? (sample, samples[mid.next()]) : (samples[mid.prev()], sample);\n    }\n}\n", "sourceMap": "1379:9514:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "node_modules/@balancer-labs/v2-pool-utils/contracts/oracle/QueryProcessor.sol", "type": "library", "deployment": {"address": "0xCfEB869F69431e42cdB54A4F4f105C19C080A601", "chainid": "1337", "blockHeight": 3}}