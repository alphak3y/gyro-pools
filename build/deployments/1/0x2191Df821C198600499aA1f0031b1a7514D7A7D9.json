{"abi": [{"inputs": [{"components": [{"components": [{"internalType": "contract IVault", "name": "vault", "type": "address"}, {"internalType": "string", "name": "name", "type": "string"}, {"internalType": "string", "name": "symbol", "type": "string"}, {"internalType": "contract IERC20", "name": "token0", "type": "address"}, {"internalType": "contract IERC20", "name": "token1", "type": "address"}, {"internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}, {"internalType": "uint256", "name": "pauseWindowDuration", "type": "uint256"}, {"internalType": "uint256", "name": "bufferPeriodDuration", "type": "uint256"}, {"internalType": "address", "name": "owner", "type": "address"}], "internalType": "struct ExtensibleWeightedPool2Tokens.NewPoolParams", "name": "baseParams", "type": "tuple"}, {"components": [{"internalType": "int256", "name": "alpha", "type": "int256"}, {"internalType": "int256", "name": "beta", "type": "int256"}, {"internalType": "int256", "name": "c", "type": "int256"}, {"internalType": "int256", "name": "s", "type": "int256"}, {"internalType": "int256", "name": "lambda", "type": "int256"}], "internalType": "struct GyroECLPMath.Params", "name": "eclpParams", "type": "tuple"}, {"components": [{"components": [{"internalType": "int256", "name": "x", "type": "int256"}, {"internalType": "int256", "name": "y", "type": "int256"}], "internalType": "struct GyroECLPMath.Vector2", "name": "tauAlpha", "type": "tuple"}, {"components": [{"internalType": "int256", "name": "x", "type": "int256"}, {"internalType": "int256", "name": "y", "type": "int256"}], "internalType": "struct GyroECLPMath.Vector2", "name": "tauBeta", "type": "tuple"}, {"internalType": "int256", "name": "u", "type": "int256"}, {"internalType": "int256", "name": "v", "type": "int256"}, {"internalType": "int256", "name": "w", "type": "int256"}, {"internalType": "int256", "name": "z", "type": "int256"}, {"internalType": "int256", "name": "dSq", "type": "int256"}], "internalType": "struct GyroECLPMath.DerivedParams", "name": "derivedEclpParams", "type": "tuple"}, {"internalType": "address", "name": "rateProvider0", "type": "address"}, {"internalType": "address", "name": "rateProvider1", "type": "address"}, {"internalType": "address", "name": "capManager", "type": "address"}, {"components": [{"internalType": "bool", "name": "capEnabled", "type": "bool"}, {"internalType": "uint120", "name": "perAddressCap", "type": "uint120"}, {"internalType": "uint128", "name": "globalCap", "type": "uint128"}], "internalType": "struct ICappedLiquidity.CapParams", "name": "capParams", "type": "tuple"}, {"internalType": "address", "name": "pauseManager", "type": "address"}], "internalType": "struct GyroECLPPool.GyroParams", "name": "params", "type": "tuple"}, {"internalType": "address", "name": "configAddress", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "owner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "spender", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Approval", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "capManager", "type": "address"}], "name": "CapManagerUpdated", "type": "event"}, {"anonymous": false, "inputs": [{"components": [{"internalType": "bool", "name": "capEnabled", "type": "bool"}, {"internalType": "uint120", "name": "perAddressCap", "type": "uint120"}, {"internalType": "uint128", "name": "globalCap", "type": "uint128"}], "indexed": false, "internalType": "struct ICappedLiquidity.CapParams", "name": "params", "type": "tuple"}], "name": "CapParamsUpdated", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bool", "name": "derivedParamsValidated", "type": "bool"}], "name": "ECLPDerivedParamsValidated", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bool", "name": "paramsValidated", "type": "bool"}], "name": "ECLPParamsValidated", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "invariantAfterJoin", "type": "uint256"}], "name": "InvariantAterInitializeJoin", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "oldInvariant", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "newInvariant", "type": "uint256"}], "name": "InvariantOldAndNew", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "oldPauseManager", "type": "address"}, {"indexed": false, "internalType": "address", "name": "newPauseManager", "type": "address"}], "name": "PauseManagerChanged", "type": "event"}, {"anonymous": false, "inputs": [], "name": "PausedLocally", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bool", "name": "paused", "type": "bool"}], "name": "PausedStateChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}], "name": "SwapFeePercentageChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"components": [{"internalType": "int256", "name": "x", "type": "int256"}, {"internalType": "int256", "name": "y", "type": "int256"}], "indexed": false, "internalType": "struct GyroECLPMath.Vector2", "name": "invariant", "type": "tuple"}, {"indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "SwapParams", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "from", "type": "address"}, {"indexed": true, "internalType": "address", "name": "to", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Transfer", "type": "event"}, {"anonymous": false, "inputs": [], "name": "UnpausedLocally", "type": "event"}, {"inputs": [], "name": "DOMAIN_SEPARATOR", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "spender", "type": "address"}], "name": "allowance", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "approve", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "balanceOf", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "capManager", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "capParams", "outputs": [{"components": [{"internalType": "bool", "name": "capEnabled", "type": "bool"}, {"internalType": "uint120", "name": "perAddressCap", "type": "uint120"}, {"internalType": "uint128", "name": "globalCap", "type": "uint128"}], "internalType": "struct ICappedLiquidity.CapParams", "name": "", "type": "tuple"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_pauseManager", "type": "address"}], "name": "changePauseManager", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "decimals", "outputs": [{"internalType": "uint8", "name": "", "type": "uint8"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "decreaseAllowance", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes4", "name": "selector", "type": "bytes4"}], "name": "getActionId", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getActualSupply", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getAuthorizer", "outputs": [{"internalType": "contract IAuthorizer", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getECLPParams", "outputs": [{"components": [{"internalType": "int256", "name": "alpha", "type": "int256"}, {"internalType": "int256", "name": "beta", "type": "int256"}, {"internalType": "int256", "name": "c", "type": "int256"}, {"internalType": "int256", "name": "s", "type": "int256"}, {"internalType": "int256", "name": "lambda", "type": "int256"}], "internalType": "struct GyroECLPMath.Params", "name": "params", "type": "tuple"}, {"components": [{"components": [{"internalType": "int256", "name": "x", "type": "int256"}, {"internalType": "int256", "name": "y", "type": "int256"}], "internalType": "struct GyroECLPMath.Vector2", "name": "tauAlpha", "type": "tuple"}, {"components": [{"internalType": "int256", "name": "x", "type": "int256"}, {"internalType": "int256", "name": "y", "type": "int256"}], "internalType": "struct GyroECLPMath.Vector2", "name": "tauBeta", "type": "tuple"}, {"internalType": "int256", "name": "u", "type": "int256"}, {"internalType": "int256", "name": "v", "type": "int256"}, {"internalType": "int256", "name": "w", "type": "int256"}, {"internalType": "int256", "name": "z", "type": "int256"}, {"internalType": "int256", "name": "dSq", "type": "int256"}], "internalType": "struct GyroECLPMath.DerivedParams", "name": "d", "type": "tuple"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getFeesMetadata", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}, {"internalType": "uint256", "name": "", "type": "uint256"}, {"internalType": "address", "name": "", "type": "address"}, {"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getInvariant", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getInvariantDivActualSupply", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getLastInvariant", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getMiscData", "outputs": [{"internalType": "int256", "name": "logInvariant", "type": "int256"}, {"internalType": "int256", "name": "logTotalSupply", "type": "int256"}, {"internalType": "uint256", "name": "oracleSampleCreationTimestamp", "type": "uint256"}, {"internalType": "uint256", "name": "oracleIndex", "type": "uint256"}, {"internalType": "bool", "name": "oracleEnabled", "type": "bool"}, {"internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getNormalizedWeights", "outputs": [{"internalType": "uint256[]", "name": "", "type": "uint256[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getOwner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getPausedState", "outputs": [{"internalType": "bool", "name": "paused", "type": "bool"}, {"internalType": "uint256", "name": "pauseWindowEndTime", "type": "uint256"}, {"internalType": "uint256", "name": "bufferPeriodEndTime", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getPoolId", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getPrice", "outputs": [{"internalType": "uint256", "name": "spotPrice", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getRate", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getSwapFeePercentage", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getTokenRates", "outputs": [{"internalType": "uint256", "name": "rate0", "type": "uint256"}, {"internalType": "uint256", "name": "rate1", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getVault", "outputs": [{"internalType": "contract IVault", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "gyroConfig", "outputs": [{"internalType": "contract IGyroConfig", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "addedValue", "type": "uint256"}], "name": "increaseAllowance", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "name", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}], "name": "nonces", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "onExitPool", "outputs": [{"internalType": "uint256[]", "name": "", "type": "uint256[]"}, {"internalType": "uint256[]", "name": "", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "onJoinPool", "outputs": [{"internalType": "uint256[]", "name": "amountsIn", "type": "uint256[]"}, {"internalType": "uint256[]", "name": "dueProtocolFeeAmounts", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"components": [{"internalType": "enum IVault.SwapKind", "name": "kind", "type": "uint8"}, {"internalType": "contract IERC20", "name": "tokenIn", "type": "address"}, {"internalType": "contract IERC20", "name": "tokenOut", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}, {"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "address", "name": "from", "type": "address"}, {"internalType": "address", "name": "to", "type": "address"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "internalType": "struct IPoolSwapStructs.SwapRequest", "name": "request", "type": "tuple"}, {"internalType": "uint256", "name": "balanceTokenIn", "type": "uint256"}, {"internalType": "uint256", "name": "balanceTokenOut", "type": "uint256"}], "name": "onSwap", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "pause", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "pauseManager", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "value", "type": "uint256"}, {"internalType": "uint256", "name": "deadline", "type": "uint256"}, {"internalType": "uint8", "name": "v", "type": "uint8"}, {"internalType": "bytes32", "name": "r", "type": "bytes32"}, {"internalType": "bytes32", "name": "s", "type": "bytes32"}], "name": "permit", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "queryExit", "outputs": [{"internalType": "uint256", "name": "bptIn", "type": "uint256"}, {"internalType": "uint256[]", "name": "amountsOut", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "queryJoin", "outputs": [{"internalType": "uint256", "name": "bptOut", "type": "uint256"}, {"internalType": "uint256[]", "name": "amountsIn", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "rateProvider0", "outputs": [{"internalType": "contract IRateProvider", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "rateProvider1", "outputs": [{"internalType": "contract IRateProvider", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_capManager", "type": "address"}], "name": "setCapManager", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"components": [{"internalType": "bool", "name": "capEnabled", "type": "bool"}, {"internalType": "uint120", "name": "perAddressCap", "type": "uint120"}, {"internalType": "uint128", "name": "globalCap", "type": "uint128"}], "internalType": "struct ICappedLiquidity.CapParams", "name": "params", "type": "tuple"}], "name": "setCapParams", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bool", "name": "paused", "type": "bool"}], "name": "setPaused", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}], "name": "setSwapFeePercentage", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "symbol", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "totalSupply", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transfer", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transferFrom", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "unpause", "outputs": [], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"1": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-pool-utils/contracts/BalancerPoolToken.sol", "112": "interfaces/ICappedLiquidity.sol", "115": "interfaces/IGyroConfig.sol", "117": "interfaces/ILocallyPausable.sol", "118": "libraries/GyroConfigHelpers.sol", "119": "libraries/GyroConfigKeys.sol", "120": "libraries/GyroErrors.sol", "121": "libraries/GyroFixedPoint.sol", "122": "libraries/GyroPoolMath.sol", "123": "libraries/SignedFixedPoint.sol", "13": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedMath.sol", "14": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol", "15": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol", "16": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/Authentication.sol", "17": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol", "20": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol", "21": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/ISignaturesValidator.sol", "22": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol", "23": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/InputHelpers.sol", "26": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/WordCodec.sol", "27": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/math/FixedPoint.sol", "28": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/math/LogExpMath.sol", "29": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/math/Math.sol", "30": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/misc/IWETH.sol", "33": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/EIP712.sol", "34": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ERC20.sol", "35": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ERC20Permit.sol", "38": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol", "39": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20Permit.sol", "4": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-pool-utils/contracts/BasePoolAuthorization.sol", "43": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/SafeMath.sol", "61": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IAsset.sol", "62": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IAuthorizer.sol", "63": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IBasePool.sol", "64": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IFlashLoanRecipient.sol", "66": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IMinimalSwapInfoPool.sol", "67": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IPoolSwapStructs.sol", "68": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IProtocolFeesCollector.sol", "69": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IVault.sol", "77": "/Users/daniel/.brownie/packages/node_modules/@openzeppelin/contracts/utils/SafeCast.sol", "8": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-pool-utils/contracts/interfaces/IRateProvider.sol", "90": "contracts/CappedLiquidity.sol", "91": "contracts/ExtensibleWeightedPool2Tokens.sol", "93": "contracts/LocallyPausable.sol", "94": "contracts/TemporarilyPausable.sol", "95": "contracts/eclp/GyroECLPMath.sol", "96": "contracts/eclp/GyroECLPPool.sol", "97": "contracts/eclp/GyroECLPPoolErrors.sol"}, "ast": {"absolutePath": "contracts/eclp/GyroECLPPool.sol", "exportedSymbols": {"Authentication": [33076], "BalancerPoolToken": [21861], "BasePool": [23041], "BasePoolAuthorization": [23134], "BaseWeightedPool": [30649], "CappedLiquidity": [6736], "EIP712": [36835], "ERC20": [23679], "ERC20Permit": [32917], "Errors": [24457], "ExtensibleWeightedPool2Tokens": [8945], "FixedPoint": [26535], "GyroConfigHelpers": [19532], "GyroConfigKeys": [19547], "GyroECLPMath": [12133], "GyroECLPPool": [13906], "GyroECLPPoolErrors": [13951], "GyroErrors": [17485], "GyroFixedPoint": [18145], "GyroPoolMath": [18933], "IAsset": [30909], "IAssetManager": [32999], "IAuthentication": [21649], "IAuthorizer": [26193], "IBasePool": [27238], "ICappedLiquidity": [20127], "IERC20": [27174], "IERC20Permit": [36871], "IFlashLoanRecipient": [30928], "IGyroConfig": [19426], "ILocallyPausable": [20193], "IMinimalSwapInfoPool": [23698], "IPoolSwapStructs": [27285], "IProtocolFeesCollector": [30993], "IRateProvider": [25797], "ISignaturesValidator": [30890], "ITemporarilyPausable": [24476], "IVault": [20093], "IWETH": [30905], "InputHelpers": [17123], "LocallyPausable": [9110], "LogCompression": [23201], "LogExpMath": [28583], "Math": [17412], "SafeCast": [24789], "SafeMath": [33154], "SignedFixedPoint": [25789], "TemporarilyPausable": [9268], "WeightedMath": [21626], "WeightedPool2TokensMiscData": [19148], "WeightedPoolUserDataHelpers": [19358], "WordCodec": [29424], "_grequire": [17430, 17449], "_grevert": [17461, 17481], "_require": [24052], "_revert": [24060]}, "id": 13907, "license": "LicenseRef-Gyro-1.0", "nodeType": "SourceUnit", "nodes": [{"id": 12135, "literals": ["solidity", "0.7", ".6"], "nodeType": "PragmaDirective", "src": "178:22:96"}, {"id": 12136, "literals": ["experimental", "ABIEncoderV2"], "nodeType": "PragmaDirective", "src": "201:33:96"}, {"absolutePath": "libraries/GyroFixedPoint.sol", "file": "../../libraries/GyroFixedPoint.sol", "id": 12137, "nodeType": "ImportDirective", "scope": 13907, "sourceUnit": 18146, "src": "312:44:96", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol", "file": "@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol", "id": 12138, "nodeType": "ImportDirective", "scope": 13907, "sourceUnit": 19359, "src": "358:83:96", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol", "file": "@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol", "id": 12139, "nodeType": "ImportDirective", "scope": 13907, "sourceUnit": 19149, "src": "442:83:96", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-pool-utils/contracts/interfaces/IRateProvider.sol", "file": "@balancer-labs/v2-pool-utils/contracts/interfaces/IRateProvider.sol", "id": 12140, "nodeType": "ImportDirective", "scope": 13907, "sourceUnit": 25798, "src": "526:77:96", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/GyroConfigKeys.sol", "file": "../../libraries/GyroConfigKeys.sol", "id": 12141, "nodeType": "ImportDirective", "scope": 13907, "sourceUnit": 19548, "src": "605:44:96", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/GyroConfigHelpers.sol", "file": "../../libraries/GyroConfigHelpers.sol", "id": 12142, "nodeType": "ImportDirective", "scope": 13907, "sourceUnit": 19533, "src": "650:47:96", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/GyroErrors.sol", "file": "../../libraries/GyroErrors.sol", "id": 12143, "nodeType": "ImportDirective", "scope": 13907, "sourceUnit": 17486, "src": "698:40:96", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/IGyroConfig.sol", "file": "../../interfaces/IGyroConfig.sol", "id": 12144, "nodeType": "ImportDirective", "scope": 13907, "sourceUnit": 19427, "src": "739:42:96", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/GyroPoolMath.sol", "file": "../../libraries/GyroPoolMath.sol", "id": 12145, "nodeType": "ImportDirective", "scope": 13907, "sourceUnit": 18934, "src": "782:42:96", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/ExtensibleWeightedPool2Tokens.sol", "file": "../ExtensibleWeightedPool2Tokens.sol", "id": 12146, "nodeType": "ImportDirective", "scope": 13907, "sourceUnit": 8946, "src": "826:46:96", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/eclp/GyroECLPMath.sol", "file": "./GyroECLPMath.sol", "id": 12147, "nodeType": "ImportDirective", "scope": 13907, "sourceUnit": 12134, "src": "873:28:96", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/CappedLiquidity.sol", "file": "../CappedLiquidity.sol", "id": 12148, "nodeType": "ImportDirective", "scope": 13907, "sourceUnit": 6737, "src": "902:32:96", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/LocallyPausable.sol", "file": "../LocallyPausable.sol", "id": 12149, "nodeType": "ImportDirective", "scope": 13907, "sourceUnit": 9111, "src": "935:32:96", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 12150, "name": "ExtensibleWeightedPool2Tokens", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 8945, "src": "994:29:96", "typeDescriptions": {"typeIdentifier": "t_contract$_ExtensibleWeightedPool2Tokens_$8945", "typeString": "contract ExtensibleWeightedPool2Tokens"}}, "id": 12151, "nodeType": "InheritanceSpecifier", "src": "994:29:96"}, {"baseName": {"id": 12152, "name": "CappedLiquidity", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 6736, "src": "1025:15:96", "typeDescriptions": {"typeIdentifier": "t_contract$_CappedLiquidity_$6736", "typeString": "contract CappedLiquidity"}}, "id": 12153, "nodeType": "InheritanceSpecifier", "src": "1025:15:96"}, {"baseName": {"id": 12154, "name": "LocallyPausable", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9110, "src": "1042:15:96", "typeDescriptions": {"typeIdentifier": "t_contract$_LocallyPausable_$9110", "typeString": "contract LocallyPausable"}}, "id": 12155, "nodeType": "InheritanceSpecifier", "src": "1042:15:96"}], "contractDependencies": [6736, 8945, 9110, 9268, 20127, 20193, 21649, 21861, 23134, 23679, 23698, 24476, 27174, 27238, 27285, 32917, 33076, 36835, 36871], "contractKind": "contract", "fullyImplemented": true, "id": 13906, "linearizedBaseContracts": [13906, 9110, 20193, 6736, 20127, 8945, 9268, 24476, 21861, 32917, 36835, 36871, 23679, 27174, 23134, 33076, 21649, 23698, 27238, 27285], "name": "GyroECLPPool", "nodeType": "ContractDefinition", "nodes": [{"id": 12158, "libraryName": {"id": 12156, "name": "GyroFixedPoint", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 18145, "src": "1070:14:96", "typeDescriptions": {"typeIdentifier": "t_contract$_GyroFixedPoint_$18145", "typeString": "library GyroFixedPoint"}}, "nodeType": "UsingForDirective", "src": "1064:33:96", "typeName": {"id": 12157, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1089:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"id": 12161, "libraryName": {"id": 12159, "name": "WeightedPoolUserDataHelpers", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 19358, "src": "1108:27:96", "typeDescriptions": {"typeIdentifier": "t_contract$_WeightedPoolUserDataHelpers_$19358", "typeString": "library WeightedPoolUserDataHelpers"}}, "nodeType": "UsingForDirective", "src": "1102:44:96", "typeName": {"id": 12160, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "1140:5:96", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}}, {"id": 12164, "libraryName": {"id": 12162, "name": "WeightedPool2TokensMiscData", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 19148, "src": "1157:27:96", "typeDescriptions": {"typeIdentifier": "t_contract$_WeightedPool2TokensMiscData_$19148", "typeString": "library WeightedPool2TokensMiscData"}}, "nodeType": "UsingForDirective", "src": "1151:46:96", "typeName": {"id": 12163, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1189:7:96", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}}, {"id": 12167, "libraryName": {"id": 12165, "name": "SafeCast", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 24789, "src": "1208:8:96", "typeDescriptions": {"typeIdentifier": "t_contract$_SafeCast_$24789", "typeString": "library SafeCast"}}, "nodeType": "UsingForDirective", "src": "1202:26:96", "typeName": {"id": 12166, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1221:6:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}}, {"id": 12170, "libraryName": {"id": 12168, "name": "SafeCast", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 24789, "src": "1239:8:96", "typeDescriptions": {"typeIdentifier": "t_contract$_SafeCast_$24789", "typeString": "library SafeCast"}}, "nodeType": "UsingForDirective", "src": "1233:27:96", "typeName": {"id": 12169, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1252:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"id": 12173, "libraryName": {"id": 12171, "name": "GyroConfigHelpers", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 19532, "src": "1271:17:96", "typeDescriptions": {"typeIdentifier": "t_contract$_GyroConfigHelpers_$19532", "typeString": "library GyroConfigHelpers"}}, "nodeType": "UsingForDirective", "src": "1265:40:96", "typeName": {"id": 12172, "name": "IGyroConfig", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 19426, "src": "1293:11:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$19426", "typeString": "contract IGyroConfig"}}}, {"constant": true, "id": 12176, "mutability": "constant", "name": "_MINIMUM_BPT", "nodeType": "VariableDeclaration", "scope": 13906, "src": "1311:43:96", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12174, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1311:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "316536", "id": 12175, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1351:3:96", "typeDescriptions": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}, "value": "1e6"}, "visibility": "private"}, {"constant": true, "id": 12179, "mutability": "constant", "name": "POOL_TYPE", "nodeType": "VariableDeclaration", "scope": 13906, "src": "1360:43:96", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 12177, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1360:7:96", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "value": {"hexValue": "45434c50", "id": 12178, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1397:6:96", "typeDescriptions": {"typeIdentifier": "t_stringliteral_8dbd83a43a5010f737e1030b874ea8c2e3ce89e5c2c6c0d68716e7b6c28aef4d", "typeString": "literal_string \"ECLP\""}, "value": "ECLP"}, "visibility": "private"}, {"constant": false, "documentation": {"id": 12180, "nodeType": "StructuredDocumentation", "src": "1410:36:96", "text": "@dev Parameters of the ECLP pool"}, "id": 12182, "mutability": "immutable", "name": "_paramsAlpha", "nodeType": "VariableDeclaration", "scope": 13906, "src": "1451:38:96", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12181, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1451:6:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 12184, "mutability": "immutable", "name": "_paramsBeta", "nodeType": "VariableDeclaration", "scope": 13906, "src": "1495:37:96", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12183, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1495:6:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 12186, "mutability": "immutable", "name": "_paramsC", "nodeType": "VariableDeclaration", "scope": 13906, "src": "1538:34:96", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12185, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1538:6:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 12188, "mutability": "immutable", "name": "_paramsS", "nodeType": "VariableDeclaration", "scope": 13906, "src": "1578:34:96", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12187, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1578:6:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 12190, "mutability": "immutable", "name": "_paramsLambda", "nodeType": "VariableDeclaration", "scope": 13906, "src": "1618:39:96", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12189, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1618:6:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 12192, "mutability": "immutable", "name": "_tauAlphaX", "nodeType": "VariableDeclaration", "scope": 13906, "src": "1663:36:96", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12191, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1663:6:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 12194, "mutability": "immutable", "name": "_tauAlphaY", "nodeType": "VariableDeclaration", "scope": 13906, "src": "1705:36:96", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12193, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1705:6:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 12196, "mutability": "immutable", "name": "_tauBetaX", "nodeType": "VariableDeclaration", "scope": 13906, "src": "1747:35:96", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12195, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1747:6:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 12198, "mutability": "immutable", "name": "_tauBetaY", "nodeType": "VariableDeclaration", "scope": 13906, "src": "1788:35:96", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12197, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1788:6:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 12200, "mutability": "immutable", "name": "_u", "nodeType": "VariableDeclaration", "scope": 13906, "src": "1829:28:96", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12199, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1829:6:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 12202, "mutability": "immutable", "name": "_v", "nodeType": "VariableDeclaration", "scope": 13906, "src": "1863:28:96", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12201, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1863:6:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 12204, "mutability": "immutable", "name": "_w", "nodeType": "VariableDeclaration", "scope": 13906, "src": "1897:28:96", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12203, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1897:6:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 12206, "mutability": "immutable", "name": "_z", "nodeType": "VariableDeclaration", "scope": 13906, "src": "1931:28:96", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12205, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1931:6:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 12208, "mutability": "immutable", "name": "_dSq", "nodeType": "VariableDeclaration", "scope": 13906, "src": "1965:30:96", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12207, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1965:6:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "functionSelector": "44bbdb55", "id": 12210, "mutability": "mutable", "name": "gyroConfig", "nodeType": "VariableDeclaration", "scope": 13906, "src": "2002:29:96", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$19426", "typeString": "contract IGyroConfig"}, "typeName": {"id": 12209, "name": "IGyroConfig", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 19426, "src": "2002:11:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$19426", "typeString": "contract IGyroConfig"}}, "visibility": "public"}, {"constant": false, "documentation": {"id": 12211, "nodeType": "StructuredDocumentation", "src": "2038:25:96", "text": "@dev for rate scaling"}, "functionSelector": "828a7c34", "id": 12213, "mutability": "immutable", "name": "rateProvider0", "nodeType": "VariableDeclaration", "scope": 13906, "src": "2068:44:96", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$25797", "typeString": "contract IRateProvider"}, "typeName": {"id": 12212, "name": "IRateProvider", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 25797, "src": "2068:13:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$25797", "typeString": "contract IRateProvider"}}, "visibility": "public"}, {"constant": false, "functionSelector": "62ced092", "id": 12215, "mutability": "immutable", "name": "rateProvider1", "nodeType": "VariableDeclaration", "scope": 13906, "src": "2118:44:96", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$25797", "typeString": "contract IRateProvider"}, "typeName": {"id": 12214, "name": "IRateProvider", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 25797, "src": "2118:13:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$25797", "typeString": "contract IRateProvider"}}, "visibility": "public"}, {"canonicalName": "GyroECLPPool.GyroParams", "id": 12232, "members": [{"constant": false, "id": 12217, "mutability": "mutable", "name": "baseParams", "nodeType": "VariableDeclaration", "scope": 12232, "src": "2197:24:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$6852_storage_ptr", "typeString": "struct ExtensibleWeightedPool2Tokens.NewPoolParams"}, "typeName": {"id": 12216, "name": "NewPoolParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 6852, "src": "2197:13:96", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$6852_storage_ptr", "typeString": "struct ExtensibleWeightedPool2Tokens.NewPoolParams"}}, "visibility": "internal"}, {"constant": false, "id": 12219, "mutability": "mutable", "name": "eclpParams", "nodeType": "VariableDeclaration", "scope": 12232, "src": "2231:30:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_storage_ptr", "typeString": "struct GyroECLPMath.Params"}, "typeName": {"id": 12218, "name": "GyroECLPMath.Params", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9333, "src": "2231:19:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_storage_ptr", "typeString": "struct GyroECLPMath.Params"}}, "visibility": "internal"}, {"constant": false, "id": 12221, "mutability": "mutable", "name": "derivedEclpParams", "nodeType": "VariableDeclaration", "scope": 12232, "src": "2271:44:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_storage_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}, "typeName": {"id": 12220, "name": "GyroECLPMath.DerivedParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9348, "src": "2271:26:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_storage_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}}, "visibility": "internal"}, {"constant": false, "id": 12223, "mutability": "mutable", "name": "rateProvider0", "nodeType": "VariableDeclaration", "scope": 12232, "src": "2325:21:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 12222, "name": "address", "nodeType": "ElementaryTypeName", "src": "2325:7:96", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 12225, "mutability": "mutable", "name": "rateProvider1", "nodeType": "VariableDeclaration", "scope": 12232, "src": "2356:21:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 12224, "name": "address", "nodeType": "ElementaryTypeName", "src": "2356:7:96", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 12227, "mutability": "mutable", "name": "capManager", "nodeType": "VariableDeclaration", "scope": 12232, "src": "2387:18:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 12226, "name": "address", "nodeType": "ElementaryTypeName", "src": "2387:7:96", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 12229, "mutability": "mutable", "name": "capParams", "nodeType": "VariableDeclaration", "scope": 12232, "src": "2415:19:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_CapParams_$20111_storage_ptr", "typeString": "struct ICappedLiquidity.CapParams"}, "typeName": {"id": 12228, "name": "CapParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 20111, "src": "2415:9:96", "typeDescriptions": {"typeIdentifier": "t_struct$_CapParams_$20111_storage_ptr", "typeString": "struct ICappedLiquidity.CapParams"}}, "visibility": "internal"}, {"constant": false, "id": 12231, "mutability": "mutable", "name": "pauseManager", "nodeType": "VariableDeclaration", "scope": 12232, "src": "2444:20:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 12230, "name": "address", "nodeType": "ElementaryTypeName", "src": "2444:7:96", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "name": "GyroParams", "nodeType": "StructDefinition", "scope": 13906, "src": "2169:302:96", "visibility": "public"}, {"anonymous": false, "id": 12236, "name": "ECLPParamsValidated", "nodeType": "EventDefinition", "parameters": {"id": 12235, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12234, "indexed": false, "mutability": "mutable", "name": "paramsValidated", "nodeType": "VariableDeclaration", "scope": 12236, "src": "2503:20:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 12233, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2503:4:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "2502:22:96"}, "src": "2477:48:96"}, {"anonymous": false, "id": 12240, "name": "ECLPDerivedParamsValidated", "nodeType": "EventDefinition", "parameters": {"id": 12239, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12238, "indexed": false, "mutability": "mutable", "name": "derivedParamsValidated", "nodeType": "VariableDeclaration", "scope": 12240, "src": "2563:27:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 12237, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2563:4:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "2562:29:96"}, "src": "2530:62:96"}, {"anonymous": false, "id": 12244, "name": "InvariantAterInitializeJoin", "nodeType": "EventDefinition", "parameters": {"id": 12243, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12242, "indexed": false, "mutability": "mutable", "name": "invariantAfterJoin", "nodeType": "VariableDeclaration", "scope": 12244, "src": "2632:26:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12241, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2632:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2631:28:96"}, "src": "2598:62:96"}, {"anonymous": false, "id": 12250, "name": "InvariantOldAndNew", "nodeType": "EventDefinition", "parameters": {"id": 12249, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12246, "indexed": false, "mutability": "mutable", "name": "oldInvariant", "nodeType": "VariableDeclaration", "scope": 12250, "src": "2690:20:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12245, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2690:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 12248, "indexed": false, "mutability": "mutable", "name": "newInvariant", "nodeType": "VariableDeclaration", "scope": 12250, "src": "2712:20:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12247, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2712:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2689:44:96"}, "src": "2665:69:96"}, {"anonymous": false, "id": 12259, "name": "SwapParams", "nodeType": "EventDefinition", "parameters": {"id": 12258, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12253, "indexed": false, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 12259, "src": "2757:18:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 12251, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2757:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12252, "nodeType": "ArrayTypeName", "src": "2757:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 12255, "indexed": false, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 12259, "src": "2777:30:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9353_memory_ptr", "typeString": "struct GyroECLPMath.Vector2"}, "typeName": {"id": 12254, "name": "GyroECLPMath.Vector2", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9353, "src": "2777:20:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9353_storage_ptr", "typeString": "struct GyroECLPMath.Vector2"}}, "visibility": "internal"}, {"constant": false, "id": 12257, "indexed": false, "mutability": "mutable", "name": "amount", "nodeType": "VariableDeclaration", "scope": 12259, "src": "2809:14:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12256, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2809:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2756:68:96"}, "src": "2740:85:96"}, {"body": {"id": 12403, "nodeType": "Block", "src": "3059:1265:96", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 12286, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 12281, "name": "configAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12263, "src": "3079:13:96", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "307830", "id": 12284, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3104:3:96", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0x0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 12283, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3096:7:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 12282, "name": "address", "nodeType": "ElementaryTypeName", "src": "3096:7:96", "typeDescriptions": {}}}, "id": 12285, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3096:12:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "3079:29:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 12287, "name": "GyroECLPPoolErrors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13951, "src": "3110:18:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPPoolErrors_$13951_$", "typeString": "type(library GyroECLPPoolErrors)"}}, "id": 12288, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ADDRESS_IS_ZERO_ADDRESS", "nodeType": "MemberAccess", "referencedDeclaration": 13911, "src": "3110:42:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 12280, "name": "_grequire", "nodeType": "Identifier", "overloadedDeclarations": [17430, 17449], "referencedDeclaration": 17430, "src": "3069:9:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 12289, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3069:84:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12290, "nodeType": "ExpressionStatement", "src": "3069:84:96"}, {"expression": {"arguments": [{"expression": {"id": 12294, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12261, "src": "3192:6:96", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12232_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12295, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "eclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 12219, "src": "3192:17:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}], "expression": {"id": 12291, "name": "GyroECLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12133, "src": "3164:12:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPMath_$12133_$", "typeString": "type(library GyroECLPMath)"}}, "id": 12293, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "validateParams", "nodeType": "MemberAccess", "referencedDeclaration": 9441, "src": "3164:27:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_Params_$9333_memory_ptr_$returns$__$", "typeString": "function (struct GyroECLPMath.Params memory) pure"}}, "id": 12296, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3164:46:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12297, "nodeType": "ExpressionStatement", "src": "3164:46:96"}, {"eventCall": {"arguments": [{"hexValue": "74727565", "id": 12299, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3245:4:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 12298, "name": "ECLPParamsValidated", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12236, "src": "3225:19:96", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$", "typeString": "function (bool)"}}, "id": 12300, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3225:25:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12301, "nodeType": "EmitStatement", "src": "3220:30:96"}, {"expression": {"arguments": [{"expression": {"id": 12305, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12261, "src": "3302:6:96", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12232_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12306, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "eclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 12219, "src": "3302:17:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"expression": {"id": 12307, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12261, "src": "3321:6:96", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12232_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12308, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "derivedEclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 12221, "src": "3321:24:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}], "expression": {"id": 12302, "name": "GyroECLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12133, "src": "3261:12:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPMath_$12133_$", "typeString": "type(library GyroECLPMath)"}}, "id": 12304, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "validateDerivedParamsLimits", "nodeType": "MemberAccess", "referencedDeclaration": 9577, "src": "3261:40:96", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_struct$_Params_$9333_memory_ptr_$_t_struct$_DerivedParams_$9348_memory_ptr_$returns$__$", "typeString": "function (struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory) pure"}}, "id": 12309, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3261:85:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12310, "nodeType": "ExpressionStatement", "src": "3261:85:96"}, {"eventCall": {"arguments": [{"hexValue": "74727565", "id": 12312, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3388:4:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 12311, "name": "ECLPDerivedParamsValidated", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12240, "src": "3361:26:96", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$", "typeString": "function (bool)"}}, "id": 12313, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3361:32:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12314, "nodeType": "EmitStatement", "src": "3356:37:96"}, {"expression": {"id": 12337, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 12315, "name": "_paramsAlpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12182, "src": "3405:12:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12316, "name": "_paramsBeta", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12184, "src": "3419:11:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12317, "name": "_paramsC", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12186, "src": "3432:8:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12318, "name": "_paramsS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12188, "src": "3442:8:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12319, "name": "_paramsLambda", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12190, "src": "3452:13:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 12320, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "3404:62:96", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256,int256,int256,int256)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"components": [{"expression": {"expression": {"id": 12321, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12261, "src": "3483:6:96", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12232_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12322, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "eclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 12219, "src": "3483:17:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, "id": 12323, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "alpha", "nodeType": "MemberAccess", "referencedDeclaration": 9324, "src": "3483:23:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"id": 12324, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12261, "src": "3520:6:96", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12232_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12325, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "eclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 12219, "src": "3520:17:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, "id": 12326, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "beta", "nodeType": "MemberAccess", "referencedDeclaration": 9326, "src": "3520:22:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"id": 12327, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12261, "src": "3556:6:96", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12232_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12328, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "eclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 12219, "src": "3556:17:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, "id": 12329, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "c", "nodeType": "MemberAccess", "referencedDeclaration": 9328, "src": "3556:19:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"id": 12330, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12261, "src": "3589:6:96", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12232_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12331, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "eclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 12219, "src": "3589:17:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, "id": 12332, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "s", "nodeType": "MemberAccess", "referencedDeclaration": 9330, "src": "3589:19:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"id": 12333, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12261, "src": "3622:6:96", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12232_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12334, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "eclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 12219, "src": "3622:17:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, "id": 12335, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "lambda", "nodeType": "MemberAccess", "referencedDeclaration": 9332, "src": "3622:24:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 12336, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "3469:187:96", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256,int256,int256,int256)"}}, "src": "3404:252:96", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12338, "nodeType": "ExpressionStatement", "src": "3404:252:96"}, {"expression": {"id": 12381, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 12339, "name": "_tauAlphaX", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12192, "src": "3668:10:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12340, "name": "_tauAlphaY", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12194, "src": "3680:10:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12341, "name": "_tauBetaX", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12196, "src": "3692:9:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12342, "name": "_tauBetaY", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12198, "src": "3703:9:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12343, "name": "_u", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12200, "src": "3714:2:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12344, "name": "_v", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12202, "src": "3718:2:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12345, "name": "_w", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12204, "src": "3722:2:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12346, "name": "_z", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12206, "src": "3726:2:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12347, "name": "_dSq", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12208, "src": "3730:4:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 12348, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "3667:68:96", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256,int256,int256,int256,int256,int256,int256,int256)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"components": [{"expression": {"expression": {"expression": {"id": 12349, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12261, "src": "3752:6:96", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12232_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12350, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "derivedEclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 12221, "src": "3752:24:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 12351, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tauAlpha", "nodeType": "MemberAccess", "referencedDeclaration": 9335, "src": "3752:33:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9353_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, "id": 12352, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "x", "nodeType": "MemberAccess", "referencedDeclaration": 9350, "src": "3752:35:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"expression": {"id": 12353, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12261, "src": "3801:6:96", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12232_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12354, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "derivedEclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 12221, "src": "3801:24:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 12355, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tauAlpha", "nodeType": "MemberAccess", "referencedDeclaration": 9335, "src": "3801:33:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9353_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, "id": 12356, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "y", "nodeType": "MemberAccess", "referencedDeclaration": 9352, "src": "3801:35:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"expression": {"id": 12357, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12261, "src": "3850:6:96", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12232_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12358, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "derivedEclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 12221, "src": "3850:24:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 12359, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tauBeta", "nodeType": "MemberAccess", "referencedDeclaration": 9337, "src": "3850:32:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9353_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, "id": 12360, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "x", "nodeType": "MemberAccess", "referencedDeclaration": 9350, "src": "3850:34:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"expression": {"id": 12361, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12261, "src": "3898:6:96", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12232_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12362, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "derivedEclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 12221, "src": "3898:24:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 12363, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tauBeta", "nodeType": "MemberAccess", "referencedDeclaration": 9337, "src": "3898:32:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9353_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, "id": 12364, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "y", "nodeType": "MemberAccess", "referencedDeclaration": 9352, "src": "3898:34:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"id": 12365, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12261, "src": "3946:6:96", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12232_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12366, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "derivedEclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 12221, "src": "3946:24:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 12367, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "u", "nodeType": "MemberAccess", "referencedDeclaration": 9339, "src": "3946:26:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"id": 12368, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12261, "src": "3986:6:96", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12232_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12369, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "derivedEclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 12221, "src": "3986:24:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 12370, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "v", "nodeType": "MemberAccess", "referencedDeclaration": 9341, "src": "3986:26:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"id": 12371, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12261, "src": "4026:6:96", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12232_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12372, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "derivedEclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 12221, "src": "4026:24:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 12373, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "w", "nodeType": "MemberAccess", "referencedDeclaration": 9343, "src": "4026:26:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"id": 12374, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12261, "src": "4066:6:96", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12232_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12375, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "derivedEclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 12221, "src": "4066:24:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 12376, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "z", "nodeType": "MemberAccess", "referencedDeclaration": 9345, "src": "4066:26:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"id": 12377, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12261, "src": "4106:6:96", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12232_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12378, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "derivedEclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 12221, "src": "4106:24:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 12379, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "dSq", "nodeType": "MemberAccess", "referencedDeclaration": 9347, "src": "4106:28:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 12380, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "3738:406:96", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256,int256,int256,int256,int256,int256,int256,int256)"}}, "src": "3667:477:96", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12382, "nodeType": "ExpressionStatement", "src": "3667:477:96"}, {"expression": {"id": 12387, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 12383, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12210, "src": "4155:10:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$19426", "typeString": "contract IGyroConfig"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 12385, "name": "configAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12263, "src": "4180:13:96", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 12384, "name": "IGyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19426, "src": "4168:11:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IGyroConfig_$19426_$", "typeString": "type(contract IGyroConfig)"}}, "id": 12386, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4168:26:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$19426", "typeString": "contract IGyroConfig"}}, "src": "4155:39:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$19426", "typeString": "contract IGyroConfig"}}, "id": 12388, "nodeType": "ExpressionStatement", "src": "4155:39:96"}, {"expression": {"id": 12394, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 12389, "name": "rateProvider0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12213, "src": "4205:13:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$25797", "typeString": "contract IRateProvider"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 12391, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12261, "src": "4235:6:96", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12232_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12392, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "rateProvider0", "nodeType": "MemberAccess", "referencedDeclaration": 12223, "src": "4235:20:96", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 12390, "name": "IRateProvider", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 25797, "src": "4221:13:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IRateProvider_$25797_$", "typeString": "type(contract IRateProvider)"}}, "id": 12393, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4221:35:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$25797", "typeString": "contract IRateProvider"}}, "src": "4205:51:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$25797", "typeString": "contract IRateProvider"}}, "id": 12395, "nodeType": "ExpressionStatement", "src": "4205:51:96"}, {"expression": {"id": 12401, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 12396, "name": "rateProvider1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12215, "src": "4266:13:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$25797", "typeString": "contract IRateProvider"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 12398, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12261, "src": "4296:6:96", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12232_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12399, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "rateProvider1", "nodeType": "MemberAccess", "referencedDeclaration": 12225, "src": "4296:20:96", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 12397, "name": "IRateProvider", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 25797, "src": "4282:13:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IRateProvider_$25797_$", "typeString": "type(contract IRateProvider)"}}, "id": 12400, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4282:35:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$25797", "typeString": "contract IRateProvider"}}, "src": "4266:51:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$25797", "typeString": "contract IRateProvider"}}, "id": 12402, "nodeType": "ExpressionStatement", "src": "4266:51:96"}]}, "id": 12404, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"expression": {"id": 12266, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12261, "src": "2930:6:96", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12232_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12267, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "baseParams", "nodeType": "MemberAccess", "referencedDeclaration": 12217, "src": "2930:17:96", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$6852_memory_ptr", "typeString": "struct ExtensibleWeightedPool2Tokens.NewPoolParams memory"}}], "id": 12268, "modifierName": {"id": 12265, "name": "ExtensibleWeightedPool2Tokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8945, "src": "2900:29:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ExtensibleWeightedPool2Tokens_$8945_$", "typeString": "type(contract ExtensibleWeightedPool2Tokens)"}}, "nodeType": "ModifierInvocation", "src": "2900:48:96"}, {"arguments": [{"expression": {"id": 12270, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12261, "src": "2973:6:96", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12232_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12271, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "capManager", "nodeType": "MemberAccess", "referencedDeclaration": 12227, "src": "2973:17:96", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 12272, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12261, "src": "2992:6:96", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12232_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12273, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "capParams", "nodeType": "MemberAccess", "referencedDeclaration": 12229, "src": "2992:16:96", "typeDescriptions": {"typeIdentifier": "t_struct$_CapParams_$20111_memory_ptr", "typeString": "struct ICappedLiquidity.CapParams memory"}}], "id": 12274, "modifierName": {"id": 12269, "name": "CappedLiquidity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6736, "src": "2957:15:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_CappedLiquidity_$6736_$", "typeString": "type(contract CappedLiquidity)"}}, "nodeType": "ModifierInvocation", "src": "2957:52:96"}, {"arguments": [{"expression": {"id": 12276, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12261, "src": "3034:6:96", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12232_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12277, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "pauseManager", "nodeType": "MemberAccess", "referencedDeclaration": 12231, "src": "3034:19:96", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 12278, "modifierName": {"id": 12275, "name": "LocallyPausable", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9110, "src": "3018:15:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_LocallyPausable_$9110_$", "typeString": "type(contract LocallyPausable)"}}, "nodeType": "ModifierInvocation", "src": "3018:36:96"}], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 12264, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12261, "mutability": "mutable", "name": "params", "nodeType": "VariableDeclaration", "scope": 12404, "src": "2843:24:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12232_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams"}, "typeName": {"id": 12260, "name": "GyroParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 12232, "src": "2843:10:96", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12232_storage_ptr", "typeString": "struct GyroECLPPool.GyroParams"}}, "visibility": "internal"}, {"constant": false, "id": 12263, "mutability": "mutable", "name": "configAddress", "nodeType": "VariableDeclaration", "scope": 12404, "src": "2869:21:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 12262, "name": "address", "nodeType": "ElementaryTypeName", "src": "2869:7:96", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "2842:49:96"}, "returnParameters": {"id": 12279, "nodeType": "ParameterList", "parameters": [], "src": "3059:0:96"}, "scope": 13906, "src": "2831:1493:96", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 12474, "nodeType": "Block", "src": "4529:319:96", "statements": [{"expression": {"id": 12430, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"expression": {"id": 12412, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12408, "src": "4540:6:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, "id": 12414, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "alpha", "nodeType": "MemberAccess", "referencedDeclaration": 9324, "src": "4540:12:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"id": 12415, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12408, "src": "4554:6:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, "id": 12416, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "beta", "nodeType": "MemberAccess", "referencedDeclaration": 9326, "src": "4554:11:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"id": 12417, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12408, "src": "4567:6:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, "id": 12418, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "c", "nodeType": "MemberAccess", "referencedDeclaration": 9328, "src": "4567:8:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"id": 12419, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12408, "src": "4577:6:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, "id": 12420, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "s", "nodeType": "MemberAccess", "referencedDeclaration": 9330, "src": "4577:8:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"id": 12421, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12408, "src": "4587:6:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, "id": 12422, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "lambda", "nodeType": "MemberAccess", "referencedDeclaration": 9332, "src": "4587:13:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 12423, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "4539:62:96", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256,int256,int256,int256)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"components": [{"id": 12424, "name": "_paramsAlpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12182, "src": "4605:12:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12425, "name": "_paramsBeta", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12184, "src": "4619:11:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12426, "name": "_paramsC", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12186, "src": "4632:8:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12427, "name": "_paramsS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12188, "src": "4642:8:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12428, "name": "_paramsLambda", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12190, "src": "4652:13:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 12429, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4604:62:96", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256,int256,int256,int256)"}}, "src": "4539:127:96", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12431, "nodeType": "ExpressionStatement", "src": "4539:127:96"}, {"expression": {"id": 12452, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"expression": {"expression": {"id": 12432, "name": "d", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12410, "src": "4677:1:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 12435, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tauAlpha", "nodeType": "MemberAccess", "referencedDeclaration": 9335, "src": "4677:10:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9353_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, "id": 12436, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "x", "nodeType": "MemberAccess", "referencedDeclaration": 9350, "src": "4677:12:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"id": 12437, "name": "d", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12410, "src": "4691:1:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 12438, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tauAlpha", "nodeType": "MemberAccess", "referencedDeclaration": 9335, "src": "4691:10:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9353_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, "id": 12439, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "y", "nodeType": "MemberAccess", "referencedDeclaration": 9352, "src": "4691:12:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"id": 12440, "name": "d", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12410, "src": "4705:1:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 12441, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tauBeta", "nodeType": "MemberAccess", "referencedDeclaration": 9337, "src": "4705:9:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9353_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, "id": 12442, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "x", "nodeType": "MemberAccess", "referencedDeclaration": 9350, "src": "4705:11:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"id": 12443, "name": "d", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12410, "src": "4718:1:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 12444, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tauBeta", "nodeType": "MemberAccess", "referencedDeclaration": 9337, "src": "4718:9:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9353_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, "id": 12445, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "y", "nodeType": "MemberAccess", "referencedDeclaration": 9352, "src": "4718:11:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 12446, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "4676:54:96", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256,int256,int256)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"components": [{"id": 12447, "name": "_tauAlphaX", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12192, "src": "4734:10:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12448, "name": "_tauAlphaY", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12194, "src": "4746:10:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12449, "name": "_tauBetaX", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12196, "src": "4758:9:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12450, "name": "_tauBetaY", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12198, "src": "4769:9:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 12451, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4733:46:96", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256,int256,int256)"}}, "src": "4676:103:96", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12453, "nodeType": "ExpressionStatement", "src": "4676:103:96"}, {"expression": {"id": 12472, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"expression": {"id": 12454, "name": "d", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12410, "src": "4790:1:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 12456, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "u", "nodeType": "MemberAccess", "referencedDeclaration": 9339, "src": "4790:3:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"id": 12457, "name": "d", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12410, "src": "4795:1:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 12458, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "v", "nodeType": "MemberAccess", "referencedDeclaration": 9341, "src": "4795:3:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"id": 12459, "name": "d", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12410, "src": "4800:1:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 12460, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "w", "nodeType": "MemberAccess", "referencedDeclaration": 9343, "src": "4800:3:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"id": 12461, "name": "d", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12410, "src": "4805:1:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 12462, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "z", "nodeType": "MemberAccess", "referencedDeclaration": 9345, "src": "4805:3:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"id": 12463, "name": "d", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12410, "src": "4810:1:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 12464, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "dSq", "nodeType": "MemberAccess", "referencedDeclaration": 9347, "src": "4810:5:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 12465, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "4789:27:96", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256,int256,int256,int256)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"components": [{"id": 12466, "name": "_u", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12200, "src": "4820:2:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12467, "name": "_v", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12202, "src": "4824:2:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12468, "name": "_w", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12204, "src": "4828:2:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12469, "name": "_z", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12206, "src": "4832:2:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12470, "name": "_dSq", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12208, "src": "4836:4:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 12471, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4819:22:96", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256,int256,int256,int256)"}}, "src": "4789:52:96", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12473, "nodeType": "ExpressionStatement", "src": "4789:52:96"}]}, "documentation": {"id": 12405, "nodeType": "StructuredDocumentation", "src": "4330:66:96", "text": "@dev reconstructs ECLP params structs from immutable arrays "}, "id": 12475, "implemented": true, "kind": "function", "modifiers": [], "name": "reconstructECLPParams", "nodeType": "FunctionDefinition", "parameters": {"id": 12406, "nodeType": "ParameterList", "parameters": [], "src": "4431:2:96"}, "returnParameters": {"id": 12411, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12408, "mutability": "mutable", "name": "params", "nodeType": "VariableDeclaration", "scope": 12475, "src": "4457:33:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params"}, "typeName": {"id": 12407, "name": "GyroECLPMath.Params", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9333, "src": "4457:19:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_storage_ptr", "typeString": "struct GyroECLPMath.Params"}}, "visibility": "internal"}, {"constant": false, "id": 12410, "mutability": "mutable", "name": "d", "nodeType": "VariableDeclaration", "scope": 12475, "src": "4492:35:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}, "typeName": {"id": 12409, "name": "GyroECLPMath.DerivedParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9348, "src": "4492:26:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_storage_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}}, "visibility": "internal"}], "src": "4456:72:96"}, "scope": 13906, "src": "4401:447:96", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 12485, "nodeType": "Block", "src": "4974:47:96", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 12482, "name": "reconstructECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12475, "src": "4991:21:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_Params_$9333_memory_ptr_$_t_struct$_DerivedParams_$9348_memory_ptr_$", "typeString": "function () view returns (struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "id": 12483, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4991:23:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_struct$_Params_$9333_memory_ptr_$_t_struct$_DerivedParams_$9348_memory_ptr_$", "typeString": "tuple(struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "functionReturnParameters": 12481, "id": 12484, "nodeType": "Return", "src": "4984:30:96"}]}, "functionSelector": "7be219a2", "id": 12486, "implemented": true, "kind": "function", "modifiers": [], "name": "getECLPParams", "nodeType": "FunctionDefinition", "parameters": {"id": 12476, "nodeType": "ParameterList", "parameters": [], "src": "4876:2:96"}, "returnParameters": {"id": 12481, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12478, "mutability": "mutable", "name": "params", "nodeType": "VariableDeclaration", "scope": 12486, "src": "4902:33:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params"}, "typeName": {"id": 12477, "name": "GyroECLPMath.Params", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9333, "src": "4902:19:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_storage_ptr", "typeString": "struct GyroECLPMath.Params"}}, "visibility": "internal"}, {"constant": false, "id": 12480, "mutability": "mutable", "name": "d", "nodeType": "VariableDeclaration", "scope": 12486, "src": "4937:35:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}, "typeName": {"id": 12479, "name": "GyroECLPMath.DerivedParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9348, "src": "4937:26:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_storage_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}}, "visibility": "internal"}], "src": "4901:72:96"}, "scope": 13906, "src": "4854:167:96", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 12521, "nodeType": "Block", "src": "5507:479:96", "statements": [{"assignments": [12497, 12499, null, null], "declarations": [{"constant": false, "id": 12497, "mutability": "mutable", "name": "cash", "nodeType": "VariableDeclaration", "scope": 12521, "src": "5735:12:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12496, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5735:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 12499, "mutability": "mutable", "name": "managed", "nodeType": "VariableDeclaration", "scope": 12521, "src": "5749:15:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12498, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5749:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, null, null], "id": 12507, "initialValue": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 12503, "name": "getPoolId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6982, "src": "5800:9:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$", "typeString": "function () view returns (bytes32)"}}, "id": 12504, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5800:11:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 12505, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12489, "src": "5813:5:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$27174", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_contract$_IERC20_$27174", "typeString": "contract IERC20"}], "expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 12500, "name": "getVault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21690, "src": "5772:8:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IVault_$20093_$", "typeString": "function () view returns (contract IVault)"}}, "id": 12501, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5772:10:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IVault_$20093", "typeString": "contract IVault"}}, "id": 12502, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getPoolTokenInfo", "nodeType": "MemberAccess", "referencedDeclaration": 19835, "src": "5772:27:96", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$_t_contract$_IERC20_$27174_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$", "typeString": "function (bytes32,contract IERC20) view external returns (uint256,uint256,uint256,address)"}}, "id": 12506, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5772:47:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$", "typeString": "tuple(uint256,uint256,uint256,address)"}}, "nodeType": "VariableDeclarationStatement", "src": "5734:85:96"}, {"expression": {"id": 12512, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 12508, "name": "balance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12494, "src": "5829:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 12511, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 12509, "name": "cash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12497, "src": "5839:4:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 12510, "name": "managed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12499, "src": "5846:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5839:14:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5829:24:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12513, "nodeType": "ExpressionStatement", "src": "5829:24:96"}, {"expression": {"id": 12519, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 12514, "name": "balance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12494, "src": "5939:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 12517, "name": "scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12491, "src": "5965:13:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 12515, "name": "balance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12494, "src": "5949:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12516, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mulDown", "nodeType": "MemberAccess", "referencedDeclaration": 17603, "src": "5949:15:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 12518, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5949:30:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5939:40:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12520, "nodeType": "ExpressionStatement", "src": "5939:40:96"}]}, "documentation": {"id": 12487, "nodeType": "StructuredDocumentation", "src": "5027:366:96", "text": "@dev Reads the balance of a token from the balancer vault and returns the scaled amount. Smaller storage access\n compared to getVault().getPoolTokens().\n Copied from the 3CLP *except* that for the 2CLP, the scalingFactor is interpreted as a regular integer, not a\n FixedPoint number. This is an inconsistency between the base contracts."}, "id": 12522, "implemented": true, "kind": "function", "modifiers": [], "name": "_getScaledTokenBalance", "nodeType": "FunctionDefinition", "parameters": {"id": 12492, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12489, "mutability": "mutable", "name": "token", "nodeType": "VariableDeclaration", "scope": 12522, "src": "5430:12:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$27174", "typeString": "contract IERC20"}, "typeName": {"id": 12488, "name": "IERC20", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 27174, "src": "5430:6:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$27174", "typeString": "contract IERC20"}}, "visibility": "internal"}, {"constant": false, "id": 12491, "mutability": "mutable", "name": "scalingFactor", "nodeType": "VariableDeclaration", "scope": 12522, "src": "5444:21:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12490, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5444:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5429:37:96"}, "returnParameters": {"id": 12495, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12494, "mutability": "mutable", "name": "balance", "nodeType": "VariableDeclaration", "scope": 12522, "src": "5490:15:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12493, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5490:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5489:17:96"}, "scope": 13906, "src": "5398:588:96", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 12561, "nodeType": "Block", "src": "6239:446:96", "statements": [{"expression": {"id": 12535, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 12529, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12527, "src": "6471:8:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "32", "id": 12533, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6496:1:96", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 12532, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "6482:13:96", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 12530, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6486:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12531, "nodeType": "ArrayTypeName", "src": "6486:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 12534, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6482:16:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "src": "6471:27:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 12536, "nodeType": "ExpressionStatement", "src": "6471:27:96"}, {"expression": {"id": 12546, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 12537, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12527, "src": "6508:8:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 12539, "indexExpression": {"hexValue": "30", "id": 12538, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6517:1:96", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "6508:11:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 12541, "name": "_token0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6786, "src": "6545:7:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$27174", "typeString": "contract IERC20"}}, {"arguments": [{"hexValue": "74727565", "id": 12543, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "6569:4:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 12542, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [13811], "referencedDeclaration": 13811, "src": "6554:14:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 12544, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6554:20:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$27174", "typeString": "contract IERC20"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 12540, "name": "_getScaledTokenBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12522, "src": "6522:22:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$27174_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (contract IERC20,uint256) view returns (uint256)"}}, "id": 12545, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6522:53:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6508:67:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12547, "nodeType": "ExpressionStatement", "src": "6508:67:96"}, {"expression": {"id": 12557, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 12548, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12527, "src": "6585:8:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 12550, "indexExpression": {"hexValue": "31", "id": 12549, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6594:1:96", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "6585:11:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 12552, "name": "_token1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6788, "src": "6622:7:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$27174", "typeString": "contract IERC20"}}, {"arguments": [{"hexValue": "66616c7365", "id": 12554, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "6646:5:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 12553, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [13811], "referencedDeclaration": 13811, "src": "6631:14:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 12555, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6631:21:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$27174", "typeString": "contract IERC20"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 12551, "name": "_getScaledTokenBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12522, "src": "6599:22:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$27174_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (contract IERC20,uint256) view returns (uint256)"}}, "id": 12556, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6599:54:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6585:68:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12558, "nodeType": "ExpressionStatement", "src": "6585:68:96"}, {"expression": {"id": 12559, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12527, "src": "6670:8:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "functionReturnParameters": 12528, "id": 12560, "nodeType": "Return", "src": "6663:15:96"}]}, "documentation": {"id": 12523, "nodeType": "StructuredDocumentation", "src": "5992:165:96", "text": "@dev Get all balances in the pool, scaled by the appropriate scaling factors, in a relatively gas-efficient way.\n Essentially copied from the 3CLP."}, "id": 12562, "implemented": true, "kind": "function", "modifiers": [], "name": "_getAllBalances", "nodeType": "FunctionDefinition", "parameters": {"id": 12524, "nodeType": "ParameterList", "parameters": [], "src": "6186:2:96"}, "returnParameters": {"id": 12528, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12527, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 12562, "src": "6212:25:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 12525, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6212:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12526, "nodeType": "ArrayTypeName", "src": "6212:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "6211:27:96"}, "scope": 13906, "src": "6162:523:96", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [7239], "body": {"id": 12593, "nodeType": "Block", "src": "6935:279:96", "statements": [{"assignments": [12573], "declarations": [{"constant": false, "id": 12573, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 12593, "src": "6945:25:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 12571, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6945:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12572, "nodeType": "ArrayTypeName", "src": "6945:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 12576, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 12574, "name": "_getAllBalances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12562, "src": "6973:15:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function () view returns (uint256[] memory)"}}, "id": 12575, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6973:17:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "6945:45:96"}, {"assignments": [12580, 12582], "declarations": [{"constant": false, "id": 12580, "mutability": "mutable", "name": "eclpParams", "nodeType": "VariableDeclaration", "scope": 12593, "src": "7001:37:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params"}, "typeName": {"id": 12579, "name": "GyroECLPMath.Params", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9333, "src": "7001:19:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_storage_ptr", "typeString": "struct GyroECLPMath.Params"}}, "visibility": "internal"}, {"constant": false, "id": 12582, "mutability": "mutable", "name": "derivedECLPParams", "nodeType": "VariableDeclaration", "scope": 12593, "src": "7040:51:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}, "typeName": {"id": 12581, "name": "GyroECLPMath.DerivedParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9348, "src": "7040:26:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_storage_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}}, "visibility": "internal"}], "id": 12585, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 12583, "name": "reconstructECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12475, "src": "7095:21:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_Params_$9333_memory_ptr_$_t_struct$_DerivedParams_$9348_memory_ptr_$", "typeString": "function () view returns (struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "id": 12584, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7095:23:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_struct$_Params_$9333_memory_ptr_$_t_struct$_DerivedParams_$9348_memory_ptr_$", "typeString": "tuple(struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "7000:118:96"}, {"expression": {"arguments": [{"id": 12588, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12573, "src": "7167:8:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 12589, "name": "eclpParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12580, "src": "7177:10:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"id": 12590, "name": "derivedECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12582, "src": "7189:17:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}], "expression": {"id": 12586, "name": "GyroECLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12133, "src": "7135:12:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPMath_$12133_$", "typeString": "type(library GyroECLPMath)"}}, "id": 12587, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 10233, "src": "7135:31:96", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_struct$_Params_$9333_memory_ptr_$_t_struct$_DerivedParams_$9348_memory_ptr_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory) pure returns (uint256)"}}, "id": 12591, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7135:72:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 12568, "id": 12592, "nodeType": "Return", "src": "7128:79:96"}]}, "documentation": {"id": 12563, "nodeType": "StructuredDocumentation", "src": "6691:176:96", "text": " @dev Returns the current value of the invariant.\n Note: This function is not used internally; it's public, not external, so we can override it cleanly."}, "functionSelector": "c0ff1a15", "id": 12594, "implemented": true, "kind": "function", "modifiers": [], "name": "getInvariant", "nodeType": "FunctionDefinition", "overrides": {"id": 12565, "nodeType": "OverrideSpecifier", "overrides": [], "src": "6908:8:96"}, "parameters": {"id": 12564, "nodeType": "ParameterList", "parameters": [], "src": "6893:2:96"}, "returnParameters": {"id": 12568, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12567, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 12594, "src": "6926:7:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12566, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6926:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6925:9:96"}, "scope": 13906, "src": "6872:342:96", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 12621, "nodeType": "Block", "src": "7682:122:96", "statements": [{"expression": {"id": 12619, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 12609, "name": "spotPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12607, "src": "7692:9:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 12612, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12598, "src": "7735:8:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 12613, "name": "eclpParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12602, "src": "7745:10:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"id": 12614, "name": "derivedECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12604, "src": "7757:17:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 12615, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12600, "src": "7776:9:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12616, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "toInt256", "nodeType": "MemberAccess", "referencedDeclaration": 24788, "src": "7776:18:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$", "typeString": "function (uint256) pure returns (int256)"}}, "id": 12617, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7776:20:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 12610, "name": "GyroECLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12133, "src": "7704:12:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPMath_$12133_$", "typeString": "type(library GyroECLPMath)"}}, "id": 12611, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "calcSpotPrice0in1", "nodeType": "MemberAccess", "referencedDeclaration": 11101, "src": "7704:30:96", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_struct$_Params_$9333_memory_ptr_$_t_struct$_DerivedParams_$9348_memory_ptr_$_t_int256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory,int256) pure returns (uint256)"}}, "id": 12618, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7704:93:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7692:105:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12620, "nodeType": "ExpressionStatement", "src": "7692:105:96"}]}, "documentation": {"id": 12595, "nodeType": "StructuredDocumentation", "src": "7220:220:96", "text": "When rateProvider{0,1} is provided, this returns the *scaled* price, suitable to compare *rate scaled* balances.\n  To compare (decimal- but) not-rate-scaled balances, apply _adjustPrice() to the result."}, "id": 12622, "implemented": true, "kind": "function", "modifiers": [], "name": "_getPrice", "nodeType": "FunctionDefinition", "parameters": {"id": 12605, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12598, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 12622, "src": "7473:25:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 12596, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7473:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12597, "nodeType": "ArrayTypeName", "src": "7473:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 12600, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 12622, "src": "7508:17:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12599, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7508:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 12602, "mutability": "mutable", "name": "eclpParams", "nodeType": "VariableDeclaration", "scope": 12622, "src": "7535:37:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params"}, "typeName": {"id": 12601, "name": "GyroECLPMath.Params", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9333, "src": "7535:19:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_storage_ptr", "typeString": "struct GyroECLPMath.Params"}}, "visibility": "internal"}, {"constant": false, "id": 12604, "mutability": "mutable", "name": "derivedECLPParams", "nodeType": "VariableDeclaration", "scope": 12622, "src": "7582:51:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}, "typeName": {"id": 12603, "name": "GyroECLPMath.DerivedParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9348, "src": "7582:26:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_storage_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}}, "visibility": "internal"}], "src": "7463:176:96"}, "returnParameters": {"id": 12608, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12607, "mutability": "mutable", "name": "spotPrice", "nodeType": "VariableDeclaration", "scope": 12622, "src": "7663:17:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12606, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7663:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7662:19:96"}, "scope": 13906, "src": "7445:359:96", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 12669, "nodeType": "Block", "src": "8063:420:96", "statements": [{"assignments": [12632], "declarations": [{"constant": false, "id": 12632, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 12669, "src": "8073:25:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 12630, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8073:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12631, "nodeType": "ArrayTypeName", "src": "8073:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 12635, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 12633, "name": "_getAllBalances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12562, "src": "8101:15:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function () view returns (uint256[] memory)"}}, "id": 12634, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8101:17:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "8073:45:96"}, {"assignments": [12639, 12641], "declarations": [{"constant": false, "id": 12639, "mutability": "mutable", "name": "eclpParams", "nodeType": "VariableDeclaration", "scope": 12669, "src": "8129:37:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params"}, "typeName": {"id": 12638, "name": "GyroECLPMath.Params", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9333, "src": "8129:19:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_storage_ptr", "typeString": "struct GyroECLPMath.Params"}}, "visibility": "internal"}, {"constant": false, "id": 12641, "mutability": "mutable", "name": "derivedECLPParams", "nodeType": "VariableDeclaration", "scope": 12669, "src": "8168:51:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}, "typeName": {"id": 12640, "name": "GyroECLPMath.DerivedParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9348, "src": "8168:26:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_storage_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}}, "visibility": "internal"}], "id": 12644, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 12642, "name": "reconstructECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12475, "src": "8223:21:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_Params_$9333_memory_ptr_$_t_struct$_DerivedParams_$9348_memory_ptr_$", "typeString": "function () view returns (struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "id": 12643, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8223:23:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_struct$_Params_$9333_memory_ptr_$_t_struct$_DerivedParams_$9348_memory_ptr_$", "typeString": "tuple(struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "8128:118:96"}, {"assignments": [12646], "declarations": [{"constant": false, "id": 12646, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 12669, "src": "8256:17:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12645, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8256:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 12653, "initialValue": {"arguments": [{"id": 12649, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12632, "src": "8308:8:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 12650, "name": "eclpParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12639, "src": "8318:10:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"id": 12651, "name": "derivedECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12641, "src": "8330:17:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}], "expression": {"id": 12647, "name": "GyroECLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12133, "src": "8276:12:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPMath_$12133_$", "typeString": "type(library GyroECLPMath)"}}, "id": 12648, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 10233, "src": "8276:31:96", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_struct$_Params_$9333_memory_ptr_$_t_struct$_DerivedParams_$9348_memory_ptr_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory) pure returns (uint256)"}}, "id": 12652, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8276:72:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "8256:92:96"}, {"expression": {"id": 12661, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 12654, "name": "spotPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12626, "src": "8358:9:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 12656, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12632, "src": "8380:8:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 12657, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12646, "src": "8390:9:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 12658, "name": "eclpParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12639, "src": "8401:10:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"id": 12659, "name": "derivedECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12641, "src": "8413:17:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}], "id": 12655, "name": "_getPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12622, "src": "8370:9:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_struct$_Params_$9333_memory_ptr_$_t_struct$_DerivedParams_$9348_memory_ptr_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory) view returns (uint256)"}}, "id": 12660, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8370:61:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8358:73:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12662, "nodeType": "ExpressionStatement", "src": "8358:73:96"}, {"expression": {"id": 12667, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 12663, "name": "spotPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12626, "src": "8441:9:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 12665, "name": "spotPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12626, "src": "8466:9:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 12664, "name": "_adjustPrice", "nodeType": "Identifier", "overloadedDeclarations": [13860], "referencedDeclaration": 13860, "src": "8453:12:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view returns (uint256)"}}, "id": 12666, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8453:23:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8441:35:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12668, "nodeType": "ExpressionStatement", "src": "8441:35:96"}]}, "documentation": {"id": 12623, "nodeType": "StructuredDocumentation", "src": "7810:186:96", "text": "Returns the current spot price of token0 quoted in units of token1. When rateProvider{0,1} is provided, the\n returned price corresponds to tokens *before* rate scaling."}, "functionSelector": "98d5fdca", "id": 12670, "implemented": true, "kind": "function", "modifiers": [], "name": "getPrice", "nodeType": "FunctionDefinition", "parameters": {"id": 12624, "nodeType": "ParameterList", "parameters": [], "src": "8018:2:96"}, "returnParameters": {"id": 12627, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12626, "mutability": "mutable", "name": "spotPrice", "nodeType": "VariableDeclaration", "scope": 12670, "src": "8044:17:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12625, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8044:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "8043:19:96"}, "scope": 13906, "src": "8001:482:96", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"baseFunctions": [7386], "body": {"id": 12898, "nodeType": "Block", "src": "8713:3084:96", "statements": [{"assignments": [12689], "declarations": [{"constant": false, "id": 12689, "mutability": "mutable", "name": "tokenInIsToken0", "nodeType": "VariableDeclaration", "scope": 12898, "src": "8723:20:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 12688, "name": "bool", "nodeType": "ElementaryTypeName", "src": "8723:4:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "id": 12690, "nodeType": "VariableDeclarationStatement", "src": "8723:20:96"}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 12699, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_contract$_IERC20_$27174", "typeString": "contract IERC20"}, "id": 12694, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 12691, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12672, "src": "8758:7:96", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27284_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 12692, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenIn", "nodeType": "MemberAccess", "referencedDeclaration": 27269, "src": "8758:15:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$27174", "typeString": "contract IERC20"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 12693, "name": "_token0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6786, "src": "8777:7:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$27174", "typeString": "contract IERC20"}}, "src": "8758:26:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_contract$_IERC20_$27174", "typeString": "contract IERC20"}, "id": 12698, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 12695, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12672, "src": "8788:7:96", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27284_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 12696, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenOut", "nodeType": "MemberAccess", "referencedDeclaration": 27271, "src": "8788:16:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$27174", "typeString": "contract IERC20"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 12697, "name": "_token1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6788, "src": "8808:7:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$27174", "typeString": "contract IERC20"}}, "src": "8788:27:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "8758:57:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 12713, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_contract$_IERC20_$27174", "typeString": "contract IERC20"}, "id": 12708, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 12705, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12672, "src": "8874:7:96", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27284_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 12706, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenIn", "nodeType": "MemberAccess", "referencedDeclaration": 27269, "src": "8874:15:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$27174", "typeString": "contract IERC20"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 12707, "name": "_token1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6788, "src": "8893:7:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$27174", "typeString": "contract IERC20"}}, "src": "8874:26:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_contract$_IERC20_$27174", "typeString": "contract IERC20"}, "id": 12712, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 12709, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12672, "src": "8904:7:96", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27284_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 12710, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenOut", "nodeType": "MemberAccess", "referencedDeclaration": 27271, "src": "8904:16:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$27174", "typeString": "contract IERC20"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 12711, "name": "_token0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6786, "src": "8924:7:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$27174", "typeString": "contract IERC20"}}, "src": "8904:27:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "8874:57:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 12724, "nodeType": "Block", "src": "8987:76:96", "statements": [{"expression": {"arguments": [{"expression": {"id": 12720, "name": "GyroECLPPoolErrors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13951, "src": "9009:18:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPPoolErrors_$13951_$", "typeString": "type(library GyroECLPPoolErrors)"}}, "id": 12721, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "TOKEN_IN_IS_NOT_TOKEN_0", "nodeType": "MemberAccess", "referencedDeclaration": 13914, "src": "9009:42:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 12719, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24060, "src": "9001:7:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$", "typeString": "function (uint256) pure"}}, "id": 12722, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9001:51:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12723, "nodeType": "ExpressionStatement", "src": "9001:51:96"}]}, "id": 12725, "nodeType": "IfStatement", "src": "8870:193:96", "trueBody": {"id": 12718, "nodeType": "Block", "src": "8933:48:96", "statements": [{"expression": {"id": 12716, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 12714, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12689, "src": "8947:15:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "66616c7365", "id": 12715, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "8965:5:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "src": "8947:23:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 12717, "nodeType": "ExpressionStatement", "src": "8947:23:96"}]}}, "id": 12726, "nodeType": "IfStatement", "src": "8754:309:96", "trueBody": {"id": 12704, "nodeType": "Block", "src": "8817:47:96", "statements": [{"expression": {"id": 12702, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 12700, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12689, "src": "8831:15:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 12701, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "8849:4:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "8831:22:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 12703, "nodeType": "ExpressionStatement", "src": "8831:22:96"}]}}, {"assignments": [12728], "declarations": [{"constant": false, "id": 12728, "mutability": "mutable", "name": "scalingFactorTokenIn", "nodeType": "VariableDeclaration", "scope": 12898, "src": "9073:28:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12727, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9073:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 12732, "initialValue": {"arguments": [{"id": 12730, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12689, "src": "9119:15:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 12729, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [13811], "referencedDeclaration": 13811, "src": "9104:14:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 12731, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9104:31:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "9073:62:96"}, {"assignments": [12734], "declarations": [{"constant": false, "id": 12734, "mutability": "mutable", "name": "scalingFactorTokenOut", "nodeType": "VariableDeclaration", "scope": 12898, "src": "9145:29:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12733, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9145:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 12739, "initialValue": {"arguments": [{"id": 12737, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "9192:16:96", "subExpression": {"id": 12736, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12689, "src": "9193:15:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 12735, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [13811], "referencedDeclaration": 13811, "src": "9177:14:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 12738, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9177:32:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "9145:64:96"}, {"expression": {"id": 12745, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 12740, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12674, "src": "9263:14:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 12742, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12674, "src": "9289:14:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 12743, "name": "scalingFactorTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12728, "src": "9305:20:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 12741, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8691, "src": "9280:8:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 12744, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9280:46:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9263:63:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12746, "nodeType": "ExpressionStatement", "src": "9263:63:96"}, {"expression": {"id": 12752, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 12747, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12676, "src": "9336:15:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 12749, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12676, "src": "9363:15:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 12750, "name": "scalingFactorTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12734, "src": "9380:21:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 12748, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8691, "src": "9354:8:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 12751, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9354:48:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9336:66:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12753, "nodeType": "ExpressionStatement", "src": "9336:66:96"}, {"assignments": [12758], "declarations": [{"constant": false, "id": 12758, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 12898, "src": "9600:25:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 12756, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9600:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12757, "nodeType": "ArrayTypeName", "src": "9600:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 12764, "initialValue": {"arguments": [{"id": 12760, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12674, "src": "9652:14:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 12761, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12676, "src": "9668:15:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 12762, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12689, "src": "9685:15:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 12759, "name": "_balancesFromTokenInOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13490, "src": "9628:23:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256,uint256,bool) pure returns (uint256[] memory)"}}, "id": 12763, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9628:73:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "9600:101:96"}, {"assignments": [12768, 12770], "declarations": [{"constant": false, "id": 12768, "mutability": "mutable", "name": "eclpParams", "nodeType": "VariableDeclaration", "scope": 12898, "src": "9713:37:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params"}, "typeName": {"id": 12767, "name": "GyroECLPMath.Params", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9333, "src": "9713:19:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_storage_ptr", "typeString": "struct GyroECLPMath.Params"}}, "visibility": "internal"}, {"constant": false, "id": 12770, "mutability": "mutable", "name": "derivedECLPParams", "nodeType": "VariableDeclaration", "scope": 12898, "src": "9752:51:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}, "typeName": {"id": 12769, "name": "GyroECLPMath.DerivedParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9348, "src": "9752:26:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_storage_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}}, "visibility": "internal"}], "id": 12773, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 12771, "name": "reconstructECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12475, "src": "9807:21:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_Params_$9333_memory_ptr_$_t_struct$_DerivedParams_$9348_memory_ptr_$", "typeString": "function () view returns (struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "id": 12772, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9807:23:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_struct$_Params_$9333_memory_ptr_$_t_struct$_DerivedParams_$9348_memory_ptr_$", "typeString": "tuple(struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "9712:118:96"}, {"assignments": [12777], "declarations": [{"constant": false, "id": 12777, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 12898, "src": "9840:37:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9353_memory_ptr", "typeString": "struct GyroECLPMath.Vector2"}, "typeName": {"id": 12776, "name": "GyroECLPMath.Vector2", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9353, "src": "9840:20:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9353_storage_ptr", "typeString": "struct GyroECLPMath.Vector2"}}, "visibility": "internal"}], "id": 12778, "nodeType": "VariableDeclarationStatement", "src": "9840:37:96"}, {"id": 12802, "nodeType": "Block", "src": "9887:432:96", "statements": [{"assignments": [12780, 12782], "declarations": [{"constant": false, "id": 12780, "mutability": "mutable", "name": "currentInvariant", "nodeType": "VariableDeclaration", "scope": 12802, "src": "9902:23:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12779, "name": "int256", "nodeType": "ElementaryTypeName", "src": "9902:6:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 12782, "mutability": "mutable", "name": "invErr", "nodeType": "VariableDeclaration", "scope": 12802, "src": "9927:13:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12781, "name": "int256", "nodeType": "ElementaryTypeName", "src": "9927:6:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 12789, "initialValue": {"arguments": [{"id": 12785, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12758, "src": "9985:8:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 12786, "name": "eclpParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12768, "src": "9995:10:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"id": 12787, "name": "derivedECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12770, "src": "10007:17:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}], "expression": {"id": 12783, "name": "GyroECLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12133, "src": "9944:12:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPMath_$12133_$", "typeString": "type(library GyroECLPMath)"}}, "id": 12784, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "calculateInvariantWithError", "nodeType": "MemberAccess", "referencedDeclaration": 10206, "src": "9944:40:96", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_struct$_Params_$9333_memory_ptr_$_t_struct$_DerivedParams_$9348_memory_ptr_$returns$_t_int256_$_t_int256_$", "typeString": "function (uint256[] memory,struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory) pure returns (int256,int256)"}}, "id": 12788, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9944:81:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256)"}}, "nodeType": "VariableDeclarationStatement", "src": "9901:124:96"}, {"expression": {"id": 12800, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 12790, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12777, "src": "10227:9:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9353_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 12797, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 12793, "name": "currentInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12780, "src": "10260:16:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 12796, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"hexValue": "32", "id": 12794, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10279:1:96", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 12795, "name": "invErr", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12782, "src": "10283:6:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "10279:10:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "10260:29:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12798, "name": "currentInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12780, "src": "10291:16:96", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 12791, "name": "GyroECLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12133, "src": "10239:12:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPMath_$12133_$", "typeString": "type(library GyroECLPMath)"}}, "id": 12792, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "Vector2", "nodeType": "MemberAccess", "referencedDeclaration": 9353, "src": "10239:20:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_struct$_Vector2_$9353_storage_ptr_$", "typeString": "type(struct GyroECLPMath.Vector2 storage pointer)"}}, "id": 12799, "isConstant": false, "isLValue": false, "isPure": false, "kind": "structConstructorCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10239:69:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9353_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, "src": "10227:81:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9353_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, "id": 12801, "nodeType": "ExpressionStatement", "src": "10227:81:96"}]}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_SwapKind_$19917", "typeString": "enum IVault.SwapKind"}, "id": 12808, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 12803, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12672, "src": "10333:7:96", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27284_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 12804, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kind", "nodeType": "MemberAccess", "referencedDeclaration": 27267, "src": "10333:12:96", "typeDescriptions": {"typeIdentifier": "t_enum$_SwapKind_$19917", "typeString": "enum IVault.SwapKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 12805, "name": "IVault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20093, "src": "10349:6:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IVault_$20093_$", "typeString": "type(contract IVault)"}}, "id": 12806, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "SwapKind", "nodeType": "MemberAccess", "referencedDeclaration": 19917, "src": "10349:15:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_SwapKind_$19917_$", "typeString": "type(enum IVault.SwapKind)"}}, "id": 12807, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "GIVEN_IN", "nodeType": "MemberAccess", "src": "10349:24:96", "typeDescriptions": {"typeIdentifier": "t_enum$_SwapKind_$19917", "typeString": "enum IVault.SwapKind"}}, "src": "10333:40:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 12896, "nodeType": "Block", "src": "11096:695:96", "statements": [{"expression": {"id": 12862, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 12854, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12672, "src": "11110:7:96", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27284_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 12856, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 27273, "src": "11110:14:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 12858, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12672, "src": "11136:7:96", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27284_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 12859, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 27273, "src": "11136:14:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 12860, "name": "scalingFactorTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12734, "src": "11152:21:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 12857, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8691, "src": "11127:8:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 12861, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11127:47:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11110:64:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12863, "nodeType": "ExpressionStatement", "src": "11110:64:96"}, {"assignments": [12865], "declarations": [{"constant": false, "id": 12865, "mutability": "mutable", "name": "amountIn", "nodeType": "VariableDeclaration", "scope": 12896, "src": "11189:16:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12864, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11189:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 12874, "initialValue": {"arguments": [{"id": 12867, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12672, "src": "11224:7:96", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27284_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, {"id": 12868, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12758, "src": "11233:8:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 12869, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12689, "src": "11243:15:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"id": 12870, "name": "eclpParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12768, "src": "11260:10:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"id": 12871, "name": "derivedECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12770, "src": "11272:17:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, {"id": 12872, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12777, "src": "11291:9:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9353_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_SwapRequest_$27284_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}, {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}, {"typeIdentifier": "t_struct$_Vector2_$9353_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}], "id": 12866, "name": "_onSwapGivenOut", "nodeType": "Identifier", "overloadedDeclarations": [12959, 7438], "referencedDeclaration": 12959, "src": "11208:15:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_SwapRequest_$27284_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bool_$_t_struct$_Params_$9333_memory_ptr_$_t_struct$_DerivedParams_$9348_memory_ptr_$_t_struct$_Vector2_$9353_memory_ptr_$returns$_t_uint256_$", "typeString": "function (struct IPoolSwapStructs.SwapRequest memory,uint256[] memory,bool,struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory,struct GyroECLPMath.Vector2 memory) pure returns (uint256)"}}, "id": 12873, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11208:93:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "11189:112:96"}, {"eventCall": {"arguments": [{"id": 12876, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12758, "src": "11332:8:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 12877, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12777, "src": "11342:9:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9353_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, {"id": 12878, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12865, "src": "11353:8:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_struct$_Vector2_$9353_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 12875, "name": "SwapParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12259, "src": "11321:10:96", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_struct$_Vector2_$9353_memory_ptr_$_t_uint256_$returns$__$", "typeString": "function (uint256[] memory,struct GyroECLPMath.Vector2 memory,uint256)"}}, "id": 12879, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11321:41:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12880, "nodeType": "EmitStatement", "src": "11316:46:96"}, {"expression": {"id": 12886, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 12881, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12865, "src": "11447:8:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 12883, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12865, "src": "11471:8:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 12884, "name": "scalingFactorTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12728, "src": "11481:20:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 12882, "name": "_downscaleUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8797, "src": "11458:12:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 12885, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11458:44:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11447:55:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12887, "nodeType": "ExpressionStatement", "src": "11447:55:96"}, {"expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 12890, "name": "getSwapFeePercentage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7049, "src": "11744:20:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 12891, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11744:22:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12892, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "complement", "nodeType": "MemberAccess", "referencedDeclaration": 18144, "src": "11744:33:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256) pure returns (uint256)"}}, "id": 12893, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11744:35:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 12888, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12865, "src": "11729:8:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12889, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "divUp", "nodeType": "MemberAccess", "referencedDeclaration": 17850, "src": "11729:14:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 12894, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11729:51:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 12687, "id": 12895, "nodeType": "Return", "src": "11722:58:96"}]}, "id": 12897, "nodeType": "IfStatement", "src": "10329:1462:96", "trueBody": {"id": 12853, "nodeType": "Block", "src": "10375:715:96", "statements": [{"assignments": [12810], "declarations": [{"constant": false, "id": 12810, "mutability": "mutable", "name": "feeAmount", "nodeType": "VariableDeclaration", "scope": 12853, "src": "10592:17:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12809, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10592:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 12817, "initialValue": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 12814, "name": "getSwapFeePercentage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7049, "src": "10633:20:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 12815, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10633:22:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"id": 12811, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12672, "src": "10612:7:96", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27284_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 12812, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 27273, "src": "10612:14:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12813, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mulUp", "nodeType": "MemberAccess", "referencedDeclaration": 17673, "src": "10612:20:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 12816, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10612:44:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "10592:64:96"}, {"expression": {"id": 12829, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 12818, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12672, "src": "10670:7:96", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27284_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 12820, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 27273, "src": "10670:14:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [{"id": 12825, "name": "feeAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12810, "src": "10715:9:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"id": 12822, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12672, "src": "10696:7:96", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27284_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 12823, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 27273, "src": "10696:14:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12824, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 17564, "src": "10696:18:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 12826, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10696:29:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 12827, "name": "scalingFactorTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12728, "src": "10727:20:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 12821, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8691, "src": "10687:8:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 12828, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10687:61:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10670:78:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12830, "nodeType": "ExpressionStatement", "src": "10670:78:96"}, {"assignments": [12832], "declarations": [{"constant": false, "id": 12832, "mutability": "mutable", "name": "amountOut", "nodeType": "VariableDeclaration", "scope": 12853, "src": "10763:17:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12831, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10763:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 12841, "initialValue": {"arguments": [{"id": 12834, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12672, "src": "10798:7:96", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27284_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, {"id": 12835, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12758, "src": "10807:8:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 12836, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12689, "src": "10817:15:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"id": 12837, "name": "eclpParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12768, "src": "10834:10:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"id": 12838, "name": "derivedECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12770, "src": "10846:17:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, {"id": 12839, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12777, "src": "10865:9:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9353_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_SwapRequest_$27284_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}, {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}, {"typeIdentifier": "t_struct$_Vector2_$9353_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}], "id": 12833, "name": "_onSwapGivenIn", "nodeType": "Identifier", "overloadedDeclarations": [12929, 7412], "referencedDeclaration": 12929, "src": "10783:14:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_SwapRequest_$27284_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bool_$_t_struct$_Params_$9333_memory_ptr_$_t_struct$_DerivedParams_$9348_memory_ptr_$_t_struct$_Vector2_$9353_memory_ptr_$returns$_t_uint256_$", "typeString": "function (struct IPoolSwapStructs.SwapRequest memory,uint256[] memory,bool,struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory,struct GyroECLPMath.Vector2 memory) pure returns (uint256)"}}, "id": 12840, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10783:92:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "10763:112:96"}, {"eventCall": {"arguments": [{"id": 12843, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12758, "src": "10906:8:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 12844, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12777, "src": "10916:9:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9353_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, {"id": 12845, "name": "amountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12832, "src": "10927:9:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_struct$_Vector2_$9353_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 12842, "name": "SwapParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12259, "src": "10895:10:96", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_struct$_Vector2_$9353_memory_ptr_$_t_uint256_$returns$__$", "typeString": "function (uint256[] memory,struct GyroECLPMath.Vector2 memory,uint256)"}}, "id": 12846, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10895:42:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12847, "nodeType": "EmitStatement", "src": "10890:47:96"}, {"expression": {"arguments": [{"id": 12849, "name": "amountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12832, "src": "11046:9:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 12850, "name": "scalingFactorTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12734, "src": "11057:21:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 12848, "name": "_downscaleDown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8744, "src": "11031:14:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 12851, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11031:48:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 12687, "id": 12852, "nodeType": "Return", "src": "11024:55:96"}]}}]}, "functionSelector": "9d2c110c", "id": 12899, "implemented": true, "kind": "function", "modifiers": [{"id": 12680, "modifierName": {"id": 12679, "name": "whenNotPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9156, "src": "8655:13:96", "typeDescriptions": {"typeIdentifier": "t_modifier$__$", "typeString": "modifier ()"}}, "nodeType": "ModifierInvocation", "src": "8655:13:96"}, {"arguments": [{"expression": {"id": 12682, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12672, "src": "8679:7:96", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27284_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 12683, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "poolId", "nodeType": "MemberAccess", "referencedDeclaration": 27275, "src": "8679:14:96", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "id": 12684, "modifierName": {"id": 12681, "name": "onlyVault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6833, "src": "8669:9:96", "typeDescriptions": {"typeIdentifier": "t_modifier$_t_bytes32_$", "typeString": "modifier (bytes32)"}}, "nodeType": "ModifierInvocation", "src": "8669:25:96"}], "name": "onSwap", "nodeType": "FunctionDefinition", "overrides": {"id": 12678, "nodeType": "OverrideSpecifier", "overrides": [], "src": "8646:8:96"}, "parameters": {"id": 12677, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12672, "mutability": "mutable", "name": "request", "nodeType": "VariableDeclaration", "scope": 12899, "src": "8533:26:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27284_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 12671, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 27284, "src": "8533:11:96", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27284_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 12674, "mutability": "mutable", "name": "balanceTokenIn", "nodeType": "VariableDeclaration", "scope": 12899, "src": "8569:22:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12673, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8569:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 12676, "mutability": "mutable", "name": "balanceTokenOut", "nodeType": "VariableDeclaration", "scope": 12899, "src": "8601:23:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12675, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8601:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "8523:107:96"}, "returnParameters": {"id": 12687, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12686, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 12899, "src": "8704:7:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12685, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8704:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "8703:9:96"}, "scope": 13906, "src": "8508:3289:96", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"body": {"id": 12928, "nodeType": "Block", "src": "12124:200:96", "statements": [{"expression": {"arguments": [{"id": 12919, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12904, "src": "12229:8:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"expression": {"id": 12920, "name": "swapRequest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12901, "src": "12239:11:96", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27284_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 12921, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 27273, "src": "12239:18:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 12922, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12906, "src": "12259:15:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"id": 12923, "name": "eclpParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12908, "src": "12276:10:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"id": 12924, "name": "derivedECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12910, "src": "12288:17:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, {"id": 12925, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12912, "src": "12307:9:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9353_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}, {"typeIdentifier": "t_struct$_Vector2_$9353_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}], "expression": {"id": 12917, "name": "GyroECLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12133, "src": "12201:12:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPMath_$12133_$", "typeString": "type(library GyroECLPMath)"}}, "id": 12918, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "calcOutGivenIn", "nodeType": "MemberAccess", "referencedDeclaration": 11278, "src": "12201:27:96", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bool_$_t_struct$_Params_$9333_memory_ptr_$_t_struct$_DerivedParams_$9348_memory_ptr_$_t_struct$_Vector2_$9353_memory_ptr_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,bool,struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory,struct GyroECLPMath.Vector2 memory) pure returns (uint256)"}}, "id": 12926, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12201:116:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 12916, "id": 12927, "nodeType": "Return", "src": "12194:123:96"}]}, "id": 12929, "implemented": true, "kind": "function", "modifiers": [], "name": "_onSwapGivenIn", "nodeType": "FunctionDefinition", "parameters": {"id": 12913, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12901, "mutability": "mutable", "name": "swapRequest", "nodeType": "VariableDeclaration", "scope": 12929, "src": "11836:30:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27284_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 12900, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 27284, "src": "11836:11:96", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27284_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 12904, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 12929, "src": "11876:25:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 12902, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11876:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12903, "nodeType": "ArrayTypeName", "src": "11876:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 12906, "mutability": "mutable", "name": "tokenInIsToken0", "nodeType": "VariableDeclaration", "scope": 12929, "src": "11911:20:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 12905, "name": "bool", "nodeType": "ElementaryTypeName", "src": "11911:4:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 12908, "mutability": "mutable", "name": "eclpParams", "nodeType": "VariableDeclaration", "scope": 12929, "src": "11941:37:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params"}, "typeName": {"id": 12907, "name": "GyroECLPMath.Params", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9333, "src": "11941:19:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_storage_ptr", "typeString": "struct GyroECLPMath.Params"}}, "visibility": "internal"}, {"constant": false, "id": 12910, "mutability": "mutable", "name": "derivedECLPParams", "nodeType": "VariableDeclaration", "scope": 12929, "src": "11988:51:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}, "typeName": {"id": 12909, "name": "GyroECLPMath.DerivedParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9348, "src": "11988:26:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_storage_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}}, "visibility": "internal"}, {"constant": false, "id": 12912, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 12929, "src": "12049:37:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9353_memory_ptr", "typeString": "struct GyroECLPMath.Vector2"}, "typeName": {"id": 12911, "name": "GyroECLPMath.Vector2", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9353, "src": "12049:20:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9353_storage_ptr", "typeString": "struct GyroECLPMath.Vector2"}}, "visibility": "internal"}], "src": "11826:266:96"}, "returnParameters": {"id": 12916, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12915, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 12929, "src": "12115:7:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12914, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12115:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "12114:9:96"}, "scope": 13906, "src": "11803:521:96", "stateMutability": "pure", "virtual": false, "visibility": "private"}, {"body": {"id": 12958, "nodeType": "Block", "src": "12652:200:96", "statements": [{"expression": {"arguments": [{"id": 12949, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12934, "src": "12757:8:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"expression": {"id": 12950, "name": "swapRequest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12931, "src": "12767:11:96", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27284_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 12951, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 27273, "src": "12767:18:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 12952, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12936, "src": "12787:15:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"id": 12953, "name": "eclpParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12938, "src": "12804:10:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"id": 12954, "name": "derivedECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12940, "src": "12816:17:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, {"id": 12955, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12942, "src": "12835:9:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9353_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}, {"typeIdentifier": "t_struct$_Vector2_$9353_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}], "expression": {"id": 12947, "name": "GyroECLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12133, "src": "12729:12:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPMath_$12133_$", "typeString": "type(library GyroECLPMath)"}}, "id": 12948, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "calcInGivenOut", "nodeType": "MemberAccess", "referencedDeclaration": 11399, "src": "12729:27:96", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bool_$_t_struct$_Params_$9333_memory_ptr_$_t_struct$_DerivedParams_$9348_memory_ptr_$_t_struct$_Vector2_$9353_memory_ptr_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,bool,struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory,struct GyroECLPMath.Vector2 memory) pure returns (uint256)"}}, "id": 12956, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12729:116:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 12946, "id": 12957, "nodeType": "Return", "src": "12722:123:96"}]}, "id": 12959, "implemented": true, "kind": "function", "modifiers": [], "name": "_onSwapGivenOut", "nodeType": "FunctionDefinition", "parameters": {"id": 12943, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12931, "mutability": "mutable", "name": "swapRequest", "nodeType": "VariableDeclaration", "scope": 12959, "src": "12364:30:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27284_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 12930, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 27284, "src": "12364:11:96", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27284_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 12934, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 12959, "src": "12404:25:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 12932, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12404:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12933, "nodeType": "ArrayTypeName", "src": "12404:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 12936, "mutability": "mutable", "name": "tokenInIsToken0", "nodeType": "VariableDeclaration", "scope": 12959, "src": "12439:20:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 12935, "name": "bool", "nodeType": "ElementaryTypeName", "src": "12439:4:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 12938, "mutability": "mutable", "name": "eclpParams", "nodeType": "VariableDeclaration", "scope": 12959, "src": "12469:37:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params"}, "typeName": {"id": 12937, "name": "GyroECLPMath.Params", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9333, "src": "12469:19:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_storage_ptr", "typeString": "struct GyroECLPMath.Params"}}, "visibility": "internal"}, {"constant": false, "id": 12940, "mutability": "mutable", "name": "derivedECLPParams", "nodeType": "VariableDeclaration", "scope": 12959, "src": "12516:51:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}, "typeName": {"id": 12939, "name": "GyroECLPMath.DerivedParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9348, "src": "12516:26:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_storage_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}}, "visibility": "internal"}, {"constant": false, "id": 12942, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 12959, "src": "12577:37:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9353_memory_ptr", "typeString": "struct GyroECLPMath.Vector2"}, "typeName": {"id": 12941, "name": "GyroECLPMath.Vector2", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9353, "src": "12577:20:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9353_storage_ptr", "typeString": "struct GyroECLPMath.Vector2"}}, "visibility": "internal"}], "src": "12354:266:96"}, "returnParameters": {"id": 12946, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12945, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 12959, "src": "12643:7:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12944, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12643:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "12642:9:96"}, "scope": 13906, "src": "12330:522:96", "stateMutability": "pure", "virtual": false, "visibility": "private"}, {"baseFunctions": [7646], "body": {"id": 13070, "nodeType": "Block", "src": "13833:1178:96", "statements": [{"assignments": [12980], "declarations": [{"constant": false, "id": 12980, "mutability": "mutable", "name": "kind", "nodeType": "VariableDeclaration", "scope": 13070, "src": "13843:30:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$29448", "typeString": "enum BaseWeightedPool.JoinKind"}, "typeName": {"id": 12979, "name": "BaseWeightedPool.JoinKind", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 29448, "src": "13843:25:96", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$29448", "typeString": "enum BaseWeightedPool.JoinKind"}}, "visibility": "internal"}], "id": 12984, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 12981, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12968, "src": "13876:8:96", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 12982, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "joinKind", "nodeType": "MemberAccess", "referencedDeclaration": 19168, "src": "13876:17:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_enum$_JoinKind_$29448_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (enum BaseWeightedPool.JoinKind)"}}, "id": 12983, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13876:19:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$29448", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "VariableDeclarationStatement", "src": "13843:52:96"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_JoinKind_$29448", "typeString": "enum BaseWeightedPool.JoinKind"}, "id": 12990, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 12986, "name": "kind", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12980, "src": "13914:4:96", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$29448", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 12987, "name": "BaseWeightedPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 30649, "src": "13922:16:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BaseWeightedPool_$30649_$", "typeString": "type(contract BaseWeightedPool)"}}, "id": 12988, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "JoinKind", "nodeType": "MemberAccess", "referencedDeclaration": 29448, "src": "13922:25:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_JoinKind_$29448_$", "typeString": "type(enum BaseWeightedPool.JoinKind)"}}, "id": 12989, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "INIT", "nodeType": "MemberAccess", "src": "13922:30:96", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$29448", "typeString": "enum BaseWeightedPool.JoinKind"}}, "src": "13914:38:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 12991, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24457, "src": "13954:6:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$24457_$", "typeString": "type(library Errors)"}}, "id": 12992, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNINITIALIZED", "nodeType": "MemberAccess", "referencedDeclaration": 24126, "src": "13954:20:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 12985, "name": "_require", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24052, "src": "13905:8:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 12993, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13905:70:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12994, "nodeType": "ExpressionStatement", "src": "13905:70:96"}, {"assignments": [12999], "declarations": [{"constant": false, "id": 12999, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 13070, "src": "13986:26:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 12997, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13986:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12998, "nodeType": "ArrayTypeName", "src": "13986:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 13003, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 13000, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12968, "src": "14015:8:96", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 13001, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "initialAmountsIn", "nodeType": "MemberAccess", "referencedDeclaration": 19207, "src": "14015:25:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (uint256[] memory)"}}, "id": 13002, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14015:27:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "13986:56:96"}, {"expression": {"arguments": [{"expression": {"id": 13007, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12999, "src": "14088:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 13008, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "14088:16:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "32", "id": 13009, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14106:1:96", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "expression": {"id": 13004, "name": "InputHelpers", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17123, "src": "14052:12:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_InputHelpers_$17123_$", "typeString": "type(library InputHelpers)"}}, "id": 13006, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ensureInputLengthMatch", "nodeType": "MemberAccess", "referencedDeclaration": 17031, "src": "14052:35:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256) pure"}}, "id": 13010, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14052:56:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13011, "nodeType": "ExpressionStatement", "src": "14052:56:96"}, {"expression": {"arguments": [{"id": 13013, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12999, "src": "14132:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}], "id": 13012, "name": "_upscaleArray", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8727, "src": "14118:13:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$", "typeString": "function (uint256[] memory) view"}}, "id": 13014, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14118:24:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13015, "nodeType": "ExpressionStatement", "src": "14118:24:96"}, {"assignments": [13019, 13021], "declarations": [{"constant": false, "id": 13019, "mutability": "mutable", "name": "eclpParams", "nodeType": "VariableDeclaration", "scope": 13070, "src": "14154:37:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params"}, "typeName": {"id": 13018, "name": "GyroECLPMath.Params", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9333, "src": "14154:19:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_storage_ptr", "typeString": "struct GyroECLPMath.Params"}}, "visibility": "internal"}, {"constant": false, "id": 13021, "mutability": "mutable", "name": "derivedECLPParams", "nodeType": "VariableDeclaration", "scope": 13070, "src": "14193:51:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}, "typeName": {"id": 13020, "name": "GyroECLPMath.DerivedParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9348, "src": "14193:26:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_storage_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}}, "visibility": "internal"}], "id": 13024, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 13022, "name": "reconstructECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12475, "src": "14248:21:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_Params_$9333_memory_ptr_$_t_struct$_DerivedParams_$9348_memory_ptr_$", "typeString": "function () view returns (struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "id": 13023, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14248:23:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_struct$_Params_$9333_memory_ptr_$_t_struct$_DerivedParams_$9348_memory_ptr_$", "typeString": "tuple(struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "14153:118:96"}, {"assignments": [13026], "declarations": [{"constant": false, "id": 13026, "mutability": "mutable", "name": "invariantAfterJoin", "nodeType": "VariableDeclaration", "scope": 13070, "src": "14281:26:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13025, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14281:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 13033, "initialValue": {"arguments": [{"id": 13029, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12999, "src": "14342:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 13030, "name": "eclpParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13019, "src": "14353:10:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"id": 13031, "name": "derivedECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13021, "src": "14365:17:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}], "expression": {"id": 13027, "name": "GyroECLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12133, "src": "14310:12:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPMath_$12133_$", "typeString": "type(library GyroECLPMath)"}}, "id": 13028, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 10233, "src": "14310:31:96", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_struct$_Params_$9333_memory_ptr_$_t_struct$_DerivedParams_$9348_memory_ptr_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory) pure returns (uint256)"}}, "id": 13032, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14310:73:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "14281:102:96"}, {"eventCall": {"arguments": [{"id": 13035, "name": "invariantAfterJoin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13026, "src": "14427:18:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 13034, "name": "InvariantAterInitializeJoin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12244, "src": "14399:27:96", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 13036, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14399:47:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13037, "nodeType": "EmitStatement", "src": "14394:52:96"}, {"assignments": [13039], "declarations": [{"constant": false, "id": 13039, "mutability": "mutable", "name": "spotPrice", "nodeType": "VariableDeclaration", "scope": 13070, "src": "14736:17:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13038, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14736:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 13046, "initialValue": {"arguments": [{"id": 13041, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12999, "src": "14766:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 13042, "name": "invariantAfterJoin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13026, "src": "14777:18:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13043, "name": "eclpParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13019, "src": "14797:10:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"id": 13044, "name": "derivedECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13021, "src": "14809:17:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}], "id": 13040, "name": "_getPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12622, "src": "14756:9:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_struct$_Params_$9333_memory_ptr_$_t_struct$_DerivedParams_$9348_memory_ptr_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory) view returns (uint256)"}}, "id": 13045, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14756:71:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "14736:91:96"}, {"assignments": [13048], "declarations": [{"constant": false, "id": 13048, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 13070, "src": "14837:20:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13047, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14837:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 13061, "initialValue": {"arguments": [{"arguments": [{"id": 13055, "name": "spotPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13039, "src": "14890:9:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"baseExpression": {"id": 13051, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12999, "src": "14869:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 13053, "indexExpression": {"hexValue": "30", "id": 13052, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14879:1:96", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "14869:12:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13054, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mulDown", "nodeType": "MemberAccess", "referencedDeclaration": 17603, "src": "14869:20:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 13056, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14869:31:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 13057, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12999, "src": "14902:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 13059, "indexExpression": {"hexValue": "31", "id": 13058, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14912:1:96", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "14902:12:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 13049, "name": "Math", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17412, "src": "14860:4:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Math_$17412_$", "typeString": "type(library Math)"}}, "id": 13050, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 17154, "src": "14860:8:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 13060, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14860:55:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "14837:78:96"}, {"expression": {"id": 13064, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 13062, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6782, "src": "14926:14:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 13063, "name": "invariantAfterJoin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13026, "src": "14943:18:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "14926:35:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13065, "nodeType": "ExpressionStatement", "src": "14926:35:96"}, {"expression": {"components": [{"id": 13066, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13048, "src": "14980:12:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13067, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12999, "src": "14994:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 13068, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "14979:25:96", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "functionReturnParameters": 12976, "id": 13069, "nodeType": "Return", "src": "14972:32:96"}]}, "documentation": {"id": 12960, "nodeType": "StructuredDocumentation", "src": "12858:801:96", "text": " @dev Called when the Pool is joined for the first time; that is, when the BPT total supply is zero.\n Returns the amount of BPT to mint, and the token amounts the Pool will receive in return.\n Minted BPT will be sent to `recipient`, except for _MINIMUM_BPT, which will be deducted from this amount and sent\n to the zero address instead. This will cause that BPT to remain forever locked there, preventing total BTP from\n ever dropping below that value, and ensuring `_onInitializePool` can only be called once in the entire Pool's\n lifetime.\n The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n be downscaled (rounding up) before being returned to the Vault."}, "id": 13071, "implemented": true, "kind": "function", "modifiers": [], "name": "_onInitializePool", "nodeType": "FunctionDefinition", "overrides": {"id": 12970, "nodeType": "OverrideSpecifier", "overrides": [], "src": "13788:8:96"}, "parameters": {"id": 12969, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12962, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13071, "src": "13700:7:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 12961, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "13700:7:96", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 12964, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13071, "src": "13717:7:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 12963, "name": "address", "nodeType": "ElementaryTypeName", "src": "13717:7:96", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 12966, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13071, "src": "13734:7:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 12965, "name": "address", "nodeType": "ElementaryTypeName", "src": "13734:7:96", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 12968, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 13071, "src": "13751:21:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 12967, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "13751:5:96", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "13690:88:96"}, "returnParameters": {"id": 12976, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12972, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13071, "src": "13806:7:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12971, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13806:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 12975, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13071, "src": "13815:16:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 12973, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13815:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12974, "nodeType": "ArrayTypeName", "src": "13815:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "13805:27:96"}, "scope": 13906, "src": "13664:1347:96", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [7741], "body": {"id": 13169, "nodeType": "Block", "src": "16527:1591:96", "statements": [{"assignments": [13102, 13104], "declarations": [{"constant": false, "id": 13102, "mutability": "mutable", "name": "eclpParams", "nodeType": "VariableDeclaration", "scope": 13169, "src": "16825:37:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params"}, "typeName": {"id": 13101, "name": "GyroECLPMath.Params", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9333, "src": "16825:19:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_storage_ptr", "typeString": "struct GyroECLPMath.Params"}}, "visibility": "internal"}, {"constant": false, "id": 13104, "mutability": "mutable", "name": "derivedECLPParams", "nodeType": "VariableDeclaration", "scope": 13169, "src": "16864:51:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}, "typeName": {"id": 13103, "name": "GyroECLPMath.DerivedParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9348, "src": "16864:26:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_storage_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}}, "visibility": "internal"}], "id": 13107, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 13105, "name": "reconstructECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12475, "src": "16919:21:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_Params_$9333_memory_ptr_$_t_struct$_DerivedParams_$9348_memory_ptr_$", "typeString": "function () view returns (struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "id": 13106, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16919:23:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_struct$_Params_$9333_memory_ptr_$_t_struct$_DerivedParams_$9348_memory_ptr_$", "typeString": "tuple(struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "16824:118:96"}, {"assignments": [13109], "declarations": [{"constant": false, "id": 13109, "mutability": "mutable", "name": "invariantBeforeAction", "nodeType": "VariableDeclaration", "scope": 13169, "src": "16952:29:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13108, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16952:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 13116, "initialValue": {"arguments": [{"id": 13112, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13081, "src": "17016:8:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 13113, "name": "eclpParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13102, "src": "17026:10:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"id": 13114, "name": "derivedECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13104, "src": "17038:17:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}], "expression": {"id": 13110, "name": "GyroECLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12133, "src": "16984:12:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPMath_$12133_$", "typeString": "type(library GyroECLPMath)"}}, "id": 13111, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 10233, "src": "16984:31:96", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_struct$_Params_$9333_memory_ptr_$_t_struct$_DerivedParams_$9348_memory_ptr_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory) pure returns (uint256)"}}, "id": 13115, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16984:72:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "16952:104:96"}, {"expression": {"arguments": [{"id": 13118, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13109, "src": "17083:21:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 13117, "name": "_distributeFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13517, "src": "17067:15:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 13119, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17067:38:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13120, "nodeType": "ExpressionStatement", "src": "17067:38:96"}, {"assignments": [13122, 13125], "declarations": [{"constant": false, "id": 13122, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 13169, "src": "17117:20:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13121, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17117:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13125, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 13169, "src": "17139:26:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13123, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17139:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13124, "nodeType": "ArrayTypeName", "src": "17139:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 13130, "initialValue": {"arguments": [{"id": 13127, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13081, "src": "17177:8:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 13128, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13087, "src": "17187:8:96", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 13126, "name": "_doJoin", "nodeType": "Identifier", "overloadedDeclarations": [13214, 7810], "referencedDeclaration": 13214, "src": "17169:7:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 13129, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17169:27:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "17116:80:96"}, {"condition": {"expression": {"id": 13131, "name": "_capParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6576, "src": "17211:10:96", "typeDescriptions": {"typeIdentifier": "t_struct$_CapParams_$20111_storage", "typeString": "struct ICappedLiquidity.CapParams storage ref"}}, "id": 13132, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "capEnabled", "nodeType": "MemberAccess", "referencedDeclaration": 20106, "src": "17211:21:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 13143, "nodeType": "IfStatement", "src": "17207:113:96", "trueBody": {"id": 13142, "nodeType": "Block", "src": "17234:86:96", "statements": [{"expression": {"arguments": [{"id": 13134, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13122, "src": "17259:12:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"id": 13136, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13078, "src": "17283:9:96", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 13135, "name": "balanceOf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23302, "src": "17273:9:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view returns (uint256)"}}, "id": 13137, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17273:20:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 13138, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23288, "src": "17295:11:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 13139, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17295:13:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 13133, "name": "_ensureCap", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6735, "src": "17248:10:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256,uint256) view"}}, "id": 13140, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17248:61:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13141, "nodeType": "ExpressionStatement", "src": "17248:61:96"}]}}, {"expression": {"id": 13153, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 13144, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6782, "src": "17753:14:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 13147, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13109, "src": "17808:21:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13148, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13122, "src": "17831:12:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 13149, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23288, "src": "17845:11:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 13150, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17845:13:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "74727565", "id": 13151, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "17860:4:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "expression": {"id": 13145, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18933, "src": "17770:12:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$18933_$", "typeString": "type(library GyroPoolMath)"}}, "id": 13146, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "liquidityInvariantUpdate", "nodeType": "MemberAccess", "referencedDeclaration": 18852, "src": "17770:37:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,bool) pure returns (uint256)"}}, "id": 13152, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17770:95:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "17753:112:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13154, "nodeType": "ExpressionStatement", "src": "17753:112:96"}, {"eventCall": {"arguments": [{"id": 13156, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13109, "src": "17900:21:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13157, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6782, "src": "17923:14:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 13155, "name": "InvariantOldAndNew", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12250, "src": "17881:18:96", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256)"}}, "id": 13158, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17881:57:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13159, "nodeType": "EmitStatement", "src": "17876:62:96"}, {"expression": {"components": [{"id": 13160, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13122, "src": "18069:12:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13161, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13125, "src": "18083:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"arguments": [{"hexValue": "32", "id": 13165, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "18108:1:96", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 13164, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "18094:13:96", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 13162, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18098:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13163, "nodeType": "ArrayTypeName", "src": "18098:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 13166, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18094:16:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 13167, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "18068:43:96", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory,uint256[] memory)"}}, "functionReturnParameters": 13098, "id": 13168, "nodeType": "Return", "src": "18061:50:96"}]}, "documentation": {"id": 13072, "nodeType": "StructuredDocumentation", "src": "15017:1126:96", "text": " @dev Called whenever the Pool is joined after the first initialization join (see `_onInitializePool`).\n Returns the amount of BPT to mint, the token amounts that the Pool will receive in return, and the number of\n tokens to pay in protocol swap fees.\n Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n Minted BPT will be sent to `recipient`.\n The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n be downscaled (rounding up) before being returned to the Vault.\n Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onJoinPool`). These\n amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way"}, "id": 13170, "implemented": true, "kind": "function", "modifiers": [], "name": "_onJoinPool", "nodeType": "FunctionDefinition", "overrides": {"id": 13089, "nodeType": "OverrideSpecifier", "overrides": [], "src": "16406:8:96"}, "parameters": {"id": 13088, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13074, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13170, "src": "16178:7:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 13073, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "16178:7:96", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 13076, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13170, "src": "16195:7:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 13075, "name": "address", "nodeType": "ElementaryTypeName", "src": "16195:7:96", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 13078, "mutability": "mutable", "name": "recipient", "nodeType": "VariableDeclaration", "scope": 13170, "src": "16212:17:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 13077, "name": "address", "nodeType": "ElementaryTypeName", "src": "16212:7:96", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 13081, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 13170, "src": "16239:25:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13079, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16239:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13080, "nodeType": "ArrayTypeName", "src": "16239:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 13083, "mutability": "mutable", "name": "lastChangeBlock", "nodeType": "VariableDeclaration", "scope": 13170, "src": "16274:23:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13082, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16274:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13085, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13170, "src": "16307:7:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13084, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16307:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13087, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 13170, "src": "16353:21:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 13086, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "16353:5:96", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "16168:212:96"}, "returnParameters": {"id": 13098, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13091, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13170, "src": "16445:7:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13090, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16445:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13094, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13170, "src": "16466:16:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13092, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16466:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13093, "nodeType": "ArrayTypeName", "src": "16466:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 13097, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13170, "src": "16496:16:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13095, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16496:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13096, "nodeType": "ArrayTypeName", "src": "16496:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "16431:91:96"}, "scope": 13906, "src": "16148:1970:96", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 13213, "nodeType": "Block", "src": "18264:441:96", "statements": [{"assignments": [13186], "declarations": [{"constant": false, "id": 13186, "mutability": "mutable", "name": "kind", "nodeType": "VariableDeclaration", "scope": 13213, "src": "18274:30:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$29448", "typeString": "enum BaseWeightedPool.JoinKind"}, "typeName": {"id": 13185, "name": "BaseWeightedPool.JoinKind", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 29448, "src": "18274:25:96", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$29448", "typeString": "enum BaseWeightedPool.JoinKind"}}, "visibility": "internal"}], "id": 13190, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 13187, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13175, "src": "18307:8:96", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 13188, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "joinKind", "nodeType": "MemberAccess", "referencedDeclaration": 19168, "src": "18307:17:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_enum$_JoinKind_$29448_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (enum BaseWeightedPool.JoinKind)"}}, "id": 13189, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18307:19:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$29448", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "VariableDeclarationStatement", "src": "18274:52:96"}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_JoinKind_$29448", "typeString": "enum BaseWeightedPool.JoinKind"}, "id": 13195, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 13191, "name": "kind", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13186, "src": "18463:4:96", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$29448", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 13192, "name": "BaseWeightedPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 30649, "src": "18471:16:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BaseWeightedPool_$30649_$", "typeString": "type(contract BaseWeightedPool)"}}, "id": 13193, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "JoinKind", "nodeType": "MemberAccess", "referencedDeclaration": 29448, "src": "18471:25:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_JoinKind_$29448_$", "typeString": "type(enum BaseWeightedPool.JoinKind)"}}, "id": 13194, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "ALL_TOKENS_IN_FOR_EXACT_BPT_OUT", "nodeType": "MemberAccess", "src": "18471:57:96", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$29448", "typeString": "enum BaseWeightedPool.JoinKind"}}, "src": "18463:65:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 13211, "nodeType": "Block", "src": "18639:60:96", "statements": [{"expression": {"arguments": [{"expression": {"id": 13207, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24457, "src": "18661:6:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$24457_$", "typeString": "type(library Errors)"}}, "id": 13208, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNHANDLED_JOIN_KIND", "nodeType": "MemberAccess", "referencedDeclaration": 24171, "src": "18661:26:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 13206, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24060, "src": "18653:7:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$", "typeString": "function (uint256) pure"}}, "id": 13209, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18653:35:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13210, "nodeType": "ExpressionStatement", "src": "18653:35:96"}]}, "id": 13212, "nodeType": "IfStatement", "src": "18459:240:96", "trueBody": {"id": 13205, "nodeType": "Block", "src": "18530:103:96", "statements": [{"expression": {"id": 13203, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 13196, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13178, "src": "18545:12:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13197, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13181, "src": "18559:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 13198, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "18544:25:96", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 13200, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13173, "src": "18603:8:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 13201, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13175, "src": "18613:8:96", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 13199, "name": "_joinAllTokensInForExactBPTOut", "nodeType": "Identifier", "overloadedDeclarations": [13252], "referencedDeclaration": 13252, "src": "18572:30:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 13202, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18572:50:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "18544:78:96", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13204, "nodeType": "ExpressionStatement", "src": "18544:78:96"}]}}]}, "id": 13214, "implemented": true, "kind": "function", "modifiers": [], "name": "_doJoin", "nodeType": "FunctionDefinition", "parameters": {"id": 13176, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13173, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 13214, "src": "18141:25:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13171, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18141:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13172, "nodeType": "ArrayTypeName", "src": "18141:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 13175, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 13214, "src": "18168:21:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 13174, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "18168:5:96", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "18140:50:96"}, "returnParameters": {"id": 13182, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13178, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 13214, "src": "18214:20:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13177, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18214:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13181, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 13214, "src": "18236:26:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13179, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18236:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13180, "nodeType": "ArrayTypeName", "src": "18236:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "18213:50:96"}, "scope": 13906, "src": "18124:581:96", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [7980], "body": {"id": 13251, "nodeType": "Block", "src": "18896:343:96", "statements": [{"assignments": [13229], "declarations": [{"constant": false, "id": 13229, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 13251, "src": "18906:20:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13228, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18906:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 13233, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 13230, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13219, "src": "18929:8:96", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 13231, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "allTokensInForExactBptOut", "nodeType": "MemberAccess", "referencedDeclaration": 19282, "src": "18929:34:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (uint256)"}}, "id": 13232, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18929:36:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "18906:59:96"}, {"assignments": [13238], "declarations": [{"constant": false, "id": 13238, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 13251, "src": "19076:26:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13236, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19076:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13237, "nodeType": "ArrayTypeName", "src": "19076:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 13246, "initialValue": {"arguments": [{"id": 13241, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13217, "src": "19151:8:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 13242, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13229, "src": "19161:12:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 13243, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23288, "src": "19175:11:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 13244, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19175:13:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 13239, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18933, "src": "19105:12:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$18933_$", "typeString": "type(library GyroPoolMath)"}}, "id": 13240, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcAllTokensInGivenExactBptOut", "nodeType": "MemberAccess", "referencedDeclaration": 18232, "src": "19105:45:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256[] memory)"}}, "id": 13245, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19105:84:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "19076:113:96"}, {"expression": {"components": [{"id": 13247, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13229, "src": "19208:12:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13248, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13238, "src": "19222:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 13249, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "19207:25:96", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "functionReturnParameters": 13227, "id": 13250, "nodeType": "Return", "src": "19200:32:96"}]}, "id": 13252, "implemented": true, "kind": "function", "modifiers": [], "name": "_joinAllTokensInForExactBPTOut", "nodeType": "FunctionDefinition", "overrides": {"id": 13221, "nodeType": "OverrideSpecifier", "overrides": [], "src": "18839:8:96"}, "parameters": {"id": 13220, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13217, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 13252, "src": "18751:25:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13215, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18751:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13216, "nodeType": "ArrayTypeName", "src": "18751:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 13219, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 13252, "src": "18778:21:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 13218, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "18778:5:96", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "18750:50:96"}, "returnParameters": {"id": 13227, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13223, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13252, "src": "18865:7:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13222, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18865:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13226, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13252, "src": "18874:16:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13224, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18874:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13225, "nodeType": "ArrayTypeName", "src": "18874:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "18864:27:96"}, "scope": 13906, "src": "18711:528:96", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [8152], "body": {"id": 13358, "nodeType": "Block", "src": "20719:2494:96", "statements": [{"assignments": [13283, 13285], "declarations": [{"constant": false, "id": 13283, "mutability": "mutable", "name": "eclpParams", "nodeType": "VariableDeclaration", "scope": 13358, "src": "20884:37:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params"}, "typeName": {"id": 13282, "name": "GyroECLPMath.Params", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9333, "src": "20884:19:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_storage_ptr", "typeString": "struct GyroECLPMath.Params"}}, "visibility": "internal"}, {"constant": false, "id": 13285, "mutability": "mutable", "name": "derivedECLPParams", "nodeType": "VariableDeclaration", "scope": 13358, "src": "20923:51:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}, "typeName": {"id": 13284, "name": "GyroECLPMath.DerivedParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9348, "src": "20923:26:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_storage_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}}, "visibility": "internal"}], "id": 13288, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 13286, "name": "reconstructECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12475, "src": "20978:21:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_Params_$9333_memory_ptr_$_t_struct$_DerivedParams_$9348_memory_ptr_$", "typeString": "function () view returns (struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "id": 13287, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20978:23:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_struct$_Params_$9333_memory_ptr_$_t_struct$_DerivedParams_$9348_memory_ptr_$", "typeString": "tuple(struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "20883:118:96"}, {"condition": {"arguments": [], "expression": {"argumentTypes": [], "id": 13289, "name": "_isNotPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9251, "src": "21178:12:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$", "typeString": "function () view returns (bool)"}}, "id": 13290, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21178:14:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 13347, "nodeType": "Block", "src": "22405:629:96", "statements": [{"expression": {"id": 13337, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 13330, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13272, "src": "22590:11:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13331, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13275, "src": "22603:10:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 13332, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "22589:25:96", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 13334, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13262, "src": "22625:8:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 13335, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13268, "src": "22635:8:96", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 13333, "name": "_doExit", "nodeType": "Identifier", "overloadedDeclarations": [13403, 8221], "referencedDeclaration": 13403, "src": "22617:7:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 13336, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22617:27:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "22589:55:96", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13338, "nodeType": "ExpressionStatement", "src": "22589:55:96"}, {"expression": {"id": 13345, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 13339, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6782, "src": "22989:14:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"arguments": [{"id": 13342, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "23011:7:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 13341, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23011:7:96", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}], "id": 13340, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "23006:4:96", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 13343, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23006:13:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint256", "typeString": "type(uint256)"}}, "id": 13344, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "23006:17:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "22989:34:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13346, "nodeType": "ExpressionStatement", "src": "22989:34:96"}]}, "id": 13348, "nodeType": "IfStatement", "src": "21174:1860:96", "trueBody": {"id": 13329, "nodeType": "Block", "src": "21194:1205:96", "statements": [{"assignments": [13292], "declarations": [{"constant": false, "id": 13292, "mutability": "mutable", "name": "invariantBeforeAction", "nodeType": "VariableDeclaration", "scope": 13329, "src": "21514:29:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13291, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21514:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 13299, "initialValue": {"arguments": [{"id": 13295, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13262, "src": "21578:8:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 13296, "name": "eclpParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13283, "src": "21588:10:96", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"id": 13297, "name": "derivedECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13285, "src": "21600:17:96", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_struct$_Params_$9333_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$9348_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}], "expression": {"id": 13293, "name": "GyroECLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12133, "src": "21546:12:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPMath_$12133_$", "typeString": "type(library GyroECLPMath)"}}, "id": 13294, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 10233, "src": "21546:31:96", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_struct$_Params_$9333_memory_ptr_$_t_struct$_DerivedParams_$9348_memory_ptr_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory) pure returns (uint256)"}}, "id": 13298, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21546:72:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "21514:104:96"}, {"expression": {"arguments": [{"id": 13301, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13292, "src": "21649:21:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 13300, "name": "_distributeFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13517, "src": "21633:15:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 13302, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21633:38:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13303, "nodeType": "ExpressionStatement", "src": "21633:38:96"}, {"expression": {"id": 13311, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 13304, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13272, "src": "21687:11:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13305, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13275, "src": "21700:10:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 13306, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "21686:25:96", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 13308, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13262, "src": "21722:8:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 13309, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13268, "src": "21732:8:96", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 13307, "name": "_doExit", "nodeType": "Identifier", "overloadedDeclarations": [13403, 8221], "referencedDeclaration": 13403, "src": "21714:7:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 13310, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21714:27:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "21686:55:96", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13312, "nodeType": "ExpressionStatement", "src": "21686:55:96"}, {"expression": {"id": 13322, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 13313, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6782, "src": "22199:14:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 13316, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13292, "src": "22254:21:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13317, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13272, "src": "22277:11:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 13318, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23288, "src": "22290:11:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 13319, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22290:13:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "66616c7365", "id": 13320, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "22305:5:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "expression": {"id": 13314, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18933, "src": "22216:12:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$18933_$", "typeString": "type(library GyroPoolMath)"}}, "id": 13315, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "liquidityInvariantUpdate", "nodeType": "MemberAccess", "referencedDeclaration": 18852, "src": "22216:37:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,bool) pure returns (uint256)"}}, "id": 13321, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22216:95:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "22199:112:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13323, "nodeType": "ExpressionStatement", "src": "22199:112:96"}, {"eventCall": {"arguments": [{"id": 13325, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13292, "src": "22350:21:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13326, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6782, "src": "22373:14:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 13324, "name": "InvariantOldAndNew", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12250, "src": "22331:18:96", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256)"}}, "id": 13327, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22331:57:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13328, "nodeType": "EmitStatement", "src": "22326:62:96"}]}}, {"expression": {"components": [{"id": 13349, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13272, "src": "23164:11:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13350, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13275, "src": "23177:10:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"arguments": [{"hexValue": "32", "id": 13354, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "23203:1:96", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 13353, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "23189:13:96", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 13351, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23193:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13352, "nodeType": "ArrayTypeName", "src": "23193:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 13355, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23189:16:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 13356, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "23163:43:96", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory,uint256[] memory)"}}, "functionReturnParameters": 13279, "id": 13357, "nodeType": "Return", "src": "23156:50:96"}]}, "documentation": {"id": 13253, "nodeType": "StructuredDocumentation", "src": "19245:1054:96", "text": " @dev Called whenever the Pool is exited.\n Returns the amount of BPT to burn, the token amounts for each Pool token that the Pool will grant in return, and\n the number of tokens to pay in protocol swap fees.\n Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n BPT will be burnt from `sender`.\n The Pool will grant tokens to `recipient`. These amounts are considered upscaled and will be downscaled\n (rounding down) before being returned to the Vault.\n Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onExitPool`). These\n amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way"}, "id": 13359, "implemented": true, "kind": "function", "modifiers": [], "name": "_onExitPool", "nodeType": "FunctionDefinition", "overrides": {"id": 13270, "nodeType": "OverrideSpecifier", "overrides": [], "src": "20553:8:96"}, "parameters": {"id": 13269, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13255, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13359, "src": "20334:7:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 13254, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "20334:7:96", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 13257, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13359, "src": "20351:7:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 13256, "name": "address", "nodeType": "ElementaryTypeName", "src": "20351:7:96", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 13259, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13359, "src": "20368:7:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 13258, "name": "address", "nodeType": "ElementaryTypeName", "src": "20368:7:96", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 13262, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 13359, "src": "20385:25:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13260, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20385:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13261, "nodeType": "ArrayTypeName", "src": "20385:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 13264, "mutability": "mutable", "name": "lastChangeBlock", "nodeType": "VariableDeclaration", "scope": 13359, "src": "20420:23:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13263, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20420:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13266, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13359, "src": "20453:7:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13265, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20453:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13268, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 13359, "src": "20500:21:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 13267, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "20500:5:96", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "20324:203:96"}, "returnParameters": {"id": 13279, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13272, "mutability": "mutable", "name": "bptAmountIn", "nodeType": "VariableDeclaration", "scope": 13359, "src": "20592:19:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13271, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20592:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13275, "mutability": "mutable", "name": "amountsOut", "nodeType": "VariableDeclaration", "scope": 13359, "src": "20625:27:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13273, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20625:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13274, "nodeType": "ArrayTypeName", "src": "20625:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 13278, "mutability": "mutable", "name": "dueProtocolFeeAmounts", "nodeType": "VariableDeclaration", "scope": 13359, "src": "20666:38:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13276, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20666:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13277, "nodeType": "ArrayTypeName", "src": "20666:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "20578:136:96"}, "scope": 13906, "src": "20304:2909:96", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 13402, "nodeType": "Block", "src": "23359:452:96", "statements": [{"assignments": [13375], "declarations": [{"constant": false, "id": 13375, "mutability": "mutable", "name": "kind", "nodeType": "VariableDeclaration", "scope": 13402, "src": "23369:30:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$29453", "typeString": "enum BaseWeightedPool.ExitKind"}, "typeName": {"id": 13374, "name": "BaseWeightedPool.ExitKind", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 29453, "src": "23369:25:96", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$29453", "typeString": "enum BaseWeightedPool.ExitKind"}}, "visibility": "internal"}], "id": 13379, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 13376, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13364, "src": "23402:8:96", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 13377, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "exitKind", "nodeType": "MemberAccess", "referencedDeclaration": 19184, "src": "23402:17:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_enum$_ExitKind_$29453_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (enum BaseWeightedPool.ExitKind)"}}, "id": 13378, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23402:19:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$29453", "typeString": "enum BaseWeightedPool.ExitKind"}}, "nodeType": "VariableDeclarationStatement", "src": "23369:52:96"}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_ExitKind_$29453", "typeString": "enum BaseWeightedPool.ExitKind"}, "id": 13384, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 13380, "name": "kind", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13375, "src": "23576:4:96", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$29453", "typeString": "enum BaseWeightedPool.ExitKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 13381, "name": "BaseWeightedPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 30649, "src": "23584:16:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BaseWeightedPool_$30649_$", "typeString": "type(contract BaseWeightedPool)"}}, "id": 13382, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ExitKind", "nodeType": "MemberAccess", "referencedDeclaration": 29453, "src": "23584:25:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_ExitKind_$29453_$", "typeString": "type(enum BaseWeightedPool.ExitKind)"}}, "id": 13383, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "EXACT_BPT_IN_FOR_TOKENS_OUT", "nodeType": "MemberAccess", "src": "23584:53:96", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$29453", "typeString": "enum BaseWeightedPool.ExitKind"}}, "src": "23576:61:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 13400, "nodeType": "Block", "src": "23745:60:96", "statements": [{"expression": {"arguments": [{"expression": {"id": 13396, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24457, "src": "23767:6:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$24457_$", "typeString": "type(library Errors)"}}, "id": 13397, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNHANDLED_EXIT_KIND", "nodeType": "MemberAccess", "referencedDeclaration": 24249, "src": "23767:26:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 13395, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24060, "src": "23759:7:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$", "typeString": "function (uint256) pure"}}, "id": 13398, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23759:35:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13399, "nodeType": "ExpressionStatement", "src": "23759:35:96"}]}, "id": 13401, "nodeType": "IfStatement", "src": "23572:233:96", "trueBody": {"id": 13394, "nodeType": "Block", "src": "23639:100:96", "statements": [{"expression": {"id": 13392, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 13385, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13367, "src": "23654:11:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13386, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13370, "src": "23667:10:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 13387, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "23653:25:96", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 13389, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13362, "src": "23709:8:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 13390, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13364, "src": "23719:8:96", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 13388, "name": "_exitExactBPTInForTokensOut", "nodeType": "Identifier", "overloadedDeclarations": [13441], "referencedDeclaration": 13441, "src": "23681:27:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 13391, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23681:47:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "23653:75:96", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13393, "nodeType": "ExpressionStatement", "src": "23653:75:96"}]}}]}, "id": 13403, "implemented": true, "kind": "function", "modifiers": [], "name": "_doExit", "nodeType": "FunctionDefinition", "parameters": {"id": 13365, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13362, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 13403, "src": "23236:25:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13360, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23236:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13361, "nodeType": "ArrayTypeName", "src": "23236:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 13364, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 13403, "src": "23263:21:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 13363, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "23263:5:96", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "23235:50:96"}, "returnParameters": {"id": 13371, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13367, "mutability": "mutable", "name": "bptAmountIn", "nodeType": "VariableDeclaration", "scope": 13403, "src": "23309:19:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13366, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23309:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13370, "mutability": "mutable", "name": "amountsOut", "nodeType": "VariableDeclaration", "scope": 13403, "src": "23330:27:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13368, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23330:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13369, "nodeType": "ArrayTypeName", "src": "23330:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "23308:50:96"}, "scope": 13906, "src": "23219:592:96", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [8328], "body": {"id": 13440, "nodeType": "Block", "src": "23999:746:96", "statements": [{"assignments": [13418], "declarations": [{"constant": false, "id": 13418, "mutability": "mutable", "name": "bptAmountIn", "nodeType": "VariableDeclaration", "scope": 13440, "src": "24420:19:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13417, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24420:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 13422, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 13419, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13408, "src": "24442:8:96", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 13420, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "exactBptInForTokensOut", "nodeType": "MemberAccess", "referencedDeclaration": 19329, "src": "24442:31:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (uint256)"}}, "id": 13421, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24442:33:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "24420:55:96"}, {"assignments": [13427], "declarations": [{"constant": false, "id": 13427, "mutability": "mutable", "name": "amountsOut", "nodeType": "VariableDeclaration", "scope": 13440, "src": "24586:27:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13425, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24586:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13426, "nodeType": "ArrayTypeName", "src": "24586:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 13435, "initialValue": {"arguments": [{"id": 13430, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13406, "src": "24659:8:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 13431, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13418, "src": "24669:11:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 13432, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23288, "src": "24682:11:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 13433, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24682:13:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 13428, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18933, "src": "24616:12:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$18933_$", "typeString": "type(library GyroPoolMath)"}}, "id": 13429, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcTokensOutGivenExactBptIn", "nodeType": "MemberAccess", "referencedDeclaration": 18284, "src": "24616:42:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256[] memory)"}}, "id": 13434, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24616:80:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "24586:110:96"}, {"expression": {"components": [{"id": 13436, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13418, "src": "24714:11:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13437, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13427, "src": "24727:10:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 13438, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "24713:25:96", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "functionReturnParameters": 13416, "id": 13439, "nodeType": "Return", "src": "24706:32:96"}]}, "id": 13441, "implemented": true, "kind": "function", "modifiers": [], "name": "_exitExactBPTInForTokensOut", "nodeType": "FunctionDefinition", "overrides": {"id": 13410, "nodeType": "OverrideSpecifier", "overrides": [], "src": "23942:8:96"}, "parameters": {"id": 13409, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13406, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 13441, "src": "23854:25:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13404, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23854:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13405, "nodeType": "ArrayTypeName", "src": "23854:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 13408, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 13441, "src": "23881:21:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 13407, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "23881:5:96", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "23853:50:96"}, "returnParameters": {"id": 13416, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13412, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13441, "src": "23968:7:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13411, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23968:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13415, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13441, "src": "23977:16:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13413, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23977:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13414, "nodeType": "ArrayTypeName", "src": "23977:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "23967:27:96"}, "scope": 13906, "src": "23817:928:96", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 13489, "nodeType": "Block", "src": "24952:272:96", "statements": [{"expression": {"id": 13459, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 13453, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13451, "src": "24962:8:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "32", "id": 13457, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "24987:1:96", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 13456, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "24973:13:96", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 13454, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24977:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13455, "nodeType": "ArrayTypeName", "src": "24977:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 13458, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24973:16:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "src": "24962:27:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 13460, "nodeType": "ExpressionStatement", "src": "24962:27:96"}, {"condition": {"id": 13461, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13447, "src": "25003:15:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 13487, "nodeType": "Block", "src": "25122:96:96", "statements": [{"expression": {"id": 13479, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 13475, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13451, "src": "25136:8:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 13477, "indexExpression": {"hexValue": "30", "id": 13476, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "25145:1:96", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "25136:11:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 13478, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13445, "src": "25150:15:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "25136:29:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13480, "nodeType": "ExpressionStatement", "src": "25136:29:96"}, {"expression": {"id": 13485, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 13481, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13451, "src": "25179:8:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 13483, "indexExpression": {"hexValue": "31", "id": 13482, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "25188:1:96", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "25179:11:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 13484, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13443, "src": "25193:14:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "25179:28:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13486, "nodeType": "ExpressionStatement", "src": "25179:28:96"}]}, "id": 13488, "nodeType": "IfStatement", "src": "24999:219:96", "trueBody": {"id": 13474, "nodeType": "Block", "src": "25020:96:96", "statements": [{"expression": {"id": 13466, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 13462, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13451, "src": "25034:8:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 13464, "indexExpression": {"hexValue": "30", "id": 13463, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "25043:1:96", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "25034:11:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 13465, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13443, "src": "25048:14:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "25034:28:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13467, "nodeType": "ExpressionStatement", "src": "25034:28:96"}, {"expression": {"id": 13472, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 13468, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13451, "src": "25076:8:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 13470, "indexExpression": {"hexValue": "31", "id": 13469, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "25085:1:96", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "25076:11:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 13471, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13445, "src": "25090:15:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "25076:29:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13473, "nodeType": "ExpressionStatement", "src": "25076:29:96"}]}}]}, "id": 13490, "implemented": true, "kind": "function", "modifiers": [], "name": "_balancesFromTokenInOut", "nodeType": "FunctionDefinition", "parameters": {"id": 13448, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13443, "mutability": "mutable", "name": "balanceTokenIn", "nodeType": "VariableDeclaration", "scope": 13490, "src": "24810:22:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13442, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24810:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13445, "mutability": "mutable", "name": "balanceTokenOut", "nodeType": "VariableDeclaration", "scope": 13490, "src": "24842:23:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13444, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24842:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13447, "mutability": "mutable", "name": "tokenInIsToken0", "nodeType": "VariableDeclaration", "scope": 13490, "src": "24875:20:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 13446, "name": "bool", "nodeType": "ElementaryTypeName", "src": "24875:4:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "24800:101:96"}, "returnParameters": {"id": 13452, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13451, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 13490, "src": "24925:25:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13449, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24925:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13450, "nodeType": "ArrayTypeName", "src": "24925:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "24924:27:96"}, "scope": 13906, "src": "24768:456:96", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 13516, "nodeType": "Block", "src": "25749:518:96", "statements": [{"assignments": [13497, 13499, 13501, 13503], "declarations": [{"constant": false, "id": 13497, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 13516, "src": "25977:16:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13496, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25977:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13499, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 13516, "src": "25995:20:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13498, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25995:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13501, "mutability": "mutable", "name": "gyroTreasury", "nodeType": "VariableDeclaration", "scope": 13516, "src": "26017:20:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 13500, "name": "address", "nodeType": "ElementaryTypeName", "src": "26017:7:96", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 13503, "mutability": "mutable", "name": "balTreasury", "nodeType": "VariableDeclaration", "scope": 13516, "src": "26039:19:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 13502, "name": "address", "nodeType": "ElementaryTypeName", "src": "26039:7:96", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 13508, "initialValue": {"arguments": [{"id": 13505, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6782, "src": "26101:14:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13506, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13493, "src": "26129:21:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 13504, "name": "_getDueProtocolFeeAmounts", "nodeType": "Identifier", "overloadedDeclarations": [13542, 13601], "referencedDeclaration": 13601, "src": "26062:25:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "function (uint256,uint256) view returns (uint256,uint256,address,address)"}}, "id": 13507, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26062:98:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "nodeType": "VariableDeclarationStatement", "src": "25976:184:96"}, {"expression": {"arguments": [{"id": 13510, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13497, "src": "26210:8:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13511, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13499, "src": "26220:12:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13512, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13501, "src": "26234:12:96", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 13513, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13503, "src": "26248:11:96", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 13509, "name": "_payFeesBpt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13633, "src": "26198:11:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$", "typeString": "function (uint256,uint256,address,address)"}}, "id": 13514, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26198:62:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13515, "nodeType": "ExpressionStatement", "src": "26198:62:96"}]}, "documentation": {"id": 13491, "nodeType": "StructuredDocumentation", "src": "25352:326:96", "text": " Note: This function is identical to that used in Gyro2CLPPool.sol\n @dev Computes and distributes fees between the Balancer and the Gyro treasury\n The fees are computed and distributed in BPT rather than using the\n Balancer regular distribution mechanism which would pay these in underlying"}, "id": 13517, "implemented": true, "kind": "function", "modifiers": [], "name": "_distributeFees", "nodeType": "FunctionDefinition", "parameters": {"id": 13494, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13493, "mutability": "mutable", "name": "invariantBeforeAction", "nodeType": "VariableDeclaration", "scope": 13517, "src": "25709:29:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13492, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25709:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "25708:31:96"}, "returnParameters": {"id": 13495, "nodeType": "ParameterList", "parameters": [], "src": "25749:0:96"}, "scope": 13906, "src": "25684:583:96", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [8560], "body": {"id": 13541, "nodeType": "Block", "src": "26748:42:96", "statements": [{"expression": {"arguments": [{"hexValue": "4e6f7420696d706c656d656e746564", "id": 13538, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "26765:17:96", "typeDescriptions": {"typeIdentifier": "t_stringliteral_9f5474d7a5849b3f79e8aee7ea2c60bcd36a60a08b4fa41f97e2fccf1c4df98b", "typeString": "literal_string \"Not implemented\""}, "value": "Not implemented"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_9f5474d7a5849b3f79e8aee7ea2c60bcd36a60a08b4fa41f97e2fccf1c4df98b", "typeString": "literal_string \"Not implemented\""}], "id": 13537, "name": "revert", "nodeType": "Identifier", "overloadedDeclarations": [-19, -19], "referencedDeclaration": -19, "src": "26758:6:96", "typeDescriptions": {"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory) pure"}}, "id": 13539, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26758:25:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13540, "nodeType": "ExpressionStatement", "src": "26758:25:96"}]}, "documentation": {"id": 13518, "nodeType": "StructuredDocumentation", "src": "26273:169:96", "text": " Note: This function is identical to that used in Gyro2CLPPool.sol\n @dev this function overrides inherited function to make sure it is never used"}, "id": 13542, "implemented": true, "kind": "function", "modifiers": [], "name": "_getDueProtocolFeeAmounts", "nodeType": "FunctionDefinition", "overrides": {"id": 13532, "nodeType": "OverrideSpecifier", "overrides": [], "src": "26712:8:96"}, "parameters": {"id": 13531, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13521, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13542, "src": "26491:16:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13519, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26491:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13520, "nodeType": "ArrayTypeName", "src": "26491:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 13524, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13542, "src": "26530:16:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13522, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26530:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13523, "nodeType": "ArrayTypeName", "src": "26530:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 13526, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13542, "src": "26578:7:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13525, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26578:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13528, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13542, "src": "26617:7:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13527, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26617:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13530, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13542, "src": "26655:7:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13529, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26655:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "26481:216:96"}, "returnParameters": {"id": 13536, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13535, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13542, "src": "26730:16:96", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13533, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26730:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13534, "nodeType": "ArrayTypeName", "src": "26730:9:96", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "26729:18:96"}, "scope": 13906, "src": "26447:343:96", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 13600, "nodeType": "Block", "src": "27413:680:96", "statements": [{"assignments": [13559, 13561, 13563, 13565], "declarations": [{"constant": false, "id": 13559, "mutability": "mutable", "name": "protocolSwapFeePerc", "nodeType": "VariableDeclaration", "scope": 13600, "src": "27424:27:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13558, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27424:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13561, "mutability": "mutable", "name": "protocolFeeGyroPortion", "nodeType": "VariableDeclaration", "scope": 13600, "src": "27453:30:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13560, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27453:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13563, "mutability": "mutable", "name": "gyroTreasury", "nodeType": "VariableDeclaration", "scope": 13600, "src": "27485:20:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 13562, "name": "address", "nodeType": "ElementaryTypeName", "src": "27485:7:96", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 13565, "mutability": "mutable", "name": "balTreasury", "nodeType": "VariableDeclaration", "scope": 13600, "src": "27507:19:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 13564, "name": "address", "nodeType": "ElementaryTypeName", "src": "27507:7:96", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 13568, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 13566, "name": "getFeesMetadata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13673, "src": "27530:15:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "function () view returns (uint256,uint256,address,address)"}}, "id": 13567, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27530:17:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "nodeType": "VariableDeclarationStatement", "src": "27423:124:96"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 13571, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 13569, "name": "protocolSwapFeePerc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13559, "src": "27643:19:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 13570, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "27666:1:96", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "27643:24:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 13579, "nodeType": "IfStatement", "src": "27639:95:96", "trueBody": {"id": 13578, "nodeType": "Block", "src": "27669:65:96", "statements": [{"expression": {"components": [{"hexValue": "30", "id": 13572, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "27691:1:96", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"hexValue": "30", "id": 13573, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "27694:1:96", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"id": 13574, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13563, "src": "27697:12:96", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 13575, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13565, "src": "27711:11:96", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 13576, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "27690:33:96", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_address_$_t_address_$", "typeString": "tuple(int_const 0,int_const 0,address,address)"}}, "functionReturnParameters": 13557, "id": 13577, "nodeType": "Return", "src": "27683:40:96"}]}}, {"assignments": [13581, 13583], "declarations": [{"constant": false, "id": 13581, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 13600, "src": "27778:16:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13580, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27778:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13583, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 13600, "src": "27796:20:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13582, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27796:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 13593, "initialValue": {"arguments": [{"id": 13586, "name": "previousInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13545, "src": "27864:17:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13587, "name": "currentInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13547, "src": "27895:16:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 13588, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23288, "src": "27925:11:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 13589, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27925:13:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13590, "name": "protocolSwapFeePerc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13559, "src": "27952:19:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13591, "name": "protocolFeeGyroPortion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13561, "src": "27985:22:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 13584, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18933, "src": "27820:12:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$18933_$", "typeString": "type(library GyroPoolMath)"}}, "id": 13585, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcProtocolFees", "nodeType": "MemberAccess", "referencedDeclaration": 18368, "src": "27820:30:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,uint256,uint256) pure returns (uint256,uint256)"}}, "id": 13592, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27820:197:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "27777:240:96"}, {"expression": {"components": [{"id": 13594, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13581, "src": "28036:8:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13595, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13583, "src": "28046:12:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13596, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13563, "src": "28060:12:96", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 13597, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13565, "src": "28074:11:96", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 13598, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "28035:51:96", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "functionReturnParameters": 13557, "id": 13599, "nodeType": "Return", "src": "28028:58:96"}]}, "documentation": {"id": 13543, "nodeType": "StructuredDocumentation", "src": "26796:379:96", "text": " @dev\n Note: This function is identical to that used in Gyro2CLPPool.sol.\n Calculates protocol fee amounts in BPT terms.\n protocolSwapFeePercentage is not used here b/c we take parameters from GyroConfig instead.\n Returns: BPT due to Gyro, BPT due to Balancer, receiving address for Gyro fees, receiving address for Balancer\n fees."}, "id": 13601, "implemented": true, "kind": "function", "modifiers": [], "name": "_getDueProtocolFeeAmounts", "nodeType": "FunctionDefinition", "parameters": {"id": 13548, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13545, "mutability": "mutable", "name": "previousInvariant", "nodeType": "VariableDeclaration", "scope": 13601, "src": "27215:25:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13544, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27215:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13547, "mutability": "mutable", "name": "currentInvariant", "nodeType": "VariableDeclaration", "scope": 13601, "src": "27242:24:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13546, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27242:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "27214:53:96"}, "returnParameters": {"id": 13557, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13550, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13601, "src": "27328:7:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13549, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27328:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13552, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13601, "src": "27349:7:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13551, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27349:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13554, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13601, "src": "27370:7:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 13553, "name": "address", "nodeType": "ElementaryTypeName", "src": "27370:7:96", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 13556, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13601, "src": "27391:7:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 13555, "name": "address", "nodeType": "ElementaryTypeName", "src": "27391:7:96", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "27314:94:96"}, "scope": 13906, "src": "27180:913:96", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 13632, "nodeType": "Block", "src": "28323:283:96", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 13614, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 13612, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13603, "src": "28381:8:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 13613, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "28392:1:96", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "28381:12:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 13621, "nodeType": "IfStatement", "src": "28377:82:96", "trueBody": {"id": 13620, "nodeType": "Block", "src": "28395:64:96", "statements": [{"expression": {"arguments": [{"id": 13616, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13607, "src": "28425:12:96", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 13617, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13603, "src": "28439:8:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 13615, "name": "_mintPoolTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21847, "src": "28409:15:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 13618, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28409:39:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13619, "nodeType": "ExpressionStatement", "src": "28409:39:96"}]}}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 13624, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 13622, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13605, "src": "28515:12:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 13623, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "28530:1:96", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "28515:16:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 13631, "nodeType": "IfStatement", "src": "28511:89:96", "trueBody": {"id": 13630, "nodeType": "Block", "src": "28533:67:96", "statements": [{"expression": {"arguments": [{"id": 13626, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13609, "src": "28563:11:96", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 13627, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13605, "src": "28576:12:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 13625, "name": "_mintPoolTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21847, "src": "28547:15:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 13628, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28547:42:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13629, "nodeType": "ExpressionStatement", "src": "28547:42:96"}]}}]}, "id": 13633, "implemented": true, "kind": "function", "modifiers": [], "name": "_payFeesBpt", "nodeType": "FunctionDefinition", "parameters": {"id": 13610, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13603, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 13633, "src": "28202:16:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13602, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28202:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13605, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 13633, "src": "28228:20:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13604, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28228:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13607, "mutability": "mutable", "name": "gyroTreasury", "nodeType": "VariableDeclaration", "scope": 13633, "src": "28258:20:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 13606, "name": "address", "nodeType": "ElementaryTypeName", "src": "28258:7:96", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 13609, "mutability": "mutable", "name": "balTreasury", "nodeType": "VariableDeclaration", "scope": 13633, "src": "28288:19:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 13608, "name": "address", "nodeType": "ElementaryTypeName", "src": "28288:7:96", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "28192:121:96"}, "returnParameters": {"id": 13611, "nodeType": "ParameterList", "parameters": [], "src": "28323:0:96"}, "scope": 13906, "src": "28172:434:96", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 13672, "nodeType": "Block", "src": "28855:326:96", "statements": [{"expression": {"components": [{"arguments": [{"arguments": [{"id": 13648, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "28927:4:96", "typeDescriptions": {"typeIdentifier": "t_contract$_GyroECLPPool_$13906", "typeString": "contract GyroECLPPool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_GyroECLPPool_$13906", "typeString": "contract GyroECLPPool"}], "id": 13647, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "28919:7:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 13646, "name": "address", "nodeType": "ElementaryTypeName", "src": "28919:7:96", "typeDescriptions": {}}}, "id": 13649, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28919:13:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 13650, "name": "POOL_TYPE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12179, "src": "28934:9:96", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 13644, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12210, "src": "28886:10:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$19426", "typeString": "contract IGyroConfig"}}, "id": 13645, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getSwapFeePercForPool", "nodeType": "MemberAccess", "referencedDeclaration": 19450, "src": "28886:32:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IGyroConfig_$19426_$_t_address_$_t_bytes32_$returns$_t_uint256_$bound_to$_t_contract$_IGyroConfig_$19426_$", "typeString": "function (contract IGyroConfig,address,bytes32) view returns (uint256)"}}, "id": 13651, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28886:58:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"arguments": [{"id": 13656, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "29010:4:96", "typeDescriptions": {"typeIdentifier": "t_contract$_GyroECLPPool_$13906", "typeString": "contract GyroECLPPool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_GyroECLPPool_$13906", "typeString": "contract GyroECLPPool"}], "id": 13655, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "29002:7:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 13654, "name": "address", "nodeType": "ElementaryTypeName", "src": "29002:7:96", "typeDescriptions": {}}}, "id": 13657, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29002:13:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 13658, "name": "POOL_TYPE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12179, "src": "29017:9:96", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 13652, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12210, "src": "28958:10:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$19426", "typeString": "contract IGyroConfig"}}, "id": 13653, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getProtocolFeeGyroPortionForPool", "nodeType": "MemberAccess", "referencedDeclaration": 19470, "src": "28958:43:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IGyroConfig_$19426_$_t_address_$_t_bytes32_$returns$_t_uint256_$bound_to$_t_contract$_IGyroConfig_$19426_$", "typeString": "function (contract IGyroConfig,address,bytes32) view returns (uint256)"}}, "id": 13659, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28958:69:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"expression": {"id": 13662, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19547, "src": "29063:14:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$19547_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 13663, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "GYRO_TREASURY_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 19543, "src": "29063:32:96", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 13660, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12210, "src": "29041:10:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$19426", "typeString": "contract IGyroConfig"}}, "id": 13661, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getAddress", "nodeType": "MemberAccess", "referencedDeclaration": 19401, "src": "29041:21:96", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$", "typeString": "function (bytes32) view external returns (address)"}}, "id": 13664, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29041:55:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"expression": {"id": 13667, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19547, "src": "29132:14:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$19547_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 13668, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "BAL_TREASURY_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 19546, "src": "29132:31:96", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 13665, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12210, "src": "29110:10:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$19426", "typeString": "contract IGyroConfig"}}, "id": 13666, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getAddress", "nodeType": "MemberAccess", "referencedDeclaration": 19401, "src": "29110:21:96", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$", "typeString": "function (bytes32) view external returns (address)"}}, "id": 13669, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29110:54:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 13670, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "28872:302:96", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "functionReturnParameters": 13643, "id": 13671, "nodeType": "Return", "src": "28865:309:96"}]}, "functionSelector": "9ef3e37d", "id": 13673, "implemented": true, "kind": "function", "modifiers": [], "name": "getFeesMetadata", "nodeType": "FunctionDefinition", "parameters": {"id": 13634, "nodeType": "ParameterList", "parameters": [], "src": "28709:2:96"}, "returnParameters": {"id": 13643, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13636, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13673, "src": "28770:7:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13635, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28770:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13638, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13673, "src": "28791:7:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13637, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28791:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13640, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13673, "src": "28812:7:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 13639, "name": "address", "nodeType": "ElementaryTypeName", "src": "28812:7:96", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 13642, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13673, "src": "28833:7:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 13641, "name": "address", "nodeType": "ElementaryTypeName", "src": "28833:7:96", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "28756:94:96"}, "scope": 13906, "src": "28685:496:96", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 13702, "nodeType": "Block", "src": "29798:216:96", "statements": [{"assignments": [13680], "declarations": [{"constant": false, "id": 13680, "mutability": "mutable", "name": "supply", "nodeType": "VariableDeclaration", "scope": 13702, "src": "29808:14:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13679, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "29808:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 13683, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 13681, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23288, "src": "29825:11:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 13682, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29825:13:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "29808:30:96"}, {"assignments": [13685, 13687, null, null], "declarations": [{"constant": false, "id": 13685, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 13702, "src": "29849:16:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13684, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "29849:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13687, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 13702, "src": "29867:20:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13686, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "29867:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, null, null], "id": 13693, "initialValue": {"arguments": [{"id": 13689, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6782, "src": "29921:14:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 13690, "name": "getInvariant", "nodeType": "Identifier", "overloadedDeclarations": [12594], "referencedDeclaration": 12594, "src": "29937:12:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 13691, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29937:14:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 13688, "name": "_getDueProtocolFeeAmounts", "nodeType": "Identifier", "overloadedDeclarations": [13542, 13601], "referencedDeclaration": 13601, "src": "29895:25:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "function (uint256,uint256) view returns (uint256,uint256,address,address)"}}, "id": 13692, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29895:57:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "nodeType": "VariableDeclarationStatement", "src": "29848:104:96"}, {"expression": {"arguments": [{"id": 13699, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13687, "src": "29994:12:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 13696, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13685, "src": "29980:8:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 13694, "name": "supply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13680, "src": "29969:6:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13695, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 17533, "src": "29969:10:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 13697, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29969:20:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13698, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 17533, "src": "29969:24:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 13700, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29969:38:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 13678, "id": 13701, "nodeType": "Return", "src": "29962:45:96"}]}, "documentation": {"id": 13674, "nodeType": "StructuredDocumentation", "src": "29187:547:96", "text": "@notice Effective BPT supply.\n  This is the same as `totalSupply()` but also accounts for the fact that the pool owes\n  protocol fees to the pool in the form of unminted LP shares created on the next join/exit,\n  diluting LPers. Thus, this is the totalSupply() that the next join/exit operation will see.\n  Equivalent to the respective function in, e.g., WeightedPool, see:\n  https://github.com/balancer/balancer-v2-monorepo/blob/master/pkg/pool-weighted/contracts/WeightedPool.sol#L325-L344"}, "functionSelector": "876f303b", "id": 13703, "implemented": true, "kind": "function", "modifiers": [], "name": "getActualSupply", "nodeType": "FunctionDefinition", "parameters": {"id": 13675, "nodeType": "ParameterList", "parameters": [], "src": "29763:2:96"}, "returnParameters": {"id": 13678, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13677, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13703, "src": "29789:7:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13676, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "29789:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "29788:9:96"}, "scope": 13906, "src": "29739:275:96", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 13743, "nodeType": "Block", "src": "30190:319:96", "statements": [{"assignments": [13710], "declarations": [{"constant": false, "id": 13710, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 13743, "src": "30200:17:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13709, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "30200:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 13713, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 13711, "name": "getInvariant", "nodeType": "Identifier", "overloadedDeclarations": [12594], "referencedDeclaration": 12594, "src": "30220:12:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 13712, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30220:14:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "30200:34:96"}, {"assignments": [13715], "declarations": [{"constant": false, "id": 13715, "mutability": "mutable", "name": "supply", "nodeType": "VariableDeclaration", "scope": 13743, "src": "30244:14:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13714, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "30244:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 13718, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 13716, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23288, "src": "30261:11:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 13717, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30261:13:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "30244:30:96"}, {"assignments": [13720, 13722, null, null], "declarations": [{"constant": false, "id": 13720, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 13743, "src": "30285:16:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13719, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "30285:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13722, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 13743, "src": "30303:20:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13721, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "30303:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, null, null], "id": 13727, "initialValue": {"arguments": [{"id": 13724, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6782, "src": "30357:14:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13725, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13710, "src": "30373:9:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 13723, "name": "_getDueProtocolFeeAmounts", "nodeType": "Identifier", "overloadedDeclarations": [13542, 13601], "referencedDeclaration": 13601, "src": "30331:25:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "function (uint256,uint256) view returns (uint256,uint256,address,address)"}}, "id": 13726, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30331:52:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "nodeType": "VariableDeclarationStatement", "src": "30284:99:96"}, {"assignments": [13729], "declarations": [{"constant": false, "id": 13729, "mutability": "mutable", "name": "actualSupply", "nodeType": "VariableDeclaration", "scope": 13743, "src": "30393:20:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13728, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "30393:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 13737, "initialValue": {"arguments": [{"id": 13735, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13722, "src": "30441:12:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 13732, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13720, "src": "30427:8:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 13730, "name": "supply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13715, "src": "30416:6:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13731, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 17533, "src": "30416:10:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 13733, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30416:20:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13734, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 17533, "src": "30416:24:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 13736, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30416:38:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "30393:61:96"}, {"expression": {"arguments": [{"id": 13740, "name": "actualSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13729, "src": "30489:12:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 13738, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13710, "src": "30471:9:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13739, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "divDown", "nodeType": "MemberAccess", "referencedDeclaration": 17759, "src": "30471:17:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 13741, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30471:31:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 13708, "id": 13742, "nodeType": "Return", "src": "30464:38:96"}]}, "documentation": {"id": 13704, "nodeType": "StructuredDocumentation", "src": "30020:94:96", "text": "@notice Equivalent to but more efficient than `getInvariant().divDown(getActualSupply())`."}, "functionSelector": "623a2e75", "id": 13744, "implemented": true, "kind": "function", "modifiers": [], "name": "getInvariantDivActualSupply", "nodeType": "FunctionDefinition", "parameters": {"id": 13705, "nodeType": "ParameterList", "parameters": [], "src": "30155:2:96"}, "returnParameters": {"id": 13708, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13707, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13744, "src": "30181:7:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13706, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "30181:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "30180:9:96"}, "scope": 13906, "src": "30119:390:96", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"baseFunctions": [9109], "body": {"id": 13754, "nodeType": "Block", "src": "30571:35:96", "statements": [{"expression": {"arguments": [{"id": 13751, "name": "paused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13746, "src": "30592:6:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 13750, "name": "_setPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9223, "src": "30581:10:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$", "typeString": "function (bool)"}}, "id": 13752, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30581:18:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13753, "nodeType": "ExpressionStatement", "src": "30581:18:96"}]}, "id": 13755, "implemented": true, "kind": "function", "modifiers": [], "name": "_setPausedState", "nodeType": "FunctionDefinition", "overrides": {"id": 13748, "nodeType": "OverrideSpecifier", "overrides": [], "src": "30562:8:96"}, "parameters": {"id": 13747, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13746, "mutability": "mutable", "name": "paused", "nodeType": "VariableDeclaration", "scope": 13755, "src": "30540:11:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 13745, "name": "bool", "nodeType": "ElementaryTypeName", "src": "30540:4:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "30539:13:96"}, "returnParameters": {"id": 13749, "nodeType": "ParameterList", "parameters": [], "src": "30571:0:96"}, "scope": 13906, "src": "30515:91:96", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [8674], "body": {"id": 13810, "nodeType": "Block", "src": "30711:439:96", "statements": [{"assignments": [13764], "declarations": [{"constant": false, "id": 13764, "mutability": "mutable", "name": "rateProvider", "nodeType": "VariableDeclaration", "scope": 13810, "src": "30721:26:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$25797", "typeString": "contract IRateProvider"}, "typeName": {"id": 13763, "name": "IRateProvider", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 25797, "src": "30721:13:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$25797", "typeString": "contract IRateProvider"}}, "visibility": "internal"}], "id": 13765, "nodeType": "VariableDeclarationStatement", "src": "30721:26:96"}, {"assignments": [13767], "declarations": [{"constant": false, "id": 13767, "mutability": "mutable", "name": "scalingFactor", "nodeType": "VariableDeclaration", "scope": 13810, "src": "30757:21:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13766, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "30757:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 13768, "nodeType": "VariableDeclarationStatement", "src": "30757:21:96"}, {"condition": {"id": 13769, "name": "token0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13757, "src": "30792:6:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 13787, "nodeType": "Block", "src": "30904:98:96", "statements": [{"expression": {"id": 13781, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 13779, "name": "rateProvider", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13764, "src": "30918:12:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$25797", "typeString": "contract IRateProvider"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 13780, "name": "rateProvider1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12215, "src": "30933:13:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$25797", "typeString": "contract IRateProvider"}}, "src": "30918:28:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$25797", "typeString": "contract IRateProvider"}}, "id": 13782, "nodeType": "ExpressionStatement", "src": "30918:28:96"}, {"expression": {"id": 13785, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 13783, "name": "scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13767, "src": "30960:13:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 13784, "name": "_scalingFactor1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6801, "src": "30976:15:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "30960:31:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13786, "nodeType": "ExpressionStatement", "src": "30960:31:96"}]}, "id": 13788, "nodeType": "IfStatement", "src": "30788:214:96", "trueBody": {"id": 13778, "nodeType": "Block", "src": "30800:98:96", "statements": [{"expression": {"id": 13772, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 13770, "name": "rateProvider", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13764, "src": "30814:12:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$25797", "typeString": "contract IRateProvider"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 13771, "name": "rateProvider0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12213, "src": "30829:13:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$25797", "typeString": "contract IRateProvider"}}, "src": "30814:28:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$25797", "typeString": "contract IRateProvider"}}, "id": 13773, "nodeType": "ExpressionStatement", "src": "30814:28:96"}, {"expression": {"id": 13776, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 13774, "name": "scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13767, "src": "30856:13:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 13775, "name": "_scalingFactor0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6799, "src": "30872:15:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "30856:31:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13777, "nodeType": "ExpressionStatement", "src": "30856:31:96"}]}}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 13797, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 13791, "name": "rateProvider", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13764, "src": "31023:12:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$25797", "typeString": "contract IRateProvider"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IRateProvider_$25797", "typeString": "contract IRateProvider"}], "id": 13790, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "31015:7:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 13789, "name": "address", "nodeType": "ElementaryTypeName", "src": "31015:7:96", "typeDescriptions": {}}}, "id": 13792, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "31015:21:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 13795, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "31048:1:96", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 13794, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "31040:7:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 13793, "name": "address", "nodeType": "ElementaryTypeName", "src": "31040:7:96", "typeDescriptions": {}}}, "id": 13796, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "31040:10:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "31015:35:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 13807, "nodeType": "IfStatement", "src": "31011:102:96", "trueBody": {"expression": {"id": 13805, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 13798, "name": "scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13767, "src": "31052:13:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 13801, "name": "rateProvider", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13764, "src": "31090:12:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$25797", "typeString": "contract IRateProvider"}}, "id": 13802, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getRate", "nodeType": "MemberAccess", "referencedDeclaration": 25796, "src": "31090:20:96", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 13803, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "31090:22:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 13799, "name": "scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13767, "src": "31068:13:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13800, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mulDown", "nodeType": "MemberAccess", "referencedDeclaration": 17603, "src": "31068:21:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 13804, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "31068:45:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "31052:61:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13806, "nodeType": "ExpressionStatement", "src": "31052:61:96"}}, {"expression": {"id": 13808, "name": "scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13767, "src": "31130:13:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 13762, "id": 13809, "nodeType": "Return", "src": "31123:20:96"}]}, "id": 13811, "implemented": true, "kind": "function", "modifiers": [], "name": "_scalingFactor", "nodeType": "FunctionDefinition", "overrides": {"id": 13759, "nodeType": "OverrideSpecifier", "overrides": [], "src": "30684:8:96"}, "parameters": {"id": 13758, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13757, "mutability": "mutable", "name": "token0", "nodeType": "VariableDeclaration", "scope": 13811, "src": "30657:11:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 13756, "name": "bool", "nodeType": "ElementaryTypeName", "src": "30657:4:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "30656:13:96"}, "returnParameters": {"id": 13762, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13761, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13811, "src": "30702:7:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13760, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "30702:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "30701:9:96"}, "scope": 13906, "src": "30633:517:96", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [8406], "body": {"id": 13859, "nodeType": "Block", "src": "31238:245:96", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 13827, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 13821, "name": "rateProvider0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12213, "src": "31260:13:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$25797", "typeString": "contract IRateProvider"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IRateProvider_$25797", "typeString": "contract IRateProvider"}], "id": 13820, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "31252:7:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 13819, "name": "address", "nodeType": "ElementaryTypeName", "src": "31252:7:96", "typeDescriptions": {}}}, "id": 13822, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "31252:22:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 13825, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "31286:1:96", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 13824, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "31278:7:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 13823, "name": "address", "nodeType": "ElementaryTypeName", "src": "31278:7:96", "typeDescriptions": {}}}, "id": 13826, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "31278:10:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "31252:36:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 13837, "nodeType": "IfStatement", "src": "31248:96:96", "trueBody": {"expression": {"id": 13835, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 13828, "name": "spotPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13813, "src": "31290:9:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 13831, "name": "rateProvider0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12213, "src": "31320:13:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$25797", "typeString": "contract IRateProvider"}}, "id": 13832, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getRate", "nodeType": "MemberAccess", "referencedDeclaration": 25796, "src": "31320:21:96", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 13833, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "31320:23:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 13829, "name": "spotPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13813, "src": "31302:9:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13830, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mulDown", "nodeType": "MemberAccess", "referencedDeclaration": 17603, "src": "31302:17:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 13834, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "31302:42:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "31290:54:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13836, "nodeType": "ExpressionStatement", "src": "31290:54:96"}}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 13846, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 13840, "name": "rateProvider1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12215, "src": "31366:13:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$25797", "typeString": "contract IRateProvider"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IRateProvider_$25797", "typeString": "contract IRateProvider"}], "id": 13839, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "31358:7:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 13838, "name": "address", "nodeType": "ElementaryTypeName", "src": "31358:7:96", "typeDescriptions": {}}}, "id": 13841, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "31358:22:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 13844, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "31392:1:96", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 13843, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "31384:7:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 13842, "name": "address", "nodeType": "ElementaryTypeName", "src": "31384:7:96", "typeDescriptions": {}}}, "id": 13845, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "31384:10:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "31358:36:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 13856, "nodeType": "IfStatement", "src": "31354:96:96", "trueBody": {"expression": {"id": 13854, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 13847, "name": "spotPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13813, "src": "31396:9:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 13850, "name": "rateProvider1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12215, "src": "31426:13:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$25797", "typeString": "contract IRateProvider"}}, "id": 13851, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getRate", "nodeType": "MemberAccess", "referencedDeclaration": 25796, "src": "31426:21:96", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 13852, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "31426:23:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 13848, "name": "spotPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13813, "src": "31408:9:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13849, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "divDown", "nodeType": "MemberAccess", "referencedDeclaration": 17759, "src": "31408:17:96", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 13853, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "31408:42:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "31396:54:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13855, "nodeType": "ExpressionStatement", "src": "31396:54:96"}}, {"expression": {"id": 13857, "name": "spotPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13813, "src": "31467:9:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 13818, "id": 13858, "nodeType": "Return", "src": "31460:16:96"}]}, "id": 13860, "implemented": true, "kind": "function", "modifiers": [], "name": "_adjustPrice", "nodeType": "FunctionDefinition", "overrides": {"id": 13815, "nodeType": "OverrideSpecifier", "overrides": [], "src": "31211:8:96"}, "parameters": {"id": 13814, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13813, "mutability": "mutable", "name": "spotPrice", "nodeType": "VariableDeclaration", "scope": 13860, "src": "31178:17:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13812, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "31178:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "31177:19:96"}, "returnParameters": {"id": 13818, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13817, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13860, "src": "31229:7:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13816, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "31229:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "31228:9:96"}, "scope": 13906, "src": "31156:327:96", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 13904, "nodeType": "Block", "src": "31845:209:96", "statements": [{"expression": {"id": 13884, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 13868, "name": "rate0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13864, "src": "31855:5:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 13877, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 13871, "name": "rateProvider0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12213, "src": "31871:13:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$25797", "typeString": "contract IRateProvider"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IRateProvider_$25797", "typeString": "contract IRateProvider"}], "id": 13870, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "31863:7:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 13869, "name": "address", "nodeType": "ElementaryTypeName", "src": "31863:7:96", "typeDescriptions": {}}}, "id": 13872, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "31863:22:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 13875, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "31897:1:96", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 13874, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "31889:7:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 13873, "name": "address", "nodeType": "ElementaryTypeName", "src": "31889:7:96", "typeDescriptions": {}}}, "id": 13876, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "31889:10:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "31863:36:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"expression": {"id": 13881, "name": "GyroFixedPoint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18145, "src": "31928:14:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroFixedPoint_$18145_$", "typeString": "type(library GyroFixedPoint)"}}, "id": 13882, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ONE", "nodeType": "MemberAccess", "referencedDeclaration": 17493, "src": "31928:18:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13883, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "31863:83:96", "trueExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 13878, "name": "rateProvider0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12213, "src": "31902:13:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$25797", "typeString": "contract IRateProvider"}}, "id": 13879, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getRate", "nodeType": "MemberAccess", "referencedDeclaration": 25796, "src": "31902:21:96", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 13880, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "31902:23:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "31855:91:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13885, "nodeType": "ExpressionStatement", "src": "31855:91:96"}, {"expression": {"id": 13902, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 13886, "name": "rate1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13866, "src": "31956:5:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 13895, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 13889, "name": "rateProvider1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12215, "src": "31972:13:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$25797", "typeString": "contract IRateProvider"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IRateProvider_$25797", "typeString": "contract IRateProvider"}], "id": 13888, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "31964:7:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 13887, "name": "address", "nodeType": "ElementaryTypeName", "src": "31964:7:96", "typeDescriptions": {}}}, "id": 13890, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "31964:22:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 13893, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "31998:1:96", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 13892, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "31990:7:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 13891, "name": "address", "nodeType": "ElementaryTypeName", "src": "31990:7:96", "typeDescriptions": {}}}, "id": 13894, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "31990:10:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "31964:36:96", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"expression": {"id": 13899, "name": "GyroFixedPoint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18145, "src": "32029:14:96", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroFixedPoint_$18145_$", "typeString": "type(library GyroFixedPoint)"}}, "id": 13900, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ONE", "nodeType": "MemberAccess", "referencedDeclaration": 17493, "src": "32029:18:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13901, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "31964:83:96", "trueExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 13896, "name": "rateProvider1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12215, "src": "32003:13:96", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$25797", "typeString": "contract IRateProvider"}}, "id": 13897, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getRate", "nodeType": "MemberAccess", "referencedDeclaration": 25796, "src": "32003:21:96", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 13898, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "32003:23:96", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "31956:91:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13903, "nodeType": "ExpressionStatement", "src": "31956:91:96"}]}, "documentation": {"id": 13861, "nodeType": "StructuredDocumentation", "src": "31489:275:96", "text": "@notice Convenience function to fetch the two rates used for scaling the two tokens, as of rateProvider{0,1}.\n Note that these rates do *not* contain scaling to account for differences in the number of decimals. The rates\n themselves are always 18-decimals."}, "functionSelector": "702ec091", "id": 13905, "implemented": true, "kind": "function", "modifiers": [], "name": "getTokenRates", "nodeType": "FunctionDefinition", "parameters": {"id": 13862, "nodeType": "ParameterList", "parameters": [], "src": "31791:2:96"}, "returnParameters": {"id": 13867, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13864, "mutability": "mutable", "name": "rate0", "nodeType": "VariableDeclaration", "scope": 13905, "src": "31815:13:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13863, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "31815:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13866, "mutability": "mutable", "name": "rate1", "nodeType": "VariableDeclaration", "scope": 13905, "src": "31830:13:96", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13865, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "31830:7:96", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "31814:30:96"}, "scope": 13906, "src": "31769:285:96", "stateMutability": "view", "virtual": false, "visibility": "public"}], "scope": 13907, "src": "969:31087:96"}], "src": "178:31879:96"}, "bytecode": "6104a06040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9610120526706f05b59d3b20000610200819052610220526000610240523480156200005057600080fd5b506040516200608b3803806200608b833981016040819052620000739162000f68565b8160e001518260a001518360c0015184600001518060c001518160e001518260200151836040015184600001518280604051806040016040528060018152602001603160f81b81525085858a6101000151336001600160a01b031660001b806080818152505050806001600160a01b031660a0816001600160a01b031660601b815250505081600390805190602001906200011092919062000b65565b5080516200012690600490602084019062000b65565b505060058054601260ff1990911617905550815160209283012060c052805191012060e052507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61010052606090811b6001600160601b031916610140524294909401610160819052909201610180525050604080516002808252928101909152600091816020016020820280368337019050509050816060015181600081518110620001cf57fe5b60200260200101906001600160a01b031690816001600160a01b0316815250508160800151816001815181106200020257fe5b60200260200101906001600160a01b031690816001600160a01b0316815250506200023881620006a860201b62001bc31760201c565b60a08201516200024890620006b8565b81516040516309b2760f60e01b81526000916001600160a01b0316906309b2760f906200027b9060029060040162001154565b602060405180830381600087803b1580156200029657600080fd5b505af1158015620002ab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002d1919062000f4f565b83516040805160028082526060820183529394506001600160a01b03909216926366a9c7d2928592879290602083019080368337019050506040518463ffffffff1660e01b81526004016200032993929190620010ba565b600060405180830381600087803b1580156200034457600080fd5b505af115801562000359573d6000803e3d6000fd5b5050506101a082905250606080840180516001600160601b031990831b81166101c052608086015190921b9091166101e05251620003979062000741565b610260526080830151620003ab9062000741565b61028052505060408051808201909152600e81526d1b9bdd08185d5d1a1bdc9a5e995960921b602082015290506001600160a01b0383166200040b5760405162461bcd60e51b815260040162000402919062001169565b60405180910390fd5b50600b80546001600160a01b0319166001600160a01b039384161790558051600a8054602084015160409094015160ff1990911692151592909217610100600160801b0319166101006001600160781b0390941693909302929092176001600160801b03908116600160801b91909216021790556200049090821615156069620007ef565b600c80546001600160a01b0319166001600160a01b03928316179055620004bd90821615156078620007ef565b620004d782602001516200080060201b62001bd11760201c565b7ff468331437e1ec2fec64fc27f23a28b085a09e90f385338d4b58cb63860797776001604051620005099190620010af565b60405180910390a160208201516040808401519051636e70c2ef60e01b815273__GyroECLPMath__________________________92636e70c2ef9262000552926004016200119e565b60006040518083038186803b1580156200056b57600080fd5b505af415801562000580573d6000803e3d6000fd5b505050507f614fd1489cdee8181582fbbc1933d6870cd06c6f22d314b97a650ffa547c6ccd6001604051620005b69190620010af565b60405180910390a160208281015180518183015160408084015160608086015160809687015161032052610300526102e0919091526102c0929092526102a09290925281860151805180519086015182870151805197015194830151838501518488015160a086015160c0909601516104405261042095909552610400949094526103e0939093526103c0929092526103a093909352610380949094526103609390935261034052600d80546001600160a01b0319166001600160a01b03949094169390931790925580830151811b6001600160601b031990811661046052919092015190911b166104805262001296565b80620006b481620008eb565b5050565b620006cd64e8d4a5100082101560cb62000975565b620006e567016345785d8a000082111560ca62000975565b62000701816008546200098660201b62001cae1790919060201c565b6008556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc906200073690839062001236565b60405180910390a150565b600080826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156200077e57600080fd5b505afa15801562000793573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007b991906200107d565b60ff1690506000620007d8601283620009ac60201b62001cbc1760201c565b600a0a670de0b6b3a764000002925050505b919050565b81620006b457620006b481620009c4565b6200082f8160600151600013158015620008265750670de0b6b3a7640000826060015113155b610163620007ef565b6200085d8160400151600013158015620008265750670de0b6b3a764000082604001511315610163620007ef565b604080518082018252606083015181529082015160208201526000620008848280620009d6565b9050620008b4670de0b6b3a763fc188212801590620008ab5750670de0b6b3a76403e88213155b610164620007ef565b620008e68360800151600013158015620008dd57506a52b7d2dcc80cd2e4000000846080015113155b610168620007ef565b505050565b600281511015620008fc5762000972565b6000816000815181106200090c57fe5b602002602001015190506000600190505b8251811015620008e65760008382815181106200093657fe5b6020026020010151905062000967816001600160a01b0316846001600160a01b03161060656200097560201b60201c565b91506001016200091d565b50565b81620006b457620006b48162000a2d565b6000620009a58260568562000a8060201b62001cd2179092919060201c565b9392505050565b6000620009be83831115600162000975565b50900390565b62000972816223aca960e91b62000a95565b6000620009a5620009fe8360200151856020015162000af660201b62001ce81790919060201c565b8351855162000a199162000af6602090811b62001ce817901c565b62000b3760201b62001d241790919060201c565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6001600160401b03811b1992909216911b1790565b62461bcd60e51b600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fd5b600082820283158062000b1257508284828162000b0f57fe5b05145b62000b255762000b256000600362000975565b670de0b6b3a764000090059392505050565b60008282018183121562000b4e5783811262000b53565b838112155b620009a557620009a560008062000975565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928262000b9d576000855562000be8565b82601f1062000bb857805160ff191683800117855562000be8565b8280016001018555821562000be8579182015b8281111562000be857825182559160200191906001019062000bcb565b5062000bf692915062000bfa565b5090565b5b8082111562000bf6576000815560010162000bfb565b80516001600160a01b0381168114620007ea57600080fd5b600082601f83011262000c3a578081fd5b81516001600160401b0381111562000c4e57fe5b62000c63601f8201601f19166020016200123f565b81815284602083860101111562000c78578283fd5b62000c8b82602083016020870162001263565b949350505050565b60006060828403121562000ca5578081fd5b604051606081016001600160401b038111828210171562000cc257fe5b80604052508091508251801515811462000cdb57600080fd5b815260208301516001600160781b038116811462000cf857600080fd5b602082015260408301516001600160801b038116811462000d1857600080fd5b6040919091015292915050565b6000610120828403121562000d38578081fd5b60405160e081016001600160401b038111828210171562000d5557fe5b60405290508062000d67848462000f06565b815262000d78846040850162000f06565b60208201526080830151604082015260a0830151606082015260c0830151608082015260e083015160a082015261010083015160c08201525092915050565b600061012080838503121562000dcb578182fd5b62000dd6816200123f565b91505062000de48262000c11565b815260208201516001600160401b038082111562000e0157600080fd5b62000e0f8583860162000c29565b6020840152604084015191508082111562000e2957600080fd5b5062000e388482850162000c29565b60408301525062000e4c6060830162000c11565b606082015262000e5f6080830162000c11565b608082015260a082015160a082015260c082015160c082015260e082015160e082015261010062000e9281840162000c11565b9082015292915050565b600060a0828403121562000eae578081fd5b60405160a081016001600160401b038111828210171562000ecb57fe5b806040525080915082518152602083015160208201526040830151604082015260608301516060820152608083015160808201525092915050565b60006040828403121562000f18578081fd5b604080519081016001600160401b038111828210171562000f3557fe5b604052825181526020928301519281019290925250919050565b60006020828403121562000f61578081fd5b5051919050565b6000806040838503121562000f7b578081fd5b82516001600160401b038082111562000f92578283fd5b908401906102c0828703121562000fa7578283fd5b62000fb46101006200123f565b82518281111562000fc3578485fd5b62000fd18882860162000db7565b82525062000fe3876020850162000e9c565b602082015262000ff78760c0850162000d25565b60408201526200100b6101e0840162000c11565b60608201526200101f610200840162000c11565b608082015262001033610220840162000c11565b60a08201526200104887610240850162000c93565b60c08201526200105c6102a0840162000c11565b60e08201529350620010749150506020840162000c11565b90509250929050565b6000602082840312156200108f578081fd5b815160ff81168114620009a5578182fd5b80518252602090810151910152565b901515815260200190565b60006060820185835260206060818501528186518084526080860191508288019350845b81811015620011055784516001600160a01b031683529383019391830191600101620010de565b505084810360408601528551808252908201925081860190845b81811015620011465782516001600160a01b0316855293830193918301916001016200111f565b509298975050505050505050565b60208101600383106200116357fe5b91905290565b60006020825282518060208401526200118a81604085016020870162001263565b601f01601f19169190910160400192915050565b60006101c0820190508351825260208401516020830152604084015160408301526060840151606083015260808401516080830152620011e360a083018451620010a0565b6020830151620011f760e0840182620010a0565b5060408301516101208301526060830151610140830152608083015161016083015260a083015161018083015260c08301516101a08301529392505050565b90815260200190565b6040518181016001600160401b03811182821017156200125b57fe5b604052919050565b60005b838110156200128057818101518382015260200162001266565b8381111562001290576000848401525b50505050565b60805160a05160601c60c05160e05161010051610120516101405160601c61016051610180516101a0516101c05160601c6101e05160601c61020051610220516102405161026051610280516102a0516102c0516102e05161030051610320516103405161036051610380516103a0516103c0516103e0516104005161042051610440516104605160601c6104805160601c614c4a6200144160003980610b035280610c2d5280610c695280612bf45280612c265280612d6e525080610b5e5280610b9a5280610ff75280612b275280612b595280612d2452508061273c5250806127625250806127885250806127b05250806127d55250806126a95250806126ce5250806126f15250806127195250806125d852508061260252508061262c525080612656525080612680525080612d91525080612d4752505080613f0a525080613f3152508061137352806113ba5280612a3e52508061133352806113fa52806129f2525080610860525080611e9c525080611e785250806111b6525080611956525080611fb8525080611ffa525080611fd95250806111925250806110d75250614c4a6000f3fe608060405234801561001057600080fd5b50600436106102d65760003560e01c806376e54a461161018257806398d5fdca116100e9578063aaabadc5116100a2578063d505accf1161007c578063d505accf146105c8578063d5c096c4146105db578063dd62ed3e146105ee578063f89f27ed14610601576102d6565b8063aaabadc5146105b0578063abd13afe146105b8578063c0ff1a15146105c0576102d6565b806398d5fdca1461054f5780639b02cdde146105575780639d2c110c1461055f5780639ef3e37d14610572578063a457c2d71461058a578063a9059cbb1461059d576102d6565b8063851c1bb31161013b578063851c1bb314610509578063876f303b1461051c57806387ec681714610524578063893d20e8146105375780638d928af81461053f57806395d89b4114610547576102d6565b806376e54a46146104aa5780637be219a2146104bd5780637ecebe00146104d35780638002df18146104e6578063828a7c34146104f95780638456cb5914610501576102d6565b80633aeae0d311610241578063623a2e75116101fa5780636d785a87116101d45780636d785a8714610458578063702ec0911461046057806370a082311461047657806374f3b00914610489576102d6565b8063623a2e751461044057806362ced09214610448578063679aefce14610450576102d6565b80633aeae0d3146103cb5780633f4ba83a146103e057806344bbdb55146103e85780634a6b0b15146103fd57806355c67628146104175780636028bfd41461041f576102d6565b806323b872dd1161029357806323b872dd1461036d578063313ce567146103805780633644e5151461039557806338e9922e1461039d57806338fff2d0146103b057806339509351146103b8576102d6565b806306fdde03146102db578063095ea7b3146102f95780630e608b301461031957806316c38b3c1461032e57806318160ddd146103415780631c0de05114610356575b600080fd5b6102e3610616565b6040516102f09190614a36565b60405180910390f35b61030c61030736600461442d565b6106ac565b6040516102f091906149c9565b61032c610327366004614308565b6106c3565b005b61032c61033c366004614458565b610774565b610349610788565b6040516102f091906149ec565b61035e61078e565b6040516102f0939291906149d4565b61030c61037b366004614378565b6107b7565b61038861082d565b6040516102f09190614ba5565b610349610836565b61032c6103ab36600461473f565b610845565b61034961085e565b61030c6103c636600461442d565b610882565b6103d36108bd565b6040516102f09190614a89565b61032c610908565b6103f06109fd565b6040516102f0919061488d565b610405610a0c565b6040516102f096959493929190614a0c565b610349610a67565b61043261042d366004614472565b610a74565b6040516102f0929190614b57565b610349610aa5565b6103f0610b01565b610349610b25565b6103f0610b4a565b610468610b59565b6040516102f0929190614b70565b610349610484366004614308565b610cfe565b61049c610497366004614472565b610d1d565b6040516102f09291906148b4565b61032c6104b83660046145c9565b610dad565b6104c5610ed4565b6040516102f0929190614ae9565b6103496104e1366004614308565b610ef4565b61032c6104f4366004614308565b610f0f565b6103f0610ff5565b61032c611019565b61034961051736600461457e565b6110d1565b61034961112a565b610432610532366004614472565b61116b565b6103f0611190565b6103f06111b4565b6102e36111d8565b610349611239565b610349611304565b61034961056d366004614648565b61130a565b61057a6116a9565b6040516102f09493929190614b7e565b61030c61059836600461442d565b61181b565b61030c6105ab36600461442d565b611859565b6103f0611866565b6103f0611870565b61034961187f565b61032c6105d63660046143b8565b611927565b61049c6105e9366004614472565b611a97565b6103496105fc366004614340565b611b7c565b610609611bb9565b6040516102f091906148a1565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106a25780601f10610677576101008083540402835291602001916106a2565b820191906000526020600020905b81548152906001019060200180831161068557829003601f168201915b5050505050905090565b60006106b9338484611d4d565b5060015b92915050565b600b5460408051808201909152600e81526d1b9bdd08185d5d1a1bdc9a5e995960921b6020820152906001600160a01b0316331461071d5760405162461bcd60e51b81526004016107149190614a36565b60405180910390fd5b50600b80546001600160a01b0319166001600160a01b0383161790556040517fb8fd9afc34c38fcd13b9a3b7646482eb1fddcefb40af2c70609972816eba32089061076990839061488d565b60405180910390a150565b61077c611daf565b61078581611ddd565b50565b60025490565b600080600061079b611e59565b1592506107a6611e76565b91506107b0611e9a565b9050909192565b6000806107c48533611b7c565b90506107e8336001600160a01b03871614806107e05750838210155b61019e611ebe565b6107f3858585611ecc565b336001600160a01b0386161480159061080e57506000198114155b15610820576108208533858403611d4d565b60019150505b9392505050565b60055460ff1690565b6000610840611fb4565b905090565b61084d611daf565b610855612072565b61078581612087565b7f000000000000000000000000000000000000000000000000000000000000000090565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916106b99185906108b890866120f0565b611d4d565b6108c56141c7565b5060408051606081018252600a5460ff81161515825261010081046001600160781b03166020830152600160801b90046001600160801b03169181019190915290565b600c546040805180820190915260118152703737ba103830bab9b29036b0b730b3b2b960791b6020820152906001600160a01b031633146109c75760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561098c578181015183820152602001610974565b50505050905090810190601f1680156109b95780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506109d2600061077c565b6040517f215385c8bfc731925ec8068d7baa50f6b6f34417cc7804f7273dc2c0b3db279090600090a1565b600d546001600160a01b031681565b60008060008060008060006008549050610a2581612102565b9650610a308161210e565b9550610a3b8161211b565b9450610a4681612128565b9350610a5181612135565b9250610a5c81612142565b915050909192939495565b6000610840600854612142565b60006060610a848651600261214f565b610a998989898989898961215c6122ca612348565b97509795505050505050565b600080610ab061187f565b90506000610abc610788565b9050600080610acd6009548561245b565b50919350915060009050610aeb82610ae586866124c4565b906124c4565b9050610af785826124dc565b9550505050505090565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000610840610b32610788565b610b44610b3d61187f565b6002612536565b906124dc565b600b546001600160a01b031681565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610b9857670de0b6b3a7640000610c29565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663679aefce6040518163ffffffff1660e01b815260040160206040518083038186803b158015610bf157600080fd5b505afa158015610c05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c299190614757565b91507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610c6757670de0b6b3a7640000610cf8565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663679aefce6040518163ffffffff1660e01b815260040160206040518083038186803b158015610cc057600080fd5b505afa158015610cd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf89190614757565b90509091565b6001600160a01b0381166000908152602081905260409020545b919050565b60608088610d47610d2c6111b4565b6001600160a01b0316336001600160a01b03161460cd611ebe565b610d5c610d5261085e565b82146101f4611ebe565b610d658761255a565b6000806000610d798d8d8d8d8d8d8d61215c565b925092509250610d898c846125bc565b610d92826122ca565b610d9b816122ca565b909c909b509950505050505050505050565b600b5460408051808201909152600e81526d1b9bdd08185d5d1a1bdc9a5e995960921b6020820152906001600160a01b03163314610dfe5760405162461bcd60e51b81526004016107149190614a36565b50600a5460408051808201909152601081526f1c1bdbdb081a5cc81d5b98d85c1c195960821b60208201529060ff16610e4a5760405162461bcd60e51b81526004016107149190614a36565b508051600a8054602084015160408086015160ff19909316941515949094176fffffffffffffffffffffffffffffff0019166101006001600160781b0390921691909102176001600160801b03908116600160801b919092160217815590517f2abf5970d7bc1a2b36eaae52dd2cc353edb0337c7284ef8a01973081b4e044249161076991614abe565b610edc6141e7565b610ee4614216565b610eec6125c6565b915091509091565b6001600160a01b031660009081526006602052604090205490565b600c546040805180820190915260118152703737ba103830bab9b29036b0b730b3b2b960791b60208201526001600160a01b0390911690338214610f945760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561098c578181015183820152602001610974565b50600c80546001600160a01b0319166001600160a01b03848116918217909255604080519284168352602083019190915280517f1ffccd1fa96f4fb3415df8048a0fd107344e262d2d246c85105e2a3f8f3e81989281900390910190a15050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600c546040805180820190915260118152703737ba103830bab9b29036b0b730b3b2b960791b6020820152906001600160a01b0316331461109b5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561098c578181015183820152602001610974565b506110a6600161077c565b6040517f681eace576127d0553b224436a09801fb47d042942cbff59d7d4ff04d8fa03d790600090a1565b604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091526001600160e01b03198416828401528251602481840301815260449092019092528051910120919050565b600080611135610788565b905060008061114d60095461114861187f565b61245b565b509193509150611163905081610ae585856124c4565b935050505090565b6000606061117b8651600261214f565b610a99898989898989896127fc61296b612348565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106a25780601f10610677576101008083540402835291602001916106a2565b6000806112446129cd565b90506000806112516125c6565b91509150600073__GyroECLPMath__________________________63d83ca8628585856040518463ffffffff1660e01b8152600401611292939291906148d9565b60206040518083038186803b1580156112aa57600080fd5b505af41580156112be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e29190614757565b90506112f084828585612a83565b94506112fb85612b23565b94505050505090565b60095490565b6000611314612072565b8360800151611324610d2c6111b4565b61132f610d5261085e565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031686602001516001600160a01b03161480156113ab57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031686604001516001600160a01b0316145b156113b857506001611449565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031686602001516001600160a01b031614801561143257507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031686604001516001600160a01b0316145b1561143f57506000611449565b6114496079612cc3565b600061145482612d16565b905060006114628315612d16565b905061146e8783612e43565b965061147a8682612e43565b95506000611489888886612e4f565b90506000806114966125c6565b915091506114a261425f565b60008073__GyroECLPMath__________________________6378ace8578787876040518463ffffffff1660e01b81526004016114e0939291906148d9565b604080518083038186803b1580156114f757600080fd5b505af415801561150b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152f91906145a6565b6040805180820190915260029091028201815260208101919091529250600091506115579050565b8c51600181111561156457fe5b1415611610576000611582611577610a67565b60608f015190612ee9565b90506115a461159e828f60600151612f3e90919063ffffffff16565b88612e43565b60608e015260006115b98e878b888888612f54565b90507f4e1d56f7310a8c32b2267f756b19ba65019b4890068ce114a25009abe54de5ba8684836040516115ee9392919061494b565b60405180910390a16116008188612ff7565b9a505050505050505050506116a1565b61161e8c6060015186612e43565b60608d015260006116338d868a878787613003565b90507f4e1d56f7310a8c32b2267f756b19ba65019b4890068ce114a25009abe54de5ba8583836040516116689392919061494b565b60405180910390a161167a818861304b565b905061169661168f61168a610a67565b613057565b829061307d565b995050505050505050505b509392505050565b600d546000908190819081906116d0906001600160a01b03163063045434c560e41b6130e3565b600d546116ee906001600160a01b03163063045434c560e41b61310a565b600d546040516321f8a72160e01b81526001600160a01b03909116906321f8a7219061172e906c4759524f5f545245415355525960981b906004016149ec565b60206040518083038186803b15801561174657600080fd5b505afa15801561175a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061177e9190614324565b600d546040516321f8a72160e01b81526001600160a01b03909116906321f8a721906117bd906b42414c5f545245415355525960a01b906004016149ec565b60206040518083038186803b1580156117d557600080fd5b505afa1580156117e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061180d9190614324565b935093509350935090919293565b6000806118283385611b7c565b90508083106118425761183d33856000611d4d565b61184f565b61184f3385858403611d4d565b5060019392505050565b60006106b9338484611ecc565b6000610840613138565b600c546001600160a01b031681565b60008061188a6129cd565b90506000806118976125c6565b604051636c1e543160e11b8152919350915073__GyroECLPMath__________________________9063d83ca862906118d7908690869086906004016148d9565b60206040518083038186803b1580156118ef57600080fd5b505af4158015611903573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111639190614757565b6119358442111560d1611ebe565b6001600160a01b0380881660008181526006602090815260408083205481517f00000000000000000000000000000000000000000000000000000000000000008185015280830195909552948b166060850152608084018a905260a0840185905260c08085018a90528151808603909101815260e090940190528251920191909120906119c1826131b2565b9050600060018288888860405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015611a1f573d6000803e3d6000fd5b5050604051601f1901519150611a6190506001600160a01b03821615801590611a5957508b6001600160a01b0316826001600160a01b0316145b6101f8611ebe565b6001600160a01b038b166000908152600660205260409020600185019055611a8a8b8b8b611d4d565b5050505050505050505050565b60608088611aa6610d2c6111b4565b611ab1610d5261085e565b611ab9612072565b6000611ac3610788565b611b3357611ad38b8b8b886131fe565b94509050611ae8620f424082101560cc611ebe565b611af66000620f424061338e565b611b0589620f4240830361338e565b611b0e8461296b565b6040805160028082526060820183529091602083019080368337019050509250611b6e565b611b3c8861255a565b611b4b8b8b8b8b8b8b8b6127fc565b90955093509050611b5c898261338e565b611b658461296b565b611b6e836122ca565b505097509795505050505050565b6000611b866111b4565b6001600160a01b0316826001600160a01b03161415611ba857506000196106bd565b611bb28383613398565b90506106bd565b60606108406133c3565b80611bcd81613432565b5050565b611bfd8160600151600013158015611bf55750670de0b6b3a7640000826060015113155b6101636134ab565b611c288160400151600013158015611bf55750670de0b6b3a7640000826040015113156101636134ab565b604080518082018252606083015181529082015160208201526000611c4d82806134b9565b9050611c7a670de0b6b3a763fc188212801590611c725750670de0b6b3a76403e88213155b6101646134ab565b611ca98360800151600013158015611ca157506a52b7d2dcc80cd2e4000000846080015113155b6101686134ab565b505050565b600061082683836056611cd2565b6000611ccc838311156001611ebe565b50900390565b67ffffffffffffffff811b1992909216911b1790565b6000828202831580611d02575082848281611cff57fe5b05145b611d1257611d1260006003611ebe565b670de0b6b3a764000090059392505050565b600082820181831215611d3957838112611d3e565b838112155b61082657610826600080611ebe565b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6000611dc66000356001600160e01b0319166110d1565b9050610785611dd582336134ec565b610191611ebe565b8015611dfd57611df8611dee611e76565b4210610193611ebe565b611e12565b611e12611e08611e9a565b42106101a9611ebe565b6007805482151560ff19909116811790915560408051918252517f9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be649181900360200190a150565b6000611e63611e9a565b42118061084057505060075460ff161590565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b81611bcd57611bcd81612cc3565b611ee36001600160a01b0384161515610198611ebe565b611efa6001600160a01b0383161515610199611ebe565b611f05838383611ca9565b6001600160a01b038316600090815260208190526040902054611f2b90826101a06135ee565b6001600160a01b038085166000908152602081905260408082209390935590841681522054611f5a90826120f0565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612021613604565b3060405160200180868152602001858152602001848152602001838152602001826001600160a01b031681526020019550505050505060405160208183030381529060405280519060200120905090565b61208561207d611e59565b610192611ebe565b565b61209a64e8d4a5100082101560cb611ebe565b6120b067016345785d8a000082111560ca611ebe565b6008546120bd9082611cae565b6008556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc906107699083906149ec565b60008282016108268482101583611ebe565b60006106bd8282613608565b60006106bd826016613608565b60006106bd82602c61362f565b60006106bd82604b613639565b60006106bd826055613641565b60006106bd82605661364b565b611bcd8183146067611ebe565b600060608060008061216c6125c6565b91509150612178611e59565b1561227d57604051636c1e543160e11b815260009073__GyroECLPMath__________________________9063d83ca862906121bb908d90879087906004016148d9565b60206040518083038186803b1580156121d357600080fd5b505af41580156121e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061220b9190614757565b905061221681613659565b6122208a88613686565b90965094506122398187612232610788565b60006136d2565b60098190556040517fe1d39caf039c7dc6f364b1e29d1e67c4e330003a43f4991d50cf3e8840d95eac9161226f91849190614b70565b60405180910390a150612293565b6122878987613686565b60001960095590955093505b6040805160028082526060820183528792879291906020830190803683370190505094509450945050509750975097945050505050565b6122f1816000815181106122da57fe5b60200260200101516122ec6001612d16565b6124dc565b816000815181106122fe57fe5b60200260200101818152505061232c8160018151811061231a57fe5b60200260200101516122ec6000612d16565b8160018151811061233957fe5b60200260200101818152505050565b333014612406576000306001600160a01b031660003660405161236c92919061487d565b6000604051808303816000865af19150503d80600081146123a9576040519150601f19603f3d011682016040523d82523d6000602084013e6123ae565b606091505b5050905080600081146123bd57fe5b60046000803e6000516001600160e01b0319166343adbafb60e01b81146123e8573d6000803e3d6000fd5b506020600460003e604060205260243d03602460403e601c3d016000f35b61240f8661255a565b6000806124258b8b8b8b8b8b8b8b63ffffffff16565b5091509150612437818463ffffffff16565b8051601f1982018390526343adbafb603f1983015260200260231982016044820181fd5b60008060008060008060008061246f6116a9565b93509350935093508360001415612494576000975087965090945092506124bb915050565b6000806124ab8c8c6124a4610788565b898961372a565b909a509850929650909450505050505b92959194509250565b60008282018381101561082657610826600080611ebe565b6000816124ef576124ef60006004611ebe565b826124fc575060006106bd565b670de0b6b3a76400008381029084828161251257fe5b04146125245761252460006005611ebe565b82818161252d57fe5b04949350505050565b600082820261082684158061255357508385838161255057fe5b04145b6003611ebe565b6125818160008151811061256a57fe5b602002602001015161257c6001612d16565b6137c5565b8160008151811061258e57fe5b60200260200101818152505061232c816001815181106125aa57fe5b602002602001015161257c6000612d16565b611bcd82826137fe565b6125ce6141e7565b6125d6614216565b7f00000000000000000000000000000000000000000000000000000000000000006080808401919091527f00000000000000000000000000000000000000000000000000000000000000006060808501919091527f00000000000000000000000000000000000000000000000000000000000000006040808601919091527f00000000000000000000000000000000000000000000000000000000000000006020808701919091527f000000000000000000000000000000000000000000000000000000000000000086528451858201517f0000000000000000000000000000000000000000000000000000000000000000818401527f000000000000000000000000000000000000000000000000000000000000000090527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000090527f000000000000000000000000000000000000000000000000000000000000000060c08501527f000000000000000000000000000000000000000000000000000000000000000060a08501527f0000000000000000000000000000000000000000000000000000000000000000928401929092527f0000000000000000000000000000000000000000000000000000000000000000908301527f0000000000000000000000000000000000000000000000000000000000000000908201529091565b600060608060008061280c6125c6565b91509150600073__GyroECLPMath__________________________63d83ca8628b85856040518463ffffffff1660e01b815260040161284d939291906148d9565b60206040518083038186803b15801561286557600080fd5b505af4158015612879573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061289d9190614757565b90506128a881613659565b6000806128b58c8a6138b5565b600a54919350915060ff16156128df576128df826128d28f610cfe565b6128da610788565b6138ef565b6128f383836128ec610788565b60016136d2565b60098190556040517fe1d39caf039c7dc6f364b1e29d1e67c4e330003a43f4991d50cf3e8840d95eac9161292991869190614b70565b60405180910390a16040805160028082526060820183528492849291906020830190803683370190505097509750975050505050509750975097945050505050565b6129928160008151811061297b57fe5b602002602001015161298d6001612d16565b61307d565b8160008151811061299f57fe5b60200260200101818152505061232c816001815181106129bb57fe5b602002602001015161298d6000612d16565b6040805160028082526060808301845292602083019080368337019050509050612a207f0000000000000000000000000000000000000000000000000000000000000000612a1b6001612d16565b613a01565b81600081518110612a2d57fe5b602002602001018181525050612a677f0000000000000000000000000000000000000000000000000000000000000000612a1b6000612d16565b81600181518110612a7457fe5b60200260200101818152505090565b600073__GyroECLPMath__________________________63c7fe78d0868585612aab89613aa8565b6040518563ffffffff1660e01b8152600401612aca949392919061490a565b60206040518083038186803b158015612ae257600080fd5b505af4158015612af6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b1a9190614757565b95945050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615612bf257612bef7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663679aefce6040518163ffffffff1660e01b815260040160206040518083038186803b158015612bb057600080fd5b505afa158015612bc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612be89190614757565b83906137c5565b91505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615612cbf57612cbc7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663679aefce6040518163ffffffff1660e01b815260040160206040518083038186803b158015612c7d57600080fd5b505afa158015612c91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cb59190614757565b83906124dc565b91505b5090565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b60008060008315612d6b57507f000000000000000000000000000000000000000000000000000000000000000090507f0000000000000000000000000000000000000000000000000000000000000000612db1565b507f000000000000000000000000000000000000000000000000000000000000000090507f00000000000000000000000000000000000000000000000000000000000000005b6001600160a01b0382161561082657612e3b826001600160a01b031663679aefce6040518163ffffffff1660e01b815260040160206040518083038186803b158015612dfc57600080fd5b505afa158015612e10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e349190614757565b82906137c5565b949350505050565b600061082683836137c5565b60408051600280825260608083018452926020830190803683370190505090508115612eae578381600081518110612e8357fe5b6020026020010181815250508281600181518110612e9d57fe5b602002602001018181525050610826565b8281600081518110612ebc57fe5b6020026020010181815250508381600181518110612ed657fe5b6020026020010181815250509392505050565b6000828202831580612f03575082848281612f0057fe5b04145b612f1357612f1360006003611ebe565b80612f225760009150506106bd565b670de0b6b3a764000060001982015b0460010191505092915050565b600082821115611ccc57611ccc60006001611ebe565b60608601516040516330ffa11b60e11b815260009173__GyroECLPMath__________________________916361ff423691612f9c918a91908a908a908a908a9060040161497b565b60206040518083038186803b158015612fb457600080fd5b505af4158015612fc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fec9190614757565b979650505050505050565b600061082683836124dc565b6060860151604051633b18ce7b60e21b815260009173__GyroECLPMath__________________________9163ec6339ec91612f9c918a91908a908a908a908a9060040161497b565b6000610826838361307d565b6000670de0b6b3a7640000821061306f5760006106bd565b50670de0b6b3a76400000390565b6000816130905761309060006004611ebe565b8261309d575060006106bd565b670de0b6b3a7640000838102908482816130b357fe5b04146130d7576130d7670de0b6b3a76400008583816130ce57fe5b04146005611ebe565b826001820381612f3157fe5b6000612e3b847550524f544f434f4c5f535741505f4645455f5045524360501b8486613aec565b6000612e3b847f50524f544f434f4c5f4645455f4759524f5f504f5254494f4e000000000000008486613aec565b60006131426111b4565b6001600160a01b031663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b15801561317a57600080fd5b505afa15801561318e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108409190614324565b60006131bc611fb4565b82604051602001808061190160f01b81525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b60006060600061320d84613d99565b9050613228600082600381111561322057fe5b1460ce611ebe565b600061323385613db8565b90506132418151600261214f565b61324a8161255a565b6000806132556125c6565b91509150600073__GyroECLPMath__________________________63d83ca8628585856040518463ffffffff1660e01b8152600401613296939291906148d9565b60206040518083038186803b1580156132ae57600080fd5b505af41580156132c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132e69190614757565b90507faf65f1a72bf4f8bc48e8153858e1f7b307ce39c88361a677c0a79c2a1ae571ef8160405161331791906149ec565b60405180910390a1600061332d85838686612a83565b9050600061337561335b838860008151811061334557fe5b60200260200101516137c590919063ffffffff16565b8760018151811061336857fe5b60200260200101516120f0565b60099390935550909b939a509298505050505050505050565b611bcd8282613e6c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b604080516002808252606080830184529260009291906020830190803683370190505090506133f26001613f01565b816000815181106133ff57fe5b6020026020010181815250506134156000613f01565b8160018151811061342257fe5b6020908102919091010152905090565b60028151101561344157610785565b60008160008151811061345057fe5b602002602001015190506000600190505b8251811015611ca957600083828151811061347857fe5b602002602001015190506134a1816001600160a01b0316846001600160a01b0316106065611ebe565b9150600101613461565b81611bcd57611bcd81613f55565b60006108266134d983602001518560200151611ce890919063ffffffff16565b835185516134e691611ce8565b90611d24565b600073ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b61350b611190565b6001600160a01b031614158015613526575061352683613f65565b1561354e57613533611190565b6001600160a01b0316336001600160a01b03161490506106bd565b613556613138565b6001600160a01b0316639be2a8848484306040518463ffffffff1660e01b815260040180848152602001836001600160a01b03168152602001826001600160a01b03168152602001935050505060206040518083038186803b1580156135bb57600080fd5b505afa1580156135cf573d6000803e3d6000fd5b505050506040513d60208110156135e557600080fd5b505190506106bd565b60006135fd8484111583611ebe565b5050900390565b4690565b600082821c623fffff16621fffff81136136225780612e3b565b623fffff19179392505050565b1c637fffffff1690565b1c6103ff1690565b1c60019081161490565b1c67ffffffffffffffff1690565b60008060008061366b6009548661245b565b935093509350935061367f84848484613f97565b5050505050565b60006060600061369584613d99565b905060018160038111156136a557fe5b14156136bf576136b58585613fbd565b90935091506136ca565b6136ca610150612cc3565b509250929050565b600081156137045760006136f0846136ea8888612ee9565b9061307d565b90506136fc86826124c4565b915050612e3b565b600061371484610b4488886137c5565b90506137208682612f3e565b9695505050505050565b60008086861161373f575060009050806137bb565b600061375f856137596137528a8c612f3e565b89906137c5565b906137c5565b90506000613777613770898b612f3e565b87906137c5565b905060006137858983612f3e565b9050600061379384836124dc565b905060006137a188836137c5565b905060006137af8383612f3e565b91975090955050505050505b9550959350505050565b60008282028315806137df5750828482816137dc57fe5b04145b6137ef576137ef60006003611ebe565b670de0b6b3a76400008161252d565b6138156001600160a01b038316151561019b611ebe565b61382182600083611ca9565b6001600160a01b03821660009081526020819052604090205461384790826101a16135ee565b6001600160a01b03831660009081526020819052604090205560025461386d9082613fef565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6000606060006138c484613d99565b905060038160038111156138d457fe5b14156138e4576136b58585613ffd565b6136ca610136612cc3565b60408051606081018252600a5460ff81161515825261010081046001600160781b031660208301819052600160801b9091046001600160801b0316928201929092529061393c85856124c4565b11156040518060400160405280601a81526020017f6f7665722061646472657373206c697175696469747920636170000000000000815250906139925760405162461bcd60e51b81526004016107149190614a36565b5060408101516001600160801b03166139ab85846124c4565b11156040518060400160405280601981526020017f6f76657220676c6f62616c206c697175696469747920636170000000000000008152509061367f5760405162461bcd60e51b81526004016107149190614a36565b6000806000613a0e6111b4565b6001600160a01b031663b05f8e48613a2461085e565b876040518363ffffffff1660e01b8152600401613a429291906149f5565b60806040518083038186803b158015613a5a57600080fd5b505afa158015613a6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a92919061476f565b505081810194509092509050612b1a83856137c5565b6000600160ff1b8210612cbf5760405162461bcd60e51b8152600401808060200182810382526028815260200180614bed6028913960400191505060405180910390fd5b6040805160208082018690526001600160a01b03808516838501528351808403850181526060840180865281519184019190912063696eb37560e01b909152606484018190529351600094939189169263696eb3759260848082019391829003018186803b158015613b5d57600080fd5b505afa158015613b71573d6000803e3d6000fd5b505050506040513d6020811015613b8757600080fd5b505115613c0757856001600160a01b031663bd02d0f5826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613bd257600080fd5b505afa158015613be6573d6000803e3d6000fd5b505050506040513d6020811015613bfc57600080fd5b50519150612e3b9050565b6040805160208082018890528183018790528251808303840181526060830180855281519183019190912063696eb37560e01b9091526064830181905292516001600160a01b038a169263696eb375926084808301939192829003018186803b158015613c7357600080fd5b505afa158015613c87573d6000803e3d6000fd5b505050506040513d6020811015613c9d57600080fd5b505115613d1e57866001600160a01b031663bd02d0f5826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613ce857600080fd5b505afa158015613cfc573d6000803e3d6000fd5b505050506040513d6020811015613d1257600080fd5b50519250612e3b915050565b866001600160a01b031663bd02d0f5876040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613d6257600080fd5b505afa158015613d76573d6000803e3d6000fd5b505050506040513d6020811015613d8c57600080fd5b5051979650505050505050565b6000818060200190516020811015613db057600080fd5b505192915050565b6060818060200190516040811015613dcf57600080fd5b815160208301805160405192949293830192919084640100000000821115613df657600080fd5b908301906020820185811115613e0b57600080fd5b8251866020820283011164010000000082111715613e2857600080fd5b82525081516020918201928201910280838360005b83811015613e55578181015183820152602001613e3d565b505050509190910160405250929695505050505050565b613e7860008383611ca9565b600254613e8590826120f0565b6002556001600160a01b038216600090815260208190526040902054613eab90826120f0565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600081613f2e577f00000000000000000000000000000000000000000000000000000000000000006106bd565b507f0000000000000000000000000000000000000000000000000000000000000000919050565b610785816223aca960e91b614022565b6000613f77631c74c91760e11b6110d1565b8214806106bd5750613f8f6350dd6ed960e01b6110d1565b909114919050565b8315613fa757613fa7828561338e565b8215613fb757613fb7818461338e565b50505050565b600060606000613fcc84614083565b90506000613fe28683613fdd610788565b6140a5565b9196919550909350505050565b6000610826838360016135ee565b60006060600061400c84614083565b90506000613fe2868361401d610788565b61412b565b62461bcd60e51b600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fd5b600081806020019051604081101561409a57600080fd5b506020015192915050565b6060835167ffffffffffffffff811180156140bf57600080fd5b506040519080825280602002602001820160405280156140e9578160200160208202803683370190505b50905060005b84518110156116a15761410c83610b448688858151811061334557fe5b82828151811061411857fe5b60209081029190910101526001016140ef565b6060835167ffffffffffffffff8111801561414557600080fd5b5060405190808252806020026020018201604052801561416f578160200160208202803683370190505b50905060005b84518110156116a1576141a8836136ea8688858151811061419257fe5b6020026020010151612ee990919063ffffffff16565b8282815181106141b457fe5b6020908102919091010152600101614175565b604080516060810182526000808252602082018190529181019190915290565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b6040518060e0016040528061422961425f565b815260200161423661425f565b815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806040016040528060008152602001600081525090565b8035610d1881614bd7565b80358015158114610d1857600080fd5b600082601f8301126142a4578081fd5b813567ffffffffffffffff8111156142b857fe5b6142cb601f8201601f1916602001614bb3565b8181528460208386010111156142df578283fd5b816020850160208301379081016020019190915292915050565b803560028110610d1857600080fd5b600060208284031215614319578081fd5b813561082681614bd7565b600060208284031215614335578081fd5b815161082681614bd7565b60008060408385031215614352578081fd5b823561435d81614bd7565b9150602083013561436d81614bd7565b809150509250929050565b60008060006060848603121561438c578081fd5b833561439781614bd7565b925060208401356143a781614bd7565b929592945050506040919091013590565b600080600080600080600060e0888a0312156143d2578283fd5b87356143dd81614bd7565b965060208801356143ed81614bd7565b95506040880135945060608801359350608088013560ff81168114614410578384fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561443f578182fd5b823561444a81614bd7565b946020939093013593505050565b600060208284031215614469578081fd5b61082682614284565b600080600080600080600060e0888a03121561448c578081fd5b87359650602088013561449e81614bd7565b955060408801356144ae81614bd7565b9450606088013567ffffffffffffffff808211156144ca578283fd5b818a0191508a601f8301126144dd578283fd5b8135818111156144e957fe5b602081026144f960208201614bb3565b80838252602082019150602086018f6020858901011115614518578788fd5b8796505b8487101561453b5780358352600196909601956020928301920161451c565b50985050505060808a0135945060a08a0135935060c08a0135915080821115614562578283fd5b5061456f8a828b01614294565b91505092959891949750929550565b60006020828403121561458f578081fd5b81356001600160e01b031981168114610826578182fd5b600080604083850312156145b8578182fd5b505080516020909101519092909150565b6000606082840312156145da578081fd5b6040516060810181811067ffffffffffffffff821117156145f757fe5b60405261460383614284565b815260208301356001600160781b038116811461461e578283fd5b602082015260408301356001600160801b038116811461463c578283fd5b60408201529392505050565b60008060006060848603121561465c578081fd5b833567ffffffffffffffff80821115614673578283fd5b8186019150610120808389031215614689578384fd5b61469281614bb3565b905061469d836142f9565b81526146ab60208401614279565b60208201526146bc60408401614279565b6040820152606083013560608201526080830135608082015260a083013560a08201526146eb60c08401614279565b60c08201526146fc60e08401614279565b60e08201526101008084013583811115614714578586fd5b6147208a828701614294565b9183019190915250976020870135975060409096013595945050505050565b600060208284031215614750578081fd5b5035919050565b600060208284031215614768578081fd5b5051919050565b60008060008060808587031215614784578182fd5b84519350602085015192506040850151915060608501516147a481614bd7565b939692955090935050565b6000815180845260208085019450808401835b838110156147de578151875295820195908201906001016147c2565b509495945050505050565b6147f482825161486e565b6020810151614806604084018261486e565b5060408101516080830152606081015160a0830152608081015160c083015260a081015160e083015260c08101516101008301525050565b80518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b80518252602090810151910152565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b60006020825261082660208301846147af565b6000604082526148c760408301856147af565b8281036020840152612b1a81856147af565b60006101e08083526148ed818401876147af565b9150506148fd602083018561483e565b612e3b60c08301846147e9565b600061020080835261491e818401886147af565b91505061492e602083018661483e565b61493b60c08301856147e9565b826101e083015295945050505050565b60006080825261495e60808301866147af565b905061496d602083018561486e565b826060830152949350505050565b600061026080835261498f8184018a6147af565b91505086602083015285151560408301526149ad606083018661483e565b6149bb6101008301856147e9565b612fec61022083018461486e565b901515815260200190565b92151583526020830191909152604082015260600190565b90815260200190565b9182526001600160a01b0316602082015260400190565b9586526020860194909452604085019290925260608401521515608083015260a082015260c00190565b6000602080835283518082850152825b81811015614a6257858101830151858201604001528201614a46565b81811115614a735783604083870101525b50601f01601f1916929092016040019392505050565b8151151581526020808301516001600160781b0316908201526040918201516001600160801b03169181019190915260600190565b905460ff811615158252600881901c6001600160781b0316602083015260801c604082015260600190565b6101c08101614af8828561483e565b614b0660a08301845161486e565b6020830151614b1860e084018261486e565b5060408301516101208301526060830151610140830152608083015161016083015260a083015161018083015260c08301516101a08301529392505050565b600083825260406020830152612e3b60408301846147af565b918252602082015260400190565b93845260208401929092526001600160a01b03908116604084015216606082015260800190565b60ff91909116815260200190565b60405181810167ffffffffffffffff81118282101715614bcf57fe5b604052919050565b6001600160a01b038116811461078557600080fdfe53616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536a26469706673582212203f5d826e9b2afa5dca5e823004707a42ba62b3e44d829535e63255bfe795c28964736f6c63430007060033", "bytecodeSha1": "7c391a23577e76b7634b90bae21c175ff5b06ead", "compiler": {"evm_version": "berlin", "optimizer": {"enabled": true, "runs": 200}, "version": "0.7.6+commit.7338295f"}, "contractName": "GyroECLPPool", "coverageMap": {"branches": {"1": {"BalancerPoolToken.decreaseAllowance": {"305": [3611, 3637, false]}, "BalancerPoolToken.transferFrom": {"303": [3030, 3050, false], "304": [3054, 3085, false]}}, "112": {}, "115": {}, "117": {}, "118": {"GyroConfigHelpers._getPoolSetting": {"313": [1203, 1237, false], "314": [1400, 1430, false]}}, "119": {}, "120": {}, "121": {"GyroFixedPoint.divDown": {"315": [3430, 3436, false], "316": [3514, 3520, false]}, "GyroFixedPoint.divUp": {"320": [4033, 4039, false], "321": [4117, 4123, false]}, "GyroFixedPoint.mulUp": {"317": [2326, 2332, true], "318": [2336, 2352, false], "319": [2430, 2442, false]}}, "122": {"GyroPoolMath._calcProtocolFees": {"323": [5166, 5203, false]}, "GyroPoolMath.liquidityInvariantUpdate": {"322": [11222, 11235, false]}}, "123": {"SignedFixedPoint.add": {"331": [1316, 1322, true]}, "SignedFixedPoint.mulDownMag": {"329": [2089, 2095, true], "330": [2099, 2115, false]}}, "13": {}, "14": {}, "15": {}, "16": {}, "17": {}, "20": {}, "21": {}, "22": {}, "23": {"InputHelpers.ensureArrayIsSorted": {"324": [1496, 1512, false]}}, "26": {"WordCodec.decodeInt22": {"333": [12558, 12577, true]}}, "27": {}, "28": {}, "29": {}, "30": {}, "33": {}, "34": {}, "35": {}, "38": {}, "39": {}, "4": {"BasePoolAuthorization._canPerform": {"306": [2112, 2140, false]}}, "43": {}, "61": {}, "62": {}, "63": {}, "64": {}, "66": {}, "67": {}, "68": {}, "69": {}, "77": {"SafeCast.toInt256": {"328": [6444, 6458, true]}}, "8": {}, "90": {"CappedLiquidity._ensureCap": {"310": [2338, 2391, true], "311": [2429, 2480, true]}, "CappedLiquidity.setCapManager": {"307": [1508, 1532, true]}, "CappedLiquidity.setCapParams": {"308": [1836, 1860, true], "309": [1896, 1917, true]}}, "91": {"ExtensibleWeightedPool2Tokens._queryAction": {"312": [39010, 39037, false]}}, "93": {"LocallyPausable.changePauseManager": {"326": [929, 962, true]}, "LocallyPausable.pause": {"327": [1194, 1220, true]}, "LocallyPausable.unpause": {"325": [1407, 1433, true]}}, "94": {"TemporarilyPausable._setPaused": {"332": [3601, 3607, false]}}, "95": {}, "96": {"GyroECLPPool._adjustPrice": {"294": [31252, 31288, false], "295": [31358, 31394, false]}, "GyroECLPPool._balancesFromTokenInOut": {"298": [25003, 25018, false]}, "GyroECLPPool._doExit": {"299": [23576, 23637, false]}, "GyroECLPPool._doJoin": {"300": [18463, 18528, false]}, "GyroECLPPool._getDueProtocolFeeAmounts": {"292": [27643, 27667, false]}, "GyroECLPPool._onExitPool": {"291": [21178, 21192, false]}, "GyroECLPPool._onJoinPool": {"293": [17211, 17232, false]}, "GyroECLPPool._payFeesBpt": {"301": [28381, 28393, false], "302": [28515, 28531, false]}, "GyroECLPPool._scalingFactor": {"296": [30792, 30798, false], "297": [31015, 31050, false]}, "GyroECLPPool.getTokenRates": {"284": [31863, 31899, true], "285": [31964, 32000, true]}, "GyroECLPPool.onSwap": {"286": [8758, 8784, false], "287": [8788, 8815, false], "288": [8874, 8900, false], "289": [8904, 8931, false], "290": [10333, 10373, false]}}, "97": {}}, "statements": {"1": {"BalancerPoolToken._burnPoolTokens": {"168": [4092, 4113]}, "BalancerPoolToken._mintPoolTokens": {"221": [3979, 4003]}, "BalancerPoolToken.allowance": {"102": [2410, 2428], "103": [2459, 2497]}, "BalancerPoolToken.decreaseAllowance": {"81": [3653, 3685], "82": [3772, 3828], "83": [3849, 3860]}, "BalancerPoolToken.getVault": {"62": [1938, 1951]}, "BalancerPoolToken.transferFrom": {"11": [2867, 2968], "12": [2979, 3015], "13": [3218, 3273], "14": [3294, 3305]}}, "112": {}, "115": {}, "117": {}, "118": {"GyroConfigHelpers._getPoolSetting": {"261": [1253, 1295], "262": [1446, 1484], "263": [1505, 1541]}, "GyroConfigHelpers.getProtocolFeeGyroPortionForPool": {"212": [623, 726]}, "GyroConfigHelpers.getSwapFeePercForPool": {"211": [333, 433]}}, "119": {}, "120": {"_grequire": {"230": [469, 488]}, "_grevert": {"271": [973, 1002]}}, "121": {"GyroFixedPoint.add": {"160": [1371, 1407]}, "GyroFixedPoint.complement": {"206": [9394, 9426]}, "GyroFixedPoint.divDown": {"161": [3452, 3489], "162": [3536, 3544], "163": [3645, 3681], "164": [3718, 3738]}, "GyroFixedPoint.divUp": {"207": [4055, 4092], "208": [4139, 4147], "209": [4248, 4299], "210": [4633, 4665]}, "GyroFixedPoint.mulDown": {"247": [1894, 1930], "248": [1951, 1971]}, "GyroFixedPoint.mulUp": {"198": [2369, 2405], "199": [2458, 2466], "200": [2784, 2816]}, "GyroFixedPoint.sub": {"201": [1627, 1663]}}, "122": {"GyroPoolMath._calcAllTokensInGivenExactBptOut": {"281": [2126, 2168], "282": [2238, 2294], "283": [2219, 2222]}, "GyroPoolMath._calcProtocolFees": {"245": [5581, 5594], "246": [6579, 6610]}, "GyroPoolMath._calcTokensOutGivenExactBptIn": {"278": [3658, 3701], "279": [3771, 3831], "280": [3752, 3755]}, "GyroPoolMath.liquidityInvariantUpdate": {"243": [11409, 11443], "244": [11659, 11693]}}, "123": {"SignedFixedPoint.add": {"115": [1342, 1378]}, "SignedFixedPoint.mulDownMag": {"113": [2118, 2154], "114": [2165, 2185]}}, "13": {}, "14": {"WeightedPool2TokensMiscData.logInvariant": {"140": [2316, 2362]}, "WeightedPool2TokensMiscData.logTotalSupply": {"141": [2532, 2581]}, "WeightedPool2TokensMiscData.oracleEnabled": {"144": [3221, 3267]}, "WeightedPool2TokensMiscData.oracleIndex": {"143": [3019, 3065]}, "WeightedPool2TokensMiscData.oracleSampleCreationTimestamp": {"142": [2786, 2852]}, "WeightedPool2TokensMiscData.setSwapFeePercentage": {"110": [5197, 5270]}, "WeightedPool2TokensMiscData.swapFeePercentage": {"145": [3424, 3477]}}, "15": {"WeightedPoolUserDataHelpers.exactBptInForTokensOut": {"277": [2448, 2520]}, "WeightedPoolUserDataHelpers.initialAmountsIn": {"265": [1311, 1383]}, "WeightedPoolUserDataHelpers.joinKind": {"264": [964, 1016]}}, "16": {"Authentication._authenticateCaller": {"118": [2404, 2474]}, "Authentication.getActionId": {"57": [2842, 2910]}}, "17": {"_require": {"126": [946, 964]}}, "20": {}, "21": {}, "22": {}, "23": {"InputHelpers.ensureArrayIsSorted": {"105": [1369, 1402], "226": [1528, 1535], "227": [1689, 1740], "228": [1754, 1772], "229": [1630, 1633]}, "InputHelpers.ensureInputLengthMatch": {"146": [888, 934]}}, "26": {"WordCodec.decodeBool": {"238": [9819, 9866]}, "WordCodec.decodeInt22": {"235": [12551, 12615]}, "WordCodec.decodeUint10": {"237": [10628, 10669]}, "WordCodec.decodeUint31": {"236": [11156, 11197]}, "WordCodec.decodeUint64": {"239": [11684, 11725]}, "WordCodec.insertUint64": {"112": [7104, 7149]}}, "27": {}, "28": {}, "29": {"Math.mul": {"165": [1897, 1948]}, "Math.sub": {"111": [1025, 1062]}}, "30": {}, "33": {"EIP712._domainSeparatorV4": {"133": [2466, 2567]}, "EIP712._hashTypedDataV4": {"214": [3295, 3375]}}, "34": {"ERC20._approve": {"116": [9468, 9504], "117": [9514, 9551]}, "ERC20._burn": {"249": [8587, 8655], "250": [8666, 8715], "251": [8726, 8814], "252": [8824, 8863], "253": [8873, 8915]}, "ERC20._mint": {"266": [7973, 8022], "267": [8033, 8072], "268": [8082, 8133], "269": [8143, 8185]}, "ERC20._transfer": {"127": [7195, 7266], "128": [7276, 7348], "129": [7359, 7406], "130": [7417, 7505], "131": [7515, 7570], "132": [7580, 7620]}, "ERC20.allowance": {"222": [3993, 4027]}, "ERC20.approve": {"1": [4271, 4308], "2": [4318, 4329]}, "ERC20.balanceOf": {"37": [3422, 3447]}, "ERC20.decimals": {"15": [3098, 3114]}, "ERC20.increaseAllowance": {"19": [5688, 5767]}, "ERC20.name": {"0": [2200, 2212]}, "ERC20.symbol": {"63": [2396, 2410]}, "ERC20.totalSupply": {"7": [3253, 3272]}, "ERC20.transfer": {"84": [3759, 3799]}}, "35": {"ERC20Permit.DOMAIN_SEPARATOR": {"16": [2438, 2465]}, "ERC20Permit.nonces": {"50": [2207, 2228]}, "ERC20Permit.permit": {"87": [1575, 1635], "88": [1902, 1981], "89": [1992, 2018], "90": [2028, 2059]}}, "38": {}, "39": {}, "4": {"BasePoolAuthorization._canPerform": {"232": [2251, 2282], "233": [2428, 2496]}, "BasePoolAuthorization.getAuthorizer": {"85": [1933, 1956]}, "BasePoolAuthorization.getOwner": {"61": [1836, 1849]}}, "43": {"SafeMath.add": {"139": [1019, 1056]}, "SafeMath.sub": {"234": [1861, 1888], "276": [1430, 1467]}}, "61": {}, "62": {}, "63": {}, "64": {}, "66": {}, "67": {}, "68": {}, "69": {}, "77": {"SafeCast.toInt256": {"260": [6436, 6503]}}, "8": {}, "90": {"CappedLiquidity._ensureCap": {"256": [2330, 2411], "257": [2421, 2499]}, "CappedLiquidity.capParams": {"20": [1723, 1740]}, "CappedLiquidity.setCapManager": {"3": [1500, 1550], "4": [1560, 1584], "5": [1594, 1629]}, "CappedLiquidity.setCapParams": {"43": [1828, 1878], "44": [1888, 1929], "45": [1940, 1981], "46": [1991, 2038], "47": [2048, 2087], "48": [2098, 2131]}}, "91": {"ExtensibleWeightedPool2Tokens._downscaleDown": {"203": [36578, 36630]}, "ExtensibleWeightedPool2Tokens._downscaleDownArray": {"154": [36909, 36978], "155": [36988, 37058]}, "ExtensibleWeightedPool2Tokens._downscaleUp": {"205": [37370, 37420]}, "ExtensibleWeightedPool2Tokens._downscaleUpArray": {"177": [37695, 37762], "178": [37772, 37840]}, "ExtensibleWeightedPool2Tokens._getAuthorizer": {"213": [38301, 38334]}, "ExtensibleWeightedPool2Tokens._isOwnerOnlyAction": {"272": [7177, 7347]}, "ExtensibleWeightedPool2Tokens._normalizedWeights": {"223": [7787, 7834], "224": [7844, 7892], "225": [7902, 7926], "270": [8030, 8085]}, "ExtensibleWeightedPool2Tokens._queryAction": {"156": [42989, 43012], "157": [43321, 43350]}, "ExtensibleWeightedPool2Tokens._setSwapFeePercentage": {"135": [6748, 6835], "136": [6845, 6932], "137": [6943, 7004], "138": [7014, 7062]}, "ExtensibleWeightedPool2Tokens._upscale": {"192": [35794, 35846]}, "ExtensibleWeightedPool2Tokens._upscaleArray": {"166": [36113, 36182], "167": [36192, 36262]}, "ExtensibleWeightedPool2Tokens.getLastInvariant": {"66": [8168, 8189]}, "ExtensibleWeightedPool2Tokens.getMiscData": {"24": [5993, 6031], "25": [6041, 6083], "26": [6093, 6165], "27": [6175, 6211], "28": [6221, 6261], "29": [6271, 6319]}, "ExtensibleWeightedPool2Tokens.getNormalizedWeights": {"104": [7595, 7622]}, "ExtensibleWeightedPool2Tokens.getPoolId": {"18": [5415, 5429]}, "ExtensibleWeightedPool2Tokens.getRate": {"34": [34387, 34444]}, "ExtensibleWeightedPool2Tokens.getSwapFeePercentage": {"30": [6404, 6440]}, "ExtensibleWeightedPool2Tokens.onExitPool": {"38": [21882, 21905], "39": [22311, 22347], "40": [22459, 22490], "41": [22500, 22542], "42": [22553, 22595]}, "ExtensibleWeightedPool2Tokens.onJoinPool": {"91": [12442, 12524], "92": [12819, 12877], "93": [12891, 12932], "94": [12946, 13001], "95": [13088, 13116], "96": [13206, 13246], "97": [13277, 13300], "98": [13315, 13594], "99": [13708, 13748], "100": [13835, 13863], "101": [13962, 14004]}, "ExtensibleWeightedPool2Tokens.queryExit": {"31": [31945, 32000], "32": [32011, 32148]}, "ExtensibleWeightedPool2Tokens.queryJoin": {"59": [30554, 30609], "60": [30620, 30755]}, "ExtensibleWeightedPool2Tokens.setPaused": {"6": [7481, 7499]}, "ExtensibleWeightedPool2Tokens.setSwapFeePercentage": {"17": [6619, 6659]}}, "93": {"LocallyPausable.changePauseManager": {"51": [921, 983], "52": [993, 1021], "53": [1031, 1091]}, "LocallyPausable.pause": {"54": [1186, 1241], "55": [1251, 1272], "56": [1282, 1302]}, "LocallyPausable.unpause": {"21": [1399, 1454], "22": [1464, 1486], "23": [1496, 1518]}}, "94": {"TemporarilyPausable._ensureNotPaused": {"134": [4024, 4063]}, "TemporarilyPausable._getBufferPeriodEndTime": {"125": [4836, 4863]}, "TemporarilyPausable._getPauseWindowEndTime": {"124": [4721, 4747]}, "TemporarilyPausable._isNotPaused": {"123": [4464, 4526]}, "TemporarilyPausable._setPaused": {"119": [3623, 3704], "120": [3735, 3818], "121": [3839, 3855], "122": [3865, 3896]}, "TemporarilyPausable.getPausedState": {"8": [3126, 3150], "9": [3160, 3205], "10": [3215, 3262]}}, "95": {"GyroECLPMath.scalarProd": {"231": [6575, 6629]}, "GyroECLPMath.validateParams": {"106": [4170, 4255], "107": [4265, 4350], "108": [4479, 4673], "109": [4684, 4797]}}, "96": {"GyroECLPPool._adjustPrice": {"183": [31290, 31344], "184": [31396, 31450], "185": [31460, 31476]}, "GyroECLPPool._balancesFromTokenInOut": {"193": [24962, 24989], "194": [25034, 25062], "195": [25076, 25105], "196": [25136, 25165], "197": [25179, 25207]}, "GyroECLPPool._distributeFees": {"240": [26198, 26260]}, "GyroECLPPool._doExit": {"241": [23653, 23728], "242": [23759, 23794]}, "GyroECLPPool._doJoin": {"254": [18544, 18622], "255": [18653, 18688]}, "GyroECLPPool._exitExactBPTInForTokensOut": {"275": [24706, 24738]}, "GyroECLPPool._getAllBalances": {"179": [6471, 6498], "180": [6508, 6575], "181": [6585, 6653]}, "GyroECLPPool._getDueProtocolFeeAmounts": {"158": [27683, 27723], "159": [28028, 28086]}, "GyroECLPPool._getPrice": {"182": [7692, 7797]}, "GyroECLPPool._getScaledTokenBalance": {"258": [5829, 5853], "259": [5939, 5979]}, "GyroECLPPool._onExitPool": {"147": [21633, 21671], "148": [21686, 21741], "149": [22199, 22311], "150": [22326, 22388], "151": [22589, 22644], "152": [22989, 23023], "153": [23156, 23206]}, "GyroECLPPool._onInitializePool": {"215": [13905, 13975], "216": [14052, 14108], "217": [14118, 14142], "218": [14394, 14446], "219": [14926, 14961], "220": [14972, 15004]}, "GyroECLPPool._onJoinPool": {"172": [17067, 17105], "173": [17248, 17309], "174": [17753, 17865], "175": [17876, 17938], "176": [18061, 18111]}, "GyroECLPPool._onSwapGivenIn": {"202": [12194, 12317]}, "GyroECLPPool._onSwapGivenOut": {"204": [12722, 12845]}, "GyroECLPPool._payFeesBpt": {"273": [28409, 28448], "274": [28547, 28589]}, "GyroECLPPool._scalingFactor": {"186": [30814, 30842], "187": [30856, 30887], "188": [30918, 30946], "189": [30960, 30991], "190": [31052, 31113], "191": [31123, 31143]}, "GyroECLPPool.getActualSupply": {"58": [29962, 30007]}, "GyroECLPPool.getECLPParams": {"49": [4984, 5014]}, "GyroECLPPool.getFeesMetadata": {"80": [28865, 29174]}, "GyroECLPPool.getInvariant": {"86": [7128, 7207]}, "GyroECLPPool.getInvariantDivActualSupply": {"33": [30464, 30502]}, "GyroECLPPool.getPrice": {"64": [8358, 8431], "65": [8441, 8476]}, "GyroECLPPool.getTokenRates": {"35": [31855, 31946], "36": [31956, 32047]}, "GyroECLPPool.onSwap": {"67": [8831, 8853], "68": [8947, 8970], "69": [9001, 9052], "70": [9263, 9326], "71": [9336, 9402], "72": [10227, 10308], "73": [10670, 10748], "74": [10890, 10937], "75": [11024, 11079], "76": [11110, 11174], "77": [11316, 11362], "78": [11447, 11502], "79": [11722, 11780]}, "GyroECLPPool.reconstructECLPParams": {"169": [4539, 4666], "170": [4676, 4779], "171": [4789, 4841]}}, "97": {}}}, "dependencies": ["node_modules/@balancer-labs/Authentication", "node_modules/@balancer-labs/BalancerPoolToken", "node_modules/@balancer-labs/BasePoolAuthorization", "CappedLiquidity", "node_modules/@balancer-labs/EIP712", "node_modules/@balancer-labs/ERC20", "node_modules/@balancer-labs/ERC20Permit", "node_modules/@balancer-labs/Errors", "ExtensibleWeightedPool2Tokens", "node_modules/@balancer-labs/FixedPoint", "GyroConfigHelpers", "GyroConfigKeys", "GyroECLPMath", "GyroECLPPoolErrors", "GyroErrors", "GyroFixedPoint", "GyroPoolMath", "node_modules/@balancer-labs/IAsset", "node_modules/@balancer-labs/IAuthentication", "node_modules/@balancer-labs/IAuthorizer", "node_modules/@balancer-labs/IBasePool", "ICappedLiquidity", "node_modules/@balancer-labs/IERC20", "node_modules/@balancer-labs/IERC20Permit", "node_modules/@balancer-labs/IFlashLoanRecipient", "IGyroConfig", "ILocallyPausable", "node_modules/@balancer-labs/IMinimalSwapInfoPool", "node_modules/@balancer-labs/IPoolSwapStructs", "node_modules/@balancer-labs/IProtocolFeesCollector", "node_modules/@balancer-labs/IRateProvider", "node_modules/@balancer-labs/ISignaturesValidator", "node_modules/@balancer-labs/ITemporarilyPausable", "node_modules/@balancer-labs/IVault", "node_modules/@balancer-labs/IWETH", "node_modules/@balancer-labs/InputHelpers", "LocallyPausable", "node_modules/@balancer-labs/LogExpMath", "node_modules/@balancer-labs/Math", "node_modules/@openzeppelin/SafeCast", "node_modules/@balancer-labs/SafeMath", "SignedFixedPoint", "TemporarilyPausable", "node_modules/@balancer-labs/WeightedMath", "node_modules/@balancer-labs/WeightedPool2TokensMiscData", "node_modules/@balancer-labs/WeightedPoolUserDataHelpers", "node_modules/@balancer-labs/WordCodec"], "deployedBytecode": "$4dfb88a4c975276bfeda73b9d8c1ea657b$__63d83ca8628585856040518463ffffffff1660e01b8152600401611292939291906148d9565b60206040518083038186803b1580156112aa57600080fd5b505af41580156112be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e29190614757565b90506112f084828585612a83565b94506112fb85612b23565b94505050505090565b60095490565b6000611314612072565b8360800151611324610d2c6111b4565b61132f610d5261085e565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031686602001516001600160a01b03161480156113ab57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031686604001516001600160a01b0316145b156113b857506001611449565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031686602001516001600160a01b031614801561143257507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031686604001516001600160a01b0316145b1561143f57506000611449565b6114496079612cc3565b600061145482612d16565b905060006114628315612d16565b905061146e8783612e43565b965061147a8682612e43565b95506000611489888886612e4f565b90506000806114966125c6565b915091506114a261425f565b60008073__$4dfb88a4c975276bfeda73b9d8c1ea657b$__6378ace8578787876040518463ffffffff1660e01b81526004016114e0939291906148d9565b604080518083038186803b1580156114f757600080fd5b505af415801561150b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152f91906145a6565b6040805180820190915260029091028201815260208101919091529250600091506115579050565b8c51600181111561156457fe5b1415611610576000611582611577610a67565b60608f015190612ee9565b90506115a461159e828f60600151612f3e90919063ffffffff16565b88612e43565b60608e015260006115b98e878b888888612f54565b90507f4e1d56f7310a8c32b2267f756b19ba65019b4890068ce114a25009abe54de5ba8684836040516115ee9392919061494b565b60405180910390a16116008188612ff7565b9a505050505050505050506116a1565b61161e8c6060015186612e43565b60608d015260006116338d868a878787613003565b90507f4e1d56f7310a8c32b2267f756b19ba65019b4890068ce114a25009abe54de5ba8583836040516116689392919061494b565b60405180910390a161167a818861304b565b905061169661168f61168a610a67565b613057565b829061307d565b995050505050505050505b509392505050565b600d546000908190819081906116d0906001600160a01b03163063045434c560e41b6130e3565b600d546116ee906001600160a01b03163063045434c560e41b61310a565b600d546040516321f8a72160e01b81526001600160a01b03909116906321f8a7219061172e906c4759524f5f545245415355525960981b906004016149ec565b60206040518083038186803b15801561174657600080fd5b505afa15801561175a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061177e9190614324565b600d546040516321f8a72160e01b81526001600160a01b03909116906321f8a721906117bd906b42414c5f545245415355525960a01b906004016149ec565b60206040518083038186803b1580156117d557600080fd5b505afa1580156117e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061180d9190614324565b935093509350935090919293565b6000806118283385611b7c565b90508083106118425761183d33856000611d4d565b61184f565b61184f3385858403611d4d565b5060019392505050565b60006106b9338484611ecc565b6000610840613138565b600c546001600160a01b031681565b60008061188a6129cd565b90506000806118976125c6565b604051636c1e543160e11b8152919350915073__$4dfb88a4c975276bfeda73b9d8c1ea657b$__9063d83ca862906118d7908690869086906004016148d9565b60206040518083038186803b1580156118ef57600080fd5b505af4158015611903573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111639190614757565b6119358442111560d1611ebe565b6001600160a01b0380881660008181526006602090815260408083205481517f00000000000000000000000000000000000000000000000000000000000000008185015280830195909552948b166060850152608084018a905260a0840185905260c08085018a90528151808603909101815260e090940190528251920191909120906119c1826131b2565b9050600060018288888860405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015611a1f573d6000803e3d6000fd5b5050604051601f1901519150611a6190506001600160a01b03821615801590611a5957508b6001600160a01b0316826001600160a01b0316145b6101f8611ebe565b6001600160a01b038b166000908152600660205260409020600185019055611a8a8b8b8b611d4d565b5050505050505050505050565b60608088611aa6610d2c6111b4565b611ab1610d5261085e565b611ab9612072565b6000611ac3610788565b611b3357611ad38b8b8b886131fe565b94509050611ae8620f424082101560cc611ebe565b611af66000620f424061338e565b611b0589620f4240830361338e565b611b0e8461296b565b6040805160028082526060820183529091602083019080368337019050509250611b6e565b611b3c8861255a565b611b4b8b8b8b8b8b8b8b6127fc565b90955093509050611b5c898261338e565b611b658461296b565b611b6e836122ca565b505097509795505050505050565b6000611b866111b4565b6001600160a01b0316826001600160a01b03161415611ba857506000196106bd565b611bb28383613398565b90506106bd565b60606108406133c3565b80611bcd81613432565b5050565b611bfd8160600151600013158015611bf55750670de0b6b3a7640000826060015113155b6101636134ab565b611c288160400151600013158015611bf55750670de0b6b3a7640000826040015113156101636134ab565b604080518082018252606083015181529082015160208201526000611c4d82806134b9565b9050611c7a670de0b6b3a763fc188212801590611c725750670de0b6b3a76403e88213155b6101646134ab565b611ca98360800151600013158015611ca157506a52b7d2dcc80cd2e4000000846080015113155b6101686134ab565b505050565b600061082683836056611cd2565b6000611ccc838311156001611ebe565b50900390565b67ffffffffffffffff811b1992909216911b1790565b6000828202831580611d02575082848281611cff57fe5b05145b611d1257611d1260006003611ebe565b670de0b6b3a764000090059392505050565b600082820181831215611d3957838112611d3e565b838112155b61082657610826600080611ebe565b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6000611dc66000356001600160e01b0319166110d1565b9050610785611dd582336134ec565b610191611ebe565b8015611dfd57611df8611dee611e76565b4210610193611ebe565b611e12565b611e12611e08611e9a565b42106101a9611ebe565b6007805482151560ff19909116811790915560408051918252517f9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be649181900360200190a150565b6000611e63611e9a565b42118061084057505060075460ff161590565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b81611bcd57611bcd81612cc3565b611ee36001600160a01b0384161515610198611ebe565b611efa6001600160a01b0383161515610199611ebe565b611f05838383611ca9565b6001600160a01b038316600090815260208190526040902054611f2b90826101a06135ee565b6001600160a01b038085166000908152602081905260408082209390935590841681522054611f5a90826120f0565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612021613604565b3060405160200180868152602001858152602001848152602001838152602001826001600160a01b031681526020019550505050505060405160208183030381529060405280519060200120905090565b61208561207d611e59565b610192611ebe565b565b61209a64e8d4a5100082101560cb611ebe565b6120b067016345785d8a000082111560ca611ebe565b6008546120bd9082611cae565b6008556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc906107699083906149ec565b60008282016108268482101583611ebe565b60006106bd8282613608565b60006106bd826016613608565b60006106bd82602c61362f565b60006106bd82604b613639565b60006106bd826055613641565b60006106bd82605661364b565b611bcd8183146067611ebe565b600060608060008061216c6125c6565b91509150612178611e59565b1561227d57604051636c1e543160e11b815260009073__$4dfb88a4c975276bfeda73b9d8c1ea657b$__9063d83ca862906121bb908d90879087906004016148d9565b60206040518083038186803b1580156121d357600080fd5b505af41580156121e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061220b9190614757565b905061221681613659565b6122208a88613686565b90965094506122398187612232610788565b60006136d2565b60098190556040517fe1d39caf039c7dc6f364b1e29d1e67c4e330003a43f4991d50cf3e8840d95eac9161226f91849190614b70565b60405180910390a150612293565b6122878987613686565b60001960095590955093505b6040805160028082526060820183528792879291906020830190803683370190505094509450945050509750975097945050505050565b6122f1816000815181106122da57fe5b60200260200101516122ec6001612d16565b6124dc565b816000815181106122fe57fe5b60200260200101818152505061232c8160018151811061231a57fe5b60200260200101516122ec6000612d16565b8160018151811061233957fe5b60200260200101818152505050565b333014612406576000306001600160a01b031660003660405161236c92919061487d565b6000604051808303816000865af19150503d80600081146123a9576040519150601f19603f3d011682016040523d82523d6000602084013e6123ae565b606091505b5050905080600081146123bd57fe5b60046000803e6000516001600160e01b0319166343adbafb60e01b81146123e8573d6000803e3d6000fd5b506020600460003e604060205260243d03602460403e601c3d016000f35b61240f8661255a565b6000806124258b8b8b8b8b8b8b8b63ffffffff16565b5091509150612437818463ffffffff16565b8051601f1982018390526343adbafb603f1983015260200260231982016044820181fd5b60008060008060008060008061246f6116a9565b93509350935093508360001415612494576000975087965090945092506124bb915050565b6000806124ab8c8c6124a4610788565b898961372a565b909a509850929650909450505050505b92959194509250565b60008282018381101561082657610826600080611ebe565b6000816124ef576124ef60006004611ebe565b826124fc575060006106bd565b670de0b6b3a76400008381029084828161251257fe5b04146125245761252460006005611ebe565b82818161252d57fe5b04949350505050565b600082820261082684158061255357508385838161255057fe5b04145b6003611ebe565b6125818160008151811061256a57fe5b602002602001015161257c6001612d16565b6137c5565b8160008151811061258e57fe5b60200260200101818152505061232c816001815181106125aa57fe5b602002602001015161257c6000612d16565b611bcd82826137fe565b6125ce6141e7565b6125d6614216565b7f00000000000000000000000000000000000000000000000000000000000000006080808401919091527f00000000000000000000000000000000000000000000000000000000000000006060808501919091527f00000000000000000000000000000000000000000000000000000000000000006040808601919091527f00000000000000000000000000000000000000000000000000000000000000006020808701919091527f000000000000000000000000000000000000000000000000000000000000000086528451858201517f0000000000000000000000000000000000000000000000000000000000000000818401527f000000000000000000000000000000000000000000000000000000000000000090527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000090527f000000000000000000000000000000000000000000000000000000000000000060c08501527f000000000000000000000000000000000000000000000000000000000000000060a08501527f0000000000000000000000000000000000000000000000000000000000000000928401929092527f0000000000000000000000000000000000000000000000000000000000000000908301527f0000000000000000000000000000000000000000000000000000000000000000908201529091565b600060608060008061280c6125c6565b91509150600073__$4dfb88a4c975276bfeda73b9d8c1ea657b$__63d83ca8628b85856040518463ffffffff1660e01b815260040161284d939291906148d9565b60206040518083038186803b15801561286557600080fd5b505af4158015612879573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061289d9190614757565b90506128a881613659565b6000806128b58c8a6138b5565b600a54919350915060ff16156128df576128df826128d28f610cfe565b6128da610788565b6138ef565b6128f383836128ec610788565b60016136d2565b60098190556040517fe1d39caf039c7dc6f364b1e29d1e67c4e330003a43f4991d50cf3e8840d95eac9161292991869190614b70565b60405180910390a16040805160028082526060820183528492849291906020830190803683370190505097509750975050505050509750975097945050505050565b6129928160008151811061297b57fe5b602002602001015161298d6001612d16565b61307d565b8160008151811061299f57fe5b60200260200101818152505061232c816001815181106129bb57fe5b602002602001015161298d6000612d16565b6040805160028082526060808301845292602083019080368337019050509050612a207f0000000000000000000000000000000000000000000000000000000000000000612a1b6001612d16565b613a01565b81600081518110612a2d57fe5b602002602001018181525050612a677f0000000000000000000000000000000000000000000000000000000000000000612a1b6000612d16565b81600181518110612a7457fe5b60200260200101818152505090565b600073__$4dfb88a4c975276bfeda73b9d8c1ea657b$__63c7fe78d0868585612aab89613aa8565b6040518563ffffffff1660e01b8152600401612aca949392919061490a565b60206040518083038186803b158015612ae257600080fd5b505af4158015612af6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b1a9190614757565b95945050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615612bf257612bef7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663679aefce6040518163ffffffff1660e01b815260040160206040518083038186803b158015612bb057600080fd5b505afa158015612bc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612be89190614757565b83906137c5565b91505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615612cbf57612cbc7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663679aefce6040518163ffffffff1660e01b815260040160206040518083038186803b158015612c7d57600080fd5b505afa158015612c91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cb59190614757565b83906124dc565b91505b5090565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b60008060008315612d6b57507f000000000000000000000000000000000000000000000000000000000000000090507f0000000000000000000000000000000000000000000000000000000000000000612db1565b507f000000000000000000000000000000000000000000000000000000000000000090507f00000000000000000000000000000000000000000000000000000000000000005b6001600160a01b0382161561082657612e3b826001600160a01b031663679aefce6040518163ffffffff1660e01b815260040160206040518083038186803b158015612dfc57600080fd5b505afa158015612e10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e349190614757565b82906137c5565b949350505050565b600061082683836137c5565b60408051600280825260608083018452926020830190803683370190505090508115612eae578381600081518110612e8357fe5b6020026020010181815250508281600181518110612e9d57fe5b602002602001018181525050610826565b8281600081518110612ebc57fe5b6020026020010181815250508381600181518110612ed657fe5b6020026020010181815250509392505050565b6000828202831580612f03575082848281612f0057fe5b04145b612f1357612f1360006003611ebe565b80612f225760009150506106bd565b670de0b6b3a764000060001982015b0460010191505092915050565b600082821115611ccc57611ccc60006001611ebe565b60608601516040516330ffa11b60e11b815260009173__$4dfb88a4c975276bfeda73b9d8c1ea657b$__916361ff423691612f9c918a91908a908a908a908a9060040161497b565b60206040518083038186803b158015612fb457600080fd5b505af4158015612fc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fec9190614757565b979650505050505050565b600061082683836124dc565b6060860151604051633b18ce7b60e21b815260009173__$4dfb88a4c975276bfeda73b9d8c1ea657b$__9163ec6339ec91612f9c918a91908a908a908a908a9060040161497b565b6000610826838361307d565b6000670de0b6b3a7640000821061306f5760006106bd565b50670de0b6b3a76400000390565b6000816130905761309060006004611ebe565b8261309d575060006106bd565b670de0b6b3a7640000838102908482816130b357fe5b04146130d7576130d7670de0b6b3a76400008583816130ce57fe5b04146005611ebe565b826001820381612f3157fe5b6000612e3b847550524f544f434f4c5f535741505f4645455f5045524360501b8486613aec565b6000612e3b847f50524f544f434f4c5f4645455f4759524f5f504f5254494f4e000000000000008486613aec565b60006131426111b4565b6001600160a01b031663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b15801561317a57600080fd5b505afa15801561318e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108409190614324565b60006131bc611fb4565b82604051602001808061190160f01b81525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b60006060600061320d84613d99565b9050613228600082600381111561322057fe5b1460ce611ebe565b600061323385613db8565b90506132418151600261214f565b61324a8161255a565b6000806132556125c6565b91509150600073__$4dfb88a4c975276bfeda73b9d8c1ea657b$__63d83ca8628585856040518463ffffffff1660e01b8152600401613296939291906148d9565b60206040518083038186803b1580156132ae57600080fd5b505af41580156132c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132e69190614757565b90507faf65f1a72bf4f8bc48e8153858e1f7b307ce39c88361a677c0a79c2a1ae571ef8160405161331791906149ec565b60405180910390a1600061332d85838686612a83565b9050600061337561335b838860008151811061334557fe5b60200260200101516137c590919063ffffffff16565b8760018151811061336857fe5b60200260200101516120f0565b60099390935550909b939a509298505050505050505050565b611bcd8282613e6c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b604080516002808252606080830184529260009291906020830190803683370190505090506133f26001613f01565b816000815181106133ff57fe5b6020026020010181815250506134156000613f01565b8160018151811061342257fe5b6020908102919091010152905090565b60028151101561344157610785565b60008160008151811061345057fe5b602002602001015190506000600190505b8251811015611ca957600083828151811061347857fe5b602002602001015190506134a1816001600160a01b0316846001600160a01b0316106065611ebe565b9150600101613461565b81611bcd57611bcd81613f55565b60006108266134d983602001518560200151611ce890919063ffffffff16565b835185516134e691611ce8565b90611d24565b600073ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b61350b611190565b6001600160a01b031614158015613526575061352683613f65565b1561354e57613533611190565b6001600160a01b0316336001600160a01b03161490506106bd565b613556613138565b6001600160a01b0316639be2a8848484306040518463ffffffff1660e01b815260040180848152602001836001600160a01b03168152602001826001600160a01b03168152602001935050505060206040518083038186803b1580156135bb57600080fd5b505afa1580156135cf573d6000803e3d6000fd5b505050506040513d60208110156135e557600080fd5b505190506106bd565b60006135fd8484111583611ebe565b5050900390565b4690565b600082821c623fffff16621fffff81136136225780612e3b565b623fffff19179392505050565b1c637fffffff1690565b1c6103ff1690565b1c60019081161490565b1c67ffffffffffffffff1690565b60008060008061366b6009548661245b565b935093509350935061367f84848484613f97565b5050505050565b60006060600061369584613d99565b905060018160038111156136a557fe5b14156136bf576136b58585613fbd565b90935091506136ca565b6136ca610150612cc3565b509250929050565b600081156137045760006136f0846136ea8888612ee9565b9061307d565b90506136fc86826124c4565b915050612e3b565b600061371484610b4488886137c5565b90506137208682612f3e565b9695505050505050565b60008086861161373f575060009050806137bb565b600061375f856137596137528a8c612f3e565b89906137c5565b906137c5565b90506000613777613770898b612f3e565b87906137c5565b905060006137858983612f3e565b9050600061379384836124dc565b905060006137a188836137c5565b905060006137af8383612f3e565b91975090955050505050505b9550959350505050565b60008282028315806137df5750828482816137dc57fe5b04145b6137ef576137ef60006003611ebe565b670de0b6b3a76400008161252d565b6138156001600160a01b038316151561019b611ebe565b61382182600083611ca9565b6001600160a01b03821660009081526020819052604090205461384790826101a16135ee565b6001600160a01b03831660009081526020819052604090205560025461386d9082613fef565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6000606060006138c484613d99565b905060038160038111156138d457fe5b14156138e4576136b58585613ffd565b6136ca610136612cc3565b60408051606081018252600a5460ff81161515825261010081046001600160781b031660208301819052600160801b9091046001600160801b0316928201929092529061393c85856124c4565b11156040518060400160405280601a81526020017f6f7665722061646472657373206c697175696469747920636170000000000000815250906139925760405162461bcd60e51b81526004016107149190614a36565b5060408101516001600160801b03166139ab85846124c4565b11156040518060400160405280601981526020017f6f76657220676c6f62616c206c697175696469747920636170000000000000008152509061367f5760405162461bcd60e51b81526004016107149190614a36565b6000806000613a0e6111b4565b6001600160a01b031663b05f8e48613a2461085e565b876040518363ffffffff1660e01b8152600401613a429291906149f5565b60806040518083038186803b158015613a5a57600080fd5b505afa158015613a6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a92919061476f565b505081810194509092509050612b1a83856137c5565b6000600160ff1b8210612cbf5760405162461bcd60e51b8152600401808060200182810382526028815260200180614bed6028913960400191505060405180910390fd5b6040805160208082018690526001600160a01b03808516838501528351808403850181526060840180865281519184019190912063696eb37560e01b909152606484018190529351600094939189169263696eb3759260848082019391829003018186803b158015613b5d57600080fd5b505afa158015613b71573d6000803e3d6000fd5b505050506040513d6020811015613b8757600080fd5b505115613c0757856001600160a01b031663bd02d0f5826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613bd257600080fd5b505afa158015613be6573d6000803e3d6000fd5b505050506040513d6020811015613bfc57600080fd5b50519150612e3b9050565b6040805160208082018890528183018790528251808303840181526060830180855281519183019190912063696eb37560e01b9091526064830181905292516001600160a01b038a169263696eb375926084808301939192829003018186803b158015613c7357600080fd5b505afa158015613c87573d6000803e3d6000fd5b505050506040513d6020811015613c9d57600080fd5b505115613d1e57866001600160a01b031663bd02d0f5826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613ce857600080fd5b505afa158015613cfc573d6000803e3d6000fd5b505050506040513d6020811015613d1257600080fd5b50519250612e3b915050565b866001600160a01b031663bd02d0f5876040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613d6257600080fd5b505afa158015613d76573d6000803e3d6000fd5b505050506040513d6020811015613d8c57600080fd5b5051979650505050505050565b6000818060200190516020811015613db057600080fd5b505192915050565b6060818060200190516040811015613dcf57600080fd5b815160208301805160405192949293830192919084640100000000821115613df657600080fd5b908301906020820185811115613e0b57600080fd5b8251866020820283011164010000000082111715613e2857600080fd5b82525081516020918201928201910280838360005b83811015613e55578181015183820152602001613e3d565b505050509190910160405250929695505050505050565b613e7860008383611ca9565b600254613e8590826120f0565b6002556001600160a01b038216600090815260208190526040902054613eab90826120f0565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600081613f2e577f00000000000000000000000000000000000000000000000000000000000000006106bd565b507f0000000000000000000000000000000000000000000000000000000000000000919050565b610785816223aca960e91b614022565b6000613f77631c74c91760e11b6110d1565b8214806106bd5750613f8f6350dd6ed960e01b6110d1565b909114919050565b8315613fa757613fa7828561338e565b8215613fb757613fb7818461338e565b50505050565b600060606000613fcc84614083565b90506000613fe28683613fdd610788565b6140a5565b9196919550909350505050565b6000610826838360016135ee565b60006060600061400c84614083565b90506000613fe2868361401d610788565b61412b565b62461bcd60e51b600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fd5b600081806020019051604081101561409a57600080fd5b506020015192915050565b6060835167ffffffffffffffff811180156140bf57600080fd5b506040519080825280602002602001820160405280156140e9578160200160208202803683370190505b50905060005b84518110156116a15761410c83610b448688858151811061334557fe5b82828151811061411857fe5b60209081029190910101526001016140ef565b6060835167ffffffffffffffff8111801561414557600080fd5b5060405190808252806020026020018201604052801561416f578160200160208202803683370190505b50905060005b84518110156116a1576141a8836136ea8688858151811061419257fe5b6020026020010151612ee990919063ffffffff16565b8282815181106141b457fe5b6020908102919091010152600101614175565b604080516060810182526000808252602082018190529181019190915290565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b6040518060e0016040528061422961425f565b815260200161423661425f565b815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806040016040528060008152602001600081525090565b8035610d1881614bd7565b80358015158114610d1857600080fd5b600082601f8301126142a4578081fd5b813567ffffffffffffffff8111156142b857fe5b6142cb601f8201601f1916602001614bb3565b8181528460208386010111156142df578283fd5b816020850160208301379081016020019190915292915050565b803560028110610d1857600080fd5b600060208284031215614319578081fd5b813561082681614bd7565b600060208284031215614335578081fd5b815161082681614bd7565b60008060408385031215614352578081fd5b823561435d81614bd7565b9150602083013561436d81614bd7565b809150509250929050565b60008060006060848603121561438c578081fd5b833561439781614bd7565b925060208401356143a781614bd7565b929592945050506040919091013590565b600080600080600080600060e0888a0312156143d2578283fd5b87356143dd81614bd7565b965060208801356143ed81614bd7565b95506040880135945060608801359350608088013560ff81168114614410578384fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561443f578182fd5b823561444a81614bd7565b946020939093013593505050565b600060208284031215614469578081fd5b61082682614284565b600080600080600080600060e0888a03121561448c578081fd5b87359650602088013561449e81614bd7565b955060408801356144ae81614bd7565b9450606088013567ffffffffffffffff808211156144ca578283fd5b818a0191508a601f8301126144dd578283fd5b8135818111156144e957fe5b602081026144f960208201614bb3565b80838252602082019150602086018f6020858901011115614518578788fd5b8796505b8487101561453b5780358352600196909601956020928301920161451c565b50985050505060808a0135945060a08a0135935060c08a0135915080821115614562578283fd5b5061456f8a828b01614294565b91505092959891949750929550565b60006020828403121561458f578081fd5b81356001600160e01b031981168114610826578182fd5b600080604083850312156145b8578182fd5b505080516020909101519092909150565b6000606082840312156145da578081fd5b6040516060810181811067ffffffffffffffff821117156145f757fe5b60405261460383614284565b815260208301356001600160781b038116811461461e578283fd5b602082015260408301356001600160801b038116811461463c578283fd5b60408201529392505050565b60008060006060848603121561465c578081fd5b833567ffffffffffffffff80821115614673578283fd5b8186019150610120808389031215614689578384fd5b61469281614bb3565b905061469d836142f9565b81526146ab60208401614279565b60208201526146bc60408401614279565b6040820152606083013560608201526080830135608082015260a083013560a08201526146eb60c08401614279565b60c08201526146fc60e08401614279565b60e08201526101008084013583811115614714578586fd5b6147208a828701614294565b9183019190915250976020870135975060409096013595945050505050565b600060208284031215614750578081fd5b5035919050565b600060208284031215614768578081fd5b5051919050565b60008060008060808587031215614784578182fd5b84519350602085015192506040850151915060608501516147a481614bd7565b939692955090935050565b6000815180845260208085019450808401835b838110156147de578151875295820195908201906001016147c2565b509495945050505050565b6147f482825161486e565b6020810151614806604084018261486e565b5060408101516080830152606081015160a0830152608081015160c083015260a081015160e083015260c08101516101008301525050565b80518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b80518252602090810151910152565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b60006020825261082660208301846147af565b6000604082526148c760408301856147af565b8281036020840152612b1a81856147af565b60006101e08083526148ed818401876147af565b9150506148fd602083018561483e565b612e3b60c08301846147e9565b600061020080835261491e818401886147af565b91505061492e602083018661483e565b61493b60c08301856147e9565b826101e083015295945050505050565b60006080825261495e60808301866147af565b905061496d602083018561486e565b826060830152949350505050565b600061026080835261498f8184018a6147af565b91505086602083015285151560408301526149ad606083018661483e565b6149bb6101008301856147e9565b612fec61022083018461486e565b901515815260200190565b92151583526020830191909152604082015260600190565b90815260200190565b9182526001600160a01b0316602082015260400190565b9586526020860194909452604085019290925260608401521515608083015260a082015260c00190565b6000602080835283518082850152825b81811015614a6257858101830151858201604001528201614a46565b81811115614a735783604083870101525b50601f01601f1916929092016040019392505050565b8151151581526020808301516001600160781b0316908201526040918201516001600160801b03169181019190915260600190565b905460ff811615158252600881901c6001600160781b0316602083015260801c604082015260600190565b6101c08101614af8828561483e565b614b0660a08301845161486e565b6020830151614b1860e084018261486e565b5060408301516101208301526060830151610140830152608083015161016083015260a083015161018083015260c08301516101a08301529392505050565b600083825260406020830152612e3b60408301846147af565b918252602082015260400190565b93845260208401929092526001600160a01b03908116604084015216606082015260800190565b60ff91909116815260200190565b60405181810167ffffffffffffffff81118282101715614bcf57fe5b604052919050565b6001600160a01b038116811461078557600080fdfe53616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536a26469706673582212203f5d826e9b2afa5dca5e823004707a42ba62b3e44d829535e63255bfe795c28964736f6c63430007060033", "deployedSourceMap": "969:31087:96:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2138:81:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4172:164;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1437:199:90:-;;;;;;:::i;:::-;;:::i;:::-;;7417:89:91;;;;;;:::i;:::-;;:::i;3181:98:34:-;;;:::i;:::-;;;;;;;:::i;2906:363:94:-;;;:::i;:::-;;;;;;;;;:::i;2657:655:1:-;;;;;;:::i;:::-;;:::i;3040:81:34:-;;;:::i;:::-;;;;;;;:::i;2359:113:35:-;;;:::i;6510:156:91:-;;;;;;:::i;:::-;;:::i;5345:91::-;;;:::i;5584:211:34:-;;;;;;:::i;:::-;;:::i;1642:105:90:-;;;:::i;:::-;;;;;;;:::i;1352:173:93:-;;;:::i;2002:29:96:-;;;:::i;:::-;;;;;;;:::i;5638:688:91:-;;;:::i;:::-;;;;;;;;;;;;:::i;6332:115::-;;;:::i;31631:770::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;30119:390:96:-;;;:::i;2118:44::-;;;:::i;34240:211:91:-;;;:::i;1073:34:90:-;;;:::i;31769:285:96:-;;;:::i;:::-;;;;;;;;:::i;3337:117:34:-;;;;;;:::i;:::-;;:::i;21542:1060:91:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1753:385:90:-;;;;;;:::i;:::-;;:::i;4854:167:96:-;;;:::i;:::-;;;;;;;;:::i;2127:108:35:-;;;;;;:::i;:::-;;:::i;790:308:93:-;;;;;;:::i;:::-;;:::i;2068:44:96:-;;;:::i;1141:168:93:-;;;:::i;2487:430:16:-;;;;;;:::i;:::-;;:::i;29739:275:96:-;;;:::i;30240:768:91:-;;;;;;:::i;:::-;;:::i;1776:80:4:-;;;:::i;1879:79:1:-;;;:::i;2332:85:34:-;;;:::i;8001:482:96:-;;;:::i;8098:98:91:-;;;:::i;8508:3289:96:-;;;;;;:::i;:::-;;:::i;28685:496::-;;;:::i;:::-;;;;;;;;;;:::i;3438:429:1:-;;;;;;:::i;:::-;;:::i;3657:170:34:-;;;;;;:::i;:::-;;:::i;1862:101:4:-;;;:::i;488:27:93:-;;;:::i;6872:342:96:-;;;:::i;1313:753:35:-;;;;;;:::i;:::-;;:::i;11895:2126:91:-;;;;;;:::i;:::-;;:::i;2260:254:1:-;;;;;;:::i;:::-;;:::i;7512:117:91:-;;;:::i;:::-;;;;;;;:::i;2138:81:34:-;2207:5;2200:12;;;;;;;;;;;;;-1:-1:-1;;2200:12:34;;;;;;;;;;;;;;;;;;;;;;;;;;2175:13;;2200:12;;2207:5;;2200:12;;;2207:5;2200:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2138:81;:::o;4172:164::-;4255:4;4271:37;4280:10;4292:7;4301:6;4271:8;:37::i;:::-;-1:-1:-1;4325:4:34;4172:164;;;;;:::o;1437:199:90:-;1522:10;;1534:15;;;;;;;;;;;;-1:-1:-1;;;1534:15:90;;;;;-1:-1:-1;;;;;1522:10:90;1508;:24;1500:50;;;;-1:-1:-1;;;1500:50:90;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;1560:10:90;:24;;-1:-1:-1;;;;;;1560:24:90;-1:-1:-1;;;;;1560:24:90;;;;;1599:30;;;;;;1560:24;;1599:30;:::i;:::-;;;;;;;;1437:199;:::o;7417:89:91:-;2156:21:16;:19;:21::i;:::-;7481:18:91::1;7492:6;7481:10;:18::i;:::-;7417:89:::0;:::o;3181:98:34:-;3260:12;;3181:98;:::o;2906:363:94:-;3009:11;3034:26;3074:27;3136:14;:12;:14::i;:::-;3135:15;3126:24;;3181;:22;:24::i;:::-;3160:45;;3237:25;:23;:25::i;:::-;3215:47;;2906:363;;;:::o;2657:655:1:-;2785:4;2801:24;2828:29;2838:6;2846:10;2828:9;:29::i;:::-;2801:56;-1:-1:-1;2867:101:1;-1:-1:-1;;;;;2876:20:1;;:10;:20;;:50;;;2920:6;2900:16;:26;;2876:50;9174:3:17;2867:8:1;:101::i;:::-;2979:36;2989:6;2997:9;3008:6;2979:9;:36::i;:::-;-1:-1:-1;;;;;3030:20:1;;:10;:20;;;;:55;;-1:-1:-1;;;3054:31:1;;;3030:55;3026:258;;;3218:55;3227:6;3235:10;3266:6;3247:16;:25;3218:8;:55::i;:::-;3301:4;3294:11;;;2657:655;;;;;;:::o;3040:81:34:-;3105:9;;;;3040:81;:::o;2359:113:35:-;2419:7;2445:20;:18;:20::i;:::-;2438:27;;2359:113;:::o;6510:156:91:-;2156:21:16;:19;:21::i;:::-;2722:18:94::1;:16;:18::i;:::-;6619:40:91::2;6641:17;6619:21;:40::i;5345:91::-:0;5422:7;5345:91;:::o;5584:211:34:-;5697:10;5672:4;5718:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;5718:32:34;;;;;;;;;;5672:4;;5688:79;;5718:32;;:48;;5755:10;5718:36;:48::i;:::-;5688:8;:79::i;1642:105:90:-;1695:16;;:::i;:::-;-1:-1:-1;1723:17:90;;;;;;;;1730:10;1723:17;;;;;;;;;;;-1:-1:-1;;;;;1723:17:90;;;;;-1:-1:-1;;;1723:17:90;;-1:-1:-1;;;;;1723:17:90;;;;;;;;;1642:105::o;1352:173:93:-;1407:12;;1435:18;;;;;;;;;;;;-1:-1:-1;;;1435:18:93;;;;;-1:-1:-1;;;;;1407:12:93;1423:10;1407:26;1399:55;;;;-1:-1:-1;;;1399:55:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1464:22;1480:5;1464:15;:22::i;:::-;1501:17;;;;;;;1352:173::o;2002:29:96:-;;;-1:-1:-1;;;;;2002:29:96;;:::o;5638:688:91:-;5721:19;5754:21;5789:37;5840:19;5873:18;5905:25;5955:16;5974:9;;5955:28;;6008:23;:8;:21;:23::i;:::-;5993:38;;6058:25;:8;:23;:25::i;:::-;6041:42;;6125:40;:8;:38;:40::i;:::-;6093:72;;6189:22;:8;:20;:22::i;:::-;6175:36;;6237:24;:8;:22;:24::i;:::-;6221:40;;6291:28;:8;:26;:28::i;:::-;6271:48;;5638:688;;;;;;;:::o;6332:115::-;6385:7;6411:29;:9;;:27;:29::i;31631:770::-;31891:13;31906:27;31945:55;31981:8;:15;31998:1;31945:35;:55::i;:::-;32011:137;32024:6;32032;32040:9;32051:8;32061:15;32078:25;32105:8;32115:11;32128:19;32011:12;:137::i;:::-;31631:770;;;;;;;;;;:::o;30119:390:96:-;30181:7;30200:17;30220:14;:12;:14::i;:::-;30200:34;;30244:14;30261:13;:11;:13::i;:::-;30244:30;;30285:16;30303:20;30331:52;30357:14;;30373:9;30331:25;:52::i;:::-;-1:-1:-1;30284:99:96;;-1:-1:-1;30284:99:96;-1:-1:-1;30393:20:96;;-1:-1:-1;30416:38:96;30284:99;30416:20;:6;30284:99;30416:10;:20::i;:::-;:24;;:38::i;:::-;30393:61;-1:-1:-1;30471:31:96;:9;30393:61;30471:17;:31::i;:::-;30464:38;;;;;;;30119:390;:::o;2118:44::-;;;:::o;34240:211:91:-;34280:7;34394:50;34430:13;:11;:13::i;:::-;34394:27;34403:14;:12;:14::i;:::-;34419:1;34394:8;:27::i;:::-;:35;;:50::i;1073:34:90:-;;;-1:-1:-1;;;;;1073:34:90;;:::o;31769:285:96:-;31815:13;;-1:-1:-1;;;;;31871:13:96;31863:36;:83;;795:4:121;31863:83:96;;;31902:13;-1:-1:-1;;;;;31902:21:96;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;31855:91;-1:-1:-1;;;;;;31972:13:96;31964:36;:83;;795:4:121;31964:83:96;;;32003:13;-1:-1:-1;;;;;32003:21:96;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;31956:91;;31769:285;;:::o;3337:117:34:-;-1:-1:-1;;;;;3429:18:34;;3403:7;3429:18;;;;;;;;;;;3337:117;;;;:::o;21542:1060:91:-;21836:16;21854;21819:6;3135:68;3166:10;:8;:10::i;:::-;-1:-1:-1;;;;;3144:33:91;:10;:33;5392:3:17;3135:8:91;:68::i;:::-;3213:55;3232:11;:9;:11::i;:::-;3222:6;:21;10241:3:17;3213:8:91;:55::i;:::-;21882:23:::1;21896:8;21882:13;:23::i;:::-;21917:19;21938:27:::0;21967:38:::1;22009:196;22034:6;22054;22074:9;22097:8;22119:15;22148:25;22187:8;22009:11;:196::i;:::-;21916:289;;;;;;22311:36;22327:6;22335:11;22311:15;:36::i;:::-;22459:31;22479:10;22459:19;:31::i;:::-;22500:42;22520:21;22500:19;:42::i;:::-;22561:10:::0;;;;-1:-1:-1;21542:1060:91;-1:-1:-1;;;;;;;;;;21542:1060:91:o;1753:385:90:-;1850:10;;1862:15;;;;;;;;;;;;-1:-1:-1;;;1862:15:90;;;;;-1:-1:-1;;;;;1850:10:90;1836;:24;1828:50;;;;-1:-1:-1;;;1828:50:90;;;;;;;;:::i;:::-;-1:-1:-1;1896:10:90;:21;1919:9;;;;;;;;;;;;-1:-1:-1;;;1919:9:90;;;;;1896:21;;1888:41;;;;-1:-1:-1;;;1888:41:90;;;;;;;;:::i;:::-;-1:-1:-1;1964:17:90;;1940:10;:41;;2018:20;;;;2071:16;;;;;-1:-1:-1;;1940:41:90;;;;;;;;;;-1:-1:-1;;1991:47:90;1940:41;-1:-1:-1;;;;;1991:47:90;;;;;;;;-1:-1:-1;;;;;2048:39:90;;;-1:-1:-1;;;2048:39:90;;;;;;;;2103:28;;;;;;;:::i;4854:167:96:-;4902:33;;:::i;:::-;4937:35;;:::i;:::-;4991:23;:21;:23::i;:::-;4984:30;;;;4854:167;;:::o;2127:108:35:-;-1:-1:-1;;;;;2214:14:35;2188:7;2214:14;;;:7;:14;;;;;;;2127:108::o;790:308:93:-;899:12;;964:18;;;;;;;;;;;;-1:-1:-1;;;964:18:93;;;;-1:-1:-1;;;;;899:12:93;;;;952:10;929:33;;921:62;;;;-1:-1:-1;;;921:62:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;921:62:93;;;;;;;;;;;;;;;;;-1:-1:-1;993:12:93;:28;;-1:-1:-1;;;;;;993:28:93;-1:-1:-1;;;;;993:28:93;;;;;;;;;1036:55;;;;;;;;;;;;;;;;;;;;;;;;;;;790:308;;:::o;2068:44:96:-;;;:::o;1141:168:93:-;1194:12;;1222:18;;;;;;;;;;;;-1:-1:-1;;;1222:18:93;;;;;-1:-1:-1;;;;;1194:12:93;1210:10;1194:26;1186:55;;;;-1:-1:-1;;;1186:55:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1186:55:93;;;;;;;;;;;;;;;;;;1251:21;1267:4;1251:15;:21::i;:::-;1287:15;;;;;;;1141:168::o;2487:430:16:-;2859:50;;;2876:22;2859:50;;;;;;;;-1:-1:-1;;;;;;2859:50:16;;;;;;;;;;;;;;;;;;;;;;;;2849:61;;;;;;2487:430::o;29739:275:96:-;29789:7;29808:14;29825:13;:11;:13::i;:::-;29808:30;;29849:16;29867:20;29895:57;29921:14;;29937;:12;:14::i;:::-;29895:25;:57::i;:::-;-1:-1:-1;29848:104:96;;-1:-1:-1;29848:104:96;-1:-1:-1;29969:38:96;;-1:-1:-1;29848:104:96;29969:20;:6;29848:104;29969:10;:20::i;:38::-;29962:45;;;;;29739:275;:::o;30240:768:91:-;30500:14;30516:26;30554:55;30590:8;:15;30607:1;30554:35;:55::i;:::-;30620:135;30633:6;30641;30649:9;30660:8;30670:15;30687:25;30714:8;30724:11;30737:17;30620:12;:135::i;1776:80:4:-;1843:6;1776:80;:::o;1879:79:1:-;1945:6;1879:79;:::o;2332:85:34:-;2403:7;2396:14;;;;;;;;;;;;;-1:-1:-1;;2396:14:34;;;;;;;;;;;;;;;;;;;;;;;;;;2371:13;;2396:14;;2403:7;;2396:14;;;2403:7;2396:14;;;;;;;;;;;;;;;;;;;;;;;;8001:482:96;8044:17;8073:25;8101:17;:15;:17::i;:::-;8073:45;;8129:37;8168:51;8223:23;:21;:23::i;:::-;8128:118;;;;8256:17;8276:12;:31;8308:8;8318:10;8330:17;8276:72;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8256:92;;8370:61;8380:8;8390:9;8401:10;8413:17;8370:9;:61::i;:::-;8358:73;;8453:23;8466:9;8453:12;:23::i;:::-;8441:35;;8001:482;;;;;:::o;8098:98:91:-;8175:14;;8098:98;:::o;8508:3289:96:-;8704:7;2722:18:94;:16;:18::i;:::-;8679:7:96::1;:14;;;3135:68:91;3166:10;:8;:10::i;3135:68::-;3213:55;3232:11;:9;:11::i;3213:55::-;8758:15:96::2;::::0;::::2;::::0;8723:20:::2;::::0;8777:7:::2;-1:-1:-1::0;;;;;8758:26:96;;::::2;::::0;::::2;;:57:::0;::::2;;;-1:-1:-1::0;8788:16:96::2;::::0;::::2;::::0;8808:7:::2;-1:-1:-1::0;;;;;8788:27:96;;::::2;::::0;::::2;;8758:57;8754:309;;;-1:-1:-1::0;8849:4:96::2;8754:309;;;8874:15;::::0;::::2;::::0;8893:7:::2;-1:-1:-1::0;;;;;8874:26:96;;::::2;::::0;::::2;;:57:::0;::::2;;;-1:-1:-1::0;8904:16:96::2;::::0;::::2;::::0;8924:7:::2;-1:-1:-1::0;;;;;8904:27:96;;::::2;::::0;::::2;;8874:57;8870:193;;;-1:-1:-1::0;8965:5:96::2;8870:193;;;9001:51;381:3:97;9001:7:96;:51::i;:::-;9073:28;9104:31;9119:15;9104:14;:31::i;:::-;9073:62;;9145:29;9177:32;9193:15;9192:16;9177:14;:32::i;:::-;9145:64;;9280:46;9289:14;9305:20;9280:8;:46::i;:::-;9263:63;;9354:48;9363:15;9380:21;9354:8;:48::i;:::-;9336:66;;9600:25;9628:73;9652:14;9668:15;9685;9628:23;:73::i;:::-;9600:101;;9713:37;9752:51:::0;9807:23:::2;:21;:23::i;:::-;9712:118;;;;9840:37;;:::i;:::-;9902:23;9927:13:::0;9944:12:::2;:40;9985:8;9995:10;10007:17;9944:81;;;;;;;;;;;;;;;;;:::i;:::-;;::::0;::::2;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10239:69;::::0;;;;::::2;::::0;;;10279:1:::2;:10:::0;;::::2;10260:29:::0;::::2;10239:69:::0;;::::2;::::0;::::2;::::0;;;;;-1:-1:-1;;;;10333:40:96::2;::::0;-1:-1:-1;10333:40:96;::::2;:12:::0;;:40:::2;::::0;::::2;;;;;;;10329:1462;;;10592:17;10612:44;10633:22;:20;:22::i;:::-;10612:14;::::0;::::2;::::0;;:20:::2;:44::i;:::-;10592:64;;10687:61;10696:29;10715:9;10696:7;:14;;;:18;;:29;;;;:::i;:::-;10727:20;10687:8;:61::i;:::-;10670:14;::::0;::::2;:78:::0;10763:17:::2;10783:92;10670:7:::0;10807:8;10817:15;10834:10;10846:17;10865:9;10783:14:::2;:92::i;:::-;10763:112;;10895:42;10906:8;10916:9;10927;10895:42;;;;;;;;:::i;:::-;;;;;;;;11031:48;11046:9;11057:21;11031:14;:48::i;:::-;11024:55;;;;;;;;;;;;;10329:1462;11127:47;11136:7;:14;;;11152:21;11127:8;:47::i;:::-;11110:14;::::0;::::2;:64:::0;11189:16:::2;11208:93;11110:7:::0;11233:8;11243:15;11260:10;11272:17;11291:9;11208:15:::2;:93::i;:::-;11189:112;;11321:41;11332:8;11342:9;11353:8;11321:41;;;;;;;;:::i;:::-;;;;;;;;11458:44;11471:8;11481:20;11458:12;:44::i;:::-;11447:55;;11729:51;11744:35;:22;:20;:22::i;:::-;:33;:35::i;:::-;11729:8:::0;;:14:::2;:51::i;:::-;11722:58;;;;;;;;;;3278:1:91;2750::94::1;8508:3289:96::0;;;;;:::o;28685:496::-;28886:10;;28770:7;;;;;;;;28886:58;;-1:-1:-1;;;;;28886:10:96;28927:4;-1:-1:-1;;;28886:32:96;:58::i;:::-;28958:10;;:69;;-1:-1:-1;;;;;28958:10:96;29010:4;-1:-1:-1;;;28958:43:96;:69::i;:::-;29041:10;;:55;;-1:-1:-1;;;29041:55:96;;-1:-1:-1;;;;;29041:10:96;;;;-1:-1:-1;;29041:55:96;;-1:-1:-1;;;;29041:55:96;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29110:10;;:54;;-1:-1:-1;;;29110:54:96;;-1:-1:-1;;;;;29110:10:96;;;;-1:-1:-1;;29110:54:96;;-1:-1:-1;;;;29110:54:96;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28865:309;;;;;;;;28685:496;;;;:::o;3438:429:1:-;3523:4;3539:24;3566:30;3576:10;3588:7;3566:9;:30::i;:::-;3539:57;;3621:16;3611:6;:26;3607:232;;3653:32;3662:10;3674:7;3683:1;3653:8;:32::i;:::-;3607:232;;;3772:56;3781:10;3793:7;3821:6;3802:16;:25;3772:8;:56::i;:::-;-1:-1:-1;3856:4:1;;3438:429;-1:-1:-1;;;3438:429:1:o;3657:170:34:-;3743:4;3759:40;3769:10;3781:9;3792:6;3759:9;:40::i;1862:101:4:-;1910:11;1940:16;:14;:16::i;488:27:93:-;;;-1:-1:-1;;;;;488:27:93;;:::o;6872:342:96:-;6926:7;6945:25;6973:17;:15;:17::i;:::-;6945:45;;7001:37;7040:51;7095:23;:21;:23::i;:::-;7135:72;;-1:-1:-1;;;7135:72:96;;7000:118;;-1:-1:-1;7000:118:96;-1:-1:-1;7135:12:96;;:31;;:72;;7167:8;;7000:118;;;;7135:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1313:753:35:-;1575:60;1603:8;1584:15;:27;;5606:3:17;1575:8:35;:60::i;:::-;-1:-1:-1;;;;;1662:14:35;;;1646:13;1662:14;;;:7;:14;;;;;;;;;1717:68;;1728:16;1717:68;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1717:68:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;1707:79;;;;;;;;;1812:28;1707:79;1812:16;:28::i;:::-;1797:43;;1851:14;1868:24;1878:4;1884:1;1887;1890;1868:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1868:24:35;;-1:-1:-1;;1868:24:35;;;-1:-1:-1;1902:79:35;;-1:-1:-1;;;;;;1912:20:35;;;;;;1911:43;;-1:-1:-1;;;;;;1938:15:35;;;;;;;1911:43;10474:3:17;1902:8:35;:79::i;:::-;-1:-1:-1;;;;;1992:14:35;;;;;;:7;:14;;;;;-1:-1:-1;2009:9:35;;1992:26;;2028:31;1992:14;2044:7;2053:5;2028:8;:31::i;:::-;1313:753;;;;;;;;;;;:::o;11895:2126:91:-;12203:26;12231:38;12172:6;3135:68;3166:10;:8;:10::i;3135:68::-;3213:55;3232:11;:9;:11::i;3213:55::-;2722:18:94::1;:16;:18::i;:::-;12374:20:91::2;12408:13;:11;:13::i;:::-;12404:1611;;12470:54;12488:6;12496;12504:9;12515:8;12470:17;:54::i;:::-;12442:82:::0;-1:-1:-1;12442:82:91;-1:-1:-1;12819:58:91::2;1614:3;12828:28:::0;::::2;;5338:3:17;12819:8:91;:58::i;:::-;12891:41;12915:1;1614:3;12891:15;:41::i;:::-;12946:55;12962:9;1614:3;12973:12;:27;12946:15;:55::i;:::-;13088:28;13106:9;13088:17;:28::i;:::-;13230:16;::::0;;13244:1:::2;13230:16:::0;;;;;::::2;::::0;;;;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;;::::0;-1:-1:-1;13230:16:91::2;13206:40;;12404:1611;;;13277:23;13291:8;13277:13;:23::i;:::-;13366:228;13395:6;13419;13443:9;13470:8;13496:15;13529:25;13572:8;13366:11;:228::i;:::-;13315:279:::0;;-1:-1:-1;13315:279:91;-1:-1:-1;13315:279:91;-1:-1:-1;13708:40:91::2;13724:9:::0;13315:279;13708:15:::2;:40::i;:::-;13835:28;13853:9;13835:17;:28::i;:::-;13962:42;13982:21;13962:19;:42::i;:::-;2750:1:94;11895:2126:91::0;;;;;;;;;;;:::o;2260:254:1:-;2341:7;2383:10;:8;:10::i;:::-;-1:-1:-1;;;;;2364:30:1;;;;;;2360:148;;;-1:-1:-1;;;2410:18:1;;2360:148;2466:31;2482:5;2489:7;2466:15;:31::i;:::-;2459:38;;;;7512:117:91;7567:16;7602:20;:18;:20::i;1135:274:23:-;1345:5;1369:33;1345:5;1369:19;:33::i;:::-;1135:274;;:::o;4100:704:95:-;4170:85;4185:6;:8;;;4180:1;:13;;:32;;;;;1169:4;4197:6;:8;;;:15;;4180:32;509:3:97;4170:9:95;:85::i;:::-;4265;4280:6;:8;;;4275:1;:13;;:32;;;;;1169:4;4292:6;:8;;;:15;;509:3:97;4265:9:95;:85::i;:::-;4381:27;;;;;;;;4389:8;;;;4381:27;;4399:8;;;;4381:27;;;;4361:17;4435:18;4381:27;;4435:10;:18::i;:::-;4418:35;-1:-1:-1;4479:194:95;4502:36;:47;-1:-1:-1;4502:47:95;;;:98;;-1:-1:-1;4564:36:95;4553:47;;;4502:98;577:3:97;4479:9:95;:194::i;:::-;4684:113;4699:6;:13;;;4694:1;:18;;:58;;;;;1656:4;4716:6;:13;;;:36;;4694:58;817:3:97;4684:9:95;:113::i;:::-;4100:704;;;:::o;5083:194:14:-;5178:7;5204:66;:4;5222:18;2155:2;5204:17;:66::i;948:166:29:-;1006:7;1025:37;1039:1;1034;:6;;4370:1:17;1025:8:29;:37::i;:::-;-1:-1:-1;1084:5:29;;;948:166::o;6887:269:26:-;2598:11;7074:18;;7072:21;7056:37;;;;7133:15;;7111:38;;6887:269::o;1970:222:123:-;2033:6;2068:5;;;2089:6;;;:26;;;2114:1;2109;2099:7;:11;;;;;;:16;2089:26;2083:71;;2118:36;2127:5;4467:1:17;2118:8:123;:36::i;:::-;838:4;2172:13;;;;-1:-1:-1;;;1970:222:123:o;1137:266::-;1193:6;1295:5;;;1316:6;;;;:23;;1338:1;1334;:5;1316:23;;;1330:1;1325;:6;;1316:23;1310:68;;1342:36;1351:5;4322:1:17;1342:8:123;:36::i;9345:213:34:-;-1:-1:-1;;;;;9468:18:34;;;;;;;-1:-1:-1;9468:18:34;;;;;;;;:27;;;;;;;;;;;;;:36;;;9519:32;;;;;;;;;;;;;;;;;9345:213;;;:::o;2300:181:16:-;2355:16;2374:20;-1:-1:-1;;;;;;2386:7:16;;;2374:11;:20::i;:::-;2355:39;;2404:70;2413:33;2425:8;2435:10;2413:11;:33::i;:::-;8353:3:17;2404:8:16;:70::i;3545:358:94:-;3601:6;3597:232;;;3623:81;3650:24;:22;:24::i;:::-;3632:15;:42;8455:3:17;3623:8:94;:81::i;:::-;3597:232;;;3735:83;3762:25;:23;:25::i;:::-;3744:15;:43;9885:3:17;3735:8:94;:83::i;:::-;3839:7;:16;;-1:-1:-1;;3839:16:94;;;;;;;;;;3870:26;;;;;;;;;;;;;;;;;3545:358;:::o;4296:237::-;4343:4;4489:25;:23;:25::i;:::-;4471:15;:43;:55;;;-1:-1:-1;;4519:7:94;;;;4518:8;;4296:237::o;4646:108::-;4728:19;4646:108;:::o;4760:110::-;4843:20;4760:110;:::o;866:101:17:-;935:9;930:34;;946:18;954:9;946:7;:18::i;7068:559:34:-;7195:71;-1:-1:-1;;;;;7204:20:34;;;;8770:3:17;7195:8:34;:71::i;:::-;7276:72;-1:-1:-1;;;;;7285:23:34;;;;8838:3:17;7276:8:34;:72::i;:::-;7359:47;7380:6;7388:9;7399:6;7359:20;:47::i;:::-;-1:-1:-1;;;;;7437:17:34;;:9;:17;;;;;;;;;;;:68;;7459:6;9316:3:17;7437:21:34;:68::i;:::-;-1:-1:-1;;;;;7417:17:34;;;:9;:17;;;;;;;;;;;:88;;;;7538:20;;;;;;;:32;;7563:6;7538:24;:32::i;:::-;-1:-1:-1;;;;;7515:20:34;;;:9;:20;;;;;;;;;;;;:55;;;;7585:35;;;;;;;7515:20;;7585:35;;;;;;;;;;;;;7068:559;;;:::o;2386:188:33:-;2447:7;2494:10;2506:12;2520:15;2537:13;:11;:13::i;:::-;2483:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2560:4;2483:83;;;;;;;;;;;;;;;;;;;;;;;;2473:94;;;;;;2386:188;-1:-1:-1;2386:188:33:o;3972:98:94:-;4024:39;4033:14;:12;:14::i;:::-;8397:3:17;4024:8:94;:39::i;:::-;3972:98::o;6672:397:91:-;6748:87;1722:4;6757:17;:45;;5289:3:17;6748:8:91;:87::i;:::-;6845;1795:4;6854:17;:45;;5228:3:17;6845:8:91;:87::i;:::-;6955:9;;:49;;6986:17;6955:30;:49::i;:::-;6943:9;:61;7019:43;;;;;;7044:17;;7019:43;:::i;915:167:43:-;973:7;1004:5;;;1019:37;1028:6;;;;973:7;1019:8;:37::i;2239:130:14:-;2298:6;2323:39;:4;2298:6;2323:16;:39::i;2453:135::-;2514:6;2539:42;:4;1902:2;2539:16;:42::i;2691:168::-;2767:7;2793:59;:4;1978:2;2793:17;:59::i;2942:130::-;3000:7;3026:39;:4;2034:2;3026:17;:39::i;3145:129::-;3205:4;3228:39;:4;2092:2;3228:15;:39::i;3341:143::-;3405:7;3431:46;:4;2155:2;3431:17;:46::i;810:131:23:-;888:46;902:1;897;:6;5002:3:17;888:8:23;:46::i;20304:2909:96:-;20592:19;20625:27;20666:38;20884:37;20923:51;20978:23;:21;:23::i;:::-;20883:118;;;;21178:14;:12;:14::i;:::-;21174:1860;;;21546:72;;-1:-1:-1;;;21546:72:96;;21514:29;;21546:12;;:31;;:72;;21578:8;;21588:10;;21600:17;;21546:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21514:104;;21633:38;21649:21;21633:15;:38::i;:::-;21714:27;21722:8;21732;21714:7;:27::i;:::-;21686:55;;-1:-1:-1;21686:55:96;-1:-1:-1;22216:95:96;22254:21;21686:55;22290:13;:11;:13::i;:::-;22305:5;22216:37;:95::i;:::-;22199:14;:112;;;22331:57;;;;;;22350:21;;22199:112;22331:57;:::i;:::-;;;;;;;;21174:1860;;;;22617:27;22625:8;22635;22617:7;:27::i;:::-;-1:-1:-1;;22989:14:96;:34;22589:55;;-1:-1:-1;22589:55:96;-1:-1:-1;21174:1860:96;23189:16;;;23203:1;23189:16;;;;;;;;23164:11;;23177:10;;23189:16;23203:1;23189:16;;;;;;;;;;-1:-1:-1;23189:16:96;23156:50;;;;;;;;20304:2909;;;;;;;;;;;:::o;36830:235:91:-;36922:56;36945:7;36953:1;36945:10;;;;;;;;;;;;;;36957:20;36972:4;36957:14;:20::i;:::-;36922:22;:56::i;:::-;36909:7;36917:1;36909:10;;;;;;;;;;;;;:69;;;;;37001:57;37024:7;37032:1;37024:10;;;;;;;;;;;;;;37036:21;37051:5;37036:14;:21::i;37001:57::-;36988:7;36996:1;36988:10;;;;;;;;;;;;;:70;;;;;36830:235;:::o;38347:6537::-;39010:10;39032:4;39010:27;39006:5872;;39324:28;;39306:12;;39332:4;;39324:28;;39306:12;;39343:8;;39324:28;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39305:47;;;39570:7;39599:1;39594:3176;;;;42918:9;39594:3176;40050:4;40047:1;40044;40029:26;40099:1;40093:8;-1:-1:-1;;;;;;40089:81:91;-1:-1:-1;;;40313:77:91;;40307:2;;40442:16;40439:1;40436;40421:38;40494:16;40491:1;40484:27;40307:2;;41833;41827:4;41824:1;41809:27;42018:2;42012:4;42005:16;42426:2;42408:16;42404:25;42398:4;42392;42377:53;42748:2;42730:16;42726:25;42723:1;42716:36;39436:3523;42989:23;43003:8;42989:13;:23::i;:::-;43028:17;43047:29;43082:224;43107:6;43131;43155:9;43182:8;43208:15;43241:25;43284:8;43082:7;:224;;:::i;:::-;43027:279;;;;;43321:29;43337:12;43321:15;:29;;:::i;:::-;43831:19;;-1:-1:-1;;44218:23:91;;44258:24;;;44504:66;-1:-1:-1;;44486:16:91;;44479:92;-1:-1:-1;43827:28:91;-1:-1:-1;;44597:16:91;;44850:2;44840:13;;44597:16;44826:28;27180:913:96;27328:7;27349;27370;27391;27424:27;27453:30;27485:20;27507:19;27530:17;:15;:17::i;:::-;27423:124;;;;;;;;27643:19;27666:1;27643:24;27639:95;;;27691:1;;-1:-1:-1;27691:1:96;;-1:-1:-1;27697:12:96;;-1:-1:-1;27711:11:96;-1:-1:-1;27683:40:96;;-1:-1:-1;;27683:40:96;27639:95;27778:16;27796:20;27820:197;27864:17;27895:16;27925:13;:11;:13::i;:::-;27952:19;27985:22;27820:30;:197::i;:::-;27777:240;;-1:-1:-1;27777:240:96;-1:-1:-1;28060:12:96;;-1:-1:-1;28074:11:96;;-1:-1:-1;;;;;27180:913:96;;;;;;;;:::o;1165:277:121:-;1223:7;1327:5;;;1348:6;;;;1342:76;;1371:36;1380:5;4322:1:17;1371:8:121;:36::i;3345:400::-;3407:7;3430:6;3426:74;;3452:37;3461:5;4516:1:17;3452:8:121;:37::i;:::-;3514:6;3510:45;;-1:-1:-1;3543:1:121;3536:8;;3510:45;795:4;3585:7;;;;:1;:7;:1;3608:13;;;;;:20;3602:106;;3645:36;3654:5;4564:1:17;3645:8:121;:36::i;:::-;3737:1;3725:9;:13;;;;;;;3345:400;-1:-1:-1;;;;3345:400:121:o;1793:180:29:-;1851:7;1882:5;;;1897:51;1906:6;;;:20;;;1925:1;1920;1916;:5;;;;;;:10;1906:20;4467:1:17;1897:8:29;:51::i;36040:229:91:-;36126:56;36149:7;36157:1;36149:10;;;;;;;;;;;;;;36161:20;36176:4;36161:14;:20::i;:::-;36126:22;:56::i;:::-;36113:7;36121:1;36113:10;;;;;;;;;;;;;:69;;;;;36205:57;36228:7;36236:1;36228:10;;;;;;;;;;;;;;36240:21;36255:5;36240:14;:21::i;4016:104:1:-;4092:21;4098:6;4106;4092:5;:21::i;4401:447:96:-;4457:33;;:::i;:::-;4492:35;;:::i;:::-;4652:13;4587;;;;4539:127;;;;4642:8;4577;;;;4539:127;;;;4632:8;4567;;;;4539:127;;;;4619:11;4554;;;;4539:127;;;;4605:12;4539:127;;4677:10;;4705:9;;;;4769;4718:11;;;4676:103;4758:9;4676:103;;4746:10;4691:12;;;4676:103;;;;4734:10;4676:103;;4836:4;4810:5;;;4789:52;4832:2;4805:3;;;4789:52;4828:2;4800:3;;;4789:52;;;;4824:2;4795:3;;;4789:52;4820:2;4790:3;;;4789:52;4540:6;;4401:447::o;16148:1970::-;16445:7;16466:16;16496;16825:37;16864:51;16919:23;:21;:23::i;:::-;16824:118;;;;16952:29;16984:12;:31;17016:8;17026:10;17038:17;16984:72;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16952:104;;17067:38;17083:21;17067:15;:38::i;:::-;17117:20;17139:26;17169:27;17177:8;17187;17169:7;:27::i;:::-;17211:10;:21;17116:80;;-1:-1:-1;17116:80:96;-1:-1:-1;17211:21:96;;17207:113;;;17248:61;17259:12;17273:20;17283:9;17273;:20::i;:::-;17295:13;:11;:13::i;:::-;17248:10;:61::i;:::-;17770:95;17808:21;17831:12;17845:13;:11;:13::i;:::-;17860:4;17770:37;:95::i;:::-;17753:14;:112;;;17881:57;;;;;;17900:21;;17753:112;17881:57;:::i;:::-;;;;;;;;18094:16;;;18108:1;18094:16;;;;;;;;18069:12;;18083:9;;18094:16;18108:1;18094:16;;;;;;;;;;-1:-1:-1;18094:16:96;18061:50;;;;;;;;;;;16148:1970;;;;;;;;;;;:::o;37618:229:91:-;37708:54;37729:7;37737:1;37729:10;;;;;;;;;;;;;;37741:20;37756:4;37741:14;:20::i;:::-;37708;:54::i;:::-;37695:7;37703:1;37695:10;;;;;;;;;;;;;:67;;;;;37785:55;37806:7;37814:1;37806:10;;;;;;;;;;;;;;37818:21;37833:5;37818:14;:21::i;6162:523:96:-;6482:16;;;6496:1;6482:16;;;6212:25;6482:16;;;;;6212:25;6482:16;;;;;;;;;;-1:-1:-1;6482:16:96;6471:27;;6522:53;6545:7;6554:20;6569:4;6554:14;:20::i;:::-;6522:22;:53::i;:::-;6508:8;6517:1;6508:11;;;;;;;;;;;;;:67;;;;;6599:54;6622:7;6631:21;6646:5;6631:14;:21::i;6599:54::-;6585:8;6594:1;6585:11;;;;;;;;;;;;;:68;;;;;6162:523;:::o;7445:359::-;7663:17;7704:12;:30;7735:8;7745:10;7757:17;7776:20;:9;:18;:20::i;:::-;7704:93;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7692:105;7445:359;-1:-1:-1;;;;;7445:359:96:o;31156:327::-;31229:7;-1:-1:-1;;;;;31260:13:96;31252:36;;31248:96;;31302:42;31320:13;-1:-1:-1;;;;;31320:21:96;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;31302:9;;:17;:42::i;:::-;31290:54;;31248:96;-1:-1:-1;;;;;31366:13:96;31358:36;;31354:96;;31408:42;31426:13;-1:-1:-1;;;;;31426:21:96;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;31408:9;;:17;:42::i;:::-;31396:54;;31354:96;-1:-1:-1;31467:9:96;31156:327::o;1074:3172:17:-;-1:-1:-1;;;3588:3:17;3581:79;;;3799:66;3793:4;3786:80;3941:1;3935:4;3928:15;2210:2;2243:18;;;2336;;;2383;;;2215:4;2379:29;;;3057:2;3053:17;2195:18;;;;2288;;;;2284:29;;;;3040:1;3036:14;3025:26;;;;3021:50;;;;2999:73;;2994:3;2990:83;4008:4;4001:26;4234:3;;4224:14;30633:517:96;30702:7;30721:26;30757:21;30792:6;30788:214;;;-1:-1:-1;30829:13:96;;-1:-1:-1;30872:15:96;30788:214;;;-1:-1:-1;30933:13:96;;-1:-1:-1;30976:15:96;30788:214;-1:-1:-1;;;;;31015:35:96;;;31011:102;;31068:45;31090:12;-1:-1:-1;;;;;31090:20:96;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;31068:13;;:21;:45::i;:::-;31052:61;31130:13;-1:-1:-1;;;;30633:517:96:o;35695:158:91:-;35775:7;35801:45;35824:6;35832:13;35801:22;:45::i;24768:456:96:-;24973:16;;;24987:1;24973:16;;;24925:25;24973:16;;;;;24925:25;24973:16;;;;;;;;;;-1:-1:-1;24973:16:96;24962:27;;25003:15;24999:219;;;25048:14;25034:8;25043:1;25034:11;;;;;;;;;;;;;:28;;;;;25090:15;25076:8;25085:1;25076:11;;;;;;;;;;;;;:29;;;;;24999:219;;;25150:15;25136:8;25145:1;25136:11;;;;;;;;;;;;;:29;;;;;25193:14;25179:8;25188:1;25179:11;;;;;;;;;;;;;:28;;;;;24768:456;;;;;:::o;2208:615:121:-;2268:7;2305:5;;;2326:6;;;:26;;;2351:1;2346;2336:7;:11;;;;;;:16;2326:26;2320:96;;2369:36;2378:5;4467:1:17;2369:8:121;:36::i;:::-;2430:12;2426:51;;2465:1;2458:8;;;;;2426:51;795:4;-1:-1:-1;;2793:11:121;;2792:19;;2815:1;2791:25;2784:32;;;2208:615;;;;:::o;1448:277::-;1506:7;1609:1;1604;:6;;1598:76;;1627:36;1636:5;4370:1:17;1627:8:121;:36::i;11803:521:96:-;12239:18;;;;12201:116;;-1:-1:-1;;;12201:116:96;;12115:7;;12201:12;;:27;;:116;;12229:8;;12239:18;12259:15;;12276:10;;12288:17;;12307:9;;12201:116;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12194:123;11803:521;-1:-1:-1;;;;;;;11803:521:96:o;36473:164:91:-;36559:7;36585:45;36608:6;36616:13;36585:22;:45::i;12330:522:96:-;12767:18;;;;12729:116;;-1:-1:-1;;;12729:116:96;;12643:7;;12729:12;;:27;;:116;;12757:8;;12767:18;12787:15;;12804:10;;12816:17;;12835:9;;12729:116;;;:::i;37267:160:91:-;37351:7;37377:43;37398:6;37406:13;37377:20;:43::i;9321:112:121:-;9375:7;795:4;9402:1;:7;9401:25;;9425:1;9401:25;;;-1:-1:-1;795:4:121;9414:7;;9321:112::o;3950:722::-;4010:7;4033:6;4029:74;;4055:37;4064:5;4516:1:17;4055:8:121;:37::i;:::-;4117:6;4113:45;;-1:-1:-1;4146:1:121;4139:8;;4113:45;795:4;4188:7;;;;:1;:7;:1;4211:13;;;;;:20;4205:121;;4248:51;795:4;4269:1;4257:9;:13;;;;;;:20;4564:1:17;4248:8:121;:51::i;:::-;4659:1;4654;4642:9;:13;4641:19;;;;167:273:118;314:7;340:93;356:10;-1:-1:-1;;;411:8:118;421:11;340:15;:93::i;446:287::-;604:7;630:96;646:10;658:44;704:8;714:11;630:15;:96::i;37853:488:91:-;37911:11;38308:10;:8;:10::i;:::-;-1:-1:-1;;;;;38308:24:91;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3199:183:33:-;3276:7;3341:20;:18;:20::i;:::-;3363:10;3312:62;;;;;;-1:-1:-1;;;3312:62:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3302:73;;;;;;3295:80;;3199:183;;;:::o;13664:1347:96:-;13806:7;13815:16;13843:30;13876:19;:8;:17;:19::i;:::-;13843:52;-1:-1:-1;13905:70:96;13922:30;13914:4;:38;;;;;;;;;5443:3:17;13905:8:96;:70::i;:::-;13986:26;14015:27;:8;:25;:27::i;:::-;13986:56;;14052;14088:9;:16;14106:1;14052:35;:56::i;:::-;14118:24;14132:9;14118:13;:24::i;:::-;14154:37;14193:51;14248:23;:21;:23::i;:::-;14153:118;;;;14281:26;14310:12;:31;14342:9;14353:10;14365:17;14310:73;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14281:102;;14399:47;14427:18;14399:47;;;;;;:::i;:::-;;;;;;;;14736:17;14756:71;14766:9;14777:18;14797:10;14809:17;14756:9;:71::i;:::-;14736:91;;14837:20;14860:55;14869:31;14890:9;14869;14879:1;14869:12;;;;;;;;;;;;;;:20;;:31;;;;:::i;:::-;14902:9;14912:1;14902:12;;;;;;;;;;;;;;14860:8;:55::i;:::-;14926:14;:35;;;;-1:-1:-1;14926:35:96;;14994:9;;-1:-1:-1;13664:1347:96;;-1:-1:-1;;;;;;;;;13664:1347:96:o;3900:110:1:-;3979:24;3985:9;3996:6;3979:5;:24::i;3885:149:34:-;-1:-1:-1;;;;;4000:18:34;;;3974:7;4000:18;;;-1:-1:-1;4000:18:34;;;;;;;;:27;;;;;;;;;;;;;3885:149::o;7635:298:91:-;7761:16;;;7775:1;7761:16;;;7696;7761;;;;;7696;7724:34;;7761:16;7775:1;7761:16;;;;;;;;;;-1:-1:-1;7761:16:91;7724:53;;7810:24;7829:4;7810:18;:24::i;:::-;7787:17;7805:1;7787:20;;;;;;;;;;;;;:47;;;;;7867:25;7886:5;7867:18;:25::i;:::-;7844:17;7862:1;7844:20;;;;;;;;;;;;;;;;;:48;7909:17;-1:-1:-1;7635:298:91;:::o;1415:374:23:-;1511:1;1496:5;:12;:16;1492:53;;;1528:7;;1492:53;1555:16;1574:5;1580:1;1574:8;;;;;;;;;;;;;;1555:27;;1597:9;1609:1;1597:13;;1592:191;1616:5;:12;1612:1;:16;1592:191;;;1649:15;1667:5;1673:1;1667:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;1689:51:23;-1:-1:-1;;;;;1698:18:23;;;;;;;4890:3:17;1689:8:23;:51::i;:::-;1765:7;-1:-1:-1;1630:3:23;;1592:191;;388:103:120;458:9;453:35;;469:19;478:9;469:8;:19::i;6472:164:95:-;6553:10;6581:48;6607:21;6623:2;:4;;;6607:2;:4;;;:15;;:21;;;;:::i;:::-;6597:4;;6581;;:21;;:15;:21::i;:::-;:25;;:48::i;1969:544:4:-;2057:4;1663:42;2078:10;:8;:10::i;:::-;-1:-1:-1;;;;;2078:29:4;;;;;2077:63;;;2112:28;2131:8;2112:18;:28::i;:::-;2073:434;;;2272:10;:8;:10::i;:::-;-1:-1:-1;;;;;2258:24:4;:10;:24;;-1:-1:-1;2251:31:4;;2073:434;2435:16;:14;:16::i;:::-;:61;;;-1:-1:-1;;;2435:61:4;;;;;;;;-1:-1:-1;;;;;2435:61:4;;;;;;;2490:4;2435:61;;;;;;:27;;;;;;;:61;;;;;;;;;;;;;;;:27;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2435:61:4;;-1:-1:-1;2428:68:4;;1765:176:43;1842:7;1861:27;1875:1;1870;:6;;1878:9;1861:8;:27::i;:::-;-1:-1:-1;;1910:5:43;;;1765:176::o;3388:427:33:-;3790:9;;3765:44::o;12135:487:26:-;12209:6;12257:14;;;2386:11;12249:34;2846:11;12558:19;;:57;;12610:5;12558:57;;;-1:-1:-1;;12581:25:26;;;-1:-1:-1;;;12135:487:26:o;11062:142::-;11171:14;2439:11;11163:34;;11062:142::o;10534:::-;10643:14;2280:11;10635:34;;10534:142::o;9730:143::-;9835:14;2126:10;9827:33;;;9826:40;;9730:143::o;11590:142::-;11699:14;2598:11;11691:34;;11590:142::o;25684:583:96:-;25977:16;25995:20;26017;26039:19;26062:98;26101:14;;26129:21;26062:25;:98::i;:::-;25976:184;;;;;;;;26198:62;26210:8;26220:12;26234;26248:11;26198;:62::i;:::-;25684:583;;;;;:::o;23219:592::-;23309:19;23330:27;23369:30;23402:19;:8;:17;:19::i;:::-;23369:52;-1:-1:-1;23584:53:96;23576:4;:61;;;;;;;;;23572:233;;;23681:47;23709:8;23719;23681:27;:47::i;:::-;23653:75;;-1:-1:-1;23653:75:96;-1:-1:-1;23572:233:96;;;23759:35;7850:3:17;23759:7:96;:35::i;:::-;23219:592;;;;;;:::o;10967:743:122:-;11153:21;11222:13;11218:486;;;11325:10;11338:57;11378:16;11338:33;:10;11355:15;11338:16;:33::i;:::-;:39;;:57::i;:::-;11325:70;-1:-1:-1;11425:18:122;:10;11325:70;11425:14;:18::i;:::-;11409:34;;11218:486;;;;11571:10;11584:61;11628:16;11584:35;:10;11603:15;11584:18;:35::i;:61::-;11571:74;-1:-1:-1;11675:18:122;:10;11571:74;11675:14;:18::i;:::-;11659:34;10967:743;-1:-1:-1;;;;;;10967:743:122:o;4207:2410::-;4443:7;4452;5186:17;5166:16;:37;5162:443;;-1:-1:-1;5589:1:122;;-1:-1:-1;5589:1:122;5581:13;;5162:443;6057:17;6077:96;6153:19;6078:65;6103:39;:16;6124:17;6103:20;:39::i;:::-;6078:16;;:24;:65::i;:::-;6077:75;;:96::i;:::-;6057:116;-1:-1:-1;6183:21:122;6207:68;6235:39;:16;6256:17;6235:20;:39::i;:::-;6207:19;;:27;:68::i;:::-;6183:92;-1:-1:-1;6285:19:122;6307:35;:16;6183:92;6307:20;:35::i;:::-;6285:57;-1:-1:-1;6352:14:122;6369:30;:9;6285:57;6369:17;:30::i;:::-;6352:47;-1:-1:-1;6458:16:122;6477:38;:22;6352:47;6477:30;:38::i;:::-;6458:57;-1:-1:-1;6525:20:122;6548;:6;6458:57;6548:10;:20::i;:::-;6587:8;;-1:-1:-1;6525:43:122;;-1:-1:-1;;;;;;4207:2410:122;;;;;;;;;:::o;1731:247:121:-;1793:7;1830:5;;;1851:6;;;:26;;;1876:1;1871;1861:7;:11;;;;;;:16;1851:26;1845:96;;1894:36;1903:5;4467:1:17;1894:8:121;:36::i;:::-;795:4;1958:7;:13;;8512:410:34;8587:68;-1:-1:-1;;;;;8596:21:34;;;;8968:3:17;8587:8:34;:68::i;:::-;8666:49;8687:7;8704:1;8708:6;8666:20;:49::i;:::-;-1:-1:-1;;;;;8747:18:34;;:9;:18;;;;;;;;;;;:67;;8770:6;9382:3:17;8747:22:34;:67::i;:::-;-1:-1:-1;;;;;8726:18:34;;:9;:18;;;;;;;;;;:88;8839:12;;:24;;8856:6;8839:16;:24::i;:::-;8824:12;:39;8878:37;;;;;;;;8904:1;;-1:-1:-1;;;;;8878:37:34;;;;;;;;;;;;8512:410;;:::o;18124:581:96:-;18214:20;18236:26;18274:30;18307:19;:8;:17;:19::i;:::-;18274:52;-1:-1:-1;18471:57:96;18463:4;:65;;;;;;;;;18459:240;;;18572:50;18603:8;18613;18572:30;:50::i;18459:240::-;18653:35;6263:3:17;18653:7:96;:35::i;2144:362:90:-;2284:36;;;;;;;;2310:10;2284:36;;;;;;;;;;;-1:-1:-1;;;;;2284:36:90;;;;;;;-1:-1:-1;;;2284:36:90;;;-1:-1:-1;;;;;2284:36:90;;;;;;;;;2338:29;:12;2355:11;2338:16;:29::i;:::-;:53;;2393:17;;;;;;;;;;;;;;;;;2330:81;;;;;-1:-1:-1;;;2330:81:90;;;;;;;;:::i;:::-;-1:-1:-1;2464:16:90;;;;-1:-1:-1;;;;;2429:51:90;:31;:12;2446:13;2429:16;:31::i;:::-;:51;;2482:16;;;;;;;;;;;;;;;;;2421:78;;;;;-1:-1:-1;;;2421:78:90;;;;;;;;:::i;5398:588:96:-;5490:15;5735:12;5749:15;5772:10;:8;:10::i;:::-;-1:-1:-1;;;;;5772:27:96;;5800:11;:9;:11::i;:::-;5813:5;5772:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;5839:14:96;;;;-1:-1:-1;5734:85:96;;-1:-1:-1;5734:85:96;-1:-1:-1;5949:30:96;5839:14;5965:13;5949:15;:30::i;6362:178:77:-;6418:6;-1:-1:-1;;;6444:14:77;;6436:67;;;;-1:-1:-1;;;6436:67:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;739:809:118;962:34;;;;;;;;;;-1:-1:-1;;;;;962:34:118;;;;;;;;;;;;;;;;;;;;;;952:45;;;;;;;;;-1:-1:-1;;;1203:34:118;;;;;;;;;;;-1:-1:-1;;952:45:118;1203:17;;;;-1:-1:-1;;1203:34:118;;;;;;;;;;;:17;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1203:34:118;1199:107;;;1260:35;;;-1:-1:-1;;;1260:35:118;;;;;;;;;;-1:-1:-1;;;;;1260:18:118;;;;;:35;;;;;;;;;;;;;;:18;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1260:35:118;;-1:-1:-1;1253:42:118;;-1:-1:-1;1253:42:118;1199:107;1348:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1338:48;;;;;;;;;-1:-1:-1;;;1400:30:118;;;;;;;;;;;-1:-1:-1;;;;;1400:17:118;;;-1:-1:-1;;1400:30:118;;;;;1348:37;;1400:30;;;;;:17;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1400:30:118;1396:99;;;1453:31;;;-1:-1:-1;;;1453:31:118;;;;;;;;;;-1:-1:-1;;;;;1453:18:118;;;;;:31;;;;;;;;;;;;;;:18;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1453:31:118;;-1:-1:-1;1446:38:118;;-1:-1:-1;;1446:38:118;1396:99;1512:29;;;-1:-1:-1;;;1512:29:118;;;;;;;;;;-1:-1:-1;;;;;1512:18:118;;;;;:29;;;;;;;;;;;;;;:18;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1512:29:118;;739:809;-1:-1:-1;;;;;;;739:809:118:o;867:156:15:-;927:25;982:4;971:45;;;;;;;;;;;;;;;-1:-1:-1;971:45:15;;867:156;-1:-1:-1;;867:156:15:o;1205:185::-;1273:26;1338:4;1327:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1327:56:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1327:56:15;;;;;;-1:-1:-1;1311:72:15;;1205:185;-1:-1:-1;;;;;;1205:185:15:o;7898:294:34:-;7973:49;8002:1;8006:7;8015:6;7973:20;:49::i;:::-;8048:12;;:24;;8065:6;8048:16;:24::i;:::-;8033:12;:39;-1:-1:-1;;;;;8103:18:34;;:9;:18;;;;;;;;;;;:30;;8126:6;8103:22;:30::i;:::-;-1:-1:-1;;;;;8082:18:34;;:9;:18;;;;;;;;;;;:51;;;;8148:37;;;;;;;8082:18;;:9;;8148:37;;;;;;;;;;7898:294;;:::o;7939:153:91:-;8011:7;8037:6;:48;;8067:18;8037:48;;;-1:-1:-1;8046:18:91;;7939:153;-1:-1:-1;7939:153:91:o;925:128:120:-;973:29;982:9;-1:-1:-1;;;973:8:120;:29::i;7075:279:91:-;7161:4;7209:51;-1:-1:-1;;;7209:11:91;:51::i;:::-;7197:8;:63;7196:151;;;-1:-1:-1;7290:56:91;-1:-1:-1;;;7290:11:91;:56::i;:::-;7278:68;;;;7075:279;-1:-1:-1;7075:279:91:o;28172:434:96:-;28381:12;;28377:82;;28409:39;28425:12;28439:8;28409:15;:39::i;:::-;28515:16;;28511:89;;28547:42;28563:11;28576:12;28547:15;:42::i;:::-;28172:434;;;;:::o;23817:928::-;23968:7;23977:16;24420:19;24442:33;:8;:31;:33::i;:::-;24420:55;;24586:27;24616:80;24659:8;24669:11;24682:13;:11;:13::i;:::-;24616:42;:80::i;:::-;24714:11;;;;-1:-1:-1;23817:928:96;;-1:-1:-1;;;;23817:928:96:o;1353:121:43:-;1411:7;1437:30;1441:1;1444;4370::17;1437:3:43;:30::i;18711:528:96:-;18865:7;18874:16;18906:20;18929:36;:8;:34;:36::i;:::-;18906:59;;19076:26;19105:84;19151:8;19161:12;19175:13;:11;:13::i;:::-;19105:45;:84::i;1160:3379:120:-;-1:-1:-1;;;1223:18:120;3874:79;;;4092:66;4086:4;4079:80;4234:1;4228:4;4221:15;2362:2;2395:18;;;2440;;;2367:4;2436:29;;;3238:1;3329:14;2347:18;;;;3318:26;;;;2488:18;;;;2535;;;2531:29;;3350:2;3346:17;3314:50;3228:4;3234:18;;;;;;3224:29;3220:2;3216:38;3293:72;;;;3288:3;3284:82;4301:4;4294:26;1252:14;;;;;4527:3;;4517:14;2343:184:15;2417:19;2477:4;2466:54;;;;;;;;;;;;;;;-1:-1:-1;2466:54:15;;;;2343:184;-1:-1:-1;;2343:184:15:o;2432:1444:122:-;2584:27;3685:8;:15;3671:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3671:30:122;;3658:43;;3716:9;3711:131;3735:8;:15;3731:1;:19;3711:131;;;3787:44;3822:8;3787:26;3807:5;3787:8;3796:1;3787:11;;;;;;;:44;3771:10;3782:1;3771:13;;;;;;;;;;;;;;;;;:60;3752:3;;3711:131;;1163:1175;1319:26;2152:8;:15;2138:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2138:30:122;;2126:42;;2183:9;2178:127;2202:8;:15;2198:1;:19;2178:127;;;2253:41;2285:8;2253:25;2271:6;2253:8;2262:1;2253:11;;;;;;;;;;;;;;:17;;:25;;;;:::i;:41::-;2238:9;2248:1;2238:12;;;;;;;;;;;;;;;;;:56;2219:3;;2178:127;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;14:138:124:-;84:20;;113:33;84:20;113:33;:::i;157:162::-;224:20;;280:13;;273:21;263:32;;253:2;;309:1;306;299:12;324:542;;421:3;414:4;406:6;402:17;398:27;388:2;;443:5;436;429:20;388:2;483:6;470:20;509:18;505:2;502:26;499:2;;;531:9;499:2;566:54;614:4;-1:-1:-1;;608:2:124;589:13;;585:27;581:38;566:54;:::i;:::-;645:2;636:7;629:19;691:3;684:4;679:2;671:6;667:15;663:26;660:35;657:2;;;712:5;705;698:20;657:2;781;774:4;766:6;762:17;755:4;746:7;742:18;729:55;804:16;;;822:4;800:27;793:42;;;;808:7;378:488;-1:-1:-1;;378:488:124:o;871:152::-;948:20;;997:1;987:12;;977:2;;1013:1;1010;1003:12;1028:259;;1140:2;1128:9;1119:7;1115:23;1111:32;1108:2;;;1161:6;1153;1146:22;1108:2;1205:9;1192:23;1224:33;1251:5;1224:33;:::i;1292:263::-;;1415:2;1403:9;1394:7;1390:23;1386:32;1383:2;;;1436:6;1428;1421:22;1383:2;1473:9;1467:16;1492:33;1519:5;1492:33;:::i;1560:402::-;;;1689:2;1677:9;1668:7;1664:23;1660:32;1657:2;;;1710:6;1702;1695:22;1657:2;1754:9;1741:23;1773:33;1800:5;1773:33;:::i;:::-;1825:5;-1:-1:-1;1882:2:124;1867:18;;1854:32;1895:35;1854:32;1895:35;:::i;:::-;1949:7;1939:17;;;1647:315;;;;;:::o;1967:470::-;;;;2113:2;2101:9;2092:7;2088:23;2084:32;2081:2;;;2134:6;2126;2119:22;2081:2;2178:9;2165:23;2197:33;2224:5;2197:33;:::i;:::-;2249:5;-1:-1:-1;2306:2:124;2291:18;;2278:32;2319:35;2278:32;2319:35;:::i;:::-;2071:366;;2373:7;;-1:-1:-1;;;2427:2:124;2412:18;;;;2399:32;;2071:366::o;2442:853::-;;;;;;;;2654:3;2642:9;2633:7;2629:23;2625:33;2622:2;;;2676:6;2668;2661:22;2622:2;2720:9;2707:23;2739:33;2766:5;2739:33;:::i;:::-;2791:5;-1:-1:-1;2848:2:124;2833:18;;2820:32;2861:35;2820:32;2861:35;:::i;:::-;2915:7;-1:-1:-1;2969:2:124;2954:18;;2941:32;;-1:-1:-1;3020:2:124;3005:18;;2992:32;;-1:-1:-1;3076:3:124;3061:19;;3048:33;3125:4;3112:18;;3100:31;;3090:2;;3150:6;3142;3135:22;3090:2;2612:683;;;;-1:-1:-1;2612:683:124;;;;3178:7;3232:3;3217:19;;3204:33;;-1:-1:-1;3284:3:124;3269:19;;;3256:33;;2612:683;-1:-1:-1;;2612:683:124:o;3300:327::-;;;3429:2;3417:9;3408:7;3404:23;3400:32;3397:2;;;3450:6;3442;3435:22;3397:2;3494:9;3481:23;3513:33;3540:5;3513:33;:::i;:::-;3565:5;3617:2;3602:18;;;;3589:32;;-1:-1:-1;;;3387:240:124:o;3632:192::-;;3741:2;3729:9;3720:7;3716:23;3712:32;3709:2;;;3762:6;3754;3747:22;3709:2;3790:28;3808:9;3790:28;:::i;3829:1670::-;;;;;;;;4077:3;4065:9;4056:7;4052:23;4048:33;4045:2;;;4099:6;4091;4084:22;4045:2;4140:9;4127:23;4117:33;;4200:2;4189:9;4185:18;4172:32;4213:33;4240:5;4213:33;:::i;:::-;4265:5;-1:-1:-1;4322:2:124;4307:18;;4294:32;4335:35;4294:32;4335:35;:::i;:::-;4389:7;-1:-1:-1;4447:2:124;4432:18;;4419:32;4470:18;4500:14;;;4497:2;;;4532:6;4524;4517:22;4497:2;4575:6;4564:9;4560:22;4550:32;;4620:7;4613:4;4609:2;4605:13;4601:27;4591:2;;4647:6;4639;4632:22;4591:2;4688;4675:16;4710:2;4706;4703:10;4700:2;;;4716:9;4700:2;4754;4750;4746:11;4777:27;4800:2;4796;4792:11;4777:27;:::i;:::-;4826:3;4850:2;4845:3;4838:15;4878:2;4873:3;4869:12;4862:19;;4909:2;4905;4901:11;4949:7;4944:2;4939;4935;4931:11;4927:20;4924:33;4921:2;;;4975:6;4967;4960:22;4921:2;5002:6;4993:15;;5017:163;5031:2;5028:1;5025:9;5017:163;;;5088:17;;5076:30;;5049:1;5042:9;;;;;5135:2;5126:12;;;;5158;5017:163;;;-1:-1:-1;5199:5:124;-1:-1:-1;;;;5251:3:124;5236:19;;5223:33;;-1:-1:-1;5303:3:124;5288:19;;5275:33;;-1:-1:-1;5361:3:124;5346:19;;5333:33;;-1:-1:-1;5378:16:124;;;5375:2;;;5412:6;5404;5397:22;5375:2;;5440:53;5485:7;5474:8;5463:9;5459:24;5440:53;:::i;:::-;5430:63;;;4035:1464;;;;;;;;;;:::o;5504:306::-;;5615:2;5603:9;5594:7;5590:23;5586:32;5583:2;;;5636:6;5628;5621:22;5583:2;5667:23;;-1:-1:-1;;;;;;5719:32:124;;5709:43;;5699:2;;5771:6;5763;5756:22;6104:253;;;6242:2;6230:9;6221:7;6217:23;6213:32;6210:2;;;6263:6;6255;6248:22;6210:2;-1:-1:-1;;6291:16:124;;6347:2;6332:18;;;6326:25;6291:16;;6326:25;;-1:-1:-1;6200:157:124:o;6362:847::-;;6502:2;6490:9;6481:7;6477:23;6473:32;6470:2;;;6523:6;6515;6508:22;6470:2;6561;6555:9;6603:2;6595:6;6591:15;6672:6;6660:10;6657:22;6636:18;6624:10;6621:34;6618:62;6615:2;;;6683:9;6615:2;6710;6703:22;6749:28;6767:9;6749:28;:::i;:::-;6734:44;;6828:2;6813:18;;6800:32;-1:-1:-1;;;;;6861:44:124;;6851:55;;6841:2;;6925:6;6917;6910:22;6841:2;6962;6950:15;;6943:30;7025:2;7010:18;;6997:32;-1:-1:-1;;;;;7060:48:124;;7048:61;;7038:2;;7128:6;7120;7113:22;7038:2;7165;7153:15;;7146:32;7157:6;6460:749;-1:-1:-1;;;6460:749:124:o;7214:1351::-;;;;7390:2;7378:9;7369:7;7365:23;7361:32;7358:2;;;7411:6;7403;7396:22;7358:2;7456:9;7443:23;7485:18;7526:2;7518:6;7515:14;7512:2;;;7547:6;7539;7532:22;7512:2;7590:6;7579:9;7575:22;7565:32;;7616:6;7656:2;7651;7642:7;7638:16;7634:25;7631:2;;;7677:6;7669;7662:22;7631:2;7708:18;7723:2;7708:18;:::i;:::-;7695:31;;7749;7777:2;7749:31;:::i;:::-;7742:5;7735:46;7813:33;7842:2;7838;7834:11;7813:33;:::i;:::-;7808:2;7801:5;7797:14;7790:57;7879:33;7908:2;7904;7900:11;7879:33;:::i;:::-;7874:2;7867:5;7863:14;7856:57;7966:2;7962;7958:11;7945:25;7940:2;7933:5;7929:14;7922:49;8025:3;8021:2;8017:12;8004:26;7998:3;7991:5;7987:15;7980:51;8085:3;8081:2;8077:12;8064:26;8058:3;8051:5;8047:15;8040:51;8124:34;8153:3;8149:2;8145:12;8124:34;:::i;:::-;8118:3;8111:5;8107:15;8100:59;8192:34;8221:3;8217:2;8213:12;8192:34;:::i;:::-;8186:3;8179:5;8175:15;8168:59;8246:3;8295:2;8291;8287:11;8274:25;8324:2;8314:8;8311:16;8308:2;;;8345:6;8337;8330:22;8308:2;8386:46;8424:7;8413:8;8409:2;8405:17;8386:46;:::i;:::-;8370:14;;;8363:70;;;;-1:-1:-1;8374:5:124;8504:2;8489:18;;8476:32;;-1:-1:-1;8555:2:124;8540:18;;;8527:32;;7348:1217;-1:-1:-1;;;;;7348:1217:124:o;8570:190::-;;8682:2;8670:9;8661:7;8657:23;8653:32;8650:2;;;8703:6;8695;8688:22;8650:2;-1:-1:-1;8731:23:124;;8640:120;-1:-1:-1;8640:120:124:o;8765:194::-;;8888:2;8876:9;8867:7;8863:23;8859:32;8856:2;;;8909:6;8901;8894:22;8856:2;-1:-1:-1;8937:16:124;;8846:113;-1:-1:-1;8846:113:124:o;8964:447::-;;;;;9138:3;9126:9;9117:7;9113:23;9109:33;9106:2;;;9160:6;9152;9145:22;9106:2;9194:9;9188:16;9178:26;;9244:2;9233:9;9229:18;9223:25;9213:35;;9288:2;9277:9;9273:18;9267:25;9257:35;;9335:2;9324:9;9320:18;9314:25;9348:33;9375:5;9348:33;:::i;:::-;9096:315;;;;-1:-1:-1;9096:315:124;;-1:-1:-1;;9096:315:124:o;9416:443::-;;9513:5;9507:12;9540:6;9535:3;9528:19;9566:4;9595:2;9590:3;9586:12;9579:19;;9632:2;9625:5;9621:14;9653:3;9665:169;9679:6;9676:1;9673:13;9665:169;;;9740:13;;9728:26;;9774:12;;;;9809:15;;;;9701:1;9694:9;9665:169;;;-1:-1:-1;9850:3:124;;9483:376;-1:-1:-1;;;;;9483:376:124:o;9864:524::-;9934:47;9977:3;9969:5;9963:12;9934:47;:::i;:::-;10027:4;10020:5;10016:16;10010:23;10042:58;10094:4;10089:3;10085:14;10071:12;10042:58;:::i;:::-;;10149:4;10142:5;10138:16;10132:23;10125:4;10120:3;10116:14;10109:47;10205:4;10198:5;10194:16;10188:23;10181:4;10176:3;10172:14;10165:47;10261:4;10254:5;10250:16;10244:23;10237:4;10232:3;10228:14;10221:47;10317:4;10310:5;10306:16;10300:23;10293:4;10288:3;10284:14;10277:47;10375:4;10368:5;10364:16;10358:23;10349:6;10344:3;10340:16;10333:49;9924:464;;:::o;10393:318::-;10474:5;10468:12;10463:3;10456:25;10530:4;10523:5;10519:16;10513:23;10506:4;10501:3;10497:14;10490:47;10586:4;10579:5;10575:16;10569:23;10562:4;10557:3;10553:14;10546:47;10642:4;10635:5;10631:16;10625:23;10618:4;10613:3;10609:14;10602:47;10698:4;10691:5;10687:16;10681:23;10674:4;10669:3;10665:14;10658:47;10446:265;;:::o;10716:151::-;10792:12;;10780:25;;10854:4;10843:16;;;10837:23;10821:14;;10814:47;10770:97::o;10872:273::-;;11055:6;11047;11042:3;11029:33;11081:16;;11106:15;;;11081:16;11019:126;-1:-1:-1;11019:126:124:o;11150:203::-;-1:-1:-1;;;;;11314:32:124;;;;11296:51;;11284:2;11269:18;;11251:102::o;11358:267::-;;11537:2;11526:9;11519:21;11557:62;11615:2;11604:9;11600:18;11592:6;11557:62;:::i;11630:477::-;;11887:2;11876:9;11869:21;11913:62;11971:2;11960:9;11956:18;11948:6;11913:62;:::i;:::-;12023:9;12015:6;12011:22;12006:2;11995:9;11991:18;11984:50;12051;12094:6;12086;12051:50;:::i;12112:599::-;;12457:3;12487:2;12476:9;12469:21;12507:62;12565:2;12554:9;12550:18;12542:6;12507:62;:::i;:::-;12499:70;;;12578:55;12629:2;12618:9;12614:18;12606:6;12578:55;:::i;:::-;12642:63;12700:3;12689:9;12685:19;12677:6;12642:63;:::i;12716:669::-;;13087:3;13117:2;13106:9;13099:21;13137:62;13195:2;13184:9;13180:18;13172:6;13137:62;:::i;:::-;13129:70;;;13208:55;13259:2;13248:9;13244:18;13236:6;13208:55;:::i;:::-;13272:63;13330:3;13319:9;13315:19;13307:6;13272:63;:::i;:::-;13372:6;13366:3;13355:9;13351:19;13344:35;13067:318;;;;;;;:::o;13390:483::-;;13675:3;13664:9;13657:22;13696:63;13754:3;13743:9;13739:19;13731:6;13696:63;:::i;:::-;13688:71;;13768:56;13820:2;13809:9;13805:18;13797:6;13768:56;:::i;:::-;13860:6;13855:2;13844:9;13840:18;13833:34;13647:226;;;;;;:::o;13878:895::-;;14351:3;14381:2;14370:9;14363:21;14401:62;14459:2;14448:9;14444:18;14436:6;14401:62;:::i;:::-;14393:70;;;14499:6;14494:2;14483:9;14479:18;14472:34;14556:6;14549:14;14542:22;14537:2;14526:9;14522:18;14515:50;14574:55;14625:2;14614:9;14610:18;14602:6;14574:55;:::i;:::-;14638:63;14696:3;14685:9;14681:19;14673:6;14638:63;:::i;:::-;14710:57;14762:3;14751:9;14747:19;14739:6;14710:57;:::i;14778:187::-;14943:14;;14936:22;14918:41;;14906:2;14891:18;;14873:92::o;14970:329::-;15191:14;;15184:22;15166:41;;15238:2;15223:18;;15216:34;;;;15281:2;15266:18;;15259:34;15154:2;15139:18;;15121:178::o;15304:177::-;15450:25;;;15438:2;15423:18;;15405:76::o;15486:290::-;15676:25;;;-1:-1:-1;;;;;15737:32:124;15732:2;15717:18;;15710:60;15664:2;15649:18;;15631:145::o;16694:541::-;16971:25;;;17027:2;17012:18;;17005:34;;;;17070:2;17055:18;;17048:34;;;;17113:2;17098:18;;17091:34;17169:14;17162:22;17156:3;17141:19;;17134:51;17216:3;17201:19;;17194:35;16958:3;16943:19;;16925:310::o;17240:603::-;;17381:2;17410;17399:9;17392:21;17442:6;17436:13;17485:6;17480:2;17469:9;17465:18;17458:34;17510:4;17523:140;17537:6;17534:1;17531:13;17523:140;;;17632:14;;;17628:23;;17622:30;17598:17;;;17617:2;17594:26;17587:66;17552:10;;17523:140;;;17681:6;17678:1;17675:13;17672:2;;;17751:4;17746:2;17737:6;17726:9;17722:22;17718:31;17711:45;17672:2;-1:-1:-1;17827:2:124;17806:15;-1:-1:-1;;17802:29:124;17787:45;;;;17834:2;17783:54;;17361:482;-1:-1:-1;;;17361:482:124:o;17848:462::-;18082:13;;18075:21;18068:29;18050:48;;18158:4;18146:17;;;18140:24;-1:-1:-1;;;;;18136:63:124;18114:20;;;18107:93;18260:4;18248:17;;;18242:24;-1:-1:-1;;;;;18238:65:124;18216:20;;;18209:95;;;;18038:2;18023:18;;18005:305::o;18315:452::-;18531:13;;18600:4;18585:20;;18578:28;18571:36;18553:55;;-1:-1:-1;;;;;18654:1:124;18650:17;;;18646:56;18639:4;18624:20;;18617:86;18745:3;18741:19;18734:4;18719:20;;18712:49;18502:2;18487:18;;18469:298::o;18772:844::-;19044:3;19029:19;;19057:46;19033:9;19085:6;19057:46;:::i;:::-;19112:64;19171:3;19160:9;19156:19;19147:6;19141:13;19112:64;:::i;:::-;19223:4;19215:6;19211:17;19205:24;19238:63;19296:3;19285:9;19281:19;19267:12;19238:63;:::i;:::-;;19356:4;19348:6;19344:17;19338:24;19332:3;19321:9;19317:19;19310:53;19418:4;19410:6;19406:17;19400:24;19394:3;19383:9;19379:19;19372:53;19480:4;19472:6;19468:17;19462:24;19456:3;19445:9;19441:19;19434:53;19542:3;19534:6;19530:16;19524:23;19518:3;19507:9;19503:19;19496:52;19603:4;19595:6;19591:17;19585:24;19579:3;19568:9;19564:19;19557:53;19011:605;;;;;:::o;19803:338::-;;20010:6;19999:9;19992:25;20053:2;20048;20037:9;20033:18;20026:30;20073:62;20131:2;20120:9;20116:18;20108:6;20073:62;:::i;20146:248::-;20320:25;;;20376:2;20361:18;;20354:34;20308:2;20293:18;;20275:119::o;20399:447::-;20630:25;;;20686:2;20671:18;;20664:34;;;;-1:-1:-1;;;;;20772:15:124;;;20767:2;20752:18;;20745:43;20824:15;20819:2;20804:18;;20797:43;20617:3;20602:19;;20584:262::o;20851:184::-;21023:4;21011:17;;;;20993:36;;20981:2;20966:18;;20948:87::o;21040:242::-;21110:2;21104:9;21140:17;;;21187:18;21172:34;;21208:22;;;21169:62;21166:2;;;21234:9;21166:2;21261;21254:22;21084:198;;-1:-1:-1;21084:198:124:o;21287:133::-;-1:-1:-1;;;;;21364:31:124;;21354:42;;21344:2;;21410:1;21407;21400:12", "language": "Solidity", "natspec": {"kind": "dev", "methods": {"DOMAIN_SEPARATOR()": {"details": "See {IERC20Permit-DOMAIN_SEPARATOR}."}, "allowance(address,address)": {"details": "Override to grant the Vault infinite allowance, causing for Pool Tokens to not require approval. This is sound as the Vault already provides authorization mechanisms when initiation token transfers, which this contract inherits."}, "approve(address,uint256)": {"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."}, "balanceOf(address)": {"details": "See {IERC20-balanceOf}."}, "changePauseManager(address)": {"notice": "Changes the account that is allowed to pause a pool."}, "decimals()": {"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."}, "decreaseAllowance(address,uint256)": {"details": "Override to allow decreasing allowance by more than the current amount (setting it to zero)"}, "getActionId(bytes4)": {"details": "Returns the action identifier associated with the external function described by `selector`."}, "getActualSupply()": {"notice": "Effective BPT supply.  This is the same as `totalSupply()` but also accounts for the fact that the pool owes  protocol fees to the pool in the form of unminted LP shares created on the next join/exit,  diluting LPers. Thus, this is the totalSupply() that the next join/exit operation will see.  Equivalent to the respective function in, e.g., WeightedPool, see:  https://github.com/balancer/balancer-v2-monorepo/blob/master/pkg/pool-weighted/contracts/WeightedPool.sol#L325-L344"}, "getInvariant()": {"details": "Returns the current value of the invariant. Note: This function is not used internally; it's public, not external, so we can override it cleanly."}, "getInvariantDivActualSupply()": {"notice": "Equivalent to but more efficient than `getInvariant().divDown(getActualSupply())`."}, "getMiscData()": {"details": "Only `swapFeePercentage` is non-trivial; everything else is 0/false because the oracle is not used. These variables are returned to keep the call signature compatible."}, "getPausedState()": {"details": "Returns the current contract pause status, as well as the end times of the Pause Window and Buffer Period."}, "getPrice()": {"notice": "Returns the current spot price of token0 quoted in units of token1. When rateProvider{0,1} is provided, the returned price corresponds to tokens *before* rate scaling."}, "getRate()": {"details": "This function returns the appreciation of one BPT relative to the underlying tokens. This starts at 1 when the pool is created and grows over time"}, "getTokenRates()": {"notice": "Convenience function to fetch the two rates used for scaling the two tokens, as of rateProvider{0,1}. Note that these rates do *not* contain scaling to account for differences in the number of decimals. The rates themselves are always 18-decimals."}, "increaseAllowance(address,uint256)": {"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."}, "name()": {"details": "Returns the name of the token."}, "nonces(address)": {"details": "See {IERC20Permit-nonces}."}, "onExitPool(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Called by the Vault when a user calls `IVault.exitPool` to remove liquidity from this Pool. Returns how many tokens the Vault should deduct from the Pool's balances, as well as the amount of protocol fees the Pool owes to the Vault. The Vault will then take tokens from the Pool's balances and send them to `recipient`, as well as collect the reported amount in protocol fees, which the Pool should calculate based on `protocolSwapFeePercentage`. Protocol fees are charged on exit events to guarantee that users exiting the Pool have paid their share. `sender` is the account performing the exit (typically the pool shareholder), and `recipient` is the account to which the Vault will send the proceeds. `balances` contains the total token balances for each token the Pool registered in the Vault, in the same order that `IVault.getPoolTokens` would return. `lastChangeBlock` is the last block in which *any* of the Pool's registered tokens last changed its total balance. `userData` contains any pool-specific instructions needed to perform the calculations, such as the type of exit (e.g., proportional given an amount of pool shares, single-asset, multi-asset, etc.) Contracts implementing this function should check that the caller is indeed the Vault before performing any state-changing operations, such as burning pool shares."}, "onJoinPool(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Called by the Vault when a user calls `IVault.joinPool` to add liquidity to this Pool. Returns how many of each registered token the user should provide, as well as the amount of protocol fees the Pool owes to the Vault. The Vault will then take tokens from `sender` and add them to the Pool's balances, as well as collect the reported amount in protocol fees, which the pool should calculate based on `protocolSwapFeePercentage`. Protocol fees are reported and charged on join events so that the Pool is free of debt whenever new users join. `sender` is the account performing the join (from which tokens will be withdrawn), and `recipient` is the account designated to receive any benefits (typically pool shares). `balances` contains the total balances for each token the Pool registered in the Vault, in the same order that `IVault.getPoolTokens` would return. `lastChangeBlock` is the last block in which *any* of the Pool's registered tokens last changed its total balance. `userData` contains any pool-specific instructions needed to perform the calculations, such as the type of join (e.g., proportional given an amount of pool shares, single-asset, multi-asset, etc.) Contracts implementing this function should check that the caller is indeed the Vault before performing any state-changing operations, such as minting pool shares."}, "pause()": {"notice": "Pauses the pool. Can only be called by the pause manager."}, "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {"details": "See {IERC20Permit-permit}."}, "queryExit(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Returns the amount of BPT that would be burned from `sender` if the `onExitPool` hook were called by the Vault with the same arguments, along with the number of tokens `recipient` would receive. This function is not meant to be called directly, but rather from a helper contract that fetches current Vault data, such as the protocol swap fee percentage and Pool balances. Like `IVault.queryBatchSwap`, this function is not view due to internal implementation details: the caller must explicitly use eth_call instead of eth_sendTransaction."}, "queryJoin(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Returns the amount of BPT that would be granted to `recipient` if the `onJoinPool` hook were called by the Vault with the same arguments, along with the number of tokens `sender` would have to supply. This function is not meant to be called directly, but rather from a helper contract that fetches current Vault data, such as the protocol swap fee percentage and Pool balances. Like `IVault.queryBatchSwap`, this function is not view due to internal implementation details: the caller must explicitly use eth_call instead of eth_sendTransaction."}, "symbol()": {"details": "Returns the symbol of the token, usually a shorter version of the name."}, "totalSupply()": {"details": "See {IERC20-totalSupply}."}, "transfer(address,uint256)": {"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."}, "transferFrom(address,address,uint256)": {"details": "Override to allow for 'infinite allowance' and let the token owner use `transferFrom` with no self-allowance"}, "unpause()": {"notice": "Unpauses the pool. Can only be called by the pause manager."}}, "stateVariables": {"_paramsAlpha": {"details": "Parameters of the ECLP pool"}, "rateProvider0": {"details": "for rate scaling"}}, "version": 1}, "offset": [969, 32056], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2D6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x76E54A46 GT PUSH2 0x182 JUMPI DUP1 PUSH4 0x98D5FDCA GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xAAABADC5 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x5C8 JUMPI DUP1 PUSH4 0xD5C096C4 EQ PUSH2 0x5DB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5EE JUMPI DUP1 PUSH4 0xF89F27ED EQ PUSH2 0x601 JUMPI PUSH2 0x2D6 JUMP JUMPDEST DUP1 PUSH4 0xAAABADC5 EQ PUSH2 0x5B0 JUMPI DUP1 PUSH4 0xABD13AFE EQ PUSH2 0x5B8 JUMPI DUP1 PUSH4 0xC0FF1A15 EQ PUSH2 0x5C0 JUMPI PUSH2 0x2D6 JUMP JUMPDEST DUP1 PUSH4 0x98D5FDCA EQ PUSH2 0x54F JUMPI DUP1 PUSH4 0x9B02CDDE EQ PUSH2 0x557 JUMPI DUP1 PUSH4 0x9D2C110C EQ PUSH2 0x55F JUMPI DUP1 PUSH4 0x9EF3E37D EQ PUSH2 0x572 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x58A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x59D JUMPI PUSH2 0x2D6 JUMP JUMPDEST DUP1 PUSH4 0x851C1BB3 GT PUSH2 0x13B JUMPI DUP1 PUSH4 0x851C1BB3 EQ PUSH2 0x509 JUMPI DUP1 PUSH4 0x876F303B EQ PUSH2 0x51C JUMPI DUP1 PUSH4 0x87EC6817 EQ PUSH2 0x524 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x537 JUMPI DUP1 PUSH4 0x8D928AF8 EQ PUSH2 0x53F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x547 JUMPI PUSH2 0x2D6 JUMP JUMPDEST DUP1 PUSH4 0x76E54A46 EQ PUSH2 0x4AA JUMPI DUP1 PUSH4 0x7BE219A2 EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x4D3 JUMPI DUP1 PUSH4 0x8002DF18 EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0x828A7C34 EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x501 JUMPI PUSH2 0x2D6 JUMP JUMPDEST DUP1 PUSH4 0x3AEAE0D3 GT PUSH2 0x241 JUMPI DUP1 PUSH4 0x623A2E75 GT PUSH2 0x1FA JUMPI DUP1 PUSH4 0x6D785A87 GT PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x6D785A87 EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0x702EC091 EQ PUSH2 0x460 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0x74F3B009 EQ PUSH2 0x489 JUMPI PUSH2 0x2D6 JUMP JUMPDEST DUP1 PUSH4 0x623A2E75 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0x62CED092 EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x450 JUMPI PUSH2 0x2D6 JUMP JUMPDEST DUP1 PUSH4 0x3AEAE0D3 EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x3E0 JUMPI DUP1 PUSH4 0x44BBDB55 EQ PUSH2 0x3E8 JUMPI DUP1 PUSH4 0x4A6B0B15 EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0x55C67628 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x6028BFD4 EQ PUSH2 0x41F JUMPI PUSH2 0x2D6 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x293 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x38E9922E EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0x38FFF2D0 EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x3B8 JUMPI PUSH2 0x2D6 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xE608B30 EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0x1C0DE051 EQ PUSH2 0x356 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E3 PUSH2 0x616 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x4A36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH2 0x307 CALLDATASIZE PUSH1 0x4 PUSH2 0x442D JUMP JUMPDEST PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x49C9 JUMP JUMPDEST PUSH2 0x32C PUSH2 0x327 CALLDATASIZE PUSH1 0x4 PUSH2 0x4308 JUMP JUMPDEST PUSH2 0x6C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32C PUSH2 0x33C CALLDATASIZE PUSH1 0x4 PUSH2 0x4458 JUMP JUMPDEST PUSH2 0x774 JUMP JUMPDEST PUSH2 0x349 PUSH2 0x788 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x49EC JUMP JUMPDEST PUSH2 0x35E PUSH2 0x78E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x49D4 JUMP JUMPDEST PUSH2 0x30C PUSH2 0x37B CALLDATASIZE PUSH1 0x4 PUSH2 0x4378 JUMP JUMPDEST PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x388 PUSH2 0x82D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x4BA5 JUMP JUMPDEST PUSH2 0x349 PUSH2 0x836 JUMP JUMPDEST PUSH2 0x32C PUSH2 0x3AB CALLDATASIZE PUSH1 0x4 PUSH2 0x473F JUMP JUMPDEST PUSH2 0x845 JUMP JUMPDEST PUSH2 0x349 PUSH2 0x85E JUMP JUMPDEST PUSH2 0x30C PUSH2 0x3C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x442D JUMP JUMPDEST PUSH2 0x882 JUMP JUMPDEST PUSH2 0x3D3 PUSH2 0x8BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x4A89 JUMP JUMPDEST PUSH2 0x32C PUSH2 0x908 JUMP JUMPDEST PUSH2 0x3F0 PUSH2 0x9FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x488D JUMP JUMPDEST PUSH2 0x405 PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4A0C JUMP JUMPDEST PUSH2 0x349 PUSH2 0xA67 JUMP JUMPDEST PUSH2 0x432 PUSH2 0x42D CALLDATASIZE PUSH1 0x4 PUSH2 0x4472 JUMP JUMPDEST PUSH2 0xA74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP3 SWAP2 SWAP1 PUSH2 0x4B57 JUMP JUMPDEST PUSH2 0x349 PUSH2 0xAA5 JUMP JUMPDEST PUSH2 0x3F0 PUSH2 0xB01 JUMP JUMPDEST PUSH2 0x349 PUSH2 0xB25 JUMP JUMPDEST PUSH2 0x3F0 PUSH2 0xB4A JUMP JUMPDEST PUSH2 0x468 PUSH2 0xB59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP3 SWAP2 SWAP1 PUSH2 0x4B70 JUMP JUMPDEST PUSH2 0x349 PUSH2 0x484 CALLDATASIZE PUSH1 0x4 PUSH2 0x4308 JUMP JUMPDEST PUSH2 0xCFE JUMP JUMPDEST PUSH2 0x49C PUSH2 0x497 CALLDATASIZE PUSH1 0x4 PUSH2 0x4472 JUMP JUMPDEST PUSH2 0xD1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP3 SWAP2 SWAP1 PUSH2 0x48B4 JUMP JUMPDEST PUSH2 0x32C PUSH2 0x4B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x45C9 JUMP JUMPDEST PUSH2 0xDAD JUMP JUMPDEST PUSH2 0x4C5 PUSH2 0xED4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP3 SWAP2 SWAP1 PUSH2 0x4AE9 JUMP JUMPDEST PUSH2 0x349 PUSH2 0x4E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4308 JUMP JUMPDEST PUSH2 0xEF4 JUMP JUMPDEST PUSH2 0x32C PUSH2 0x4F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x4308 JUMP JUMPDEST PUSH2 0xF0F JUMP JUMPDEST PUSH2 0x3F0 PUSH2 0xFF5 JUMP JUMPDEST PUSH2 0x32C PUSH2 0x1019 JUMP JUMPDEST PUSH2 0x349 PUSH2 0x517 CALLDATASIZE PUSH1 0x4 PUSH2 0x457E JUMP JUMPDEST PUSH2 0x10D1 JUMP JUMPDEST PUSH2 0x349 PUSH2 0x112A JUMP JUMPDEST PUSH2 0x432 PUSH2 0x532 CALLDATASIZE PUSH1 0x4 PUSH2 0x4472 JUMP JUMPDEST PUSH2 0x116B JUMP JUMPDEST PUSH2 0x3F0 PUSH2 0x1190 JUMP JUMPDEST PUSH2 0x3F0 PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0x2E3 PUSH2 0x11D8 JUMP JUMPDEST PUSH2 0x349 PUSH2 0x1239 JUMP JUMPDEST PUSH2 0x349 PUSH2 0x1304 JUMP JUMPDEST PUSH2 0x349 PUSH2 0x56D CALLDATASIZE PUSH1 0x4 PUSH2 0x4648 JUMP JUMPDEST PUSH2 0x130A JUMP JUMPDEST PUSH2 0x57A PUSH2 0x16A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4B7E JUMP JUMPDEST PUSH2 0x30C PUSH2 0x598 CALLDATASIZE PUSH1 0x4 PUSH2 0x442D JUMP JUMPDEST PUSH2 0x181B JUMP JUMPDEST PUSH2 0x30C PUSH2 0x5AB CALLDATASIZE PUSH1 0x4 PUSH2 0x442D JUMP JUMPDEST PUSH2 0x1859 JUMP JUMPDEST PUSH2 0x3F0 PUSH2 0x1866 JUMP JUMPDEST PUSH2 0x3F0 PUSH2 0x1870 JUMP JUMPDEST PUSH2 0x349 PUSH2 0x187F JUMP JUMPDEST PUSH2 0x32C PUSH2 0x5D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x43B8 JUMP JUMPDEST PUSH2 0x1927 JUMP JUMPDEST PUSH2 0x49C PUSH2 0x5E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x4472 JUMP JUMPDEST PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0x349 PUSH2 0x5FC CALLDATASIZE PUSH1 0x4 PUSH2 0x4340 JUMP JUMPDEST PUSH2 0x1B7C JUMP JUMPDEST PUSH2 0x609 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x48A1 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x6A2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x677 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6A2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x685 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B9 CALLER DUP5 DUP5 PUSH2 0x1D4D JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x1B9BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x71D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x714 SWAP2 SWAP1 PUSH2 0x4A36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xB8FD9AFC34C38FCD13B9A3B7646482EB1FDDCEFB40AF2C70609972816EBA3208 SWAP1 PUSH2 0x769 SWAP1 DUP4 SWAP1 PUSH2 0x488D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x77C PUSH2 0x1DAF JUMP JUMPDEST PUSH2 0x785 DUP2 PUSH2 0x1DDD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x79B PUSH2 0x1E59 JUMP JUMPDEST ISZERO SWAP3 POP PUSH2 0x7A6 PUSH2 0x1E76 JUMP JUMPDEST SWAP2 POP PUSH2 0x7B0 PUSH2 0x1E9A JUMP JUMPDEST SWAP1 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7C4 DUP6 CALLER PUSH2 0x1B7C JUMP JUMPDEST SWAP1 POP PUSH2 0x7E8 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND EQ DUP1 PUSH2 0x7E0 JUMPI POP DUP4 DUP3 LT ISZERO JUMPDEST PUSH2 0x19E PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0x7F3 DUP6 DUP6 DUP6 PUSH2 0x1ECC JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x80E JUMPI POP PUSH1 0x0 NOT DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x820 JUMPI PUSH2 0x820 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x1D4D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x840 PUSH2 0x1FB4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x84D PUSH2 0x1DAF JUMP JUMPDEST PUSH2 0x855 PUSH2 0x2072 JUMP JUMPDEST PUSH2 0x785 DUP2 PUSH2 0x2087 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x6B9 SWAP2 DUP6 SWAP1 PUSH2 0x8B8 SWAP1 DUP7 PUSH2 0x20F0 JUMP JUMPDEST PUSH2 0x1D4D JUMP JUMPDEST PUSH2 0x8C5 PUSH2 0x41C7 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0xA SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP3 MSTORE PUSH2 0x100 DUP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x3737BA103830BAB9B29036B0B730B3B2B9 PUSH1 0x79 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x98C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x974 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x9B9 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x9D2 PUSH1 0x0 PUSH2 0x77C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x215385C8BFC731925EC8068D7BAA50F6B6F34417CC7804F7273DC2C0B3DB2790 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x8 SLOAD SWAP1 POP PUSH2 0xA25 DUP2 PUSH2 0x2102 JUMP JUMPDEST SWAP7 POP PUSH2 0xA30 DUP2 PUSH2 0x210E JUMP JUMPDEST SWAP6 POP PUSH2 0xA3B DUP2 PUSH2 0x211B JUMP JUMPDEST SWAP5 POP PUSH2 0xA46 DUP2 PUSH2 0x2128 JUMP JUMPDEST SWAP4 POP PUSH2 0xA51 DUP2 PUSH2 0x2135 JUMP JUMPDEST SWAP3 POP PUSH2 0xA5C DUP2 PUSH2 0x2142 JUMP JUMPDEST SWAP2 POP POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x840 PUSH1 0x8 SLOAD PUSH2 0x2142 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0xA84 DUP7 MLOAD PUSH1 0x2 PUSH2 0x214F JUMP JUMPDEST PUSH2 0xA99 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x215C PUSH2 0x22CA PUSH2 0x2348 JUMP JUMPDEST SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAB0 PUSH2 0x187F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xABC PUSH2 0x788 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0xACD PUSH1 0x9 SLOAD DUP6 PUSH2 0x245B JUMP JUMPDEST POP SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x0 SWAP1 POP PUSH2 0xAEB DUP3 PUSH2 0xAE5 DUP7 DUP7 PUSH2 0x24C4 JUMP JUMPDEST SWAP1 PUSH2 0x24C4 JUMP JUMPDEST SWAP1 POP PUSH2 0xAF7 DUP6 DUP3 PUSH2 0x24DC JUMP JUMPDEST SWAP6 POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x840 PUSH2 0xB32 PUSH2 0x788 JUMP JUMPDEST PUSH2 0xB44 PUSH2 0xB3D PUSH2 0x187F JUMP JUMPDEST PUSH1 0x2 PUSH2 0x2536 JUMP JUMPDEST SWAP1 PUSH2 0x24DC JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB98 JUMPI PUSH8 0xDE0B6B3A7640000 PUSH2 0xC29 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x679AEFCE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC05 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC29 SWAP2 SWAP1 PUSH2 0x4757 JUMP JUMPDEST SWAP2 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC67 JUMPI PUSH8 0xDE0B6B3A7640000 PUSH2 0xCF8 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x679AEFCE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCD4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCF8 SWAP2 SWAP1 PUSH2 0x4757 JUMP JUMPDEST SWAP1 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP9 PUSH2 0xD47 PUSH2 0xD2C PUSH2 0x11B4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH1 0xCD PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0xD5C PUSH2 0xD52 PUSH2 0x85E JUMP JUMPDEST DUP3 EQ PUSH2 0x1F4 PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0xD65 DUP8 PUSH2 0x255A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xD79 DUP14 DUP14 DUP14 DUP14 DUP14 DUP14 DUP14 PUSH2 0x215C JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xD89 DUP13 DUP5 PUSH2 0x25BC JUMP JUMPDEST PUSH2 0xD92 DUP3 PUSH2 0x22CA JUMP JUMPDEST PUSH2 0xD9B DUP2 PUSH2 0x22CA JUMP JUMPDEST SWAP1 SWAP13 SWAP1 SWAP12 POP SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x1B9BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDFE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x714 SWAP2 SWAP1 PUSH2 0x4A36 JUMP JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH16 0x1C1BDBDB081A5CC81D5B98D85C1C1959 PUSH1 0x82 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0xE4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x714 SWAP2 SWAP1 PUSH2 0x4A36 JUMP JUMPDEST POP DUP1 MLOAD PUSH1 0xA DUP1 SLOAD PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP1 DUP7 ADD MLOAD PUSH1 0xFF NOT SWAP1 SWAP4 AND SWAP5 ISZERO ISZERO SWAP5 SWAP1 SWAP5 OR PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL OR PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x80 SHL SWAP2 SWAP1 SWAP3 AND MUL OR DUP2 SSTORE SWAP1 MLOAD PUSH32 0x2ABF5970D7BC1A2B36EAAE52DD2CC353EDB0337C7284EF8A01973081B4E04424 SWAP2 PUSH2 0x769 SWAP2 PUSH2 0x4ABE JUMP JUMPDEST PUSH2 0xEDC PUSH2 0x41E7 JUMP JUMPDEST PUSH2 0xEE4 PUSH2 0x4216 JUMP JUMPDEST PUSH2 0xEEC PUSH2 0x25C6 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x3737BA103830BAB9B29036B0B730B3B2B9 PUSH1 0x79 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLER DUP3 EQ PUSH2 0xF94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x98C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x974 JUMP JUMPDEST POP PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 DUP5 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD PUSH32 0x1FFCCD1FA96F4FB3415DF8048A0FD107344E262D2D246C85105E2A3F8F3E8198 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x3737BA103830BAB9B29036B0B730B3B2B9 PUSH1 0x79 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x109B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x98C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x974 JUMP JUMPDEST POP PUSH2 0x10A6 PUSH1 0x1 PUSH2 0x77C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x681EACE576127D0553B224436A09801FB47D042942CBFF59D7D4FF04D8FA03D7 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x0 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP5 AND DUP3 DUP5 ADD MSTORE DUP3 MLOAD PUSH1 0x24 DUP2 DUP5 SUB ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1135 PUSH2 0x788 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x114D PUSH1 0x9 SLOAD PUSH2 0x1148 PUSH2 0x187F JUMP JUMPDEST PUSH2 0x245B JUMP JUMPDEST POP SWAP2 SWAP4 POP SWAP2 POP PUSH2 0x1163 SWAP1 POP DUP2 PUSH2 0xAE5 DUP6 DUP6 PUSH2 0x24C4 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x117B DUP7 MLOAD PUSH1 0x2 PUSH2 0x214F JUMP JUMPDEST PUSH2 0xA99 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x27FC PUSH2 0x296B PUSH2 0x2348 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x6A2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x677 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1244 PUSH2 0x29CD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x1251 PUSH2 0x25C6 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH20 0x0 PUSH4 0xD83CA862 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1292 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x48D9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x12BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12E2 SWAP2 SWAP1 PUSH2 0x4757 JUMP JUMPDEST SWAP1 POP PUSH2 0x12F0 DUP5 DUP3 DUP6 DUP6 PUSH2 0x2A83 JUMP JUMPDEST SWAP5 POP PUSH2 0x12FB DUP6 PUSH2 0x2B23 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1314 PUSH2 0x2072 JUMP JUMPDEST DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0x1324 PUSH2 0xD2C PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0x132F PUSH2 0xD52 PUSH2 0x85E JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x13AB JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST ISZERO PUSH2 0x13B8 JUMPI POP PUSH1 0x1 PUSH2 0x1449 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x1432 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST ISZERO PUSH2 0x143F JUMPI POP PUSH1 0x0 PUSH2 0x1449 JUMP JUMPDEST PUSH2 0x1449 PUSH1 0x79 PUSH2 0x2CC3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1454 DUP3 PUSH2 0x2D16 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1462 DUP4 ISZERO PUSH2 0x2D16 JUMP JUMPDEST SWAP1 POP PUSH2 0x146E DUP8 DUP4 PUSH2 0x2E43 JUMP JUMPDEST SWAP7 POP PUSH2 0x147A DUP7 DUP3 PUSH2 0x2E43 JUMP JUMPDEST SWAP6 POP PUSH1 0x0 PUSH2 0x1489 DUP9 DUP9 DUP7 PUSH2 0x2E4F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x1496 PUSH2 0x25C6 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x14A2 PUSH2 0x425F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0x0 PUSH4 0x78ACE857 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14E0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x48D9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x150B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x152F SWAP2 SWAP1 PUSH2 0x45A6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 SWAP1 SWAP2 MUL DUP3 ADD DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 POP PUSH1 0x0 SWAP2 POP PUSH2 0x1557 SWAP1 POP JUMP JUMPDEST DUP13 MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1564 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1610 JUMPI PUSH1 0x0 PUSH2 0x1582 PUSH2 0x1577 PUSH2 0xA67 JUMP JUMPDEST PUSH1 0x60 DUP16 ADD MLOAD SWAP1 PUSH2 0x2EE9 JUMP JUMPDEST SWAP1 POP PUSH2 0x15A4 PUSH2 0x159E DUP3 DUP16 PUSH1 0x60 ADD MLOAD PUSH2 0x2F3E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP9 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x60 DUP15 ADD MSTORE PUSH1 0x0 PUSH2 0x15B9 DUP15 DUP8 DUP12 DUP9 DUP9 DUP9 PUSH2 0x2F54 JUMP JUMPDEST SWAP1 POP PUSH32 0x4E1D56F7310A8C32B2267F756B19BA65019B4890068CE114A25009ABE54DE5BA DUP7 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x15EE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x494B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1600 DUP2 DUP9 PUSH2 0x2FF7 JUMP JUMPDEST SWAP11 POP POP POP POP POP POP POP POP POP POP PUSH2 0x16A1 JUMP JUMPDEST PUSH2 0x161E DUP13 PUSH1 0x60 ADD MLOAD DUP7 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x60 DUP14 ADD MSTORE PUSH1 0x0 PUSH2 0x1633 DUP14 DUP7 DUP11 DUP8 DUP8 DUP8 PUSH2 0x3003 JUMP JUMPDEST SWAP1 POP PUSH32 0x4E1D56F7310A8C32B2267F756B19BA65019B4890068CE114A25009ABE54DE5BA DUP6 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1668 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x494B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x167A DUP2 DUP9 PUSH2 0x304B JUMP JUMPDEST SWAP1 POP PUSH2 0x1696 PUSH2 0x168F PUSH2 0x168A PUSH2 0xA67 JUMP JUMPDEST PUSH2 0x3057 JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x307D JUMP JUMPDEST SWAP10 POP POP POP POP POP POP POP POP POP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH2 0x16D0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS PUSH4 0x45434C5 PUSH1 0xE4 SHL PUSH2 0x30E3 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x16EE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS PUSH4 0x45434C5 PUSH1 0xE4 SHL PUSH2 0x310A JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x21F8A721 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x21F8A721 SWAP1 PUSH2 0x172E SWAP1 PUSH13 0x4759524F5F5452454153555259 PUSH1 0x98 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0x49EC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1746 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x175A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x177E SWAP2 SWAP1 PUSH2 0x4324 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x21F8A721 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x21F8A721 SWAP1 PUSH2 0x17BD SWAP1 PUSH12 0x42414C5F5452454153555259 PUSH1 0xA0 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0x49EC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x180D SWAP2 SWAP1 PUSH2 0x4324 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1828 CALLER DUP6 PUSH2 0x1B7C JUMP JUMPDEST SWAP1 POP DUP1 DUP4 LT PUSH2 0x1842 JUMPI PUSH2 0x183D CALLER DUP6 PUSH1 0x0 PUSH2 0x1D4D JUMP JUMPDEST PUSH2 0x184F JUMP JUMPDEST PUSH2 0x184F CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x1D4D JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B9 CALLER DUP5 DUP5 PUSH2 0x1ECC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x840 PUSH2 0x3138 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x188A PUSH2 0x29CD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x1897 PUSH2 0x25C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6C1E5431 PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 SWAP4 POP SWAP2 POP PUSH20 0x0 SWAP1 PUSH4 0xD83CA862 SWAP1 PUSH2 0x18D7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x48D9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1903 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1163 SWAP2 SWAP1 PUSH2 0x4757 JUMP JUMPDEST PUSH2 0x1935 DUP5 TIMESTAMP GT ISZERO PUSH1 0xD1 PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD PUSH32 0x0 DUP2 DUP6 ADD MSTORE DUP1 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP5 DUP12 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD DUP11 SWAP1 MSTORE PUSH1 0xA0 DUP5 ADD DUP6 SWAP1 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP11 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 SWAP1 SWAP5 ADD SWAP1 MSTORE DUP3 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP1 PUSH2 0x19C1 DUP3 PUSH2 0x31B2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A1F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP PUSH2 0x1A61 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1A59 JUMPI POP DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1F8 PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP6 ADD SWAP1 SSTORE PUSH2 0x1A8A DUP12 DUP12 DUP12 PUSH2 0x1D4D JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP9 PUSH2 0x1AA6 PUSH2 0xD2C PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0x1AB1 PUSH2 0xD52 PUSH2 0x85E JUMP JUMPDEST PUSH2 0x1AB9 PUSH2 0x2072 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AC3 PUSH2 0x788 JUMP JUMPDEST PUSH2 0x1B33 JUMPI PUSH2 0x1AD3 DUP12 DUP12 DUP12 DUP9 PUSH2 0x31FE JUMP JUMPDEST SWAP5 POP SWAP1 POP PUSH2 0x1AE8 PUSH3 0xF4240 DUP3 LT ISZERO PUSH1 0xCC PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0x1AF6 PUSH1 0x0 PUSH3 0xF4240 PUSH2 0x338E JUMP JUMPDEST PUSH2 0x1B05 DUP10 PUSH3 0xF4240 DUP4 SUB PUSH2 0x338E JUMP JUMPDEST PUSH2 0x1B0E DUP5 PUSH2 0x296B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE SWAP1 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP3 POP PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x1B3C DUP9 PUSH2 0x255A JUMP JUMPDEST PUSH2 0x1B4B DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH2 0x27FC JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP SWAP1 POP PUSH2 0x1B5C DUP10 DUP3 PUSH2 0x338E JUMP JUMPDEST PUSH2 0x1B65 DUP5 PUSH2 0x296B JUMP JUMPDEST PUSH2 0x1B6E DUP4 PUSH2 0x22CA JUMP JUMPDEST POP POP SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B86 PUSH2 0x11B4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1BA8 JUMPI POP PUSH1 0x0 NOT PUSH2 0x6BD JUMP JUMPDEST PUSH2 0x1BB2 DUP4 DUP4 PUSH2 0x3398 JUMP JUMPDEST SWAP1 POP PUSH2 0x6BD JUMP JUMPDEST PUSH1 0x60 PUSH2 0x840 PUSH2 0x33C3 JUMP JUMPDEST DUP1 PUSH2 0x1BCD DUP2 PUSH2 0x3432 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1BFD DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0x0 SGT ISZERO DUP1 ISZERO PUSH2 0x1BF5 JUMPI POP PUSH8 0xDE0B6B3A7640000 DUP3 PUSH1 0x60 ADD MLOAD SGT ISZERO JUMPDEST PUSH2 0x163 PUSH2 0x34AB JUMP JUMPDEST PUSH2 0x1C28 DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x0 SGT ISZERO DUP1 ISZERO PUSH2 0x1BF5 JUMPI POP PUSH8 0xDE0B6B3A7640000 DUP3 PUSH1 0x40 ADD MLOAD SGT ISZERO PUSH2 0x163 PUSH2 0x34AB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x60 DUP4 ADD MLOAD DUP2 MSTORE SWAP1 DUP3 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1C4D DUP3 DUP1 PUSH2 0x34B9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C7A PUSH8 0xDE0B6B3A763FC18 DUP3 SLT DUP1 ISZERO SWAP1 PUSH2 0x1C72 JUMPI POP PUSH8 0xDE0B6B3A76403E8 DUP3 SGT ISZERO JUMPDEST PUSH2 0x164 PUSH2 0x34AB JUMP JUMPDEST PUSH2 0x1CA9 DUP4 PUSH1 0x80 ADD MLOAD PUSH1 0x0 SGT ISZERO DUP1 ISZERO PUSH2 0x1CA1 JUMPI POP PUSH11 0x52B7D2DCC80CD2E4000000 DUP5 PUSH1 0x80 ADD MLOAD SGT ISZERO JUMPDEST PUSH2 0x168 PUSH2 0x34AB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x826 DUP4 DUP4 PUSH1 0x56 PUSH2 0x1CD2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CCC DUP4 DUP4 GT ISZERO PUSH1 0x1 PUSH2 0x1EBE JUMP JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 SHL NOT SWAP3 SWAP1 SWAP3 AND SWAP2 SHL OR SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL DUP4 ISZERO DUP1 PUSH2 0x1D02 JUMPI POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x1CFF JUMPI INVALID JUMPDEST SDIV EQ JUMPDEST PUSH2 0x1D12 JUMPI PUSH2 0x1D12 PUSH1 0x0 PUSH1 0x3 PUSH2 0x1EBE JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 SDIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP2 DUP4 SLT ISZERO PUSH2 0x1D39 JUMPI DUP4 DUP2 SLT PUSH2 0x1D3E JUMP JUMPDEST DUP4 DUP2 SLT ISZERO JUMPDEST PUSH2 0x826 JUMPI PUSH2 0x826 PUSH1 0x0 DUP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC6 PUSH1 0x0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x10D1 JUMP JUMPDEST SWAP1 POP PUSH2 0x785 PUSH2 0x1DD5 DUP3 CALLER PUSH2 0x34EC JUMP JUMPDEST PUSH2 0x191 PUSH2 0x1EBE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1DFD JUMPI PUSH2 0x1DF8 PUSH2 0x1DEE PUSH2 0x1E76 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x193 PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0x1E12 JUMP JUMPDEST PUSH2 0x1E12 PUSH2 0x1E08 PUSH2 0x1E9A JUMP JUMPDEST TIMESTAMP LT PUSH2 0x1A9 PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH32 0x9E3A5E37224532DEA67B89FACE185703738A228A6E8A23DEE546960180D3BE64 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E63 PUSH2 0x1E9A JUMP JUMPDEST TIMESTAMP GT DUP1 PUSH2 0x840 JUMPI POP POP PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST DUP2 PUSH2 0x1BCD JUMPI PUSH2 0x1BCD DUP2 PUSH2 0x2CC3 JUMP JUMPDEST PUSH2 0x1EE3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO ISZERO PUSH2 0x198 PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0x1EFA PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x199 PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0x1F05 DUP4 DUP4 DUP4 PUSH2 0x1CA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1F2B SWAP1 DUP3 PUSH2 0x1A0 PUSH2 0x35EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1F5A SWAP1 DUP3 PUSH2 0x20F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x2021 PUSH2 0x3604 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2085 PUSH2 0x207D PUSH2 0x1E59 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x1EBE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x209A PUSH5 0xE8D4A51000 DUP3 LT ISZERO PUSH1 0xCB PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0x20B0 PUSH8 0x16345785D8A0000 DUP3 GT ISZERO PUSH1 0xCA PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x20BD SWAP1 DUP3 PUSH2 0x1CAE JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x40 MLOAD PUSH32 0xA9BA3FFE0B6C366B81232CAAB38605A0699AD5398D6CCE76F91EE809E322DAFC SWAP1 PUSH2 0x769 SWAP1 DUP4 SWAP1 PUSH2 0x49EC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH2 0x826 DUP5 DUP3 LT ISZERO DUP4 PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6BD DUP3 DUP3 PUSH2 0x3608 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6BD DUP3 PUSH1 0x16 PUSH2 0x3608 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6BD DUP3 PUSH1 0x2C PUSH2 0x362F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6BD DUP3 PUSH1 0x4B PUSH2 0x3639 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6BD DUP3 PUSH1 0x55 PUSH2 0x3641 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6BD DUP3 PUSH1 0x56 PUSH2 0x364B JUMP JUMPDEST PUSH2 0x1BCD DUP2 DUP4 EQ PUSH1 0x67 PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH2 0x216C PUSH2 0x25C6 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x2178 PUSH2 0x1E59 JUMP JUMPDEST ISZERO PUSH2 0x227D JUMPI PUSH1 0x40 MLOAD PUSH4 0x6C1E5431 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0xD83CA862 SWAP1 PUSH2 0x21BB SWAP1 DUP14 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x48D9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x21E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x220B SWAP2 SWAP1 PUSH2 0x4757 JUMP JUMPDEST SWAP1 POP PUSH2 0x2216 DUP2 PUSH2 0x3659 JUMP JUMPDEST PUSH2 0x2220 DUP11 DUP9 PUSH2 0x3686 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH2 0x2239 DUP2 DUP8 PUSH2 0x2232 PUSH2 0x788 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36D2 JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xE1D39CAF039C7DC6F364B1E29D1E67C4E330003A43F4991D50CF3E8840D95EAC SWAP2 PUSH2 0x226F SWAP2 DUP5 SWAP2 SWAP1 PUSH2 0x4B70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0x2293 JUMP JUMPDEST PUSH2 0x2287 DUP10 DUP8 PUSH2 0x3686 JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0x9 SSTORE SWAP1 SWAP6 POP SWAP4 POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE DUP8 SWAP3 DUP8 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP5 POP SWAP5 POP SWAP5 POP POP POP SWAP8 POP SWAP8 POP SWAP8 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x22F1 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x22DA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x22EC PUSH1 0x1 PUSH2 0x2D16 JUMP JUMPDEST PUSH2 0x24DC JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x22FE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x232C DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x231A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x22EC PUSH1 0x0 PUSH2 0x2D16 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2339 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x2406 JUMPI PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD PUSH2 0x236C SWAP3 SWAP2 SWAP1 PUSH2 0x487D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x23A9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x23AE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x23BD JUMPI INVALID JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x43ADBAFB PUSH1 0xE0 SHL DUP2 EQ PUSH2 0x23E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x4 PUSH1 0x0 RETURNDATACOPY PUSH1 0x40 PUSH1 0x20 MSTORE PUSH1 0x24 RETURNDATASIZE SUB PUSH1 0x24 PUSH1 0x40 RETURNDATACOPY PUSH1 0x1C RETURNDATASIZE ADD PUSH1 0x0 RETURN JUMPDEST PUSH2 0x240F DUP7 PUSH2 0x255A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2425 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2437 DUP2 DUP5 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1F NOT DUP3 ADD DUP4 SWAP1 MSTORE PUSH4 0x43ADBAFB PUSH1 0x3F NOT DUP4 ADD MSTORE PUSH1 0x20 MUL PUSH1 0x23 NOT DUP3 ADD PUSH1 0x44 DUP3 ADD DUP2 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x246F PUSH2 0x16A9 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP DUP4 PUSH1 0x0 EQ ISZERO PUSH2 0x2494 JUMPI PUSH1 0x0 SWAP8 POP DUP8 SWAP7 POP SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x24BB SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x24AB DUP13 DUP13 PUSH2 0x24A4 PUSH2 0x788 JUMP JUMPDEST DUP10 DUP10 PUSH2 0x372A JUMP JUMPDEST SWAP1 SWAP11 POP SWAP9 POP SWAP3 SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP JUMPDEST SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x826 JUMPI PUSH2 0x826 PUSH1 0x0 DUP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x24EF JUMPI PUSH2 0x24EF PUSH1 0x0 PUSH1 0x4 PUSH2 0x1EBE JUMP JUMPDEST DUP3 PUSH2 0x24FC JUMPI POP PUSH1 0x0 PUSH2 0x6BD JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 DUP2 MUL SWAP1 DUP5 DUP3 DUP2 PUSH2 0x2512 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x2524 JUMPI PUSH2 0x2524 PUSH1 0x0 PUSH1 0x5 PUSH2 0x1EBE JUMP JUMPDEST DUP3 DUP2 DUP2 PUSH2 0x252D JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL PUSH2 0x826 DUP5 ISZERO DUP1 PUSH2 0x2553 JUMPI POP DUP4 DUP6 DUP4 DUP2 PUSH2 0x2550 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH1 0x3 PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0x2581 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x256A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x257C PUSH1 0x1 PUSH2 0x2D16 JUMP JUMPDEST PUSH2 0x37C5 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x258E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x232C DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x25AA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x257C PUSH1 0x0 PUSH2 0x2D16 JUMP JUMPDEST PUSH2 0x1BCD DUP3 DUP3 PUSH2 0x37FE JUMP JUMPDEST PUSH2 0x25CE PUSH2 0x41E7 JUMP JUMPDEST PUSH2 0x25D6 PUSH2 0x4216 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x80 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x40 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 DUP7 MSTORE DUP5 MLOAD DUP6 DUP3 ADD MLOAD PUSH32 0x0 DUP2 DUP5 ADD MSTORE PUSH32 0x0 SWAP1 MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 SWAP1 MSTORE PUSH32 0x0 PUSH1 0xC0 DUP6 ADD MSTORE PUSH32 0x0 PUSH1 0xA0 DUP6 ADD MSTORE PUSH32 0x0 SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x0 SWAP1 DUP4 ADD MSTORE PUSH32 0x0 SWAP1 DUP3 ADD MSTORE SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH2 0x280C PUSH2 0x25C6 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH20 0x0 PUSH4 0xD83CA862 DUP12 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x284D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x48D9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2865 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2879 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x289D SWAP2 SWAP1 PUSH2 0x4757 JUMP JUMPDEST SWAP1 POP PUSH2 0x28A8 DUP2 PUSH2 0x3659 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x28B5 DUP13 DUP11 PUSH2 0x38B5 JUMP JUMPDEST PUSH1 0xA SLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x28DF JUMPI PUSH2 0x28DF DUP3 PUSH2 0x28D2 DUP16 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0x28DA PUSH2 0x788 JUMP JUMPDEST PUSH2 0x38EF JUMP JUMPDEST PUSH2 0x28F3 DUP4 DUP4 PUSH2 0x28EC PUSH2 0x788 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x36D2 JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xE1D39CAF039C7DC6F364B1E29D1E67C4E330003A43F4991D50CF3E8840D95EAC SWAP2 PUSH2 0x2929 SWAP2 DUP7 SWAP2 SWAP1 PUSH2 0x4B70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE DUP5 SWAP3 DUP5 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP8 POP SWAP8 POP SWAP8 POP POP POP POP POP POP SWAP8 POP SWAP8 POP SWAP8 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2992 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x297B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x298D PUSH1 0x1 PUSH2 0x2D16 JUMP JUMPDEST PUSH2 0x307D JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x299F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x232C DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x29BB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x298D PUSH1 0x0 PUSH2 0x2D16 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH2 0x2A20 PUSH32 0x0 PUSH2 0x2A1B PUSH1 0x1 PUSH2 0x2D16 JUMP JUMPDEST PUSH2 0x3A01 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2A2D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2A67 PUSH32 0x0 PUSH2 0x2A1B PUSH1 0x0 PUSH2 0x2D16 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2A74 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0xC7FE78D0 DUP7 DUP6 DUP6 PUSH2 0x2AAB DUP10 PUSH2 0x3AA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2ACA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x490A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2AE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2AF6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B1A SWAP2 SWAP1 PUSH2 0x4757 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x2BF2 JUMPI PUSH2 0x2BEF PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x679AEFCE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2BB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BC4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2BE8 SWAP2 SWAP1 PUSH2 0x4757 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x37C5 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x2CBF JUMPI PUSH2 0x2CBC PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x679AEFCE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C91 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2CB5 SWAP2 SWAP1 PUSH2 0x4757 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x24DC JUMP JUMPDEST SWAP2 POP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH7 0x42414C23000030 PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD SWAP1 SWAP5 ADD PUSH1 0x10 SHL SWAP4 SWAP1 SWAP4 ADD ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 ISZERO PUSH2 0x2D6B JUMPI POP PUSH32 0x0 SWAP1 POP PUSH32 0x0 PUSH2 0x2DB1 JUMP JUMPDEST POP PUSH32 0x0 SWAP1 POP PUSH32 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x826 JUMPI PUSH2 0x2E3B DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x679AEFCE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2DFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E10 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E34 SWAP2 SWAP1 PUSH2 0x4757 JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x37C5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x826 DUP4 DUP4 PUSH2 0x37C5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP2 ISZERO PUSH2 0x2EAE JUMPI DUP4 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2E83 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP3 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2E9D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x826 JUMP JUMPDEST DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2EBC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2ED6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL DUP4 ISZERO DUP1 PUSH2 0x2F03 JUMPI POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x2F00 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0x2F13 JUMPI PUSH2 0x2F13 PUSH1 0x0 PUSH1 0x3 PUSH2 0x1EBE JUMP JUMPDEST DUP1 PUSH2 0x2F22 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x6BD JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH1 0x0 NOT DUP3 ADD JUMPDEST DIV PUSH1 0x1 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1CCC JUMPI PUSH2 0x1CCC PUSH1 0x0 PUSH1 0x1 PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x30FFA11B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH20 0x0 SWAP2 PUSH4 0x61FF4236 SWAP2 PUSH2 0x2F9C SWAP2 DUP11 SWAP2 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x497B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2FB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2FC8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2FEC SWAP2 SWAP1 PUSH2 0x4757 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x826 DUP4 DUP4 PUSH2 0x24DC JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x3B18CE7B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH20 0x0 SWAP2 PUSH4 0xEC6339EC SWAP2 PUSH2 0x2F9C SWAP2 DUP11 SWAP2 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x497B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x826 DUP4 DUP4 PUSH2 0x307D JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 LT PUSH2 0x306F JUMPI PUSH1 0x0 PUSH2 0x6BD JUMP JUMPDEST POP PUSH8 0xDE0B6B3A7640000 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x3090 JUMPI PUSH2 0x3090 PUSH1 0x0 PUSH1 0x4 PUSH2 0x1EBE JUMP JUMPDEST DUP3 PUSH2 0x309D JUMPI POP PUSH1 0x0 PUSH2 0x6BD JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 DUP2 MUL SWAP1 DUP5 DUP3 DUP2 PUSH2 0x30B3 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x30D7 JUMPI PUSH2 0x30D7 PUSH8 0xDE0B6B3A7640000 DUP6 DUP4 DUP2 PUSH2 0x30CE JUMPI INVALID JUMPDEST DIV EQ PUSH1 0x5 PUSH2 0x1EBE JUMP JUMPDEST DUP3 PUSH1 0x1 DUP3 SUB DUP2 PUSH2 0x2F31 JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH2 0x2E3B DUP5 PUSH22 0x50524F544F434F4C5F535741505F4645455F50455243 PUSH1 0x50 SHL DUP5 DUP7 PUSH2 0x3AEC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E3B DUP5 PUSH32 0x50524F544F434F4C5F4645455F4759524F5F504F5254494F4E00000000000000 DUP5 DUP7 PUSH2 0x3AEC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3142 PUSH2 0x11B4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAAABADC5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x317A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x318E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x840 SWAP2 SWAP1 PUSH2 0x4324 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31BC PUSH2 0x1FB4 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x320D DUP5 PUSH2 0x3D99 JUMP JUMPDEST SWAP1 POP PUSH2 0x3228 PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3220 JUMPI INVALID JUMPDEST EQ PUSH1 0xCE PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3233 DUP6 PUSH2 0x3DB8 JUMP JUMPDEST SWAP1 POP PUSH2 0x3241 DUP2 MLOAD PUSH1 0x2 PUSH2 0x214F JUMP JUMPDEST PUSH2 0x324A DUP2 PUSH2 0x255A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3255 PUSH2 0x25C6 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH20 0x0 PUSH4 0xD83CA862 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3296 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x48D9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x32AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x32C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x32E6 SWAP2 SWAP1 PUSH2 0x4757 JUMP JUMPDEST SWAP1 POP PUSH32 0xAF65F1A72BF4F8BC48E8153858E1F7B307CE39C88361A677C0A79C2A1AE571EF DUP2 PUSH1 0x40 MLOAD PUSH2 0x3317 SWAP2 SWAP1 PUSH2 0x49EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 PUSH2 0x332D DUP6 DUP4 DUP7 DUP7 PUSH2 0x2A83 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3375 PUSH2 0x335B DUP4 DUP9 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x3345 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x37C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x3368 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x20F0 JUMP JUMPDEST PUSH1 0x9 SWAP4 SWAP1 SWAP4 SSTORE POP SWAP1 SWAP12 SWAP4 SWAP11 POP SWAP3 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1BCD DUP3 DUP3 PUSH2 0x3E6C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH2 0x33F2 PUSH1 0x1 PUSH2 0x3F01 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x33FF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x3415 PUSH1 0x0 PUSH2 0x3F01 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x3422 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD LT ISZERO PUSH2 0x3441 JUMPI PUSH2 0x785 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x3450 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1CA9 JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3478 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x34A1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH1 0x65 PUSH2 0x1EBE JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x3461 JUMP JUMPDEST DUP2 PUSH2 0x1BCD JUMPI PUSH2 0x1BCD DUP2 PUSH2 0x3F55 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x826 PUSH2 0x34D9 DUP4 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x20 ADD MLOAD PUSH2 0x1CE8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 MLOAD DUP6 MLOAD PUSH2 0x34E6 SWAP2 PUSH2 0x1CE8 JUMP JUMPDEST SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xBA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1B PUSH2 0x350B PUSH2 0x1190 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x3526 JUMPI POP PUSH2 0x3526 DUP4 PUSH2 0x3F65 JUMP JUMPDEST ISZERO PUSH2 0x354E JUMPI PUSH2 0x3533 PUSH2 0x1190 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP PUSH2 0x6BD JUMP JUMPDEST PUSH2 0x3556 PUSH2 0x3138 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9BE2A884 DUP5 DUP5 ADDRESS PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x35BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x35CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x35E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x6BD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35FD DUP5 DUP5 GT ISZERO DUP4 PUSH2 0x1EBE JUMP JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR PUSH3 0x3FFFFF AND PUSH3 0x1FFFFF DUP2 SGT PUSH2 0x3622 JUMPI DUP1 PUSH2 0x2E3B JUMP JUMPDEST PUSH3 0x3FFFFF NOT OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST SHR PUSH4 0x7FFFFFFF AND SWAP1 JUMP JUMPDEST SHR PUSH2 0x3FF AND SWAP1 JUMP JUMPDEST SHR PUSH1 0x1 SWAP1 DUP2 AND EQ SWAP1 JUMP JUMPDEST SHR PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x366B PUSH1 0x9 SLOAD DUP7 PUSH2 0x245B JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH2 0x367F DUP5 DUP5 DUP5 DUP5 PUSH2 0x3F97 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x3695 DUP5 PUSH2 0x3D99 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x36A5 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x36BF JUMPI PUSH2 0x36B5 DUP6 DUP6 PUSH2 0x3FBD JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH2 0x36CA JUMP JUMPDEST PUSH2 0x36CA PUSH2 0x150 PUSH2 0x2CC3 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO PUSH2 0x3704 JUMPI PUSH1 0x0 PUSH2 0x36F0 DUP5 PUSH2 0x36EA DUP9 DUP9 PUSH2 0x2EE9 JUMP JUMPDEST SWAP1 PUSH2 0x307D JUMP JUMPDEST SWAP1 POP PUSH2 0x36FC DUP7 DUP3 PUSH2 0x24C4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2E3B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3714 DUP5 PUSH2 0xB44 DUP9 DUP9 PUSH2 0x37C5 JUMP JUMPDEST SWAP1 POP PUSH2 0x3720 DUP7 DUP3 PUSH2 0x2F3E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 DUP7 GT PUSH2 0x373F JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x37BB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x375F DUP6 PUSH2 0x3759 PUSH2 0x3752 DUP11 DUP13 PUSH2 0x2F3E JUMP JUMPDEST DUP10 SWAP1 PUSH2 0x37C5 JUMP JUMPDEST SWAP1 PUSH2 0x37C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3777 PUSH2 0x3770 DUP10 DUP12 PUSH2 0x2F3E JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x37C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3785 DUP10 DUP4 PUSH2 0x2F3E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3793 DUP5 DUP4 PUSH2 0x24DC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x37A1 DUP9 DUP4 PUSH2 0x37C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x37AF DUP4 DUP4 PUSH2 0x2F3E JUMP JUMPDEST SWAP2 SWAP8 POP SWAP1 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL DUP4 ISZERO DUP1 PUSH2 0x37DF JUMPI POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x37DC JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0x37EF JUMPI PUSH2 0x37EF PUSH1 0x0 PUSH1 0x3 PUSH2 0x1EBE JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x252D JUMP JUMPDEST PUSH2 0x3815 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x19B PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0x3821 DUP3 PUSH1 0x0 DUP4 PUSH2 0x1CA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3847 SWAP1 DUP3 PUSH2 0x1A1 PUSH2 0x35EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x386D SWAP1 DUP3 PUSH2 0x3FEF JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x38C4 DUP5 PUSH2 0x3D99 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x38D4 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x38E4 JUMPI PUSH2 0x36B5 DUP6 DUP6 PUSH2 0x3FFD JUMP JUMPDEST PUSH2 0x36CA PUSH2 0x136 PUSH2 0x2CC3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0xA SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP3 MSTORE PUSH2 0x100 DUP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB AND PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x393C DUP6 DUP6 PUSH2 0x24C4 JUMP JUMPDEST GT ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6F7665722061646472657373206C697175696469747920636170000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x3992 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x714 SWAP2 SWAP1 PUSH2 0x4A36 JUMP JUMPDEST POP PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x39AB DUP6 DUP5 PUSH2 0x24C4 JUMP JUMPDEST GT ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6F76657220676C6F62616C206C69717569646974792063617000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x367F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x714 SWAP2 SWAP1 PUSH2 0x4A36 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3A0E PUSH2 0x11B4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB05F8E48 PUSH2 0x3A24 PUSH2 0x85E JUMP JUMPDEST DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A42 SWAP3 SWAP2 SWAP1 PUSH2 0x49F5 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3A5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A6E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3A92 SWAP2 SWAP1 PUSH2 0x476F JUMP JUMPDEST POP POP DUP2 DUP2 ADD SWAP5 POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x2B1A DUP4 DUP6 PUSH2 0x37C5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xFF SHL DUP3 LT PUSH2 0x2CBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4BED PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND DUP4 DUP6 ADD MSTORE DUP4 MLOAD DUP1 DUP5 SUB DUP6 ADD DUP2 MSTORE PUSH1 0x60 DUP5 ADD DUP1 DUP7 MSTORE DUP2 MLOAD SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH4 0x696EB375 PUSH1 0xE0 SHL SWAP1 SWAP2 MSTORE PUSH1 0x64 DUP5 ADD DUP2 SWAP1 MSTORE SWAP4 MLOAD PUSH1 0x0 SWAP5 SWAP4 SWAP2 DUP10 AND SWAP3 PUSH4 0x696EB375 SWAP3 PUSH1 0x84 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3B5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3B71 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3B87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO PUSH2 0x3C07 JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBD02D0F5 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3BD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3BE6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3BFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 POP PUSH2 0x2E3B SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP9 SWAP1 MSTORE DUP2 DUP4 ADD DUP8 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 DUP4 ADD DUP1 DUP6 MSTORE DUP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH4 0x696EB375 PUSH1 0xE0 SHL SWAP1 SWAP2 MSTORE PUSH1 0x64 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP3 PUSH4 0x696EB375 SWAP3 PUSH1 0x84 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3C73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3C87 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3C9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO PUSH2 0x3D1E JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBD02D0F5 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3CE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3CFC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3D12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 POP PUSH2 0x2E3B SWAP2 POP POP JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBD02D0F5 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3D62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D76 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3D8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3DB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3DCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP3 SWAP5 SWAP3 SWAP4 DUP4 ADD SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x3DF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x3E0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x3E28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3E55 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3E3D JUMP JUMPDEST POP POP POP POP SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 MSTORE POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3E78 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1CA9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x3E85 SWAP1 DUP3 PUSH2 0x20F0 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3EAB SWAP1 DUP3 PUSH2 0x20F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x3F2E JUMPI PUSH32 0x0 PUSH2 0x6BD JUMP JUMPDEST POP PUSH32 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x785 DUP2 PUSH3 0x23ACA9 PUSH1 0xE9 SHL PUSH2 0x4022 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F77 PUSH4 0x1C74C917 PUSH1 0xE1 SHL PUSH2 0x10D1 JUMP JUMPDEST DUP3 EQ DUP1 PUSH2 0x6BD JUMPI POP PUSH2 0x3F8F PUSH4 0x50DD6ED9 PUSH1 0xE0 SHL PUSH2 0x10D1 JUMP JUMPDEST SWAP1 SWAP2 EQ SWAP2 SWAP1 POP JUMP JUMPDEST DUP4 ISZERO PUSH2 0x3FA7 JUMPI PUSH2 0x3FA7 DUP3 DUP6 PUSH2 0x338E JUMP JUMPDEST DUP3 ISZERO PUSH2 0x3FB7 JUMPI PUSH2 0x3FB7 DUP2 DUP5 PUSH2 0x338E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x3FCC DUP5 PUSH2 0x4083 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3FE2 DUP7 DUP4 PUSH2 0x3FDD PUSH2 0x788 JUMP JUMPDEST PUSH2 0x40A5 JUMP JUMPDEST SWAP2 SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x826 DUP4 DUP4 PUSH1 0x1 PUSH2 0x35EE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x400C DUP5 PUSH2 0x4083 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3FE2 DUP7 DUP4 PUSH2 0x401D PUSH2 0x788 JUMP JUMPDEST PUSH2 0x412B JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x409A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 ADD MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x40BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x40E9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x16A1 JUMPI PUSH2 0x410C DUP4 PUSH2 0xB44 DUP7 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x3345 JUMPI INVALID JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4118 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x40EF JUMP JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x4145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x416F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x16A1 JUMPI PUSH2 0x41A8 DUP4 PUSH2 0x36EA DUP7 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x4192 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2EE9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x41B4 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x4175 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x4229 PUSH2 0x425F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4236 PUSH2 0x425F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xD18 DUP2 PUSH2 0x4BD7 JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x42A4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x42B8 JUMPI INVALID JUMPDEST PUSH2 0x42CB PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x4BB3 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x42DF JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0xD18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4319 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x826 DUP2 PUSH2 0x4BD7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4335 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x826 DUP2 PUSH2 0x4BD7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4352 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x435D DUP2 PUSH2 0x4BD7 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x436D DUP2 PUSH2 0x4BD7 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x438C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x4397 DUP2 PUSH2 0x4BD7 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x43A7 DUP2 PUSH2 0x4BD7 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x43D2 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x43DD DUP2 PUSH2 0x4BD7 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x43ED DUP2 PUSH2 0x4BD7 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x4410 JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x443F JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x444A DUP2 PUSH2 0x4BD7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4469 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x826 DUP3 PUSH2 0x4284 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x448C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP8 CALLDATALOAD SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x449E DUP2 PUSH2 0x4BD7 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH2 0x44AE DUP2 PUSH2 0x4BD7 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x44CA JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP11 ADD SWAP2 POP DUP11 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x44DD JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x44E9 JUMPI INVALID JUMPDEST PUSH1 0x20 DUP2 MUL PUSH2 0x44F9 PUSH1 0x20 DUP3 ADD PUSH2 0x4BB3 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP7 ADD DUP16 PUSH1 0x20 DUP6 DUP10 ADD ADD GT ISZERO PUSH2 0x4518 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x453B JUMPI DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x451C JUMP JUMPDEST POP SWAP9 POP POP POP POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP5 POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4562 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x456F DUP11 DUP3 DUP12 ADD PUSH2 0x4294 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x458F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x826 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x45B8 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x45DA JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x45F7 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE PUSH2 0x4603 DUP4 PUSH2 0x4284 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x461E JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x463C JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x465C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4673 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP PUSH2 0x120 DUP1 DUP4 DUP10 SUB SLT ISZERO PUSH2 0x4689 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x4692 DUP2 PUSH2 0x4BB3 JUMP JUMPDEST SWAP1 POP PUSH2 0x469D DUP4 PUSH2 0x42F9 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x46AB PUSH1 0x20 DUP5 ADD PUSH2 0x4279 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x46BC PUSH1 0x40 DUP5 ADD PUSH2 0x4279 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x46EB PUSH1 0xC0 DUP5 ADD PUSH2 0x4279 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x46FC PUSH1 0xE0 DUP5 ADD PUSH2 0x4279 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD CALLDATALOAD DUP4 DUP2 GT ISZERO PUSH2 0x4714 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH2 0x4720 DUP11 DUP3 DUP8 ADD PUSH2 0x4294 JUMP JUMPDEST SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP8 PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP8 POP PUSH1 0x40 SWAP1 SWAP7 ADD CALLDATALOAD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4750 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4768 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4784 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 MLOAD SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP6 ADD MLOAD PUSH2 0x47A4 DUP2 PUSH2 0x4BD7 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x47DE JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x47C2 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x47F4 DUP3 DUP3 MLOAD PUSH2 0x486E JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH2 0x4806 PUSH1 0x40 DUP5 ADD DUP3 PUSH2 0x486E JUMP JUMPDEST POP PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH2 0x100 DUP4 ADD MSTORE POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP4 CALLDATACOPY SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x826 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x47AF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0x48C7 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x47AF JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2B1A DUP2 DUP6 PUSH2 0x47AF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E0 DUP1 DUP4 MSTORE PUSH2 0x48ED DUP2 DUP5 ADD DUP8 PUSH2 0x47AF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x48FD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x483E JUMP JUMPDEST PUSH2 0x2E3B PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x47E9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x200 DUP1 DUP4 MSTORE PUSH2 0x491E DUP2 DUP5 ADD DUP9 PUSH2 0x47AF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x492E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x483E JUMP JUMPDEST PUSH2 0x493B PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x47E9 JUMP JUMPDEST DUP3 PUSH2 0x1E0 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 MSTORE PUSH2 0x495E PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x47AF JUMP JUMPDEST SWAP1 POP PUSH2 0x496D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x486E JUMP JUMPDEST DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x260 DUP1 DUP4 MSTORE PUSH2 0x498F DUP2 DUP5 ADD DUP11 PUSH2 0x47AF JUMP JUMPDEST SWAP2 POP POP DUP7 PUSH1 0x20 DUP4 ADD MSTORE DUP6 ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x49AD PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x483E JUMP JUMPDEST PUSH2 0x49BB PUSH2 0x100 DUP4 ADD DUP6 PUSH2 0x47E9 JUMP JUMPDEST PUSH2 0x2FEC PUSH2 0x220 DUP4 ADD DUP5 PUSH2 0x486E JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4A62 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x4A46 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x4A73 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 SWAP2 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP3 MSTORE PUSH1 0x8 DUP2 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x80 SHR PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1C0 DUP2 ADD PUSH2 0x4AF8 DUP3 DUP6 PUSH2 0x483E JUMP JUMPDEST PUSH2 0x4B06 PUSH1 0xA0 DUP4 ADD DUP5 MLOAD PUSH2 0x486E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x4B18 PUSH1 0xE0 DUP5 ADD DUP3 PUSH2 0x486E JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x140 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x160 DUP4 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x180 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x1A0 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2E3B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x47AF JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4BCF JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x785 JUMPI PUSH1 0x0 DUP1 REVERT INVALID MSTORE8 PUSH2 0x6665 NUMBER PUSH2 0x7374 GASPRICE KECCAK256 PUSH23 0x616C756520646F65736E27742066697420696E20616E20 PUSH10 0x6E74323536A264697066 PUSH20 0x582212203F5D826E9B2AFA5DCA5E823004707A42 0xBA PUSH3 0xB3E44D DUP3 SWAP6 CALLDATALOAD 0xE6 ORIGIN SSTORE 0xBF 0xE7 SWAP6 0xC2 DUP10 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ", "sha1": "ee016febb09250780f2a55cb5996f06bd6439fe1", "source": "// SPDX-License-Identifier: LicenseRef-Gyro-1.0\n// for information on licensing please see the README in the GitHub repository <https://github.com/gyrostable/concentrated-lps>.\n\npragma solidity 0.7.6;\npragma experimental ABIEncoderV2;\n\n// import \"@balancer-labs/v2-solidity-utils/contracts/math/FixedPoint.sol\";\nimport \"../../libraries/GyroFixedPoint.sol\";\n\nimport \"@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol\";\nimport \"@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol\";\nimport \"@balancer-labs/v2-pool-utils/contracts/interfaces/IRateProvider.sol\";\n\nimport \"../../libraries/GyroConfigKeys.sol\";\nimport \"../../libraries/GyroConfigHelpers.sol\";\nimport \"../../libraries/GyroErrors.sol\";\nimport \"../../interfaces/IGyroConfig.sol\";\nimport \"../../libraries/GyroPoolMath.sol\";\n\nimport \"../ExtensibleWeightedPool2Tokens.sol\";\nimport \"./GyroECLPMath.sol\";\nimport \"../CappedLiquidity.sol\";\nimport \"../LocallyPausable.sol\";\n\ncontract GyroECLPPool is ExtensibleWeightedPool2Tokens, CappedLiquidity, LocallyPausable {\n    using GyroFixedPoint for uint256;\n    using WeightedPoolUserDataHelpers for bytes;\n    using WeightedPool2TokensMiscData for bytes32;\n    using SafeCast for int256;\n    using SafeCast for uint256;\n    using GyroConfigHelpers for IGyroConfig;\n\n    uint256 private constant _MINIMUM_BPT = 1e6;\n    bytes32 private constant POOL_TYPE = \"ECLP\";\n\n    /// @dev Parameters of the ECLP pool\n    int256 internal immutable _paramsAlpha;\n    int256 internal immutable _paramsBeta;\n    int256 internal immutable _paramsC;\n    int256 internal immutable _paramsS;\n    int256 internal immutable _paramsLambda;\n    int256 internal immutable _tauAlphaX;\n    int256 internal immutable _tauAlphaY;\n    int256 internal immutable _tauBetaX;\n    int256 internal immutable _tauBetaY;\n    int256 internal immutable _u;\n    int256 internal immutable _v;\n    int256 internal immutable _w;\n    int256 internal immutable _z;\n    int256 internal immutable _dSq;\n\n    IGyroConfig public gyroConfig;\n\n    /// @dev for rate scaling\n    IRateProvider public immutable rateProvider0;\n    IRateProvider public immutable rateProvider1;\n\n    struct GyroParams {\n        NewPoolParams baseParams;\n        GyroECLPMath.Params eclpParams;\n        GyroECLPMath.DerivedParams derivedEclpParams;\n        address rateProvider0;\n        address rateProvider1;\n        address capManager;\n        CapParams capParams;\n        address pauseManager;\n    }\n\n    event ECLPParamsValidated(bool paramsValidated);\n    event ECLPDerivedParamsValidated(bool derivedParamsValidated);\n\n    event InvariantAterInitializeJoin(uint256 invariantAfterJoin);\n    event InvariantOldAndNew(uint256 oldInvariant, uint256 newInvariant);\n\n    event SwapParams(uint256[] balances, GyroECLPMath.Vector2 invariant, uint256 amount);\n\n    constructor(GyroParams memory params, address configAddress)\n        ExtensibleWeightedPool2Tokens(params.baseParams)\n        CappedLiquidity(params.capManager, params.capParams)\n        LocallyPausable(params.pauseManager)\n    {\n        _grequire(configAddress != address(0x0), GyroECLPPoolErrors.ADDRESS_IS_ZERO_ADDRESS);\n\n        GyroECLPMath.validateParams(params.eclpParams);\n        emit ECLPParamsValidated(true);\n\n        GyroECLPMath.validateDerivedParamsLimits(params.eclpParams, params.derivedEclpParams);\n        emit ECLPDerivedParamsValidated(true);\n\n        (_paramsAlpha, _paramsBeta, _paramsC, _paramsS, _paramsLambda) = (\n            params.eclpParams.alpha,\n            params.eclpParams.beta,\n            params.eclpParams.c,\n            params.eclpParams.s,\n            params.eclpParams.lambda\n        );\n\n        (_tauAlphaX, _tauAlphaY, _tauBetaX, _tauBetaY, _u, _v, _w, _z, _dSq) = (\n            params.derivedEclpParams.tauAlpha.x,\n            params.derivedEclpParams.tauAlpha.y,\n            params.derivedEclpParams.tauBeta.x,\n            params.derivedEclpParams.tauBeta.y,\n            params.derivedEclpParams.u,\n            params.derivedEclpParams.v,\n            params.derivedEclpParams.w,\n            params.derivedEclpParams.z,\n            params.derivedEclpParams.dSq\n        );\n\n        gyroConfig = IGyroConfig(configAddress);\n\n        rateProvider0 = IRateProvider(params.rateProvider0);\n        rateProvider1 = IRateProvider(params.rateProvider1);\n    }\n\n    /** @dev reconstructs ECLP params structs from immutable arrays */\n    function reconstructECLPParams() internal view returns (GyroECLPMath.Params memory params, GyroECLPMath.DerivedParams memory d) {\n        (params.alpha, params.beta, params.c, params.s, params.lambda) = (_paramsAlpha, _paramsBeta, _paramsC, _paramsS, _paramsLambda);\n        (d.tauAlpha.x, d.tauAlpha.y, d.tauBeta.x, d.tauBeta.y) = (_tauAlphaX, _tauAlphaY, _tauBetaX, _tauBetaY);\n        (d.u, d.v, d.w, d.z, d.dSq) = (_u, _v, _w, _z, _dSq);\n    }\n\n    function getECLPParams() external view returns (GyroECLPMath.Params memory params, GyroECLPMath.DerivedParams memory d) {\n        return reconstructECLPParams();\n    }\n\n    /** @dev Reads the balance of a token from the balancer vault and returns the scaled amount. Smaller storage access\n     * compared to getVault().getPoolTokens().\n     * Copied from the 3CLP *except* that for the 2CLP, the scalingFactor is interpreted as a regular integer, not a\n     * FixedPoint number. This is an inconsistency between the base contracts.\n     */\n    function _getScaledTokenBalance(IERC20 token, uint256 scalingFactor) internal view returns (uint256 balance) {\n        // Signature of getPoolTokenInfo(): (pool id, token) -> (cash, managed, lastChangeBlock, assetManager)\n        // and total amount = cash + managed. See balancer repo, PoolTokens.sol and BalanceAllocation.sol\n        (uint256 cash, uint256 managed, , ) = getVault().getPoolTokenInfo(getPoolId(), token);\n        balance = cash + managed; // can't overflow, see BalanceAllocation.sol::total() in the Balancer repo.\n        balance = balance.mulDown(scalingFactor);\n    }\n\n    /** @dev Get all balances in the pool, scaled by the appropriate scaling factors, in a relatively gas-efficient way.\n     * Essentially copied from the 3CLP.\n     */\n    function _getAllBalances() internal view returns (uint256[] memory balances) {\n        // The below is more gas-efficient than the following line because the token slots don't have to be read in the\n        // vault.\n        // (, uint256[] memory balances, ) = getVault().getPoolTokens(getPoolId());\n        balances = new uint256[](2);\n        balances[0] = _getScaledTokenBalance(_token0, _scalingFactor(true));\n        balances[1] = _getScaledTokenBalance(_token1, _scalingFactor(false));\n        return balances;\n    }\n\n    /**\n     * @dev Returns the current value of the invariant.\n     * Note: This function is not used internally; it's public, not external, so we can override it cleanly.\n     */\n    function getInvariant() public view override returns (uint256) {\n        uint256[] memory balances = _getAllBalances();\n        (GyroECLPMath.Params memory eclpParams, GyroECLPMath.DerivedParams memory derivedECLPParams) = reconstructECLPParams();\n        return GyroECLPMath.calculateInvariant(balances, eclpParams, derivedECLPParams);\n    }\n\n    /** When rateProvider{0,1} is provided, this returns the *scaled* price, suitable to compare *rate scaled* balances.\n     *  To compare (decimal- but) not-rate-scaled balances, apply _adjustPrice() to the result.\n     */\n    function _getPrice(\n        uint256[] memory balances,\n        uint256 invariant,\n        GyroECLPMath.Params memory eclpParams,\n        GyroECLPMath.DerivedParams memory derivedECLPParams\n    ) internal view returns (uint256 spotPrice) {\n        spotPrice = GyroECLPMath.calcSpotPrice0in1(balances, eclpParams, derivedECLPParams, invariant.toInt256());\n    }\n\n    /** Returns the current spot price of token0 quoted in units of token1. When rateProvider{0,1} is provided, the\n     * returned price corresponds to tokens *before* rate scaling.\n     */\n    function getPrice() external view returns (uint256 spotPrice) {\n        uint256[] memory balances = _getAllBalances();\n        (GyroECLPMath.Params memory eclpParams, GyroECLPMath.DerivedParams memory derivedECLPParams) = reconstructECLPParams();\n        uint256 invariant = GyroECLPMath.calculateInvariant(balances, eclpParams, derivedECLPParams);\n        spotPrice = _getPrice(balances, invariant, eclpParams, derivedECLPParams);\n        spotPrice = _adjustPrice(spotPrice);\n    }\n\n    // Swap Hooks\n\n    function onSwap(\n        SwapRequest memory request,\n        uint256 balanceTokenIn,\n        uint256 balanceTokenOut\n    ) public virtual override whenNotPaused onlyVault(request.poolId) returns (uint256) {\n        bool tokenInIsToken0;\n\n        if (request.tokenIn == _token0 && request.tokenOut == _token1) {\n            tokenInIsToken0 = true;\n        } else if (request.tokenIn == _token1 && request.tokenOut == _token0) {\n            tokenInIsToken0 = false;\n        } else {\n            _revert(GyroECLPPoolErrors.TOKEN_IN_IS_NOT_TOKEN_0);\n        }\n\n        uint256 scalingFactorTokenIn = _scalingFactor(tokenInIsToken0);\n        uint256 scalingFactorTokenOut = _scalingFactor(!tokenInIsToken0);\n\n        // All token amounts are upscaled.\n        balanceTokenIn = _upscale(balanceTokenIn, scalingFactorTokenIn);\n        balanceTokenOut = _upscale(balanceTokenOut, scalingFactorTokenOut);\n\n        // We \"undo\" the pre-processing that the caller of onSwap() did: In contrast to other pools, we don't exploit\n        // symmetry here, and we identify the two tokens explicitly.\n        uint256[] memory balances = _balancesFromTokenInOut(balanceTokenIn, balanceTokenOut, tokenInIsToken0);\n\n        (GyroECLPMath.Params memory eclpParams, GyroECLPMath.DerivedParams memory derivedECLPParams) = reconstructECLPParams();\n        GyroECLPMath.Vector2 memory invariant;\n        {\n            (int256 currentInvariant, int256 invErr) = GyroECLPMath.calculateInvariantWithError(balances, eclpParams, derivedECLPParams);\n            // invariant = overestimate in x-component, underestimate in y-component\n            // No overflow in `+` due to constraints to the different values enforced in GyroECLPMath.\n            invariant = GyroECLPMath.Vector2(currentInvariant + 2 * invErr, currentInvariant);\n        }\n\n        if (request.kind == IVault.SwapKind.GIVEN_IN) {\n            // Fees are subtracted before scaling, to reduce the complexity of the rounding direction analysis.\n            // This is amount - fee amount, so we round up (favoring a higher fee amount).\n            uint256 feeAmount = request.amount.mulUp(getSwapFeePercentage());\n            request.amount = _upscale(request.amount.sub(feeAmount), scalingFactorTokenIn);\n\n            uint256 amountOut = _onSwapGivenIn(request, balances, tokenInIsToken0, eclpParams, derivedECLPParams, invariant);\n\n            emit SwapParams(balances, invariant, amountOut);\n\n            // amountOut tokens are exiting the Pool, so we round down.\n            return _downscaleDown(amountOut, scalingFactorTokenOut);\n        } else {\n            request.amount = _upscale(request.amount, scalingFactorTokenOut);\n\n            uint256 amountIn = _onSwapGivenOut(request, balances, tokenInIsToken0, eclpParams, derivedECLPParams, invariant);\n\n            emit SwapParams(balances, invariant, amountIn);\n\n            // amountIn tokens are entering the Pool, so we round up.\n            amountIn = _downscaleUp(amountIn, scalingFactorTokenIn);\n\n            // Fees are added after scaling happens, to reduce the complexity of the rounding direction analysis.\n            // This is amount + fee amount, so we round up (favoring a higher fee amount).\n            return amountIn.divUp(getSwapFeePercentage().complement());\n        }\n    }\n\n    function _onSwapGivenIn(\n        SwapRequest memory swapRequest,\n        uint256[] memory balances,\n        bool tokenInIsToken0,\n        GyroECLPMath.Params memory eclpParams,\n        GyroECLPMath.DerivedParams memory derivedECLPParams,\n        GyroECLPMath.Vector2 memory invariant\n    ) private pure returns (uint256) {\n        // Swaps are disabled while the contract is paused.\n        return GyroECLPMath.calcOutGivenIn(balances, swapRequest.amount, tokenInIsToken0, eclpParams, derivedECLPParams, invariant);\n    }\n\n    function _onSwapGivenOut(\n        SwapRequest memory swapRequest,\n        uint256[] memory balances,\n        bool tokenInIsToken0,\n        GyroECLPMath.Params memory eclpParams,\n        GyroECLPMath.DerivedParams memory derivedECLPParams,\n        GyroECLPMath.Vector2 memory invariant\n    ) private pure returns (uint256) {\n        // Swaps are disabled while the contract is paused.\n        return GyroECLPMath.calcInGivenOut(balances, swapRequest.amount, tokenInIsToken0, eclpParams, derivedECLPParams, invariant);\n    }\n\n    /**\n     * @dev Called when the Pool is joined for the first time; that is, when the BPT total supply is zero.\n     *\n     * Returns the amount of BPT to mint, and the token amounts the Pool will receive in return.\n     *\n     * Minted BPT will be sent to `recipient`, except for _MINIMUM_BPT, which will be deducted from this amount and sent\n     * to the zero address instead. This will cause that BPT to remain forever locked there, preventing total BTP from\n     * ever dropping below that value, and ensuring `_onInitializePool` can only be called once in the entire Pool's\n     * lifetime.\n     *\n     * The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n     * be downscaled (rounding up) before being returned to the Vault.\n     */\n    function _onInitializePool(\n        bytes32,\n        address,\n        address,\n        bytes memory userData\n    ) internal override returns (uint256, uint256[] memory) {\n        BaseWeightedPool.JoinKind kind = userData.joinKind();\n        _require(kind == BaseWeightedPool.JoinKind.INIT, Errors.UNINITIALIZED);\n\n        uint256[] memory amountsIn = userData.initialAmountsIn();\n        InputHelpers.ensureInputLengthMatch(amountsIn.length, 2);\n        _upscaleArray(amountsIn);\n\n        (GyroECLPMath.Params memory eclpParams, GyroECLPMath.DerivedParams memory derivedECLPParams) = reconstructECLPParams();\n        uint256 invariantAfterJoin = GyroECLPMath.calculateInvariant(amountsIn, eclpParams, derivedECLPParams);\n\n        emit InvariantAterInitializeJoin(invariantAfterJoin);\n\n        /* We initialize the number of BPT tokens such that one BPT token corresponds to one unit of token1 at the initialized pool price. This makes BPT tokens comparable across pools with different parameters. Note that the invariant does *not* have this property!\n         */\n        uint256 spotPrice = _getPrice(amountsIn, invariantAfterJoin, eclpParams, derivedECLPParams);\n        uint256 bptAmountOut = Math.add(amountsIn[0].mulDown(spotPrice), amountsIn[1]);\n\n        _lastInvariant = invariantAfterJoin;\n\n        return (bptAmountOut, amountsIn);\n    }\n\n    /**\n     * @dev Called whenever the Pool is joined after the first initialization join (see `_onInitializePool`).\n     *\n     * Returns the amount of BPT to mint, the token amounts that the Pool will receive in return, and the number of\n     * tokens to pay in protocol swap fees.\n     *\n     * Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n     * performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n     *\n     * Minted BPT will be sent to `recipient`.\n     *\n     * The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n     * be downscaled (rounding up) before being returned to the Vault.\n     *\n     * Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onJoinPool`). These\n     * amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n     *\n     * protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way\n     */\n    function _onJoinPool(\n        bytes32,\n        address,\n        address recipient,\n        uint256[] memory balances,\n        uint256 lastChangeBlock,\n        uint256, //protocolSwapFeePercentage,\n        bytes memory userData\n    )\n        internal\n        override\n        returns (\n            uint256,\n            uint256[] memory,\n            uint256[] memory\n        )\n    {\n        // Due protocol swap fee amounts are computed by measuring the growth of the invariant between the previous join\n        // or exit event and now - the invariant's growth is due exclusively to swap fees. This avoids spending gas\n        // computing them on each individual swap\n        (GyroECLPMath.Params memory eclpParams, GyroECLPMath.DerivedParams memory derivedECLPParams) = reconstructECLPParams();\n        uint256 invariantBeforeAction = GyroECLPMath.calculateInvariant(balances, eclpParams, derivedECLPParams);\n\n        _distributeFees(invariantBeforeAction);\n\n        (uint256 bptAmountOut, uint256[] memory amountsIn) = _doJoin(balances, userData);\n\n        if (_capParams.capEnabled) {\n            _ensureCap(bptAmountOut, balanceOf(recipient), totalSupply());\n        }\n\n        // Since we pay fees in BPT, they have not changed the invariant and 'invariantBeforeAction' is still consistent with\n        // 'balances'. Therefore, we can use a simplified method to update the invariant that does not require a full\n        // re-computation.\n        // Note: Should this be changed in the future, we also need to reduce the invariant proportionally by the total\n        // protocol fee factor.\n        _lastInvariant = GyroPoolMath.liquidityInvariantUpdate(invariantBeforeAction, bptAmountOut, totalSupply(), true);\n\n        emit InvariantOldAndNew(invariantBeforeAction, _lastInvariant);\n\n        // returns a new uint256[](2) b/c Balancer vault is expecting a fee array, but fees paid in BPT instead\n        return (bptAmountOut, amountsIn, new uint256[](2));\n    }\n\n    function _doJoin(uint256[] memory balances, bytes memory userData) internal view returns (uint256 bptAmountOut, uint256[] memory amountsIn) {\n        BaseWeightedPool.JoinKind kind = userData.joinKind();\n\n        // We do NOT currently support unbalanced update, i.e., EXACT_TOKENS_IN_FOR_BPT_OUT or TOKEN_IN_FOR_EXACT_BPT_OUT\n        if (kind == BaseWeightedPool.JoinKind.ALL_TOKENS_IN_FOR_EXACT_BPT_OUT) {\n            (bptAmountOut, amountsIn) = _joinAllTokensInForExactBPTOut(balances, userData);\n        } else {\n            _revert(Errors.UNHANDLED_JOIN_KIND);\n        }\n    }\n\n    function _joinAllTokensInForExactBPTOut(uint256[] memory balances, bytes memory userData)\n        internal\n        view\n        override\n        returns (uint256, uint256[] memory)\n    {\n        uint256 bptAmountOut = userData.allTokensInForExactBptOut();\n        // Note that there is no maximum amountsIn parameter: this is handled by `IVault.joinPool`.\n\n        uint256[] memory amountsIn = GyroPoolMath._calcAllTokensInGivenExactBptOut(balances, bptAmountOut, totalSupply());\n\n        return (bptAmountOut, amountsIn);\n    }\n\n    /**\n     * @dev Called whenever the Pool is exited.\n     *\n     * Returns the amount of BPT to burn, the token amounts for each Pool token that the Pool will grant in return, and\n     * the number of tokens to pay in protocol swap fees.\n     *\n     * Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n     * performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n     *\n     * BPT will be burnt from `sender`.\n     *\n     * The Pool will grant tokens to `recipient`. These amounts are considered upscaled and will be downscaled\n     * (rounding down) before being returned to the Vault.\n     *\n     * Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onExitPool`). These\n     * amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n     *\n     * protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way\n     */\n    function _onExitPool(\n        bytes32,\n        address,\n        address,\n        uint256[] memory balances,\n        uint256 lastChangeBlock,\n        uint256, // protocolSwapFeePercentage,\n        bytes memory userData\n    )\n        internal\n        override\n        returns (\n            uint256 bptAmountIn,\n            uint256[] memory amountsOut,\n            uint256[] memory dueProtocolFeeAmounts\n        )\n    {\n        // Exits are not completely disabled while the contract is paused: proportional exits (exact BPT in for tokens\n        // out) remain functional.\n        (GyroECLPMath.Params memory eclpParams, GyroECLPMath.DerivedParams memory derivedECLPParams) = reconstructECLPParams();\n\n        // Note: If the contract is paused, swap protocol fee amounts are not charged\n        // to avoid extra calculations and reduce the potential for errors.\n        if (_isNotPaused()) {\n            // Due protocol swap fee amounts are computed by measuring the growth of the invariant between the previous\n            // join or exit event and now - the invariant's growth is due exclusively to swap fees. This avoids\n            // spending gas calculating the fees on each individual swap.\n            uint256 invariantBeforeAction = GyroECLPMath.calculateInvariant(balances, eclpParams, derivedECLPParams);\n\n            _distributeFees(invariantBeforeAction);\n\n            (bptAmountIn, amountsOut) = _doExit(balances, userData);\n\n            // Since we pay fees in BPT, they have not changed the invariant and 'invariantBeforeAction' is still consistent with\n            // 'balances'. Therefore, we can use a simplified method to update the invariant that does not require a full\n            // re-computation.\n            // Note: Should this be changed in the future, we also need to reduce the invariant proportionally by the total\n            // protocol fee factor.\n            _lastInvariant = GyroPoolMath.liquidityInvariantUpdate(invariantBeforeAction, bptAmountIn, totalSupply(), false);\n\n            emit InvariantOldAndNew(invariantBeforeAction, _lastInvariant);\n        } else {\n            // Note: If the contract is paused, swap protocol fee amounts are not charged\n            // to avoid extra calculations and reduce the potential for errors.\n            (bptAmountIn, amountsOut) = _doExit(balances, userData);\n\n            // Invalidate _lastInvariant. We do not compute the invariant to make sure the pool is not locking\n            // up b/c numerical limits might be violated. Instead, we set the invariant such that any following\n            // (non-paused) join/exit will ignore and recompute it. (see GyroPoolMath._calcProtocolFees())\n            _lastInvariant = type(uint256).max;\n        }\n\n        // returns a new uint256[](2) b/c Balancer vault is expecting a fee array, but fees paid in BPT instead\n        return (bptAmountIn, amountsOut, new uint256[](2));\n    }\n\n    function _doExit(uint256[] memory balances, bytes memory userData) internal view returns (uint256 bptAmountIn, uint256[] memory amountsOut) {\n        BaseWeightedPool.ExitKind kind = userData.exitKind();\n\n        // We do NOT support unbalanced exit at the moment, i.e., EXACT_BPT_IN_FOR_ONE_TOKEN_OUT or\n        // BPT_IN_FOR_EXACT_TOKENS_OUT.\n        if (kind == BaseWeightedPool.ExitKind.EXACT_BPT_IN_FOR_TOKENS_OUT) {\n            (bptAmountIn, amountsOut) = _exitExactBPTInForTokensOut(balances, userData);\n        } else {\n            _revert(Errors.UNHANDLED_EXIT_KIND);\n        }\n    }\n\n    function _exitExactBPTInForTokensOut(uint256[] memory balances, bytes memory userData)\n        internal\n        view\n        override\n        returns (uint256, uint256[] memory)\n    {\n        // This exit function is the only one that is not disabled if the contract is paused: it remains unrestricted\n        // in an attempt to provide users with a mechanism to retrieve their tokens in case of an emergency.\n        // This particular exit function is the only one that remains available because it is the simplest one, and\n        // therefore the one with the lowest likelihood of errors.\n\n        uint256 bptAmountIn = userData.exactBptInForTokensOut();\n        // Note that there is no minimum amountOut parameter: this is handled by `IVault.exitPool`.\n\n        uint256[] memory amountsOut = GyroPoolMath._calcTokensOutGivenExactBptIn(balances, bptAmountIn, totalSupply());\n        return (bptAmountIn, amountsOut);\n    }\n\n    // Helpers.\n\n    function _balancesFromTokenInOut(\n        uint256 balanceTokenIn,\n        uint256 balanceTokenOut,\n        bool tokenInIsToken0\n    ) internal pure returns (uint256[] memory balances) {\n        balances = new uint256[](2);\n        if (tokenInIsToken0) {\n            balances[0] = balanceTokenIn;\n            balances[1] = balanceTokenOut;\n        } else {\n            balances[0] = balanceTokenOut;\n            balances[1] = balanceTokenIn;\n        }\n    }\n\n    // Fee helpers. These are exactly the same as in the Gyro2CLPPool.\n    // TODO prob about time to make a base class.\n\n    /**\n     * Note: This function is identical to that used in Gyro2CLPPool.sol\n     * @dev Computes and distributes fees between the Balancer and the Gyro treasury\n     * The fees are computed and distributed in BPT rather than using the\n     * Balancer regular distribution mechanism which would pay these in underlying\n     */\n\n    function _distributeFees(uint256 invariantBeforeAction) internal {\n        // calculate Protocol fees in BPT\n        // lastInvariant is the invariant logged at the end of the last liquidity update\n        // protocol fees are calculated on swap fees earned between liquidity updates\n        (uint256 gyroFees, uint256 balancerFees, address gyroTreasury, address balTreasury) = _getDueProtocolFeeAmounts(\n            _lastInvariant,\n            invariantBeforeAction\n        );\n\n        // Pay fees in BPT\n        _payFeesBpt(gyroFees, balancerFees, gyroTreasury, balTreasury);\n    }\n\n    /**\n     * Note: This function is identical to that used in Gyro2CLPPool.sol\n     * @dev this function overrides inherited function to make sure it is never used\n     */\n    function _getDueProtocolFeeAmounts(\n        uint256[] memory, // balances,\n        uint256[] memory, // normalizedWeights,\n        uint256, // previousInvariant,\n        uint256, // currentInvariant,\n        uint256 // protocolSwapFeePercentage\n    ) internal pure override returns (uint256[] memory) {\n        revert(\"Not implemented\");\n    }\n\n    /**\n     * @dev\n     * Note: This function is identical to that used in Gyro2CLPPool.sol.\n     * Calculates protocol fee amounts in BPT terms.\n     * protocolSwapFeePercentage is not used here b/c we take parameters from GyroConfig instead.\n     * Returns: BPT due to Gyro, BPT due to Balancer, receiving address for Gyro fees, receiving address for Balancer\n     * fees.\n     */\n    function _getDueProtocolFeeAmounts(uint256 previousInvariant, uint256 currentInvariant)\n        internal\n        view\n        returns (\n            uint256,\n            uint256,\n            address,\n            address\n        )\n    {\n        (uint256 protocolSwapFeePerc, uint256 protocolFeeGyroPortion, address gyroTreasury, address balTreasury) = getFeesMetadata();\n\n        // Early return if the protocol swap fee percentage is zero, saving gas.\n        if (protocolSwapFeePerc == 0) {\n            return (0, 0, gyroTreasury, balTreasury);\n        }\n\n        // Calculate fees in BPT\n        (uint256 gyroFees, uint256 balancerFees) = GyroPoolMath._calcProtocolFees(\n            previousInvariant,\n            currentInvariant,\n            totalSupply(),\n            protocolSwapFeePerc,\n            protocolFeeGyroPortion\n        );\n\n        return (gyroFees, balancerFees, gyroTreasury, balTreasury);\n    }\n\n    // Note: This function is identical to that used in Gyro2CLPPool.sol\n    function _payFeesBpt(\n        uint256 gyroFees,\n        uint256 balancerFees,\n        address gyroTreasury,\n        address balTreasury\n    ) internal {\n        // Pay fees in BPT to gyro treasury\n        if (gyroFees > 0) {\n            _mintPoolTokens(gyroTreasury, gyroFees);\n        }\n        // Pay fees in BPT to bal treasury\n        if (balancerFees > 0) {\n            _mintPoolTokens(balTreasury, balancerFees);\n        }\n    }\n\n    // Note: This function is identical to that used in Gyro2CLPPool.sol\n    function getFeesMetadata()\n        public\n        view\n        returns (\n            uint256,\n            uint256,\n            address,\n            address\n        )\n    {\n        return (\n            gyroConfig.getSwapFeePercForPool(address(this), POOL_TYPE),\n            gyroConfig.getProtocolFeeGyroPortionForPool(address(this), POOL_TYPE),\n            gyroConfig.getAddress(GyroConfigKeys.GYRO_TREASURY_KEY),\n            gyroConfig.getAddress(GyroConfigKeys.BAL_TREASURY_KEY)\n        );\n    }\n\n    /** @notice Effective BPT supply.\n     *\n     *  This is the same as `totalSupply()` but also accounts for the fact that the pool owes\n     *  protocol fees to the pool in the form of unminted LP shares created on the next join/exit,\n     *  diluting LPers. Thus, this is the totalSupply() that the next join/exit operation will see.\n     *\n     *  Equivalent to the respective function in, e.g., WeightedPool, see:\n     *  https://github.com/balancer/balancer-v2-monorepo/blob/master/pkg/pool-weighted/contracts/WeightedPool.sol#L325-L344\n     */\n    function getActualSupply() external view returns (uint256) {\n        uint256 supply = totalSupply();\n        (uint256 gyroFees, uint256 balancerFees, , ) = _getDueProtocolFeeAmounts(_lastInvariant, getInvariant());\n        return supply.add(gyroFees).add(balancerFees);\n    }\n\n    /// @notice Equivalent to but more efficient than `getInvariant().divDown(getActualSupply())`.\n    function getInvariantDivActualSupply() external view returns (uint256) {\n        uint256 invariant = getInvariant();\n        uint256 supply = totalSupply();\n        (uint256 gyroFees, uint256 balancerFees, , ) = _getDueProtocolFeeAmounts(_lastInvariant, invariant);\n        uint256 actualSupply = supply.add(gyroFees).add(balancerFees);\n        return invariant.divDown(actualSupply);\n    }\n\n    function _setPausedState(bool paused) internal override {\n        _setPaused(paused);\n    }\n\n    // Rate scaling\n\n    function _scalingFactor(bool token0) internal view override returns (uint256) {\n        IRateProvider rateProvider;\n        uint256 scalingFactor;\n        if (token0) {\n            rateProvider = rateProvider0;\n            scalingFactor = _scalingFactor0;\n        } else {\n            rateProvider = rateProvider1;\n            scalingFactor = _scalingFactor1;\n        }\n        if (address(rateProvider) != address(0)) scalingFactor = scalingFactor.mulDown(rateProvider.getRate());\n        return scalingFactor;\n    }\n\n    function _adjustPrice(uint256 spotPrice) internal view override returns (uint256) {\n        if (address(rateProvider0) != address(0)) spotPrice = spotPrice.mulDown(rateProvider0.getRate());\n        if (address(rateProvider1) != address(0)) spotPrice = spotPrice.divDown(rateProvider1.getRate());\n        return spotPrice;\n    }\n\n    /// @notice Convenience function to fetch the two rates used for scaling the two tokens, as of rateProvider{0,1}.\n    /// Note that these rates do *not* contain scaling to account for differences in the number of decimals. The rates\n    /// themselves are always 18-decimals.\n    function getTokenRates() public view returns (uint256 rate0, uint256 rate1) {\n        rate0 = address(rateProvider0) != address(0) ? rateProvider0.getRate() : GyroFixedPoint.ONE;\n        rate1 = address(rateProvider1) != address(0) ? rateProvider1.getRate() : GyroFixedPoint.ONE;\n    }\n}\n", "sourceMap": "969:31087:96:-:0;;;873:95:35;820:148;;2160:4:91;2113:51;;;;2170;;2486:1;2436:51;;2831:1493:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3034:19;;;;;2973:17;;;;;2992:16;;;;;2930:17;;4335:26:91;;;;4363:27;;;;4221:11;;;;;4234:13;;;;;4249:12;;2020:280:33;;;;;;;;;;;-1:-1:-1;;;2020:280:33;;;;4293:12:91;;;;4181:10;-1:-1:-1;1929:46:16;-1:-1:-1;1749:14:4;-1:-1:-1;;;;;;1749:14:4;;;;2002:13:34;;3034:19:96;;2973:17;;2992:16;;2930:17;;4335:26:91;4363:27;;4221:11;;4234:13;;4249:12;;4221:11;;;;2020:280:33;;4221:11:91;;4234:13;;2002::34;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2025:17:34;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2052:9:34;:14;;-1:-1:-1;;2052:14:34;2064:2;2052:14;;;-1:-1:-1;2100:22:33;;;;;;;2085:37;;2150:25;;;;;;2132:43;;2198:95;2052:14:34;2185:108:33;-1:-1:-1;;;;;;1852:14:1::2;::::0;;;;::::2;::::0;2449:15:94;:37;;;;2497:40;;;;2570:41;;;;2547:64;;4431:15:91::4;::::0;;4444:1:::4;4431:15:::0;;;;;::::4;::::0;;-1:-1:-1;;4431:15:91;;-1:-1:-1;4444:1:91;;-1:-1:-1;4431:15:91;;::::4;::::0;-1:-1:-1;4431:15:91;::::4;::::0;::::4;;::::0;-1:-1:-1;4431:15:91::4;4406:40;;4468:6;:13;;;4456:6;4463:1;4456:9;;;;;;;;-1:-1:-1::0;;;;;4456:25:91;;::::4;:9;::::0;;::::4;::::0;;;;;;;:25;4503:13:::4;::::0;::::4;::::0;4491:9;;:6;;-1:-1:-1;;4491:9:91;::::4;;;;;-1:-1:-1::0;;;;;4491:25:91;;::::4;:9;::::0;;::::4;::::0;;;;;;:25;4681:40:::4;::::0;4714:6;;4681:32:::4;;::::0;::::4;;:40:::0;::::4;:::i;:::-;4754:24;::::0;::::4;::::0;4732:47:::4;::::0;:21:::4;:47::i;:::-;4807:12:::0;;:62:::4;::::0;-1:-1:-1;;;4807:62:91;;4790:14:::4;::::0;-1:-1:-1;;;;;4807:25:91::4;::::0;-1:-1:-1;;4807:62:91::4;::::0;4833:35:::4;::::0;4807:62:::4;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4933:12:::0;;4977:16:::4;::::0;;4991:1:::4;4977:16:::0;;;;;::::4;::::0;;4790:79;;-1:-1:-1;;;;;;4933:27:91;;::::4;::::0;::::4;::::0;4790:79;;4969:6;;4991:1;4977:16:::4;::::0;::::4;::::0;;::::4;::::0;::::4;;::::0;-1:-1:-1;4977:16:91::4;4933:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;::::0;::::4;;;;;-1:-1:-1::0;;;5094:16:91::4;::::0;;;-1:-1:-1;5131:13:91::4;::::0;;::::4;::::0;;5121:23;;-1:-1:-1;;;;;;5121:23:91;;;::::4;::::0;5164:13:::4;::::0;::::4;::::0;5154:23;;;;;;::::4;::::0;5228:13;5206:36:::4;::::0;:21:::4;:36::i;:::-;5188:54;::::0;5292:13:::4;::::0;::::4;::::0;5270:36:::4;::::0;:21:::4;:36::i;:::-;5252:54;::::0;-1:-1:-1;;1217:15:90;;;;;;;;;;;;-1:-1:-1;;;1217:15:90;;;;;-1:-1:-1;;;;;;1190:25:90;;1182:51;;;;-1:-1:-1;;;1182:51:90;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;1243:10:90;:24;;-1:-1:-1;;;;;;1243:24:90;-1:-1:-1;;;;;1243:24:90;;;;;;1301:17;;1277:10;:41;;1355:20;;;;1408:16;;;;;-1:-1:-1;;1277:41:90;;;;;;;;;;-1:-1:-1;;1328:47:90;-1:-1:-1;;;;;;1328:47:90;;;;;;;;;;;-1:-1:-1;;;;;1385:39:90;;;-1:-1:-1;;;1385:39:90;;;;;;;;639:63:93;;649:27;;;;4607:3:120;639:9:93;:63::i;:::-;712:12;:28;;-1:-1:-1;;;;;;712:28:93;-1:-1:-1;;;;;712:28:93;;;;;;3069:84:96::3;::::0;3079:29;::::3;::::0;::::3;320:3:97;3069:9:96;:84::i;:::-;3164:46;3192:6;:17;;;3164:27;;;;;:46;;:::i;:::-;3225:25;3245:4;3225:25;;;;;;:::i;:::-;;;;;;;;3302:17;::::0;::::3;::::0;3321:24:::3;::::0;;::::3;::::0;3261:85;;-1:-1:-1;;;3261:85:96;;:12:::3;::::0;-1:-1:-1;;3261:85:96::3;::::0;::::3;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;3361:32;3388:4;3361:32;;;;;;:::i;:::-;;;;;;;;3483:17;::::0;;::::3;::::0;:23;;3520:22;;::::3;::::0;3556:19:::3;::::0;;::::3;::::0;3589::::3;::::0;;::::3;::::0;3622:24:::3;::::0;;::::3;::::0;3404:252:::3;::::0;::::3;::::0;::::3;::::0;;;;::::3;::::0;;;;::::3;::::0;;;;3752:24;;::::3;::::0;:33;;:35;;3801;;::::3;::::0;3850:32;;::::3;::::0;:34;;3898;::::3;::::0;3946:26;;::::3;::::0;3986;;::::3;::::0;4026;;::::3;::::0;4066::::3;::::0;::::3;::::0;4106:28:::3;::::0;;::::3;::::0;3667:477:::3;::::0;::::3;::::0;;;;::::3;::::0;;;;::::3;::::0;;;;::::3;::::0;;;;::::3;::::0;;;;::::3;::::0;;;;::::3;::::0;;;;::::3;::::0;4155:10:::3;:39:::0;;-1:-1:-1;;;;;;4155:39:96::3;-1:-1:-1::0;;;;;4155:39:96;;;::::3;::::0;;;::::3;::::0;;;4235:20;;::::3;::::0;4205:51;;-1:-1:-1;;;;;;4205:51:96;;;::::3;::::0;4296:20;;;::::3;::::0;4266:51;;;;::::3;::::0;969:31087;;1135:274:23;1345:5;1369:33;1345:5;1369:19;:33::i;:::-;1135:274;;:::o;6672:397:91:-;6748:87;1722:4;6757:45;;;5289:3:17;6748:8:91;:87::i;:::-;6845;1795:4;6854:45;;;5228:3:17;6845:8:91;:87::i;:::-;6955:49;6986:17;6955:9;;:30;;;;;;:49;;;;:::i;:::-;6943:9;:61;7019:43;;;;;;7044:17;;7019:43;:::i;:::-;;;;;;;;6672:397;:::o;34759:420::-;34826:7;34925:21;34963:5;-1:-1:-1;;;;;34949:30:91;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;34925:56;;;;35056:26;35085:27;35094:2;35098:13;35085:8;;;;;:27;;:::i;:::-;35129:2;:22;795:4:121;35129:43:91;;-1:-1:-1;;;34759:420:91;;;;:::o;388:103:120:-;458:9;453:35;;469:19;478:9;469:8;:19::i;4100:704:95:-;4170:85;4185:6;:8;;;4180:1;:13;;:32;;;;;1169:4;4197:6;:8;;;:15;;4180:32;509:3:97;4170:9:95;:85::i;:::-;4265;4280:6;:8;;;4275:1;:13;;:32;;;;;1169:4;4292:6;:8;;;:15;;509:3:97;4265:9:95;:85::i;:::-;4381:27;;;;;;;;4389:8;;;;4381:27;;4399:8;;;;4381:27;;;;4361:17;4435:18;4381:27;;4435:10;:18::i;:::-;4418:35;-1:-1:-1;4479:194:95;4502:36;:47;-1:-1:-1;4502:47:95;;;:98;;-1:-1:-1;4564:36:95;4553:47;;;4502:98;577:3:97;4479:9:95;:194::i;:::-;4684:113;4699:6;:13;;;4694:1;:18;;:58;;;;;1656:4;4716:6;:13;;;:36;;4694:58;817:3:97;4684:9:95;:113::i;:::-;4100:704;;;:::o;1415:374:23:-;1511:1;1496:5;:12;:16;1492:53;;;1528:7;;1492:53;1555:16;1574:5;1580:1;1574:8;;;;;;;;;;;;;;1555:27;;1597:9;1609:1;1597:13;;1592:191;1616:5;:12;1612:1;:16;1592:191;;;1649:15;1667:5;1673:1;1667:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;1689:51:23;-1:-1:-1;;;;;1698:18:23;;;;;;;4890:3:17;1689:8:23;:51::i;:::-;1765:7;-1:-1:-1;1630:3:23;;1592:191;;1415:374;;:::o;866:101:17:-;935:9;930:34;;946:18;954:9;946:7;:18::i;5083:194:14:-;5178:7;5204:66;5222:18;2155:2;5204:4;:17;;;;;;:66;;;;;:::i;:::-;5197:73;5083:194;-1:-1:-1;;;5083:194:14:o;948:166:29:-;1006:7;1025:37;1034:6;;;;4370:1:17;1025:8:29;:37::i;:::-;-1:-1:-1;1084:5:29;;;948:166::o;925:128:120:-;973:29;982:9;-1:-1:-1;;;973:8:120;:29::i;6472:164:95:-;6553:10;6581:48;6607:21;6623:2;:4;;;6607:2;:4;;;:15;;;;;;:21;;;;:::i;:::-;6597:4;;6581;;:21;;:15;;;;;;;:21;;:::i;:::-;:25;;;;;;:48;;;;:::i;1074:3172:17:-;-1:-1:-1;;;3588:3:17;3581:79;;;3799:66;3793:4;3786:80;3941:1;3935:4;3928:15;2210:2;2243:18;;;2336;;;2383;;;2215:4;2379:29;;;3057:2;3053:17;2195:18;;;;2288;;;;2284:29;;;;3040:1;3036:14;3025:26;;;;3021:50;;;;2999:73;;2994:3;2990:83;4008:4;4001:26;4234:3;;4224:14;6887:269:26;-1:-1:-1;7074:18:26;;7072:21;7056:37;;;;7133:15;;7111:38;;6887:269::o;1160:3379:120:-;-1:-1:-1;;;1223:18:120;3874:79;;;4092:66;4086:4;4079:80;4234:1;4228:4;4221:15;2362:2;2395:18;;;2440;;;2367:4;2436:29;;;3238:1;3329:14;2347:18;;;;3318:26;;;;2488:18;;;;2535;;;2531:29;;3350:2;3346:17;3314:50;3228:4;3234:18;;;;;;3224:29;3220:2;3216:38;3293:72;;;;3288:3;3284:82;4301:4;4294:26;1252:14;;;;;4527:3;;4517:14;1970:222:123;2033:6;2068:5;;;2089:6;;;:26;;;2114:1;2109;2099:7;:11;;;;;;:16;2089:26;2083:71;;2118:36;2127:5;4467:1:17;2118:8:123;:36::i;:::-;838:4;2172:13;;;;-1:-1:-1;;;1970:222:123:o;1137:266::-;1193:6;1295:5;;;1316:6;;;;:23;;1338:1;1334;:5;1316:23;;;1330:1;1325;:6;;1316:23;1310:68;;1342:36;1351:5;;1342:8;:36::i;969:31087:96:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;969:31087:96;;;-1:-1:-1;969:31087:96;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:179:124;95:13;;-1:-1:-1;;;;;137:31:124;;127:42;;117:2;;183:1;180;173:12;198:505;;307:3;300:4;292:6;288:17;284:27;274:2;;329:5;322;315:20;274:2;356:13;;-1:-1:-1;381:26:124;;378:2;;;410:9;378:2;445:54;493:4;-1:-1:-1;;487:2:124;468:13;;464:27;460:38;445:54;:::i;:::-;524:2;515:7;508:19;570:3;563:4;558:2;550:6;546:15;542:26;539:35;536:2;;;591:5;584;577:20;536:2;608:64;669:2;662:4;653:7;649:18;642:4;634:6;630:17;608:64;:::i;:::-;690:7;264:439;-1:-1:-1;;;;264:439:124:o;708:864::-;;826:4;814:9;809:3;805:19;801:30;798:2;;;848:5;841;834:20;798:2;885;879:9;927:4;915:17;;983:22;;;-1:-1:-1;947:34:124;;944:62;941:2;;;1009:9;941:2;1040:10;1036:2;1029:22;;1069:6;1060:15;;1105:9;1099:16;1160:7;1153:15;1146:23;1137:7;1134:36;1124:2;;1184:1;1181;1174:12;1124:2;1197:23;;1265:2;1250:18;;1244:25;-1:-1:-1;;;;;1300:33:124;;1288:46;;1278:2;;1348:1;1345;1338:12;1278:2;1380;1368:15;;1361:32;1438:2;1423:18;;1417:25;-1:-1:-1;;;;;1473:33:124;;1461:46;;1451:2;;1521:1;1518;1511:12;1451:2;1553;1541:15;;;;1534:32;788:784;;-1:-1:-1;;788:784:124:o;1577:865::-;;1699:6;1687:9;1682:3;1678:19;1674:32;1671:2;;;1723:5;1716;1709:20;1671:2;1760;1754:9;1802:4;1790:17;;1858:22;;;-1:-1:-1;1822:34:124;;1819:62;1816:2;;;1884:9;1816:2;1911;1904:22;1944:6;-1:-1:-1;1944:6:124;1974:55;2025:3;2014:9;1974:55;:::i;:::-;1966:6;1959:71;2065:64;2125:3;2120:2;2109:9;2105:18;2065:64;:::i;:::-;2058:4;2050:6;2046:17;2039:91;2184:3;2173:9;2169:19;2163:26;2158:2;2150:6;2146:15;2139:51;2246:3;2235:9;2231:19;2225:26;2218:4;2210:6;2206:17;2199:53;2307:3;2296:9;2292:19;2286:26;2280:3;2272:6;2268:16;2261:52;2368:4;2357:9;2353:20;2347:27;2341:3;2333:6;2329:16;2322:53;2430:3;2419:9;2415:19;2409:26;2403:3;2395:6;2391:16;2384:52;;1661:781;;;;:::o;2447:1148::-;;2551:6;2594:2;2582:9;2577:3;2573:19;2569:28;2566:2;;;2614:5;2607;2600:20;2566:2;2640:18;2655:2;2640:18;:::i;:::-;2631:27;;;2681:42;2713:9;2681:42;:::i;:::-;2667:57;;2768:2;2753:18;;2747:25;-1:-1:-1;2821:14:124;;;2818:2;;;2848:1;2845;2838:12;2818:2;2884:59;2939:3;2930:6;2919:9;2915:22;2884:59;:::i;:::-;2879:2;2872:5;2868:14;2861:83;2990:2;2979:9;2975:18;2969:25;2953:41;;3019:2;3009:8;3006:16;3003:2;;;3035:1;3032;3025:12;3003:2;;3071:61;3128:3;3117:8;3106:9;3102:24;3071:61;:::i;:::-;3066:2;3059:5;3055:14;3048:85;;3165:51;3212:2;3201:9;3197:18;3165:51;:::i;:::-;3160:2;3153:5;3149:14;3142:75;3250:52;3297:3;3286:9;3282:19;3250:52;:::i;:::-;3244:3;3237:5;3233:15;3226:77;3357:3;3346:9;3342:19;3336:26;3330:3;3323:5;3319:15;3312:51;3417:3;3406:9;3402:19;3396:26;3390:3;3383:5;3379:15;3372:51;3477:3;3466:9;3462:19;3456:26;3450:3;3443:5;3439:15;3432:51;3502:3;3537:51;3584:2;3573:9;3569:18;3537:51;:::i;:::-;3521:14;;;3514:75;3525:5;2531:1064;-1:-1:-1;;2531:1064:124:o;3600:649::-;;3715:4;3703:9;3698:3;3694:19;3690:30;3687:2;;;3737:5;3730;3723:20;3687:2;3774;3768:9;3816:4;3804:17;;3872:22;;;-1:-1:-1;3836:34:124;;3833:62;3830:2;;;3898:9;3830:2;3929:10;3925:2;3918:22;;3958:6;3949:15;;3994:9;3988:16;3980:6;3973:32;4059:2;4048:9;4044:18;4038:25;4033:2;4025:6;4021:15;4014:50;4118:2;4107:9;4103:18;4097:25;4092:2;4084:6;4080:15;4073:50;4177:2;4166:9;4162:18;4156:25;4151:2;4143:6;4139:15;4132:50;4237:3;4226:9;4222:19;4216:26;4210:3;4202:6;4198:16;4191:52;;3677:572;;;;:::o;4254:475::-;;4370:4;4358:9;4353:3;4349:19;4345:30;4342:2;;;4392:5;4385;4378:20;4342:2;4429:4;4423:11;;;4461:17;;4529:22;;;-1:-1:-1;4493:34:124;;4490:62;4487:2;;;4555:9;4487:2;4582:4;4575:24;4647:16;;4632:32;;4718:2;4703:18;;;4697:25;4680:15;;;4673:50;;;;-1:-1:-1;4617:6:124;4332:397;-1:-1:-1;4332:397:124:o;4734:194::-;;4857:2;4845:9;4836:7;4832:23;4828:32;4825:2;;;4878:6;4870;4863:22;4825:2;-1:-1:-1;4906:16:124;;4815:113;-1:-1:-1;4815:113:124:o;4933:1379::-;;;5102:2;5090:9;5081:7;5077:23;5073:32;5070:2;;;5123:6;5115;5108:22;5070:2;5155:16;;-1:-1:-1;5220:14:124;;;5217:2;;;5252:6;5244;5237:22;5217:2;5280:22;;;;5336:6;5318:16;;;5314:29;5311:2;;;5361:6;5353;5346:22;5311:2;5392:22;5407:6;5392:22;:::i;:::-;5445:2;5439:9;5473:2;5463:8;5460:16;5457:2;;;5494:6;5486;5479:22;5457:2;5526:73;5591:7;5580:8;5576:2;5572:17;5526:73;:::i;:::-;5519:5;5512:88;;5632:60;5684:7;5679:2;5675;5671:11;5632:60;:::i;:::-;5627:2;5620:5;5616:14;5609:84;5725:68;5785:7;5779:3;5775:2;5771:12;5725:68;:::i;:::-;5720:2;5713:5;5709:14;5702:92;5828:45;5868:3;5864:2;5860:12;5828:45;:::i;:::-;5821:4;5814:5;5810:16;5803:71;5908:45;5948:3;5944:2;5940:12;5908:45;:::i;:::-;5901:4;5894:5;5890:16;5883:71;5988:45;6028:3;6024:2;6020:12;5988:45;:::i;:::-;5981:4;5974:5;5970:16;5963:71;6067:64;6123:7;6117:3;6113:2;6109:12;6067:64;:::i;:::-;6061:3;6054:5;6050:15;6043:89;6166:45;6206:3;6202:2;6198:12;6166:45;:::i;:::-;6159:4;6148:16;;6141:71;6152:5;-1:-1:-1;6255:51:124;;-1:-1:-1;;6302:2:124;6287:18;;6255:51;:::i;:::-;6245:61;;5060:1252;;;;;:::o;6317:293::-;;6438:2;6426:9;6417:7;6413:23;6409:32;6406:2;;;6459:6;6451;6444:22;6406:2;6496:9;6490:16;6546:4;6539:5;6535:16;6528:5;6525:27;6515:2;;6571:6;6563;6556:22;6615:151;6691:12;;6679:25;;6753:4;6742:16;;;6736:23;6720:14;;6713:47;6669:97::o;6771:187::-;6936:14;;6929:22;6911:41;;6899:2;6884:18;;6866:92::o;6963:1296::-;;7275:2;7264:9;7260:18;7305:6;7294:9;7287:25;7331:2;7369;7364;7353:9;7349:18;7342:30;7392:6;7427;7421:13;7458:6;7450;7443:22;7496:3;7485:9;7481:19;7474:26;;7535:2;7527:6;7523:15;7509:29;;7556:4;7569:195;7583:6;7580:1;7577:13;7569:195;;;7648:13;;-1:-1:-1;;;;;7644:39:124;7632:52;;7739:15;;;;7704:12;;;;-1:-1:-1;7598:9:124;7569:195;;;-1:-1:-1;;7800:19:124;;;7795:2;7780:18;;7773:47;7870:13;;7892:21;;;7931:12;;;;-1:-1:-1;7968:15:124;;;;8003:4;8016:215;8032:8;8027:3;8024:17;8016:215;;;8105:15;;-1:-1:-1;;;;;8101:41:124;8087:56;;8165:14;;;;8204:17;;;;-1:-1:-1;8051:11:124;8016:215;;;-1:-1:-1;8248:5:124;;7236:1023;-1:-1:-1;;;;;;;;7236:1023:124:o;8264:246::-;8420:2;8405:18;;8453:1;8442:13;;8432:2;;8459:9;8432:2;8479:25;;;8387:123;:::o;8515:383::-;;8664:2;8653:9;8646:21;8696:6;8690:13;8739:6;8734:2;8723:9;8719:18;8712:34;8755:66;8814:6;8809:2;8798:9;8794:18;8789:2;8781:6;8777:15;8755:66;:::i;:::-;8882:2;8861:15;-1:-1:-1;;8857:29:124;8842:45;;;;8889:2;8838:54;;8636:262;-1:-1:-1;;8636:262:124:o;8903:1090::-;;9183:3;9172:9;9168:19;9160:27;;9220:6;9214:13;9203:9;9196:32;9284:4;9276:6;9272:17;9266:24;9259:4;9248:9;9244:20;9237:54;9347:4;9339:6;9335:17;9329:24;9322:4;9311:9;9307:20;9300:54;9410:4;9402:6;9398:17;9392:24;9385:4;9374:9;9370:20;9363:54;9473:4;9465:6;9461:17;9455:24;9448:4;9437:9;9433:20;9426:54;9489:64;9548:3;9537:9;9533:19;9524:6;9518:13;9489:64;:::i;:::-;9600:4;9592:6;9588:17;9582:24;9615:63;9673:3;9662:9;9658:19;9644:12;9615:63;:::i;:::-;;9733:4;9725:6;9721:17;9715:24;9709:3;9698:9;9694:19;9687:53;9795:4;9787:6;9783:17;9777:24;9771:3;9760:9;9756:19;9749:53;9857:4;9849:6;9845:17;9839:24;9833:3;9822:9;9818:19;9811:53;9919:3;9911:6;9907:16;9901:23;9895:3;9884:9;9880:19;9873:52;9980:4;9972:6;9968:17;9962:24;9956:3;9945:9;9941:19;9934:53;9150:843;;;;;:::o;9998:177::-;10144:25;;;10132:2;10117:18;;10099:76::o;10180:242::-;10250:2;10244:9;10280:17;;;10348:22;;;-1:-1:-1;10312:34:124;;10309:62;10306:2;;;10374:9;10306:2;10401;10394:22;10224:198;;-1:-1:-1;10224:198:124:o;10427:258::-;10499:1;10509:113;10523:6;10520:1;10517:13;10509:113;;;10599:11;;;10593:18;10580:11;;;10573:39;10545:2;10538:10;10509:113;;;10640:6;10637:1;10634:13;10631:2;;;10675:1;10666:6;10661:3;10657:16;10650:27;10631:2;;10480:205;;;:::o;:::-;969:31087:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/eclp/GyroECLPPool.sol", "type": "contract", "deployment": {"address": "0x2191Df821C198600499aA1f0031b1a7514D7A7D9", "chainid": "1", "blockHeight": 18712987}}