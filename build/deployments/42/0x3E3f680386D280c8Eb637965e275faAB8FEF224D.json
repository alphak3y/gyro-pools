{"abi": [{"inputs": [{"components": [{"components": [{"internalType": "contract IVault", "name": "vault", "type": "address"}, {"internalType": "string", "name": "name", "type": "string"}, {"internalType": "string", "name": "symbol", "type": "string"}, {"internalType": "contract IERC20", "name": "token0", "type": "address"}, {"internalType": "contract IERC20", "name": "token1", "type": "address"}, {"internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}, {"internalType": "uint256", "name": "pauseWindowDuration", "type": "uint256"}, {"internalType": "uint256", "name": "bufferPeriodDuration", "type": "uint256"}, {"internalType": "bool", "name": "oracleEnabled", "type": "bool"}, {"internalType": "address", "name": "owner", "type": "address"}], "internalType": "struct ExtensibleWeightedPool2Tokens.NewPoolParams", "name": "baseParams", "type": "tuple"}, {"internalType": "uint256", "name": "sqrtAlpha", "type": "uint256"}, {"internalType": "uint256", "name": "sqrtBeta", "type": "uint256"}], "internalType": "struct GyroTwoPool.GyroParams", "name": "params", "type": "tuple"}, {"internalType": "address", "name": "configAddress", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "owner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "spender", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Approval", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bool", "name": "enabled", "type": "bool"}], "name": "OracleEnabledChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bool", "name": "paused", "type": "bool"}], "name": "PausedStateChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}], "name": "SwapFeePercentageChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "from", "type": "address"}, {"indexed": true, "internalType": "address", "name": "to", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Transfer", "type": "event"}, {"inputs": [], "name": "DOMAIN_SEPARATOR", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "spender", "type": "address"}], "name": "allowance", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "approve", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "balanceOf", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "balanceTokenIn", "type": "uint256"}, {"internalType": "uint256", "name": "balanceTokenOut", "type": "uint256"}, {"internalType": "bool", "name": "tokenInIsToken0", "type": "bool"}], "name": "calculateCurrentValues", "outputs": [{"internalType": "uint256", "name": "currentInvariant", "type": "uint256"}, {"internalType": "uint256", "name": "virtualParamIn", "type": "uint256"}, {"internalType": "uint256", "name": "virtualParamOut", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "decimals", "outputs": [{"internalType": "uint8", "name": "", "type": "uint8"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "decreaseAllowance", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "startIndex", "type": "uint256"}, {"internalType": "uint256", "name": "endIndex", "type": "uint256"}], "name": "dirtyUninitializedOracleSamples", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "enableOracle", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes4", "name": "selector", "type": "bytes4"}], "name": "getActionId", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getAuthorizer", "outputs": [{"internalType": "contract IAuthorizer", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getInvariant", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getLargestSafeQueryWindow", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "pure", "type": "function"}, {"inputs": [], "name": "getLastInvariant", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "enum IPriceOracle.Variable", "name": "variable", "type": "uint8"}], "name": "getLatest", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getMiscData", "outputs": [{"internalType": "int256", "name": "logInvariant", "type": "int256"}, {"internalType": "int256", "name": "logTotalSupply", "type": "int256"}, {"internalType": "uint256", "name": "oracleSampleCreationTimestamp", "type": "uint256"}, {"internalType": "uint256", "name": "oracleIndex", "type": "uint256"}, {"internalType": "bool", "name": "oracleEnabled", "type": "bool"}, {"internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getNormalizedWeights", "outputs": [{"internalType": "uint256[]", "name": "", "type": "uint256[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getOwner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"components": [{"internalType": "enum IPriceOracle.Variable", "name": "variable", "type": "uint8"}, {"internalType": "uint256", "name": "ago", "type": "uint256"}], "internalType": "struct IPriceOracle.OracleAccumulatorQuery[]", "name": "queries", "type": "tuple[]"}], "name": "getPastAccumulators", "outputs": [{"internalType": "int256[]", "name": "results", "type": "int256[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getPausedState", "outputs": [{"internalType": "bool", "name": "paused", "type": "bool"}, {"internalType": "uint256", "name": "pauseWindowEndTime", "type": "uint256"}, {"internalType": "uint256", "name": "bufferPeriodEndTime", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getPoolId", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getRate", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "index", "type": "uint256"}], "name": "getSample", "outputs": [{"internalType": "int256", "name": "logPairPrice", "type": "int256"}, {"internalType": "int256", "name": "accLogPairPrice", "type": "int256"}, {"internalType": "int256", "name": "logBptPrice", "type": "int256"}, {"internalType": "int256", "name": "accLogBptPrice", "type": "int256"}, {"internalType": "int256", "name": "logInvariant", "type": "int256"}, {"internalType": "int256", "name": "accLogInvariant", "type": "int256"}, {"internalType": "uint256", "name": "timestamp", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getSqrtParameters", "outputs": [{"internalType": "uint256[2]", "name": "", "type": "uint256[2]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getSwapFeePercentage", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"components": [{"internalType": "enum IPriceOracle.Variable", "name": "variable", "type": "uint8"}, {"internalType": "uint256", "name": "secs", "type": "uint256"}, {"internalType": "uint256", "name": "ago", "type": "uint256"}], "internalType": "struct IPriceOracle.OracleAverageQuery[]", "name": "queries", "type": "tuple[]"}], "name": "getTimeWeightedAverage", "outputs": [{"internalType": "uint256[]", "name": "results", "type": "uint256[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getTotalSamples", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "pure", "type": "function"}, {"inputs": [], "name": "getVault", "outputs": [{"internalType": "contract IVault", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getVirtualParameters", "outputs": [{"internalType": "uint256[]", "name": "virtualParams", "type": "uint256[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "gyroConfig", "outputs": [{"internalType": "contract IGyroConfig", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "addedValue", "type": "uint256"}], "name": "increaseAllowance", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "name", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}], "name": "nonces", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "onExitPool", "outputs": [{"internalType": "uint256[]", "name": "", "type": "uint256[]"}, {"internalType": "uint256[]", "name": "", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "onJoinPool", "outputs": [{"internalType": "uint256[]", "name": "amountsIn", "type": "uint256[]"}, {"internalType": "uint256[]", "name": "dueProtocolFeeAmounts", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"components": [{"internalType": "enum IVault.SwapKind", "name": "kind", "type": "uint8"}, {"internalType": "contract IERC20", "name": "tokenIn", "type": "address"}, {"internalType": "contract IERC20", "name": "tokenOut", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}, {"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "address", "name": "from", "type": "address"}, {"internalType": "address", "name": "to", "type": "address"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "internalType": "struct IPoolSwapStructs.SwapRequest", "name": "request", "type": "tuple"}, {"internalType": "uint256", "name": "balanceTokenIn", "type": "uint256"}, {"internalType": "uint256", "name": "balanceTokenOut", "type": "uint256"}], "name": "onSwap", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "value", "type": "uint256"}, {"internalType": "uint256", "name": "deadline", "type": "uint256"}, {"internalType": "uint8", "name": "v", "type": "uint8"}, {"internalType": "bytes32", "name": "r", "type": "bytes32"}, {"internalType": "bytes32", "name": "s", "type": "bytes32"}], "name": "permit", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "queryExit", "outputs": [{"internalType": "uint256", "name": "bptIn", "type": "uint256"}, {"internalType": "uint256[]", "name": "amountsOut", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "queryJoin", "outputs": [{"internalType": "uint256", "name": "bptOut", "type": "uint256"}, {"internalType": "uint256[]", "name": "amountsIn", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bool", "name": "paused", "type": "bool"}], "name": "setPaused", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}], "name": "setSwapFeePercentage", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "symbol", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "totalSupply", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transfer", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transferFrom", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"13": "interfaces/IGyroConfig.sol", "14": "libraries/GyroConfigKeys.sol", "15": "libraries/GyroPoolMath.sol", "18": "node_modules/@balancer-labs/v2-pool-utils/contracts/BalancerPoolToken.sol", "21": "node_modules/@balancer-labs/v2-pool-utils/contracts/BasePoolAuthorization.sol", "24": "node_modules/@balancer-labs/v2-pool-utils/contracts/interfaces/IPoolPriceOracle.sol", "25": "node_modules/@balancer-labs/v2-pool-utils/contracts/interfaces/IPriceOracle.sol", "26": "node_modules/@balancer-labs/v2-pool-utils/contracts/oracle/Buffer.sol", "27": "node_modules/@balancer-labs/v2-pool-utils/contracts/oracle/PoolPriceOracle.sol", "28": "node_modules/@balancer-labs/v2-pool-utils/contracts/oracle/QueryProcessor.sol", "29": "node_modules/@balancer-labs/v2-pool-utils/contracts/oracle/Samples.sol", "31": "node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedMath.sol", "33": "node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol", "34": "node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol", "35": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/Authentication.sol", "36": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol", "39": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol", "40": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/ISignaturesValidator.sol", "41": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol", "42": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/InputHelpers.sol", "43": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/LogCompression.sol", "44": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/TemporarilyPausable.sol", "45": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/WordCodec.sol", "46": "node_modules/@balancer-labs/v2-solidity-utils/contracts/math/FixedPoint.sol", "47": "node_modules/@balancer-labs/v2-solidity-utils/contracts/math/LogExpMath.sol", "48": "node_modules/@balancer-labs/v2-solidity-utils/contracts/math/Math.sol", "49": "node_modules/@balancer-labs/v2-solidity-utils/contracts/misc/IWETH.sol", "5": "contracts/cpmmv-2/ExtensibleWeightedPool2Tokens.sol", "50": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/EIP712.sol", "51": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ERC20.sol", "52": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ERC20Permit.sol", "53": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol", "54": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20Permit.sol", "55": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/SafeMath.sol", "56": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IAsset.sol", "57": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IAuthorizer.sol", "58": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IBasePool.sol", "59": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IFlashLoanRecipient.sol", "6": "contracts/cpmmv-2/Gyro2PoolErrors.sol", "60": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IMinimalSwapInfoPool.sol", "61": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IPoolSwapStructs.sol", "62": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IProtocolFeesCollector.sol", "63": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IVault.sol", "7": "contracts/cpmmv-2/GyroTwoMath.sol", "8": "contracts/cpmmv-2/GyroTwoOracleMath.sol", "9": "contracts/cpmmv-2/GyroTwoPool.sol"}, "ast": {"absolutePath": "contracts/cpmmv-2/GyroTwoPool.sol", "exportedSymbols": {"GyroTwoPool": [8667]}, "id": 8668, "license": "GPL-3.0-or-later", "nodeType": "SourceUnit", "nodes": [{"id": 7224, "literals": ["solidity", "^", "0.7", ".0"], "nodeType": "PragmaDirective", "src": "688:23:9"}, {"id": 7225, "literals": ["experimental", "ABIEncoderV2"], "nodeType": "PragmaDirective", "src": "712:33:9"}, {"absolutePath": "node_modules/@balancer-labs/v2-solidity-utils/contracts/math/FixedPoint.sol", "file": "@balancer-labs/v2-solidity-utils/contracts/math/FixedPoint.sol", "id": 7226, "nodeType": "ImportDirective", "scope": 8668, "sourceUnit": 11389, "src": "747:72:9", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol", "file": "@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol", "id": 7227, "nodeType": "ImportDirective", "scope": 8668, "sourceUnit": 12571, "src": "821:83:9", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol", "file": "@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol", "id": 7228, "nodeType": "ImportDirective", "scope": 8668, "sourceUnit": 12361, "src": "905:83:9", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/GyroConfigKeys.sol", "file": "../../libraries/GyroConfigKeys.sol", "id": 7229, "nodeType": "ImportDirective", "scope": 8668, "sourceUnit": 12146, "src": "990:44:9", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/IGyroConfig.sol", "file": "../../interfaces/IGyroConfig.sol", "id": 7230, "nodeType": "ImportDirective", "scope": 8668, "sourceUnit": 12131, "src": "1035:42:9", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/GyroPoolMath.sol", "file": "../../libraries/GyroPoolMath.sol", "id": 7231, "nodeType": "ImportDirective", "scope": 8668, "sourceUnit": 9925, "src": "1078:42:9", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/cpmmv-2/ExtensibleWeightedPool2Tokens.sol", "file": "./ExtensibleWeightedPool2Tokens.sol", "id": 7232, "nodeType": "ImportDirective", "scope": 8668, "sourceUnit": 7223, "src": "1122:45:9", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/cpmmv-2/Gyro2PoolErrors.sol", "file": "./Gyro2PoolErrors.sol", "id": 7233, "nodeType": "ImportDirective", "scope": 8668, "sourceUnit": 16444, "src": "1168:31:9", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/cpmmv-2/GyroTwoMath.sol", "file": "./GyroTwoMath.sol", "id": 7234, "nodeType": "ImportDirective", "scope": 8668, "sourceUnit": 16919, "src": "1200:27:9", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/cpmmv-2/GyroTwoOracleMath.sol", "file": "./GyroTwoOracleMath.sol", "id": 7235, "nodeType": "ImportDirective", "scope": 8668, "sourceUnit": 17041, "src": "1228:33:9", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 7236, "name": "ExtensibleWeightedPool2Tokens", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 7222, "src": "1287:29:9", "typeDescriptions": {"typeIdentifier": "t_contract$_ExtensibleWeightedPool2Tokens_$7222", "typeString": "contract ExtensibleWeightedPool2Tokens"}}, "id": 7237, "nodeType": "InheritanceSpecifier", "src": "1287:29:9"}, {"baseName": {"id": 7238, "name": "GyroTwoOracleMath", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 17040, "src": "1318:17:9", "typeDescriptions": {"typeIdentifier": "t_contract$_GyroTwoOracleMath_$17040", "typeString": "contract GyroTwoOracleMath"}}, "id": 7239, "nodeType": "InheritanceSpecifier", "src": "1318:17:9"}], "contractDependencies": [7222, 12782, 14055, 14520, 15937, 16415, 16434, 17040, 18762, 22279, 22425, 22502, 22546, 22601, 23468, 24711, 24747, 24772, 24783], "contractKind": "contract", "fullyImplemented": true, "id": 8667, "linearizedBaseContracts": [8667, 17040, 7222, 14520, 22601, 22546, 15937, 23468, 12782, 22279, 24711, 24747, 16415, 18762, 14055, 22502, 24783, 16434, 22425, 24772], "name": "GyroTwoPool", "nodeType": "ContractDefinition", "nodes": [{"id": 7242, "libraryName": {"id": 7240, "name": "FixedPoint", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 11388, "src": "1348:10:9", "typeDescriptions": {"typeIdentifier": "t_contract$_FixedPoint_$11388", "typeString": "library FixedPoint"}}, "nodeType": "UsingForDirective", "src": "1342:29:9", "typeName": {"id": 7241, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1363:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"id": 7245, "libraryName": {"id": 7243, "name": "WeightedPoolUserDataHelpers", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 12570, "src": "1382:27:9", "typeDescriptions": {"typeIdentifier": "t_contract$_WeightedPoolUserDataHelpers_$12570", "typeString": "library WeightedPoolUserDataHelpers"}}, "nodeType": "UsingForDirective", "src": "1376:44:9", "typeName": {"id": 7244, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "1414:5:9", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}}, {"id": 7248, "libraryName": {"id": 7246, "name": "WeightedPool2TokensMiscData", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 12360, "src": "1431:27:9", "typeDescriptions": {"typeIdentifier": "t_contract$_WeightedPool2TokensMiscData_$12360", "typeString": "library WeightedPool2TokensMiscData"}}, "nodeType": "UsingForDirective", "src": "1425:46:9", "typeName": {"id": 7247, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1463:7:9", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}}, {"constant": false, "id": 7250, "mutability": "immutable", "name": "_sqrtAlpha", "nodeType": "VariableDeclaration", "scope": 8667, "src": "1477:36:9", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7249, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1477:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "private"}, {"constant": false, "id": 7252, "mutability": "immutable", "name": "_sqrtBeta", "nodeType": "VariableDeclaration", "scope": 8667, "src": "1519:35:9", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7251, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1519:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "private"}, {"constant": false, "functionSelector": "44bbdb55", "id": 7254, "mutability": "mutable", "name": "gyroConfig", "nodeType": "VariableDeclaration", "scope": 8667, "src": "1561:29:9", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$12130", "typeString": "contract IGyroConfig"}, "typeName": {"id": 7253, "name": "IGyroConfig", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 12130, "src": "1561:11:9", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$12130", "typeString": "contract IGyroConfig"}}, "visibility": "public"}, {"canonicalName": "GyroTwoPool.GyroParams", "id": 7261, "members": [{"constant": false, "id": 7256, "mutability": "mutable", "name": "baseParams", "nodeType": "VariableDeclaration", "scope": 7261, "src": "1625:24:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$4997_storage_ptr", "typeString": "struct ExtensibleWeightedPool2Tokens.NewPoolParams"}, "typeName": {"id": 7255, "name": "NewPoolParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 4997, "src": "1625:13:9", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$4997_storage_ptr", "typeString": "struct ExtensibleWeightedPool2Tokens.NewPoolParams"}}, "visibility": "internal"}, {"constant": false, "id": 7258, "mutability": "mutable", "name": "sqrtAlpha", "nodeType": "VariableDeclaration", "scope": 7261, "src": "1659:17:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7257, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1659:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7260, "mutability": "mutable", "name": "sqrtBeta", "nodeType": "VariableDeclaration", "scope": 7261, "src": "1719:16:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7259, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1719:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "name": "GyroParams", "nodeType": "StructDefinition", "scope": 8667, "src": "1597:212:9", "visibility": "public"}, {"body": {"id": 7298, "nodeType": "Block", "src": "1925:222:9", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 7277, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 7273, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7263, "src": "1944:6:9", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$7261_memory_ptr", "typeString": "struct GyroTwoPool.GyroParams memory"}}, "id": 7274, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "sqrtAlpha", "nodeType": "MemberAccess", "referencedDeclaration": 7258, "src": "1944:16:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 7275, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7263, "src": "1963:6:9", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$7261_memory_ptr", "typeString": "struct GyroTwoPool.GyroParams memory"}}, "id": 7276, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "sqrtBeta", "nodeType": "MemberAccess", "referencedDeclaration": 7260, "src": "1963:15:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1944:34:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 7278, "name": "Gyro2PoolErrors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16443, "src": "1980:15:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2PoolErrors_$16443_$", "typeString": "type(library Gyro2PoolErrors)"}}, "id": 7279, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "SQRT_PARAMS_WRONG", "nodeType": "MemberAccess", "referencedDeclaration": 16439, "src": "1980:33:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 7272, "name": "_require", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18279, "src": "1935:8:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 7280, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1935:79:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 7281, "nodeType": "ExpressionStatement", "src": "1935:79:9"}, {"expression": {"id": 7285, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 7282, "name": "_sqrtAlpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7250, "src": "2024:10:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 7283, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7263, "src": "2037:6:9", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$7261_memory_ptr", "typeString": "struct GyroTwoPool.GyroParams memory"}}, "id": 7284, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "sqrtAlpha", "nodeType": "MemberAccess", "referencedDeclaration": 7258, "src": "2037:16:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2024:29:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7286, "nodeType": "ExpressionStatement", "src": "2024:29:9"}, {"expression": {"id": 7290, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 7287, "name": "_sqrtBeta", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7252, "src": "2063:9:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 7288, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7263, "src": "2075:6:9", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$7261_memory_ptr", "typeString": "struct GyroTwoPool.GyroParams memory"}}, "id": 7289, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "sqrtBeta", "nodeType": "MemberAccess", "referencedDeclaration": 7260, "src": "2075:15:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2063:27:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7291, "nodeType": "ExpressionStatement", "src": "2063:27:9"}, {"expression": {"id": 7296, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 7292, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7254, "src": "2101:10:9", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$12130", "typeString": "contract IGyroConfig"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 7294, "name": "configAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7265, "src": "2126:13:9", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 7293, "name": "IGyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12130, "src": "2114:11:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IGyroConfig_$12130_$", "typeString": "type(contract IGyroConfig)"}}, "id": 7295, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2114:26:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$12130", "typeString": "contract IGyroConfig"}}, "src": "2101:39:9", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$12130", "typeString": "contract IGyroConfig"}}, "id": 7297, "nodeType": "ExpressionStatement", "src": "2101:39:9"}]}, "id": 7299, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"expression": {"id": 7268, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7263, "src": "1906:6:9", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$7261_memory_ptr", "typeString": "struct GyroTwoPool.GyroParams memory"}}, "id": 7269, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "baseParams", "nodeType": "MemberAccess", "referencedDeclaration": 7256, "src": "1906:17:9", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$4997_memory_ptr", "typeString": "struct ExtensibleWeightedPool2Tokens.NewPoolParams memory"}}], "id": 7270, "modifierName": {"id": 7267, "name": "ExtensibleWeightedPool2Tokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7222, "src": "1876:29:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ExtensibleWeightedPool2Tokens_$7222_$", "typeString": "type(contract ExtensibleWeightedPool2Tokens)"}}, "nodeType": "ModifierInvocation", "src": "1876:48:9"}], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 7266, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7263, "mutability": "mutable", "name": "params", "nodeType": "VariableDeclaration", "scope": 7299, "src": "1827:24:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$7261_memory_ptr", "typeString": "struct GyroTwoPool.GyroParams"}, "typeName": {"id": 7262, "name": "GyroParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 7261, "src": "1827:10:9", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$7261_storage_ptr", "typeString": "struct GyroTwoPool.GyroParams"}}, "visibility": "internal"}, {"constant": false, "id": 7265, "mutability": "mutable", "name": "configAddress", "nodeType": "VariableDeclaration", "scope": 7299, "src": "1853:21:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 7264, "name": "address", "nodeType": "ElementaryTypeName", "src": "1853:7:9", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1826:49:9"}, "returnParameters": {"id": 7271, "nodeType": "ParameterList", "parameters": [], "src": "1925:0:9"}, "scope": 8667, "src": "1815:332:9", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 7309, "nodeType": "Block", "src": "2330:41:9", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 7306, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [7336, 7349], "referencedDeclaration": 7336, "src": "2347:15:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function () view returns (uint256[2] memory)"}}, "id": 7307, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2347:17:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "functionReturnParameters": 7305, "id": 7308, "nodeType": "Return", "src": "2340:24:9"}]}, "functionSelector": "707dcd1e", "id": 7310, "implemented": true, "kind": "function", "modifiers": [], "name": "getSqrtParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 7300, "nodeType": "ParameterList", "parameters": [], "src": "2285:2:9"}, "returnParameters": {"id": 7305, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7304, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7310, "src": "2311:17:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 7301, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2311:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7303, "length": {"hexValue": "32", "id": 7302, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2319:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "2311:10:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "src": "2310:19:9"}, "scope": 8667, "src": "2259:112:9", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 7335, "nodeType": "Block", "src": "2472:150:9", "statements": [{"expression": {"id": 7323, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 7317, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7315, "src": "2482:17:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 7319, "indexExpression": {"hexValue": "30", "id": 7318, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2500:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "2482:20:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "74727565", "id": 7321, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "2521:4:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 7320, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [7336, 7349], "referencedDeclaration": 7349, "src": "2505:15:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 7322, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2505:21:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2482:44:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7324, "nodeType": "ExpressionStatement", "src": "2482:44:9"}, {"expression": {"id": 7331, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 7325, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7315, "src": "2536:17:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 7327, "indexExpression": {"hexValue": "31", "id": 7326, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2554:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "2536:20:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "66616c7365", "id": 7329, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "2575:5:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 7328, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [7336, 7349], "referencedDeclaration": 7349, "src": "2559:15:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 7330, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2559:22:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2536:45:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7332, "nodeType": "ExpressionStatement", "src": "2536:45:9"}, {"expression": {"id": 7333, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7315, "src": "2598:17:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "functionReturnParameters": 7316, "id": 7334, "nodeType": "Return", "src": "2591:24:9"}]}, "id": 7336, "implemented": true, "kind": "function", "modifiers": [], "name": "_sqrtParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 7311, "nodeType": "ParameterList", "parameters": [], "src": "2401:2:9"}, "returnParameters": {"id": 7316, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7315, "mutability": "mutable", "name": "virtualParameters", "nodeType": "VariableDeclaration", "scope": 7336, "src": "2435:35:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 7312, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2435:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7314, "length": {"hexValue": "32", "id": 7313, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2443:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "2435:10:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "src": "2434:37:9"}, "scope": 8667, "src": "2377:245:9", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"body": {"id": 7348, "nodeType": "Block", "src": "2710:59:9", "statements": [{"expression": {"condition": {"id": 7343, "name": "parameter0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7338, "src": "2727:10:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 7345, "name": "_sqrtBeta", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7252, "src": "2753:9:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7346, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "2727:35:9", "trueExpression": {"id": 7344, "name": "_sqrtAlpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7250, "src": "2740:10:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 7342, "id": 7347, "nodeType": "Return", "src": "2720:42:9"}]}, "id": 7349, "implemented": true, "kind": "function", "modifiers": [], "name": "_sqrtParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 7339, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7338, "mutability": "mutable", "name": "parameter0", "nodeType": "VariableDeclaration", "scope": 7349, "src": "2653:15:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 7337, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2653:4:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "2652:17:9"}, "returnParameters": {"id": 7342, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7341, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7349, "src": "2701:7:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7340, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2701:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2700:9:9"}, "scope": 8667, "src": "2628:141:9", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"body": {"id": 7390, "nodeType": "Block", "src": "2964:347:9", "statements": [{"assignments": [null, 7360, null], "declarations": [null, {"constant": false, "id": 7360, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 7390, "src": "2977:25:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7358, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2977:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7359, "nodeType": "ArrayTypeName", "src": "2977:9:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, null], "id": 7367, "initialValue": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 7364, "name": "getPoolId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5132, "src": "3033:9:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$", "typeString": "function () view returns (bytes32)"}}, "id": 7365, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3033:11:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 7361, "name": "getVault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12611, "src": "3008:8:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IVault_$17648_$", "typeString": "function () view returns (contract IVault)"}}, "id": 7362, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3008:10:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IVault_$17648", "typeString": "contract IVault"}}, "id": 7363, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getPoolTokens", "nodeType": "MemberAccess", "referencedDeclaration": 17404, "src": "3008:24:9", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_array$_t_contract$_IERC20_$18762_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$", "typeString": "function (bytes32) view external returns (contract IERC20[] memory,uint256[] memory,uint256)"}}, "id": 7366, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3008:37:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_array$_t_contract$_IERC20_$18762_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$", "typeString": "tuple(contract IERC20[] memory,uint256[] memory,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "2974:71:9"}, {"expression": {"arguments": [{"id": 7369, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7360, "src": "3189:8:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}], "id": 7368, "name": "_upscaleArray", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7004, "src": "3175:13:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$", "typeString": "function (uint256[] memory) view"}}, "id": 7370, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3175:23:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 7371, "nodeType": "ExpressionStatement", "src": "3175:23:9"}, {"expression": {"id": 7388, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [null, {"baseExpression": {"id": 7372, "name": "virtualParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7354, "src": "3211:13:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7374, "indexExpression": {"hexValue": "30", "id": 7373, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3225:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "3211:16:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 7375, "name": "virtualParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7354, "src": "3229:13:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7377, "indexExpression": {"hexValue": "31", "id": 7376, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3243:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "3229:16:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 7378, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "3208:38:9", "typeDescriptions": {"typeIdentifier": "t_tuple$__$_t_uint256_$_t_uint256_$", "typeString": "tuple(,uint256,uint256)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"baseExpression": {"id": 7380, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7360, "src": "3273:8:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7382, "indexExpression": {"hexValue": "30", "id": 7381, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3282:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3273:11:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 7383, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7360, "src": "3286:8:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7385, "indexExpression": {"hexValue": "31", "id": 7384, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3295:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3286:11:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "74727565", "id": 7386, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3299:4:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 7379, "name": "_calculateCurrentValues", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7872, "src": "3249:23:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256,bool) view returns (uint256,uint256,uint256)"}}, "id": 7387, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3249:55:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256,uint256)"}}, "src": "3208:96:9", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 7389, "nodeType": "ExpressionStatement", "src": "3208:96:9"}]}, "documentation": {"id": 7350, "nodeType": "StructuredDocumentation", "src": "2775:97:9", "text": "@dev Returns virtual offsets a and b for reserves x and y respectively, as in (x+a)*(y+b)=L^2"}, "functionSelector": "8dd9f89d", "id": 7391, "implemented": true, "kind": "function", "modifiers": [], "name": "getVirtualParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 7351, "nodeType": "ParameterList", "parameters": [], "src": "2906:2:9"}, "returnParameters": {"id": 7355, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7354, "mutability": "mutable", "name": "virtualParams", "nodeType": "VariableDeclaration", "scope": 7391, "src": "2932:30:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7352, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2932:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7353, "nodeType": "ArrayTypeName", "src": "2932:9:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "2931:32:9"}, "scope": 8667, "src": "2877:434:9", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 7430, "nodeType": "Block", "src": "3501:208:9", "statements": [{"expression": {"id": 7414, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 7404, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7402, "src": "3511:17:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 7406, "indexExpression": {"hexValue": "30", "id": 7405, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3529:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "3511:20:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "74727565", "id": 7408, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3553:4:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, {"baseExpression": {"id": 7409, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7395, "src": "3559:10:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 7411, "indexExpression": {"hexValue": "31", "id": 7410, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3570:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3559:13:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7412, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7397, "src": "3574:9:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 7407, "name": "_virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7458, "src": "3534:18:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (bool,uint256,uint256) view returns (uint256)"}}, "id": 7413, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3534:50:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3511:73:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7415, "nodeType": "ExpressionStatement", "src": "3511:73:9"}, {"expression": {"id": 7426, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 7416, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7402, "src": "3594:17:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 7418, "indexExpression": {"hexValue": "31", "id": 7417, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3612:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "3594:20:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "66616c7365", "id": 7420, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3636:5:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, {"baseExpression": {"id": 7421, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7395, "src": "3643:10:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 7423, "indexExpression": {"hexValue": "30", "id": 7422, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3654:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3643:13:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7424, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7397, "src": "3658:9:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 7419, "name": "_virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7458, "src": "3617:18:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (bool,uint256,uint256) view returns (uint256)"}}, "id": 7425, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3617:51:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3594:74:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7427, "nodeType": "ExpressionStatement", "src": "3594:74:9"}, {"expression": {"id": 7428, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7402, "src": "3685:17:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "functionReturnParameters": 7403, "id": 7429, "nodeType": "Return", "src": "3678:24:9"}]}, "id": 7431, "implemented": true, "kind": "function", "modifiers": [], "name": "_getVirtualParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 7398, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7395, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 7431, "src": "3348:28:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 7392, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3348:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7394, "length": {"hexValue": "32", "id": 7393, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3356:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "3348:10:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}, {"constant": false, "id": 7397, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 7431, "src": "3378:17:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7396, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3378:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3347:49:9"}, "returnParameters": {"id": 7403, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7402, "mutability": "mutable", "name": "virtualParameters", "nodeType": "VariableDeclaration", "scope": 7431, "src": "3460:35:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 7399, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3460:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7401, "length": {"hexValue": "32", "id": 7400, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3468:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "3460:10:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "src": "3459:37:9"}, "scope": 8667, "src": "3317:392:9", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"body": {"id": 7457, "nodeType": "Block", "src": "3868:210:9", "statements": [{"expression": {"condition": {"id": 7442, "name": "parameter0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7433, "src": "3897:10:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"components": [{"arguments": [{"id": 7451, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7437, "src": "4049:9:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7452, "name": "sqrtParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7435, "src": "4060:9:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 7449, "name": "GyroTwoMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16918, "src": "4009:11:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroTwoMath_$16918_$", "typeString": "type(library GyroTwoMath)"}}, "id": 7450, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateVirtualParameter1", "nodeType": "MemberAccess", "referencedDeclaration": 16917, "src": "4009:39:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 7453, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4009:61:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 7454, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4008:63:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7455, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "3897:174:9", "trueExpression": {"components": [{"arguments": [{"id": 7445, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7437, "src": "3967:9:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7446, "name": "sqrtParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7435, "src": "3978:9:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 7443, "name": "GyroTwoMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16918, "src": "3927:11:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroTwoMath_$16918_$", "typeString": "type(library GyroTwoMath)"}}, "id": 7444, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateVirtualParameter0", "nodeType": "MemberAccess", "referencedDeclaration": 16901, "src": "3927:39:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 7447, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3927:61:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 7448, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "3926:63:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 7441, "id": 7456, "nodeType": "Return", "src": "3878:193:9"}]}, "id": 7458, "implemented": true, "kind": "function", "modifiers": [], "name": "_virtualParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 7438, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7433, "mutability": "mutable", "name": "parameter0", "nodeType": "VariableDeclaration", "scope": 7458, "src": "3752:15:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 7432, "name": "bool", "nodeType": "ElementaryTypeName", "src": "3752:4:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 7435, "mutability": "mutable", "name": "sqrtParam", "nodeType": "VariableDeclaration", "scope": 7458, "src": "3777:17:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7434, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3777:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7437, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 7458, "src": "3804:17:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7436, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3804:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3742:85:9"}, "returnParameters": {"id": 7441, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7440, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7458, "src": "3859:7:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7439, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3859:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3858:9:9"}, "scope": 8667, "src": "3715:363:9", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"baseFunctions": [5427], "body": {"id": 7501, "nodeType": "Block", "src": "4219:389:9", "statements": [{"assignments": [null, 7469, null], "declarations": [null, {"constant": false, "id": 7469, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 7501, "src": "4232:25:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7467, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4232:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7468, "nodeType": "ArrayTypeName", "src": "4232:9:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, null], "id": 7476, "initialValue": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 7473, "name": "getPoolId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5132, "src": "4288:9:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$", "typeString": "function () view returns (bytes32)"}}, "id": 7474, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4288:11:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 7470, "name": "getVault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12611, "src": "4263:8:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IVault_$17648_$", "typeString": "function () view returns (contract IVault)"}}, "id": 7471, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4263:10:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IVault_$17648", "typeString": "contract IVault"}}, "id": 7472, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getPoolTokens", "nodeType": "MemberAccess", "referencedDeclaration": 17404, "src": "4263:24:9", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_array$_t_contract$_IERC20_$18762_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$", "typeString": "function (bytes32) view external returns (contract IERC20[] memory,uint256[] memory,uint256)"}}, "id": 7475, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4263:37:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_array$_t_contract$_IERC20_$18762_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$", "typeString": "tuple(contract IERC20[] memory,uint256[] memory,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "4229:71:9"}, {"assignments": [7482], "declarations": [{"constant": false, "id": 7482, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 7501, "src": "4310:28:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 7480, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4310:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7481, "length": {"hexValue": "32", "id": 7479, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4318:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "4310:10:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 7485, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 7483, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [7336, 7349], "referencedDeclaration": 7336, "src": "4341:15:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function () view returns (uint256[2] memory)"}}, "id": 7484, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4341:17:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "4310:48:9"}, {"expression": {"arguments": [{"id": 7487, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7469, "src": "4503:8:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}], "id": 7486, "name": "_upscaleArray", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7004, "src": "4489:13:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$", "typeString": "function (uint256[] memory) view"}}, "id": 7488, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4489:23:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 7489, "nodeType": "ExpressionStatement", "src": "4489:23:9"}, {"expression": {"arguments": [{"id": 7492, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7469, "src": "4562:8:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"baseExpression": {"id": 7493, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7482, "src": "4572:10:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 7495, "indexExpression": {"hexValue": "30", "id": 7494, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4583:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4572:13:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 7496, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7482, "src": "4587:10:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 7498, "indexExpression": {"hexValue": "31", "id": 7497, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4598:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4587:13:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 7490, "name": "GyroTwoMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16918, "src": "4530:11:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroTwoMath_$16918_$", "typeString": "type(library GyroTwoMath)"}}, "id": 7491, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 16505, "src": "4530:31:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256)"}}, "id": 7499, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4530:71:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 7464, "id": 7500, "nodeType": "Return", "src": "4523:78:9"}]}, "documentation": {"id": 7459, "nodeType": "StructuredDocumentation", "src": "4084:67:9", "text": " @dev Returns the current value of the invariant."}, "functionSelector": "c0ff1a15", "id": 7502, "implemented": true, "kind": "function", "modifiers": [], "name": "getInvariant", "nodeType": "FunctionDefinition", "overrides": {"id": 7461, "nodeType": "OverrideSpecifier", "overrides": [], "src": "4192:8:9"}, "parameters": {"id": 7460, "nodeType": "ParameterList", "parameters": [], "src": "4177:2:9"}, "returnParameters": {"id": 7464, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7463, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7502, "src": "4210:7:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7462, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4210:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4209:9:9"}, "scope": 8667, "src": "4156:452:9", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"baseFunctions": [5587], "body": {"id": 7668, "nodeType": "Block", "src": "4838:2506:9", "statements": [{"assignments": [7521], "declarations": [{"constant": false, "id": 7521, "mutability": "mutable", "name": "tokenInIsToken0", "nodeType": "VariableDeclaration", "scope": 7668, "src": "4848:20:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 7520, "name": "bool", "nodeType": "ElementaryTypeName", "src": "4848:4:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "id": 7526, "initialValue": {"commonType": {"typeIdentifier": "t_contract$_IERC20_$18762", "typeString": "contract IERC20"}, "id": 7525, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 7522, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7504, "src": "4871:7:9", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$24771_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 7523, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenIn", "nodeType": "MemberAccess", "referencedDeclaration": 24756, "src": "4871:15:9", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$18762", "typeString": "contract IERC20"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 7524, "name": "_token0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4925, "src": "4890:7:9", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$18762", "typeString": "contract IERC20"}}, "src": "4871:26:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "VariableDeclarationStatement", "src": "4848:49:9"}, {"assignments": [7528], "declarations": [{"constant": false, "id": 7528, "mutability": "mutable", "name": "scalingFactorTokenIn", "nodeType": "VariableDeclaration", "scope": 7668, "src": "4908:28:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7527, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4908:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 7532, "initialValue": {"arguments": [{"id": 7530, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7521, "src": "4954:15:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 7529, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6951, "src": "4939:14:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 7531, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4939:31:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "4908:62:9"}, {"assignments": [7534], "declarations": [{"constant": false, "id": 7534, "mutability": "mutable", "name": "scalingFactorTokenOut", "nodeType": "VariableDeclaration", "scope": 7668, "src": "4980:29:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7533, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4980:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 7539, "initialValue": {"arguments": [{"id": 7537, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "5027:16:9", "subExpression": {"id": 7536, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7521, "src": "5028:15:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 7535, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6951, "src": "5012:14:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 7538, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5012:32:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "4980:64:9"}, {"expression": {"id": 7545, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 7540, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7506, "src": "5098:14:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 7542, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7506, "src": "5124:14:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7543, "name": "scalingFactorTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7528, "src": "5140:20:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 7541, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6968, "src": "5115:8:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 7544, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5115:46:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5098:63:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7546, "nodeType": "ExpressionStatement", "src": "5098:63:9"}, {"expression": {"id": 7552, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 7547, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7508, "src": "5171:15:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 7549, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7508, "src": "5198:15:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7550, "name": "scalingFactorTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7534, "src": "5215:21:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 7548, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6968, "src": "5189:8:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 7551, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5189:48:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5171:66:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7553, "nodeType": "ExpressionStatement", "src": "5171:66:9"}, {"assignments": [7555, 7557, 7559], "declarations": [{"constant": false, "id": 7555, "mutability": "mutable", "name": "currentInvariant", "nodeType": "VariableDeclaration", "scope": 7668, "src": "5327:24:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7554, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5327:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7557, "mutability": "mutable", "name": "virtualParamIn", "nodeType": "VariableDeclaration", "scope": 7668, "src": "5353:22:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7556, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5353:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7559, "mutability": "mutable", "name": "virtualParamOut", "nodeType": "VariableDeclaration", "scope": 7668, "src": "5377:23:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7558, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5377:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 7565, "initialValue": {"arguments": [{"id": 7561, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7506, "src": "5441:14:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7562, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7508, "src": "5469:15:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7563, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7521, "src": "5498:15:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 7560, "name": "_calculateCurrentValues", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7872, "src": "5404:23:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256,bool) view returns (uint256,uint256,uint256)"}}, "id": 7564, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5404:119:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "5326:197:9"}, {"expression": {"arguments": [{"expression": {"id": 7567, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7504, "src": "5619:7:9", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$24771_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 7568, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "lastChangeBlock", "nodeType": "MemberAccess", "referencedDeclaration": 24764, "src": "5619:23:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"condition": {"id": 7569, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7521, "src": "5656:15:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 7571, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7508, "src": "5691:15:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7572, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "5656:50:9", "trueExpression": {"id": 7570, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7506, "src": "5674:14:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"condition": {"id": 7573, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7521, "src": "5720:15:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 7575, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7506, "src": "5756:14:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7576, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "5720:50:9", "trueExpression": {"id": 7574, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7508, "src": "5738:15:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"condition": {"id": 7577, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7521, "src": "5784:15:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 7579, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7559, "src": "5819:15:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7580, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "5784:50:9", "trueExpression": {"id": 7578, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7557, "src": "5802:14:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"condition": {"id": 7581, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7521, "src": "5848:15:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 7583, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7557, "src": "5884:14:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7584, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "5848:50:9", "trueExpression": {"id": 7582, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7559, "src": "5866:15:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 7566, "name": "_updateOracle", "nodeType": "Identifier", "overloadedDeclarations": [8654, 8666], "referencedDeclaration": 8654, "src": "5592:13:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256,uint256,uint256,uint256)"}}, "id": 7585, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5592:316:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 7586, "nodeType": "ExpressionStatement", "src": "5592:316:9"}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_SwapKind_$17472", "typeString": "enum IVault.SwapKind"}, "id": 7592, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 7587, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7504, "src": "5923:7:9", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$24771_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 7588, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kind", "nodeType": "MemberAccess", "referencedDeclaration": 24754, "src": "5923:12:9", "typeDescriptions": {"typeIdentifier": "t_enum$_SwapKind_$17472", "typeString": "enum IVault.SwapKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 7589, "name": "IVault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17648, "src": "5939:6:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IVault_$17648_$", "typeString": "type(contract IVault)"}}, "id": 7590, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "SwapKind", "nodeType": "MemberAccess", "referencedDeclaration": 17472, "src": "5939:15:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_SwapKind_$17472_$", "typeString": "type(enum IVault.SwapKind)"}}, "id": 7591, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "GIVEN_IN", "nodeType": "MemberAccess", "src": "5939:24:9", "typeDescriptions": {"typeIdentifier": "t_enum$_SwapKind_$17472", "typeString": "enum IVault.SwapKind"}}, "src": "5923:40:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 7666, "nodeType": "Block", "src": "6707:631:9", "statements": [{"expression": {"id": 7639, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 7631, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7504, "src": "6721:7:9", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$24771_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 7633, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 24760, "src": "6721:14:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 7635, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7504, "src": "6747:7:9", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$24771_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 7636, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 24760, "src": "6747:14:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7637, "name": "scalingFactorTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7534, "src": "6763:21:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 7634, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6968, "src": "6738:8:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 7638, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6738:47:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6721:64:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7640, "nodeType": "ExpressionStatement", "src": "6721:64:9"}, {"assignments": [7642], "declarations": [{"constant": false, "id": 7642, "mutability": "mutable", "name": "amountIn", "nodeType": "VariableDeclaration", "scope": 7666, "src": "6800:16:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7641, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6800:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 7650, "initialValue": {"arguments": [{"id": 7644, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7504, "src": "6835:7:9", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$24771_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, {"id": 7645, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7506, "src": "6844:14:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7646, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7508, "src": "6860:15:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7647, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7557, "src": "6877:14:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7648, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7559, "src": "6893:15:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_SwapRequest_$24771_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 7643, "name": "_onSwapGivenOut", "nodeType": "Identifier", "overloadedDeclarations": [7723], "referencedDeclaration": 7723, "src": "6819:15:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_SwapRequest_$24771_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (struct IPoolSwapStructs.SwapRequest memory,uint256,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 7649, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6819:90:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6800:109:9"}, {"expression": {"id": 7656, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 7651, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7642, "src": "6994:8:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 7653, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7642, "src": "7018:8:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7654, "name": "scalingFactorTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7528, "src": "7028:20:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 7652, "name": "_downscaleUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7074, "src": "7005:12:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 7655, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7005:44:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6994:55:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7657, "nodeType": "ExpressionStatement", "src": "6994:55:9"}, {"expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 7660, "name": "getSwapFeePercentage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5198, "src": "7291:20:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 7661, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7291:22:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7662, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "complement", "nodeType": "MemberAccess", "referencedDeclaration": 11387, "src": "7291:33:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256) pure returns (uint256)"}}, "id": 7663, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7291:35:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 7658, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7642, "src": "7276:8:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7659, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "divUp", "nodeType": "MemberAccess", "referencedDeclaration": 11291, "src": "7276:14:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 7664, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7276:51:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 7519, "id": 7665, "nodeType": "Return", "src": "7269:58:9"}]}, "id": 7667, "nodeType": "IfStatement", "src": "5919:1419:9", "trueBody": {"id": 7630, "nodeType": "Block", "src": "5965:736:9", "statements": [{"assignments": [7594], "declarations": [{"constant": false, "id": 7594, "mutability": "mutable", "name": "feeAmount", "nodeType": "VariableDeclaration", "scope": 7630, "src": "6182:17:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7593, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6182:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 7601, "initialValue": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 7598, "name": "getSwapFeePercentage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5198, "src": "6223:20:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 7599, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6223:22:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"id": 7595, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7504, "src": "6202:7:9", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$24771_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 7596, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 24760, "src": "6202:14:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7597, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mulUp", "nodeType": "MemberAccess", "referencedDeclaration": 11193, "src": "6202:20:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 7600, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6202:44:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6182:64:9"}, {"expression": {"id": 7613, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 7602, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7504, "src": "6346:7:9", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$24771_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 7604, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 24760, "src": "6346:14:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [{"id": 7609, "name": "feeAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7594, "src": "6391:9:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"id": 7606, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7504, "src": "6372:7:9", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$24771_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 7607, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 24760, "src": "6372:14:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7608, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 11111, "src": "6372:18:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 7610, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6372:29:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7611, "name": "scalingFactorTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7528, "src": "6403:20:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 7605, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6968, "src": "6363:8:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 7612, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6363:61:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6346:78:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7614, "nodeType": "ExpressionStatement", "src": "6346:78:9"}, {"assignments": [7616], "declarations": [{"constant": false, "id": 7616, "mutability": "mutable", "name": "amountOut", "nodeType": "VariableDeclaration", "scope": 7630, "src": "6439:17:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7615, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6439:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 7624, "initialValue": {"arguments": [{"id": 7618, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7504, "src": "6474:7:9", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$24771_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, {"id": 7619, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7506, "src": "6483:14:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7620, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7508, "src": "6499:15:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7621, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7557, "src": "6516:14:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7622, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7559, "src": "6532:15:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_SwapRequest_$24771_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 7617, "name": "_onSwapGivenIn", "nodeType": "Identifier", "overloadedDeclarations": [7696], "referencedDeclaration": 7696, "src": "6459:14:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_SwapRequest_$24771_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (struct IPoolSwapStructs.SwapRequest memory,uint256,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 7623, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6459:89:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6439:109:9"}, {"expression": {"arguments": [{"id": 7626, "name": "amountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7616, "src": "6657:9:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7627, "name": "scalingFactorTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7534, "src": "6668:21:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 7625, "name": "_downscaleDown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7021, "src": "6642:14:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 7628, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6642:48:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 7519, "id": 7629, "nodeType": "Return", "src": "6635:55:9"}]}}]}, "functionSelector": "9d2c110c", "id": 7669, "implemented": true, "kind": "function", "modifiers": [{"id": 7512, "modifierName": {"id": 7511, "name": "whenNotPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15825, "src": "4780:13:9", "typeDescriptions": {"typeIdentifier": "t_modifier$__$", "typeString": "modifier ()"}}, "nodeType": "ModifierInvocation", "src": "4780:13:9"}, {"arguments": [{"expression": {"id": 7514, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7504, "src": "4804:7:9", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$24771_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 7515, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "poolId", "nodeType": "MemberAccess", "referencedDeclaration": 24762, "src": "4804:14:9", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "id": 7516, "modifierName": {"id": 7513, "name": "onlyVault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4976, "src": "4794:9:9", "typeDescriptions": {"typeIdentifier": "t_modifier$_t_bytes32_$", "typeString": "modifier (bytes32)"}}, "nodeType": "ModifierInvocation", "src": "4794:25:9"}], "name": "onSwap", "nodeType": "FunctionDefinition", "overrides": {"id": 7510, "nodeType": "OverrideSpecifier", "overrides": [], "src": "4771:8:9"}, "parameters": {"id": 7509, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7504, "mutability": "mutable", "name": "request", "nodeType": "VariableDeclaration", "scope": 7669, "src": "4658:26:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$24771_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 7503, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 24771, "src": "4658:11:9", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$24771_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 7506, "mutability": "mutable", "name": "balanceTokenIn", "nodeType": "VariableDeclaration", "scope": 7669, "src": "4694:22:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7505, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4694:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7508, "mutability": "mutable", "name": "balanceTokenOut", "nodeType": "VariableDeclaration", "scope": 7669, "src": "4726:23:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7507, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4726:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4648:107:9"}, "returnParameters": {"id": 7519, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7518, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7669, "src": "4829:7:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7517, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4829:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4828:9:9"}, "scope": 8667, "src": "4633:2711:9", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"baseFunctions": [5613], "body": {"id": 7695, "nodeType": "Block", "src": "7605:211:9", "statements": [{"expression": {"arguments": [{"id": 7687, "name": "currentBalanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7673, "src": "7710:21:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7688, "name": "currentBalanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7675, "src": "7733:22:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 7689, "name": "swapRequest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7671, "src": "7757:11:9", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$24771_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 7690, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 24760, "src": "7757:18:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7691, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7677, "src": "7777:14:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7692, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7679, "src": "7793:15:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 7685, "name": "GyroTwoMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16918, "src": "7682:11:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroTwoMath_$16918_$", "typeString": "type(library GyroTwoMath)"}}, "id": 7686, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcOutGivenIn", "nodeType": "MemberAccess", "referencedDeclaration": 16798, "src": "7682:27:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 7693, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7682:127:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 7684, "id": 7694, "nodeType": "Return", "src": "7675:134:9"}]}, "id": 7696, "implemented": true, "kind": "function", "modifiers": [], "name": "_onSwapGivenIn", "nodeType": "FunctionDefinition", "overrides": {"id": 7681, "nodeType": "OverrideSpecifier", "overrides": [], "src": "7578:8:9"}, "parameters": {"id": 7680, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7671, "mutability": "mutable", "name": "swapRequest", "nodeType": "VariableDeclaration", "scope": 7696, "src": "7383:30:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$24771_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 7670, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 24771, "src": "7383:11:9", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$24771_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 7673, "mutability": "mutable", "name": "currentBalanceTokenIn", "nodeType": "VariableDeclaration", "scope": 7696, "src": "7423:29:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7672, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7423:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7675, "mutability": "mutable", "name": "currentBalanceTokenOut", "nodeType": "VariableDeclaration", "scope": 7696, "src": "7462:30:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7674, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7462:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7677, "mutability": "mutable", "name": "virtualParamIn", "nodeType": "VariableDeclaration", "scope": 7696, "src": "7502:22:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7676, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7502:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7679, "mutability": "mutable", "name": "virtualParamOut", "nodeType": "VariableDeclaration", "scope": 7696, "src": "7534:23:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7678, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7534:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7373:190:9"}, "returnParameters": {"id": 7684, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7683, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7696, "src": "7596:7:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7682, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7596:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7595:9:9"}, "scope": 8667, "src": "7350:466:9", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"baseFunctions": [5639], "body": {"id": 7722, "nodeType": "Block", "src": "8078:211:9", "statements": [{"expression": {"arguments": [{"id": 7714, "name": "currentBalanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7700, "src": "8183:21:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7715, "name": "currentBalanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7702, "src": "8206:22:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 7716, "name": "swapRequest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7698, "src": "8230:11:9", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$24771_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 7717, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 24760, "src": "8230:18:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7718, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7704, "src": "8250:14:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7719, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7706, "src": "8266:15:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 7712, "name": "GyroTwoMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16918, "src": "8155:11:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroTwoMath_$16918_$", "typeString": "type(library GyroTwoMath)"}}, "id": 7713, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcInGivenOut", "nodeType": "MemberAccess", "referencedDeclaration": 16885, "src": "8155:27:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 7720, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8155:127:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 7711, "id": 7721, "nodeType": "Return", "src": "8148:134:9"}]}, "id": 7723, "implemented": true, "kind": "function", "modifiers": [], "name": "_onSwapGivenOut", "nodeType": "FunctionDefinition", "overrides": {"id": 7708, "nodeType": "OverrideSpecifier", "overrides": [], "src": "8051:8:9"}, "parameters": {"id": 7707, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7698, "mutability": "mutable", "name": "swapRequest", "nodeType": "VariableDeclaration", "scope": 7723, "src": "7856:30:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$24771_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 7697, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 24771, "src": "7856:11:9", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$24771_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 7700, "mutability": "mutable", "name": "currentBalanceTokenIn", "nodeType": "VariableDeclaration", "scope": 7723, "src": "7896:29:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7699, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7896:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7702, "mutability": "mutable", "name": "currentBalanceTokenOut", "nodeType": "VariableDeclaration", "scope": 7723, "src": "7935:30:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7701, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7935:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7704, "mutability": "mutable", "name": "virtualParamIn", "nodeType": "VariableDeclaration", "scope": 7723, "src": "7975:22:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7703, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7975:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7706, "mutability": "mutable", "name": "virtualParamOut", "nodeType": "VariableDeclaration", "scope": 7723, "src": "8007:23:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7705, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8007:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7846:190:9"}, "returnParameters": {"id": 7711, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7710, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7723, "src": "8069:7:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7709, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8069:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "8068:9:9"}, "scope": 8667, "src": "7822:467:9", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 7771, "nodeType": "Block", "src": "8598:392:9", "statements": [{"assignments": [7739], "declarations": [{"constant": false, "id": 7739, "mutability": "mutable", "name": "scalingFactorTokenIn", "nodeType": "VariableDeclaration", "scope": 7771, "src": "8608:28:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7738, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8608:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 7743, "initialValue": {"arguments": [{"id": 7741, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7729, "src": "8654:15:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 7740, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6951, "src": "8639:14:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 7742, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8639:31:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "8608:62:9"}, {"assignments": [7745], "declarations": [{"constant": false, "id": 7745, "mutability": "mutable", "name": "scalingFactorTokenOut", "nodeType": "VariableDeclaration", "scope": 7771, "src": "8680:29:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7744, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8680:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 7750, "initialValue": {"arguments": [{"id": 7748, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "8727:16:9", "subExpression": {"id": 7747, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7729, "src": "8728:15:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 7746, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6951, "src": "8712:14:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 7749, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8712:32:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "8680:64:9"}, {"expression": {"id": 7756, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 7751, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7725, "src": "8754:14:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 7753, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7725, "src": "8780:14:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7754, "name": "scalingFactorTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7739, "src": "8796:20:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 7752, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6968, "src": "8771:8:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 7755, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8771:46:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8754:63:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7757, "nodeType": "ExpressionStatement", "src": "8754:63:9"}, {"expression": {"id": 7763, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 7758, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7727, "src": "8827:15:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 7760, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7727, "src": "8854:15:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7761, "name": "scalingFactorTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7745, "src": "8871:21:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 7759, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6968, "src": "8845:8:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 7762, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8845:48:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8827:66:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7764, "nodeType": "ExpressionStatement", "src": "8827:66:9"}, {"expression": {"arguments": [{"id": 7766, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7725, "src": "8934:14:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7767, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7727, "src": "8950:15:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7768, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7729, "src": "8967:15:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 7765, "name": "_calculateCurrentValues", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7872, "src": "8910:23:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256,bool) view returns (uint256,uint256,uint256)"}}, "id": 7769, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8910:73:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256,uint256)"}}, "functionReturnParameters": 7737, "id": 7770, "nodeType": "Return", "src": "8903:80:9"}]}, "functionSelector": "3c4dd5bb", "id": 7772, "implemented": true, "kind": "function", "modifiers": [], "name": "calculateCurrentValues", "nodeType": "FunctionDefinition", "parameters": {"id": 7730, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7725, "mutability": "mutable", "name": "balanceTokenIn", "nodeType": "VariableDeclaration", "scope": 7772, "src": "8336:22:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7724, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8336:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7727, "mutability": "mutable", "name": "balanceTokenOut", "nodeType": "VariableDeclaration", "scope": 7772, "src": "8368:23:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7726, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8368:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7729, "mutability": "mutable", "name": "tokenInIsToken0", "nodeType": "VariableDeclaration", "scope": 7772, "src": "8401:20:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 7728, "name": "bool", "nodeType": "ElementaryTypeName", "src": "8401:4:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "8326:101:9"}, "returnParameters": {"id": 7737, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7732, "mutability": "mutable", "name": "currentInvariant", "nodeType": "VariableDeclaration", "scope": 7772, "src": "8486:24:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7731, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8486:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7734, "mutability": "mutable", "name": "virtualParamIn", "nodeType": "VariableDeclaration", "scope": 7772, "src": "8524:22:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7733, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8524:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7736, "mutability": "mutable", "name": "virtualParamOut", "nodeType": "VariableDeclaration", "scope": 7772, "src": "8560:23:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7735, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8560:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "8472:121:9"}, "scope": 8667, "src": "8295:695:9", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 7871, "nodeType": "Block", "src": "9302:705:9", "statements": [{"assignments": [7791], "declarations": [{"constant": false, "id": 7791, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 7871, "src": "9395:25:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7789, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9395:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7790, "nodeType": "ArrayTypeName", "src": "9395:9:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 7797, "initialValue": {"arguments": [{"hexValue": "32", "id": 7795, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9437:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 7794, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "9423:13:9", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 7792, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9427:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7793, "nodeType": "ArrayTypeName", "src": "9427:9:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 7796, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9423:16:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "9395:44:9"}, {"expression": {"id": 7805, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 7798, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7791, "src": "9449:8:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7800, "indexExpression": {"hexValue": "30", "id": 7799, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9458:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "9449:11:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"id": 7801, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7778, "src": "9463:15:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 7803, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7776, "src": "9498:15:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7804, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "9463:50:9", "trueExpression": {"id": 7802, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7774, "src": "9481:14:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9449:64:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7806, "nodeType": "ExpressionStatement", "src": "9449:64:9"}, {"expression": {"id": 7814, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 7807, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7791, "src": "9523:8:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7809, "indexExpression": {"hexValue": "31", "id": 7808, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9532:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "9523:11:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"id": 7810, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7778, "src": "9537:15:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 7812, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7774, "src": "9573:14:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7813, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "9537:50:9", "trueExpression": {"id": 7811, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7776, "src": "9555:15:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9523:64:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7815, "nodeType": "ExpressionStatement", "src": "9523:64:9"}, {"assignments": [7821], "declarations": [{"constant": false, "id": 7821, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 7871, "src": "9598:28:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 7819, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9598:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7820, "length": {"hexValue": "32", "id": 7818, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9606:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "9598:10:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 7824, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 7822, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [7336, 7349], "referencedDeclaration": 7336, "src": "9629:15:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function () view returns (uint256[2] memory)"}}, "id": 7823, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9629:17:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "9598:48:9"}, {"expression": {"id": 7836, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 7825, "name": "currentInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7781, "src": "9657:16:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 7828, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7791, "src": "9708:8:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"baseExpression": {"id": 7829, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7821, "src": "9718:10:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 7831, "indexExpression": {"hexValue": "30", "id": 7830, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9729:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9718:13:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 7832, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7821, "src": "9733:10:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 7834, "indexExpression": {"hexValue": "31", "id": 7833, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9744:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9733:13:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 7826, "name": "GyroTwoMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16918, "src": "9676:11:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroTwoMath_$16918_$", "typeString": "type(library GyroTwoMath)"}}, "id": 7827, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 16505, "src": "9676:31:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256)"}}, "id": 7835, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9676:71:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9657:90:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7837, "nodeType": "ExpressionStatement", "src": "9657:90:9"}, {"assignments": [7843], "declarations": [{"constant": false, "id": 7843, "mutability": "mutable", "name": "virtualParam", "nodeType": "VariableDeclaration", "scope": 7871, "src": "9758:30:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 7841, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9758:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7842, "length": {"hexValue": "32", "id": 7840, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9766:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "9758:10:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 7848, "initialValue": {"arguments": [{"id": 7845, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7821, "src": "9813:10:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, {"id": 7846, "name": "currentInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7781, "src": "9825:16:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 7844, "name": "_getVirtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7431, "src": "9791:21:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function (uint256[2] memory,uint256) view returns (uint256[2] memory)"}}, "id": 7847, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9791:51:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "9758:84:9"}, {"expression": {"id": 7858, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 7849, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7783, "src": "9853:14:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"id": 7850, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7778, "src": "9870:15:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"baseExpression": {"id": 7854, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7843, "src": "9906:12:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 7856, "indexExpression": {"hexValue": "31", "id": 7855, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9919:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9906:15:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7857, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "9870:51:9", "trueExpression": {"baseExpression": {"id": 7851, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7843, "src": "9888:12:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 7853, "indexExpression": {"hexValue": "30", "id": 7852, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9901:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9888:15:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9853:68:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7859, "nodeType": "ExpressionStatement", "src": "9853:68:9"}, {"expression": {"id": 7869, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 7860, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7785, "src": "9931:15:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"id": 7861, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7778, "src": "9949:15:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"baseExpression": {"id": 7865, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7843, "src": "9985:12:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 7867, "indexExpression": {"hexValue": "30", "id": 7866, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9998:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9985:15:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7868, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "9949:51:9", "trueExpression": {"baseExpression": {"id": 7862, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7843, "src": "9967:12:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 7864, "indexExpression": {"hexValue": "31", "id": 7863, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9980:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9967:15:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9931:69:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7870, "nodeType": "ExpressionStatement", "src": "9931:69:9"}]}, "id": 7872, "implemented": true, "kind": "function", "modifiers": [], "name": "_calculateCurrentValues", "nodeType": "FunctionDefinition", "parameters": {"id": 7779, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7774, "mutability": "mutable", "name": "balanceTokenIn", "nodeType": "VariableDeclaration", "scope": 7872, "src": "9038:22:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7773, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9038:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7776, "mutability": "mutable", "name": "balanceTokenOut", "nodeType": "VariableDeclaration", "scope": 7872, "src": "9070:23:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7775, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9070:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7778, "mutability": "mutable", "name": "tokenInIsToken0", "nodeType": "VariableDeclaration", "scope": 7872, "src": "9103:20:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 7777, "name": "bool", "nodeType": "ElementaryTypeName", "src": "9103:4:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "9028:101:9"}, "returnParameters": {"id": 7786, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7781, "mutability": "mutable", "name": "currentInvariant", "nodeType": "VariableDeclaration", "scope": 7872, "src": "9190:24:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7780, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9190:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7783, "mutability": "mutable", "name": "virtualParamIn", "nodeType": "VariableDeclaration", "scope": 7872, "src": "9228:22:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7782, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9228:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7785, "mutability": "mutable", "name": "virtualParamOut", "nodeType": "VariableDeclaration", "scope": 7872, "src": "9264:23:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7784, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9264:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "9176:121:9"}, "scope": 8667, "src": "8996:1011:9", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [5860], "body": {"id": 7967, "nodeType": "Block", "src": "11053:847:9", "statements": [{"assignments": [7893], "declarations": [{"constant": false, "id": 7893, "mutability": "mutable", "name": "kind", "nodeType": "VariableDeclaration", "scope": 7967, "src": "11063:30:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$20925", "typeString": "enum BaseWeightedPool.JoinKind"}, "typeName": {"id": 7892, "name": "BaseWeightedPool.JoinKind", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 20925, "src": "11063:25:9", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$20925", "typeString": "enum BaseWeightedPool.JoinKind"}}, "visibility": "internal"}], "id": 7897, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 7894, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7881, "src": "11096:8:9", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 7895, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "joinKind", "nodeType": "MemberAccess", "referencedDeclaration": 12380, "src": "11096:17:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_enum$_JoinKind_$20925_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (enum BaseWeightedPool.JoinKind)"}}, "id": 7896, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11096:19:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$20925", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "VariableDeclarationStatement", "src": "11063:52:9"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_JoinKind_$20925", "typeString": "enum BaseWeightedPool.JoinKind"}, "id": 7903, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 7899, "name": "kind", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7893, "src": "11134:4:9", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$20925", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 7900, "name": "BaseWeightedPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22126, "src": "11142:16:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BaseWeightedPool_$22126_$", "typeString": "type(contract BaseWeightedPool)"}}, "id": 7901, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "JoinKind", "nodeType": "MemberAccess", "referencedDeclaration": 20925, "src": "11142:25:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_JoinKind_$20925_$", "typeString": "type(enum BaseWeightedPool.JoinKind)"}}, "id": 7902, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "INIT", "nodeType": "MemberAccess", "src": "11142:30:9", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$20925", "typeString": "enum BaseWeightedPool.JoinKind"}}, "src": "11134:38:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 7904, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18684, "src": "11174:6:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$18684_$", "typeString": "type(library Errors)"}}, "id": 7905, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNINITIALIZED", "nodeType": "MemberAccess", "referencedDeclaration": 18353, "src": "11174:20:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 7898, "name": "_require", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18279, "src": "11125:8:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 7906, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11125:70:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 7907, "nodeType": "ExpressionStatement", "src": "11125:70:9"}, {"assignments": [7912], "declarations": [{"constant": false, "id": 7912, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 7967, "src": "11206:26:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7910, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11206:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7911, "nodeType": "ArrayTypeName", "src": "11206:9:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 7916, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 7913, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7881, "src": "11235:8:9", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 7914, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "initialAmountsIn", "nodeType": "MemberAccess", "referencedDeclaration": 12419, "src": "11235:25:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (uint256[] memory)"}}, "id": 7915, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11235:27:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "11206:56:9"}, {"expression": {"arguments": [{"expression": {"id": 7920, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7912, "src": "11308:9:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7921, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "11308:16:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "32", "id": 7922, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11326:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "expression": {"id": 7917, "name": "InputHelpers", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11046, "src": "11272:12:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_InputHelpers_$11046_$", "typeString": "type(library InputHelpers)"}}, "id": 7919, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ensureInputLengthMatch", "nodeType": "MemberAccess", "referencedDeclaration": 10954, "src": "11272:35:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256) pure"}}, "id": 7923, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11272:56:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 7924, "nodeType": "ExpressionStatement", "src": "11272:56:9"}, {"expression": {"arguments": [{"id": 7926, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7912, "src": "11352:9:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}], "id": 7925, "name": "_upscaleArray", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7004, "src": "11338:13:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$", "typeString": "function (uint256[] memory) view"}}, "id": 7927, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11338:24:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 7928, "nodeType": "ExpressionStatement", "src": "11338:24:9"}, {"assignments": [7934], "declarations": [{"constant": false, "id": 7934, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 7967, "src": "11373:28:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 7932, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11373:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7933, "length": {"hexValue": "32", "id": 7931, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11381:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "11373:10:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 7937, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 7935, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [7336, 7349], "referencedDeclaration": 7336, "src": "11404:15:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function () view returns (uint256[2] memory)"}}, "id": 7936, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11404:17:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "11373:48:9"}, {"assignments": [7939], "declarations": [{"constant": false, "id": 7939, "mutability": "mutable", "name": "invariantAfterJoin", "nodeType": "VariableDeclaration", "scope": 7967, "src": "11432:26:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7938, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11432:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 7950, "initialValue": {"arguments": [{"id": 7942, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7912, "src": "11493:9:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"baseExpression": {"id": 7943, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7934, "src": "11504:10:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 7945, "indexExpression": {"hexValue": "30", "id": 7944, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11515:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "11504:13:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 7946, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7934, "src": "11519:10:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 7948, "indexExpression": {"hexValue": "31", "id": 7947, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11530:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "11519:13:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 7940, "name": "GyroTwoMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16918, "src": "11461:11:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroTwoMath_$16918_$", "typeString": "type(library GyroTwoMath)"}}, "id": 7941, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 16505, "src": "11461:31:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256)"}}, "id": 7949, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11461:72:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "11432:101:9"}, {"assignments": [7952], "declarations": [{"constant": false, "id": 7952, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 7967, "src": "11750:20:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7951, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11750:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 7958, "initialValue": {"arguments": [{"id": 7955, "name": "invariantAfterJoin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7939, "src": "11782:18:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "32", "id": 7956, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11802:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "expression": {"id": 7953, "name": "Math", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11677, "src": "11773:4:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Math_$11677_$", "typeString": "type(library Math)"}}, "id": 7954, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mul", "nodeType": "MemberAccess", "referencedDeclaration": 11596, "src": "11773:8:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 7957, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11773:31:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "11750:54:9"}, {"expression": {"id": 7961, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 7959, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4921, "src": "11815:14:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 7960, "name": "invariantAfterJoin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7939, "src": "11832:18:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11815:35:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7962, "nodeType": "ExpressionStatement", "src": "11815:35:9"}, {"expression": {"components": [{"id": 7963, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7952, "src": "11869:12:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7964, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7912, "src": "11883:9:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 7965, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "11868:25:9", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "functionReturnParameters": 7889, "id": 7966, "nodeType": "Return", "src": "11861:32:9"}]}, "documentation": {"id": 7873, "nodeType": "StructuredDocumentation", "src": "10078:801:9", "text": " @dev Called when the Pool is joined for the first time; that is, when the BPT total supply is zero.\n Returns the amount of BPT to mint, and the token amounts the Pool will receive in return.\n Minted BPT will be sent to `recipient`, except for _MINIMUM_BPT, which will be deducted from this amount and sent\n to the zero address instead. This will cause that BPT to remain forever locked there, preventing total BTP from\n ever dropping below that value, and ensuring `_onInitializePool` can only be called once in the entire Pool's\n lifetime.\n The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n be downscaled (rounding up) before being returned to the Vault."}, "id": 7968, "implemented": true, "kind": "function", "modifiers": [], "name": "_onInitializePool", "nodeType": "FunctionDefinition", "overrides": {"id": 7883, "nodeType": "OverrideSpecifier", "overrides": [], "src": "11008:8:9"}, "parameters": {"id": 7882, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7875, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7968, "src": "10920:7:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 7874, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "10920:7:9", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 7877, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7968, "src": "10937:7:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 7876, "name": "address", "nodeType": "ElementaryTypeName", "src": "10937:7:9", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 7879, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7968, "src": "10954:7:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 7878, "name": "address", "nodeType": "ElementaryTypeName", "src": "10954:7:9", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 7881, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 7968, "src": "10971:21:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 7880, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "10971:5:9", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "10910:88:9"}, "returnParameters": {"id": 7889, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7885, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7968, "src": "11026:7:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7884, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11026:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7888, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7968, "src": "11035:16:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7886, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11035:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7887, "nodeType": "ArrayTypeName", "src": "11035:9:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "11025:27:9"}, "scope": 8667, "src": "10884:1016:9", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [5955], "body": {"id": 8079, "nodeType": "Block", "src": "13666:1586:9", "statements": [{"assignments": [8001], "declarations": [{"constant": false, "id": 8001, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 8079, "src": "13676:28:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 7999, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13676:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 8000, "length": {"hexValue": "32", "id": 7998, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13684:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "13676:10:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 8004, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 8002, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [7336, 7349], "referencedDeclaration": 7336, "src": "13707:15:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function () view returns (uint256[2] memory)"}}, "id": 8003, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13707:17:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "13676:48:9"}, {"assignments": [8006], "declarations": [{"constant": false, "id": 8006, "mutability": "mutable", "name": "invariantBeforeAction", "nodeType": "VariableDeclaration", "scope": 8079, "src": "14029:29:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8005, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14029:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 8017, "initialValue": {"arguments": [{"id": 8009, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7978, "src": "14093:8:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"baseExpression": {"id": 8010, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8001, "src": "14103:10:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 8012, "indexExpression": {"hexValue": "30", "id": 8011, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14114:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "14103:13:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 8013, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8001, "src": "14118:10:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 8015, "indexExpression": {"hexValue": "31", "id": 8014, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14129:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "14118:13:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 8007, "name": "GyroTwoMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16918, "src": "14061:11:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroTwoMath_$16918_$", "typeString": "type(library GyroTwoMath)"}}, "id": 8008, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 16505, "src": "14061:31:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256)"}}, "id": 8016, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14061:71:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "14029:103:9"}, {"assignments": [8023], "declarations": [{"constant": false, "id": 8023, "mutability": "mutable", "name": "virtualParam", "nodeType": "VariableDeclaration", "scope": 8079, "src": "14142:30:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 8021, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14142:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 8022, "length": {"hexValue": "32", "id": 8020, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14150:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "14142:10:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 8028, "initialValue": {"arguments": [{"id": 8025, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8001, "src": "14197:10:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, {"id": 8026, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8006, "src": "14209:21:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 8024, "name": "_getVirtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7431, "src": "14175:21:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function (uint256[2] memory,uint256) view returns (uint256[2] memory)"}}, "id": 8027, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14175:56:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "14142:89:9"}, {"expression": {"arguments": [{"id": 8030, "name": "lastChangeBlock", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7980, "src": "14310:15:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 8031, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7978, "src": "14327:8:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 8033, "indexExpression": {"hexValue": "30", "id": 8032, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14336:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "14327:11:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 8034, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7978, "src": "14340:8:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 8036, "indexExpression": {"hexValue": "31", "id": 8035, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14349:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "14340:11:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 8037, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8023, "src": "14353:12:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 8039, "indexExpression": {"hexValue": "30", "id": 8038, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14366:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "14353:15:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 8040, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8023, "src": "14370:12:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 8042, "indexExpression": {"hexValue": "31", "id": 8041, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14383:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "14370:15:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 8029, "name": "_updateOracle", "nodeType": "Identifier", "overloadedDeclarations": [8654, 8666], "referencedDeclaration": 8654, "src": "14296:13:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256,uint256,uint256,uint256)"}}, "id": 8043, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14296:90:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 8044, "nodeType": "ExpressionStatement", "src": "14296:90:9"}, {"expression": {"arguments": [{"id": 8046, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8006, "src": "14413:21:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 8045, "name": "_distributeFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8404, "src": "14397:15:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 8047, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14397:38:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 8048, "nodeType": "ExpressionStatement", "src": "14397:38:9"}, {"assignments": [8050, 8053], "declarations": [{"constant": false, "id": 8050, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 8079, "src": "14447:20:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8049, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14447:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8053, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 8079, "src": "14469:26:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 8051, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14469:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 8052, "nodeType": "ArrayTypeName", "src": "14469:9:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 8058, "initialValue": {"arguments": [{"id": 8055, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7978, "src": "14507:8:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 8056, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7984, "src": "14517:8:9", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 8054, "name": "_doJoin", "nodeType": "Identifier", "overloadedDeclarations": [8124, 6024], "referencedDeclaration": 8124, "src": "14499:7:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 8057, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14499:27:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "14446:80:9"}, {"expression": {"id": 8068, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 8059, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4921, "src": "14960:14:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 8062, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8006, "src": "15015:21:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8063, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8050, "src": "15038:12:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 8064, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16024, "src": "15052:11:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 8065, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15052:13:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "74727565", "id": 8066, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "15067:4:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "expression": {"id": 8060, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9924, "src": "14977:12:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$9924_$", "typeString": "type(library GyroPoolMath)"}}, "id": 8061, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "liquidityInvariantUpdate", "nodeType": "MemberAccess", "referencedDeclaration": 9843, "src": "14977:37:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,bool) pure returns (uint256)"}}, "id": 8067, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14977:95:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "14960:112:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 8069, "nodeType": "ExpressionStatement", "src": "14960:112:9"}, {"expression": {"components": [{"id": 8070, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8050, "src": "15203:12:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8071, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8053, "src": "15217:9:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"arguments": [{"hexValue": "32", "id": 8075, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15242:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 8074, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "15228:13:9", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 8072, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15232:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 8073, "nodeType": "ArrayTypeName", "src": "15232:9:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 8076, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15228:16:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 8077, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "15202:43:9", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory,uint256[] memory)"}}, "functionReturnParameters": 7995, "id": 8078, "nodeType": "Return", "src": "15195:50:9"}]}, "documentation": {"id": 7969, "nodeType": "StructuredDocumentation", "src": "11906:1386:9", "text": " @dev Called whenever the Pool is joined after the first initialization join (see `_onInitializePool`).\n Returns the amount of BPT to mint, the token amounts that the Pool will receive in return, and the number of\n tokens to pay in protocol swap fees.\n Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n Minted BPT will be sent to `recipient`.\n The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n be downscaled (rounding up) before being returned to the Vault.\n Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onJoinPool`). These\n amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way\n Responsibility for updating the oracle has been moved from `onJoinPool()` (without the underscore) to this function. That is because both this function and `_updateOracle()` need access to the invariant and this way we can share the computation."}, "id": 8080, "implemented": true, "kind": "function", "modifiers": [], "name": "_onJoinPool", "nodeType": "FunctionDefinition", "overrides": {"id": 7986, "nodeType": "OverrideSpecifier", "overrides": [], "src": "13545:8:9"}, "parameters": {"id": 7985, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7971, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8080, "src": "13327:7:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 7970, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "13327:7:9", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 7973, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8080, "src": "13344:7:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 7972, "name": "address", "nodeType": "ElementaryTypeName", "src": "13344:7:9", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 7975, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8080, "src": "13361:7:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 7974, "name": "address", "nodeType": "ElementaryTypeName", "src": "13361:7:9", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 7978, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 8080, "src": "13378:25:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7976, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13378:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7977, "nodeType": "ArrayTypeName", "src": "13378:9:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 7980, "mutability": "mutable", "name": "lastChangeBlock", "nodeType": "VariableDeclaration", "scope": 8080, "src": "13413:23:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7979, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13413:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7982, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8080, "src": "13446:7:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7981, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13446:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7984, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 8080, "src": "13492:21:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 7983, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "13492:5:9", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "13317:202:9"}, "returnParameters": {"id": 7995, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7988, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8080, "src": "13584:7:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7987, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13584:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7991, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8080, "src": "13605:16:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7989, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13605:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7990, "nodeType": "ArrayTypeName", "src": "13605:9:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 7994, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8080, "src": "13635:16:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7992, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13635:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7993, "nodeType": "ArrayTypeName", "src": "13635:9:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "13570:91:9"}, "scope": 8667, "src": "13297:1955:9", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 8123, "nodeType": "Block", "src": "15398:441:9", "statements": [{"assignments": [8096], "declarations": [{"constant": false, "id": 8096, "mutability": "mutable", "name": "kind", "nodeType": "VariableDeclaration", "scope": 8123, "src": "15408:30:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$20925", "typeString": "enum BaseWeightedPool.JoinKind"}, "typeName": {"id": 8095, "name": "BaseWeightedPool.JoinKind", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 20925, "src": "15408:25:9", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$20925", "typeString": "enum BaseWeightedPool.JoinKind"}}, "visibility": "internal"}], "id": 8100, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 8097, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8085, "src": "15441:8:9", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 8098, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "joinKind", "nodeType": "MemberAccess", "referencedDeclaration": 12380, "src": "15441:17:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_enum$_JoinKind_$20925_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (enum BaseWeightedPool.JoinKind)"}}, "id": 8099, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15441:19:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$20925", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "VariableDeclarationStatement", "src": "15408:52:9"}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_JoinKind_$20925", "typeString": "enum BaseWeightedPool.JoinKind"}, "id": 8105, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 8101, "name": "kind", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8096, "src": "15597:4:9", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$20925", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 8102, "name": "BaseWeightedPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22126, "src": "15605:16:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BaseWeightedPool_$22126_$", "typeString": "type(contract BaseWeightedPool)"}}, "id": 8103, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "JoinKind", "nodeType": "MemberAccess", "referencedDeclaration": 20925, "src": "15605:25:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_JoinKind_$20925_$", "typeString": "type(enum BaseWeightedPool.JoinKind)"}}, "id": 8104, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "ALL_TOKENS_IN_FOR_EXACT_BPT_OUT", "nodeType": "MemberAccess", "src": "15605:57:9", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$20925", "typeString": "enum BaseWeightedPool.JoinKind"}}, "src": "15597:65:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 8121, "nodeType": "Block", "src": "15773:60:9", "statements": [{"expression": {"arguments": [{"expression": {"id": 8117, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18684, "src": "15795:6:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$18684_$", "typeString": "type(library Errors)"}}, "id": 8118, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNHANDLED_JOIN_KIND", "nodeType": "MemberAccess", "referencedDeclaration": 18398, "src": "15795:26:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 8116, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18287, "src": "15787:7:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$", "typeString": "function (uint256) pure"}}, "id": 8119, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15787:35:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 8120, "nodeType": "ExpressionStatement", "src": "15787:35:9"}]}, "id": 8122, "nodeType": "IfStatement", "src": "15593:240:9", "trueBody": {"id": 8115, "nodeType": "Block", "src": "15664:103:9", "statements": [{"expression": {"id": 8113, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 8106, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8088, "src": "15679:12:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8107, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8091, "src": "15693:9:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 8108, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "15678:25:9", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 8110, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8083, "src": "15737:8:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 8111, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8085, "src": "15747:8:9", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 8109, "name": "_joinAllTokensInForExactBPTOut", "nodeType": "Identifier", "overloadedDeclarations": [8162], "referencedDeclaration": 8162, "src": "15706:30:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 8112, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15706:50:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "15678:78:9", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 8114, "nodeType": "ExpressionStatement", "src": "15678:78:9"}]}}]}, "id": 8124, "implemented": true, "kind": "function", "modifiers": [], "name": "_doJoin", "nodeType": "FunctionDefinition", "parameters": {"id": 8086, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 8083, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 8124, "src": "15275:25:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 8081, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15275:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 8082, "nodeType": "ArrayTypeName", "src": "15275:9:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 8085, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 8124, "src": "15302:21:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 8084, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "15302:5:9", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "15274:50:9"}, "returnParameters": {"id": 8092, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 8088, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 8124, "src": "15348:20:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8087, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15348:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8091, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 8124, "src": "15370:26:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 8089, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15370:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 8090, "nodeType": "ArrayTypeName", "src": "15370:9:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "15347:50:9"}, "scope": 8667, "src": "15258:581:9", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [6194], "body": {"id": 8161, "nodeType": "Block", "src": "16030:343:9", "statements": [{"assignments": [8139], "declarations": [{"constant": false, "id": 8139, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 8161, "src": "16040:20:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8138, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16040:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 8143, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 8140, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8129, "src": "16063:8:9", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 8141, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "allTokensInForExactBptOut", "nodeType": "MemberAccess", "referencedDeclaration": 12494, "src": "16063:34:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (uint256)"}}, "id": 8142, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16063:36:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "16040:59:9"}, {"assignments": [8148], "declarations": [{"constant": false, "id": 8148, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 8161, "src": "16210:26:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 8146, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16210:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 8147, "nodeType": "ArrayTypeName", "src": "16210:9:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 8156, "initialValue": {"arguments": [{"id": 8151, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8127, "src": "16285:8:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 8152, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8139, "src": "16295:12:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 8153, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16024, "src": "16309:11:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 8154, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16309:13:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 8149, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9924, "src": "16239:12:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$9924_$", "typeString": "type(library GyroPoolMath)"}}, "id": 8150, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcAllTokensInGivenExactBptOut", "nodeType": "MemberAccess", "referencedDeclaration": 9223, "src": "16239:45:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256[] memory)"}}, "id": 8155, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16239:84:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "16210:113:9"}, {"expression": {"components": [{"id": 8157, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8139, "src": "16342:12:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8158, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8148, "src": "16356:9:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 8159, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "16341:25:9", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "functionReturnParameters": 8137, "id": 8160, "nodeType": "Return", "src": "16334:32:9"}]}, "id": 8162, "implemented": true, "kind": "function", "modifiers": [], "name": "_joinAllTokensInForExactBPTOut", "nodeType": "FunctionDefinition", "overrides": {"id": 8131, "nodeType": "OverrideSpecifier", "overrides": [], "src": "15973:8:9"}, "parameters": {"id": 8130, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 8127, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 8162, "src": "15885:25:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 8125, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15885:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 8126, "nodeType": "ArrayTypeName", "src": "15885:9:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 8129, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 8162, "src": "15912:21:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 8128, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "15912:5:9", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "15884:50:9"}, "returnParameters": {"id": 8137, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 8133, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8162, "src": "15999:7:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8132, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15999:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8136, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8162, "src": "16008:16:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 8134, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16008:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 8135, "nodeType": "ArrayTypeName", "src": "16008:9:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "15998:27:9"}, "scope": 8667, "src": "15845:528:9", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [6383], "body": {"id": 8294, "nodeType": "Block", "src": "17853:2677:9", "statements": [{"assignments": [8195], "declarations": [{"constant": false, "id": 8195, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 8294, "src": "18018:28:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 8193, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18018:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 8194, "length": {"hexValue": "32", "id": 8192, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "18026:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "18018:10:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 8198, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 8196, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [7336, 7349], "referencedDeclaration": 7336, "src": "18049:15:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function () view returns (uint256[2] memory)"}}, "id": 8197, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18049:17:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "18018:48:9"}, {"condition": {"arguments": [], "expression": {"argumentTypes": [], "id": 8199, "name": "_isNotPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15920, "src": "18273:12:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$", "typeString": "function () view returns (bool)"}}, "id": 8200, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18273:14:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 8283, "nodeType": "Block", "src": "19692:659:9", "statements": [{"expression": {"id": 8273, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 8266, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8182, "src": "19907:11:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8267, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8185, "src": "19920:10:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 8268, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "19906:25:9", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 8270, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8172, "src": "19942:8:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 8271, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8178, "src": "19952:8:9", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 8269, "name": "_doExit", "nodeType": "Identifier", "overloadedDeclarations": [8339, 6452], "referencedDeclaration": 8339, "src": "19934:7:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 8272, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19934:27:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "19906:55:9", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 8274, "nodeType": "ExpressionStatement", "src": "19906:55:9"}, {"expression": {"id": 8281, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 8275, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4921, "src": "20306:14:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"arguments": [{"id": 8278, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "20328:7:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 8277, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20328:7:9", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}], "id": 8276, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "20323:4:9", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 8279, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20323:13:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint256", "typeString": "type(uint256)"}}, "id": 8280, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "20323:17:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "20306:34:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 8282, "nodeType": "ExpressionStatement", "src": "20306:34:9"}]}, "id": 8284, "nodeType": "IfStatement", "src": "18269:2082:9", "trueBody": {"id": 8265, "nodeType": "Block", "src": "18289:1397:9", "statements": [{"assignments": [8202], "declarations": [{"constant": false, "id": 8202, "mutability": "mutable", "name": "invariantBeforeAction", "nodeType": "VariableDeclaration", "scope": 8265, "src": "18609:29:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8201, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18609:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 8213, "initialValue": {"arguments": [{"id": 8205, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8172, "src": "18673:8:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"baseExpression": {"id": 8206, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8195, "src": "18683:10:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 8208, "indexExpression": {"hexValue": "30", "id": 8207, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "18694:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "18683:13:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 8209, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8195, "src": "18698:10:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 8211, "indexExpression": {"hexValue": "31", "id": 8210, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "18709:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "18698:13:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 8203, "name": "GyroTwoMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16918, "src": "18641:11:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroTwoMath_$16918_$", "typeString": "type(library GyroTwoMath)"}}, "id": 8204, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 16505, "src": "18641:31:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256)"}}, "id": 8212, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18641:71:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "18609:103:9"}, {"assignments": [8219], "declarations": [{"constant": false, "id": 8219, "mutability": "mutable", "name": "virtualParam", "nodeType": "VariableDeclaration", "scope": 8265, "src": "18726:30:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 8217, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18726:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 8218, "length": {"hexValue": "32", "id": 8216, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "18734:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "18726:10:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 8224, "initialValue": {"arguments": [{"id": 8221, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8195, "src": "18781:10:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, {"id": 8222, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8202, "src": "18793:21:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 8220, "name": "_getVirtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7431, "src": "18759:21:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function (uint256[2] memory,uint256) view returns (uint256[2] memory)"}}, "id": 8223, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18759:56:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "18726:89:9"}, {"expression": {"arguments": [{"id": 8226, "name": "lastChangeBlock", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8174, "src": "18906:15:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 8227, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8172, "src": "18923:8:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 8229, "indexExpression": {"hexValue": "30", "id": 8228, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "18932:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "18923:11:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 8230, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8172, "src": "18936:8:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 8232, "indexExpression": {"hexValue": "31", "id": 8231, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "18945:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "18936:11:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 8233, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8219, "src": "18949:12:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 8235, "indexExpression": {"hexValue": "30", "id": 8234, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "18962:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "18949:15:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 8236, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8219, "src": "18966:12:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 8238, "indexExpression": {"hexValue": "31", "id": 8237, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "18979:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "18966:15:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 8225, "name": "_updateOracle", "nodeType": "Identifier", "overloadedDeclarations": [8654, 8666], "referencedDeclaration": 8654, "src": "18892:13:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256,uint256,uint256,uint256)"}}, "id": 8239, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18892:90:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 8240, "nodeType": "ExpressionStatement", "src": "18892:90:9"}, {"expression": {"arguments": [{"id": 8242, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8202, "src": "19013:21:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 8241, "name": "_distributeFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8404, "src": "18997:15:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 8243, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18997:38:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 8244, "nodeType": "ExpressionStatement", "src": "18997:38:9"}, {"expression": {"id": 8252, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 8245, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8182, "src": "19051:11:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8246, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8185, "src": "19064:10:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 8247, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "19050:25:9", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 8249, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8172, "src": "19086:8:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 8250, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8178, "src": "19096:8:9", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 8248, "name": "_doExit", "nodeType": "Identifier", "overloadedDeclarations": [8339, 6452], "referencedDeclaration": 8339, "src": "19078:7:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 8251, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19078:27:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "19050:55:9", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 8253, "nodeType": "ExpressionStatement", "src": "19050:55:9"}, {"expression": {"id": 8263, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 8254, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4921, "src": "19563:14:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 8257, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8202, "src": "19618:21:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8258, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8182, "src": "19641:11:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 8259, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16024, "src": "19654:11:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 8260, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19654:13:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "66616c7365", "id": 8261, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "19669:5:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "expression": {"id": 8255, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9924, "src": "19580:12:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$9924_$", "typeString": "type(library GyroPoolMath)"}}, "id": 8256, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "liquidityInvariantUpdate", "nodeType": "MemberAccess", "referencedDeclaration": 9843, "src": "19580:37:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,bool) pure returns (uint256)"}}, "id": 8262, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19580:95:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "19563:112:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 8264, "nodeType": "ExpressionStatement", "src": "19563:112:9"}]}}, {"expression": {"components": [{"id": 8285, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8182, "src": "20481:11:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8286, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8185, "src": "20494:10:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"arguments": [{"hexValue": "32", "id": 8290, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20520:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 8289, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "20506:13:9", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 8287, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20510:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 8288, "nodeType": "ArrayTypeName", "src": "20510:9:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 8291, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20506:16:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 8292, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "20480:43:9", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory,uint256[] memory)"}}, "functionReturnParameters": 8189, "id": 8293, "nodeType": "Return", "src": "20473:50:9"}]}, "documentation": {"id": 8163, "nodeType": "StructuredDocumentation", "src": "16379:1054:9", "text": " @dev Called whenever the Pool is exited.\n Returns the amount of BPT to burn, the token amounts for each Pool token that the Pool will grant in return, and\n the number of tokens to pay in protocol swap fees.\n Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n BPT will be burnt from `sender`.\n The Pool will grant tokens to `recipient`. These amounts are considered upscaled and will be downscaled\n (rounding down) before being returned to the Vault.\n Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onExitPool`). These\n amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way"}, "id": 8295, "implemented": true, "kind": "function", "modifiers": [], "name": "_onExitPool", "nodeType": "FunctionDefinition", "overrides": {"id": 8180, "nodeType": "OverrideSpecifier", "overrides": [], "src": "17687:8:9"}, "parameters": {"id": 8179, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 8165, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8295, "src": "17468:7:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 8164, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "17468:7:9", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 8167, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8295, "src": "17485:7:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 8166, "name": "address", "nodeType": "ElementaryTypeName", "src": "17485:7:9", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 8169, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8295, "src": "17502:7:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 8168, "name": "address", "nodeType": "ElementaryTypeName", "src": "17502:7:9", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 8172, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 8295, "src": "17519:25:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 8170, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17519:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 8171, "nodeType": "ArrayTypeName", "src": "17519:9:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 8174, "mutability": "mutable", "name": "lastChangeBlock", "nodeType": "VariableDeclaration", "scope": 8295, "src": "17554:23:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8173, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17554:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8176, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8295, "src": "17587:7:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8175, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17587:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8178, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 8295, "src": "17634:21:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 8177, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "17634:5:9", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "17458:203:9"}, "returnParameters": {"id": 8189, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 8182, "mutability": "mutable", "name": "bptAmountIn", "nodeType": "VariableDeclaration", "scope": 8295, "src": "17726:19:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8181, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17726:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8185, "mutability": "mutable", "name": "amountsOut", "nodeType": "VariableDeclaration", "scope": 8295, "src": "17759:27:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 8183, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17759:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 8184, "nodeType": "ArrayTypeName", "src": "17759:9:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 8188, "mutability": "mutable", "name": "dueProtocolFeeAmounts", "nodeType": "VariableDeclaration", "scope": 8295, "src": "17800:38:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 8186, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17800:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 8187, "nodeType": "ArrayTypeName", "src": "17800:9:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "17712:136:9"}, "scope": 8667, "src": "17438:3092:9", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 8338, "nodeType": "Block", "src": "20676:452:9", "statements": [{"assignments": [8311], "declarations": [{"constant": false, "id": 8311, "mutability": "mutable", "name": "kind", "nodeType": "VariableDeclaration", "scope": 8338, "src": "20686:30:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$20930", "typeString": "enum BaseWeightedPool.ExitKind"}, "typeName": {"id": 8310, "name": "BaseWeightedPool.ExitKind", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 20930, "src": "20686:25:9", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$20930", "typeString": "enum BaseWeightedPool.ExitKind"}}, "visibility": "internal"}], "id": 8315, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 8312, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8300, "src": "20719:8:9", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 8313, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "exitKind", "nodeType": "MemberAccess", "referencedDeclaration": 12396, "src": "20719:17:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_enum$_ExitKind_$20930_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (enum BaseWeightedPool.ExitKind)"}}, "id": 8314, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20719:19:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$20930", "typeString": "enum BaseWeightedPool.ExitKind"}}, "nodeType": "VariableDeclarationStatement", "src": "20686:52:9"}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_ExitKind_$20930", "typeString": "enum BaseWeightedPool.ExitKind"}, "id": 8320, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 8316, "name": "kind", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8311, "src": "20893:4:9", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$20930", "typeString": "enum BaseWeightedPool.ExitKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 8317, "name": "BaseWeightedPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22126, "src": "20901:16:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BaseWeightedPool_$22126_$", "typeString": "type(contract BaseWeightedPool)"}}, "id": 8318, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ExitKind", "nodeType": "MemberAccess", "referencedDeclaration": 20930, "src": "20901:25:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_ExitKind_$20930_$", "typeString": "type(enum BaseWeightedPool.ExitKind)"}}, "id": 8319, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "EXACT_BPT_IN_FOR_TOKENS_OUT", "nodeType": "MemberAccess", "src": "20901:53:9", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$20930", "typeString": "enum BaseWeightedPool.ExitKind"}}, "src": "20893:61:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 8336, "nodeType": "Block", "src": "21062:60:9", "statements": [{"expression": {"arguments": [{"expression": {"id": 8332, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18684, "src": "21084:6:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$18684_$", "typeString": "type(library Errors)"}}, "id": 8333, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNHANDLED_EXIT_KIND", "nodeType": "MemberAccess", "referencedDeclaration": 18476, "src": "21084:26:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 8331, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18287, "src": "21076:7:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$", "typeString": "function (uint256) pure"}}, "id": 8334, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21076:35:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 8335, "nodeType": "ExpressionStatement", "src": "21076:35:9"}]}, "id": 8337, "nodeType": "IfStatement", "src": "20889:233:9", "trueBody": {"id": 8330, "nodeType": "Block", "src": "20956:100:9", "statements": [{"expression": {"id": 8328, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 8321, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8303, "src": "20971:11:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8322, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8306, "src": "20984:10:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 8323, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "20970:25:9", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 8325, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8298, "src": "21026:8:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 8326, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8300, "src": "21036:8:9", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 8324, "name": "_exitExactBPTInForTokensOut", "nodeType": "Identifier", "overloadedDeclarations": [8377], "referencedDeclaration": 8377, "src": "20998:27:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 8327, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20998:47:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "20970:75:9", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 8329, "nodeType": "ExpressionStatement", "src": "20970:75:9"}]}}]}, "id": 8339, "implemented": true, "kind": "function", "modifiers": [], "name": "_doExit", "nodeType": "FunctionDefinition", "parameters": {"id": 8301, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 8298, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 8339, "src": "20553:25:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 8296, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20553:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 8297, "nodeType": "ArrayTypeName", "src": "20553:9:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 8300, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 8339, "src": "20580:21:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 8299, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "20580:5:9", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "20552:50:9"}, "returnParameters": {"id": 8307, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 8303, "mutability": "mutable", "name": "bptAmountIn", "nodeType": "VariableDeclaration", "scope": 8339, "src": "20626:19:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8302, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20626:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8306, "mutability": "mutable", "name": "amountsOut", "nodeType": "VariableDeclaration", "scope": 8339, "src": "20647:27:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 8304, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20647:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 8305, "nodeType": "ArrayTypeName", "src": "20647:9:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "20625:50:9"}, "scope": 8667, "src": "20536:592:9", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [6559], "body": {"id": 8376, "nodeType": "Block", "src": "21316:746:9", "statements": [{"assignments": [8354], "declarations": [{"constant": false, "id": 8354, "mutability": "mutable", "name": "bptAmountIn", "nodeType": "VariableDeclaration", "scope": 8376, "src": "21737:19:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8353, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21737:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 8358, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 8355, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8344, "src": "21759:8:9", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 8356, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "exactBptInForTokensOut", "nodeType": "MemberAccess", "referencedDeclaration": 12541, "src": "21759:31:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (uint256)"}}, "id": 8357, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21759:33:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "21737:55:9"}, {"assignments": [8363], "declarations": [{"constant": false, "id": 8363, "mutability": "mutable", "name": "amountsOut", "nodeType": "VariableDeclaration", "scope": 8376, "src": "21903:27:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 8361, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21903:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 8362, "nodeType": "ArrayTypeName", "src": "21903:9:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 8371, "initialValue": {"arguments": [{"id": 8366, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8342, "src": "21976:8:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 8367, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8354, "src": "21986:11:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 8368, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16024, "src": "21999:11:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 8369, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21999:13:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 8364, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9924, "src": "21933:12:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$9924_$", "typeString": "type(library GyroPoolMath)"}}, "id": 8365, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcTokensOutGivenExactBptIn", "nodeType": "MemberAccess", "referencedDeclaration": 9275, "src": "21933:42:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256[] memory)"}}, "id": 8370, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21933:80:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "21903:110:9"}, {"expression": {"components": [{"id": 8372, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8354, "src": "22031:11:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8373, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8363, "src": "22044:10:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 8374, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "22030:25:9", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "functionReturnParameters": 8352, "id": 8375, "nodeType": "Return", "src": "22023:32:9"}]}, "id": 8377, "implemented": true, "kind": "function", "modifiers": [], "name": "_exitExactBPTInForTokensOut", "nodeType": "FunctionDefinition", "overrides": {"id": 8346, "nodeType": "OverrideSpecifier", "overrides": [], "src": "21259:8:9"}, "parameters": {"id": 8345, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 8342, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 8377, "src": "21171:25:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 8340, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21171:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 8341, "nodeType": "ArrayTypeName", "src": "21171:9:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 8344, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 8377, "src": "21198:21:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 8343, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "21198:5:9", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "21170:50:9"}, "returnParameters": {"id": 8352, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 8348, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8377, "src": "21285:7:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8347, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21285:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8351, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8377, "src": "21294:16:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 8349, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21294:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 8350, "nodeType": "ArrayTypeName", "src": "21294:9:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "21284:27:9"}, "scope": 8667, "src": "21134:928:9", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 8403, "nodeType": "Block", "src": "22408:518:9", "statements": [{"assignments": [8384, 8386, 8388, 8390], "declarations": [{"constant": false, "id": 8384, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 8403, "src": "22636:16:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8383, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22636:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8386, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 8403, "src": "22654:20:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8385, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22654:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8388, "mutability": "mutable", "name": "gyroTreasury", "nodeType": "VariableDeclaration", "scope": 8403, "src": "22676:20:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 8387, "name": "address", "nodeType": "ElementaryTypeName", "src": "22676:7:9", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 8390, "mutability": "mutable", "name": "balTreasury", "nodeType": "VariableDeclaration", "scope": 8403, "src": "22698:19:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 8389, "name": "address", "nodeType": "ElementaryTypeName", "src": "22698:7:9", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 8395, "initialValue": {"arguments": [{"id": 8392, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4921, "src": "22760:14:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8393, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8380, "src": "22788:21:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 8391, "name": "_getDueProtocolFeeAmounts", "nodeType": "Identifier", "overloadedDeclarations": [8429, 8488], "referencedDeclaration": 8488, "src": "22721:25:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "function (uint256,uint256) view returns (uint256,uint256,address,address)"}}, "id": 8394, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22721:98:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "nodeType": "VariableDeclarationStatement", "src": "22635:184:9"}, {"expression": {"arguments": [{"id": 8397, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8384, "src": "22869:8:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8398, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8386, "src": "22879:12:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8399, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8388, "src": "22893:12:9", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 8400, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8390, "src": "22907:11:9", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 8396, "name": "_payFeesBpt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8520, "src": "22857:11:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$", "typeString": "function (uint256,uint256,address,address)"}}, "id": 8401, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22857:62:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 8402, "nodeType": "ExpressionStatement", "src": "22857:62:9"}]}, "documentation": {"id": 8378, "nodeType": "StructuredDocumentation", "src": "22084:253:9", "text": " @dev Computes and distributes fees between the Balancer and the Gyro treasury\n The fees are computed and distributed in BPT rather than using the\n Balancer regular distribution mechanism which would pay these in underlying"}, "id": 8404, "implemented": true, "kind": "function", "modifiers": [], "name": "_distributeFees", "nodeType": "FunctionDefinition", "parameters": {"id": 8381, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 8380, "mutability": "mutable", "name": "invariantBeforeAction", "nodeType": "VariableDeclaration", "scope": 8404, "src": "22368:29:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8379, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22368:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "22367:31:9"}, "returnParameters": {"id": 8382, "nodeType": "ParameterList", "parameters": [], "src": "22408:0:9"}, "scope": 8667, "src": "22343:583:9", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [6840], "body": {"id": 8428, "nodeType": "Block", "src": "23334:42:9", "statements": [{"expression": {"arguments": [{"hexValue": "4e6f7420696d706c656d656e746564", "id": 8425, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "23351:17:9", "typeDescriptions": {"typeIdentifier": "t_stringliteral_9f5474d7a5849b3f79e8aee7ea2c60bcd36a60a08b4fa41f97e2fccf1c4df98b", "typeString": "literal_string \"Not implemented\""}, "value": "Not implemented"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_9f5474d7a5849b3f79e8aee7ea2c60bcd36a60a08b4fa41f97e2fccf1c4df98b", "typeString": "literal_string \"Not implemented\""}], "id": 8424, "name": "revert", "nodeType": "Identifier", "overloadedDeclarations": [-19, -19], "referencedDeclaration": -19, "src": "23344:6:9", "typeDescriptions": {"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory) pure"}}, "id": 8426, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23344:25:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 8427, "nodeType": "ExpressionStatement", "src": "23344:25:9"}]}, "documentation": {"id": 8405, "nodeType": "StructuredDocumentation", "src": "22932:96:9", "text": " @dev this function overrides inherited function to make sure it is never used"}, "id": 8429, "implemented": true, "kind": "function", "modifiers": [], "name": "_getDueProtocolFeeAmounts", "nodeType": "FunctionDefinition", "overrides": {"id": 8419, "nodeType": "OverrideSpecifier", "overrides": [], "src": "23298:8:9"}, "parameters": {"id": 8418, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 8408, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8429, "src": "23077:16:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 8406, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23077:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 8407, "nodeType": "ArrayTypeName", "src": "23077:9:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 8411, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8429, "src": "23116:16:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 8409, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23116:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 8410, "nodeType": "ArrayTypeName", "src": "23116:9:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 8413, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8429, "src": "23164:7:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8412, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23164:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8415, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8429, "src": "23203:7:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8414, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23203:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8417, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8429, "src": "23241:7:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8416, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23241:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "23067:216:9"}, "returnParameters": {"id": 8423, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 8422, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8429, "src": "23316:16:9", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 8420, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23316:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 8421, "nodeType": "ArrayTypeName", "src": "23316:9:9", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "23315:18:9"}, "scope": 8667, "src": "23033:343:9", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 8487, "nodeType": "Block", "src": "23918:681:9", "statements": [{"assignments": [8446, 8448, 8450, 8452], "declarations": [{"constant": false, "id": 8446, "mutability": "mutable", "name": "protocolSwapFeePerc", "nodeType": "VariableDeclaration", "scope": 8487, "src": "23929:27:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8445, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23929:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8448, "mutability": "mutable", "name": "protocolFeeGyroPortion", "nodeType": "VariableDeclaration", "scope": 8487, "src": "23958:30:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8447, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23958:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8450, "mutability": "mutable", "name": "gyroTreasury", "nodeType": "VariableDeclaration", "scope": 8487, "src": "23990:20:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 8449, "name": "address", "nodeType": "ElementaryTypeName", "src": "23990:7:9", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 8452, "mutability": "mutable", "name": "balTreasury", "nodeType": "VariableDeclaration", "scope": 8487, "src": "24012:19:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 8451, "name": "address", "nodeType": "ElementaryTypeName", "src": "24012:7:9", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 8455, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 8453, "name": "_getFeesMetadata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8554, "src": "24035:16:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "function () view returns (uint256,uint256,address,address)"}}, "id": 8454, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24035:18:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "nodeType": "VariableDeclarationStatement", "src": "23928:125:9"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 8458, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 8456, "name": "protocolSwapFeePerc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8446, "src": "24149:19:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 8457, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "24172:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "24149:24:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 8466, "nodeType": "IfStatement", "src": "24145:95:9", "trueBody": {"id": 8465, "nodeType": "Block", "src": "24175:65:9", "statements": [{"expression": {"components": [{"hexValue": "30", "id": 8459, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "24197:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"hexValue": "30", "id": 8460, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "24200:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"id": 8461, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8450, "src": "24203:12:9", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 8462, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8452, "src": "24217:11:9", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 8463, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "24196:33:9", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_address_$_t_address_$", "typeString": "tuple(int_const 0,int_const 0,address,address)"}}, "functionReturnParameters": 8444, "id": 8464, "nodeType": "Return", "src": "24189:40:9"}]}}, {"assignments": [8468, 8470], "declarations": [{"constant": false, "id": 8468, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 8487, "src": "24284:16:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8467, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24284:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8470, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 8487, "src": "24302:20:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8469, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24302:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 8480, "initialValue": {"arguments": [{"id": 8473, "name": "previousInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8432, "src": "24370:17:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8474, "name": "currentInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8434, "src": "24401:16:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 8475, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16024, "src": "24431:11:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 8476, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24431:13:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8477, "name": "protocolSwapFeePerc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8446, "src": "24458:19:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8478, "name": "protocolFeeGyroPortion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8448, "src": "24491:22:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 8471, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9924, "src": "24326:12:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$9924_$", "typeString": "type(library GyroPoolMath)"}}, "id": 8472, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcProtocolFees", "nodeType": "MemberAccess", "referencedDeclaration": 9359, "src": "24326:30:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,uint256,uint256) pure returns (uint256,uint256)"}}, "id": 8479, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24326:197:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "24283:240:9"}, {"expression": {"components": [{"id": 8481, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8468, "src": "24542:8:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8482, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8470, "src": "24552:12:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8483, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8450, "src": "24566:12:9", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 8484, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8452, "src": "24580:11:9", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 8485, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "24541:51:9", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "functionReturnParameters": 8444, "id": 8486, "nodeType": "Return", "src": "24534:58:9"}]}, "documentation": {"id": 8430, "nodeType": "StructuredDocumentation", "src": "23382:298:9", "text": " @dev Calculates protocol fee amounts in BPT terms.\n protocolSwapFeePercentage is not used here b/c we take parameters from GyroConfig instead.\n Returns: BPT due to Gyro, BPT due to Balancer, receiving address for Gyro fees, receiving address for Balancer\n fees."}, "id": 8488, "implemented": true, "kind": "function", "modifiers": [], "name": "_getDueProtocolFeeAmounts", "nodeType": "FunctionDefinition", "parameters": {"id": 8435, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 8432, "mutability": "mutable", "name": "previousInvariant", "nodeType": "VariableDeclaration", "scope": 8488, "src": "23720:25:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8431, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23720:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8434, "mutability": "mutable", "name": "currentInvariant", "nodeType": "VariableDeclaration", "scope": 8488, "src": "23747:24:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8433, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23747:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "23719:53:9"}, "returnParameters": {"id": 8444, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 8437, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8488, "src": "23833:7:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8436, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23833:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8439, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8488, "src": "23854:7:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8438, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23854:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8441, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8488, "src": "23875:7:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 8440, "name": "address", "nodeType": "ElementaryTypeName", "src": "23875:7:9", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 8443, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8488, "src": "23896:7:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 8442, "name": "address", "nodeType": "ElementaryTypeName", "src": "23896:7:9", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "23819:94:9"}, "scope": 8667, "src": "23685:914:9", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 8519, "nodeType": "Block", "src": "24756:283:9", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 8501, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 8499, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8490, "src": "24814:8:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 8500, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "24825:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "24814:12:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 8508, "nodeType": "IfStatement", "src": "24810:82:9", "trueBody": {"id": 8507, "nodeType": "Block", "src": "24828:64:9", "statements": [{"expression": {"arguments": [{"id": 8503, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8494, "src": "24858:12:9", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 8504, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8490, "src": "24872:8:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 8502, "name": "_mintPoolTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12768, "src": "24842:15:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 8505, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24842:39:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 8506, "nodeType": "ExpressionStatement", "src": "24842:39:9"}]}}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 8511, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 8509, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8492, "src": "24948:12:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 8510, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "24963:1:9", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "24948:16:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 8518, "nodeType": "IfStatement", "src": "24944:89:9", "trueBody": {"id": 8517, "nodeType": "Block", "src": "24966:67:9", "statements": [{"expression": {"arguments": [{"id": 8513, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8496, "src": "24996:11:9", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 8514, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8492, "src": "25009:12:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 8512, "name": "_mintPoolTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12768, "src": "24980:15:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 8515, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24980:42:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 8516, "nodeType": "ExpressionStatement", "src": "24980:42:9"}]}}]}, "id": 8520, "implemented": true, "kind": "function", "modifiers": [], "name": "_payFeesBpt", "nodeType": "FunctionDefinition", "parameters": {"id": 8497, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 8490, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 8520, "src": "24635:16:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8489, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24635:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8492, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 8520, "src": "24661:20:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8491, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24661:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8494, "mutability": "mutable", "name": "gyroTreasury", "nodeType": "VariableDeclaration", "scope": 8520, "src": "24691:20:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 8493, "name": "address", "nodeType": "ElementaryTypeName", "src": "24691:7:9", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 8496, "mutability": "mutable", "name": "balTreasury", "nodeType": "VariableDeclaration", "scope": 8520, "src": "24721:19:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 8495, "name": "address", "nodeType": "ElementaryTypeName", "src": "24721:7:9", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "24625:121:9"}, "returnParameters": {"id": 8498, "nodeType": "ParameterList", "parameters": [], "src": "24756:0:9"}, "scope": 8667, "src": "24605:434:9", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 8553, "nodeType": "Block", "src": "25218:324:9", "statements": [{"expression": {"components": [{"arguments": [{"expression": {"id": 8533, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12145, "src": "25268:14:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$12145_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 8534, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "PROTOCOL_SWAP_FEE_PERC_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 12135, "src": "25268:41:9", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 8531, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7254, "src": "25249:10:9", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$12130", "typeString": "contract IGyroConfig"}}, "id": 8532, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getUint", "nodeType": "MemberAccess", "referencedDeclaration": 12105, "src": "25249:18:9", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_uint256_$", "typeString": "function (bytes32) view external returns (uint256)"}}, "id": 8535, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25249:61:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"expression": {"id": 8538, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12145, "src": "25343:14:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$12145_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 8539, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "PROTOCOL_FEE_GYRO_PORTION_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 12138, "src": "25343:44:9", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 8536, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7254, "src": "25324:10:9", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$12130", "typeString": "contract IGyroConfig"}}, "id": 8537, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getUint", "nodeType": "MemberAccess", "referencedDeclaration": 12105, "src": "25324:18:9", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_uint256_$", "typeString": "function (bytes32) view external returns (uint256)"}}, "id": 8540, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25324:64:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"expression": {"id": 8543, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12145, "src": "25424:14:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$12145_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 8544, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "GYRO_TREASURY_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 12141, "src": "25424:32:9", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 8541, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7254, "src": "25402:10:9", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$12130", "typeString": "contract IGyroConfig"}}, "id": 8542, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getAddress", "nodeType": "MemberAccess", "referencedDeclaration": 12113, "src": "25402:21:9", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$", "typeString": "function (bytes32) view external returns (address)"}}, "id": 8545, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25402:55:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"expression": {"id": 8548, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12145, "src": "25493:14:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$12145_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 8549, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "BAL_TREASURY_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 12144, "src": "25493:31:9", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 8546, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7254, "src": "25471:10:9", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$12130", "typeString": "contract IGyroConfig"}}, "id": 8547, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getAddress", "nodeType": "MemberAccess", "referencedDeclaration": 12113, "src": "25471:21:9", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$", "typeString": "function (bytes32) view external returns (address)"}}, "id": 8550, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25471:54:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 8551, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "25235:300:9", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "functionReturnParameters": 8530, "id": 8552, "nodeType": "Return", "src": "25228:307:9"}]}, "id": 8554, "implemented": true, "kind": "function", "modifiers": [], "name": "_getFeesMetadata", "nodeType": "FunctionDefinition", "parameters": {"id": 8521, "nodeType": "ParameterList", "parameters": [], "src": "25070:2:9"}, "returnParameters": {"id": 8530, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 8523, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8554, "src": "25133:7:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8522, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25133:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8525, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8554, "src": "25154:7:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8524, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25154:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8527, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8554, "src": "25175:7:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 8526, "name": "address", "nodeType": "ElementaryTypeName", "src": "25175:7:9", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 8529, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8554, "src": "25196:7:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 8528, "name": "address", "nodeType": "ElementaryTypeName", "src": "25196:7:9", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "25119:94:9"}, "scope": 8667, "src": "25045:497:9", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 8653, "nodeType": "Block", "src": "26081:1264:9", "statements": [{"assignments": [8569], "declarations": [{"constant": false, "id": 8569, "mutability": "mutable", "name": "miscData", "nodeType": "VariableDeclaration", "scope": 8653, "src": "26091:16:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 8568, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "26091:7:9", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 8571, "initialValue": {"id": 8570, "name": "_miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4919, "src": "26110:9:9", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "26091:28:9"}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 8579, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 8572, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8569, "src": "26133:8:9", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 8573, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "oracleEnabled", "nodeType": "MemberAccess", "referencedDeclaration": 12243, "src": "26133:22:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bool_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (bool)"}}, "id": 8574, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26133:24:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 8578, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 8575, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "26161:5:9", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 8576, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "number", "nodeType": "MemberAccess", "src": "26161:12:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"id": 8577, "name": "lastChangeBlock", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8557, "src": "26176:15:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "26161:30:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "26133:58:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 8652, "nodeType": "IfStatement", "src": "26129:1210:9", "trueBody": {"id": 8651, "nodeType": "Block", "src": "26193:1146:9", "statements": [{"assignments": [8581], "declarations": [{"constant": false, "id": 8581, "mutability": "mutable", "name": "logSpotPrice", "nodeType": "VariableDeclaration", "scope": 8651, "src": "26207:19:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 8580, "name": "int256", "nodeType": "ElementaryTypeName", "src": "26207:6:9", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 8589, "initialValue": {"arguments": [{"id": 8584, "name": "balanceToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8559, "src": "26265:13:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8585, "name": "virtualParam0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8563, "src": "26280:13:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8586, "name": "balanceToken1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8561, "src": "26295:13:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8587, "name": "virtualParam1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8565, "src": "26310:13:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 8582, "name": "GyroTwoOracleMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17040, "src": "26229:17:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroTwoOracleMath_$17040_$", "typeString": "type(contract GyroTwoOracleMath)"}}, "id": 8583, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcLogSpotPrice", "nodeType": "MemberAccess", "referencedDeclaration": 16992, "src": "26229:35:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_int256_$", "typeString": "function (uint256,uint256,uint256,uint256) pure returns (int256)"}}, "id": 8588, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26229:95:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "VariableDeclarationStatement", "src": "26207:117:9"}, {"assignments": [8591], "declarations": [{"constant": false, "id": 8591, "mutability": "mutable", "name": "logBPTPrice", "nodeType": "VariableDeclaration", "scope": 8651, "src": "26339:18:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 8590, "name": "int256", "nodeType": "ElementaryTypeName", "src": "26339:6:9", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 8602, "initialValue": {"arguments": [{"id": 8594, "name": "balanceToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8559, "src": "26412:13:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8595, "name": "virtualParam0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8563, "src": "26443:13:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8596, "name": "balanceToken1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8561, "src": "26474:13:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8597, "name": "virtualParam1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8565, "src": "26505:13:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 8598, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8569, "src": "26536:8:9", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 8599, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "logTotalSupply", "nodeType": "MemberAccess", "referencedDeclaration": 12201, "src": "26536:23:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_int256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (int256)"}}, "id": 8600, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26536:25:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 8592, "name": "GyroTwoOracleMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17040, "src": "26360:17:9", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroTwoOracleMath_$17040_$", "typeString": "type(contract GyroTwoOracleMath)"}}, "id": 8593, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcLogBPTPrice", "nodeType": "MemberAccess", "referencedDeclaration": 17039, "src": "26360:34:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_int256_$returns$_t_int256_$", "typeString": "function (uint256,uint256,uint256,uint256,int256) pure returns (int256)"}}, "id": 8601, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26360:215:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "VariableDeclarationStatement", "src": "26339:236:9"}, {"assignments": [8604], "declarations": [{"constant": false, "id": 8604, "mutability": "mutable", "name": "oracleCurrentIndex", "nodeType": "VariableDeclaration", "scope": 8651, "src": "26590:26:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8603, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26590:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 8608, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 8605, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8569, "src": "26619:8:9", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 8606, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "oracleIndex", "nodeType": "MemberAccess", "referencedDeclaration": 12229, "src": "26619:20:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (uint256)"}}, "id": 8607, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26619:22:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "26590:51:9"}, {"assignments": [8610], "declarations": [{"constant": false, "id": 8610, "mutability": "mutable", "name": "oracleCurrentSampleInitialTimestamp", "nodeType": "VariableDeclaration", "scope": 8651, "src": "26655:43:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8609, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26655:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 8614, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 8611, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8569, "src": "26701:8:9", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 8612, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "oracleSampleCreationTimestamp", "nodeType": "MemberAccess", "referencedDeclaration": 12215, "src": "26701:38:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (uint256)"}}, "id": 8613, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26701:40:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "26655:86:9"}, {"assignments": [8616], "declarations": [{"constant": false, "id": 8616, "mutability": "mutable", "name": "oracleUpdatedIndex", "nodeType": "VariableDeclaration", "scope": 8651, "src": "26755:26:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8615, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26755:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 8626, "initialValue": {"arguments": [{"id": 8618, "name": "oracleCurrentSampleInitialTimestamp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8610, "src": "26819:35:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8619, "name": "oracleCurrentIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8604, "src": "26872:18:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8620, "name": "logSpotPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8581, "src": "26908:12:9", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 8621, "name": "logBPTPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8591, "src": "26938:11:9", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 8622, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8569, "src": "26967:8:9", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 8623, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "logInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 12187, "src": "26967:21:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_int256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (int256)"}}, "id": 8624, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26967:23:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "id": 8617, "name": "_processPriceData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14458, "src": "26784:17:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_int256_$_t_int256_$_t_int256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,int256,int256,int256) returns (uint256)"}}, "id": 8625, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26784:220:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "26755:249:9"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 8629, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 8627, "name": "oracleCurrentIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8604, "src": "27023:18:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"id": 8628, "name": "oracleUpdatedIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8616, "src": "27045:18:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "27023:40:9", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 8650, "nodeType": "IfStatement", "src": "27019:310:9", "trueBody": {"id": 8649, "nodeType": "Block", "src": "27065:264:9", "statements": [{"expression": {"id": 8635, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 8630, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8569, "src": "27135:8:9", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 8633, "name": "oracleUpdatedIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8616, "src": "27170:18:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 8631, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8569, "src": "27146:8:9", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 8632, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "setOracleIndex", "nodeType": "MemberAccess", "referencedDeclaration": 12325, "src": "27146:23:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_bytes32_$", "typeString": "function (bytes32,uint256) pure returns (bytes32)"}}, "id": 8634, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27146:43:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "27135:54:9", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 8636, "nodeType": "ExpressionStatement", "src": "27135:54:9"}, {"expression": {"id": 8643, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 8637, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8569, "src": "27207:8:9", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 8640, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "27260:5:9", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 8641, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "27260:15:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 8638, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8569, "src": "27218:8:9", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 8639, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "setOracleSampleCreationTimestamp", "nodeType": "MemberAccess", "referencedDeclaration": 12308, "src": "27218:41:9", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_bytes32_$", "typeString": "function (bytes32,uint256) pure returns (bytes32)"}}, "id": 8642, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27218:58:9", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "27207:69:9", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 8644, "nodeType": "ExpressionStatement", "src": "27207:69:9"}, {"expression": {"id": 8647, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 8645, "name": "_miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4919, "src": "27294:9:9", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 8646, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8569, "src": "27306:8:9", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "27294:20:9", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 8648, "nodeType": "ExpressionStatement", "src": "27294:20:9"}]}}]}}]}, "documentation": {"id": 8555, "nodeType": "StructuredDocumentation", "src": "25548:333:9", "text": " @dev Updates the Price Oracle based on the Pool's current state (balances, BPT supply and invariant). Must be\n called on *all* state-changing functions with the balances *before* the state change happens, and with\n `lastChangeBlock` as the number of the block in which any of the balances last changed."}, "id": 8654, "implemented": true, "kind": "function", "modifiers": [], "name": "_updateOracle", "nodeType": "FunctionDefinition", "parameters": {"id": 8566, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 8557, "mutability": "mutable", "name": "lastChangeBlock", "nodeType": "VariableDeclaration", "scope": 8654, "src": "25918:23:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8556, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25918:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8559, "mutability": "mutable", "name": "balanceToken0", "nodeType": "VariableDeclaration", "scope": 8654, "src": "25951:21:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8558, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25951:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8561, "mutability": "mutable", "name": "balanceToken1", "nodeType": "VariableDeclaration", "scope": 8654, "src": "25982:21:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8560, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25982:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8563, "mutability": "mutable", "name": "virtualParam0", "nodeType": "VariableDeclaration", "scope": 8654, "src": "26013:21:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8562, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26013:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8565, "mutability": "mutable", "name": "virtualParam1", "nodeType": "VariableDeclaration", "scope": 8654, "src": "26044:21:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8564, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26044:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "25908:163:9"}, "returnParameters": {"id": 8567, "nodeType": "ParameterList", "parameters": [], "src": "26081:0:9"}, "scope": 8667, "src": "25886:1459:9", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [6636], "body": {"id": 8665, "nodeType": "Block", "src": "27772:30:9", "statements": []}, "documentation": {"id": 8655, "nodeType": "StructuredDocumentation", "src": "27351:274:9", "text": " @dev this variant of the function, called from `onJoinPool()` and `onExitPool()`, which we inherit, is a no-op. We instead have moved responsibility for updating the oracle to `_onJoinPool()` and `_onExitPool()` and the above version is called from there."}, "id": 8666, "implemented": true, "kind": "function", "modifiers": [], "name": "_updateOracle", "nodeType": "FunctionDefinition", "overrides": {"id": 8663, "nodeType": "OverrideSpecifier", "overrides": [], "src": "27763:8:9"}, "parameters": {"id": 8662, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 8657, "mutability": "mutable", "name": "lastChangeBlock", "nodeType": "VariableDeclaration", "scope": 8666, "src": "27662:23:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8656, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27662:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8659, "mutability": "mutable", "name": "balanceToken0", "nodeType": "VariableDeclaration", "scope": 8666, "src": "27695:21:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8658, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27695:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8661, "mutability": "mutable", "name": "balanceToken1", "nodeType": "VariableDeclaration", "scope": 8666, "src": "27726:21:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8660, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27726:7:9", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "27652:101:9"}, "returnParameters": {"id": 8664, "nodeType": "ParameterList", "parameters": [], "src": "27772:0:9"}, "scope": 8667, "src": "27630:172:9", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}], "scope": 8668, "src": "1263:26541:9"}], "src": "688:27117:9"}, "bytecode": "", "bytecodeSha1": "d09b81b57176cbce21a11b9837a4d24aac9d64e6", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.7.1+commit.f4a555be"}, "contractName": "GyroTwoPool", "coverageMap": {"branches": {"13": {}, "14": {}, "15": {"GyroPoolMath._calcProtocolFees": {"452": [5695, 5732, false]}, "GyroPoolMath._intLog2Halved": {"471": [10540, 10553, false], "472": [10623, 10635, false], "473": [10704, 10716, false], "474": [10785, 10797, false], "475": [10865, 10876, false], "476": [10943, 10954, false]}, "GyroPoolMath._makeInitialGuess": {"453": [8916, 8939, false], "454": [9061, 9072, false], "455": [9145, 9157, false], "456": [9220, 9232, false], "457": [9305, 9317, false], "458": [9380, 9392, false], "459": [9465, 9477, false], "460": [9540, 9552, false], "461": [9625, 9637, false], "462": [9700, 9712, false], "463": [9784, 9797, false], "464": [9860, 9873, false], "465": [9945, 9958, false], "466": [10021, 10034, false], "467": [10106, 10119, false], "468": [10182, 10195, false], "469": [10267, 10280, false], "470": [10343, 10356, false]}, "GyroPoolMath._sqrt": {"449": [7350, 7360, false], "450": [8091, 8140, false], "451": [8144, 8193, true]}, "GyroPoolMath.liquidityInvariantUpdate": {"448": [11711, 11724, false]}}, "18": {"BalancerPoolToken.allowance": {"437": [2364, 2394, false]}, "BalancerPoolToken.decreaseAllowance": {"436": [3611, 3637, false]}, "BalancerPoolToken.transferFrom": {"434": [3030, 3050, false], "435": [3054, 3085, false]}}, "21": {"BasePoolAuthorization._canPerform": {"438": [2112, 2140, false]}}, "24": {}, "25": {}, "26": {}, "27": {}, "28": {}, "29": {}, "31": {}, "33": {}, "34": {}, "35": {}, "36": {}, "39": {}, "40": {}, "41": {}, "42": {"InputHelpers.ensureArrayIsSorted": {"477": [1496, 1512, false]}}, "43": {"LogCompression.toLowResLog": {"478": [2209, 2215, true]}}, "44": {"TemporarilyPausable._setPaused": {"495": [3849, 3855, false]}}, "45": {"WordCodec.decodeInt22": {"497": [12558, 12577, true]}, "WordCodec.insertBool": {"496": [3342, 3347, true]}}, "46": {"FixedPoint.divDown": {"445": [2619, 2625, false]}, "FixedPoint.divUp": {"447": [2978, 2984, false]}, "FixedPoint.mulUp": {"446": [2046, 2058, false]}}, "47": {"LogExpMath._ln": {"481": [14218, 14228, false], "482": [15949, 15965, false], "483": [16073, 16089, false], "484": [16469, 16476, false], "485": [16561, 16568, false], "486": [16653, 16660, false], "487": [16745, 16752, false], "488": [16837, 16844, false], "489": [16929, 16936, false], "490": [17021, 17028, false], "491": [17113, 17120, false], "492": [17205, 17213, false], "493": [17300, 17308, false]}, "LogExpMath.ln": {"479": [13889, 13910, false], "480": [13914, 13935, false]}}, "48": {"Math.divUp": {"494": [2443, 2449, false]}}, "49": {}, "5": {"ExtensibleWeightedPool2Tokens._cacheInvariantAndSupply": {"441": [34813, 34837, false]}, "ExtensibleWeightedPool2Tokens._normalizedWeights": {"444": [9294, 9300, true]}, "ExtensibleWeightedPool2Tokens._queryAction": {"443": [44584, 44611, false]}, "ExtensibleWeightedPool2Tokens._scalingFactor": {"442": [41160, 41166, true]}, "ExtensibleWeightedPool2Tokens.enableOracle": {"439": [8371, 8388, false]}, "ExtensibleWeightedPool2Tokens.onExitPool": {"440": [25190, 25204, false]}}, "50": {}, "51": {}, "52": {}, "53": {}, "54": {}, "55": {}, "56": {}, "57": {}, "58": {}, "59": {}, "6": {}, "60": {}, "61": {}, "62": {}, "63": {}, "7": {}, "8": {}, "9": {"GyroTwoPool._calculateCurrentValues": {"419": [9463, 9478, true], "420": [9537, 9552, true], "421": [9870, 9885, true], "422": [9949, 9964, true]}, "GyroTwoPool._doExit": {"427": [20893, 20954, false]}, "GyroTwoPool._doJoin": {"429": [15597, 15662, false]}, "GyroTwoPool._getDueProtocolFeeAmounts": {"431": [24149, 24173, false]}, "GyroTwoPool._onExitPool": {"423": [18273, 18287, false]}, "GyroTwoPool._payFeesBpt": {"432": [24814, 24826, false], "433": [24948, 24964, false]}, "GyroTwoPool._sqrtParameters": {"428": [2727, 2737, true]}, "GyroTwoPool._updateOracle": {"424": [26133, 26157, false], "425": [26161, 26191, false], "426": [27023, 27063, false]}, "GyroTwoPool._virtualParameters": {"430": [3897, 3907, true]}, "GyroTwoPool.onSwap": {"414": [5656, 5671, true], "415": [5720, 5735, true], "416": [5784, 5799, true], "417": [5848, 5863, true], "418": [5923, 5963, false]}}}, "statements": {"13": {}, "14": {}, "15": {"GyroPoolMath._calcAllTokensInGivenExactBptOut": {"378": [2655, 2697], "379": [2767, 2823], "380": [2748, 2751]}, "GyroPoolMath._calcProtocolFees": {"372": [6110, 6123], "373": [7108, 7139]}, "GyroPoolMath._calcTokensOutGivenExactBptIn": {"375": [4187, 4230], "376": [4300, 4360], "377": [4281, 4284]}, "GyroPoolMath._intLog2Halved": {"401": [10569, 10578], "402": [10592, 10599], "403": [10651, 10659], "404": [10673, 10680], "405": [10732, 10740], "406": [10754, 10761], "407": [10813, 10821], "408": [10835, 10841], "409": [10892, 10899], "410": [10913, 10919], "411": [10970, 10977], "412": [10991, 10997], "413": [11069, 11075]}, "GyroPoolMath._makeInitialGuess": {"382": [8955, 9026], "383": [9092, 9113], "384": [9177, 9188], "385": [9252, 9273], "386": [9337, 9348], "387": [9412, 9433], "388": [9497, 9508], "389": [9572, 9593], "390": [9657, 9668], "391": [9732, 9752], "392": [9817, 9828], "393": [9893, 9913], "394": [9978, 9989], "395": [10054, 10074], "396": [10139, 10150], "397": [10215, 10235], "398": [10300, 10311], "399": [10376, 10396], "400": [10424, 10436]}, "GyroPoolMath._sqrt": {"306": [7376, 7384], "307": [7480, 7536], "308": [7546, 7602], "309": [7612, 7668], "310": [7678, 7734], "311": [7744, 7800], "312": [7810, 7866], "313": [7876, 7932], "314": [8083, 8210]}, "GyroPoolMath.liquidityInvariantUpdate": {"238": [11898, 11932], "239": [12148, 12182]}}, "18": {"BalancerPoolToken._burnPoolTokens": {"180": [4092, 4113]}, "BalancerPoolToken._mintPoolTokens": {"210": [3979, 4003]}, "BalancerPoolToken.allowance": {"95": [2410, 2428], "96": [2459, 2497]}, "BalancerPoolToken.decreaseAllowance": {"70": [3653, 3685], "71": [3772, 3828], "72": [3849, 3860]}, "BalancerPoolToken.getVault": {"57": [1938, 1951]}, "BalancerPoolToken.transferFrom": {"11": [2867, 2968], "12": [2979, 3015], "13": [3218, 3273], "14": [3294, 3305]}}, "21": {"BasePoolAuthorization._canPerform": {"219": [2251, 2282], "220": [2428, 2496]}, "BasePoolAuthorization.getAuthorizer": {"74": [1933, 1956]}, "BasePoolAuthorization.getOwner": {"56": [1836, 1849]}}, "24": {}, "25": {}, "26": {"Buffer.add": {"381": [1504, 1534]}, "Buffer.next": {"303": [1276, 1296]}}, "27": {"PoolPriceOracle._getPastAccumulator": {"175": [6913, 6991]}, "PoolPriceOracle._getSample": {"162": [7580, 7602]}, "PoolPriceOracle._processPriceData": {"261": [6562, 6620], "262": [6675, 6705]}, "PoolPriceOracle.dirtyUninitializedOracleSamples": {"18": [3512, 3592], "19": [3947, 3971], "20": [3876, 3879]}, "PoolPriceOracle.getLargestSafeQueryWindow": {"98": [4117, 4132]}, "PoolPriceOracle.getLatest": {"75": [4234, 4310]}, "PoolPriceOracle.getPastAccumulators": {"40": [4935, 4973], "41": [5137, 5155], "42": [5169, 5241], "43": [5118, 5121]}, "PoolPriceOracle.getSample": {"37": [2874, 2932], "38": [2987, 3009]}, "PoolPriceOracle.getTimeWeightedAverage": {"8": [4496, 4535], "9": [4654, 4739], "10": [4635, 4638]}}, "28": {}, "29": {"Samples._accLogBptPrice": {"245": [6629, 6681]}, "Samples._accLogInvariant": {"247": [7116, 7168]}, "Samples._accLogPairPrice": {"243": [6143, 6196]}, "Samples._instLogBptPrice": {"244": [6388, 6441]}, "Samples._instLogInvariant": {"246": [6874, 6927]}, "Samples._instLogPairPrice": {"242": [5899, 5953]}, "Samples.pack": {"129": [7553, 8032]}, "Samples.timestamp": {"130": [5660, 5705]}, "Samples.unpack": {"163": [8468, 8508], "164": [8518, 8560], "165": [8570, 8608], "166": [8618, 8658], "167": [8668, 8708], "168": [8718, 8760], "169": [8770, 8800]}, "Samples.update": {"302": [4143, 4413]}}, "31": {}, "33": {"WeightedPool2TokensMiscData.logInvariant": {"144": [2316, 2362]}, "WeightedPool2TokensMiscData.logTotalSupply": {"145": [2532, 2581]}, "WeightedPool2TokensMiscData.oracleEnabled": {"148": [3221, 3267]}, "WeightedPool2TokensMiscData.oracleIndex": {"147": [3019, 3065]}, "WeightedPool2TokensMiscData.oracleSampleCreationTimestamp": {"146": [2786, 2852]}, "WeightedPool2TokensMiscData.setLogInvariant": {"223": [3697, 3758]}, "WeightedPool2TokensMiscData.setLogTotalSupply": {"224": [3985, 4051]}, "WeightedPool2TokensMiscData.setOracleEnabled": {"100": [4911, 4973]}, "WeightedPool2TokensMiscData.setOracleIndex": {"263": [4636, 4696]}, "WeightedPool2TokensMiscData.setOracleSampleCreationTimestamp": {"264": [4322, 4407]}, "WeightedPool2TokensMiscData.setSwapFeePercentage": {"101": [5197, 5270]}, "WeightedPool2TokensMiscData.swapFeePercentage": {"149": [3424, 3477]}}, "34": {"WeightedPoolUserDataHelpers.exactBptInForTokensOut": {"374": [2448, 2520]}, "WeightedPoolUserDataHelpers.initialAmountsIn": {"280": [1311, 1383]}, "WeightedPoolUserDataHelpers.joinKind": {"279": [964, 1016]}}, "35": {"Authentication._authenticateCaller": {"107": [2404, 2474]}, "Authentication.getActionId": {"53": [2842, 2910]}}, "36": {"_require": {"116": [946, 964]}}, "39": {}, "40": {}, "41": {}, "42": {"InputHelpers.ensureArrayIsSorted": {"99": [1369, 1402], "215": [1528, 1535], "216": [1689, 1740], "217": [1754, 1772], "218": [1630, 1633]}, "InputHelpers.ensureInputLengthMatch": {"150": [888, 934]}}, "43": {"LogCompression.toLowResLog": {"222": [2298, 2342]}}, "44": {"TemporarilyPausable._ensureNotPaused": {"123": [4272, 4311]}, "TemporarilyPausable._getBufferPeriodEndTime": {"114": [5084, 5111]}, "TemporarilyPausable._getPauseWindowEndTime": {"113": [4969, 4995]}, "TemporarilyPausable._isNotPaused": {"112": [4712, 4774]}, "TemporarilyPausable._setPaused": {"108": [3871, 3952], "109": [3983, 4066], "110": [4087, 4103], "111": [4113, 4144]}, "TemporarilyPausable.getPausedState": {"5": [3374, 3398], "6": [3408, 3453], "7": [3463, 3510]}}, "45": {"WordCodec.decodeBool": {"233": [9819, 9866]}, "WordCodec.decodeInt22": {"231": [12551, 12615]}, "WordCodec.decodeInt53": {"299": [13160, 13224]}, "WordCodec.decodeUint10": {"232": [10628, 10669]}, "WordCodec.decodeUint31": {"228": [11156, 11197]}, "WordCodec.decodeUint64": {"234": [11684, 11725]}, "WordCodec.encodeInt22": {"227": [9118, 9171]}, "WordCodec.encodeInt53": {"226": [9547, 9600]}, "WordCodec.encodeUint": {"225": [8696, 8727]}, "WordCodec.insertBool": {"103": [3305, 3367]}, "WordCodec.insertInt22": {"290": [7697, 7764]}, "WordCodec.insertUint10": {"304": [4969, 5014]}, "WordCodec.insertUint31": {"305": [6012, 6057]}, "WordCodec.insertUint64": {"104": [7104, 7149]}}, "46": {"FixedPoint.complement": {"197": [4885, 4917]}, "FixedPoint.divDown": {"171": [2566, 2604], "172": [2641, 2649], "173": [2721, 2772], "174": [2803, 2823]}, "FixedPoint.divUp": {"198": [2925, 2963], "199": [3000, 3008], "200": [3080, 3131], "201": [3479, 3511]}, "FixedPoint.mulDown": {"297": [1761, 1818], "298": [1829, 1849]}, "FixedPoint.mulUp": {"190": [1974, 2031], "191": [2074, 2082], "192": [2430, 2462]}}, "47": {"LogExpMath._ln": {"331": [14549, 14585], "332": [15981, 15988], "333": [16039, 16048], "334": [16105, 16112], "335": [16163, 16172], "336": [16314, 16324], "337": [16334, 16342], "338": [16492, 16513], "339": [16584, 16605], "340": [16619, 16628], "341": [16676, 16697], "342": [16711, 16720], "343": [16768, 16789], "344": [16803, 16812], "345": [16860, 16881], "346": [16895, 16904], "347": [16952, 16973], "348": [16987, 16996], "349": [17044, 17065], "350": [17079, 17088], "351": [17136, 17157], "352": [17171, 17180], "353": [17229, 17251], "354": [17265, 17275], "355": [17324, 17346], "356": [17360, 17370], "357": [18279, 18311], "358": [18321, 18341], "359": [18352, 18384], "360": [18394, 18414], "361": [18425, 18457], "362": [18467, 18487], "363": [18498, 18530], "364": [18540, 18560], "365": [18571, 18603], "366": [18613, 18634], "367": [18793, 18807], "368": [19073, 19103]}, "LogExpMath._ln_36": {"315": [19646, 19657], "316": [21063, 21083], "317": [20456, 20476], "318": [20414, 20446], "319": [20529, 20549], "320": [20487, 20519], "321": [20602, 20622], "322": [20560, 20592], "323": [20675, 20695], "324": [20633, 20665], "325": [20748, 20769], "326": [20706, 20738], "327": [20822, 20843], "328": [20780, 20812], "329": [20896, 20917], "330": [20854, 20886]}, "LogExpMath.ln": {"287": [13838, 13875], "288": [13951, 13976], "289": [14007, 14020]}}, "48": {"Math.divDown": {"240": [2238, 2276], "241": [2286, 2298]}, "Math.divUp": {"256": [2390, 2428], "257": [2465, 2473], "258": [2504, 2526]}, "Math.mul": {"170": [1897, 1948]}, "Math.sub": {"102": [1025, 1062]}}, "49": {}, "5": {"ExtensibleWeightedPool2Tokens._cacheInvariantAndSupply": {"126": [34853, 34932], "127": [34946, 35026], "128": [35040, 35060]}, "ExtensibleWeightedPool2Tokens._downscaleDown": {"194": [42212, 42254]}, "ExtensibleWeightedPool2Tokens._downscaleDownArray": {"158": [42533, 42592], "159": [42602, 42662]}, "ExtensibleWeightedPool2Tokens._downscaleUp": {"196": [42974, 43014]}, "ExtensibleWeightedPool2Tokens._downscaleUpArray": {"185": [43289, 43346], "186": [43356, 43414]}, "ExtensibleWeightedPool2Tokens._getAuthorizer": {"202": [43875, 43908]}, "ExtensibleWeightedPool2Tokens._getOracleIndex": {"115": [35161, 35191]}, "ExtensibleWeightedPool2Tokens._isOwnerOnlyAction": {"286": [7680, 7850]}, "ExtensibleWeightedPool2Tokens._normalizedWeights": {"212": [9044, 9091], "213": [9101, 9149], "214": [9159, 9183], "285": [9287, 9342]}, "ExtensibleWeightedPool2Tokens._queryAction": {"160": [48785, 48808], "161": [49117, 49146]}, "ExtensibleWeightedPool2Tokens._scalingFactor": {"137": [41153, 41202]}, "ExtensibleWeightedPool2Tokens._setOracleEnabled": {"124": [8513, 8560], "125": [8570, 8604]}, "ExtensibleWeightedPool2Tokens._setSwapFeePercentage": {"132": [7251, 7338], "133": [7348, 7435], "134": [7446, 7507], "135": [7517, 7565]}, "ExtensibleWeightedPool2Tokens._upscale": {"138": [41470, 41508]}, "ExtensibleWeightedPool2Tokens._upscaleArray": {"178": [41775, 41830], "179": [41840, 41896]}, "ExtensibleWeightedPool2Tokens.enableOracle": {"15": [8258, 8281], "16": [8404, 8430]}, "ExtensibleWeightedPool2Tokens.getLastInvariant": {"61": [9425, 9446]}, "ExtensibleWeightedPool2Tokens.getMiscData": {"28": [6460, 6498], "29": [6508, 6550], "30": [6560, 6632], "31": [6642, 6678], "32": [6688, 6728], "33": [6738, 6786]}, "ExtensibleWeightedPool2Tokens.getNormalizedWeights": {"97": [8852, 8879]}, "ExtensibleWeightedPool2Tokens.getPoolId": {"23": [6078, 6092]}, "ExtensibleWeightedPool2Tokens.getRate": {"39": [40271, 40328]}, "ExtensibleWeightedPool2Tokens.getSwapFeePercentage": {"34": [6871, 6907]}, "ExtensibleWeightedPool2Tokens.onExitPool": {"46": [24219, 24242], "47": [24726, 24762], "48": [24874, 24905], "49": [24915, 24957], "50": [25220, 25246], "51": [25267, 25309]}, "ExtensibleWeightedPool2Tokens.onJoinPool": {"82": [14384, 14466], "83": [14761, 14819], "84": [14833, 14874], "85": [14888, 14943], "86": [15030, 15058], "87": [15148, 15188], "88": [15219, 15242], "89": [15319, 15375], "90": [15390, 15669], "91": [15783, 15823], "92": [15910, 15938], "93": [16037, 16079], "94": [16241, 16267]}, "ExtensibleWeightedPool2Tokens.queryExit": {"35": [37674, 37729], "36": [37740, 37995]}, "ExtensibleWeightedPool2Tokens.queryJoin": {"54": [36165, 36220], "55": [36231, 36484]}, "ExtensibleWeightedPool2Tokens.setPaused": {"3": [8738, 8756]}, "ExtensibleWeightedPool2Tokens.setSwapFeePercentage": {"22": [7122, 7162]}}, "50": {"EIP712._domainSeparatorV4": {"131": [2466, 2567]}, "EIP712._hashTypedDataV4": {"204": [3295, 3375]}}, "51": {"ERC20._approve": {"105": [9468, 9504], "106": [9514, 9551]}, "ERC20._burn": {"249": [8587, 8655], "250": [8666, 8715], "251": [8726, 8814], "252": [8824, 8863], "253": [8873, 8915]}, "ERC20._mint": {"281": [7973, 8022], "282": [8033, 8072], "283": [8082, 8133], "284": [8143, 8185]}, "ERC20._transfer": {"117": [7195, 7266], "118": [7276, 7348], "119": [7359, 7406], "120": [7417, 7505], "121": [7515, 7570], "122": [7580, 7620]}, "ERC20.allowance": {"211": [3993, 4027]}, "ERC20.approve": {"1": [4271, 4308], "2": [4318, 4329]}, "ERC20.balanceOf": {"45": [3422, 3447]}, "ERC20.decimals": {"17": [3098, 3114]}, "ERC20.increaseAllowance": {"24": [5688, 5767]}, "ERC20.name": {"0": [2200, 2212]}, "ERC20.symbol": {"60": [2396, 2410]}, "ERC20.totalSupply": {"4": [3253, 3272]}, "ERC20.transfer": {"73": [3759, 3799]}}, "52": {"ERC20Permit.DOMAIN_SEPARATOR": {"21": [2438, 2465]}, "ERC20Permit.nonces": {"52": [2207, 2228]}, "ERC20Permit.permit": {"78": [1575, 1635], "79": [1902, 1981], "80": [1992, 2018], "81": [2028, 2059]}}, "53": {}, "54": {}, "55": {"SafeMath.add": {"136": [1019, 1056]}, "SafeMath.sub": {"221": [1861, 1888], "300": [1430, 1467]}}, "56": {}, "57": {}, "58": {}, "59": {}, "6": {}, "60": {}, "61": {}, "62": {}, "63": {}, "7": {"GyroTwoMath._calcInGivenOut": {"269": [12841, 12912], "270": [12922, 13001], "271": [13378, 13451], "272": [13472, 13547]}, "GyroTwoMath._calcOutGivenIn": {"265": [9922, 9997], "266": [10374, 10450], "267": [10471, 10542], "268": [10615, 10694]}, "GyroTwoMath._calculateInvariant": {"203": [4409, 4455]}, "GyroTwoMath._calculateQuadratic": {"278": [7054, 7096]}, "GyroTwoMath._calculateQuadraticTerms": {"273": [5011, 5062], "274": [5197, 5220], "275": [5234, 5271], "276": [5464, 5546], "277": [5773, 5810]}, "GyroTwoMath._calculateVirtualParameter0": {"370": [13763, 13798]}, "GyroTwoMath._calculateVirtualParameter1": {"369": [14015, 14051]}}, "8": {"GyroTwoOracleMath._calcLogBPTPrice": {"260": [5362, 5406]}, "GyroTwoOracleMath._calcLogSpotPrice": {"259": [3405, 3449]}, "GyroTwoOracleMath._calcSpotPrice": {"301": [1966, 2137]}}, "9": {"GyroTwoPool._calculateCurrentValues": {"139": [9449, 9513], "140": [9523, 9587], "141": [9657, 9747], "142": [9853, 9921], "143": [9931, 10000]}, "GyroTwoPool._distributeFees": {"235": [22857, 22919]}, "GyroTwoPool._doExit": {"236": [20970, 21045], "237": [21076, 21111]}, "GyroTwoPool._doJoin": {"254": [15678, 15756], "255": [15787, 15822]}, "GyroTwoPool._exitExactBPTInForTokensOut": {"296": [22023, 22055]}, "GyroTwoPool._getDueProtocolFeeAmounts": {"292": [24189, 24229], "293": [24534, 24592]}, "GyroTwoPool._getFeesMetadata": {"371": [25228, 25535]}, "GyroTwoPool._getVirtualParameters": {"229": [3511, 3584], "230": [3594, 3668]}, "GyroTwoPool._onExitPool": {"151": [18892, 18982], "152": [18997, 19035], "153": [19050, 19105], "154": [19563, 19675], "155": [19906, 19961], "156": [20306, 20340], "157": [20473, 20523]}, "GyroTwoPool._onInitializePool": {"205": [11125, 11195], "206": [11272, 11328], "207": [11338, 11362], "208": [11815, 11850], "209": [11861, 11893]}, "GyroTwoPool._onJoinPool": {"181": [14296, 14386], "182": [14397, 14435], "183": [14960, 15072], "184": [15195, 15245]}, "GyroTwoPool._onSwapGivenIn": {"193": [7675, 7809]}, "GyroTwoPool._onSwapGivenOut": {"195": [8148, 8282]}, "GyroTwoPool._payFeesBpt": {"294": [24842, 24881], "295": [24980, 25022]}, "GyroTwoPool._sqrtParameters": {"176": [2482, 2526], "177": [2536, 2581], "248": [2720, 2762]}, "GyroTwoPool._updateOracle": {"187": [27135, 27189], "188": [27207, 27276], "189": [27294, 27314]}, "GyroTwoPool._virtualParameters": {"291": [3878, 4071]}, "GyroTwoPool.calculateCurrentValues": {"25": [8754, 8817], "26": [8827, 8893], "27": [8903, 8983]}, "GyroTwoPool.getInvariant": {"76": [4489, 4512], "77": [4523, 4601]}, "GyroTwoPool.getSqrtParameters": {"44": [2340, 2364]}, "GyroTwoPool.getVirtualParameters": {"58": [3175, 3198], "59": [3208, 3304]}, "GyroTwoPool.onSwap": {"62": [5098, 5161], "63": [5171, 5237], "64": [5592, 5908], "65": [6346, 6424], "66": [6635, 6690], "67": [6721, 6785], "68": [6994, 7049], "69": [7269, 7327]}}}}, "dependencies": ["Authentication", "BalancerPoolToken", "BasePoolAuthorization", "Buffer", "EIP712", "ERC20", "ERC20Permit", "Errors", "ExtensibleWeightedPool2Tokens", "FixedPoint", "Gyro2PoolErrors", "GyroConfigKeys", "GyroPoolMath", "GyroTwoMath", "GyroTwoOracleMath", "IAsset", "IAuthentication", "IAuthorizer", "IBasePool", "IERC20", "IERC20Permit", "IFlashLoanRecipient", "IGyroConfig", "IMinimalSwapInfoPool", "IPoolPriceOracle", "IPoolSwapStructs", "IPriceOracle", "IProtocolFeesCollector", "ISignaturesValidator", "ITemporarilyPausable", "IVault", "IWETH", "InputHelpers", "LogCompression", "LogExpMath", "Math", "PoolPriceOracle", "QueryProcessor", "SafeMath", "Samples", "TemporarilyPausable", "WeightedMath", "WeightedPool2TokensMiscData", "WeightedPoolUserDataHelpers", "WordCodec"], "deployedBytecode": "608060405234801561001057600080fd5b506004361061027f5760003560e01c8063707dcd1e1161015c5780639d2c110c116100ce578063c0ff1a1511610087578063c0ff1a151461056a578063d505accf14610572578063d5c096c414610585578063dd62ed3e14610598578063f89f27ed146105ab578063ffd088eb146105b35761027f565b80639d2c110c1461050e578063a457c2d714610521578063a9059cbb14610534578063aaabadc514610547578063b10be7391461054f578063b48b5b40146105625761027f565b806387ec68171161012057806387ec6817146104d3578063893d20e8146104e65780638d928af8146104ee5780638dd9f89d146104f657806395d89b41146104fe5780639b02cdde146105065761027f565b8063707dcd1e1461046457806370a082311461047957806374f3b0091461048c5780637ecebe00146104ad578063851c1bb3146104c05761027f565b806338e9922e116101f55780634a6b0b15116101b95780634a6b0b15146103d357806355c67628146103ed5780636028bfd4146103f557806360d1507c14610416578063679aefce1461043c5780636b843239146104445761027f565b806338e9922e1461036e57806338fff2d01461038157806339509351146103895780633c4dd5bb1461039c57806344bbdb55146103be5761027f565b80631dccd830116102475780631dccd8301461030357806323b872dd14610323578063292c914a14610336578063313ce5671461033e5780633331bc36146103535780633644e515146103665761027f565b806306fdde0314610284578063095ea7b3146102a257806316c38b3c146102c257806318160ddd146102d75780631c0de051146102ec575b600080fd5b61028c6105bb565b6040516102999190614abb565b60405180910390f35b6102b56102b03660046141d2565b610651565b6040516102999190614910565b6102d56102d0366004614440565b610668565b005b6102df61067c565b6040516102999190614933565b6102f4610682565b6040516102999392919061491b565b610316610311366004614386565b6106ab565b60405161029991906148d8565b6102b561033136600461411d565b6107ce565b6102d5610842565b610346610876565b6040516102999190614b63565b6102d5610361366004614779565b61087f565b6102df6108f7565b6102d561037c366004614761565b610906565b6102df61091f565b6102b56103973660046141d2565b610943565b6103af6103aa36600461479a565b61097e565b60405161029993929190614b4d565b6103c66109d1565b604051610299919061484f565b6103db6109e0565b60405161029996959493929190614a09565b6102df610a3b565b610408610403366004614478565b610a48565b604051610299929190614b34565b610429610424366004614761565b610a79565b60405161029997969594939291906149d9565b6102df610ac2565b6104576104523660046142c8565b610ae7565b6040516102999190614863565b61046c610b9d565b60405161029991906148a7565b6102df6104873660046140ad565b610bad565b61049f61049a366004614478565b610bcc565b6040516102999291906148eb565b6102df6104bb3660046140ad565b610c71565b6102df6104ce366004614574565b610c8c565b6104086104e1366004614478565b610cde565b6103c6610d03565b6103c6610d27565b610316610d4b565b61028c610e54565b6102df610eb5565b6102df61051c366004614666565b610ebb565b6102b561052f3660046141d2565b611081565b6102b56105423660046141d2565b6110bf565b6103c66110cc565b6102df61055d366004614633565b6110d6565b6102df61116b565b6102df611171565b6102d561058036600461415d565b611244565b61049f610593366004614478565b61138d565b6102df6105a63660046140e5565b6114ad565b6103166114ea565b6102df6114f4565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106475780601f1061061c57610100808354040283529160200191610647565b820191906000526020600020905b81548152906001019060200180831161062a57829003601f168201915b5050505050905090565b600061065e33848461157e565b5060015b92915050565b6106706115e6565b61067981611614565b50565b60025490565b600080600061068f611692565b15925061069a6116af565b91506106a46116d3565b9050909192565b606081516001600160401b03811180156106c457600080fd5b506040519080825280602002602001820160405280156106ee578160200160208202803683370190505b50905060006106fb6116f7565b905060005b83518110156107c75773__$85f042f43089d976c21d0d184f206dc395$__6379eaef82600886848151811061073157fe5b6020026020010151856040518463ffffffff1660e01b815260040161075893929190614a7f565b60206040518083038186803b15801561077057600080fd5b505af4158015610784573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a8919061464e565b8382815181106107b457fe5b6020908102919091010152600101610700565b5050919050565b6000806107db85336114ad565b90506107ff336001600160a01b03871614806107f75750838210155b61019e611704565b61080a858585611712565b336001600160a01b0386161480159061082557506000198114155b1561083757610837853385840361157e565b506001949350505050565b61084a6117f2565b6108526115e6565b61085c6001611805565b600061086661067c565b111561087457610874611845565b565b60055460ff1690565b61089a818310801561089357506104008211155b6064611704565b60006108af600160008060008060008061188d565b9050825b828110156108f1576000818152600860205260409020546108d3906118ed565b6108e95760008181526008602052604090208290555b6001016108b3565b50505050565b60006109016118f9565b905090565b61090e6115e6565b6109166117f2565b61067981611996565b7f000000000000000000000000000000000000000000000000000000000000000090565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161065e91859061097990866119ff565b61157e565b60008060008061098d85611a11565b9050600061099b8615611a11565b90506109a78883611a65565b97506109b38782611a65565b96506109c0888888611a71565b945094509450505093509350939050565b600b546001600160a01b031681565b600080600080600080600060095490506109f981611b4d565b9650610a0481611b59565b9550610a0f81611b66565b9450610a1a81611b73565b9350610a2581611b80565b9250610a3081611b8d565b915050909192939495565b6000610901600954611b8d565b60006060610a5886516002611b9a565b610a6d89898989898989611ba7611cc7611d45565b97509795505050505050565b6000806000806000806000610a94610400891061013b611704565b6000610a9f89611e59565b9050610aaa81611e6b565b959f949e50929c50909a509850965090945092505050565b6000610901610acf61067c565b610ae1610ada611171565b6002611ece565b90611ef2565b606081516001600160401b0381118015610b0057600080fd5b50604051908082528060200260200182016040528015610b2a578160200160208202803683370190505b5090506000610b376116f7565b9050610b41613f79565b60005b8451811015610b9557848181518110610b5957fe5b60200260200101519150610b768260000151848460200151611f43565b848281518110610b8257fe5b6020908102919091010152600101610b44565b505050919050565b610ba5613f90565b610901611fdc565b6001600160a01b0381166000908152602081905260409020545b919050565b60608088610bf6610bdb610d27565b6001600160a01b0316336001600160a01b03161460cd611704565b610c0b610c0161091f565b82146101f4611704565b610c1487612002565b6000606080610c288d8d8d8d8d8d8d611ba7565b925092509250610c388c84612064565b610c4182611cc7565b610c4a81611cc7565b610c52611692565b15610c5f57610c5f611845565b909c909b509950505050505050505050565b6001600160a01b031660009081526006602052604090205490565b60007f000000000000000000000000000000000000000000000000000000000000000082604051602001610cc192919061480c565b604051602081830303815290604052805190602001209050919050565b60006060610cee86516002611b9a565b610a6d8989898989898961206e612125611d45565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b606080610d56610d27565b6001600160a01b031663f94d4668610d6c61091f565b6040518263ffffffff1660e01b8152600401610d889190614933565b60006040518083038186803b158015610da057600080fd5b505afa158015610db4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ddc91908101906141fd565b50915050610de981612002565b610e1d81600081518110610df957fe5b602002602001015182600181518110610e0e57fe5b60200260200101516001611a71565b90915083600081518110610e2d57fe5b6020026020010184600181518110610e4157fe5b6020908102919091010191909152525090565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106475780601f1061061c57610100808354040283529160200191610647565b600a5490565b6000610ec56117f2565b8360800151610ed5610bdb610d27565b610ee0610c0161091f565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031686602001516001600160a01b03161490506000610f2882611a11565b90506000610f368315611a11565b9050610f428783611a65565b9650610f4e8682611a65565b95506000806000610f608a8a88611a71565b925092509250610fa78b60a0015187610f79578a610f7b565b8b5b88610f86578c610f88565b8b5b89610f935784610f95565b855b8a610fa05786610fa2565b855b612187565b60008b516001811115610fb657fe5b1415611025576000610fd4610fc9610a3b565b60608e015190612231565b9050610ff6610ff0828e6060015161152c90919063ffffffff16565b87611a65565b60608d0152600061100a8d8d8d8787612275565b90506110168187612294565b99505050505050505050611079565b6110338b6060015185611a65565b60608c015260006110478c8c8c86866122a0565b905061105381876122b3565b905061106f611068611063610a3b565b6122bf565b82906122e5565b9850505050505050505b509392505050565b60008061108e33856114ad565b90508083106110a8576110a33385600061157e565b6110b5565b6110b5338585840361157e565b5060019392505050565b600061065e338484611712565b6000610901612327565b600073__$85f042f43089d976c21d0d184f206dc395$__630397bee06008846110fd6116f7565b6040518463ffffffff1660e01b815260040161111b93929190614a33565b60206040518083038186803b15801561113357600080fd5b505af4158015611147573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610662919061464e565b61040090565b6000606061117d610d27565b6001600160a01b031663f94d466861119361091f565b6040518263ffffffff1660e01b81526004016111af9190614933565b60006040518083038186803b1580156111c757600080fd5b505afa1580156111db573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261120391908101906141fd565b5091505061120f613f90565b611217611fdc565b905061122282612002565b61123d828260005b60200201518360015b60200201516123a1565b9250505090565b6112528442111560d1611704565b6001600160a01b03871660009081526006602090815260408083205490519092916112a9917f0000000000000000000000000000000000000000000000000000000000000000918c918c918c9188918d910161495b565b60405160208183030381529060405280519060200120905060006112cc826123d4565b90506000600182888888604051600081526020016040526040516112f394939291906149bb565b6020604051602081039080840390855afa158015611315573d6000803e3d6000fd5b5050604051601f190151915061135790506001600160a01b0382161580159061134f57508b6001600160a01b0316826001600160a01b0316145b6101f8611704565b6001600160a01b038b1660009081526006602052604090206001850190556113808b8b8b61157e565b5050505050505050505050565b6060808861139c610bdb610d27565b6113a7610c0161091f565b6113af6117f2565b60006113b961067c565b611429576113c98b8b8b886123f0565b945090506113de620f424082101560cc611704565b6113ec6000620f4240612480565b6113fb89620f42408303612480565b61140484612125565b6040805160028082526060820183529091602083019080368337019050509250611497565b61143288612002565b611465878960008151811061144357fe5b60200260200101518a60018151811061145857fe5b602002602001015161248a565b6114748b8b8b8b8b8b8b61206e565b909550935090506114858982612480565b61148e84612125565b61149783611cc7565b61149f611845565b505097509795505050505050565b60006114b7610d27565b6001600160a01b0316826001600160a01b031614156114d95750600019610662565b6114e3838361248f565b9050610662565b60606109016124ba565b6201de2090565b8061150581612528565b5050565b600061151783836055611542565b9392505050565b600061151783836056611569565b600061153c838311156001611704565b50900390565b60006001821b198416828461155857600061155b565b60015b60ff16901b17949350505050565b6001600160401b03811b1992909216911b1790565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906115d9908590614933565b60405180910390a3505050565b60006115fd6000356001600160e01b031916610c8c565b905061067961160c82336125a1565b610191611704565b80156116345761162f6116256116af565b4210610193611704565b611649565b61164961163f6116d3565b42106101a9611704565b6007805460ff19168215151790556040517f9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be6490611687908390614910565b60405180910390a150565b600061169c6116d3565b42118061090157505060075460ff161590565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000610901600954611b73565b81611505576115058161268a565b6117296001600160a01b0384161515610198611704565b6117406001600160a01b0383161515610199611704565b61174b83838361248a565b6001600160a01b03831660009081526020819052604090205461177190826101a06126dd565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546117a090826119ff565b6001600160a01b0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906115d9908590614933565b6108746117fd611692565b610192611704565b6009546118129082611509565b6009556040517f3e350b41e86a8e10f804ade6d35340d620be35569cc75ac943e8bb14ab80ead190611687908390614910565b60095461185181611b80565b156106795761186b611864600a546126f3565b8290612733565b905061188761188061187b61067c565b6126f3565b8290612740565b60095550565b6000611899828261274e565b6118a484601f612752565b6118af866054612763565b6118ba88606a612752565b6118c58a609f612763565b6118d08c60b5612752565b6118db8e60ea612763565b17171717171798975050505050505050565b60006106628282612770565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000061196661277a565b3060405160200161197b95949392919061498f565b60405160208183030381529060405280519060200120905090565b6119a964e8d4a5100082101560cb611704565b6119bf67016345785d8a000082111560ca611704565b6009546119cc908261151e565b6009556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc90611687908390614933565b60008282016115178482101583611704565b600081611a3e577f0000000000000000000000000000000000000000000000000000000000000000610662565b507f0000000000000000000000000000000000000000000000000000000000000000919050565b60006115178383611ece565b6040805160028082526060808301845260009384938493909160208301908036833701905050905084611aa45785611aa6565b865b81600081518110611ab357fe5b60200260200101818152505084611aca5786611acc565b855b81600181518110611ad957fe5b602002602001018181525050611aed613f90565b611af5611fdc565b9050611b038282600061122a565b9450611b0d613f90565b611b17828761277e565b905086611b28576020810151611b2b565b80515b945086611b39578051611b3f565b60208101515b935050505093509350939050565b600061066282826127b2565b60006106628260166127b2565b600061066282602c612770565b600061066282604b6127d9565b60006106628260556127e1565b60006106628260566127eb565b6115058183146067611704565b6000606080611bb4613f90565b611bbc611fdc565b9050611bc6611692565b15611c7b576000611be18983835b6020020151846001611233565b9050611beb613f90565b611bf5838361277e565b9050611c44898b600081518110611c0857fe5b60200260200101518c600181518110611c1d57fe5b602002602001015184600060028110611c3257fe5b60200201518560016020020151612187565b611c4d826127f8565b611c578a88612825565b9096509450611c708287611c6961067c565b6000612871565b600a5550611c919050565b611c858886612825565b600019600a5590945092505b60408051600280825260608201835286928692919060208301908036833701905050935093509350509750975097945050505050565b611cee81600081518110611cd757fe5b6020026020010151611ce96001611a11565b6128c9565b81600081518110611cfb57fe5b602002602001018181525050611d2981600181518110611d1757fe5b6020026020010151611ce96000611a11565b81600181518110611d3657fe5b60200260200101818152505050565b333014611e03576000306001600160a01b0316600036604051611d69929190614824565b6000604051808303816000865af19150503d8060008114611da6576040519150601f19603f3d011682016040523d82523d6000602084013e611dab565b606091505b505090508060008114611dba57fe5b60046000803e6000516001600160e01b0319166343adbafb60e01b8114611de5573d6000803e3d6000fd5b506020600460003e604060205260243d03602460403e601c3d016000f35b611e0c86612002565b60006060611e238b8b8b8b8b8b8b8b63ffffffff16565b5091509150611e35818463ffffffff16565b8051601f1982018390526343adbafb603f1983015260200260231982016044820181fd5b60009081526008602052604090205490565b6000806000806000806000611e7f886128e9565b9650611e8a886128f6565b9550611e9588612903565b9450611ea088612910565b9350611eab8861291d565b9250611eb68861292a565b9150611ec1886118ed565b9050919395979092949650565b6000828202611517841580611eeb575083858381611ee857fe5b04145b6003611704565b6000611f018215156004611704565b82611f0e57506000610662565b670de0b6b3a764000083810290611f3190858381611f2857fe5b04146005611704565b828181611f3a57fe5b04915050610662565b6040516334171a8560e01b815260009073__$85f042f43089d976c21d0d184f206dc395$__906334171a8590611f8490600890889088908890600401614a54565b60206040518083038186803b158015611f9c57600080fd5b505af4158015611fb0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fd4919061464e565b949350505050565b611fe4613f90565b611fee6001612937565b8152611ffa6000612937565b602082015290565b6120298160008151811061201257fe5b60200260200101516120246001611a11565b611ece565b8160008151811061203657fe5b602002602001018181525050611d298160018151811061205257fe5b60200260200101516120246000611a11565b611505828261298b565b600060608061207b613f90565b612083611fdc565b90506000612092898383611bd4565b905061209c613f90565b6120a6838361277e565b90506120b9898b600081518110611c0857fe5b6120c2826127f8565b600060606120d08c8a612a47565b915091506120e884836120e161067c565b6001612871565b600a556040805160028082526060820183528492849291906020830190803683370190505097509750975050505050509750975097945050505050565b61214c8160008151811061213557fe5b60200260200101516121476001611a11565b612a81565b8160008151811061215957fe5b602002602001018181525050611d298160018151811061217557fe5b60200260200101516121476000611a11565b60095461219381611b80565b801561219e57508543115b156122295760006121b186858786612ab4565b905060006121ca878688876121c588611b59565b612ace565b905060006121d784611b73565b905060006121e485611b66565b905060006121fd828487876121f88b611b4d565b612b12565b9050808314611380576122108682612b69565b955061221c8642612b77565b6009819055955050505050505b505050505050565b600082820261224b841580611eeb575083858381611ee857fe5b8061225a576000915050610662565b670de0b6b3a764000060001982015b04600101915050610662565b6000612288858588606001518686612b85565b90505b95945050505050565b600061151783836128c9565b6000612288858588606001518686612c29565b60006115178383612a81565b6000670de0b6b3a764000082106122d7576000610662565b50670de0b6b3a76400000390565b60006122f48215156004611704565b8261230157506000610662565b670de0b6b3a76400008381029061231b90858381611f2857fe5b82600182038161226957fe5b6000612331610d27565b6001600160a01b031663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b15801561236957600080fd5b505afa15801561237d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090191906140c9565b60008060008060006123b4888888612cc8565b93509350935093506123c884848484612e42565b98975050505050505050565b60006123de6118f9565b82604051602001610cc1929190614834565b6000606060006123ff84612eb6565b905061241a600082600381111561241257fe5b1460ce611704565b606061242585612ecc565b905061243381516002611b9a565b61243c81612002565b612444613f90565b61244c611fdc565b9050600061245b838383611bd4565b9050600061246a826002611ece565b600a929092555099919850909650505050505050565b6115058282612ee2565b505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6040805160028082526060808301845292839291906020830190803683370190505090506124e86001612f70565b816000815181106124f557fe5b60200260200101818152505061250b6000612f70565b8160018151811061251857fe5b6020908102919091010152905090565b60028151101561253757610679565b60008160008151811061254657fe5b602002602001015190506000600190505b825181101561248a57600083828151811061256e57fe5b60200260200101519050612597816001600160a01b0316846001600160a01b0316106065611704565b9150600101612557565b600073ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b6125c0610d03565b6001600160a01b0316141580156125db57506125db83612fc4565b15612603576125e8610d03565b6001600160a01b0316336001600160a01b0316149050610662565b61260b612327565b6001600160a01b0316639be2a8848484306040518463ffffffff1660e01b815260040161263a9392919061493c565b60206040518083038186803b15801561265257600080fd5b505afa158015612666573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e3919061445c565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b60006126ec8484111583611704565b5050900390565b6000806126ff83612ff6565b9050600080821361271857652d79883d20008203612722565b652d79883d200082015b655af3107a40009005949350505050565b600061151783838361305a565b60006115178383601661305a565b1b90565b661fffffffffffff91909116901b90565b623fffff91909116901b90565b1c637fffffff1690565b4690565b612786613f90565b612799600184815b602002015184613071565b81526127a76000848161278e565b602082015292915050565b600082821c623fffff16621fffff81136127cc5780611fd4565b623fffff19179392505050565b1c6103ff1690565b1c60019081161490565b1c6001600160401b031690565b60008060008061280a600a5486613091565b935093509350935061281e848484846130fa565b5050505050565b60006060600061283484612eb6565b9050600181600381111561284457fe5b141561285e57612854858561311a565b9093509150612869565b61286961015061268a565b509250929050565b600081156128a357600061288f846128898888612231565b906122e5565b905061289b86826119ff565b915050611fd4565b60006128b384610ae1888861314c565b90506128bf868261152c565b9695505050505050565b60006128d88215156004611704565b8183816128e157fe5b049392505050565b60006106628260ea6127b2565b60006106628260b5613178565b600061066282609f6127b2565b600061066282606a613178565b60006106628260546127b2565b600061066282601f613178565b600081612964577f0000000000000000000000000000000000000000000000000000000000000000610662565b507f0000000000000000000000000000000000000000000000000000000000000000919050565b6129a26001600160a01b038316151561019b611704565b6129ae8260008361248a565b6001600160a01b0382166000908152602081905260409020546129d490826101a16126dd565b6001600160a01b0383166000908152602081905260409020556002546129fa90826131ab565b6002556040516000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90612a3b908590614933565b60405180910390a35050565b600060606000612a5684612eb6565b90506003816003811115612a6657fe5b1415612a765761285485856131b9565b61286961013661268a565b6000612a908215156004611704565b82612a9d57506000610662565b816001840381612aa957fe5b046001019050610662565b600080612ac3868686866131de565b90506128bf816126f3565b600080612add878787876131de565b90506000612af5612aee8784612231565b89906119ff565b90506000612b02826126f3565b9490940398975050505050505050565b600080612b2e85858542612b258b611e59565b93929190613206565b9050607842889003101580612b435786612b4c565b612b4c87613258565b600081815260086020526040902092909255509695505050505050565b60006115178383604b613265565b60006115178383602c613275565b6000612ba7612b9c87670429d069189e000061314c565b851115610130611704565b6000612bc5612bbe85670de0b6b3a7640002612231565b88906119ff565b90506000612bde612bbe85670de0b6b3a763ffff61314c565b9050612bf7612bed83886119ff565b610ae1838961314c565b92505050612c09858210610165611704565b61228b612c1e86670429d069189e000061314c565b821115610131611704565b6000612c39858510610165611704565b612c59612c4e86670429d069189e000061314c565b851115610131611704565b6000612c70612bbe85670de0b6b3a7640002612231565b90506000612c89612bbe85670de0b6b3a763ffff61314c565b9050612ca2612c98828861152c565b6128898489612231565b925061228b9150612cbd905087670429d069189e000061314c565b821115610130611704565b6000808080612ce9612cda8787611ef2565b670de0b6b3a76400009061152c565b93506000612d148689600181518110612cfe57fe5b6020026020010151611ef290919063ffffffff16565b90506000612d3f888a600081518110612d2957fe5b602002602001015161314c90919063ffffffff16565b9050612d4b82826119ff565b9450612d7289600181518110612d5d57fe5b60200260200101518a600081518110612d2957fe5b92505050612da986612da388612da38b600081518110612d8e57fe5b60200260200101518c600081518110612d2957fe5b9061314c565b91506000612de986610ae189612da3670de0b6b3a7640000600202612da38e600181518110612dd457fe5b60200260200101518f600081518110612d2957fe5b90506000612e1f612dfa8880612231565b610ae18b600181518110612e0a57fe5b60200260200101518c600181518110612d2957fe5b9050612e3581612e2f86856119ff565b906119ff565b9350505093509350935093565b600080612e5786671bc16d674ec80000612231565b90506000612e7187612da386673782dace9d90000061314c565b90506000612e7f86836119ff565b90506000612e8e826005613287565b90506000612e9c89836119ff565b9050612ea88186611ef2565b9a9950505050505050505050565b600081806020019051810190610662919061459c565b60608180602001905181019061151791906145e5565b612eee6000838361248a565b600254612efb90826119ff565b6002556001600160a01b038216600090815260208190526040902054612f2190826119ff565b6001600160a01b0383166000818152602081905260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90612a3b908590614933565b600081612f9d577f0000000000000000000000000000000000000000000000000000000000000000610662565b507f0000000000000000000000000000000000000000000000000000000000000000919050565b6000612fd6631c74c91760e11b610c8c565b8214806106625750612fee6350dd6ed960e01b610c8c565b909114919050565b6000613006600083136064611704565b670c7d713b49da0000821380156130245750670f43fc2c04ee000082125b1561304a57670de0b6b3a764000061303b836133fa565b8161304257fe5b059050610bc7565b61305382613518565b9050610bc7565b623fffff828116821b90821b198416179392505050565b6000836130875761308282846138b7565b611fd4565b611fd482846138c3565b6000806000806000806000806130a56138cf565b935093509350935083600014156130ca576000975087965090945092506130f1915050565b6000806130e18c8c6130da61067c565b8989613b3e565b909a509850929650909450505050505b92959194509250565b831561310a5761310a8285612480565b82156108f1576108f18184612480565b60006060600061312984613bd3565b9050606061313f868361313a61067c565b613be9565b9196919550909350505050565b6000828202613166841580611eeb575083858381611ee857fe5b670de0b6b3a764000090049392505050565b600082821c661fffffffffffff16660fffffffffffff811361319a5780611fd4565b661fffffffffffff19179392505050565b6000611517838360016126dd565b6000606060006131c884613bd3565b9050606061313f86836131d961067c565b613c6e565b60006706f05b59d3b200006128bf6131fa8261288987876119ff565b61288983818a8a6119ff565b600080613212876118ed565b830390506000818702613224896128f6565b01905060008287026132358a612910565b01905060008387026132468b61292a565b019050612ea889848a858b868c61188d565b6000610662826001613d09565b6103ff811b1992909216911b1790565b637fffffff811b1992909216911b1790565b60008261329657506000610662565b60006132a184613d11565b9050600281670de0b6b3a76400008602816132b857fe5b048201816132c257fe5b049050600281670de0b6b3a76400008602816132da57fe5b048201816132e457fe5b049050600281670de0b6b3a76400008602816132fc57fe5b0482018161330657fe5b049050600281670de0b6b3a764000086028161331e57fe5b0482018161332857fe5b049050600281670de0b6b3a764000086028161334057fe5b0482018161334a57fe5b049050600281670de0b6b3a764000086028161336257fe5b0482018161336c57fe5b049050600281670de0b6b3a764000086028161338457fe5b0482018161338e57fe5b049050600061339d828061314c565b90506133b36133ac8386612231565b86906119ff565b81111580156133d557506133d16133ca8386612231565b869061152c565b8110155b6110795760405162461bcd60e51b81526004016133f190614b0e565b60405180910390fd5b670de0b6b3a7640000026000806a0c097ce7bc90715b34b9f160241b808401906ec097ce7bc90715b34b9f0fffffffff198501028161343557fe5b05905060006a0c097ce7bc90715b34b9f160241b82800205905081806a0c097ce7bc90715b34b9f160241b81840205915060038205016a0c097ce7bc90715b34b9f160241b82840205915060058205016a0c097ce7bc90715b34b9f160241b82840205915060078205016a0c097ce7bc90715b34b9f160241b82840205915060098205016a0c097ce7bc90715b34b9f160241b828402059150600b8205016a0c097ce7bc90715b34b9f160241b828402059150600d8205016a0c097ce7bc90715b34b9f160241b828402059150600f826002919005919091010295945050505050565b6000670de0b6b3a76400008212156135545761354a826a0c097ce7bc90715b34b9f160241b8161354457fe5b05613518565b6000039050610bc7565b60007e1600ef3172e58d2e933ec884fde10064c63b5372d805e203c000000000000083126135a557770195e54c5dd42177f53a27172fa9ec630262827000000000830592506806f05b59d3b2000000015b73011798004d755d3c8bc8e03204cf44619e00000083126135dd576b1425982cf597cd205cef7380830592506803782dace9d9000000015b606492830292026e01855144814a7ff805980ff00840008312613625576e01855144814a7ff805980ff008400068056bc75e2d63100000840205925068ad78ebc5ac62000000015b6b02df0ab5a80a22c61ab5a7008312613660576b02df0ab5a80a22c61ab5a70068056bc75e2d6310000084020592506856bc75e2d631000000015b693f1fce3da636ea5cf850831261369757693f1fce3da636ea5cf85068056bc75e2d631000008402059250682b5e3af16b18800000015b690127fa27722cc06cc5e283126136ce57690127fa27722cc06cc5e268056bc75e2d6310000084020592506815af1d78b58c400000015b68280e60114edb805d0383126137035768280e60114edb805d0368056bc75e2d631000008402059250680ad78ebc5ac6200000015b680ebc5fb41746121110831261372e57680ebc5fb4174612111068056bc75e2d631000009384020592015b6808f00f760a4b2db55d8312613763576808f00f760a4b2db55d68056bc75e2d6310000084020592506802b5e3af16b1880000015b6806f5f17757889379378312613798576806f5f177578893793768056bc75e2d63100000840205925068015af1d78b58c40000015b6806248f33704b28660383126137cc576806248f33704b28660368056bc75e2d63100000840205925067ad78ebc5ac620000015b6805c548670b9510e7ac8312613800576805c548670b9510e7ac68056bc75e2d6310000084020592506756bc75e2d6310000015b600068056bc75e2d63100000840168056bc75e2d63100000808603028161382357fe5b059050600068056bc75e2d63100000828002059050818068056bc75e2d63100000818402059150600382050168056bc75e2d63100000828402059150600582050168056bc75e2d63100000828402059150600782050168056bc75e2d63100000828402059150600982050168056bc75e2d63100000828402059150600b820501600202606485820105979650505050505050565b6000611517838361314c565b60006115178383611ef2565b600b5460405163bd02d0f560e01b81526000918291829182916001600160a01b039091169063bd02d0f590613921907550524f544f434f4c5f535741505f4645455f5045524360501b90600401614933565b60206040518083038186803b15801561393957600080fd5b505afa15801561394d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613971919061464e565b600b5460405163bd02d0f560e01b81526001600160a01b039091169063bd02d0f5906139c1907f50524f544f434f4c5f4645455f4759524f5f504f5254494f4e0000000000000090600401614933565b60206040518083038186803b1580156139d957600080fd5b505afa1580156139ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a11919061464e565b600b546040516321f8a72160e01b81526001600160a01b03909116906321f8a72190613a51906c4759524f5f545245415355525960981b90600401614933565b60206040518083038186803b158015613a6957600080fd5b505afa158015613a7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613aa191906140c9565b600b546040516321f8a72160e01b81526001600160a01b03909116906321f8a72190613ae0906b42414c5f545245415355525960a01b90600401614933565b60206040518083038186803b158015613af857600080fd5b505afa158015613b0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b3091906140c9565b935093509350935090919293565b600080868611613b5357506000905080613bc9565b6000613b6d85612da3613b668a8c61152c565b899061314c565b90506000613b85613b7e898b61152c565b879061314c565b90506000613b93898361152c565b90506000613ba18483611ef2565b90506000613baf888361314c565b90506000613bbd838361152c565b91975090955050505050505b9550959350505050565b60008180602001905181019061151791906145b8565b606083516001600160401b0381118015613c0257600080fd5b50604051908082528060200260200182016040528015613c2c578160200160208202803683370190505b50905060005b845181101561107957613c4f83610ae186888581518110612d2957fe5b828281518110613c5b57fe5b6020908102919091010152600101613c32565b606083516001600160401b0381118015613c8757600080fd5b50604051908082528060200260200182016040528015613cb1578160200160208202803683370190505b50905060005b845181101561107957613cea8361288986888581518110613cd457fe5b602002602001015161223190919063ffffffff16565b828281518110613cf657fe5b6020908102919091010152600101613cb7565b016103ff1690565b6000670de0b6b3a76400008210613d3e57670de0b6b3a7640000613d36818404613ee3565b1b9050610bc7565b600a8211613d51575063bc7c871c610bc7565b60648211613d6557506402540be400610bc7565b6103e88211613d7a575064075cdd4719610bc7565b6127108211613d8f575064174876e800610bc7565b620186a08211613da557506449a0a4c700610bc7565b620f42408211613dbb575064e8d4a51000610bc7565b629896808211613dd257506502e0466fc608610bc7565b6305f5e1008211613dea57506509184e72a000610bc7565b633b9aca008211613e025750651cc2c05dbc53610bc7565b6402540be4008211613e1b5750655af3107a4000610bc7565b64174876e8008211613e35575066011f9b83a95b45610bc7565b64e8d4a510008211613e4f575066038d7ea4c68000610bc7565b6509184e72a0008211613e6a5750660b3c13249d90bb610bc7565b655af3107a40008211613e855750662386f26fc10000610bc7565b66038d7ea4c680008211613ea15750667058bf6e27a751610bc7565b662386f26fc100008211613ebe575067016345785d8a0000610bc7565b67016345785d8a00008211613edc5750670463777a4d8c892d610bc7565b5080610bc7565b6000600160801b8210613efb5760809190911c906040015b680100000000000000008210613f165760409190911c906020015b6401000000008210613f2d5760209190911c906010015b620100008210613f425760109190911c906008015b6101008210613f565760089190911c906004015b60108210613f695760049190911c906002015b60048210610bc757600101919050565b604080518082019091526000808252602082015290565b60405180604001604052806002906020820280368337509192915050565b803561066281614bc0565b600082601f830112613fc9578081fd5b8151613fdc613fd782614b97565b614b71565b818152915060208083019084810181840286018201871015613ffd57600080fd5b60005b8481101561401c57815184529282019290820190600101614000565b505050505092915050565b600082601f830112614037578081fd5b81356001600160401b0381111561404c578182fd5b61405f601f8201601f1916602001614b71565b915080825283602082850101111561407657600080fd5b8060208401602084013760009082016020015292915050565b80356002811061066257600080fd5b80356003811061066257600080fd5b6000602082840312156140be578081fd5b813561151781614bc0565b6000602082840312156140da578081fd5b815161151781614bc0565b600080604083850312156140f7578081fd5b823561410281614bc0565b9150602083013561411281614bc0565b809150509250929050565b600080600060608486031215614131578081fd5b833561413c81614bc0565b9250602084013561414c81614bc0565b929592945050506040919091013590565b600080600080600080600060e0888a031215614177578485fd5b873561418281614bc0565b9650602088013561419281614bc0565b95506040880135945060608801359350608088013560ff811681146141b5578384fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156141e4578182fd5b82356141ef81614bc0565b946020939093013593505050565b600080600060608486031215614211578081fd5b83516001600160401b0380821115614227578283fd5b818601915086601f83011261423a578283fd5b8151614248613fd782614b97565b80828252602080830192508086018b828387028901011115614268578788fd5b8796505b8487101561429357805161427f81614bc0565b84526001969096019592810192810161426c565b5089015190975093505050808211156142aa578283fd5b506142b786828701613fb9565b925050604084015190509250925092565b600060208083850312156142da578182fd5b82356001600160401b038111156142ef578283fd5b8301601f810185136142ff578283fd5b803561430d613fd782614b97565b818152838101908385016040808502860187018a101561432b578788fd5b8795505b848610156143785780828b031215614345578788fd5b61434e81614b71565b6143588b8461409e565b81528288013588820152845260019590950194928601929081019061432f565b509098975050505050505050565b60006020808385031215614398578182fd5b82356001600160401b038111156143ad578283fd5b8301601f810185136143bd578283fd5b80356143cb613fd782614b97565b818152838101908385016060808502860187018a10156143e9578788fd5b8795505b848610156143785780828b031215614403578788fd5b61440c81614b71565b6144168b8461409e565b815282880135888201526040808401359082015284526001959095019492860192908101906143ed565b600060208284031215614451578081fd5b813561151781614bd5565b60006020828403121561446d578081fd5b815161151781614bd5565b600080600080600080600060e0888a031215614492578081fd5b873596506020808901356144a581614bc0565b965060408901356144b581614bc0565b955060608901356001600160401b03808211156144d0578384fd5b818b0191508b601f8301126144e3578384fd5b81356144f1613fd782614b97565b8082825285820191508585018f87888602880101111561450f578788fd5b8795505b83861015614531578035835260019590950194918601918601614513565b509850505060808b0135955060a08b0135945060c08b0135925080831115614557578384fd5b50506145658a828b01614027565b91505092959891949750929550565b600060208284031215614585578081fd5b81356001600160e01b031981168114611517578182fd5b6000602082840312156145ad578081fd5b815161151781614be3565b600080604083850312156145ca578182fd5b82516145d581614be3565b6020939093015192949293505050565b600080604083850312156145f7578182fd5b825161460281614be3565b60208401519092506001600160401b0381111561461d578182fd5b61462985828601613fb9565b9150509250929050565b600060208284031215614644578081fd5b611517838361409e565b60006020828403121561465f578081fd5b5051919050565b60008060006060848603121561467a578081fd5b83356001600160401b0380821115614690578283fd5b81860191506101208083890312156146a6578384fd5b6146af81614b71565b90506146bb888461408f565b81526146ca8860208501613fae565b60208201526146dc8860408501613fae565b6040820152606083013560608201526080830135608082015260a083013560a082015261470c8860c08501613fae565b60c082015261471e8860e08501613fae565b60e08201526101008084013583811115614736578586fd5b6147428a828701614027565b9183019190915250976020870135975060409096013595945050505050565b600060208284031215614772578081fd5b5035919050565b6000806040838503121561478b578182fd5b50508035926020909101359150565b6000806000606084860312156147ae578081fd5b833592506020840135915060408401356147c781614bd5565b809150509250925092565b6000815180845260208085019450808401835b83811015614801578151875295820195908201906001016147e5565b509495945050505050565b9182526001600160e01b031916602082015260240190565b6000828483379101908152919050565b61190160f01b81526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6020808252825182820181905260009190848201906040850190845b8181101561489b5783518352928401929184019160010161487f565b50909695505050505050565b60408101818360005b60028110156148cf5781518352602092830192909101906001016148b0565b50505092915050565b60006020825261151760208301846147d2565b6000604082526148fe60408301856147d2565b828103602084015261228b81856147d2565b901515815260200190565b92151583526020830191909152604082015260600190565b90815260200190565b9283526001600160a01b03918216602084015216604082015260600190565b9586526001600160a01b0394851660208701529290931660408501526060840152608083019190915260a082015260c00190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b93845260ff9290921660208401526040830152606082015260800190565b968752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b9586526020860194909452604085019290925260608401521515608083015260a082015260c00190565b83815260608101614a4384614bb6565b602082019390935260400152919050565b84815260808101614a6485614bb6565b84602083015283604083015282606083015295945050505050565b838152825160a0820190614a9281614bb6565b806020840152506020840151604083015260408401516060830152826080830152949350505050565b6000602080835283518082850152825b81811015614ae757858101830151858201604001528201614acb565b81811115614af85783604083870101525b50601f01601f1916929092016040019392505050565b6020808252600c908201526b17dcdc5c9d0811905253115160a21b604082015260600190565b600083825260406020830152611fd460408301846147d2565b9283526020830191909152604082015260600190565b60ff91909116815260200190565b6040518181016001600160401b0381118282101715614b8f57600080fd5b604052919050565b60006001600160401b03821115614bac578081fd5b5060209081020190565b6003811061067957fe5b6001600160a01b038116811461067957600080fd5b801515811461067957600080fd5b6004811061067957600080fdfea2646970667358221220caed5c61c26ec06a87f86ddc8afed6a0cfb5de4847936f1f42074e82ba4ae01364736f6c63430007010033", "deployedSourceMap": "1263:26541:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2138:81:51;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4172:164;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8674:89:5:-;;;;;;:::i;:::-;;:::i;:::-;;3181:98:51;;;:::i;:::-;;;;;;;:::i;3154:363:44:-;;;:::i;:::-;;;;;;;;;:::i;4323:433:27:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2657:655:18:-;;;;;;:::i;:::-;;:::i;8188:259:5:-;;;:::i;3040:81:51:-;;;:::i;:::-;;;;;;;:::i;3414:588:27:-;;;;;;:::i;:::-;;:::i;2359:113:52:-;;;:::i;6977:192:5:-;;;;;;:::i;:::-;;:::i;6008:91::-;;;:::i;5584:211:51:-;;;;;;:::i;:::-;;:::i;8295:695:9:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;1561:29::-;;;:::i;:::-;;;;;;;:::i;6105:688:5:-;;;:::i;:::-;;;;;;;;;;;;:::i;6799:115::-;;;:::i;37360:888::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2516:500:27:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;40124:211:5:-;;;:::i;4762:496:27:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2259:112:9:-;;;:::i;:::-;;;;;;;:::i;3337:117:51:-;;;;;;:::i;:::-;;:::i;23879:1437:5:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2127:108:52:-;;;;;;:::i;:::-;;:::i;2487:430:35:-;;;;;;:::i;:::-;;:::i;35851:886:5:-;;;;;;:::i;:::-;;:::i;1776:80:21:-;;;:::i;1879:79:18:-;;;:::i;2877:434:9:-;;;:::i;2332:85:51:-;;;:::i;9355:98:5:-;;;:::i;4633:2711:9:-;;;;;;:::i;:::-;;:::i;3438:429:18:-;;;;;;:::i;:::-;;:::i;3657:170:51:-;;;;;;:::i;:::-;;:::i;1862:101:21:-;;;:::i;4145:172:27:-;;;;;;:::i;:::-;;:::i;3022:103::-;;;:::i;4156:452:9:-;;;:::i;1313:753:52:-;;;;;;:::i;:::-;;:::i;13785:2489:5:-;;;;;;:::i;:::-;;:::i;2260:254:18:-;;;;;;:::i;:::-;;:::i;8769:117:5:-;;;:::i;4029:110:27:-;;;:::i;2138:81:51:-;2207:5;2200:12;;;;;;;;;;;;;-1:-1:-1;;2200:12:51;;;;;;;;;;;;;;;;;;;;;;;;;;2175:13;;2200:12;;2207:5;;2200:12;;;2207:5;2200:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2138:81;:::o;4172:164::-;4255:4;4271:37;4280:10;4292:7;4301:6;4271:8;:37::i;:::-;-1:-1:-1;4325:4:51;4172:164;;;;;:::o;8674:89:5:-;2156:21:35;:19;:21::i;:::-;8738:18:5::1;8749:6;8738:10;:18::i;:::-;8674:89:::0;:::o;3181:98:51:-;3260:12;;3181:98;:::o;3154:363:44:-;3257:11;3282:26;3322:27;3384:14;:12;:14::i;:::-;3383:15;3374:24;;3429;:22;:24::i;:::-;3408:45;;3485:25;:23;:25::i;:::-;3463:47;;3154:363;;;:::o;4323:433:27:-;4520:14;;4456:24;;-1:-1:-1;;;;;4506:29:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4506:29:27;;4496:39;;4545:19;4567:17;:15;:17::i;:::-;4545:39;;4600:9;4595:155;4619:7;:14;4615:1;:18;4595:155;;;4667:14;:37;4705:8;4715:7;4723:1;4715:10;;;;;;;;;;;;;;4727:11;4667:72;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4654:7;4662:1;4654:10;;;;;;;;;;;;;;;;;:85;4635:3;;4595:155;;;;4323:433;;;;:::o;2657:655:18:-;2785:4;2801:24;2828:29;2838:6;2846:10;2828:9;:29::i;:::-;2801:56;-1:-1:-1;2867:101:18;-1:-1:-1;;;;;2876:20:18;;:10;:20;;:50;;;2920:6;2900:16;:26;;2876:50;9174:3:36;2867:8:18;:101::i;:::-;2979:36;2989:6;2997:9;3008:6;2979:9;:36::i;:::-;-1:-1:-1;;;;;3030:20:18;;:10;:20;;;;:55;;-1:-1:-1;;;3054:31:18;;;3030:55;3026:258;;;3218:55;3227:6;3235:10;3266:6;3247:16;:25;3218:8;:55::i;:::-;-1:-1:-1;3301:4:18;;2657:655;-1:-1:-1;;;;2657:655:18:o;8188:259:5:-;2970:18:44;:16;:18::i;:::-;2156:21:35::1;:19;:21::i;:::-;8258:23:5::2;8276:4;8258:17;:23::i;:::-;8387:1;8371:13;:11;:13::i;:::-;:17;8367:74;;;8404:26;:24;:26::i;:::-;8188:259::o:0;3040:81:51:-;3105:9;;;;3040:81;:::o;3414:588:27:-;3512:80;3534:8;3521:10;:21;:48;;;;;899:4:26;3546:8:27;:23;;3521:48;4838:3:36;3512:8:27;:80::i;:::-;3769:18;3790:33;3803:1;3806;3809;3812;3815;3818;3821;3790:12;:33::i;:::-;3769:54;-1:-1:-1;3850:10:27;3833:163;3866:8;3862:1;:12;3833:163;;;3899:11;;;;:8;:11;;;;;;:23;;:21;:23::i;:::-;3895:91;;3947:11;;;;:8;:11;;;;;:24;;;3895:91;3876:3;;3833:163;;;;3414:588;;;:::o;2359:113:52:-;2419:7;2445:20;:18;:20::i;:::-;2438:27;;2359:113;:::o;6977:192:5:-;2156:21:35;:19;:21::i;:::-;2970:18:44::1;:16;:18::i;:::-;7122:40:5::2;7144:17;7122:21;:40::i;6008:91::-:0;6085:7;6008:91;:::o;5584:211:51:-;5697:10;5672:4;5718:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;5718:32:51;;;;;;;;;;5672:4;;5688:79;;5718:32;;:48;;5755:10;5718:36;:48::i;:::-;5688:8;:79::i;8295:695:9:-;8486:24;8524:22;8560:23;8608:28;8639:31;8654:15;8639:14;:31::i;:::-;8608:62;;8680:29;8712:32;8728:15;8727:16;8712:14;:32::i;:::-;8680:64;;8771:46;8780:14;8796:20;8771:8;:46::i;:::-;8754:63;;8845:48;8854:15;8871:21;8845:8;:48::i;:::-;8827:66;;8910:73;8934:14;8950:15;8967;8910:23;:73::i;:::-;8903:80;;;;;;;;8295:695;;;;;;;:::o;1561:29::-;;;-1:-1:-1;;;;;1561:29:9;;:::o;6105:688:5:-;6188:19;6221:21;6256:37;6307:19;6340:18;6372:25;6422:16;6441:9;;6422:28;;6475:23;:8;:21;:23::i;:::-;6460:38;;6525:25;:8;:23;:25::i;:::-;6508:42;;6592:40;:8;:38;:40::i;:::-;6560:72;;6656:22;:8;:20;:22::i;:::-;6642:36;;6704:24;:8;:22;:24::i;:::-;6688:40;;6758:28;:8;:26;:28::i;:::-;6738:48;;6105:688;;;;;;;:::o;6799:115::-;6852:7;6878:29;:9;;:27;:29::i;37360:888::-;37620:13;37635:27;37674:55;37710:8;:15;37727:1;37674:35;:55::i;:::-;37740:255;37766:6;37786;37806:9;37829:8;37851:15;37880:25;37919:8;37941:11;37966:19;37740:12;:255::i;:::-;37360:888;;;;;;;;;;:::o;2516:500:27:-;2627:19;2660:22;2696:18;2728:21;2763:19;2796:22;2832:17;2874:58;899:4:26;2883:5:27;:19;6557:3:36;2874:8:27;:58::i;:::-;2943:14;2960:17;2971:5;2960:10;:17::i;:::-;2943:34;;2994:15;:6;:13;:15::i;:::-;2987:22;;;;-1:-1:-1;2987:22:27;;-1:-1:-1;2987:22:27;;-1:-1:-1;2987:22:27;-1:-1:-1;2987:22:27;-1:-1:-1;2987:22:27;;-1:-1:-1;2516:500:27;-1:-1:-1;;;2516:500:27:o;40124:211:5:-;40164:7;40278:50;40314:13;:11;:13::i;:::-;40278:27;40287:14;:12;:14::i;:::-;40303:1;40278:8;:27::i;:::-;:35;;:50::i;4762:496:27:-;4958:14;;4896:23;;-1:-1:-1;;;;;4945:28:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4945:28:27;;4935:38;;4983:19;5005:17;:15;:17::i;:::-;4983:39;;5033:35;;:::i;:::-;5083:9;5078:174;5102:7;:14;5098:1;:18;5078:174;;;5145:7;5153:1;5145:10;;;;;;;;;;;;;;5137:18;;5182:59;5202:5;:14;;;5218:11;5231:5;:9;;;5182:19;:59::i;:::-;5169:7;5177:1;5169:10;;;;;;;;;;;;;;;;;:72;5118:3;;5078:174;;;;4762:496;;;;;:::o;2259:112:9:-;2311:17;;:::i;:::-;2347;:15;:17::i;3337:117:51:-;-1:-1:-1;;;;;3429:18:51;;3403:7;3429:18;;;;;;;;;;;3337:117;;;;:::o;23879:1437:5:-;24173:16;24191;24156:6;3721:68;3752:10;:8;:10::i;:::-;-1:-1:-1;;;;;3730:33:5;:10;:33;5392:3:36;3721:8:5;:68::i;:::-;3799:55;3818:11;:9;:11::i;:::-;3808:6;:21;10241:3:36;3799:8:5;:55::i;:::-;24219:23:::1;24233:8;24219:13;:23::i;:::-;24267:19;24300:27;24341:38:::0;24392:228:::1;24421:6;24445;24469:9;24496:8;24522:15;24555:25;24598:8;24392:11;:228::i;:::-;24253:367;;;;;;24726:36;24742:6;24750:11;24726:15;:36::i;:::-;24874:31;24894:10;24874:19;:31::i;:::-;24915:42;24935:21;24915:19;:42::i;:::-;25190:14;:12;:14::i;:::-;25186:71;;;25220:26;:24;:26::i;:::-;25275:10:::0;;;;-1:-1:-1;23879:1437:5;-1:-1:-1;;;;;;;;;;23879:1437:5:o;2127:108:52:-;-1:-1:-1;;;;;2214:14:52;2188:7;2214:14;;;:7;:14;;;;;;;2127:108::o;2487:430:35:-;2555:7;2876:22;2900:8;2859:50;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2849:61;;;;;;2842:68;;2487:430;;;:::o;35851:886:5:-;36111:14;36127:26;36165:55;36201:8;:15;36218:1;36165:35;:55::i;:::-;36231:253;36257:6;36277;36297:9;36320:8;36342:15;36371:25;36410:8;36432:11;36457:17;36231:12;:253::i;1776:80:21:-;1843:6;1776:80;:::o;1879:79:18:-;1945:6;1879:79;:::o;2877:434:9:-;2932:30;2977:25;3008:10;:8;:10::i;:::-;-1:-1:-1;;;;;3008:24:9;;3033:11;:9;:11::i;:::-;3008:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3008:37:9;;;;;;;;;;;;:::i;:::-;2974:71;;;;3175:23;3189:8;3175:13;:23::i;:::-;3249:55;3273:8;3282:1;3273:11;;;;;;;;;;;;;;3286:8;3295:1;3286:11;;;;;;;;;;;;;;3299:4;3249:23;:55::i;:::-;3208:96;;;3211:13;3225:1;3211:16;;;;;;;;;;;;;3229:13;3243:1;3229:16;;;;;;;;;;;;;;;;;3208:96;;;;;-1:-1:-1;2877:434:9;:::o;2332:85:51:-;2403:7;2396:14;;;;;;;;;;;;;-1:-1:-1;;2396:14:51;;;;;;;;;;;;;;;;;;;;;;;;;;2371:13;;2396:14;;2403:7;;2396:14;;;2403:7;2396:14;;;;;;;;;;;;;;;;;;;;;;;;9355:98:5;9432:14;;9355:98;:::o;4633:2711:9:-;4829:7;2970:18:44;:16;:18::i;:::-;4804:7:9::1;:14;;;3721:68:5;3752:10;:8;:10::i;3721:68::-;3799:55;3818:11;:9;:11::i;3799:55::-;4871:15:9::2;::::0;::::2;::::0;4890:7:::2;-1:-1:-1::0;;;;;4871:26:9;;::::2;::::0;::::2;;4848:20;4939:31;4871:26:::0;4939:14:::2;:31::i;:::-;4908:62;;4980:29;5012:32;5028:15;5027:16;5012:14;:32::i;:::-;4980:64;;5115:46;5124:14;5140:20;5115:8;:46::i;:::-;5098:63;;5189:48;5198:15;5215:21;5189:8;:48::i;:::-;5171:66;;5327:24;5353:22:::0;5377:23:::2;5404:119;5441:14;5469:15;5498;5404:23;:119::i;:::-;5326:197;;;;;;5592:316;5619:7;:23;;;5656:15;:50;;5691:15;5656:50;;;5674:14;5656:50;5720:15;:50;;5756:14;5720:50;;;5738:15;5720:50;5784:15;:50;;5819:15;5784:50;;;5802:14;5784:50;5848:15;:50;;5884:14;5848:50;;;5866:15;5848:50;5592:13;:316::i;:::-;5939:24;5923:12:::0;;:40:::2;::::0;::::2;;;;;;;5919:1419;;;6182:17;6202:44;6223:22;:20;:22::i;:::-;6202:14;::::0;::::2;::::0;;:20:::2;:44::i;:::-;6182:64;;6363:61;6372:29;6391:9;6372:7;:14;;;:18;;:29;;;;:::i;:::-;6403:20;6363:8;:61::i;:::-;6346:14;::::0;::::2;:78:::0;6439:17:::2;6459:89;6346:7:::0;6483:14;6499:15;6516:14;6532:15;6459:14:::2;:89::i;:::-;6439:109;;6642:48;6657:9;6668:21;6642:14;:48::i;:::-;6635:55;;;;;;;;;;;;5919:1419;6738:47;6747:7;:14;;;6763:21;6738:8;:47::i;:::-;6721:14;::::0;::::2;:64:::0;6800:16:::2;6819:90;6721:7:::0;6844:14;6860:15;6877:14;6893:15;6819::::2;:90::i;:::-;6800:109;;7005:44;7018:8;7028:20;7005:12;:44::i;:::-;6994:55;;7276:51;7291:35;:22;:20;:22::i;:::-;:33;:35::i;:::-;7276:8:::0;;:14:::2;:51::i;:::-;7269:58;;;;;;;;;3864:1:5;2998::44::1;4633:2711:9::0;;;;;:::o;3438:429:18:-;3523:4;3539:24;3566:30;3576:10;3588:7;3566:9;:30::i;:::-;3539:57;;3621:16;3611:6;:26;3607:232;;3653:32;3662:10;3674:7;3683:1;3653:8;:32::i;:::-;3607:232;;;3772:56;3781:10;3793:7;3821:6;3802:16;:25;3772:8;:56::i;:::-;-1:-1:-1;3856:4:18;;3438:429;-1:-1:-1;;;3438:429:18:o;3657:170:51:-;3743:4;3759:40;3769:10;3781:9;3792:6;3759:9;:40::i;1862:101:21:-;1910:11;1940:16;:14;:16::i;4145:172:27:-;4215:7;4241:14;:30;4272:8;4282;4292:17;:15;:17::i;:::-;4241:69;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3022:103::-;899:4:26;3022:103:27;:::o;4156:452:9:-;4210:7;4232:25;4263:10;:8;:10::i;:::-;-1:-1:-1;;;;;4263:24:9;;4288:11;:9;:11::i;:::-;4263:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4263:37:9;;;;;;;;;;;;:::i;:::-;4229:71;;;;4310:28;;:::i;:::-;4341:17;:15;:17::i;:::-;4310:48;;4489:23;4503:8;4489:13;:23::i;:::-;4530:71;4562:8;4572:10;4583:1;4572:13;;;;;4587:10;4598:1;4587:13;;;;;4530:31;:71::i;:::-;4523:78;;;;4156:452;:::o;1313:753:52:-;1575:60;1603:8;1584:15;:27;;5606:3:36;1575:8:52;:60::i;:::-;-1:-1:-1;;;;;1662:14:52;;1646:13;1662:14;;;:7;:14;;;;;;;;;1717:68;;1662:14;;1646:13;1717:68;;1728:16;;1662:14;;1753:7;;1762:5;;1662:14;;1776:8;;1717:68;;:::i;:::-;;;;;;;;;;;;;1707:79;;;;;;1686:100;;1797:12;1812:28;1829:10;1812:16;:28::i;:::-;1797:43;;1851:14;1868:24;1878:4;1884:1;1887;1890;1868:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1868:24:52;;-1:-1:-1;;1868:24:52;;;-1:-1:-1;1902:79:52;;-1:-1:-1;;;;;;1912:20:52;;;;;;1911:43;;-1:-1:-1;;;;;;1938:15:52;;;;;;;1911:43;10474:3:36;1902:8:52;:79::i;:::-;-1:-1:-1;;;;;1992:14:52;;;;;;:7;:14;;;;;-1:-1:-1;2009:9:52;;1992:26;;2028:31;1992:14;2044:7;2053:5;2028:8;:31::i;:::-;1313:753;;;;;;;;;;;:::o;13785:2489:5:-;14141:26;14169:38;14094:6;3721:68;3752:10;:8;:10::i;3721:68::-;3799:55;3818:11;:9;:11::i;3799:55::-;2970:18:44::1;:16;:18::i;:::-;14316:20:5::2;14350:13;:11;:13::i;:::-;14346:1744;;14412:54;14430:6;14438;14446:9;14457:8;14412:17;:54::i;:::-;14384:82:::0;-1:-1:-1;14384:82:5;-1:-1:-1;14761:58:5::2;2239:3;14770:28:::0;::::2;;5338:3:36;14761:8:5;:58::i;:::-;14833:41;14857:1;2239:3;14833:15;:41::i;:::-;14888:55;14904:9;2239:3;14915:12;:27;14888:15;:55::i;:::-;15030:28;15048:9;15030:17;:28::i;:::-;15172:16;::::0;;15186:1:::2;15172:16:::0;;;;;::::2;::::0;;;;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;;::::0;-1:-1:-1;15172:16:5::2;15148:40;;14346:1744;;;15219:23;15233:8;15219:13;:23::i;:::-;15319:56;15333:15;15350:8;15359:1;15350:11;;;;;;;;;;;;;;15363:8;15372:1;15363:11;;;;;;;;;;;;;;15319:13;:56::i;:::-;15441:228;15470:6;15494;15518:9;15545:8;15571:15;15604:25;15647:8;15441:11;:228::i;:::-;15390:279:::0;;-1:-1:-1;15390:279:5;-1:-1:-1;15390:279:5;-1:-1:-1;15783:40:5::2;15799:9:::0;15390:279;15783:15:::2;:40::i;:::-;15910:28;15928:9;15910:17;:28::i;:::-;16037:42;16057:21;16037:19;:42::i;:::-;16241:26;:24;:26::i;:::-;2998:1:44;13785:2489:5::0;;;;;;;;;;;:::o;2260:254:18:-;2341:7;2383:10;:8;:10::i;:::-;-1:-1:-1;;;;;2364:30:18;;;;;;2360:148;;;-1:-1:-1;;;2410:18:18;;2360:148;2466:31;2482:5;2489:7;2466:15;:31::i;:::-;2459:38;;;;8769:117:5;8824:16;8859:20;:18;:20::i;4029:110:27:-;4124:8;4029:110;:::o;1135:274:42:-;1345:5;1369:33;1345:5;1369:19;:33::i;:::-;1135:274;;:::o;4808:172:33:-;4892:7;4918:55;:4;4934:14;2092:2;4918:15;:55::i;:::-;4911:62;4808:172;-1:-1:-1;;;4808:172:33:o;5083:194::-;5178:7;5204:66;:4;5222:18;2155:2;5204:17;:66::i;948:166:48:-;1006:7;1025:37;1039:1;1034;:6;;4370:1:36;1025:8:48;:37::i;:::-;-1:-1:-1;1084:5:48;;;948:166::o;3094:280:45:-;3209:7;2126:10;3276:17;;3274:20;3258:36;;3287:6;3342:5;:13;;3354:1;3342:13;;;3350:1;3342:13;3334:22;;:32;;3312:55;;3094:280;-1:-1:-1;;;;3094:280:45:o;6887:269::-;-1:-1:-1;;;;;7074:18:45;;7072:21;7056:37;;;;7133:15;;7111:38;;6887:269::o;9345:213:51:-;-1:-1:-1;;;;;9468:18:51;;;;;;;-1:-1:-1;9468:18:51;;;;;;;;:27;;;;;;;;;;;;;;:36;;;9519:32;;;;;9468:36;;9519:32;:::i;:::-;;;;;;;;9345:213;;;:::o;2300:181:35:-;2355:16;2374:20;-1:-1:-1;;;;;;2386:7:35;;;2374:11;:20::i;:::-;2355:39;;2404:70;2413:33;2425:8;2435:10;2413:11;:33::i;:::-;8353:3:36;2404:8:35;:70::i;3793:358:44:-;3849:6;3845:232;;;3871:81;3898:24;:22;:24::i;:::-;3880:15;:42;8455:3:36;3871:8:44;:81::i;:::-;3845:232;;;3983:83;4010:25;:23;:25::i;:::-;3992:15;:43;9885:3:36;3983:8:44;:83::i;:::-;4087:7;:16;;-1:-1:-1;;4087:16:44;;;;;;;4118:26;;;;;;4087:16;;4118:26;:::i;:::-;;;;;;;;3793:358;:::o;4544:237::-;4591:4;4737:25;:23;:25::i;:::-;4719:15;:43;:55;;;-1:-1:-1;;4767:7:44;;;;4766:8;;4544:237::o;4894:108::-;4976:19;4894:108;:::o;5008:110::-;5091:20;5008:110;:::o;35083:115:5:-;35142:7;35168:23;:9;;:21;:23::i;866:101:36:-;935:9;930:34;;946:18;954:9;946:7;:18::i;7068:559:51:-;7195:71;-1:-1:-1;;;;;7204:20:51;;;;8770:3:36;7195:8:51;:71::i;:::-;7276:72;-1:-1:-1;;;;;7285:23:51;;;;8838:3:36;7276:8:51;:72::i;:::-;7359:47;7380:6;7388:9;7399:6;7359:20;:47::i;:::-;-1:-1:-1;;;;;7437:17:51;;:9;:17;;;;;;;;;;;:68;;7459:6;9316:3:36;7437:21:51;:68::i;:::-;-1:-1:-1;;;;;7417:17:51;;;:9;:17;;;;;;;;;;;:88;;;;7538:20;;;;;;;:32;;7563:6;7538:24;:32::i;:::-;-1:-1:-1;;;;;7515:20:51;;;:9;:20;;;;;;;;;;;;:55;;;;7585:35;;;;;;;;;;7613:6;;7585:35;:::i;4220:98:44:-;4272:39;4281:14;:12;:14::i;:::-;8397:3:36;4272:8:44;:39::i;8453:158:5:-;8525:9;;:35;;8552:7;8525:26;:35::i;:::-;8513:9;:47;8575:29;;;;;;8596:7;;8575:29;:::i;34716:361::-;34790:9;;34813:24;34790:9;34813:22;:24::i;:::-;34809:262;;;34864:68;34889:42;34916:14;;34889:26;:42::i;:::-;34864:8;;:24;:68::i;:::-;34853:79;;34957:69;34984:41;35011:13;:11;:13::i;:::-;34984:26;:41::i;:::-;34957:8;;:26;:69::i;:::-;35040:9;:20;-1:-1:-1;34716:361:5:o;7270:786:29:-;7534:7;7992:40;:10;7534:7;7992:21;:40::i;:::-;7923:54;:15;2605:2;7923:27;:54::i;:::-;7852:56;:16;2668:2;7852:28;:56::i;:::-;7784:53;:14;2730:3;7784:26;:53::i;:::-;7714:55;:15;2794:3;7714:27;:55::i;:::-;7644;:15;2858:3;7644:27;:55::i;:::-;7572:57;:16;2923:3;7572:28;:57::i;:::-;:127;:197;:265;:336;:405;:460;;7270:786;-1:-1:-1;;;;;;;;7270:786:29:o;5583:129::-;5641:7;5667:38;:6;5641:7;5667:19;:38::i;2386:188:50:-;2447:7;2494:10;2506:12;2520:15;2537:13;:11;:13::i;:::-;2560:4;2483:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2473:94;;;;;;2466:101;;2386:188;:::o;7175:397:5:-;7251:87;2347:4;7260:17;:45;;5289:3:36;7251:8:5;:87::i;:::-;7348;2420:4;7357:17;:45;;5228:3:36;7348:8:5;:87::i;:::-;7458:9;;:49;;7489:17;7458:30;:49::i;:::-;7446:9;:61;7522:43;;;;;;7547:17;;7522:43;:::i;915:167:55:-;973:7;1004:5;;;1019:37;1028:6;;;;973:7;1019:8;:37::i;41074:135:5:-;41134:7;41160:6;:42;;41187:15;41160:42;;;-1:-1:-1;41169:15:5;;41074:135;-1:-1:-1;41074:135:5:o;41371:144::-;41451:7;41477:31;41486:6;41494:13;41477:8;:31::i;8996:1011:9:-;9423:16;;;9437:1;9423:16;;;9395:25;9423:16;;;;;9190:24;;;;;;9423:16;;;;;;;;;;;;-1:-1:-1;9423:16:9;9395:44;;9463:15;:50;;9498:15;9463:50;;;9481:14;9463:50;9449:8;9458:1;9449:11;;;;;;;;;;;;;:64;;;;;9537:15;:50;;9573:14;9537:50;;;9555:15;9537:50;9523:8;9532:1;9523:11;;;;;;;;;;;;;:64;;;;;9598:28;;:::i;:::-;9629:17;:15;:17::i;:::-;9598:48;-1:-1:-1;9676:71:9;9708:8;9598:48;9729:1;9718:13;;9676:71;9657:90;;9758:30;;:::i;:::-;9791:51;9813:10;9825:16;9791:21;:51::i;:::-;9758:84;;9870:15;:51;;9906:15;;;;9870:51;;;9888:15;;9870:51;9853:68;;9949:15;:51;;9985:15;;9949:51;;;9967:15;;;;9949:51;9931:69;;8996:1011;;;;;;;;;;:::o;2239:130:33:-;2298:6;2323:39;:4;2298:6;2323:16;:39::i;2453:135::-;2514:6;2539:42;:4;1902:2;2539:16;:42::i;2691:168::-;2767:7;2793:59;:4;1978:2;2793:17;:59::i;2942:130::-;3000:7;3026:39;:4;2034:2;3026:17;:39::i;3145:129::-;3205:4;3228:39;:4;2092:2;3228:15;:39::i;3341:143::-;3405:7;3431:46;:4;2155:2;3431:17;:46::i;810:131:42:-;888:46;902:1;897;:6;5002:3:36;888:8:42;:46::i;17438:3092:9:-;17726:19;17759:27;17800:38;18018:28;;:::i;:::-;18049:17;:15;:17::i;:::-;18018:48;;18273:14;:12;:14::i;:::-;18269:2082;;;18609:29;18641:71;18673:8;18683:10;18609:29;18683:13;;;;;18698:10;18709:1;18698:13;;18641:71;18609:103;;18726:30;;:::i;:::-;18759:56;18781:10;18793:21;18759;:56::i;:::-;18726:89;;18892:90;18906:15;18923:8;18932:1;18923:11;;;;;;;;;;;;;;18936:8;18945:1;18936:11;;;;;;;;;;;;;;18949:12;18962:1;18949:15;;;;;;;;;;;18966:12;18979:1;18966:15;;;;18892:13;:90::i;:::-;18997:38;19013:21;18997:15;:38::i;:::-;19078:27;19086:8;19096;19078:7;:27::i;:::-;19050:55;;-1:-1:-1;19050:55:9;-1:-1:-1;19580:95:9;19618:21;19050:55;19654:13;:11;:13::i;:::-;19669:5;19580:37;:95::i;:::-;19563:14;:112;-1:-1:-1;18269:2082:9;;-1:-1:-1;18269:2082:9;;19934:27;19942:8;19952;19934:7;:27::i;:::-;-1:-1:-1;;20306:14:9;:34;19906:55;;-1:-1:-1;19906:55:9;-1:-1:-1;18269:2082:9;20506:16;;;20520:1;20506:16;;;;;;;;20481:11;;20494:10;;20506:16;20520:1;20506:16;;;;;;;;;;-1:-1:-1;20506:16:9;20473:50;;;;;;;17438:3092;;;;;;;;;;;:::o;42454:215:5:-;42546:46;42559:7;42567:1;42559:10;;;;;;;;;;;;;;42571:20;42586:4;42571:14;:20::i;:::-;42546:12;:46::i;:::-;42533:7;42541:1;42533:10;;;;;;;;;;;;;:59;;;;;42615:47;42628:7;42636:1;42628:10;;;;;;;;;;;;;;42640:21;42655:5;42640:14;:21::i;42615:47::-;42602:7;42610:1;42602:10;;;;;;;;;;;;;:60;;;;;42454:215;:::o;43921:6817::-;44584:10;44606:4;44584:27;44580:6152;;44898:28;;44880:12;;44906:4;;44898:28;;44880:12;;44917:8;;44898:28;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;44879:47;;;45144:7;45173:1;45168:3398;;;;48714:9;45168:3398;45624:4;45621:1;45618;45603:26;45698:1;45692:8;-1:-1:-1;;;;;;45663:151:5;-1:-1:-1;;;45982:159:5;;45951:2;;46238:16;46235:1;46232;46217:38;46290:16;46287:1;46280:27;45951:2;;47629;47623:4;47620:1;47605:27;47814:2;47808:4;47801:16;48222:2;48204:16;48200:25;48194:4;48188;48173:53;48544:2;48526:16;48522:25;48519:1;48512:36;45010:3745;48785:23;48799:8;48785:13;:23::i;:::-;48824:17;48843:29;48878:224;48903:6;48927;48951:9;48978:8;49004:15;49037:25;49080:8;48878:7;:224;;:::i;:::-;48823:279;;;;;49117:29;49133:12;49117:15;:29;;:::i;:::-;49627:19;;-1:-1:-1;;50014:23:5;;50054:24;;;50341:66;-1:-1:-1;;50303:16:5;;50275:150;-1:-1:-1;49623:28:5;-1:-1:-1;;50451:16:5;;50704:2;50694:13;;50451:16;50680:28;7503:106:27;7561:7;7587:15;;;:8;:15;;;;;;;7503:106::o;8128:679:29:-;8220:19;8253:22;8289:18;8321:21;8356:19;8389:22;8425:18;8483:25;8501:6;8483:17;:25::i;:::-;8468:40;;8536:24;8553:6;8536:16;:24::i;:::-;8518:42;;8584:24;8601:6;8584:16;:24::i;:::-;8570:38;;8635:23;8651:6;8635:15;:23::i;:::-;8618:40;;8683:25;8701:6;8683:17;:25::i;:::-;8668:40;;8736:24;8753:6;8736:16;:24::i;:::-;8718:42;;8783:17;8793:6;8783:9;:17::i;:::-;8770:30;;8128:679;;;;;;;;;:::o;1793:180:48:-;1851:7;1882:5;;;1897:51;1906:6;;;:20;;;1925:1;1920;1916;:5;;;;;;:10;1906:20;4467:1:36;1897:8:48;:51::i;2485:355:46:-;2547:7;2566:38;2575:6;;;4516:1:36;2566:8:46;:38::i;:::-;2619:6;2615:219;;-1:-1:-1;2648:1:46;2641:8;;2615:219;893:4;2700:7;;;;2721:51;;2700:1;:7;:1;2730:13;;;;;:20;4564:1:36;2721:8:46;:51::i;:::-;2822:1;2810:9;:13;;;;;;2803:20;;;;;6747:251:27;6920:71;;-1:-1:-1;;;6920:71:27;;6895:6;;6920:14;;-1:-1:-1;;6920:71:27;;6954:8;;6964;;6974:11;;6987:3;;6920:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6913:78;6747:251;-1:-1:-1;;;;6747:251:27:o;2377:245:9:-;2435:35;;:::i;:::-;2505:21;2521:4;2505:15;:21::i;:::-;2482:44;;2559:22;2500:1;2559:15;:22::i;:::-;2536:20;;;:45;:17;2377:245::o;41702:201:5:-;41788:42;41797:7;41805:1;41797:10;;;;;;;;;;;;;;41809:20;41824:4;41809:14;:20::i;:::-;41788:8;:42::i;:::-;41775:7;41783:1;41775:10;;;;;;;;;;;;;:55;;;;;41853:43;41862:7;41870:1;41862:10;;;;;;;;;;;;;;41874:21;41889:5;41874:14;:21::i;4016:104:18:-;4092:21;4098:6;4106;4092:5;:21::i;13297:1955:9:-;13584:7;13605:16;13635;13676:28;;:::i;:::-;13707:17;:15;:17::i;:::-;13676:48;-1:-1:-1;14029:29:9;14061:71;14093:8;13676:48;14029:29;14103:13;;14061:71;14029:103;;14142:30;;:::i;:::-;14175:56;14197:10;14209:21;14175;:56::i;:::-;14142:89;;14296:90;14310:15;14327:8;14336:1;14327:11;;;;;;;14296:90;14397:38;14413:21;14397:15;:38::i;:::-;14447:20;14469:26;14499:27;14507:8;14517;14499:7;:27::i;:::-;14446:80;;;;14977:95;15015:21;15038:12;15052:13;:11;:13::i;:::-;15067:4;14977:37;:95::i;:::-;14960:14;:112;15228:16;;;15242:1;15228:16;;;;;;;;15203:12;;15217:9;;15228:16;15242:1;15228:16;;;;;;;;;;-1:-1:-1;15228:16:9;15195:50;;;;;;;;;;;13297:1955;;;;;;;;;;;:::o;43212:209:5:-;43302:44;43313:7;43321:1;43313:10;;;;;;;;;;;;;;43325:20;43340:4;43325:14;:20::i;:::-;43302:10;:44::i;:::-;43289:7;43297:1;43289:10;;;;;;;;;;;;;:57;;;;;43369:45;43380:7;43388:1;43380:10;;;;;;;;;;;;;;43392:21;43407:5;43392:14;:21::i;25886:1459:9:-;26110:9;;26133:24;26110:9;26133:22;:24::i;:::-;:58;;;;;26176:15;26161:12;:30;26133:58;26129:1210;;;26207:19;26229:95;26265:13;26280;26295;26310;26229:35;:95::i;:::-;26207:117;;26339:18;26360:215;26412:13;26443;26474;26505;26536:25;:8;:23;:25::i;:::-;26360:34;:215::i;:::-;26339:236;;26590:26;26619:22;:8;:20;:22::i;:::-;26590:51;;26655:43;26701:40;:8;:38;:40::i;:::-;26655:86;;26755:26;26784:220;26819:35;26872:18;26908:12;26938:11;26967:23;:8;:21;:23::i;:::-;26784:17;:220::i;:::-;26755:249;;27045:18;27023;:40;27019:310;;27146:43;:8;27170:18;27146:23;:43::i;:::-;27135:54;-1:-1:-1;27218:58:9;27135:54;27260:15;27218:41;:58::i;:::-;27294:9;:20;;;27207:69;-1:-1:-1;26129:1210:9;;;;;;25886:1459;;;;;;:::o;1862:617:46:-;1922:7;1959:5;;;1974:57;1983:6;;;:26;;;2008:1;2003;1993:7;:11;;;;1974:57;2046:12;2042:431;;2081:1;2074:8;;;;;2042:431;893:4;-1:-1:-1;;2439:11:46;;2438:19;;2461:1;2437:25;2430:32;;;;;7350:466:9;7596:7;7682:127;7710:21;7733:22;7757:11;:18;;;7777:14;7793:15;7682:27;:127::i;:::-;7675:134;;7350:466;;;;;;;;:::o;42107:154:5:-;42193:7;42219:35;42232:6;42240:13;42219:12;:35::i;7822:467:9:-;8069:7;8155:127;8183:21;8206:22;8230:11;:18;;;8250:14;8266:15;8155:27;:127::i;42871:150:5:-;42955:7;42981:33;42992:6;43000:13;42981:10;:33::i;4812:112:46:-;4866:7;893:4;4893:1;:7;4892:25;;4916:1;4892:25;;;-1:-1:-1;893:4:46;4905:7;;4812:112::o;2846:682::-;2906:7;2925:38;2934:6;;;4516:1:36;2925:8:46;:38::i;:::-;2978:6;2974:548;;-1:-1:-1;3007:1:46;3000:8;;2974:548;893:4;3059:7;;;;3080:51;;3059:1;:7;:1;3089:13;;;3080:51;3505:1;3500;3488:9;:13;3487:19;;;;43427:488:5;43485:11;43882:10;:8;:10::i;:::-;-1:-1:-1;;;;;43882:24:5;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3224:1238:7:-;3370:7;4290:9;4301:10;4313:15;4330:10;4344:55;4369:8;4379:9;4390:8;4344:24;:55::i;:::-;4289:110;;;;;;;;4416:39;4436:1;4439:2;4443:7;4452:2;4416:19;:39::i;:::-;4409:46;3224:1238;-1:-1:-1;;;;;;;;3224:1238:7:o;3199:183:50:-;3276:7;3341:20;:18;:20::i;:::-;3363:10;3312:62;;;;;;;;;:::i;10884:1016:9:-;11026:7;11035:16;11063:30;11096:19;:8;:17;:19::i;:::-;11063:52;-1:-1:-1;11125:70:9;11142:30;11134:4;:38;;;;;;;;;5443:3:36;11125:8:9;:70::i;:::-;11206:26;11235:27;:8;:25;:27::i;:::-;11206:56;;11272;11308:9;:16;11326:1;11272:35;:56::i;:::-;11338:24;11352:9;11338:13;:24::i;:::-;11373:28;;:::i;:::-;11404:17;:15;:17::i;:::-;11373:48;-1:-1:-1;11432:26:9;11461:72;11493:9;11373:48;11432:26;11504:13;;11461:72;11432:101;;11750:20;11773:31;11782:18;11802:1;11773:8;:31::i;:::-;11815:14;:35;;;;-1:-1:-1;11815:35:9;11883:9;;-1:-1:-1;10884:1016:9;;-1:-1:-1;;;;;;;10884:1016:9:o;3900:110:18:-;3979:24;3985:9;3996:6;3979:5;:24::i;27630:172:9:-;;;;:::o;3885:149:51:-;-1:-1:-1;;;;;4000:18:51;;;3974:7;4000:18;;;-1:-1:-1;4000:18:51;;;;;;;;:27;;;;;;;;;;;;;3885:149::o;8892:298:5:-;9018:16;;;9032:1;9018:16;;;8953;9018;;;;;8953;;;9018;9032:1;9018:16;;;;;;;;;;-1:-1:-1;9018:16:5;8981:53;;9067:24;9086:4;9067:18;:24::i;:::-;9044:17;9062:1;9044:20;;;;;;;;;;;;;:47;;;;;9124:25;9143:5;9124:18;:25::i;:::-;9101:17;9119:1;9101:20;;;;;;;;;;;;;;;;;:48;9166:17;-1:-1:-1;8892:298:5;:::o;1415:374:42:-;1511:1;1496:5;:12;:16;1492:53;;;1528:7;;1492:53;1555:16;1574:5;1580:1;1574:8;;;;;;;;;;;;;;1555:27;;1597:9;1609:1;1597:13;;1592:191;1616:5;:12;1612:1;:16;1592:191;;;1649:15;1667:5;1673:1;1667:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;1689:51:42;-1:-1:-1;;;;;1698:18:42;;;;;;;4890:3:36;1689:8:42;:51::i;:::-;1765:7;-1:-1:-1;1630:3:42;;1592:191;;1969:544:21;2057:4;1663:42;2078:10;:8;:10::i;:::-;-1:-1:-1;;;;;2078:29:21;;;;;2077:63;;;2112:28;2131:8;2112:18;:28::i;:::-;2073:434;;;2272:10;:8;:10::i;:::-;-1:-1:-1;;;;;2258:24:21;:10;:24;;-1:-1:-1;2251:31:21;;2073:434;2435:16;:14;:16::i;:::-;:61;;-1:-1:-1;;;2435:61:21;;-1:-1:-1;;;;;2435:27:21;;;;;;;:61;;2463:8;;2473:7;;2490:4;;2435:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1074:3172:36:-;-1:-1:-1;;;3588:3:36;3581:79;;;3799:66;3793:4;3786:80;3941:1;3935:4;3928:15;2210:2;2243:18;;;2336;;;2383;;;2215:4;2379:29;;;3057:2;3053:17;2195:18;;;;2288;;;;2284:29;;;;3040:1;3036:14;3025:26;;;;3021:50;;;;2999:73;;2994:3;2990:83;4008:4;4001:26;4234:3;;4224:14;1765:176:55;1842:7;1861:27;1875:1;1870;:6;;1878:9;1861:8;:27::i;:::-;-1:-1:-1;;1910:5:55;;;1765:176::o;2009:340:43:-;2068:6;2086:9;2098:28;2119:5;2098:13;:28::i;:::-;2086:40;;2187:18;2214:1;2209:2;:6;:78;;1324:6;2254:2;:33;2209:78;;;1324:6;2218:2;:33;2209:78;1259:4;2305:37;;;;-1:-1:-1;;;;2009:340:43:o;3594:171:33:-;3678:7;3704:54;:4;3721:13;3678:7;3704:16;:54::i;3878:180::-;3966:7;3992:59;:4;4009:15;1902:2;3992:16;:59::i;8603:131:45:-;8711:15;;8603:131::o;9370:237::-;2545:11;9563:25;;;;9562:37;;;9370:237::o;8941:::-;2386:11;9134:25;;;;9133:37;;;8941:237::o;11062:142::-;11171:14;2439:11;11163:34;;11062:142::o;3388:427:50:-;3790:9;;3765:44::o;3317:392:9:-;3460:35;;:::i;:::-;3534:50;3553:4;3559:10;3553:4;3559:13;;;;;3574:9;3534:18;:50::i;:::-;3511:73;;3617:51;3529:1;3643:10;3529:1;3643:13;;3617:51;3594:20;;;:74;:17;3317:392;-1:-1:-1;;3317:392:9:o;12135:487:45:-;12209:6;12257:14;;;2386:11;12249:34;2846:11;12558:19;;:57;;12610:5;12558:57;;;-1:-1:-1;;12581:25:45;;;-1:-1:-1;;;12135:487:45:o;10534:142::-;10643:14;2280:11;10635:34;;10534:142::o;9730:143::-;9835:14;2126:10;9827:33;;;9826:40;;9730:143::o;11590:142::-;11699:14;-1:-1:-1;;;;;11691:34:45;;11590:142::o;22343:583:9:-;22636:16;22654:20;22676;22698:19;22721:98;22760:14;;22788:21;22721:25;:98::i;:::-;22635:184;;;;;;;;22857:62;22869:8;22879:12;22893;22907:11;22857;:62::i;:::-;22343:583;;;;;:::o;20536:592::-;20626:19;20647:27;20686:30;20719:19;:8;:17;:19::i;:::-;20686:52;-1:-1:-1;20901:53:9;20893:4;:61;;;;;;;;;20889:233;;;20998:47;21026:8;21036;20998:27;:47::i;:::-;20970:75;;-1:-1:-1;20970:75:9;-1:-1:-1;20889:233:9;;;21076:35;7850:3:36;21076:7:9;:35::i;:::-;20536:592;;;;;;:::o;11456:743:15:-;11642:21;11711:13;11707:486;;;11814:10;11827:57;11867:16;11827:33;:10;11844:15;11827:16;:33::i;:::-;:39;;:57::i;:::-;11814:70;-1:-1:-1;11914:18:15;:10;11814:70;11914:14;:18::i;:::-;11898:34;;11707:486;;;;12060:10;12073:61;12117:16;12073:35;:10;12092:15;12073:18;:35::i;:61::-;12060:74;-1:-1:-1;12164:18:15;:10;12060:74;12164:14;:18::i;:::-;12148:34;11456:743;-1:-1:-1;;;;;;11456:743:15:o;2157:148:48:-;2219:7;2238:38;2247:6;;;4516:1:36;2238:8:48;:38::i;:::-;2297:1;2293;:5;;;;;;;2157:148;-1:-1:-1;;;2157:148:48:o;5816:144:29:-;5881:6;5906:47;:6;2923:3;5906:18;:47::i;6061:142::-;6125:6;6150:46;:6;2858:3;6150:18;:46::i;6306:142::-;6370:6;6395:46;:6;2794:3;6395:18;:46::i;6548:140::-;6611:6;6636:45;:6;2730:3;6636:18;:45::i;6791:143::-;6856:6;6881:46;:6;2668:2;6881:18;:46::i;7034:141::-;7098:6;7123:45;:6;2605:2;7123:18;:45::i;2628:141:9:-;2701:7;2727:10;:35;;2753:9;2727:35;;;-1:-1:-1;2740:10:9;;2628:141;-1:-1:-1;2628:141:9:o;8512:410:51:-;8587:68;-1:-1:-1;;;;;8596:21:51;;;;8968:3:36;8587:8:51;:68::i;:::-;8666:49;8687:7;8704:1;8708:6;8666:20;:49::i;:::-;-1:-1:-1;;;;;8747:18:51;;:9;:18;;;;;;;;;;;:67;;8770:6;9382:3:36;8747:22:51;:67::i;:::-;-1:-1:-1;;;;;8726:18:51;;:9;:18;;;;;;;;;;:88;8839:12;;:24;;8856:6;8839:16;:24::i;:::-;8824:12;:39;8878:37;;8904:1;;-1:-1:-1;;;;;8878:37:51;;;;;;;8908:6;;8878:37;:::i;:::-;;;;;;;;8512:410;;:::o;15258:581:9:-;15348:20;15370:26;15408:30;15441:19;:8;:17;:19::i;:::-;15408:52;-1:-1:-1;15605:57:9;15597:4;:65;;;;;;;;;15593:240;;;15706:50;15737:8;15747;15706:30;:50::i;15593:240::-;15787:35;6263:3:36;15787:7:9;:35::i;2311:232:48:-;2371:7;2390:38;2399:6;;;4516:1:36;2390:8:48;:38::i;:::-;2443:6;2439:98;;-1:-1:-1;2472:1:48;2465:8;;2439:98;2525:1;2520;2516;:5;2515:11;;;;;;2511:1;:15;2504:22;;;;2609:847:8;2787:6;3245:17;3265:130;3293:8;3315:17;3346:8;3368:17;3265:14;:130::i;:::-;3245:150;;3412:37;3439:9;3412:26;:37::i;3954:1459::-;4165:6;4849:17;4869:130;4897:8;4919:17;4950:8;4972:17;4869:14;:130::i;:::-;4849:150;-1:-1:-1;5009:22:8;5034:39;5047:25;:8;4849:150;5047:14;:25::i;:::-;5034:8;;:12;:39::i;:::-;5009:64;;5083:24;5110:42;5137:14;5110:26;:42::i;:::-;5369:37;;;;;3954:1459;-1:-1:-1;;;;;;;;3954:1459:8:o;5786:955:27:-;5999:7;6119:14;6136:88;6167:12;6181:11;6194:12;6208:15;6136:23;6147:11;6136:10;:23::i;:::-;:30;:88;;;:30;:88::i;:::-;6119:105;-1:-1:-1;2237:9:27;6481:15;:47;;;:71;;;6576:44;;6609:11;6576:44;;;6588:18;:11;:16;:18::i;:::-;6675:21;;;;:8;:21;;;;;:30;;;;-1:-1:-1;6675:21:27;5786:955;-1:-1:-1;;;;;;5786:955:27:o;4534:169:33:-;4617:7;4643:53;:4;4661:12;2034:2;4643:17;:53::i;4197:217::-;4303:7;4329:78;:4;4347:17;1978:2;4329:17;:78::i;8155:2546:7:-;8357:17;9922:75;9943:32;:9;2015:6;9943:17;:32::i;:::-;9931:8;:44;;5915:3:36;9922:8:7;:75::i;:::-;10183:18;10206:56;10220:41;:15;10242:18;10220:21;:41::i;:::-;10206:9;;:13;:56::i;:::-;10183:79;-1:-1:-1;10276:20:7;10299:60;10314:44;:16;10339:18;10314:24;:44::i;10299:60::-;10276:83;-1:-1:-1;10386:64:7;10425:24;:10;10440:8;10425:14;:24::i;:::-;10386:30;:12;10407:8;10386:20;:30::i;:64::-;10374:76;;8155:2546;;10471:71;10492:10;10480:9;:22;880:3:6;10471:8:7;:71::i;:::-;10615:79;10637:34;:10;2070:6;10637:18;:34::i;:::-;10624:9;:47;;5966:3:36;10615:8:7;:79::i;11052:2502::-;11255:16;12841:71;12862:10;12850:9;:22;880:3:6;12841:8:7;:71::i;:::-;12922:79;12944:34;:10;2070:6;12944:18;:34::i;:::-;12931:9;:47;;5966:3:36;12922:8:7;:79::i;:::-;13187:18;13210:56;13224:41;:15;13246:18;13224:21;:41::i;13210:56::-;13187:79;-1:-1:-1;13280:20:7;13303:60;13318:44;:16;13343:18;13318:24;:44::i;13303:60::-;13280:83;-1:-1:-1;13389:62:7;13423:27;13280:83;13440:9;13423:16;:27::i;:::-;13389;:10;13406:9;13389:16;:27::i;:62::-;13378:73;-1:-1:-1;13472:75:7;;-1:-1:-1;13493:32:7;;-1:-1:-1;13493:9:7;2015:6;13493:17;:32::i;:::-;13481:8;:44;;5915:3:36;13472:8:7;:75::i;4698:1119::-;4886:9;;;;5015:47;5034:27;:9;5052:8;5034:17;:27::i;:::-;893:4:46;;5015:18:7;:47::i;:::-;5011:51;;5076:14;5093:29;5113:8;5093;5102:1;5093:11;;;;;;;;;;;;;;:19;;:29;;;;:::i;:::-;5076:46;;5136:14;5153:30;5173:9;5153:8;5162:1;5153:11;;;;;;;;;;;;;;:19;;:30;;;;:::i;:::-;5136:47;-1:-1:-1;5202:18:7;:6;5136:47;5202:10;:18::i;:::-;5197:23;;5239:32;5259:8;5268:1;5259:11;;;;;;;;;;;;;;5239:8;5248:1;5239:11;;;;;;;:32;5234:37;;4698:1119;;5474:72;5536:9;5474:53;5517:9;5475:32;5495:8;5504:1;5495:11;;;;;;;;;;;;;;5475:8;5484:1;5475:11;;;;;;;:32;5474:42;;:53::i;:72::-;5464:82;;5556:12;5571:99;5661:8;5571:81;5642:9;5571:62;893:4:46;5614:1:7;:18;5572:32;5592:8;5601:1;5592:11;;;;;;;;;;;;;;5572:8;5581:1;5572:11;;;;;;;5571:99;5556:114;-1:-1:-1;5680:12:7;5695:68;5738:24;5753:8;;5738:14;:24::i;:::-;5696:32;5716:8;5725:1;5716:11;;;;;;;;;;;;;;5696:8;5705:1;5696:11;;;;;;;5695:68;5680:83;-1:-1:-1;5783:27:7;5680:83;5783:17;:7;5795:4;5783:11;:17::i;:::-;:21;;:27::i;:::-;5773:37;;4698:1119;;;;;;;;;:::o;6319:784::-;6517:17;;6568:27;:1;6576:18;6568:7;:27::i;:::-;6546:49;-1:-1:-1;6664:15:7;6682:43;6723:1;6683:30;:2;6694:18;6683:10;:30::i;6682:43::-;6664:61;-1:-1:-1;6821:16:7;6840:20;:7;6664:61;6840:11;:20::i;:::-;6821:39;;6870:17;6890:31;6909:8;6919:1;6890:18;:31::i;:::-;6870:51;-1:-1:-1;7007:17:7;7027;:2;6870:51;7027:6;:17::i;:::-;7007:37;-1:-1:-1;7066:30:7;7007:37;7084:11;7066:17;:30::i;:::-;7054:42;6319:784;-1:-1:-1;;;;;;;;;;6319:784:7:o;867:156:34:-;927:25;982:4;971:45;;;;;;;;;;;;:::i;1205:185::-;1273:26;1338:4;1327:56;;;;;;;;;;;;:::i;7898:294:51:-;7973:49;8002:1;8006:7;8015:6;7973:20;:49::i;:::-;8048:12;;:24;;8065:6;8048:16;:24::i;:::-;8033:12;:39;-1:-1:-1;;;;;8103:18:51;;:9;:18;;;;;;;;;;;:30;;8126:6;8103:22;:30::i;:::-;-1:-1:-1;;;;;8082:18:51;;:9;:18;;;;;;;;;;;:51;;;;8148:37;;8082:18;;:9;8148:37;;;;8178:6;;8148:37;:::i;9196:153:5:-;9268:7;9294:6;:48;;9324:18;9294:48;;;-1:-1:-1;9303:18:5;;9196:153;-1:-1:-1;9196:153:5:o;7578:279::-;7664:4;7712:51;-1:-1:-1;;;7712:11:5;:51::i;:::-;7700:8;:63;7699:151;;;-1:-1:-1;7793:56:5;-1:-1:-1;;;7793:11:5;:56::i;:::-;7781:68;;;;7578:279;-1:-1:-1;7578:279:5:o;13692:345:47:-;13737:6;13838:37;13851:1;13847;:5;4838:3:36;13838:8:47;:37::i;:::-;2964:13;13889:21;-1:-1:-1;13889:46:47;;;;-1:-1:-1;3019:13:47;13914:21;;13889:46;13885:146;;;1935:4;13958:9;13965:1;13958:6;:9::i;:::-;:18;;;;;;13951:25;;;;13885:146;14014:6;14018:1;14014:3;:6::i;:::-;14007:13;;;;7398:373:45;2386:11;7727:25;;;7726:37;;7583:18;;;7581:21;7565:37;;7704:60;7398:373;;;;;:::o;3715:363:9:-;3859:7;3897:10;:174;;4009:61;4049:9;4060;4009:39;:61::i;:::-;3897:174;;;3927:61;3967:9;3978;3927:39;:61::i;23685:914::-;23833:7;23854;23875;23896;23929:27;23958:30;23990:20;24012:19;24035:18;:16;:18::i;:::-;23928:125;;;;;;;;24149:19;24172:1;24149:24;24145:95;;;24197:1;;-1:-1:-1;24197:1:9;;-1:-1:-1;24203:12:9;;-1:-1:-1;24217:11:9;-1:-1:-1;24189:40:9;;-1:-1:-1;;24189:40:9;24145:95;24284:16;24302:20;24326:197;24370:17;24401:16;24431:13;:11;:13::i;:::-;24458:19;24491:22;24326:30;:197::i;:::-;24283:240;;-1:-1:-1;24283:240:9;-1:-1:-1;24566:12:9;;-1:-1:-1;24580:11:9;;-1:-1:-1;;;;;23685:914:9;;;;;;;;:::o;24605:434::-;24814:12;;24810:82;;24842:39;24858:12;24872:8;24842:15;:39::i;:::-;24948:16;;24944:89;;24980:42;24996:11;25009:12;24980:15;:42::i;21134:928::-;21285:7;21294:16;21737:19;21759:33;:8;:31;:33::i;:::-;21737:55;;21903:27;21933:80;21976:8;21986:11;21999:13;:11;:13::i;:::-;21933:42;:80::i;:::-;22031:11;;;;-1:-1:-1;21134:928:9;;-1:-1:-1;;;;21134:928:9:o;1647:209:46:-;1709:7;1746:5;;;1761:57;1770:6;;;:26;;;1795:1;1790;1780:7;:11;;;;1761:57;893:4;1836:13;;;;-1:-1:-1;;;1647:209:46:o;12743:488:45:-;12817:6;12865:14;;;2545:11;12857:34;2901:11;13167:19;;:57;;13219:5;13167:57;;;-1:-1:-1;;13190:25:45;;;-1:-1:-1;;;12743:488:45:o;1353:121:55:-;1411:7;1437:30;1441:1;1444;4370::36;1437:3:55;:30::i;15845:528:9:-;15999:7;16008:16;16040:20;16063:36;:8;:34;:36::i;:::-;16040:59;;16210:26;16239:84;16285:8;16295:12;16309:13;:11;:13::i;:::-;16239:45;:84::i;1244:900:8:-;1419:7;1952:4;1985:152;2066:57;1952:4;2067:31;:8;2080:17;2067:12;:31::i;2066:57::-;1985;2025:16;1985:57;1986:8;1999:17;1986:12;:31::i;3387:1033:29:-;3588:7;3810:14;3853:17;3863:6;3853:9;:17::i;:::-;3834:16;:36;3810:61;;3881:22;3952:7;3933:16;:26;3906:24;3923:6;3906:16;:24::i;:::-;:53;3881:78;;3969:21;4037:7;4019:15;:25;3993:23;4009:6;3993:15;:23::i;:::-;:51;3969:75;;4054:22;4125:7;4106:16;:26;4079:24;4096:6;4079:16;:24::i;:::-;:53;4054:78;;4162:251;4184:16;4218:15;4251;4284:14;4316:16;4350:15;4383:16;4162:4;:251::i;1205:98:26:-;1257:7;1283:13;1287:5;1294:1;1283:3;:13::i;4752:269:45:-;2280:11;4939:18;;4937:21;4921:37;;;;4998:15;;4976:38;;4752:269::o;5795:::-;2439:11;5982:18;;5980:21;5964:37;;;;6041:15;;6019:38;;5795:269::o;7255:985:15:-;7327:7;7350:10;7346:49;;-1:-1:-1;7383:1:15;7376:8;;7346:49;7405:13;7421:24;7439:5;7421:17;:24::i;:::-;7405:40;;7535:1;7525:5;893:4:46;7499:5:15;:22;7498:32;;;;;;7489:5;:42;7488:48;;;;;;7480:56;;7601:1;7591:5;893:4:46;7565:5:15;:22;7564:32;;;;;;7555:5;:42;7554:48;;;;;;7546:56;;7667:1;7657:5;893:4:46;7631:5:15;:22;7630:32;;;;;;7621:5;:42;7620:48;;;;;;7612:56;;7733:1;7723:5;893:4:46;7697:5:15;:22;7696:32;;;;;;7687:5;:42;7686:48;;;;;;7678:56;;7799:1;7789:5;893:4:46;7763:5:15;:22;7762:32;;;;;;7753:5;:42;7752:48;;;;;;7744:56;;7865:1;7855:5;893:4:46;7829:5:15;:22;7828:32;;;;;;7819:5;:42;7818:48;;;;;;7810:56;;7931:1;7921:5;893:4:46;7895:5:15;:22;7894:32;;;;;;7885:5;:42;7884:48;;;;;;;-1:-1:-1;8030:20:15;8053;7884:48;;8053:13;:20::i;:::-;8030:43;-1:-1:-1;8107:33:15;8117:22;:5;8129:9;8117:11;:22::i;:::-;8107:5;;:9;:33::i;:::-;8091:12;:49;;:102;;;;-1:-1:-1;8160:33:15;8170:22;:5;8182:9;8170:11;:22::i;:::-;8160:5;;:9;:33::i;:::-;8144:12;:49;;8091:102;8083:127;;;;-1:-1:-1;;;8083:127:15;;;;;;;:::i;:::-;;;;;;;;19376:1714:47;1935:4;19646:11;19424:6;;-1:-1:-1;20056:10:47;;;;-1:-1:-1;;20031:10:47;;20030:21;20056:10;20029:38;;;;21082:1;20475;-1:-1:-1;20029:38:47;;;;20097:5;;;20096:16;;;20421:15;;;20420:26;;;20469:7;;;20456:20;;;20548:1;20494:15;;;20493:26;;;20542:7;;;20529:20;20621:1;20567:15;;;20566:26;;;20615:7;;;20602:20;20694:1;20640:15;;;20639:26;;;20688:7;;;20675:20;20767:2;20713:15;;;20712:26;;;20761:8;;;20748:21;20841:2;20787:15;;;20786:26;;;20835:8;;;20822:21;20915:2;20861:15;;;;20860:26;;;;20909:8;;;;20896:21;;;;21070:13;;;-1:-1:-1;;;19376:1714:47:o;14151:4959::-;14196:6;1935:4;14218:1;:10;14214:382;;;14558:26;14582:1;-1:-1:-1;14582:1:47;14562:21;;;;;14558:3;:26::i;:::-;14557:27;;14549:36;;;;14214:382;15921:10;15954:11;15949:16;;15945:114;;3214:56;15981:7;;;-1:-1:-1;3158:21:47;16039:9;15945:114;16078:11;16073:16;;16069:114;;3377:28;16105:7;;;-1:-1:-1;3322:20:47;16163:9;16069:114;16321:3;16334:8;;;;16314:10;3543:34;16469:7;;16465:82;;3543:34;2125:4;16497:10;;16496:17;;-1:-1:-1;3486:22:47;16527:9;16465:82;3672:27;16561:1;:7;16557:82;;3672:27;2125:4;16589:10;;16588:17;;-1:-1:-1;3615:22:47;16619:9;16557:82;3793:24;16653:1;:7;16649:82;;3793:24;2125:4;16681:10;;16680:17;;-1:-1:-1;3737:21:47;16711:9;16649:82;3911:22;16745:1;:7;16741:82;;3911:22;2125:4;16773:10;;16772:17;;-1:-1:-1;3855:21:47;16803:9;16741:82;4027:21;16837:1;:7;16833:82;;4027:21;2125:4;16865:10;;16864:17;;-1:-1:-1;3971:21:47;16895:9;16833:82;4142:21;16929:1;:7;16925:82;;4142:21;2125:4;16957:10;;;16956:17;;16987:9;16925:82;4257:21;17021:1;:7;17017:82;;4257:21;2125:4;17049:10;;17048:17;;-1:-1:-1;4201:20:47;17079:9;17017:82;4372:21;17113:1;:7;17109:82;;4372:21;2125:4;17141:10;;17140:17;;-1:-1:-1;4316:20:47;17171:9;17109:82;4489:21;17205:1;:8;17201:85;;4489:21;2125:4;17234:10;;17233:18;;-1:-1:-1;4432:20:47;17265:10;17201:85;4606:21;17300:1;:8;17296:85;;4606:21;2125:4;17329:10;;17328:18;;-1:-1:-1;4550:19:47;17360:10;17296:85;17883:8;2125:4;17921:1;:10;2125:4;;17896:1;:10;17895:21;17894:38;;;;;;;-1:-1:-1;17942:16:47;2125:4;17962:5;;;17961:16;;-1:-1:-1;18071:1:47;;2125:4;18286:15;;;18285:26;;-1:-1:-1;18340:1:47;18285:26;18334:7;18321:20;2125:4;18359:15;;;18358:26;;-1:-1:-1;18413:1:47;18358:26;18407:7;18394:20;2125:4;18432:15;;;18431:26;;-1:-1:-1;18486:1:47;18431:26;18480:7;18467:20;2125:4;18505:15;;;18504:26;;-1:-1:-1;18559:1:47;18504:26;18553:7;18540:20;2125:4;18578:15;;;18577:26;;-1:-1:-1;18632:2:47;18577:26;18626:8;18613:21;18806:1;18793:14;19100:3;19081:15;;;19080:23;;14151:4959;-1:-1:-1;;;;;;;14151:4959:47:o;13897:161:7:-;13996:7;14022:29;:9;14040:10;14022:17;:29::i;13646:159::-;13744:7;13770:28;:9;13788;13770:17;:28::i;25045:497:9:-;25249:10;;:61;;-1:-1:-1;;;25249:61:9;;25133:7;;;;;;;;-1:-1:-1;;;;;25249:10:9;;;;-1:-1:-1;;25249:61:9;;-1:-1:-1;;;;25249:61:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25324:10;;:64;;-1:-1:-1;;;25324:64:9;;-1:-1:-1;;;;;25324:10:9;;;;-1:-1:-1;;25324:64:9;;25343:44;;25324:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25402:10;;:55;;-1:-1:-1;;;25402:55:9;;-1:-1:-1;;;;;25402:10:9;;;;-1:-1:-1;;25402:55:9;;-1:-1:-1;;;;25402:55:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25471:10;;:54;;-1:-1:-1;;;25471:54:9;;-1:-1:-1;;;;;25471:10:9;;;;-1:-1:-1;;25471:54:9;;-1:-1:-1;;;;25471:54:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25228:307;;;;;;;;25045:497;;;;:::o;4736:2410:15:-;4972:7;4981;5715:17;5695:16;:37;5691:443;;-1:-1:-1;6118:1:15;;-1:-1:-1;6118:1:15;6110:13;;5691:443;6586:17;6606:96;6682:19;6607:65;6632:39;:16;6653:17;6632:20;:39::i;:::-;6607:16;;:24;:65::i;6606:96::-;6586:116;-1:-1:-1;6712:21:15;6736:68;6764:39;:16;6785:17;6764:20;:39::i;:::-;6736:19;;:27;:68::i;:::-;6712:92;-1:-1:-1;6814:19:15;6836:35;:16;6712:92;6836:20;:35::i;:::-;6814:57;-1:-1:-1;6881:14:15;6898:30;:9;6814:57;6898:17;:30::i;:::-;6881:47;-1:-1:-1;6987:16:15;7006:38;:22;6881:47;7006:30;:38::i;:::-;6987:57;-1:-1:-1;7054:20:15;7077;:6;6987:57;7077:10;:20::i;:::-;7116:8;;-1:-1:-1;7054:43:15;;-1:-1:-1;;;;;;4736:2410:15;;;;;;;;;:::o;2343:184:34:-;2417:19;2477:4;2466:54;;;;;;;;;;;;:::i;2961:1444:15:-;4214:15;;3113:27;;-1:-1:-1;;;;;4200:30:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4200:30:15;;4187:43;;4245:9;4240:131;4264:8;:15;4260:1;:19;4240:131;;;4316:44;4351:8;4316:26;4336:5;4316:8;4325:1;4316:11;;;;;;;:44;4300:10;4311:1;4300:13;;;;;;;;;;;;;;;;;:60;4281:3;;4240:131;;1692:1175;2681:15;;1848:26;;-1:-1:-1;;;;;2667:30:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2667:30:15;;2655:42;;2712:9;2707:127;2731:8;:15;2727:1;:19;2707:127;;;2782:41;2814:8;2782:25;2800:6;2782:8;2791:1;2782:11;;;;;;;;;;;;;;:17;;:25;;;;:::i;:41::-;2767:9;2777:1;2767:12;;;;;;;;;;;;;;;;;:56;2748:3;;2707:127;;1418:123:26;1512:14;1511:23;;;1418:123::o;8828:1625:15:-;8893:7;893:4:46;8916:5:15;:23;8912:1535;;893:4:46;8969:38:15;893:4:46;8984:5:15;:22;8969:14;:38::i;:::-;8962:64;;-1:-1:-1;8955:71:15;;8912:1535;9070:2;9061:5;:11;9057:71;;-1:-1:-1;1531:10:15;9092:21;;9057:71;9154:3;9145:5;:12;9141:62;;-1:-1:-1;9184:4:15;9177:11;;9141:62;9229:3;9220:5;:12;9216:72;;-1:-1:-1;1472:11:15;9252:21;;9216:72;9314:3;9305:5;:12;9301:62;;-1:-1:-1;9344:4:15;9337:11;;9301:62;9389:3;9380:5;:12;9376:72;;-1:-1:-1;1412:12:15;9412:21;;9376:72;9474:3;9465:5;:12;9461:62;;-1:-1:-1;9504:4:15;9497:11;;9461:62;9549:3;9540:5;:12;9536:72;;-1:-1:-1;1351:13:15;9572:21;;9536:72;9634:3;9625:5;:12;9621:62;;-1:-1:-1;9664:4:15;9657:11;;9621:62;9709:3;9700:5;:12;9696:71;;-1:-1:-1;1289:14:15;9732:20;;9696:71;9793:4;9784:5;:13;9780:63;;-1:-1:-1;9824:4:15;9817:11;;9780:63;9869:4;9860:5;:13;9856:72;;-1:-1:-1;1227:15:15;9893:20;;9856:72;9954:4;9945:5;:13;9941:63;;-1:-1:-1;9985:4:15;9978:11;;9941:63;10030:4;10021:5;:13;10017:72;;-1:-1:-1;1164:16:15;10054:20;;10017:72;10115:4;10106:5;:13;10102:63;;-1:-1:-1;10146:4:15;10139:11;;10102:63;10191:4;10182:5;:13;10178:72;;-1:-1:-1;1100:17:15;10215:20;;10178:72;10276:4;10267:5;:13;10263:63;;-1:-1:-1;10307:4:15;10300:11;;10263:63;10352:4;10343:5;:13;10339:72;;-1:-1:-1;1035:18:15;10376:20;;10339:72;-1:-1:-1;10431:5:15;10424:12;;10459:633;10515:9;-1:-1:-1;;;10540:13:15;;10536:74;;10575:3;10569:9;;;;;10597:2;10592:7;10536:74;10628:7;10623:1;:12;10619:72;;10657:2;10651:8;;;;;10678:2;10673:7;10619:72;10709:7;10704:1;:12;10700:72;;10738:2;10732:8;;;;;10759:2;10754:7;10700:72;10790:7;10785:1;:12;10781:71;;10819:2;10813:8;;;;;10840:1;10835:6;10781:71;10870:6;10865:1;:11;10861:69;;10898:1;10892:7;;;;;10918:1;10913:6;10861:69;10948:6;10943:1;:11;10939:69;;10976:1;10970:7;;;;;10996:1;10991:6;10939:69;11026:6;11021:1;:11;11017:69;;11074:1;11069:6;;10459:633;-1:-1:-1;10459:633:15:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130::-;72:20;;97:33;72:20;97:33;:::i;3604:722::-;;3732:3;3725:4;3717:6;3713:17;3709:27;3699:2;;-1:-1;;3740:12;3699:2;3780:6;3774:13;3802:80;3817:64;3874:6;3817:64;:::i;:::-;3802:80;:::i;:::-;3910:21;;;3793:89;-1:-1;3954:4;3967:14;;;;3942:17;;;4056;;;4047:27;;;;4044:36;-1:-1;4041:2;;;4093:1;;4083:12;4041:2;4118:1;4103:217;4128:6;4125:1;4122:13;4103:217;;;9821:13;;4196:61;;4271:14;;;;4299;;;;4150:1;4143:9;4103:217;;;4107:14;;;;;3692:634;;;;:::o;4873:440::-;;4974:3;4967:4;4959:6;4955:17;4951:27;4941:2;;-1:-1;;4982:12;4941:2;5016:20;;-1:-1;;;;;43483:30;;43480:2;;;-1:-1;;43516:12;43480:2;5051:64;43657:4;-1:-1;;43589:9;43570:17;;43566:33;43647:15;5051:64;:::i;:::-;5042:73;;5135:6;5128:5;5121:21;5239:3;43657:4;5230:6;5163;5221:16;;5218:25;5215:2;;;5256:1;;5246:12;5215:2;48265:6;43657:4;5163:6;5159:17;43657:4;5197:5;5193:16;48242:30;48321:1;48303:16;;;43657:4;48303:16;48296:27;5197:5;4934:379;-1:-1;;4934:379::o;6184:158::-;6265:20;;50115:1;50105:12;;50095:2;;50131:1;;50121:12;6349:158;6430:20;;50230:1;50220:12;;50210:2;;50246:1;;50236:12;10017:241;;10121:2;10109:9;10100:7;10096:23;10092:32;10089:2;;;-1:-1;;10127:12;10089:2;85:6;72:20;97:33;124:5;97:33;:::i;10265:263::-;;10380:2;10368:9;10359:7;10355:23;10351:32;10348:2;;;-1:-1;;10386:12;10348:2;226:6;220:13;238:33;265:5;238:33;:::i;10535:366::-;;;10656:2;10644:9;10635:7;10631:23;10627:32;10624:2;;;-1:-1;;10662:12;10624:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;10714:63;-1:-1;10814:2;10853:22;;72:20;97:33;72:20;97:33;:::i;:::-;10822:63;;;;10618:283;;;;;:::o;10908:491::-;;;;11046:2;11034:9;11025:7;11021:23;11017:32;11014:2;;;-1:-1;;11052:12;11014:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;11104:63;-1:-1;11204:2;11243:22;;72:20;97:33;72:20;97:33;:::i;:::-;11008:391;;11212:63;;-1:-1;;;11312:2;11351:22;;;;9673:20;;11008:391::o;11406:991::-;;;;;;;;11610:3;11598:9;11589:7;11585:23;11581:33;11578:2;;;-1:-1;;11617:12;11578:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;11669:63;-1:-1;11769:2;11808:22;;72:20;97:33;72:20;97:33;:::i;:::-;11777:63;-1:-1;11877:2;11916:22;;9673:20;;-1:-1;11985:2;12024:22;;9673:20;;-1:-1;12093:3;12131:22;;9949:20;47122:4;47111:16;;50565:33;;50555:2;;-1:-1;;50602:12;50555:2;11572:825;;;;-1:-1;11572:825;;;;12102:61;12200:3;12240:22;;4667:20;;-1:-1;12309:3;12349:22;;;4667:20;;11572:825;-1:-1;;11572:825::o;12404:366::-;;;12525:2;12513:9;12504:7;12500:23;12496:32;12493:2;;;-1:-1;;12531:12;12493:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;12583:63;12683:2;12722:22;;;;9673:20;;-1:-1;;;12487:283::o;12777:825::-;;;;12992:2;12980:9;12971:7;12967:23;12963:32;12960:2;;;-1:-1;;12998:12;12960:2;13043:24;;-1:-1;;;;;13076:30;;;13073:2;;;-1:-1;;13109:12;13073:2;13227:6;13216:9;13212:22;;;453:3;446:4;438:6;434:17;430:27;420:2;;-1:-1;;461:12;420:2;501:6;495:13;523:96;538:80;611:6;538:80;:::i;523:96::-;625:16;661:6;654:5;647:21;691:4;;708:3;704:14;697:21;;691:4;683:6;679:17;813:3;691:4;;797:6;793:17;683:6;784:27;;781:36;778:2;;;-1:-1;;820:12;778:2;-1:-1;846:10;;840:233;865:6;862:1;859:13;840:233;;;5773:6;5767:13;5785:49;5828:5;5785:49;:::i;:::-;933:77;;887:1;880:9;;;;;1024:14;;;;1052;;840:233;;;-1:-1;13287:18;;13281:25;13129:115;;-1:-1;13281:25;-1:-1;;;13315:30;;;13312:2;;;-1:-1;;13348:12;13312:2;;13378:89;13459:7;13450:6;13439:9;13435:22;13378:89;:::i;:::-;13368:99;;;13504:2;13558:9;13554:22;9821:13;13512:74;;12954:648;;;;;:::o;13609:459::-;;13779:2;;13767:9;13758:7;13754:23;13750:32;13747:2;;;-1:-1;;13785:12;13747:2;13830:31;;-1:-1;;;;;13870:30;;13867:2;;;-1:-1;;13903:12;13867:2;14020:22;;1291:4;1279:17;;1275:27;-1:-1;1265:2;;-1:-1;;1306:12;1265:2;1353:6;1340:20;1375:121;1390:105;1488:6;1390:105;:::i;1375:121::-;1524:21;;;1581:14;;;;1556:17;;;1682:4;1670:17;;;1661:27;;;;1658:36;-1:-1;1655:2;;;-1:-1;;1697:12;1655:2;-1:-1;1723:10;;1717:247;1742:6;1739:1;1736:13;1717:247;;;1682:4;6820:9;6815:3;6811:19;6807:30;6804:2;;;-1:-1;;6840:12;6804:2;6868:20;1682:4;6868:20;:::i;:::-;6974:63;7033:3;7009:22;6974:63;:::i;:::-;6949:89;;7152:22;;;9673:20;7113:16;;;7106:75;1810:91;;1764:1;1757:9;;;;;1915:14;;;;1943;;;;1717:247;;;-1:-1;13923:129;;13741:327;-1:-1;;;;;;;;13741:327::o;14075:451::-;;14241:2;;14229:9;14220:7;14216:23;14212:32;14209:2;;;-1:-1;;14247:12;14209:2;14292:31;;-1:-1;;;;;14332:30;;14329:2;;;-1:-1;;14365:12;14329:2;14478:22;;2174:4;2162:17;;2158:27;-1:-1;2148:2;;-1:-1;;2189:12;2148:2;2236:6;2223:20;2258:117;2273:101;2367:6;2273:101;:::i;2258:117::-;2403:21;;;2460:14;;;;2435:17;;;2561:4;2549:17;;;2540:27;;;;2537:36;-1:-1;2534:2;;;-1:-1;;2576:12;2534:2;-1:-1;2602:10;;2596:243;2621:6;2618:1;2615:13;2596:243;;;2561:4;7368:9;7363:3;7359:19;7355:30;7352:2;;;-1:-1;;7388:12;7352:2;7416:20;2561:4;7416:20;:::i;:::-;7522:63;7581:3;7557:22;7522:63;:::i;:::-;7497:89;;7701:22;;;9673:20;7662:16;;;7655:75;7790:2;7844:22;;;9673:20;7805:16;;;7798:75;2689:87;;2643:1;2636:9;;;;;2790:14;;;;2818;;;;2596:243;;14533:235;;14634:2;14622:9;14613:7;14609:23;14605:32;14602:2;;;-1:-1;;14640:12;14602:2;4411:6;4398:20;4423:30;4447:5;4423:30;:::i;14775:257::-;;14887:2;14875:9;14866:7;14862:23;14858:32;14855:2;;;-1:-1;;14893:12;14855:2;4546:6;4540:13;4558:30;4582:5;4558:30;:::i;15039:1235::-;;;;;;;;15279:3;15267:9;15258:7;15254:23;15250:33;15247:2;;;-1:-1;;15286:12;15247:2;4680:6;4667:20;15338:63;;15438:2;;15481:9;15477:22;72:20;97:33;124:5;97:33;:::i;:::-;15446:63;-1:-1;15546:2;15585:22;;72:20;97:33;72:20;97:33;:::i;:::-;15554:63;-1:-1;15682:2;15667:18;;15654:32;-1:-1;;;;;15695:30;;;15692:2;;;-1:-1;;15728:12;15692:2;15819:6;15808:9;15804:22;;;2988:3;2981:4;2973:6;2969:17;2965:27;2955:2;;-1:-1;;2996:12;2955:2;3043:6;3030:20;3065:80;3080:64;3137:6;3080:64;:::i;3065:80::-;3151:16;3187:6;3180:5;3173:21;15438:2;3234:3;3230:14;3223:21;;15438:2;3209:6;3205:17;3339:3;15438:2;;3323:6;3319:17;3209:6;3310:27;;3307:36;3304:2;;;-1:-1;;3346:12;3304:2;-1:-1;3372:10;;3366:206;3391:6;3388:1;3385:13;3366:206;;;9673:20;;3459:50;;3413:1;3406:9;;;;;3523:14;;;;3551;;3366:206;;;-1:-1;15748:88;-1:-1;;;15873:3;15913:22;;9673:20;;-1:-1;15982:3;16022:22;;9673:20;;-1:-1;16119:3;16104:19;;16091:33;;-1:-1;16133:30;;;16130:2;;;-1:-1;;16166:12;16130:2;;;16196:62;16250:7;16241:6;16230:9;16226:22;16196:62;:::i;:::-;16186:72;;;15241:1033;;;;;;;;;;:::o;16281:239::-;;16384:2;16372:9;16363:7;16359:23;16355:32;16352:2;;;-1:-1;;16390:12;16352:2;4803:20;;-1:-1;;;;;;46302:78;;49416:34;;49406:2;;-1:-1;;49454:12;16839:291;;16968:2;16956:9;16947:7;16943:23;16939:32;16936:2;;;-1:-1;;16974:12;16936:2;5944:6;5938:13;5956:47;5997:5;5956:47;:::i;17137:427::-;;;17283:2;17271:9;17262:7;17258:23;17254:32;17251:2;;;-1:-1;;17289:12;17251:2;5944:6;5938:13;5956:47;5997:5;5956:47;:::i;:::-;17466:2;17516:22;;;;9821:13;17341:88;;9821:13;;-1:-1;;;17245:319::o;17869:556::-;;;18040:2;18028:9;18019:7;18015:23;18011:32;18008:2;;;-1:-1;;18046:12;18008:2;5944:6;5938:13;5956:47;5997:5;5956:47;:::i;:::-;18244:2;18229:18;;18223:25;18098:88;;-1:-1;;;;;;18257:30;;18254:2;;;-1:-1;;18290:12;18254:2;18320:89;18401:7;18392:6;18381:9;18377:22;18320:89;:::i;:::-;18310:99;;;18002:423;;;;;:::o;18866:269::-;;18984:2;18972:9;18963:7;18959:23;18955:32;18952:2;;;-1:-1;;18990:12;18952:2;19052:67;19111:7;19087:22;19052:67;:::i;19142:261::-;;19256:2;19244:9;19235:7;19231:23;19227:32;19224:2;;;-1:-1;;19262:12;19224:2;-1:-1;6591:13;;19218:185;-1:-1;19218:185::o;19410:637::-;;;;19578:2;19566:9;19557:7;19553:23;19549:32;19546:2;;;-1:-1;;19584:12;19546:2;19629:31;;-1:-1;;;;;19669:30;;;19666:2;;;-1:-1;;19702:12;19666:2;19798:6;19787:9;19783:22;;;8062:6;;8050:9;8045:3;8041:19;8037:32;8034:2;;;-1:-1;;8072:12;8034:2;8100:22;8062:6;8100:22;:::i;:::-;8091:31;;8204:63;8263:3;8239:22;8204:63;:::i;:::-;8186:16;8179:89;8365:65;8426:3;8332:2;8406:9;8402:22;8365:65;:::i;:::-;8332:2;8351:5;8347:16;8340:91;8529:65;8590:3;8496:2;8570:9;8566:22;8529:65;:::i;:::-;8496:2;8515:5;8511:16;8504:91;19578:2;8716:9;8712:22;9673:20;19578:2;8677:5;8673:16;8666:75;8804:3;8863:9;8859:22;4667:20;8804:3;8824:5;8820:16;8813:75;8960:3;9019:9;9015:22;9673:20;8960:3;8980:5;8976:16;8969:75;9139:49;9184:3;9105;9164:9;9160:22;9139:49;:::i;:::-;9105:3;9125:5;9121:16;9114:75;9282:49;9327:3;9248;9307:9;9303:22;9282:49;:::i;:::-;9248:3;9268:5;9264:16;9257:75;9425:3;;9414:9;9410:19;9397:33;19680:18;9442:6;9439:30;9436:2;;;-1:-1;;9472:12;9436:2;9519:58;9573:3;9564:6;9553:9;9549:22;9519:58;:::i;:::-;9499:18;;;9492:86;;;;-1:-1;9503:5;8332:2;19891:22;;9673:20;;-1:-1;8496:2;19999:22;;;9673:20;;19540:507;-1:-1;;;;;19540:507::o;20054:241::-;;20158:2;20146:9;20137:7;20133:23;20129:32;20126:2;;;-1:-1;;20164:12;20126:2;-1:-1;9673:20;;20120:175;-1:-1;20120:175::o;20572:366::-;;;20693:2;20681:9;20672:7;20668:23;20664:32;20661:2;;;-1:-1;;20699:12;20661:2;-1:-1;;9673:20;;;20851:2;20890:22;;;9673:20;;-1:-1;20655:283::o;20945:485::-;;;;21080:2;21068:9;21059:7;21055:23;21051:32;21048:2;;;-1:-1;;21086:12;21048:2;9686:6;9673:20;21138:63;;21238:2;21281:9;21277:22;9673:20;21246:63;;21346:2;21386:9;21382:22;4398:20;4423:30;4447:5;4423:30;:::i;:::-;21354:60;;;;21042:388;;;;;:::o;23368:690::-;;23561:5;44200:12;45101:6;45096:3;45089:19;45138:4;;45133:3;45129:14;23573:93;;45138:4;23737:5;43793:14;-1:-1;23776:260;23801:6;23798:1;23795:13;23776:260;;;23862:13;;24248:37;;21769:14;;;;44717;;;;23823:1;23816:9;23776:260;;;-1:-1;24042:10;;23492:566;-1:-1;;;;;23492:566::o;28612:387::-;24248:37;;;-1:-1;;;;;;46302:78;28863:2;28854:12;;24543:56;28963:11;;;28754:245::o;29006:291::-;;48265:6;48260:3;48255;48242:30;48303:16;;48296:27;;;48303:16;29150:147;-1:-1;29150:147::o;29304:659::-;-1:-1;;;26775:87;;26760:1;26881:11;;24248:37;;;;29815:12;;;24248:37;29926:12;;;29549:414::o;29970:222::-;-1:-1;;;;;46906:54;;;;21868:37;;30097:2;30082:18;;30068:124::o;30199:366::-;30374:2;30388:47;;;44200:12;;30359:18;;;45089:19;;;30199:366;;30374:2;43793:14;;;;45129;;;;30199:366;22349:257;22374:6;22371:1;22368:13;22349:257;;;22435:13;;24248:37;;44717:14;;;;21587;;;;22396:1;22389:9;22349:257;;;-1:-1;30441:114;;30345:220;-1:-1;;;;;;30345:220::o;30572:314::-;30745:2;30730:18;;30734:9;23032:21;30572:314;23059:258;44335:4;23081:1;23078:13;23059:258;;;23145:13;;24248:37;;21778:4;21769:14;;;;44717;;;;23106:1;23099:9;23059:258;;;23063:14;;;30716:170;;;;:::o;30893:370::-;;31070:2;31091:17;31084:47;31145:108;31070:2;31059:9;31055:18;31239:6;31145:108;:::i;31270:629::-;;31525:2;31546:17;31539:47;31600:108;31525:2;31514:9;31510:18;31694:6;31600:108;:::i;:::-;31756:9;31750:4;31746:20;31741:2;31730:9;31726:18;31719:48;31781:108;31884:4;31875:6;31781:108;:::i;31906:210::-;46136:13;;46129:21;24131:34;;32027:2;32012:18;;31998:118::o;32123:432::-;46136:13;;46129:21;24131:34;;32458:2;32443:18;;24248:37;;;;32541:2;32526:18;;24248:37;32300:2;32285:18;;32271:284::o;32562:222::-;24248:37;;;32689:2;32674:18;;32660:124::o;32791:444::-;24248:37;;;-1:-1;;;;;46906:54;;;33138:2;33123:18;;21868:37;46906:54;33221:2;33206:18;;21868:37;32974:2;32959:18;;32945:290::o;33242:780::-;24248:37;;;-1:-1;;;;;46906:54;;;33674:2;33659:18;;21868:37;46906:54;;;;33757:2;33742:18;;21868:37;33840:2;33825:18;;24248:37;33923:3;33908:19;;24248:37;;;;-1:-1;33992:19;;24248:37;33509:3;33494:19;;33480:542::o;34029:668::-;24248:37;;;34433:2;34418:18;;24248:37;;;;34516:2;34501:18;;24248:37;;;;34599:2;34584:18;;24248:37;-1:-1;;;;;46906:54;34682:3;34667:19;;21868:37;-1:-1;34253:19;;34239:458::o;34704:548::-;24248:37;;;47122:4;47111:16;;;;35072:2;35057:18;;28565:35;35155:2;35140:18;;24248:37;35238:2;35223:18;;24248:37;34911:3;34896:19;;34882:370::o;36062:868::-;24248:37;;;36506:2;36491:18;;24248:37;;;;36587:2;36572:18;;24248:37;;;;36668:2;36653:18;;24248:37;;;;36749:3;36734:19;;24248:37;36831:3;36816:19;;24248:37;36915:3;36900:19;;24248:37;36345:3;36330:19;;36316:614::o;36937:760::-;24248:37;;;37355:2;37340:18;;24248:37;;;;37438:2;37423:18;;24248:37;;;;37521:2;37506:18;;24248:37;46136:13;46129:21;37598:3;37583:19;;24131:34;37682:3;37667:19;;24248:37;37194:3;37179:19;;37165:532::o;37704:550::-;24248:37;;;37932:2;37917:18;;46707:47;46748:5;46707:47;:::i;:::-;38149:2;38134:18;;25558:62;;;;38240:2;38225:18;24248:37;37903:351;;-1:-1;37903:351::o;38261:670::-;24248:37;;;38517:3;38502:19;;46707:47;46748:5;46707:47;:::i;:::-;48133:38;38735:2;38724:9;38720:18;25558:62;24278:5;38826:2;38815:9;38811:18;24248:37;24278:5;38917:2;38906:9;38902:18;24248:37;38488:443;;;;;;;:::o;38938:676::-;24248:37;;;27559:23;;39228:3;39213:19;;;46707:47;27559:23;46707:47;:::i;:::-;48133:38;39508:2;39497:9;39493:18;25558:62;;39508:2;27743:5;27739:16;27733:23;27818:14;39497:9;27818:14;24248:37;27818:14;27904:5;27900:16;27894:23;27979:14;39497:9;27979:14;24248:37;24278:5;39599:3;39588:9;39584:19;24248:37;39199:415;;;;;;:::o;39621:310::-;;39768:2;;39789:17;39782:47;26290:5;44200:12;45101:6;39768:2;39757:9;39753:18;45089:19;-1:-1;48410:101;48424:6;48421:1;48418:13;48410:101;;;48491:11;;;;;48485:18;48472:11;;;45129:14;48472:11;48465:39;48439:10;;48410:101;;;48526:6;48523:1;48520:13;48517:2;;;-1:-1;45129:14;48582:6;39757:9;48573:16;;48566:27;48517:2;-1:-1;43589:9;48843:14;-1:-1;;48839:28;26448:39;;;;45129:14;26448:39;;39739:192;-1:-1;;;39739:192::o;39938:416::-;40138:2;40152:47;;;27131:2;40123:18;;;45089:19;-1:-1;;;45129:14;;;27147:35;27201:12;;;40109:245::o;40590:481::-;;24278:5;24255:3;24248:37;40795:2;40913;40902:9;40898:18;40891:48;40953:108;40795:2;40784:9;40780:18;41047:6;40953:108;:::i;41078:444::-;24248:37;;;41425:2;41410:18;;24248:37;;;;41508:2;41493:18;;24248:37;41261:2;41246:18;;41232:290::o;41529:214::-;47122:4;47111:16;;;;28565:35;;41652:2;41637:18;;41623:120::o;41750:256::-;41812:2;41806:9;41838:17;;;41934:22;;;-1:-1;;;;;41898:34;;41895:62;41892:2;;;41970:1;;41960:12;41892:2;41812;41979:22;41790:216;;-1:-1;41790:216::o;42013:320::-;;-1:-1;;;;;42177:30;;42174:2;;;-1:-1;;42210:12;42174:2;-1:-1;42255:4;42243:17;;;42308:15;;42111:222::o;48880:105::-;48963:1;48956:5;48953:12;48943:2;;48969:9;48992:117;-1:-1;;;;;46906:54;;49051:35;;49041:2;;49100:1;;49090:12;49116:111;49197:5;46136:13;46129:21;49175:5;49172:32;49162:2;;49218:1;;49208:12;49802:108;49885:1;49878:5;49875:12;49865:2;;49901:1;;49891:12", "language": "Solidity", "natspec": {"kind": "dev", "methods": {"DOMAIN_SEPARATOR()": {"details": "See {IERC20Permit-DOMAIN_SEPARATOR}."}, "allowance(address,address)": {"details": "Override to grant the Vault infinite allowance, causing for Pool Tokens to not require approval. This is sound as the Vault already provides authorization mechanisms when initiation token transfers, which this contract inherits."}, "approve(address,uint256)": {"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."}, "balanceOf(address)": {"details": "See {IERC20-balanceOf}."}, "decimals()": {"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."}, "decreaseAllowance(address,uint256)": {"details": "Override to allow decreasing allowance by more than the current amount (setting it to zero)"}, "dirtyUninitializedOracleSamples(uint256,uint256)": {"details": "Manually dirty oracle sample storage slots with dummy data, to reduce the gas cost of the future swaps that will initialize them. This function is only useful before the oracle has been fully initialized. `endIndex` is non-inclusive."}, "enableOracle()": {"details": "Balancer Governance can always enable the Oracle, even if it was originally not enabled. This allows for Pools that unexpectedly drive much more volume and liquidity than expected to serve as Price Oracles. Note that the Oracle can only be enabled - it can never be disabled."}, "getActionId(bytes4)": {"details": "Returns the action identifier associated with the external function described by `selector`."}, "getInvariant()": {"details": "Returns the current value of the invariant."}, "getLargestSafeQueryWindow()": {"details": "Returns largest time window that can be safely queried, where 'safely' means the Oracle is guaranteed to be able to produce a result and not revert. If a query has a non-zero `ago` value, then `secs + ago` (the oldest point in time) must be smaller than this value for 'safe' queries."}, "getLatest(uint8)": {"details": "Returns latest sample of `variable`. Prices are represented as 18 decimal fixed point values."}, "getPastAccumulators((uint8,uint256)[])": {"details": "Returns the accumulators corresponding to each of `queries`."}, "getPausedState()": {"details": "Returns the current contract pause status, as well as the end times of the Pause Window and Buffer Period."}, "getRate()": {"details": "This function returns the appreciation of one BPT relative to the underlying tokens. This starts at 1 when the pool is created and grows over time"}, "getSample(uint256)": {"details": "Returns the raw data of the sample at `index`."}, "getTimeWeightedAverage((uint8,uint256,uint256)[])": {"details": "Returns the time average weighted price corresponding to each of `queries`. Prices are represented as 18 decimal fixed point values."}, "getTotalSamples()": {"details": "Returns the total number of samples."}, "getVirtualParameters()": {"details": "Returns virtual offsets a and b for reserves x and y respectively, as in (x+a)*(y+b)=L^2"}, "increaseAllowance(address,uint256)": {"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."}, "name()": {"details": "Returns the name of the token."}, "nonces(address)": {"details": "See {IERC20Permit-nonces}."}, "onExitPool(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Called by the Vault when a user calls `IVault.exitPool` to remove liquidity from this Pool. Returns how many tokens the Vault should deduct from the Pool's balances, as well as the amount of protocol fees the Pool owes to the Vault. The Vault will then take tokens from the Pool's balances and send them to `recipient`, as well as collect the reported amount in protocol fees, which the Pool should calculate based on `protocolSwapFeePercentage`. Protocol fees are charged on exit events to guarantee that users exiting the Pool have paid their share. `sender` is the account performing the exit (typically the pool shareholder), and `recipient` is the account to which the Vault will send the proceeds. `balances` contains the total token balances for each token the Pool registered in the Vault, in the same order that `IVault.getPoolTokens` would return. `lastChangeBlock` is the last block in which *any* of the Pool's registered tokens last changed its total balance. `userData` contains any pool-specific instructions needed to perform the calculations, such as the type of exit (e.g., proportional given an amount of pool shares, single-asset, multi-asset, etc.) Contracts implementing this function should check that the caller is indeed the Vault before performing any state-changing operations, such as burning pool shares."}, "onJoinPool(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Called by the Vault when a user calls `IVault.joinPool` to add liquidity to this Pool. Returns how many of each registered token the user should provide, as well as the amount of protocol fees the Pool owes to the Vault. The Vault will then take tokens from `sender` and add them to the Pool's balances, as well as collect the reported amount in protocol fees, which the pool should calculate based on `protocolSwapFeePercentage`. Protocol fees are reported and charged on join events so that the Pool is free of debt whenever new users join. `sender` is the account performing the join (from which tokens will be withdrawn), and `recipient` is the account designated to receive any benefits (typically pool shares). `balances` contains the total balances for each token the Pool registered in the Vault, in the same order that `IVault.getPoolTokens` would return. `lastChangeBlock` is the last block in which *any* of the Pool's registered tokens last changed its total balance. `userData` contains any pool-specific instructions needed to perform the calculations, such as the type of join (e.g., proportional given an amount of pool shares, single-asset, multi-asset, etc.) Contracts implementing this function should check that the caller is indeed the Vault before performing any state-changing operations, such as minting pool shares."}, "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {"details": "See {IERC20Permit-permit}."}, "queryExit(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Returns the amount of BPT that would be burned from `sender` if the `onExitPool` hook were called by the Vault with the same arguments, along with the number of tokens `recipient` would receive. This function is not meant to be called directly, but rather from a helper contract that fetches current Vault data, such as the protocol swap fee percentage and Pool balances. Like `IVault.queryBatchSwap`, this function is not view due to internal implementation details: the caller must explicitly use eth_call instead of eth_sendTransaction."}, "queryJoin(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Returns the amount of BPT that would be granted to `recipient` if the `onJoinPool` hook were called by the Vault with the same arguments, along with the number of tokens `sender` would have to supply. This function is not meant to be called directly, but rather from a helper contract that fetches current Vault data, such as the protocol swap fee percentage and Pool balances. Like `IVault.queryBatchSwap`, this function is not view due to internal implementation details: the caller must explicitly use eth_call instead of eth_sendTransaction."}, "symbol()": {"details": "Returns the symbol of the token, usually a shorter version of the name."}, "totalSupply()": {"details": "See {IERC20-totalSupply}."}, "transfer(address,uint256)": {"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."}, "transferFrom(address,address,uint256)": {"details": "Override to allow for 'infinite allowance' and let the token owner use `transferFrom` with no self-allowance"}}, "version": 1}, "offset": [1263, 27804], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x27F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x707DCD1E GT PUSH2 0x15C JUMPI DUP1 PUSH4 0x9D2C110C GT PUSH2 0xCE JUMPI DUP1 PUSH4 0xC0FF1A15 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xC0FF1A15 EQ PUSH2 0x56A JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x572 JUMPI DUP1 PUSH4 0xD5C096C4 EQ PUSH2 0x585 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x598 JUMPI DUP1 PUSH4 0xF89F27ED EQ PUSH2 0x5AB JUMPI DUP1 PUSH4 0xFFD088EB EQ PUSH2 0x5B3 JUMPI PUSH2 0x27F JUMP JUMPDEST DUP1 PUSH4 0x9D2C110C EQ PUSH2 0x50E JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x521 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x534 JUMPI DUP1 PUSH4 0xAAABADC5 EQ PUSH2 0x547 JUMPI DUP1 PUSH4 0xB10BE739 EQ PUSH2 0x54F JUMPI DUP1 PUSH4 0xB48B5B40 EQ PUSH2 0x562 JUMPI PUSH2 0x27F JUMP JUMPDEST DUP1 PUSH4 0x87EC6817 GT PUSH2 0x120 JUMPI DUP1 PUSH4 0x87EC6817 EQ PUSH2 0x4D3 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0x8D928AF8 EQ PUSH2 0x4EE JUMPI DUP1 PUSH4 0x8DD9F89D EQ PUSH2 0x4F6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4FE JUMPI DUP1 PUSH4 0x9B02CDDE EQ PUSH2 0x506 JUMPI PUSH2 0x27F JUMP JUMPDEST DUP1 PUSH4 0x707DCD1E EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x479 JUMPI DUP1 PUSH4 0x74F3B009 EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x4AD JUMPI DUP1 PUSH4 0x851C1BB3 EQ PUSH2 0x4C0 JUMPI PUSH2 0x27F JUMP JUMPDEST DUP1 PUSH4 0x38E9922E GT PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x4A6B0B15 GT PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x4A6B0B15 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0x55C67628 EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0x6028BFD4 EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0x60D1507C EQ PUSH2 0x416 JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x6B843239 EQ PUSH2 0x444 JUMPI PUSH2 0x27F JUMP JUMPDEST DUP1 PUSH4 0x38E9922E EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0x38FFF2D0 EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0x3C4DD5BB EQ PUSH2 0x39C JUMPI DUP1 PUSH4 0x44BBDB55 EQ PUSH2 0x3BE JUMPI PUSH2 0x27F JUMP JUMPDEST DUP1 PUSH4 0x1DCCD830 GT PUSH2 0x247 JUMPI DUP1 PUSH4 0x1DCCD830 EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x292C914A EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x3331BC36 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x366 JUMPI PUSH2 0x27F JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x1C0DE051 EQ PUSH2 0x2EC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28C PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x4ABB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B5 PUSH2 0x2B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x41D2 JUMP JUMPDEST PUSH2 0x651 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x4910 JUMP JUMPDEST PUSH2 0x2D5 PUSH2 0x2D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4440 JUMP JUMPDEST PUSH2 0x668 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DF PUSH2 0x67C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x4933 JUMP JUMPDEST PUSH2 0x2F4 PUSH2 0x682 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x491B JUMP JUMPDEST PUSH2 0x316 PUSH2 0x311 CALLDATASIZE PUSH1 0x4 PUSH2 0x4386 JUMP JUMPDEST PUSH2 0x6AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x48D8 JUMP JUMPDEST PUSH2 0x2B5 PUSH2 0x331 CALLDATASIZE PUSH1 0x4 PUSH2 0x411D JUMP JUMPDEST PUSH2 0x7CE JUMP JUMPDEST PUSH2 0x2D5 PUSH2 0x842 JUMP JUMPDEST PUSH2 0x346 PUSH2 0x876 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x4B63 JUMP JUMPDEST PUSH2 0x2D5 PUSH2 0x361 CALLDATASIZE PUSH1 0x4 PUSH2 0x4779 JUMP JUMPDEST PUSH2 0x87F JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x8F7 JUMP JUMPDEST PUSH2 0x2D5 PUSH2 0x37C CALLDATASIZE PUSH1 0x4 PUSH2 0x4761 JUMP JUMPDEST PUSH2 0x906 JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x91F JUMP JUMPDEST PUSH2 0x2B5 PUSH2 0x397 CALLDATASIZE PUSH1 0x4 PUSH2 0x41D2 JUMP JUMPDEST PUSH2 0x943 JUMP JUMPDEST PUSH2 0x3AF PUSH2 0x3AA CALLDATASIZE PUSH1 0x4 PUSH2 0x479A JUMP JUMPDEST PUSH2 0x97E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4B4D JUMP JUMPDEST PUSH2 0x3C6 PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x484F JUMP JUMPDEST PUSH2 0x3DB PUSH2 0x9E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4A09 JUMP JUMPDEST PUSH2 0x2DF PUSH2 0xA3B JUMP JUMPDEST PUSH2 0x408 PUSH2 0x403 CALLDATASIZE PUSH1 0x4 PUSH2 0x4478 JUMP JUMPDEST PUSH2 0xA48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP3 SWAP2 SWAP1 PUSH2 0x4B34 JUMP JUMPDEST PUSH2 0x429 PUSH2 0x424 CALLDATASIZE PUSH1 0x4 PUSH2 0x4761 JUMP JUMPDEST PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x49D9 JUMP JUMPDEST PUSH2 0x2DF PUSH2 0xAC2 JUMP JUMPDEST PUSH2 0x457 PUSH2 0x452 CALLDATASIZE PUSH1 0x4 PUSH2 0x42C8 JUMP JUMPDEST PUSH2 0xAE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x4863 JUMP JUMPDEST PUSH2 0x46C PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x48A7 JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x487 CALLDATASIZE PUSH1 0x4 PUSH2 0x40AD JUMP JUMPDEST PUSH2 0xBAD JUMP JUMPDEST PUSH2 0x49F PUSH2 0x49A CALLDATASIZE PUSH1 0x4 PUSH2 0x4478 JUMP JUMPDEST PUSH2 0xBCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP3 SWAP2 SWAP1 PUSH2 0x48EB JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x4BB CALLDATASIZE PUSH1 0x4 PUSH2 0x40AD JUMP JUMPDEST PUSH2 0xC71 JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x4CE CALLDATASIZE PUSH1 0x4 PUSH2 0x4574 JUMP JUMPDEST PUSH2 0xC8C JUMP JUMPDEST PUSH2 0x408 PUSH2 0x4E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4478 JUMP JUMPDEST PUSH2 0xCDE JUMP JUMPDEST PUSH2 0x3C6 PUSH2 0xD03 JUMP JUMPDEST PUSH2 0x3C6 PUSH2 0xD27 JUMP JUMPDEST PUSH2 0x316 PUSH2 0xD4B JUMP JUMPDEST PUSH2 0x28C PUSH2 0xE54 JUMP JUMPDEST PUSH2 0x2DF PUSH2 0xEB5 JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x51C CALLDATASIZE PUSH1 0x4 PUSH2 0x4666 JUMP JUMPDEST PUSH2 0xEBB JUMP JUMPDEST PUSH2 0x2B5 PUSH2 0x52F CALLDATASIZE PUSH1 0x4 PUSH2 0x41D2 JUMP JUMPDEST PUSH2 0x1081 JUMP JUMPDEST PUSH2 0x2B5 PUSH2 0x542 CALLDATASIZE PUSH1 0x4 PUSH2 0x41D2 JUMP JUMPDEST PUSH2 0x10BF JUMP JUMPDEST PUSH2 0x3C6 PUSH2 0x10CC JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x55D CALLDATASIZE PUSH1 0x4 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0x10D6 JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x116B JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x1171 JUMP JUMPDEST PUSH2 0x2D5 PUSH2 0x580 CALLDATASIZE PUSH1 0x4 PUSH2 0x415D JUMP JUMPDEST PUSH2 0x1244 JUMP JUMPDEST PUSH2 0x49F PUSH2 0x593 CALLDATASIZE PUSH1 0x4 PUSH2 0x4478 JUMP JUMPDEST PUSH2 0x138D JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x5A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x40E5 JUMP JUMPDEST PUSH2 0x14AD JUMP JUMPDEST PUSH2 0x316 PUSH2 0x14EA JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x14F4 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x647 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x61C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x647 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x62A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x65E CALLER DUP5 DUP5 PUSH2 0x157E JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x670 PUSH2 0x15E6 JUMP JUMPDEST PUSH2 0x679 DUP2 PUSH2 0x1614 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x68F PUSH2 0x1692 JUMP JUMPDEST ISZERO SWAP3 POP PUSH2 0x69A PUSH2 0x16AF JUMP JUMPDEST SWAP2 POP PUSH2 0x6A4 PUSH2 0x16D3 JUMP JUMPDEST SWAP1 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x6C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6EE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH2 0x6FB PUSH2 0x16F7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x7C7 JUMPI PUSH20 0x0 PUSH4 0x79EAEF82 PUSH1 0x8 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x731 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x758 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4A7F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x770 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x784 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7A8 SWAP2 SWAP1 PUSH2 0x464E JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7B4 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x700 JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7DB DUP6 CALLER PUSH2 0x14AD JUMP JUMPDEST SWAP1 POP PUSH2 0x7FF CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND EQ DUP1 PUSH2 0x7F7 JUMPI POP DUP4 DUP3 LT ISZERO JUMPDEST PUSH2 0x19E PUSH2 0x1704 JUMP JUMPDEST PUSH2 0x80A DUP6 DUP6 DUP6 PUSH2 0x1712 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x825 JUMPI POP PUSH1 0x0 NOT DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x837 JUMPI PUSH2 0x837 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x157E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x84A PUSH2 0x17F2 JUMP JUMPDEST PUSH2 0x852 PUSH2 0x15E6 JUMP JUMPDEST PUSH2 0x85C PUSH1 0x1 PUSH2 0x1805 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x866 PUSH2 0x67C JUMP JUMPDEST GT ISZERO PUSH2 0x874 JUMPI PUSH2 0x874 PUSH2 0x1845 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x89A DUP2 DUP4 LT DUP1 ISZERO PUSH2 0x893 JUMPI POP PUSH2 0x400 DUP3 GT ISZERO JUMPDEST PUSH1 0x64 PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8AF PUSH1 0x1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x188D JUMP JUMPDEST SWAP1 POP DUP3 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x8F1 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x8D3 SWAP1 PUSH2 0x18ED JUMP JUMPDEST PUSH2 0x8E9 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE JUMPDEST PUSH1 0x1 ADD PUSH2 0x8B3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x901 PUSH2 0x18F9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x90E PUSH2 0x15E6 JUMP JUMPDEST PUSH2 0x916 PUSH2 0x17F2 JUMP JUMPDEST PUSH2 0x679 DUP2 PUSH2 0x1996 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x65E SWAP2 DUP6 SWAP1 PUSH2 0x979 SWAP1 DUP7 PUSH2 0x19FF JUMP JUMPDEST PUSH2 0x157E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x98D DUP6 PUSH2 0x1A11 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x99B DUP7 ISZERO PUSH2 0x1A11 JUMP JUMPDEST SWAP1 POP PUSH2 0x9A7 DUP9 DUP4 PUSH2 0x1A65 JUMP JUMPDEST SWAP8 POP PUSH2 0x9B3 DUP8 DUP3 PUSH2 0x1A65 JUMP JUMPDEST SWAP7 POP PUSH2 0x9C0 DUP9 DUP9 DUP9 PUSH2 0x1A71 JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP POP POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x9 SLOAD SWAP1 POP PUSH2 0x9F9 DUP2 PUSH2 0x1B4D JUMP JUMPDEST SWAP7 POP PUSH2 0xA04 DUP2 PUSH2 0x1B59 JUMP JUMPDEST SWAP6 POP PUSH2 0xA0F DUP2 PUSH2 0x1B66 JUMP JUMPDEST SWAP5 POP PUSH2 0xA1A DUP2 PUSH2 0x1B73 JUMP JUMPDEST SWAP4 POP PUSH2 0xA25 DUP2 PUSH2 0x1B80 JUMP JUMPDEST SWAP3 POP PUSH2 0xA30 DUP2 PUSH2 0x1B8D JUMP JUMPDEST SWAP2 POP POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x901 PUSH1 0x9 SLOAD PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0xA58 DUP7 MLOAD PUSH1 0x2 PUSH2 0x1B9A JUMP JUMPDEST PUSH2 0xA6D DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x1BA7 PUSH2 0x1CC7 PUSH2 0x1D45 JUMP JUMPDEST SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xA94 PUSH2 0x400 DUP10 LT PUSH2 0x13B PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA9F DUP10 PUSH2 0x1E59 JUMP JUMPDEST SWAP1 POP PUSH2 0xAAA DUP2 PUSH2 0x1E6B JUMP JUMPDEST SWAP6 SWAP16 SWAP5 SWAP15 POP SWAP3 SWAP13 POP SWAP1 SWAP11 POP SWAP9 POP SWAP7 POP SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x901 PUSH2 0xACF PUSH2 0x67C JUMP JUMPDEST PUSH2 0xAE1 PUSH2 0xADA PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x1ECE JUMP JUMPDEST SWAP1 PUSH2 0x1EF2 JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0xB00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB2A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH2 0xB37 PUSH2 0x16F7 JUMP JUMPDEST SWAP1 POP PUSH2 0xB41 PUSH2 0x3F79 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xB95 JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xB59 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP PUSH2 0xB76 DUP3 PUSH1 0x0 ADD MLOAD DUP5 DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x1F43 JUMP JUMPDEST DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB82 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0xB44 JUMP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA5 PUSH2 0x3F90 JUMP JUMPDEST PUSH2 0x901 PUSH2 0x1FDC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP9 PUSH2 0xBF6 PUSH2 0xBDB PUSH2 0xD27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH1 0xCD PUSH2 0x1704 JUMP JUMPDEST PUSH2 0xC0B PUSH2 0xC01 PUSH2 0x91F JUMP JUMPDEST DUP3 EQ PUSH2 0x1F4 PUSH2 0x1704 JUMP JUMPDEST PUSH2 0xC14 DUP8 PUSH2 0x2002 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH2 0xC28 DUP14 DUP14 DUP14 DUP14 DUP14 DUP14 DUP14 PUSH2 0x1BA7 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xC38 DUP13 DUP5 PUSH2 0x2064 JUMP JUMPDEST PUSH2 0xC41 DUP3 PUSH2 0x1CC7 JUMP JUMPDEST PUSH2 0xC4A DUP2 PUSH2 0x1CC7 JUMP JUMPDEST PUSH2 0xC52 PUSH2 0x1692 JUMP JUMPDEST ISZERO PUSH2 0xC5F JUMPI PUSH2 0xC5F PUSH2 0x1845 JUMP JUMPDEST SWAP1 SWAP13 SWAP1 SWAP12 POP SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCC1 SWAP3 SWAP2 SWAP1 PUSH2 0x480C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0xCEE DUP7 MLOAD PUSH1 0x2 PUSH2 0x1B9A JUMP JUMPDEST PUSH2 0xA6D DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x206E PUSH2 0x2125 PUSH2 0x1D45 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH2 0xD56 PUSH2 0xD27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF94D4668 PUSH2 0xD6C PUSH2 0x91F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD88 SWAP2 SWAP1 PUSH2 0x4933 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDB4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xDDC SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x41FD JUMP JUMPDEST POP SWAP2 POP POP PUSH2 0xDE9 DUP2 PUSH2 0x2002 JUMP JUMPDEST PUSH2 0xE1D DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xDF9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xE0E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH2 0x1A71 JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xE2D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP5 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xE41 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD SWAP2 SWAP1 SWAP2 MSTORE MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x647 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x61C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x647 JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEC5 PUSH2 0x17F2 JUMP JUMPDEST DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0xED5 PUSH2 0xBDB PUSH2 0xD27 JUMP JUMPDEST PUSH2 0xEE0 PUSH2 0xC01 PUSH2 0x91F JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP PUSH1 0x0 PUSH2 0xF28 DUP3 PUSH2 0x1A11 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF36 DUP4 ISZERO PUSH2 0x1A11 JUMP JUMPDEST SWAP1 POP PUSH2 0xF42 DUP8 DUP4 PUSH2 0x1A65 JUMP JUMPDEST SWAP7 POP PUSH2 0xF4E DUP7 DUP3 PUSH2 0x1A65 JUMP JUMPDEST SWAP6 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xF60 DUP11 DUP11 DUP9 PUSH2 0x1A71 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xFA7 DUP12 PUSH1 0xA0 ADD MLOAD DUP8 PUSH2 0xF79 JUMPI DUP11 PUSH2 0xF7B JUMP JUMPDEST DUP12 JUMPDEST DUP9 PUSH2 0xF86 JUMPI DUP13 PUSH2 0xF88 JUMP JUMPDEST DUP12 JUMPDEST DUP10 PUSH2 0xF93 JUMPI DUP5 PUSH2 0xF95 JUMP JUMPDEST DUP6 JUMPDEST DUP11 PUSH2 0xFA0 JUMPI DUP7 PUSH2 0xFA2 JUMP JUMPDEST DUP6 JUMPDEST PUSH2 0x2187 JUMP JUMPDEST PUSH1 0x0 DUP12 MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xFB6 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1025 JUMPI PUSH1 0x0 PUSH2 0xFD4 PUSH2 0xFC9 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x60 DUP15 ADD MLOAD SWAP1 PUSH2 0x2231 JUMP JUMPDEST SWAP1 POP PUSH2 0xFF6 PUSH2 0xFF0 DUP3 DUP15 PUSH1 0x60 ADD MLOAD PUSH2 0x152C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x60 DUP14 ADD MSTORE PUSH1 0x0 PUSH2 0x100A DUP14 DUP14 DUP14 DUP8 DUP8 PUSH2 0x2275 JUMP JUMPDEST SWAP1 POP PUSH2 0x1016 DUP2 DUP8 PUSH2 0x2294 JUMP JUMPDEST SWAP10 POP POP POP POP POP POP POP POP POP PUSH2 0x1079 JUMP JUMPDEST PUSH2 0x1033 DUP12 PUSH1 0x60 ADD MLOAD DUP6 PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x60 DUP13 ADD MSTORE PUSH1 0x0 PUSH2 0x1047 DUP13 DUP13 DUP13 DUP7 DUP7 PUSH2 0x22A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x1053 DUP2 DUP8 PUSH2 0x22B3 JUMP JUMPDEST SWAP1 POP PUSH2 0x106F PUSH2 0x1068 PUSH2 0x1063 PUSH2 0xA3B JUMP JUMPDEST PUSH2 0x22BF JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x22E5 JUMP JUMPDEST SWAP9 POP POP POP POP POP POP POP POP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x108E CALLER DUP6 PUSH2 0x14AD JUMP JUMPDEST SWAP1 POP DUP1 DUP4 LT PUSH2 0x10A8 JUMPI PUSH2 0x10A3 CALLER DUP6 PUSH1 0x0 PUSH2 0x157E JUMP JUMPDEST PUSH2 0x10B5 JUMP JUMPDEST PUSH2 0x10B5 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x157E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x65E CALLER DUP5 DUP5 PUSH2 0x1712 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x901 PUSH2 0x2327 JUMP JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0x397BEE0 PUSH1 0x8 DUP5 PUSH2 0x10FD PUSH2 0x16F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4A33 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1147 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x662 SWAP2 SWAP1 PUSH2 0x464E JUMP JUMPDEST PUSH2 0x400 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x117D PUSH2 0xD27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF94D4668 PUSH2 0x1193 PUSH2 0x91F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11AF SWAP2 SWAP1 PUSH2 0x4933 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1203 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x41FD JUMP JUMPDEST POP SWAP2 POP POP PUSH2 0x120F PUSH2 0x3F90 JUMP JUMPDEST PUSH2 0x1217 PUSH2 0x1FDC JUMP JUMPDEST SWAP1 POP PUSH2 0x1222 DUP3 PUSH2 0x2002 JUMP JUMPDEST PUSH2 0x123D DUP3 DUP3 PUSH1 0x0 JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH1 0x1 JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x23A1 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1252 DUP5 TIMESTAMP GT ISZERO PUSH1 0xD1 PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 SWAP3 SWAP2 PUSH2 0x12A9 SWAP2 PUSH32 0x0 SWAP2 DUP13 SWAP2 DUP13 SWAP2 DUP13 SWAP2 DUP9 SWAP2 DUP14 SWAP2 ADD PUSH2 0x495B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x12CC DUP3 PUSH2 0x23D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x12F3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x49BB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1315 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP PUSH2 0x1357 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x134F JUMPI POP DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1F8 PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP6 ADD SWAP1 SSTORE PUSH2 0x1380 DUP12 DUP12 DUP12 PUSH2 0x157E JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP9 PUSH2 0x139C PUSH2 0xBDB PUSH2 0xD27 JUMP JUMPDEST PUSH2 0x13A7 PUSH2 0xC01 PUSH2 0x91F JUMP JUMPDEST PUSH2 0x13AF PUSH2 0x17F2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13B9 PUSH2 0x67C JUMP JUMPDEST PUSH2 0x1429 JUMPI PUSH2 0x13C9 DUP12 DUP12 DUP12 DUP9 PUSH2 0x23F0 JUMP JUMPDEST SWAP5 POP SWAP1 POP PUSH2 0x13DE PUSH3 0xF4240 DUP3 LT ISZERO PUSH1 0xCC PUSH2 0x1704 JUMP JUMPDEST PUSH2 0x13EC PUSH1 0x0 PUSH3 0xF4240 PUSH2 0x2480 JUMP JUMPDEST PUSH2 0x13FB DUP10 PUSH3 0xF4240 DUP4 SUB PUSH2 0x2480 JUMP JUMPDEST PUSH2 0x1404 DUP5 PUSH2 0x2125 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE SWAP1 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP3 POP PUSH2 0x1497 JUMP JUMPDEST PUSH2 0x1432 DUP9 PUSH2 0x2002 JUMP JUMPDEST PUSH2 0x1465 DUP8 DUP10 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1443 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP11 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1458 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x248A JUMP JUMPDEST PUSH2 0x1474 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH2 0x206E JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP SWAP1 POP PUSH2 0x1485 DUP10 DUP3 PUSH2 0x2480 JUMP JUMPDEST PUSH2 0x148E DUP5 PUSH2 0x2125 JUMP JUMPDEST PUSH2 0x1497 DUP4 PUSH2 0x1CC7 JUMP JUMPDEST PUSH2 0x149F PUSH2 0x1845 JUMP JUMPDEST POP POP SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14B7 PUSH2 0xD27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x14D9 JUMPI POP PUSH1 0x0 NOT PUSH2 0x662 JUMP JUMPDEST PUSH2 0x14E3 DUP4 DUP4 PUSH2 0x248F JUMP JUMPDEST SWAP1 POP PUSH2 0x662 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x901 PUSH2 0x24BA JUMP JUMPDEST PUSH3 0x1DE20 SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x1505 DUP2 PUSH2 0x2528 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1517 DUP4 DUP4 PUSH1 0x55 PUSH2 0x1542 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1517 DUP4 DUP4 PUSH1 0x56 PUSH2 0x1569 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x153C DUP4 DUP4 GT ISZERO PUSH1 0x1 PUSH2 0x1704 JUMP JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 SHL NOT DUP5 AND DUP3 DUP5 PUSH2 0x1558 JUMPI PUSH1 0x0 PUSH2 0x155B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND SWAP1 SHL OR SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 SHL NOT SWAP3 SWAP1 SWAP3 AND SWAP2 SHL OR SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x15D9 SWAP1 DUP6 SWAP1 PUSH2 0x4933 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15FD PUSH1 0x0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0xC8C JUMP JUMPDEST SWAP1 POP PUSH2 0x679 PUSH2 0x160C DUP3 CALLER PUSH2 0x25A1 JUMP JUMPDEST PUSH2 0x191 PUSH2 0x1704 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1634 JUMPI PUSH2 0x162F PUSH2 0x1625 PUSH2 0x16AF JUMP JUMPDEST TIMESTAMP LT PUSH2 0x193 PUSH2 0x1704 JUMP JUMPDEST PUSH2 0x1649 JUMP JUMPDEST PUSH2 0x1649 PUSH2 0x163F PUSH2 0x16D3 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x1A9 PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO ISZERO OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x9E3A5E37224532DEA67B89FACE185703738A228A6E8A23DEE546960180D3BE64 SWAP1 PUSH2 0x1687 SWAP1 DUP4 SWAP1 PUSH2 0x4910 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x169C PUSH2 0x16D3 JUMP JUMPDEST TIMESTAMP GT DUP1 PUSH2 0x901 JUMPI POP POP PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x901 PUSH1 0x9 SLOAD PUSH2 0x1B73 JUMP JUMPDEST DUP2 PUSH2 0x1505 JUMPI PUSH2 0x1505 DUP2 PUSH2 0x268A JUMP JUMPDEST PUSH2 0x1729 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO ISZERO PUSH2 0x198 PUSH2 0x1704 JUMP JUMPDEST PUSH2 0x1740 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x199 PUSH2 0x1704 JUMP JUMPDEST PUSH2 0x174B DUP4 DUP4 DUP4 PUSH2 0x248A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1771 SWAP1 DUP3 PUSH2 0x1A0 PUSH2 0x26DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x17A0 SWAP1 DUP3 PUSH2 0x19FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x15D9 SWAP1 DUP6 SWAP1 PUSH2 0x4933 JUMP JUMPDEST PUSH2 0x874 PUSH2 0x17FD PUSH2 0x1692 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1812 SWAP1 DUP3 PUSH2 0x1509 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD PUSH32 0x3E350B41E86A8E10F804ADE6D35340D620BE35569CC75AC943E8BB14AB80EAD1 SWAP1 PUSH2 0x1687 SWAP1 DUP4 SWAP1 PUSH2 0x4910 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1851 DUP2 PUSH2 0x1B80 JUMP JUMPDEST ISZERO PUSH2 0x679 JUMPI PUSH2 0x186B PUSH2 0x1864 PUSH1 0xA SLOAD PUSH2 0x26F3 JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x2733 JUMP JUMPDEST SWAP1 POP PUSH2 0x1887 PUSH2 0x1880 PUSH2 0x187B PUSH2 0x67C JUMP JUMPDEST PUSH2 0x26F3 JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x2740 JUMP JUMPDEST PUSH1 0x9 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1899 DUP3 DUP3 PUSH2 0x274E JUMP JUMPDEST PUSH2 0x18A4 DUP5 PUSH1 0x1F PUSH2 0x2752 JUMP JUMPDEST PUSH2 0x18AF DUP7 PUSH1 0x54 PUSH2 0x2763 JUMP JUMPDEST PUSH2 0x18BA DUP9 PUSH1 0x6A PUSH2 0x2752 JUMP JUMPDEST PUSH2 0x18C5 DUP11 PUSH1 0x9F PUSH2 0x2763 JUMP JUMPDEST PUSH2 0x18D0 DUP13 PUSH1 0xB5 PUSH2 0x2752 JUMP JUMPDEST PUSH2 0x18DB DUP15 PUSH1 0xEA PUSH2 0x2763 JUMP JUMPDEST OR OR OR OR OR OR SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x662 DUP3 DUP3 PUSH2 0x2770 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x1966 PUSH2 0x277A JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x197B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x498F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x19A9 PUSH5 0xE8D4A51000 DUP3 LT ISZERO PUSH1 0xCB PUSH2 0x1704 JUMP JUMPDEST PUSH2 0x19BF PUSH8 0x16345785D8A0000 DUP3 GT ISZERO PUSH1 0xCA PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x19CC SWAP1 DUP3 PUSH2 0x151E JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD PUSH32 0xA9BA3FFE0B6C366B81232CAAB38605A0699AD5398D6CCE76F91EE809E322DAFC SWAP1 PUSH2 0x1687 SWAP1 DUP4 SWAP1 PUSH2 0x4933 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH2 0x1517 DUP5 DUP3 LT ISZERO DUP4 PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1A3E JUMPI PUSH32 0x0 PUSH2 0x662 JUMP JUMPDEST POP PUSH32 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1517 DUP4 DUP4 PUSH2 0x1ECE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE PUSH1 0x0 SWAP4 DUP5 SWAP4 DUP5 SWAP4 SWAP1 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP5 PUSH2 0x1AA4 JUMPI DUP6 PUSH2 0x1AA6 JUMP JUMPDEST DUP7 JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1AB3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP5 PUSH2 0x1ACA JUMPI DUP7 PUSH2 0x1ACC JUMP JUMPDEST DUP6 JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1AD9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x1AED PUSH2 0x3F90 JUMP JUMPDEST PUSH2 0x1AF5 PUSH2 0x1FDC JUMP JUMPDEST SWAP1 POP PUSH2 0x1B03 DUP3 DUP3 PUSH1 0x0 PUSH2 0x122A JUMP JUMPDEST SWAP5 POP PUSH2 0x1B0D PUSH2 0x3F90 JUMP JUMPDEST PUSH2 0x1B17 DUP3 DUP8 PUSH2 0x277E JUMP JUMPDEST SWAP1 POP DUP7 PUSH2 0x1B28 JUMPI PUSH1 0x20 DUP2 ADD MLOAD PUSH2 0x1B2B JUMP JUMPDEST DUP1 MLOAD JUMPDEST SWAP5 POP DUP7 PUSH2 0x1B39 JUMPI DUP1 MLOAD PUSH2 0x1B3F JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD JUMPDEST SWAP4 POP POP POP POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x662 DUP3 DUP3 PUSH2 0x27B2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x662 DUP3 PUSH1 0x16 PUSH2 0x27B2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x662 DUP3 PUSH1 0x2C PUSH2 0x2770 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x662 DUP3 PUSH1 0x4B PUSH2 0x27D9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x662 DUP3 PUSH1 0x55 PUSH2 0x27E1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x662 DUP3 PUSH1 0x56 PUSH2 0x27EB JUMP JUMPDEST PUSH2 0x1505 DUP2 DUP4 EQ PUSH1 0x67 PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH2 0x1BB4 PUSH2 0x3F90 JUMP JUMPDEST PUSH2 0x1BBC PUSH2 0x1FDC JUMP JUMPDEST SWAP1 POP PUSH2 0x1BC6 PUSH2 0x1692 JUMP JUMPDEST ISZERO PUSH2 0x1C7B JUMPI PUSH1 0x0 PUSH2 0x1BE1 DUP10 DUP4 DUP4 JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH1 0x1 PUSH2 0x1233 JUMP JUMPDEST SWAP1 POP PUSH2 0x1BEB PUSH2 0x3F90 JUMP JUMPDEST PUSH2 0x1BF5 DUP4 DUP4 PUSH2 0x277E JUMP JUMPDEST SWAP1 POP PUSH2 0x1C44 DUP10 DUP12 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1C08 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP13 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1C1D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x1C32 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP6 PUSH1 0x1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0x2187 JUMP JUMPDEST PUSH2 0x1C4D DUP3 PUSH2 0x27F8 JUMP JUMPDEST PUSH2 0x1C57 DUP11 DUP9 PUSH2 0x2825 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH2 0x1C70 DUP3 DUP8 PUSH2 0x1C69 PUSH2 0x67C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2871 JUMP JUMPDEST PUSH1 0xA SSTORE POP PUSH2 0x1C91 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C85 DUP9 DUP7 PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0xA SSTORE SWAP1 SWAP5 POP SWAP3 POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE DUP7 SWAP3 DUP7 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP8 POP SWAP8 POP SWAP8 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1CEE DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1CD7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1CE9 PUSH1 0x1 PUSH2 0x1A11 JUMP JUMPDEST PUSH2 0x28C9 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1CFB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x1D29 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1D17 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1CE9 PUSH1 0x0 PUSH2 0x1A11 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1D36 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x1E03 JUMPI PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD PUSH2 0x1D69 SWAP3 SWAP2 SWAP1 PUSH2 0x4824 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1DA6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1DBA JUMPI INVALID JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x43ADBAFB PUSH1 0xE0 SHL DUP2 EQ PUSH2 0x1DE5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x4 PUSH1 0x0 RETURNDATACOPY PUSH1 0x40 PUSH1 0x20 MSTORE PUSH1 0x24 RETURNDATASIZE SUB PUSH1 0x24 PUSH1 0x40 RETURNDATACOPY PUSH1 0x1C RETURNDATASIZE ADD PUSH1 0x0 RETURN JUMPDEST PUSH2 0x1E0C DUP7 PUSH2 0x2002 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x1E23 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1E35 DUP2 DUP5 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1F NOT DUP3 ADD DUP4 SWAP1 MSTORE PUSH4 0x43ADBAFB PUSH1 0x3F NOT DUP4 ADD MSTORE PUSH1 0x20 MUL PUSH1 0x23 NOT DUP3 ADD PUSH1 0x44 DUP3 ADD DUP2 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1E7F DUP9 PUSH2 0x28E9 JUMP JUMPDEST SWAP7 POP PUSH2 0x1E8A DUP9 PUSH2 0x28F6 JUMP JUMPDEST SWAP6 POP PUSH2 0x1E95 DUP9 PUSH2 0x2903 JUMP JUMPDEST SWAP5 POP PUSH2 0x1EA0 DUP9 PUSH2 0x2910 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EAB DUP9 PUSH2 0x291D JUMP JUMPDEST SWAP3 POP PUSH2 0x1EB6 DUP9 PUSH2 0x292A JUMP JUMPDEST SWAP2 POP PUSH2 0x1EC1 DUP9 PUSH2 0x18ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP1 SWAP3 SWAP5 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL PUSH2 0x1517 DUP5 ISZERO DUP1 PUSH2 0x1EEB JUMPI POP DUP4 DUP6 DUP4 DUP2 PUSH2 0x1EE8 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH1 0x3 PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F01 DUP3 ISZERO ISZERO PUSH1 0x4 PUSH2 0x1704 JUMP JUMPDEST DUP3 PUSH2 0x1F0E JUMPI POP PUSH1 0x0 PUSH2 0x662 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 DUP2 MUL SWAP1 PUSH2 0x1F31 SWAP1 DUP6 DUP4 DUP2 PUSH2 0x1F28 JUMPI INVALID JUMPDEST DIV EQ PUSH1 0x5 PUSH2 0x1704 JUMP JUMPDEST DUP3 DUP2 DUP2 PUSH2 0x1F3A JUMPI INVALID JUMPDEST DIV SWAP2 POP POP PUSH2 0x662 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x34171A85 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0x34171A85 SWAP1 PUSH2 0x1F84 SWAP1 PUSH1 0x8 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x4A54 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1FB0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FD4 SWAP2 SWAP1 PUSH2 0x464E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1FE4 PUSH2 0x3F90 JUMP JUMPDEST PUSH2 0x1FEE PUSH1 0x1 PUSH2 0x2937 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x1FFA PUSH1 0x0 PUSH2 0x2937 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x2029 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2012 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2024 PUSH1 0x1 PUSH2 0x1A11 JUMP JUMPDEST PUSH2 0x1ECE JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2036 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x1D29 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2052 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2024 PUSH1 0x0 PUSH2 0x1A11 JUMP JUMPDEST PUSH2 0x1505 DUP3 DUP3 PUSH2 0x298B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH2 0x207B PUSH2 0x3F90 JUMP JUMPDEST PUSH2 0x2083 PUSH2 0x1FDC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2092 DUP10 DUP4 DUP4 PUSH2 0x1BD4 JUMP JUMPDEST SWAP1 POP PUSH2 0x209C PUSH2 0x3F90 JUMP JUMPDEST PUSH2 0x20A6 DUP4 DUP4 PUSH2 0x277E JUMP JUMPDEST SWAP1 POP PUSH2 0x20B9 DUP10 DUP12 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1C08 JUMPI INVALID JUMPDEST PUSH2 0x20C2 DUP3 PUSH2 0x27F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x20D0 DUP13 DUP11 PUSH2 0x2A47 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x20E8 DUP5 DUP4 PUSH2 0x20E1 PUSH2 0x67C JUMP JUMPDEST PUSH1 0x1 PUSH2 0x2871 JUMP JUMPDEST PUSH1 0xA SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE DUP5 SWAP3 DUP5 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP8 POP SWAP8 POP SWAP8 POP POP POP POP POP POP SWAP8 POP SWAP8 POP SWAP8 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x214C DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2135 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2147 PUSH1 0x1 PUSH2 0x1A11 JUMP JUMPDEST PUSH2 0x2A81 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2159 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x1D29 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2175 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2147 PUSH1 0x0 PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x2193 DUP2 PUSH2 0x1B80 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x219E JUMPI POP DUP6 NUMBER GT JUMPDEST ISZERO PUSH2 0x2229 JUMPI PUSH1 0x0 PUSH2 0x21B1 DUP7 DUP6 DUP8 DUP7 PUSH2 0x2AB4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x21CA DUP8 DUP7 DUP9 DUP8 PUSH2 0x21C5 DUP9 PUSH2 0x1B59 JUMP JUMPDEST PUSH2 0x2ACE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x21D7 DUP5 PUSH2 0x1B73 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x21E4 DUP6 PUSH2 0x1B66 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x21FD DUP3 DUP5 DUP8 DUP8 PUSH2 0x21F8 DUP12 PUSH2 0x1B4D JUMP JUMPDEST PUSH2 0x2B12 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 EQ PUSH2 0x1380 JUMPI PUSH2 0x2210 DUP7 DUP3 PUSH2 0x2B69 JUMP JUMPDEST SWAP6 POP PUSH2 0x221C DUP7 TIMESTAMP PUSH2 0x2B77 JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE SWAP6 POP POP POP POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL PUSH2 0x224B DUP5 ISZERO DUP1 PUSH2 0x1EEB JUMPI POP DUP4 DUP6 DUP4 DUP2 PUSH2 0x1EE8 JUMPI INVALID JUMPDEST DUP1 PUSH2 0x225A JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x662 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH1 0x0 NOT DUP3 ADD JUMPDEST DIV PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x662 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2288 DUP6 DUP6 DUP9 PUSH1 0x60 ADD MLOAD DUP7 DUP7 PUSH2 0x2B85 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1517 DUP4 DUP4 PUSH2 0x28C9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2288 DUP6 DUP6 DUP9 PUSH1 0x60 ADD MLOAD DUP7 DUP7 PUSH2 0x2C29 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1517 DUP4 DUP4 PUSH2 0x2A81 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 LT PUSH2 0x22D7 JUMPI PUSH1 0x0 PUSH2 0x662 JUMP JUMPDEST POP PUSH8 0xDE0B6B3A7640000 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22F4 DUP3 ISZERO ISZERO PUSH1 0x4 PUSH2 0x1704 JUMP JUMPDEST DUP3 PUSH2 0x2301 JUMPI POP PUSH1 0x0 PUSH2 0x662 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 DUP2 MUL SWAP1 PUSH2 0x231B SWAP1 DUP6 DUP4 DUP2 PUSH2 0x1F28 JUMPI INVALID JUMPDEST DUP3 PUSH1 0x1 DUP3 SUB DUP2 PUSH2 0x2269 JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH2 0x2331 PUSH2 0xD27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAAABADC5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x237D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x901 SWAP2 SWAP1 PUSH2 0x40C9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x23B4 DUP9 DUP9 DUP9 PUSH2 0x2CC8 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH2 0x23C8 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2E42 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23DE PUSH2 0x18F9 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCC1 SWAP3 SWAP2 SWAP1 PUSH2 0x4834 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x23FF DUP5 PUSH2 0x2EB6 JUMP JUMPDEST SWAP1 POP PUSH2 0x241A PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2412 JUMPI INVALID JUMPDEST EQ PUSH1 0xCE PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2425 DUP6 PUSH2 0x2ECC JUMP JUMPDEST SWAP1 POP PUSH2 0x2433 DUP2 MLOAD PUSH1 0x2 PUSH2 0x1B9A JUMP JUMPDEST PUSH2 0x243C DUP2 PUSH2 0x2002 JUMP JUMPDEST PUSH2 0x2444 PUSH2 0x3F90 JUMP JUMPDEST PUSH2 0x244C PUSH2 0x1FDC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x245B DUP4 DUP4 DUP4 PUSH2 0x1BD4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x246A DUP3 PUSH1 0x2 PUSH2 0x1ECE JUMP JUMPDEST PUSH1 0xA SWAP3 SWAP1 SWAP3 SSTORE POP SWAP10 SWAP2 SWAP9 POP SWAP1 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1505 DUP3 DUP3 PUSH2 0x2EE2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 DUP4 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH2 0x24E8 PUSH1 0x1 PUSH2 0x2F70 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x24F5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x250B PUSH1 0x0 PUSH2 0x2F70 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2518 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD LT ISZERO PUSH2 0x2537 JUMPI PUSH2 0x679 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2546 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x248A JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x256E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x2597 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH1 0x65 PUSH2 0x1704 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x2557 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xBA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1B PUSH2 0x25C0 PUSH2 0xD03 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x25DB JUMPI POP PUSH2 0x25DB DUP4 PUSH2 0x2FC4 JUMP JUMPDEST ISZERO PUSH2 0x2603 JUMPI PUSH2 0x25E8 PUSH2 0xD03 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP PUSH2 0x662 JUMP JUMPDEST PUSH2 0x260B PUSH2 0x2327 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9BE2A884 DUP5 DUP5 ADDRESS PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x263A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x493C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2652 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2666 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14E3 SWAP2 SWAP1 PUSH2 0x445C JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH7 0x42414C23000030 PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD SWAP1 SWAP5 ADD PUSH1 0x10 SHL SWAP4 SWAP1 SWAP4 ADD ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x26EC DUP5 DUP5 GT ISZERO DUP4 PUSH2 0x1704 JUMP JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x26FF DUP4 PUSH2 0x2FF6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 SGT PUSH2 0x2718 JUMPI PUSH6 0x2D79883D2000 DUP3 SUB PUSH2 0x2722 JUMP JUMPDEST PUSH6 0x2D79883D2000 DUP3 ADD JUMPDEST PUSH6 0x5AF3107A4000 SWAP1 SDIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1517 DUP4 DUP4 DUP4 PUSH2 0x305A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1517 DUP4 DUP4 PUSH1 0x16 PUSH2 0x305A JUMP JUMPDEST SHL SWAP1 JUMP JUMPDEST PUSH7 0x1FFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND SWAP1 SHL SWAP1 JUMP JUMPDEST PUSH3 0x3FFFFF SWAP2 SWAP1 SWAP2 AND SWAP1 SHL SWAP1 JUMP JUMPDEST SHR PUSH4 0x7FFFFFFF AND SWAP1 JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH2 0x2786 PUSH2 0x3F90 JUMP JUMPDEST PUSH2 0x2799 PUSH1 0x1 DUP5 DUP2 JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH2 0x3071 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x27A7 PUSH1 0x0 DUP5 DUP2 PUSH2 0x278E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR PUSH3 0x3FFFFF AND PUSH3 0x1FFFFF DUP2 SGT PUSH2 0x27CC JUMPI DUP1 PUSH2 0x1FD4 JUMP JUMPDEST PUSH3 0x3FFFFF NOT OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST SHR PUSH2 0x3FF AND SWAP1 JUMP JUMPDEST SHR PUSH1 0x1 SWAP1 DUP2 AND EQ SWAP1 JUMP JUMPDEST SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x280A PUSH1 0xA SLOAD DUP7 PUSH2 0x3091 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH2 0x281E DUP5 DUP5 DUP5 DUP5 PUSH2 0x30FA JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x2834 DUP5 PUSH2 0x2EB6 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2844 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x285E JUMPI PUSH2 0x2854 DUP6 DUP6 PUSH2 0x311A JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH2 0x2869 JUMP JUMPDEST PUSH2 0x2869 PUSH2 0x150 PUSH2 0x268A JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO PUSH2 0x28A3 JUMPI PUSH1 0x0 PUSH2 0x288F DUP5 PUSH2 0x2889 DUP9 DUP9 PUSH2 0x2231 JUMP JUMPDEST SWAP1 PUSH2 0x22E5 JUMP JUMPDEST SWAP1 POP PUSH2 0x289B DUP7 DUP3 PUSH2 0x19FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1FD4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28B3 DUP5 PUSH2 0xAE1 DUP9 DUP9 PUSH2 0x314C JUMP JUMPDEST SWAP1 POP PUSH2 0x28BF DUP7 DUP3 PUSH2 0x152C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28D8 DUP3 ISZERO ISZERO PUSH1 0x4 PUSH2 0x1704 JUMP JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x28E1 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x662 DUP3 PUSH1 0xEA PUSH2 0x27B2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x662 DUP3 PUSH1 0xB5 PUSH2 0x3178 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x662 DUP3 PUSH1 0x9F PUSH2 0x27B2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x662 DUP3 PUSH1 0x6A PUSH2 0x3178 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x662 DUP3 PUSH1 0x54 PUSH2 0x27B2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x662 DUP3 PUSH1 0x1F PUSH2 0x3178 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2964 JUMPI PUSH32 0x0 PUSH2 0x662 JUMP JUMPDEST POP PUSH32 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29A2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x19B PUSH2 0x1704 JUMP JUMPDEST PUSH2 0x29AE DUP3 PUSH1 0x0 DUP4 PUSH2 0x248A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x29D4 SWAP1 DUP3 PUSH2 0x1A1 PUSH2 0x26DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x29FA SWAP1 DUP3 PUSH2 0x31AB JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x2A3B SWAP1 DUP6 SWAP1 PUSH2 0x4933 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x2A56 DUP5 PUSH2 0x2EB6 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2A66 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x2A76 JUMPI PUSH2 0x2854 DUP6 DUP6 PUSH2 0x31B9 JUMP JUMPDEST PUSH2 0x2869 PUSH2 0x136 PUSH2 0x268A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A90 DUP3 ISZERO ISZERO PUSH1 0x4 PUSH2 0x1704 JUMP JUMPDEST DUP3 PUSH2 0x2A9D JUMPI POP PUSH1 0x0 PUSH2 0x662 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP5 SUB DUP2 PUSH2 0x2AA9 JUMPI INVALID JUMPDEST DIV PUSH1 0x1 ADD SWAP1 POP PUSH2 0x662 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2AC3 DUP7 DUP7 DUP7 DUP7 PUSH2 0x31DE JUMP JUMPDEST SWAP1 POP PUSH2 0x28BF DUP2 PUSH2 0x26F3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2ADD DUP8 DUP8 DUP8 DUP8 PUSH2 0x31DE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2AF5 PUSH2 0x2AEE DUP8 DUP5 PUSH2 0x2231 JUMP JUMPDEST DUP10 SWAP1 PUSH2 0x19FF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2B02 DUP3 PUSH2 0x26F3 JUMP JUMPDEST SWAP5 SWAP1 SWAP5 SUB SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2B2E DUP6 DUP6 DUP6 TIMESTAMP PUSH2 0x2B25 DUP12 PUSH2 0x1E59 JUMP JUMPDEST SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3206 JUMP JUMPDEST SWAP1 POP PUSH1 0x78 TIMESTAMP DUP9 SWAP1 SUB LT ISZERO DUP1 PUSH2 0x2B43 JUMPI DUP7 PUSH2 0x2B4C JUMP JUMPDEST PUSH2 0x2B4C DUP8 PUSH2 0x3258 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1517 DUP4 DUP4 PUSH1 0x4B PUSH2 0x3265 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1517 DUP4 DUP4 PUSH1 0x2C PUSH2 0x3275 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BA7 PUSH2 0x2B9C DUP8 PUSH8 0x429D069189E0000 PUSH2 0x314C JUMP JUMPDEST DUP6 GT ISZERO PUSH2 0x130 PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BC5 PUSH2 0x2BBE DUP6 PUSH8 0xDE0B6B3A7640002 PUSH2 0x2231 JUMP JUMPDEST DUP9 SWAP1 PUSH2 0x19FF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2BDE PUSH2 0x2BBE DUP6 PUSH8 0xDE0B6B3A763FFFF PUSH2 0x314C JUMP JUMPDEST SWAP1 POP PUSH2 0x2BF7 PUSH2 0x2BED DUP4 DUP9 PUSH2 0x19FF JUMP JUMPDEST PUSH2 0xAE1 DUP4 DUP10 PUSH2 0x314C JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x2C09 DUP6 DUP3 LT PUSH2 0x165 PUSH2 0x1704 JUMP JUMPDEST PUSH2 0x228B PUSH2 0x2C1E DUP7 PUSH8 0x429D069189E0000 PUSH2 0x314C JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x131 PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C39 DUP6 DUP6 LT PUSH2 0x165 PUSH2 0x1704 JUMP JUMPDEST PUSH2 0x2C59 PUSH2 0x2C4E DUP7 PUSH8 0x429D069189E0000 PUSH2 0x314C JUMP JUMPDEST DUP6 GT ISZERO PUSH2 0x131 PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C70 PUSH2 0x2BBE DUP6 PUSH8 0xDE0B6B3A7640002 PUSH2 0x2231 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2C89 PUSH2 0x2BBE DUP6 PUSH8 0xDE0B6B3A763FFFF PUSH2 0x314C JUMP JUMPDEST SWAP1 POP PUSH2 0x2CA2 PUSH2 0x2C98 DUP3 DUP9 PUSH2 0x152C JUMP JUMPDEST PUSH2 0x2889 DUP5 DUP10 PUSH2 0x2231 JUMP JUMPDEST SWAP3 POP PUSH2 0x228B SWAP2 POP PUSH2 0x2CBD SWAP1 POP DUP8 PUSH8 0x429D069189E0000 PUSH2 0x314C JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x130 PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x2CE9 PUSH2 0x2CDA DUP8 DUP8 PUSH2 0x1EF2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x152C JUMP JUMPDEST SWAP4 POP PUSH1 0x0 PUSH2 0x2D14 DUP7 DUP10 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2CFE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1EF2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2D3F DUP9 DUP11 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2D29 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x314C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x2D4B DUP3 DUP3 PUSH2 0x19FF JUMP JUMPDEST SWAP5 POP PUSH2 0x2D72 DUP10 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2D5D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP11 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2D29 JUMPI INVALID JUMPDEST SWAP3 POP POP POP PUSH2 0x2DA9 DUP7 PUSH2 0x2DA3 DUP9 PUSH2 0x2DA3 DUP12 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2D8E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP13 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2D29 JUMPI INVALID JUMPDEST SWAP1 PUSH2 0x314C JUMP JUMPDEST SWAP2 POP PUSH1 0x0 PUSH2 0x2DE9 DUP7 PUSH2 0xAE1 DUP10 PUSH2 0x2DA3 PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 MUL PUSH2 0x2DA3 DUP15 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2DD4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP16 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2D29 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2E1F PUSH2 0x2DFA DUP9 DUP1 PUSH2 0x2231 JUMP JUMPDEST PUSH2 0xAE1 DUP12 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2E0A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP13 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2D29 JUMPI INVALID JUMPDEST SWAP1 POP PUSH2 0x2E35 DUP2 PUSH2 0x2E2F DUP7 DUP6 PUSH2 0x19FF JUMP JUMPDEST SWAP1 PUSH2 0x19FF JUMP JUMPDEST SWAP4 POP POP POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2E57 DUP7 PUSH8 0x1BC16D674EC80000 PUSH2 0x2231 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2E71 DUP8 PUSH2 0x2DA3 DUP7 PUSH8 0x3782DACE9D900000 PUSH2 0x314C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2E7F DUP7 DUP4 PUSH2 0x19FF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2E8E DUP3 PUSH1 0x5 PUSH2 0x3287 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2E9C DUP10 DUP4 PUSH2 0x19FF JUMP JUMPDEST SWAP1 POP PUSH2 0x2EA8 DUP2 DUP7 PUSH2 0x1EF2 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x662 SWAP2 SWAP1 PUSH2 0x459C JUMP JUMPDEST PUSH1 0x60 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1517 SWAP2 SWAP1 PUSH2 0x45E5 JUMP JUMPDEST PUSH2 0x2EEE PUSH1 0x0 DUP4 DUP4 PUSH2 0x248A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x2EFB SWAP1 DUP3 PUSH2 0x19FF JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2F21 SWAP1 DUP3 PUSH2 0x19FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x2A3B SWAP1 DUP6 SWAP1 PUSH2 0x4933 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2F9D JUMPI PUSH32 0x0 PUSH2 0x662 JUMP JUMPDEST POP PUSH32 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FD6 PUSH4 0x1C74C917 PUSH1 0xE1 SHL PUSH2 0xC8C JUMP JUMPDEST DUP3 EQ DUP1 PUSH2 0x662 JUMPI POP PUSH2 0x2FEE PUSH4 0x50DD6ED9 PUSH1 0xE0 SHL PUSH2 0xC8C JUMP JUMPDEST SWAP1 SWAP2 EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3006 PUSH1 0x0 DUP4 SGT PUSH1 0x64 PUSH2 0x1704 JUMP JUMPDEST PUSH8 0xC7D713B49DA0000 DUP3 SGT DUP1 ISZERO PUSH2 0x3024 JUMPI POP PUSH8 0xF43FC2C04EE0000 DUP3 SLT JUMPDEST ISZERO PUSH2 0x304A JUMPI PUSH8 0xDE0B6B3A7640000 PUSH2 0x303B DUP4 PUSH2 0x33FA JUMP JUMPDEST DUP2 PUSH2 0x3042 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x3053 DUP3 PUSH2 0x3518 JUMP JUMPDEST SWAP1 POP PUSH2 0xBC7 JUMP JUMPDEST PUSH3 0x3FFFFF DUP3 DUP2 AND DUP3 SHL SWAP1 DUP3 SHL NOT DUP5 AND OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x3087 JUMPI PUSH2 0x3082 DUP3 DUP5 PUSH2 0x38B7 JUMP JUMPDEST PUSH2 0x1FD4 JUMP JUMPDEST PUSH2 0x1FD4 DUP3 DUP5 PUSH2 0x38C3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x30A5 PUSH2 0x38CF JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP DUP4 PUSH1 0x0 EQ ISZERO PUSH2 0x30CA JUMPI PUSH1 0x0 SWAP8 POP DUP8 SWAP7 POP SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x30F1 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x30E1 DUP13 DUP13 PUSH2 0x30DA PUSH2 0x67C JUMP JUMPDEST DUP10 DUP10 PUSH2 0x3B3E JUMP JUMPDEST SWAP1 SWAP11 POP SWAP9 POP SWAP3 SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP JUMPDEST SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST DUP4 ISZERO PUSH2 0x310A JUMPI PUSH2 0x310A DUP3 DUP6 PUSH2 0x2480 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x8F1 JUMPI PUSH2 0x8F1 DUP2 DUP5 PUSH2 0x2480 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x3129 DUP5 PUSH2 0x3BD3 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x313F DUP7 DUP4 PUSH2 0x313A PUSH2 0x67C JUMP JUMPDEST PUSH2 0x3BE9 JUMP JUMPDEST SWAP2 SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL PUSH2 0x3166 DUP5 ISZERO DUP1 PUSH2 0x1EEB JUMPI POP DUP4 DUP6 DUP4 DUP2 PUSH2 0x1EE8 JUMPI INVALID JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR PUSH7 0x1FFFFFFFFFFFFF AND PUSH7 0xFFFFFFFFFFFFF DUP2 SGT PUSH2 0x319A JUMPI DUP1 PUSH2 0x1FD4 JUMP JUMPDEST PUSH7 0x1FFFFFFFFFFFFF NOT OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1517 DUP4 DUP4 PUSH1 0x1 PUSH2 0x26DD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x31C8 DUP5 PUSH2 0x3BD3 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x313F DUP7 DUP4 PUSH2 0x31D9 PUSH2 0x67C JUMP JUMPDEST PUSH2 0x3C6E JUMP JUMPDEST PUSH1 0x0 PUSH8 0x6F05B59D3B20000 PUSH2 0x28BF PUSH2 0x31FA DUP3 PUSH2 0x2889 DUP8 DUP8 PUSH2 0x19FF JUMP JUMPDEST PUSH2 0x2889 DUP4 DUP2 DUP11 DUP11 PUSH2 0x19FF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3212 DUP8 PUSH2 0x18ED JUMP JUMPDEST DUP4 SUB SWAP1 POP PUSH1 0x0 DUP2 DUP8 MUL PUSH2 0x3224 DUP10 PUSH2 0x28F6 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP3 DUP8 MUL PUSH2 0x3235 DUP11 PUSH2 0x2910 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP4 DUP8 MUL PUSH2 0x3246 DUP12 PUSH2 0x292A JUMP JUMPDEST ADD SWAP1 POP PUSH2 0x2EA8 DUP10 DUP5 DUP11 DUP6 DUP12 DUP7 DUP13 PUSH2 0x188D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x662 DUP3 PUSH1 0x1 PUSH2 0x3D09 JUMP JUMPDEST PUSH2 0x3FF DUP2 SHL NOT SWAP3 SWAP1 SWAP3 AND SWAP2 SHL OR SWAP1 JUMP JUMPDEST PUSH4 0x7FFFFFFF DUP2 SHL NOT SWAP3 SWAP1 SWAP3 AND SWAP2 SHL OR SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3296 JUMPI POP PUSH1 0x0 PUSH2 0x662 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32A1 DUP5 PUSH2 0x3D11 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x32B8 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x32C2 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x32DA JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x32E4 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x32FC JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x3306 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x331E JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x3328 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x3340 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x334A JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x3362 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x336C JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x3384 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x338E JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH2 0x339D DUP3 DUP1 PUSH2 0x314C JUMP JUMPDEST SWAP1 POP PUSH2 0x33B3 PUSH2 0x33AC DUP4 DUP7 PUSH2 0x2231 JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x19FF JUMP JUMPDEST DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x33D5 JUMPI POP PUSH2 0x33D1 PUSH2 0x33CA DUP4 DUP7 PUSH2 0x2231 JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x152C JUMP JUMPDEST DUP2 LT ISZERO JUMPDEST PUSH2 0x1079 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33F1 SWAP1 PUSH2 0x4B0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 MUL PUSH1 0x0 DUP1 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP1 DUP5 ADD SWAP1 PUSH15 0xC097CE7BC90715B34B9F0FFFFFFFFF NOT DUP6 ADD MUL DUP2 PUSH2 0x3435 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x0 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 DUP1 MUL SDIV SWAP1 POP DUP2 DUP1 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP2 DUP5 MUL SDIV SWAP2 POP PUSH1 0x3 DUP3 SDIV ADD PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x5 DUP3 SDIV ADD PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x7 DUP3 SDIV ADD PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x9 DUP3 SDIV ADD PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0xB DUP3 SDIV ADD PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0xD DUP3 SDIV ADD PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0xF DUP3 PUSH1 0x2 SWAP2 SWAP1 SDIV SWAP2 SWAP1 SWAP2 ADD MUL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 SLT ISZERO PUSH2 0x3554 JUMPI PUSH2 0x354A DUP3 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP2 PUSH2 0x3544 JUMPI INVALID JUMPDEST SDIV PUSH2 0x3518 JUMP JUMPDEST PUSH1 0x0 SUB SWAP1 POP PUSH2 0xBC7 JUMP JUMPDEST PUSH1 0x0 PUSH31 0x1600EF3172E58D2E933EC884FDE10064C63B5372D805E203C0000000000000 DUP4 SLT PUSH2 0x35A5 JUMPI PUSH24 0x195E54C5DD42177F53A27172FA9EC630262827000000000 DUP4 SDIV SWAP3 POP PUSH9 0x6F05B59D3B2000000 ADD JUMPDEST PUSH20 0x11798004D755D3C8BC8E03204CF44619E000000 DUP4 SLT PUSH2 0x35DD JUMPI PUSH12 0x1425982CF597CD205CEF7380 DUP4 SDIV SWAP3 POP PUSH9 0x3782DACE9D9000000 ADD JUMPDEST PUSH1 0x64 SWAP3 DUP4 MUL SWAP3 MUL PUSH15 0x1855144814A7FF805980FF0084000 DUP4 SLT PUSH2 0x3625 JUMPI PUSH15 0x1855144814A7FF805980FF0084000 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0xAD78EBC5AC62000000 ADD JUMPDEST PUSH12 0x2DF0AB5A80A22C61AB5A700 DUP4 SLT PUSH2 0x3660 JUMPI PUSH12 0x2DF0AB5A80A22C61AB5A700 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x56BC75E2D631000000 ADD JUMPDEST PUSH10 0x3F1FCE3DA636EA5CF850 DUP4 SLT PUSH2 0x3697 JUMPI PUSH10 0x3F1FCE3DA636EA5CF850 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x2B5E3AF16B18800000 ADD JUMPDEST PUSH10 0x127FA27722CC06CC5E2 DUP4 SLT PUSH2 0x36CE JUMPI PUSH10 0x127FA27722CC06CC5E2 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x15AF1D78B58C400000 ADD JUMPDEST PUSH9 0x280E60114EDB805D03 DUP4 SLT PUSH2 0x3703 JUMPI PUSH9 0x280E60114EDB805D03 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0xAD78EBC5AC6200000 ADD JUMPDEST PUSH9 0xEBC5FB41746121110 DUP4 SLT PUSH2 0x372E JUMPI PUSH9 0xEBC5FB41746121110 PUSH9 0x56BC75E2D63100000 SWAP4 DUP5 MUL SDIV SWAP3 ADD JUMPDEST PUSH9 0x8F00F760A4B2DB55D DUP4 SLT PUSH2 0x3763 JUMPI PUSH9 0x8F00F760A4B2DB55D PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x2B5E3AF16B1880000 ADD JUMPDEST PUSH9 0x6F5F1775788937937 DUP4 SLT PUSH2 0x3798 JUMPI PUSH9 0x6F5F1775788937937 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x15AF1D78B58C40000 ADD JUMPDEST PUSH9 0x6248F33704B286603 DUP4 SLT PUSH2 0x37CC JUMPI PUSH9 0x6248F33704B286603 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH8 0xAD78EBC5AC620000 ADD JUMPDEST PUSH9 0x5C548670B9510E7AC DUP4 SLT PUSH2 0x3800 JUMPI PUSH9 0x5C548670B9510E7AC PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH8 0x56BC75E2D6310000 ADD JUMPDEST PUSH1 0x0 PUSH9 0x56BC75E2D63100000 DUP5 ADD PUSH9 0x56BC75E2D63100000 DUP1 DUP7 SUB MUL DUP2 PUSH2 0x3823 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x0 PUSH9 0x56BC75E2D63100000 DUP3 DUP1 MUL SDIV SWAP1 POP DUP2 DUP1 PUSH9 0x56BC75E2D63100000 DUP2 DUP5 MUL SDIV SWAP2 POP PUSH1 0x3 DUP3 SDIV ADD PUSH9 0x56BC75E2D63100000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x5 DUP3 SDIV ADD PUSH9 0x56BC75E2D63100000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x7 DUP3 SDIV ADD PUSH9 0x56BC75E2D63100000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x9 DUP3 SDIV ADD PUSH9 0x56BC75E2D63100000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0xB DUP3 SDIV ADD PUSH1 0x2 MUL PUSH1 0x64 DUP6 DUP3 ADD SDIV SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1517 DUP4 DUP4 PUSH2 0x314C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1517 DUP4 DUP4 PUSH2 0x1EF2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0xBD02D0F5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xBD02D0F5 SWAP1 PUSH2 0x3921 SWAP1 PUSH22 0x50524F544F434F4C5F535741505F4645455F50455243 PUSH1 0x50 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0x4933 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3939 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x394D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3971 SWAP2 SWAP1 PUSH2 0x464E JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0xBD02D0F5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xBD02D0F5 SWAP1 PUSH2 0x39C1 SWAP1 PUSH32 0x50524F544F434F4C5F4645455F4759524F5F504F5254494F4E00000000000000 SWAP1 PUSH1 0x4 ADD PUSH2 0x4933 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x39D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x39ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3A11 SWAP2 SWAP1 PUSH2 0x464E JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x21F8A721 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x21F8A721 SWAP1 PUSH2 0x3A51 SWAP1 PUSH13 0x4759524F5F5452454153555259 PUSH1 0x98 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0x4933 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3A69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A7D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3AA1 SWAP2 SWAP1 PUSH2 0x40C9 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x21F8A721 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x21F8A721 SWAP1 PUSH2 0x3AE0 SWAP1 PUSH12 0x42414C5F5452454153555259 PUSH1 0xA0 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0x4933 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3AF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3B0C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B30 SWAP2 SWAP1 PUSH2 0x40C9 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 DUP7 GT PUSH2 0x3B53 JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x3BC9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B6D DUP6 PUSH2 0x2DA3 PUSH2 0x3B66 DUP11 DUP13 PUSH2 0x152C JUMP JUMPDEST DUP10 SWAP1 PUSH2 0x314C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3B85 PUSH2 0x3B7E DUP10 DUP12 PUSH2 0x152C JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x314C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3B93 DUP10 DUP4 PUSH2 0x152C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3BA1 DUP5 DUP4 PUSH2 0x1EF2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3BAF DUP9 DUP4 PUSH2 0x314C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3BBD DUP4 DUP4 PUSH2 0x152C JUMP JUMPDEST SWAP2 SWAP8 POP SWAP1 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1517 SWAP2 SWAP1 PUSH2 0x45B8 JUMP JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x3C02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3C2C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1079 JUMPI PUSH2 0x3C4F DUP4 PUSH2 0xAE1 DUP7 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x2D29 JUMPI INVALID JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3C5B JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x3C32 JUMP JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x3C87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3CB1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1079 JUMPI PUSH2 0x3CEA DUP4 PUSH2 0x2889 DUP7 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x3CD4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2231 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3CF6 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x3CB7 JUMP JUMPDEST ADD PUSH2 0x3FF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 LT PUSH2 0x3D3E JUMPI PUSH8 0xDE0B6B3A7640000 PUSH2 0x3D36 DUP2 DUP5 DIV PUSH2 0x3EE3 JUMP JUMPDEST SHL SWAP1 POP PUSH2 0xBC7 JUMP JUMPDEST PUSH1 0xA DUP3 GT PUSH2 0x3D51 JUMPI POP PUSH4 0xBC7C871C PUSH2 0xBC7 JUMP JUMPDEST PUSH1 0x64 DUP3 GT PUSH2 0x3D65 JUMPI POP PUSH5 0x2540BE400 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x3E8 DUP3 GT PUSH2 0x3D7A JUMPI POP PUSH5 0x75CDD4719 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x2710 DUP3 GT PUSH2 0x3D8F JUMPI POP PUSH5 0x174876E800 PUSH2 0xBC7 JUMP JUMPDEST PUSH3 0x186A0 DUP3 GT PUSH2 0x3DA5 JUMPI POP PUSH5 0x49A0A4C700 PUSH2 0xBC7 JUMP JUMPDEST PUSH3 0xF4240 DUP3 GT PUSH2 0x3DBB JUMPI POP PUSH5 0xE8D4A51000 PUSH2 0xBC7 JUMP JUMPDEST PUSH3 0x989680 DUP3 GT PUSH2 0x3DD2 JUMPI POP PUSH6 0x2E0466FC608 PUSH2 0xBC7 JUMP JUMPDEST PUSH4 0x5F5E100 DUP3 GT PUSH2 0x3DEA JUMPI POP PUSH6 0x9184E72A000 PUSH2 0xBC7 JUMP JUMPDEST PUSH4 0x3B9ACA00 DUP3 GT PUSH2 0x3E02 JUMPI POP PUSH6 0x1CC2C05DBC53 PUSH2 0xBC7 JUMP JUMPDEST PUSH5 0x2540BE400 DUP3 GT PUSH2 0x3E1B JUMPI POP PUSH6 0x5AF3107A4000 PUSH2 0xBC7 JUMP JUMPDEST PUSH5 0x174876E800 DUP3 GT PUSH2 0x3E35 JUMPI POP PUSH7 0x11F9B83A95B45 PUSH2 0xBC7 JUMP JUMPDEST PUSH5 0xE8D4A51000 DUP3 GT PUSH2 0x3E4F JUMPI POP PUSH7 0x38D7EA4C68000 PUSH2 0xBC7 JUMP JUMPDEST PUSH6 0x9184E72A000 DUP3 GT PUSH2 0x3E6A JUMPI POP PUSH7 0xB3C13249D90BB PUSH2 0xBC7 JUMP JUMPDEST PUSH6 0x5AF3107A4000 DUP3 GT PUSH2 0x3E85 JUMPI POP PUSH7 0x2386F26FC10000 PUSH2 0xBC7 JUMP JUMPDEST PUSH7 0x38D7EA4C68000 DUP3 GT PUSH2 0x3EA1 JUMPI POP PUSH7 0x7058BF6E27A751 PUSH2 0xBC7 JUMP JUMPDEST PUSH7 0x2386F26FC10000 DUP3 GT PUSH2 0x3EBE JUMPI POP PUSH8 0x16345785D8A0000 PUSH2 0xBC7 JUMP JUMPDEST PUSH8 0x16345785D8A0000 DUP3 GT PUSH2 0x3EDC JUMPI POP PUSH8 0x463777A4D8C892D PUSH2 0xBC7 JUMP JUMPDEST POP DUP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x80 SHL DUP3 LT PUSH2 0x3EFB JUMPI PUSH1 0x80 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x40 ADD JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0x3F16 JUMPI PUSH1 0x40 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0x3F2D JUMPI PUSH1 0x20 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x10 ADD JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0x3F42 JUMPI PUSH1 0x10 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x8 ADD JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x3F56 JUMPI PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x4 ADD JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x3F69 JUMPI PUSH1 0x4 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x2 ADD JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0xBC7 JUMPI PUSH1 0x1 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x662 DUP2 PUSH2 0x4BC0 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3FC9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x3FDC PUSH2 0x3FD7 DUP3 PUSH2 0x4B97 JUMP JUMPDEST PUSH2 0x4B71 JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 POP PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP5 DUP2 ADD DUP2 DUP5 MUL DUP7 ADD DUP3 ADD DUP8 LT ISZERO PUSH2 0x3FFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x401C JUMPI DUP2 MLOAD DUP5 MSTORE SWAP3 DUP3 ADD SWAP3 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4000 JUMP JUMPDEST POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4037 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x404C JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x405F PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x4B71 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x4076 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x0 SWAP1 DUP3 ADD PUSH1 0x20 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0x662 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x662 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40BE JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1517 DUP2 PUSH2 0x4BC0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40DA JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1517 DUP2 PUSH2 0x4BC0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x40F7 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4102 DUP2 PUSH2 0x4BC0 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4112 DUP2 PUSH2 0x4BC0 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4131 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x413C DUP2 PUSH2 0x4BC0 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x414C DUP2 PUSH2 0x4BC0 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x4177 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x4182 DUP2 PUSH2 0x4BC0 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x4192 DUP2 PUSH2 0x4BC0 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x41B5 JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x41E4 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x41EF DUP2 PUSH2 0x4BC0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4211 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4227 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x423A JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x4248 PUSH2 0x3FD7 DUP3 PUSH2 0x4B97 JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP3 POP DUP1 DUP7 ADD DUP12 DUP3 DUP4 DUP8 MUL DUP10 ADD ADD GT ISZERO PUSH2 0x4268 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x4293 JUMPI DUP1 MLOAD PUSH2 0x427F DUP2 PUSH2 0x4BC0 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP3 DUP2 ADD SWAP3 DUP2 ADD PUSH2 0x426C JUMP JUMPDEST POP DUP10 ADD MLOAD SWAP1 SWAP8 POP SWAP4 POP POP POP DUP1 DUP3 GT ISZERO PUSH2 0x42AA JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x42B7 DUP7 DUP3 DUP8 ADD PUSH2 0x3FB9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x42DA JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x42EF JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x42FF JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x430D PUSH2 0x3FD7 DUP3 PUSH2 0x4B97 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP4 DUP2 ADD SWAP1 DUP4 DUP6 ADD PUSH1 0x40 DUP1 DUP6 MUL DUP7 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0x432B JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP6 POP JUMPDEST DUP5 DUP7 LT ISZERO PUSH2 0x4378 JUMPI DUP1 DUP3 DUP12 SUB SLT ISZERO PUSH2 0x4345 JUMPI DUP8 DUP9 REVERT JUMPDEST PUSH2 0x434E DUP2 PUSH2 0x4B71 JUMP JUMPDEST PUSH2 0x4358 DUP12 DUP5 PUSH2 0x409E JUMP JUMPDEST DUP2 MSTORE DUP3 DUP9 ADD CALLDATALOAD DUP9 DUP3 ADD MSTORE DUP5 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP3 DUP7 ADD SWAP3 SWAP1 DUP2 ADD SWAP1 PUSH2 0x432F JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4398 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x43AD JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x43BD JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x43CB PUSH2 0x3FD7 DUP3 PUSH2 0x4B97 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP4 DUP2 ADD SWAP1 DUP4 DUP6 ADD PUSH1 0x60 DUP1 DUP6 MUL DUP7 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0x43E9 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP6 POP JUMPDEST DUP5 DUP7 LT ISZERO PUSH2 0x4378 JUMPI DUP1 DUP3 DUP12 SUB SLT ISZERO PUSH2 0x4403 JUMPI DUP8 DUP9 REVERT JUMPDEST PUSH2 0x440C DUP2 PUSH2 0x4B71 JUMP JUMPDEST PUSH2 0x4416 DUP12 DUP5 PUSH2 0x409E JUMP JUMPDEST DUP2 MSTORE DUP3 DUP9 ADD CALLDATALOAD DUP9 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP5 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE DUP5 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP3 DUP7 ADD SWAP3 SWAP1 DUP2 ADD SWAP1 PUSH2 0x43ED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4451 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1517 DUP2 PUSH2 0x4BD5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x446D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1517 DUP2 PUSH2 0x4BD5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x4492 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP8 CALLDATALOAD SWAP7 POP PUSH1 0x20 DUP1 DUP10 ADD CALLDATALOAD PUSH2 0x44A5 DUP2 PUSH2 0x4BC0 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x44B5 DUP2 PUSH2 0x4BC0 JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x44D0 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP12 ADD SWAP2 POP DUP12 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x44E3 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x44F1 PUSH2 0x3FD7 DUP3 PUSH2 0x4B97 JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP6 DUP3 ADD SWAP2 POP DUP6 DUP6 ADD DUP16 DUP8 DUP9 DUP7 MUL DUP9 ADD ADD GT ISZERO PUSH2 0x450F JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x4531 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x4513 JUMP JUMPDEST POP SWAP9 POP POP POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP6 POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 DUP12 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x4557 JUMPI DUP4 DUP5 REVERT JUMPDEST POP POP PUSH2 0x4565 DUP11 DUP3 DUP12 ADD PUSH2 0x4027 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4585 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1517 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x45AD JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1517 DUP2 PUSH2 0x4BE3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x45CA JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x45D5 DUP2 PUSH2 0x4BE3 JUMP JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD MLOAD SWAP3 SWAP5 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x45F7 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x4602 DUP2 PUSH2 0x4BE3 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x461D JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x4629 DUP6 DUP3 DUP7 ADD PUSH2 0x3FB9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4644 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1517 DUP4 DUP4 PUSH2 0x409E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x465F JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x467A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4690 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP PUSH2 0x120 DUP1 DUP4 DUP10 SUB SLT ISZERO PUSH2 0x46A6 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x46AF DUP2 PUSH2 0x4B71 JUMP JUMPDEST SWAP1 POP PUSH2 0x46BB DUP9 DUP5 PUSH2 0x408F JUMP JUMPDEST DUP2 MSTORE PUSH2 0x46CA DUP9 PUSH1 0x20 DUP6 ADD PUSH2 0x3FAE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x46DC DUP9 PUSH1 0x40 DUP6 ADD PUSH2 0x3FAE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x470C DUP9 PUSH1 0xC0 DUP6 ADD PUSH2 0x3FAE JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x471E DUP9 PUSH1 0xE0 DUP6 ADD PUSH2 0x3FAE JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD CALLDATALOAD DUP4 DUP2 GT ISZERO PUSH2 0x4736 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH2 0x4742 DUP11 DUP3 DUP8 ADD PUSH2 0x4027 JUMP JUMPDEST SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP8 PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP8 POP PUSH1 0x40 SWAP1 SWAP7 ADD CALLDATALOAD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4772 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x478B JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x47AE JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x47C7 DUP2 PUSH2 0x4BD5 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4801 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x47E5 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x24 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP4 CALLDATACOPY SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x489B JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x487F JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD DUP2 DUP4 PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x48CF JUMPI DUP2 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x48B0 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x1517 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x47D2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0x48FE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x47D2 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x228B DUP2 DUP6 PUSH2 0x47D2 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x20 DUP8 ADD MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x40 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x60 DUP2 ADD PUSH2 0x4A43 DUP5 PUSH2 0x4BB6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x80 DUP2 ADD PUSH2 0x4A64 DUP6 PUSH2 0x4BB6 JUMP JUMPDEST DUP5 PUSH1 0x20 DUP4 ADD MSTORE DUP4 PUSH1 0x40 DUP4 ADD MSTORE DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 MLOAD PUSH1 0xA0 DUP3 ADD SWAP1 PUSH2 0x4A92 DUP2 PUSH2 0x4BB6 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP5 ADD MSTORE POP PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE DUP3 PUSH1 0x80 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4AE7 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x4ACB JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x4AF8 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x17DCDC5C9D08119052531151 PUSH1 0xA2 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1FD4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x47D2 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4B8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x4BAC JUMPI DUP1 DUP2 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x679 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x679 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x679 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x679 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA 0xED 0x5C PUSH2 0xC26E 0xC0 PUSH11 0x87F86DDC8AFED6A0CFB5DE 0x48 SELFBALANCE SWAP4 PUSH16 0x1F42074E82BA4AE01364736F6C634300 SMOD ADD STOP CALLER ", "sha1": "6de5f05fe2ebbcdefbe855d2bc0ba12d3a678bac", "source": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\npragma experimental ABIEncoderV2;\n\nimport \"@balancer-labs/v2-solidity-utils/contracts/math/FixedPoint.sol\";\n\nimport \"@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol\";\nimport \"@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol\";\n\nimport \"../../libraries/GyroConfigKeys.sol\";\nimport \"../../interfaces/IGyroConfig.sol\";\nimport \"../../libraries/GyroPoolMath.sol\";\n\nimport \"./ExtensibleWeightedPool2Tokens.sol\";\nimport \"./Gyro2PoolErrors.sol\";\nimport \"./GyroTwoMath.sol\";\nimport \"./GyroTwoOracleMath.sol\";\n\ncontract GyroTwoPool is ExtensibleWeightedPool2Tokens, GyroTwoOracleMath {\n    using FixedPoint for uint256;\n    using WeightedPoolUserDataHelpers for bytes;\n    using WeightedPool2TokensMiscData for bytes32;\n\n    uint256 private immutable _sqrtAlpha;\n    uint256 private immutable _sqrtBeta;\n\n    IGyroConfig public gyroConfig;\n\n    struct GyroParams {\n        NewPoolParams baseParams;\n        uint256 sqrtAlpha; // A: Should already be upscaled\n        uint256 sqrtBeta; // A: Should already be upscaled. Could be passed as an array[](2)\n    }\n\n    constructor(GyroParams memory params, address configAddress) ExtensibleWeightedPool2Tokens(params.baseParams) {\n        _require(params.sqrtAlpha < params.sqrtBeta, Gyro2PoolErrors.SQRT_PARAMS_WRONG);\n        _sqrtAlpha = params.sqrtAlpha;\n        _sqrtBeta = params.sqrtBeta;\n\n        gyroConfig = IGyroConfig(configAddress);\n    }\n\n    // Returns sqrtAlpha and sqrtBeta (square roots of lower and upper price bounds of p_x respectively)\n\n    function getSqrtParameters() external view returns (uint256[2] memory) {\n        return _sqrtParameters();\n    }\n\n    function _sqrtParameters() internal view virtual returns (uint256[2] memory virtualParameters) {\n        virtualParameters[0] = _sqrtParameters(true);\n        virtualParameters[1] = _sqrtParameters(false);\n        return virtualParameters;\n    }\n\n    function _sqrtParameters(bool parameter0) internal view virtual returns (uint256) {\n        return parameter0 ? _sqrtAlpha : _sqrtBeta;\n    }\n\n    /// @dev Returns virtual offsets a and b for reserves x and y respectively, as in (x+a)*(y+b)=L^2\n    function getVirtualParameters() external view returns (uint256[] memory virtualParams) {\n        (, uint256[] memory balances, ) = getVault().getPoolTokens(getPoolId());\n        // _calculateCurrentValues() is defined in terms of an in/out pair, but we just map this to the 0/1 (x/y) pair.\n        _upscaleArray(balances);\n        (, virtualParams[0], virtualParams[1]) = _calculateCurrentValues(balances[0], balances[1], true);\n    }\n\n    function _getVirtualParameters(uint256[2] memory sqrtParams, uint256 invariant)\n        internal\n        view\n        virtual\n        returns (uint256[2] memory virtualParameters)\n    {\n        virtualParameters[0] = _virtualParameters(true, sqrtParams[1], invariant);\n        virtualParameters[1] = _virtualParameters(false, sqrtParams[0], invariant);\n        return virtualParameters;\n    }\n\n    function _virtualParameters(\n        bool parameter0,\n        uint256 sqrtParam,\n        uint256 invariant\n    ) internal view virtual returns (uint256) {\n        return\n            parameter0\n                ? (GyroTwoMath._calculateVirtualParameter0(invariant, sqrtParam))\n                : (GyroTwoMath._calculateVirtualParameter1(invariant, sqrtParam));\n    }\n\n    /**\n     * @dev Returns the current value of the invariant.\n     */\n    function getInvariant() public view override returns (uint256) {\n        (, uint256[] memory balances, ) = getVault().getPoolTokens(getPoolId());\n        uint256[2] memory sqrtParams = _sqrtParameters();\n\n        // Since the Pool hooks always work with upscaled balances, we manually\n        // upscale here for consistency\n        _upscaleArray(balances);\n\n        return GyroTwoMath._calculateInvariant(balances, sqrtParams[0], sqrtParams[1]);\n    }\n\n    // Swap Hooks\n\n    function onSwap(\n        SwapRequest memory request,\n        uint256 balanceTokenIn,\n        uint256 balanceTokenOut\n    ) public virtual override whenNotPaused onlyVault(request.poolId) returns (uint256) {\n        bool tokenInIsToken0 = request.tokenIn == _token0;\n\n        uint256 scalingFactorTokenIn = _scalingFactor(tokenInIsToken0);\n        uint256 scalingFactorTokenOut = _scalingFactor(!tokenInIsToken0);\n\n        // All token amounts are upscaled.\n        balanceTokenIn = _upscale(balanceTokenIn, scalingFactorTokenIn);\n        balanceTokenOut = _upscale(balanceTokenOut, scalingFactorTokenOut);\n\n        // All the calculations in one function to avoid Error Stack Too Deep\n        (uint256 currentInvariant, uint256 virtualParamIn, uint256 virtualParamOut) = _calculateCurrentValues(\n            balanceTokenIn,\n            balanceTokenOut,\n            tokenInIsToken0\n        );\n\n        // Update price oracle with the pre-swap balances\n        _updateOracle(\n            request.lastChangeBlock,\n            tokenInIsToken0 ? balanceTokenIn : balanceTokenOut,\n            tokenInIsToken0 ? balanceTokenOut : balanceTokenIn,\n            tokenInIsToken0 ? virtualParamIn : virtualParamOut,\n            tokenInIsToken0 ? virtualParamOut : virtualParamIn\n        );\n\n        if (request.kind == IVault.SwapKind.GIVEN_IN) {\n            // Fees are subtracted before scaling, to reduce the complexity of the rounding direction analysis.\n            // This is amount - fee amount, so we round up (favoring a higher fee amount).\n            uint256 feeAmount = request.amount.mulUp(getSwapFeePercentage());\n            // TODO check this call: why do we need to upscale? Should we downscale??\n            request.amount = _upscale(request.amount.sub(feeAmount), scalingFactorTokenIn);\n\n            uint256 amountOut = _onSwapGivenIn(request, balanceTokenIn, balanceTokenOut, virtualParamIn, virtualParamOut);\n\n            // amountOut tokens are exiting the Pool, so we round down.\n            return _downscaleDown(amountOut, scalingFactorTokenOut);\n        } else {\n            request.amount = _upscale(request.amount, scalingFactorTokenOut);\n\n            uint256 amountIn = _onSwapGivenOut(request, balanceTokenIn, balanceTokenOut, virtualParamIn, virtualParamOut);\n\n            // amountIn tokens are entering the Pool, so we round up.\n            amountIn = _downscaleUp(amountIn, scalingFactorTokenIn);\n\n            // Fees are added after scaling happens, to reduce the complexity of the rounding direction analysis.\n            // This is amount + fee amount, so we round up (favoring a higher fee amount).\n            return amountIn.divUp(getSwapFeePercentage().complement());\n        }\n    }\n\n    function _onSwapGivenIn(\n        SwapRequest memory swapRequest,\n        uint256 currentBalanceTokenIn,\n        uint256 currentBalanceTokenOut,\n        uint256 virtualParamIn,\n        uint256 virtualParamOut\n    ) internal pure override returns (uint256) {\n        // Swaps are disabled while the contract is paused.\n        return GyroTwoMath._calcOutGivenIn(currentBalanceTokenIn, currentBalanceTokenOut, swapRequest.amount, virtualParamIn, virtualParamOut);\n    }\n\n    function _onSwapGivenOut(\n        SwapRequest memory swapRequest,\n        uint256 currentBalanceTokenIn,\n        uint256 currentBalanceTokenOut,\n        uint256 virtualParamIn,\n        uint256 virtualParamOut\n    ) internal pure override returns (uint256) {\n        // Swaps are disabled while the contract is paused.\n        return GyroTwoMath._calcInGivenOut(currentBalanceTokenIn, currentBalanceTokenOut, swapRequest.amount, virtualParamIn, virtualParamOut);\n    }\n\n    function calculateCurrentValues(\n        uint256 balanceTokenIn,\n        uint256 balanceTokenOut,\n        bool tokenInIsToken0\n    )\n        public\n        view\n        returns (\n            uint256 currentInvariant,\n            uint256 virtualParamIn,\n            uint256 virtualParamOut\n        )\n    {\n        uint256 scalingFactorTokenIn = _scalingFactor(tokenInIsToken0);\n        uint256 scalingFactorTokenOut = _scalingFactor(!tokenInIsToken0);\n        balanceTokenIn = _upscale(balanceTokenIn, scalingFactorTokenIn);\n        balanceTokenOut = _upscale(balanceTokenOut, scalingFactorTokenOut);\n        return _calculateCurrentValues(balanceTokenIn, balanceTokenOut, tokenInIsToken0);\n    }\n\n    function _calculateCurrentValues(\n        uint256 balanceTokenIn,\n        uint256 balanceTokenOut,\n        bool tokenInIsToken0\n    )\n        internal\n        view\n        returns (\n            uint256 currentInvariant,\n            uint256 virtualParamIn,\n            uint256 virtualParamOut\n        )\n    {\n        // if we have more tokens we might need to get the balances from the Vault\n        uint256[] memory balances = new uint256[](2);\n        balances[0] = tokenInIsToken0 ? balanceTokenIn : balanceTokenOut;\n        balances[1] = tokenInIsToken0 ? balanceTokenOut : balanceTokenIn;\n\n        uint256[2] memory sqrtParams = _sqrtParameters();\n\n        currentInvariant = GyroTwoMath._calculateInvariant(balances, sqrtParams[0], sqrtParams[1]);\n\n        uint256[2] memory virtualParam = _getVirtualParameters(sqrtParams, currentInvariant);\n\n        virtualParamIn = tokenInIsToken0 ? virtualParam[0] : virtualParam[1];\n        virtualParamOut = tokenInIsToken0 ? virtualParam[1] : virtualParam[0];\n    }\n\n    //Note: is public visibility ok for the following function?\n\n    /**\n     * @dev Called when the Pool is joined for the first time; that is, when the BPT total supply is zero.\n     *\n     * Returns the amount of BPT to mint, and the token amounts the Pool will receive in return.\n     *\n     * Minted BPT will be sent to `recipient`, except for _MINIMUM_BPT, which will be deducted from this amount and sent\n     * to the zero address instead. This will cause that BPT to remain forever locked there, preventing total BTP from\n     * ever dropping below that value, and ensuring `_onInitializePool` can only be called once in the entire Pool's\n     * lifetime.\n     *\n     * The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n     * be downscaled (rounding up) before being returned to the Vault.\n     */\n    function _onInitializePool(\n        bytes32,\n        address,\n        address,\n        bytes memory userData\n    ) internal override returns (uint256, uint256[] memory) {\n        BaseWeightedPool.JoinKind kind = userData.joinKind();\n        _require(kind == BaseWeightedPool.JoinKind.INIT, Errors.UNINITIALIZED);\n\n        uint256[] memory amountsIn = userData.initialAmountsIn();\n        InputHelpers.ensureInputLengthMatch(amountsIn.length, 2);\n        _upscaleArray(amountsIn);\n\n        uint256[2] memory sqrtParams = _sqrtParameters();\n\n        uint256 invariantAfterJoin = GyroTwoMath._calculateInvariant(amountsIn, sqrtParams[0], sqrtParams[1]);\n\n        // Set the initial BPT to the value of the invariant times the number of tokens. This makes BPT supply more\n        // consistent in Pools with similar compositions but different number of tokens.\n\n        uint256 bptAmountOut = Math.mul(invariantAfterJoin, 2);\n\n        _lastInvariant = invariantAfterJoin;\n\n        return (bptAmountOut, amountsIn);\n    }\n\n    /**\n     * @dev Called whenever the Pool is joined after the first initialization join (see `_onInitializePool`).\n     *\n     * Returns the amount of BPT to mint, the token amounts that the Pool will receive in return, and the number of\n     * tokens to pay in protocol swap fees.\n     *\n     * Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n     * performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n     *\n     * Minted BPT will be sent to `recipient`.\n     *\n     * The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n     * be downscaled (rounding up) before being returned to the Vault.\n     *\n     * Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onJoinPool`). These\n     * amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n     *\n     * protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way\n     *\n     * Responsibility for updating the oracle has been moved from `onJoinPool()` (without the underscore) to this function. That is because both this function and `_updateOracle()` need access to the invariant and this way we can share the computation.\n     */\n    function _onJoinPool(\n        bytes32,\n        address,\n        address,\n        uint256[] memory balances,\n        uint256 lastChangeBlock,\n        uint256, //protocolSwapFeePercentage,\n        bytes memory userData\n    )\n        internal\n        override\n        returns (\n            uint256,\n            uint256[] memory,\n            uint256[] memory\n        )\n    {\n        uint256[2] memory sqrtParams = _sqrtParameters();\n\n        // Due protocol swap fee amounts are computed by measuring the growth of the invariant between the previous\n        // join or exit event and now - the invariant's growth is due exclusively to swap fees. This avoids\n        // spending gas calculating the fees on each individual swap.\n        uint256 invariantBeforeAction = GyroTwoMath._calculateInvariant(balances, sqrtParams[0], sqrtParams[1]);\n        uint256[2] memory virtualParam = _getVirtualParameters(sqrtParams, invariantBeforeAction);\n\n        // Update price oracle with pre-join balances\n        _updateOracle(lastChangeBlock, balances[0], balances[1], virtualParam[0], virtualParam[1]);\n\n        _distributeFees(invariantBeforeAction);\n\n        (uint256 bptAmountOut, uint256[] memory amountsIn) = _doJoin(balances, userData);\n\n        // Since we pay fees in BPT, they have not changed the invariant and 'invariantBeforeAction' is still consistent with\n        // 'balances'. Therefore, we can use a simplified method to update the invariant that does not require a full\n        // re-computation.\n        // Note: Should this be changed in the future, we also need to reduce the invariant proportionally by the total\n        // protocol fee factor.\n        _lastInvariant = GyroPoolMath.liquidityInvariantUpdate(invariantBeforeAction, bptAmountOut, totalSupply(), true);\n\n        // returns a new uint256[](2) b/c Balancer vault is expecting a fee array, but fees paid in BPT instead\n        return (bptAmountOut, amountsIn, new uint256[](2));\n    }\n\n    function _doJoin(uint256[] memory balances, bytes memory userData) internal view returns (uint256 bptAmountOut, uint256[] memory amountsIn) {\n        BaseWeightedPool.JoinKind kind = userData.joinKind();\n\n        // We do NOT currently support unbalanced update, i.e., EXACT_TOKENS_IN_FOR_BPT_OUT or TOKEN_IN_FOR_EXACT_BPT_OUT\n        if (kind == BaseWeightedPool.JoinKind.ALL_TOKENS_IN_FOR_EXACT_BPT_OUT) {\n            (bptAmountOut, amountsIn) = _joinAllTokensInForExactBPTOut(balances, userData);\n        } else {\n            _revert(Errors.UNHANDLED_JOIN_KIND);\n        }\n    }\n\n    function _joinAllTokensInForExactBPTOut(uint256[] memory balances, bytes memory userData)\n        internal\n        view\n        override\n        returns (uint256, uint256[] memory)\n    {\n        uint256 bptAmountOut = userData.allTokensInForExactBptOut();\n        // Note that there is no maximum amountsIn parameter: this is handled by `IVault.joinPool`.\n\n        uint256[] memory amountsIn = GyroPoolMath._calcAllTokensInGivenExactBptOut(balances, bptAmountOut, totalSupply());\n\n        return (bptAmountOut, amountsIn);\n    }\n\n    /**\n     * @dev Called whenever the Pool is exited.\n     *\n     * Returns the amount of BPT to burn, the token amounts for each Pool token that the Pool will grant in return, and\n     * the number of tokens to pay in protocol swap fees.\n     *\n     * Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n     * performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n     *\n     * BPT will be burnt from `sender`.\n     *\n     * The Pool will grant tokens to `recipient`. These amounts are considered upscaled and will be downscaled\n     * (rounding down) before being returned to the Vault.\n     *\n     * Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onExitPool`). These\n     * amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n     *\n     * protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way\n     */\n    function _onExitPool(\n        bytes32,\n        address,\n        address,\n        uint256[] memory balances,\n        uint256 lastChangeBlock,\n        uint256, // protocolSwapFeePercentage,\n        bytes memory userData\n    )\n        internal\n        override\n        returns (\n            uint256 bptAmountIn,\n            uint256[] memory amountsOut,\n            uint256[] memory dueProtocolFeeAmounts\n        )\n    {\n        // Exits are not completely disabled while the contract is paused: proportional exits (exact BPT in for tokens\n        // out) remain functional.\n\n        uint256[2] memory sqrtParams = _sqrtParameters();\n\n        // Note: If the contract is paused, swap protocol fee amounts are not charged and the oracle is not updated\n        // to avoid extra calculations and reduce the potential for errors.\n        if (_isNotPaused()) {\n            // Due protocol swap fee amounts are computed by measuring the growth of the invariant between the previous\n            // join or exit event and now - the invariant's growth is due exclusively to swap fees. This avoids\n            // spending gas calculating the fees on each individual swap.\n            uint256 invariantBeforeAction = GyroTwoMath._calculateInvariant(balances, sqrtParams[0], sqrtParams[1]);\n            uint256[2] memory virtualParam = _getVirtualParameters(sqrtParams, invariantBeforeAction);\n\n            // Update price oracle with the pre-exit balances\n            _updateOracle(lastChangeBlock, balances[0], balances[1], virtualParam[0], virtualParam[1]);\n\n            _distributeFees(invariantBeforeAction);\n\n            (bptAmountIn, amountsOut) = _doExit(balances, userData);\n\n            // Since we pay fees in BPT, they have not changed the invariant and 'invariantBeforeAction' is still consistent with\n            // 'balances'. Therefore, we can use a simplified method to update the invariant that does not require a full\n            // re-computation.\n            // Note: Should this be changed in the future, we also need to reduce the invariant proportionally by the total\n            // protocol fee factor.\n            _lastInvariant = GyroPoolMath.liquidityInvariantUpdate(invariantBeforeAction, bptAmountIn, totalSupply(), false);\n        } else {\n            // Note: If the contract is paused, swap protocol fee amounts are not charged and the oracle is not updated\n            // to avoid extra calculations and reduce the potential for errors.\n            (bptAmountIn, amountsOut) = _doExit(balances, userData);\n\n            // Invalidate _lastInvariant. We do not compute the invariant to make sure the pool is not locking\n            // up b/c numerical limits might be violated. Instead, we set the invariant such that any following\n            // (non-paused) join/exit will ignore and recompute it. (see GyroPoolMath._calcProtocolFees())\n            _lastInvariant = type(uint256).max;\n        }\n\n        // returns a new uint256[](2) b/c Balancer vault is expecting a fee array, but fees paid in BPT instead\n        return (bptAmountIn, amountsOut, new uint256[](2));\n    }\n\n    function _doExit(uint256[] memory balances, bytes memory userData) internal view returns (uint256 bptAmountIn, uint256[] memory amountsOut) {\n        BaseWeightedPool.ExitKind kind = userData.exitKind();\n\n        // We do NOT support unbalanced exit at the moment, i.e., EXACT_BPT_IN_FOR_ONE_TOKEN_OUT or\n        // BPT_IN_FOR_EXACT_TOKENS_OUT.\n        if (kind == BaseWeightedPool.ExitKind.EXACT_BPT_IN_FOR_TOKENS_OUT) {\n            (bptAmountIn, amountsOut) = _exitExactBPTInForTokensOut(balances, userData);\n        } else {\n            _revert(Errors.UNHANDLED_EXIT_KIND);\n        }\n    }\n\n    function _exitExactBPTInForTokensOut(uint256[] memory balances, bytes memory userData)\n        internal\n        view\n        override\n        returns (uint256, uint256[] memory)\n    {\n        // This exit function is the only one that is not disabled if the contract is paused: it remains unrestricted\n        // in an attempt to provide users with a mechanism to retrieve their tokens in case of an emergency.\n        // This particular exit function is the only one that remains available because it is the simplest one, and\n        // therefore the one with the lowest likelihood of errors.\n\n        uint256 bptAmountIn = userData.exactBptInForTokensOut();\n        // Note that there is no minimum amountOut parameter: this is handled by `IVault.exitPool`.\n\n        uint256[] memory amountsOut = GyroPoolMath._calcTokensOutGivenExactBptIn(balances, bptAmountIn, totalSupply());\n        return (bptAmountIn, amountsOut);\n    }\n\n    // Helpers\n\n    /**\n     * @dev Computes and distributes fees between the Balancer and the Gyro treasury\n     * The fees are computed and distributed in BPT rather than using the\n     * Balancer regular distribution mechanism which would pay these in underlying\n     */\n\n    function _distributeFees(uint256 invariantBeforeAction) internal {\n        // calculate Protocol fees in BPT\n        // lastInvariant is the invariant logged at the end of the last liquidity update\n        // protocol fees are calculated on swap fees earned between liquidity updates\n        (uint256 gyroFees, uint256 balancerFees, address gyroTreasury, address balTreasury) = _getDueProtocolFeeAmounts(\n            _lastInvariant,\n            invariantBeforeAction\n        );\n\n        // Pay fees in BPT\n        _payFeesBpt(gyroFees, balancerFees, gyroTreasury, balTreasury);\n    }\n\n    /**\n     * @dev this function overrides inherited function to make sure it is never used\n     */\n    function _getDueProtocolFeeAmounts(\n        uint256[] memory, // balances,\n        uint256[] memory, // normalizedWeights,\n        uint256, // previousInvariant,\n        uint256, // currentInvariant,\n        uint256 // protocolSwapFeePercentage\n    ) internal pure override returns (uint256[] memory) {\n        revert(\"Not implemented\");\n    }\n\n    /**\n     * @dev Calculates protocol fee amounts in BPT terms.\n     * protocolSwapFeePercentage is not used here b/c we take parameters from GyroConfig instead.\n     * Returns: BPT due to Gyro, BPT due to Balancer, receiving address for Gyro fees, receiving address for Balancer\n     * fees.\n     */\n    function _getDueProtocolFeeAmounts(uint256 previousInvariant, uint256 currentInvariant)\n        internal\n        view\n        returns (\n            uint256,\n            uint256,\n            address,\n            address\n        )\n    {\n        (uint256 protocolSwapFeePerc, uint256 protocolFeeGyroPortion, address gyroTreasury, address balTreasury) = _getFeesMetadata();\n\n        // Early return if the protocol swap fee percentage is zero, saving gas.\n        if (protocolSwapFeePerc == 0) {\n            return (0, 0, gyroTreasury, balTreasury);\n        }\n\n        // Calculate fees in BPT\n        (uint256 gyroFees, uint256 balancerFees) = GyroPoolMath._calcProtocolFees(\n            previousInvariant,\n            currentInvariant,\n            totalSupply(),\n            protocolSwapFeePerc,\n            protocolFeeGyroPortion\n        );\n\n        return (gyroFees, balancerFees, gyroTreasury, balTreasury);\n    }\n\n    function _payFeesBpt(\n        uint256 gyroFees,\n        uint256 balancerFees,\n        address gyroTreasury,\n        address balTreasury\n    ) internal {\n        // Pay fees in BPT to gyro treasury\n        if (gyroFees > 0) {\n            _mintPoolTokens(gyroTreasury, gyroFees);\n        }\n        // Pay fees in BPT to bal treasury\n        if (balancerFees > 0) {\n            _mintPoolTokens(balTreasury, balancerFees);\n        }\n    }\n\n    function _getFeesMetadata()\n        internal\n        view\n        returns (\n            uint256,\n            uint256,\n            address,\n            address\n        )\n    {\n        return (\n            gyroConfig.getUint(GyroConfigKeys.PROTOCOL_SWAP_FEE_PERC_KEY),\n            gyroConfig.getUint(GyroConfigKeys.PROTOCOL_FEE_GYRO_PORTION_KEY),\n            gyroConfig.getAddress(GyroConfigKeys.GYRO_TREASURY_KEY),\n            gyroConfig.getAddress(GyroConfigKeys.BAL_TREASURY_KEY)\n        );\n    }\n\n    /**\n     * @dev Updates the Price Oracle based on the Pool's current state (balances, BPT supply and invariant). Must be\n     * called on *all* state-changing functions with the balances *before* the state change happens, and with\n     * `lastChangeBlock` as the number of the block in which any of the balances last changed.\n     */\n    function _updateOracle(\n        uint256 lastChangeBlock,\n        uint256 balanceToken0,\n        uint256 balanceToken1,\n        uint256 virtualParam0,\n        uint256 virtualParam1\n    ) internal {\n        bytes32 miscData = _miscData;\n        if (miscData.oracleEnabled() && block.number > lastChangeBlock) {\n            int256 logSpotPrice = GyroTwoOracleMath._calcLogSpotPrice(balanceToken0, virtualParam0, balanceToken1, virtualParam1);\n\n            int256 logBPTPrice = GyroTwoOracleMath._calcLogBPTPrice(\n                balanceToken0,\n                virtualParam0,\n                balanceToken1,\n                virtualParam1,\n                miscData.logTotalSupply()\n            );\n\n            uint256 oracleCurrentIndex = miscData.oracleIndex();\n            uint256 oracleCurrentSampleInitialTimestamp = miscData.oracleSampleCreationTimestamp();\n            uint256 oracleUpdatedIndex = _processPriceData(\n                oracleCurrentSampleInitialTimestamp,\n                oracleCurrentIndex,\n                logSpotPrice,\n                logBPTPrice,\n                miscData.logInvariant()\n            );\n\n            if (oracleCurrentIndex != oracleUpdatedIndex) {\n                // solhint-disable not-rely-on-time\n                miscData = miscData.setOracleIndex(oracleUpdatedIndex);\n                miscData = miscData.setOracleSampleCreationTimestamp(block.timestamp);\n                _miscData = miscData;\n            }\n        }\n    }\n\n    /**\n     * @dev this variant of the function, called from `onJoinPool()` and `onExitPool()`, which we inherit, is a no-op. We instead have moved responsibility for updating the oracle to `_onJoinPool()` and `_onExitPool()` and the above version is called from there.\n     */\n    function _updateOracle(\n        uint256 lastChangeBlock,\n        uint256 balanceToken0,\n        uint256 balanceToken1\n    ) internal override {\n        // Do nothing.\n    }\n}\n", "sourceMap": "1263:26541:9:-:0;;;873:95:52;820:148;;2785:4:5;2738:51;;;;2795;;3111:1;3061:51;;1815:332:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1906:17;;4949:26:5;;;;4977:27;;;;4835:11;;;;;4848:13;;;;;4863:12;;2020:280:50;;;;;;;;;;;-1:-1:-1;;;2020:280:50;;;;4907:12:5;;;;4795:10;-1:-1:-1;1929:46:35;1749:14:21;;-1:-1:-1;;;;;;1749:14:21;-1:-1:-1;1749:14:21;2002:13:51;;4835:11:5;;4848:13;;4863:12;;4835:11;;;;;;4848:13;;2002::51;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2025:17:51;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2052:9:51;:14;;2064:2;-1:-1:-1;;2052:14:51;;;;;;-1:-1:-1;2100:22:50;;;;;;;2085:37;;2150:25;;;;;2132:43;;-1:-1:-1;2198:95:50;2052:14:51;2185:108:50;1852:14:18::2;::::0;-1:-1:-1;;;;;;1852:14:18;::::2;::::0;-1:-1:-1;2458:93:44;;-1:-1:-1;2164:7:44;2467:49;;;8518:3:36;2458:8:44;:93::i;:::-;2561:96;2232:7;2570:51;;;8582:3:36;2561:8:44;:96::i;:::-;2697:15;:37;;;;2745:40;;;;2818:41;2795:64;;5045:15:5::4;::::0;;5058:1:::4;5045:15:::0;;;5020:22:::4;5045:15:::0;;::::4;::::0;;5020:22;5045:15:::4;::::0;::::4;::::0;;::::4;::::0;::::4;;::::0;-1:-1:-1;5045:15:5::4;5020:40;;5082:6;:13;;;5070:6;5077:1;5070:9;;;;;;;;-1:-1:-1::0;;;;;5070:25:5;;::::4;:9;::::0;;::::4;::::0;;;;;;;:25;5117:13:::4;::::0;::::4;::::0;5105:9;;:6;;-1:-1:-1;;5105:9:5;::::4;;;;;-1:-1:-1::0;;;;;5105:25:5;;::::4;:9;::::0;;::::4;::::0;;;;;;:25;5295:40:::4;::::0;5328:6;;5295:32:::4;;::::0;::::4;;:40:::0;::::4;:::i;:::-;5364:20;::::0;::::4;::::0;5346:39:::4;::::0;:17:::4;:39::i;:::-;5417:24;::::0;::::4;::::0;5395:47:::4;::::0;:21:::4;:47::i;:::-;5470:12:::0;;:62:::4;::::0;-1:-1:-1;;;5470:62:5;;5453:14:::4;::::0;-1:-1:-1;;;;;5470:25:5::4;::::0;-1:-1:-1;;5470:62:5::4;::::0;5496:35:::4;::::0;5470:62:::4;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5596:12:::0;;5640:16:::4;::::0;;5654:1:::4;5640:16:::0;;;;;::::4;::::0;;5453:79;;-1:-1:-1;;;;;;5596:27:5;;::::4;::::0;::::4;::::0;5453:79;;5632:6;;5654:1;5640:16:::4;::::0;::::4;::::0;;::::4;::::0;::::4;;::::0;-1:-1:-1;5640:16:5::4;5596:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;::::0;::::4;;;;;-1:-1:-1::0;;;5757:16:5::4;::::0;;;-1:-1:-1;5794:13:5::4;::::0;;::::4;::::0;;5784:23;;-1:-1:-1;;;;;;5784:23:5;;;::::4;::::0;5827:13:::4;::::0;::::4;::::0;5817:23;;;;;;::::4;::::0;5891:13;5869:36:::4;::::0;:21:::4;:36::i;:::-;5851:54;::::0;5955:13:::4;::::0;::::4;::::0;5933:36:::4;::::0;:21:::4;:36::i;:::-;5915:54;::::0;-1:-1:-1;;;1963:15:9::1;::::0;::::1;::::0;1944:16:::1;::::0;::::1;::::0;1935:79:::1;::::0;-1:-1:-1;821:3:6::1;1935:8:9;:79::i;:::-;2037:16;::::0;::::1;::::0;2024:29:::1;::::0;2075:15:::1;::::0;;::::1;::::0;2063:27:::1;::::0;2101:10:::1;:39:::0;;-1:-1:-1;;;;;;2101:39:9::1;-1:-1:-1::0;;;;;2101:39:9;;::::1;::::0;;;::::1;::::0;;1263:26541;;866:101:36;935:9;930:34;;946:18;954:9;946:7;:18::i;:::-;866:101;;:::o;1135:274:42:-;1345:5;1369:33;1345:5;1369:19;:33::i;8453:158:5:-;8525:35;8552:7;8525:9;;:26;;;;;;:35;;;;:::i;:::-;8513:9;:47;8575:29;;;;;;8596:7;;8575:29;:::i;:::-;;;;;;;;8453:158;:::o;7175:397::-;7251:87;2347:4;7260:45;;;5289:3:36;7251:8:5;:87::i;:::-;7348;2420:4;7357:45;;;5228:3:36;7348:8:5;:87::i;:::-;7458:49;7489:17;7458:9;;:30;;;;;;:49;;;;:::i;:::-;7446:9;:61;7522:43;;;;;;7547:17;;7522:43;:::i;40519:399::-;40586:7;40685:21;40723:5;-1:-1:-1;;;;;40709:30:5;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;40685:56;;;;40816:26;40845:27;40854:2;40858:13;40845:8;;;;;:27;;:::i;:::-;40889:2;:22;;40519:399;-1:-1:-1;;;;40519:399:5:o;1074:3172:36:-;-1:-1:-1;;;3588:3:36;3581:79;;;3799:66;3793:4;3786:80;3941:1;3935:4;3928:15;2210:2;2243:18;;;2336;;;2383;;;2215:4;2379:29;;;3057:2;3053:17;2195:18;;;;2288;;;;2284:29;;;;3040:1;3036:14;3025:26;;;;3021:50;;;;2999:73;;2994:3;2990:83;4008:4;4001:26;4234:3;;4224:14;1415:374:42;1511:1;1496:5;:12;:16;1492:53;;;1528:7;;1492:53;1555:16;1574:5;1580:1;1574:8;;;;;;;;;;;;;;1555:27;;1597:9;1609:1;1597:13;;1592:191;1616:5;:12;1612:1;:16;1592:191;;;1649:15;1667:5;1673:1;1667:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;1689:51:42;-1:-1:-1;;;;;1698:18:42;;;;;;;4890:3:36;1689:8:42;:51::i;:::-;1765:7;-1:-1:-1;1630:3:42;;1592:191;;;;1415:374;;;:::o;4808:172:33:-;4892:7;4918:55;4934:14;2092:2;4918:4;:15;;;;;;:55;;;;;:::i;:::-;4911:62;;4808:172;;;;;:::o;5083:194::-;5178:7;5204:66;5222:18;2155:2;5204:4;:17;;;;;;:66;;;;;:::i;948:166:48:-;1006:7;1025:37;1034:6;;;;4370:1:36;1025:8:48;:37::i;:::-;-1:-1:-1;1084:5:48;;;948:166::o;3094:280:45:-;3209:7;2126:10;3276:17;;3274:20;3258:36;;3287:6;3342:5;:13;;3354:1;3342:13;;;3350:1;3342:13;3334:22;;:32;;3312:55;;3094:280;-1:-1:-1;;;;3094:280:45:o;6887:269::-;-1:-1:-1;7074:18:45;;7072:21;7056:37;;;;7133:15;;7111:38;;6887:269::o;1263:26541:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1263:26541:9;;;-1:-1:-1;1263:26541:9;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;5:134:-1;83:13;;-1:-1;;;;;12124:54;;13267:35;;13257:2;;13316:1;;13306:12;146:128;221:13;;11568;;11561:21;13388:32;;13378:2;;13434:1;;13424:12;769:444;;882:3;875:4;867:6;863:17;859:27;849:2;;-1:-1;;890:12;849:2;924:13;;-1:-1;10139:30;;10136:2;;;-1:-1;;10172:12;10136:2;10313:4;952:65;-1:-1;;10245:9;10226:17;;10222:33;10303:15;;952:65;:::i;:::-;943:74;;1037:6;1030:5;1023:21;1141:3;10313:4;1132:6;1065;1123:16;;1120:25;1117:2;;;1158:1;;1148:12;1117:2;12875:1;12882:101;12896:6;12893:1;12890:13;12882:101;;;12963:11;;;;;12957:18;12944:11;;;;;12937:39;12911:10;;12882:101;;;12998:6;12995:1;12992:13;12989:2;;;12875:1;10313:4;13054:6;1099:5;13045:16;;13038:27;12989:2;;;;842:371;;;;:::o;4433:263::-;;4548:2;4536:9;4527:7;4523:23;4519:32;4516:2;;;-1:-1;;4554:12;4516:2;-1:-1;359:13;;4510:186;-1:-1;4510:186::o;4703:534::-;;;4863:2;4851:9;4842:7;4838:23;4834:32;4831:2;;;-1:-1;;4869:12;4831:2;4914:24;;-1:-1;4947:30;;;4944:2;;;-1:-1;;4980:12;4944:2;5070:22;;;;1385:4;1364:19;;;1360:30;1357:2;;;-1:-1;;1393:12;1357:2;1421:20;1385:4;1421:20;:::i;:::-;1503:17;1497:24;4958:18;1533:6;1530:30;1527:2;;;-1:-1;;1563:12;1527:2;1671:22;;2235:6;2214:19;;;2210:32;-1:-1;2207:2;;;-1:-1;;2245:12;2207:2;2273:22;2235:6;2273:22;:::i;:::-;2264:31;;2378:76;2450:3;2426:22;2378:76;:::i;:::-;2360:16;2353:102;2537:2;2526:9;2522:18;2516:25;4958:18;2553:6;2550:30;2547:2;;;-1:-1;;2583:12;2547:2;2628:70;2694:3;2685:6;2674:9;2670:22;2628:70;:::i;:::-;2537:2;2614:5;2610:16;2603:96;;4863:2;2772:9;2768:18;2762:25;4958:18;2799:6;2796:30;2793:2;;;-1:-1;;2829:12;2793:2;2874:70;2940:3;2931:6;2920:9;2916:22;2874:70;:::i;:::-;4863:2;2860:5;2856:16;2849:96;;3041:76;3113:3;1385:4;3093:9;3089:22;3041:76;:::i;:::-;1385:4;3027:5;3023:16;3016:102;3215:76;3287:3;3181;3267:9;3263:22;3215:76;:::i;:::-;3181:3;3201:5;3197:16;3190:102;3366:3;3436:9;3432:22;4233:13;3366:3;3386:5;3382:16;3375:86;3537:3;3607:9;3603:22;4233:13;3537:3;3557:5;3553:16;3546:86;3709:3;3779:9;3775:22;4233:13;3709:3;3729:5;3725:16;3718:86;3874:3;;;3910:57;3963:3;3874;3943:9;3939:22;3910:57;:::i;:::-;3874:3;3894:5;3890:18;3883:85;4030:3;;;4066:60;4122:3;4030;4102:9;4098:22;4066:60;:::i;:::-;4030:3;4050:5;4046:18;4039:88;1608:91;1590:16;1583:117;;;2537:2;1835:9;1831:22;4233:13;2537:2;1785:5;1781:16;1774:86;4863:2;1994:9;1990:22;4233:13;4863:2;1944:5;1940:16;1933:86;5000:102;;;;;;5157:64;5213:7;2537:2;5193:9;5189:22;5157:64;:::i;:::-;5147:74;;4825:412;;;;;:::o;5244:259::-;;5357:2;5345:9;5336:7;5332:23;5328:32;5325:2;;;-1:-1;;5363:12;5325:2;4378:6;4372:13;12340:4;14093:5;12329:16;14070:5;14067:33;14057:2;;-1:-1;;14104:12;14057:2;5415:72;5319:184;-1:-1;;;5319:184::o;8245:210::-;11568:13;;11561:21;7627:34;;8366:2;8351:18;;8337:118::o;8462:772::-;;8761:2;8750:9;8746:18;7774:5;7751:3;7744:37;8879:2;8761;8879;8868:9;8864:18;8857:48;8919:124;7009:5;10770:12;11348:6;11343:3;11336:19;11376:14;8750:9;11376:14;7021:93;;8879:2;7201:5;10450:14;7213:21;;-1:-1;7240:292;7265:6;7262:1;7259:13;7240:292;;;12452:53;7332:6;7326:13;12452:53;:::i;:::-;7870:66;;11060:14;;;;5878;;;;7287:1;7280:9;7240:292;;;-1:-1;;9081:20;;;9076:2;9061:18;;9054:48;10770:12;;11336:19;;;11376:14;;;;-1:-1;10450:14;;;;-1:-1;6455:260;6480:6;6477:1;6474:13;6455:260;;;11466:24;6547:6;6541:13;11466:24;:::i;:::-;5967:37;;5664:14;;;;11060;;;;7287:1;6495:9;6455:260;;;-1:-1;9108:116;;8732:502;-1:-1;;;;;;;;8732:502::o;9241:266::-;9390:2;9375:18;;13179:1;13169:12;;13159:2;;13185:9;13159:2;8041:72;;;9361:146;:::o;9514:222::-;7744:37;;;9641:2;9626:18;;9612:124::o;9743:256::-;9805:2;9799:9;9831:17;;;9927:22;;;-1:-1;9891:34;;9888:62;9885:2;;;9963:1;;9953:12;9885:2;9805;9972:22;9783:216;;-1:-1;9783:216::o;11404:91::-;-1:-1;;;;;12124:54;;11449:46::o;:::-;1263:26541:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/cpmmv-2/GyroTwoPool.sol", "type": "contract", "deployment": {"address": "0x3E3f680386D280c8Eb637965e275faAB8FEF224D", "chainid": "42", "blockHeight": 32557949}}