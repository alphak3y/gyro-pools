{"abi": [{"inputs": [{"components": [{"components": [{"internalType": "contract IVault", "name": "vault", "type": "address"}, {"internalType": "string", "name": "name", "type": "string"}, {"internalType": "string", "name": "symbol", "type": "string"}, {"internalType": "contract IERC20", "name": "token0", "type": "address"}, {"internalType": "contract IERC20", "name": "token1", "type": "address"}, {"internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}, {"internalType": "uint256", "name": "pauseWindowDuration", "type": "uint256"}, {"internalType": "uint256", "name": "bufferPeriodDuration", "type": "uint256"}, {"internalType": "bool", "name": "oracleEnabled", "type": "bool"}, {"internalType": "address", "name": "owner", "type": "address"}], "internalType": "struct ExtensibleWeightedPool2Tokens.NewPoolParams", "name": "baseParams", "type": "tuple"}, {"internalType": "uint256", "name": "sqrtAlpha", "type": "uint256"}, {"internalType": "uint256", "name": "sqrtBeta", "type": "uint256"}, {"components": [{"internalType": "bool", "name": "capEnabled", "type": "bool"}, {"internalType": "uint120", "name": "perAddressCap", "type": "uint120"}, {"internalType": "uint128", "name": "globalCap", "type": "uint128"}], "internalType": "struct ICappedLiquidity.CapParams", "name": "capParams", "type": "tuple"}], "internalType": "struct GyroTwoPool.GyroParams", "name": "params", "type": "tuple"}, {"internalType": "address", "name": "configAddress", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "owner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "spender", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Approval", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bool", "name": "enabled", "type": "bool"}], "name": "OracleEnabledChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bool", "name": "paused", "type": "bool"}], "name": "PausedStateChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}], "name": "SwapFeePercentageChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "from", "type": "address"}, {"indexed": true, "internalType": "address", "name": "to", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Transfer", "type": "event"}, {"inputs": [], "name": "DOMAIN_SEPARATOR", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "spender", "type": "address"}], "name": "allowance", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "approve", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "balanceOf", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "balanceTokenIn", "type": "uint256"}, {"internalType": "uint256", "name": "balanceTokenOut", "type": "uint256"}, {"internalType": "bool", "name": "tokenInIsToken0", "type": "bool"}], "name": "calculateCurrentValues", "outputs": [{"internalType": "uint256", "name": "currentInvariant", "type": "uint256"}, {"internalType": "uint256", "name": "virtualParamIn", "type": "uint256"}, {"internalType": "uint256", "name": "virtualParamOut", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "capManager", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "capParams", "outputs": [{"components": [{"internalType": "bool", "name": "capEnabled", "type": "bool"}, {"internalType": "uint120", "name": "perAddressCap", "type": "uint120"}, {"internalType": "uint128", "name": "globalCap", "type": "uint128"}], "internalType": "struct ICappedLiquidity.CapParams", "name": "", "type": "tuple"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "decimals", "outputs": [{"internalType": "uint8", "name": "", "type": "uint8"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "decreaseAllowance", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "startIndex", "type": "uint256"}, {"internalType": "uint256", "name": "endIndex", "type": "uint256"}], "name": "dirtyUninitializedOracleSamples", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "enableOracle", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes4", "name": "selector", "type": "bytes4"}], "name": "getActionId", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getAuthorizer", "outputs": [{"internalType": "contract IAuthorizer", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getInvariant", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getLargestSafeQueryWindow", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "pure", "type": "function"}, {"inputs": [], "name": "getLastInvariant", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "enum IPriceOracle.Variable", "name": "variable", "type": "uint8"}], "name": "getLatest", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getMiscData", "outputs": [{"internalType": "int256", "name": "logInvariant", "type": "int256"}, {"internalType": "int256", "name": "logTotalSupply", "type": "int256"}, {"internalType": "uint256", "name": "oracleSampleCreationTimestamp", "type": "uint256"}, {"internalType": "uint256", "name": "oracleIndex", "type": "uint256"}, {"internalType": "bool", "name": "oracleEnabled", "type": "bool"}, {"internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getNormalizedWeights", "outputs": [{"internalType": "uint256[]", "name": "", "type": "uint256[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getOwner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"components": [{"internalType": "enum IPriceOracle.Variable", "name": "variable", "type": "uint8"}, {"internalType": "uint256", "name": "ago", "type": "uint256"}], "internalType": "struct IPriceOracle.OracleAccumulatorQuery[]", "name": "queries", "type": "tuple[]"}], "name": "getPastAccumulators", "outputs": [{"internalType": "int256[]", "name": "results", "type": "int256[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getPausedState", "outputs": [{"internalType": "bool", "name": "paused", "type": "bool"}, {"internalType": "uint256", "name": "pauseWindowEndTime", "type": "uint256"}, {"internalType": "uint256", "name": "bufferPeriodEndTime", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getPoolId", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getRate", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "index", "type": "uint256"}], "name": "getSample", "outputs": [{"internalType": "int256", "name": "logPairPrice", "type": "int256"}, {"internalType": "int256", "name": "accLogPairPrice", "type": "int256"}, {"internalType": "int256", "name": "logBptPrice", "type": "int256"}, {"internalType": "int256", "name": "accLogBptPrice", "type": "int256"}, {"internalType": "int256", "name": "logInvariant", "type": "int256"}, {"internalType": "int256", "name": "accLogInvariant", "type": "int256"}, {"internalType": "uint256", "name": "timestamp", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getSqrtParameters", "outputs": [{"internalType": "uint256[2]", "name": "", "type": "uint256[2]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getSwapFeePercentage", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"components": [{"internalType": "enum IPriceOracle.Variable", "name": "variable", "type": "uint8"}, {"internalType": "uint256", "name": "secs", "type": "uint256"}, {"internalType": "uint256", "name": "ago", "type": "uint256"}], "internalType": "struct IPriceOracle.OracleAverageQuery[]", "name": "queries", "type": "tuple[]"}], "name": "getTimeWeightedAverage", "outputs": [{"internalType": "uint256[]", "name": "results", "type": "uint256[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getTotalSamples", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "pure", "type": "function"}, {"inputs": [], "name": "getVault", "outputs": [{"internalType": "contract IVault", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getVirtualParameters", "outputs": [{"internalType": "uint256[]", "name": "virtualParams", "type": "uint256[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "gyroConfig", "outputs": [{"internalType": "contract IGyroConfig", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "addedValue", "type": "uint256"}], "name": "increaseAllowance", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "name", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}], "name": "nonces", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "onExitPool", "outputs": [{"internalType": "uint256[]", "name": "", "type": "uint256[]"}, {"internalType": "uint256[]", "name": "", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "onJoinPool", "outputs": [{"internalType": "uint256[]", "name": "amountsIn", "type": "uint256[]"}, {"internalType": "uint256[]", "name": "dueProtocolFeeAmounts", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"components": [{"internalType": "enum IVault.SwapKind", "name": "kind", "type": "uint8"}, {"internalType": "contract IERC20", "name": "tokenIn", "type": "address"}, {"internalType": "contract IERC20", "name": "tokenOut", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}, {"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "address", "name": "from", "type": "address"}, {"internalType": "address", "name": "to", "type": "address"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "internalType": "struct IPoolSwapStructs.SwapRequest", "name": "request", "type": "tuple"}, {"internalType": "uint256", "name": "balanceTokenIn", "type": "uint256"}, {"internalType": "uint256", "name": "balanceTokenOut", "type": "uint256"}], "name": "onSwap", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "value", "type": "uint256"}, {"internalType": "uint256", "name": "deadline", "type": "uint256"}, {"internalType": "uint8", "name": "v", "type": "uint8"}, {"internalType": "bytes32", "name": "r", "type": "bytes32"}, {"internalType": "bytes32", "name": "s", "type": "bytes32"}], "name": "permit", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "queryExit", "outputs": [{"internalType": "uint256", "name": "bptIn", "type": "uint256"}, {"internalType": "uint256[]", "name": "amountsOut", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "queryJoin", "outputs": [{"internalType": "uint256", "name": "bptOut", "type": "uint256"}, {"internalType": "uint256[]", "name": "amountsIn", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"components": [{"internalType": "bool", "name": "capEnabled", "type": "bool"}, {"internalType": "uint120", "name": "perAddressCap", "type": "uint120"}, {"internalType": "uint128", "name": "globalCap", "type": "uint128"}], "internalType": "struct ICappedLiquidity.CapParams", "name": "params", "type": "tuple"}], "name": "setCapParams", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bool", "name": "paused", "type": "bool"}], "name": "setPaused", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}], "name": "setSwapFeePercentage", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "symbol", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "totalSupply", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transfer", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transferFrom", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"0": "contracts/CappedLiquidity.sol", "1": "contracts/cpmmv-2/ExtensibleWeightedPool2Tokens.sol", "10": "libraries/GyroConfigKeys.sol", "11": "libraries/GyroPoolMath.sol", "13": "node_modules/@balancer-labs/v2-pool-utils/contracts/BalancerPoolToken.sol", "16": "node_modules/@balancer-labs/v2-pool-utils/contracts/BasePoolAuthorization.sol", "19": "node_modules/@balancer-labs/v2-pool-utils/contracts/interfaces/IPoolPriceOracle.sol", "2": "contracts/cpmmv-2/Gyro2PoolErrors.sol", "20": "node_modules/@balancer-labs/v2-pool-utils/contracts/interfaces/IPriceOracle.sol", "21": "node_modules/@balancer-labs/v2-pool-utils/contracts/oracle/Buffer.sol", "22": "node_modules/@balancer-labs/v2-pool-utils/contracts/oracle/PoolPriceOracle.sol", "23": "node_modules/@balancer-labs/v2-pool-utils/contracts/oracle/QueryProcessor.sol", "24": "node_modules/@balancer-labs/v2-pool-utils/contracts/oracle/Samples.sol", "26": "node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedMath.sol", "28": "node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol", "29": "node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol", "3": "contracts/cpmmv-2/GyroTwoMath.sol", "30": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/Authentication.sol", "31": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol", "34": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol", "35": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/ISignaturesValidator.sol", "36": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol", "37": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/InputHelpers.sol", "38": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/LogCompression.sol", "39": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/TemporarilyPausable.sol", "4": "contracts/cpmmv-2/GyroTwoOracleMath.sol", "40": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/WordCodec.sol", "41": "node_modules/@balancer-labs/v2-solidity-utils/contracts/math/FixedPoint.sol", "42": "node_modules/@balancer-labs/v2-solidity-utils/contracts/math/LogExpMath.sol", "43": "node_modules/@balancer-labs/v2-solidity-utils/contracts/math/Math.sol", "44": "node_modules/@balancer-labs/v2-solidity-utils/contracts/misc/IWETH.sol", "45": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/EIP712.sol", "46": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ERC20.sol", "47": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ERC20Permit.sol", "48": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol", "49": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20Permit.sol", "5": "contracts/cpmmv-2/GyroTwoPool.sol", "50": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/SafeMath.sol", "51": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IAsset.sol", "52": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IAuthorizer.sol", "53": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IBasePool.sol", "54": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IFlashLoanRecipient.sol", "55": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IMinimalSwapInfoPool.sol", "56": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IPoolSwapStructs.sol", "57": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IProtocolFeesCollector.sol", "58": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IVault.sol", "8": "interfaces/ICappedLiquidity.sol", "9": "interfaces/IGyroConfig.sol"}, "ast": {"absolutePath": "contracts/cpmmv-2/GyroTwoPool.sol", "exportedSymbols": {"GyroTwoPool": [1941]}, "id": 1942, "license": "GPL-3.0-or-later", "nodeType": "SourceUnit", "nodes": [{"id": 476, "literals": ["solidity", "^", "0.7", ".0"], "nodeType": "PragmaDirective", "src": "688:23:5"}, {"id": 477, "literals": ["experimental", "ABIEncoderV2"], "nodeType": "PragmaDirective", "src": "712:33:5"}, {"absolutePath": "node_modules/@balancer-labs/v2-solidity-utils/contracts/math/FixedPoint.sol", "file": "@balancer-labs/v2-solidity-utils/contracts/math/FixedPoint.sol", "id": 478, "nodeType": "ImportDirective", "scope": 1942, "sourceUnit": 3563, "src": "747:72:5", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol", "file": "@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol", "id": 479, "nodeType": "ImportDirective", "scope": 1942, "sourceUnit": 6973, "src": "821:83:5", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol", "file": "@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol", "id": 480, "nodeType": "ImportDirective", "scope": 1942, "sourceUnit": 6763, "src": "905:83:5", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/GyroConfigKeys.sol", "file": "../../libraries/GyroConfigKeys.sol", "id": 481, "nodeType": "ImportDirective", "scope": 1942, "sourceUnit": 6548, "src": "990:44:5", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/IGyroConfig.sol", "file": "../../interfaces/IGyroConfig.sol", "id": 482, "nodeType": "ImportDirective", "scope": 1942, "sourceUnit": 6533, "src": "1035:42:5", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/GyroPoolMath.sol", "file": "../../libraries/GyroPoolMath.sol", "id": 483, "nodeType": "ImportDirective", "scope": 1942, "sourceUnit": 3109, "src": "1078:42:5", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/CappedLiquidity.sol", "file": "../CappedLiquidity.sol", "id": 484, "nodeType": "ImportDirective", "scope": 1942, "sourceUnit": 4000, "src": "1122:32:5", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/cpmmv-2/ExtensibleWeightedPool2Tokens.sol", "file": "./ExtensibleWeightedPool2Tokens.sol", "id": 485, "nodeType": "ImportDirective", "scope": 1942, "sourceUnit": 6351, "src": "1155:45:5", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/cpmmv-2/Gyro2PoolErrors.sol", "file": "./Gyro2PoolErrors.sol", "id": 486, "nodeType": "ImportDirective", "scope": 1942, "sourceUnit": 2318, "src": "1201:31:5", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/cpmmv-2/GyroTwoMath.sol", "file": "./GyroTwoMath.sol", "id": 487, "nodeType": "ImportDirective", "scope": 1942, "sourceUnit": 475, "src": "1233:27:5", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/cpmmv-2/GyroTwoOracleMath.sol", "file": "./GyroTwoOracleMath.sol", "id": 488, "nodeType": "ImportDirective", "scope": 1942, "sourceUnit": 6473, "src": "1261:33:5", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 489, "name": "ExtensibleWeightedPool2Tokens", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 6350, "src": "1320:29:5", "typeDescriptions": {"typeIdentifier": "t_contract$_ExtensibleWeightedPool2Tokens_$6350", "typeString": "contract ExtensibleWeightedPool2Tokens"}}, "id": 490, "nodeType": "InheritanceSpecifier", "src": "1320:29:5"}, {"baseName": {"id": 491, "name": "GyroTwoOracleMath", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 6472, "src": "1351:17:5", "typeDescriptions": {"typeIdentifier": "t_contract$_GyroTwoOracleMath_$6472", "typeString": "contract GyroTwoOracleMath"}}, "id": 492, "nodeType": "InheritanceSpecifier", "src": "1351:17:5"}, {"baseName": {"id": 493, "name": "CappedLiquidity", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 3999, "src": "1370:15:5", "typeDescriptions": {"typeIdentifier": "t_contract$_CappedLiquidity_$3999", "typeString": "contract CappedLiquidity"}}, "id": 494, "nodeType": "InheritanceSpecifier", "src": "1370:15:5"}], "contractDependencies": [3999, 6350, 6472, 6998, 8107, 9416, 9628, 10901, 11366, 12783, 13261, 13280, 15606, 15877, 16023, 16100, 16129, 16184, 17508, 17544, 17569], "contractKind": "contract", "fullyImplemented": true, "id": 1941, "linearizedBaseContracts": [1941, 3999, 6998, 6472, 6350, 11366, 16184, 16129, 12783, 15606, 9628, 15877, 17508, 17544, 13261, 8107, 10901, 16100, 9416, 13280, 16023, 17569], "name": "GyroTwoPool", "nodeType": "ContractDefinition", "nodes": [{"id": 497, "libraryName": {"id": 495, "name": "FixedPoint", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 3562, "src": "1398:10:5", "typeDescriptions": {"typeIdentifier": "t_contract$_FixedPoint_$3562", "typeString": "library FixedPoint"}}, "nodeType": "UsingForDirective", "src": "1392:29:5", "typeName": {"id": 496, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1413:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"id": 500, "libraryName": {"id": 498, "name": "WeightedPoolUserDataHelpers", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 6972, "src": "1432:27:5", "typeDescriptions": {"typeIdentifier": "t_contract$_WeightedPoolUserDataHelpers_$6972", "typeString": "library WeightedPoolUserDataHelpers"}}, "nodeType": "UsingForDirective", "src": "1426:44:5", "typeName": {"id": 499, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "1464:5:5", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}}, {"id": 503, "libraryName": {"id": 501, "name": "WeightedPool2TokensMiscData", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 6762, "src": "1481:27:5", "typeDescriptions": {"typeIdentifier": "t_contract$_WeightedPool2TokensMiscData_$6762", "typeString": "library WeightedPool2TokensMiscData"}}, "nodeType": "UsingForDirective", "src": "1475:46:5", "typeName": {"id": 502, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1513:7:5", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}}, {"constant": false, "id": 505, "mutability": "immutable", "name": "_sqrtAlpha", "nodeType": "VariableDeclaration", "scope": 1941, "src": "1527:36:5", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 504, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1527:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "private"}, {"constant": false, "id": 507, "mutability": "immutable", "name": "_sqrtBeta", "nodeType": "VariableDeclaration", "scope": 1941, "src": "1569:35:5", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 506, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1569:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "private"}, {"constant": false, "functionSelector": "44bbdb55", "id": 509, "mutability": "mutable", "name": "gyroConfig", "nodeType": "VariableDeclaration", "scope": 1941, "src": "1611:29:5", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$6532", "typeString": "contract IGyroConfig"}, "typeName": {"id": 508, "name": "IGyroConfig", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 6532, "src": "1611:11:5", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$6532", "typeString": "contract IGyroConfig"}}, "visibility": "public"}, {"canonicalName": "GyroTwoPool.GyroParams", "id": 518, "members": [{"constant": false, "id": 511, "mutability": "mutable", "name": "baseParams", "nodeType": "VariableDeclaration", "scope": 518, "src": "1675:24:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$4125_storage_ptr", "typeString": "struct ExtensibleWeightedPool2Tokens.NewPoolParams"}, "typeName": {"id": 510, "name": "NewPoolParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 4125, "src": "1675:13:5", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$4125_storage_ptr", "typeString": "struct ExtensibleWeightedPool2Tokens.NewPoolParams"}}, "visibility": "internal"}, {"constant": false, "id": 513, "mutability": "mutable", "name": "sqrtAlpha", "nodeType": "VariableDeclaration", "scope": 518, "src": "1709:17:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 512, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1709:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 515, "mutability": "mutable", "name": "sqrtBeta", "nodeType": "VariableDeclaration", "scope": 518, "src": "1769:16:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 514, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1769:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 517, "mutability": "mutable", "name": "capParams", "nodeType": "VariableDeclaration", "scope": 518, "src": "1862:19:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_CapParams_$6982_storage_ptr", "typeString": "struct ICappedLiquidity.CapParams"}, "typeName": {"id": 516, "name": "CapParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 6982, "src": "1862:9:5", "typeDescriptions": {"typeIdentifier": "t_struct$_CapParams_$6982_storage_ptr", "typeString": "struct ICappedLiquidity.CapParams"}}, "visibility": "internal"}], "name": "GyroParams", "nodeType": "StructDefinition", "scope": 1941, "src": "1647:241:5", "visibility": "public"}, {"body": {"id": 559, "nodeType": "Block", "src": "2038:222:5", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 538, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 534, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 520, "src": "2057:6:5", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$518_memory_ptr", "typeString": "struct GyroTwoPool.GyroParams memory"}}, "id": 535, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "sqrtAlpha", "nodeType": "MemberAccess", "referencedDeclaration": 513, "src": "2057:16:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 536, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 520, "src": "2076:6:5", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$518_memory_ptr", "typeString": "struct GyroTwoPool.GyroParams memory"}}, "id": 537, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "sqrtBeta", "nodeType": "MemberAccess", "referencedDeclaration": 515, "src": "2076:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2057:34:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 539, "name": "Gyro2PoolErrors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2317, "src": "2093:15:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2PoolErrors_$2317_$", "typeString": "type(library Gyro2PoolErrors)"}}, "id": 540, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "SQRT_PARAMS_WRONG", "nodeType": "MemberAccess", "referencedDeclaration": 2313, "src": "2093:33:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 533, "name": "_require", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7624, "src": "2048:8:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 541, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2048:79:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 542, "nodeType": "ExpressionStatement", "src": "2048:79:5"}, {"expression": {"id": 546, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 543, "name": "_sqrtAlpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 505, "src": "2137:10:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 544, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 520, "src": "2150:6:5", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$518_memory_ptr", "typeString": "struct GyroTwoPool.GyroParams memory"}}, "id": 545, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "sqrtAlpha", "nodeType": "MemberAccess", "referencedDeclaration": 513, "src": "2150:16:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2137:29:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 547, "nodeType": "ExpressionStatement", "src": "2137:29:5"}, {"expression": {"id": 551, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 548, "name": "_sqrtBeta", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 507, "src": "2176:9:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 549, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 520, "src": "2188:6:5", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$518_memory_ptr", "typeString": "struct GyroTwoPool.GyroParams memory"}}, "id": 550, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "sqrtBeta", "nodeType": "MemberAccess", "referencedDeclaration": 515, "src": "2188:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2176:27:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 552, "nodeType": "ExpressionStatement", "src": "2176:27:5"}, {"expression": {"id": 557, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 553, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 509, "src": "2214:10:5", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$6532", "typeString": "contract IGyroConfig"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 555, "name": "configAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 522, "src": "2239:13:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 554, "name": "IGyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6532, "src": "2227:11:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IGyroConfig_$6532_$", "typeString": "type(contract IGyroConfig)"}}, "id": 556, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2227:26:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$6532", "typeString": "contract IGyroConfig"}}, "src": "2214:39:5", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$6532", "typeString": "contract IGyroConfig"}}, "id": 558, "nodeType": "ExpressionStatement", "src": "2214:39:5"}]}, "id": 560, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"expression": {"id": 525, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 520, "src": "1985:6:5", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$518_memory_ptr", "typeString": "struct GyroTwoPool.GyroParams memory"}}, "id": 526, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "baseParams", "nodeType": "MemberAccess", "referencedDeclaration": 511, "src": "1985:17:5", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$4125_memory_ptr", "typeString": "struct ExtensibleWeightedPool2Tokens.NewPoolParams memory"}}], "id": 527, "modifierName": {"id": 524, "name": "ExtensibleWeightedPool2Tokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6350, "src": "1955:29:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ExtensibleWeightedPool2Tokens_$6350_$", "typeString": "type(contract ExtensibleWeightedPool2Tokens)"}}, "nodeType": "ModifierInvocation", "src": "1955:48:5"}, {"arguments": [{"expression": {"id": 529, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 520, "src": "2020:6:5", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$518_memory_ptr", "typeString": "struct GyroTwoPool.GyroParams memory"}}, "id": 530, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "capParams", "nodeType": "MemberAccess", "referencedDeclaration": 517, "src": "2020:16:5", "typeDescriptions": {"typeIdentifier": "t_struct$_CapParams_$6982_memory_ptr", "typeString": "struct ICappedLiquidity.CapParams memory"}}], "id": 531, "modifierName": {"id": 528, "name": "CappedLiquidity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3999, "src": "2004:15:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_CappedLiquidity_$3999_$", "typeString": "type(contract CappedLiquidity)"}}, "nodeType": "ModifierInvocation", "src": "2004:33:5"}], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 523, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 520, "mutability": "mutable", "name": "params", "nodeType": "VariableDeclaration", "scope": 560, "src": "1906:24:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$518_memory_ptr", "typeString": "struct GyroTwoPool.GyroParams"}, "typeName": {"id": 519, "name": "GyroParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 518, "src": "1906:10:5", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$518_storage_ptr", "typeString": "struct GyroTwoPool.GyroParams"}}, "visibility": "internal"}, {"constant": false, "id": 522, "mutability": "mutable", "name": "configAddress", "nodeType": "VariableDeclaration", "scope": 560, "src": "1932:21:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 521, "name": "address", "nodeType": "ElementaryTypeName", "src": "1932:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1905:49:5"}, "returnParameters": {"id": 532, "nodeType": "ParameterList", "parameters": [], "src": "2038:0:5"}, "scope": 1941, "src": "1894:366:5", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 570, "nodeType": "Block", "src": "2443:41:5", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 567, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [597, 610], "referencedDeclaration": 597, "src": "2460:15:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function () view returns (uint256[2] memory)"}}, "id": 568, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2460:17:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "functionReturnParameters": 566, "id": 569, "nodeType": "Return", "src": "2453:24:5"}]}, "functionSelector": "707dcd1e", "id": 571, "implemented": true, "kind": "function", "modifiers": [], "name": "getSqrtParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 561, "nodeType": "ParameterList", "parameters": [], "src": "2398:2:5"}, "returnParameters": {"id": 566, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 565, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 571, "src": "2424:17:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 562, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2424:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 564, "length": {"hexValue": "32", "id": 563, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2432:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "2424:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "src": "2423:19:5"}, "scope": 1941, "src": "2372:112:5", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 596, "nodeType": "Block", "src": "2585:150:5", "statements": [{"expression": {"id": 584, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 578, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 576, "src": "2595:17:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 580, "indexExpression": {"hexValue": "30", "id": 579, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2613:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "2595:20:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "74727565", "id": 582, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "2634:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 581, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [597, 610], "referencedDeclaration": 610, "src": "2618:15:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 583, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2618:21:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2595:44:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 585, "nodeType": "ExpressionStatement", "src": "2595:44:5"}, {"expression": {"id": 592, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 586, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 576, "src": "2649:17:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 588, "indexExpression": {"hexValue": "31", "id": 587, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2667:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "2649:20:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "66616c7365", "id": 590, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "2688:5:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 589, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [597, 610], "referencedDeclaration": 610, "src": "2672:15:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 591, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2672:22:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2649:45:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 593, "nodeType": "ExpressionStatement", "src": "2649:45:5"}, {"expression": {"id": 594, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 576, "src": "2711:17:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "functionReturnParameters": 577, "id": 595, "nodeType": "Return", "src": "2704:24:5"}]}, "id": 597, "implemented": true, "kind": "function", "modifiers": [], "name": "_sqrtParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 572, "nodeType": "ParameterList", "parameters": [], "src": "2514:2:5"}, "returnParameters": {"id": 577, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 576, "mutability": "mutable", "name": "virtualParameters", "nodeType": "VariableDeclaration", "scope": 597, "src": "2548:35:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 573, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2548:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 575, "length": {"hexValue": "32", "id": 574, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2556:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "2548:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "src": "2547:37:5"}, "scope": 1941, "src": "2490:245:5", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"body": {"id": 609, "nodeType": "Block", "src": "2823:59:5", "statements": [{"expression": {"condition": {"id": 604, "name": "parameter0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 599, "src": "2840:10:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 606, "name": "_sqrtBeta", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 507, "src": "2866:9:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 607, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "2840:35:5", "trueExpression": {"id": 605, "name": "_sqrtAlpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 505, "src": "2853:10:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 603, "id": 608, "nodeType": "Return", "src": "2833:42:5"}]}, "id": 610, "implemented": true, "kind": "function", "modifiers": [], "name": "_sqrtParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 600, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 599, "mutability": "mutable", "name": "parameter0", "nodeType": "VariableDeclaration", "scope": 610, "src": "2766:15:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 598, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2766:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "2765:17:5"}, "returnParameters": {"id": 603, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 602, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 610, "src": "2814:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 601, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2814:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2813:9:5"}, "scope": 1941, "src": "2741:141:5", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"body": {"id": 651, "nodeType": "Block", "src": "3077:347:5", "statements": [{"assignments": [null, 621, null], "declarations": [null, {"constant": false, "id": 621, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 651, "src": "3090:25:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 619, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3090:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 620, "nodeType": "ArrayTypeName", "src": "3090:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, null], "id": 628, "initialValue": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 625, "name": "getPoolId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4260, "src": "3146:9:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$", "typeString": "function () view returns (bytes32)"}}, "id": 626, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3146:11:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 622, "name": "getVault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9457, "src": "3121:8:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IVault_$7606_$", "typeString": "function () view returns (contract IVault)"}}, "id": 623, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3121:10:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IVault_$7606", "typeString": "contract IVault"}}, "id": 624, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getPoolTokens", "nodeType": "MemberAccess", "referencedDeclaration": 7362, "src": "3121:24:5", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_array$_t_contract$_IERC20_$8107_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$", "typeString": "function (bytes32) view external returns (contract IERC20[] memory,uint256[] memory,uint256)"}}, "id": 627, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3121:37:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_array$_t_contract$_IERC20_$8107_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$", "typeString": "tuple(contract IERC20[] memory,uint256[] memory,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "3087:71:5"}, {"expression": {"arguments": [{"id": 630, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 621, "src": "3302:8:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}], "id": 629, "name": "_upscaleArray", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6132, "src": "3288:13:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$", "typeString": "function (uint256[] memory) view"}}, "id": 631, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3288:23:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 632, "nodeType": "ExpressionStatement", "src": "3288:23:5"}, {"expression": {"id": 649, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [null, {"baseExpression": {"id": 633, "name": "virtualParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 615, "src": "3324:13:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 635, "indexExpression": {"hexValue": "30", "id": 634, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3338:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "3324:16:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 636, "name": "virtualParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 615, "src": "3342:13:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 638, "indexExpression": {"hexValue": "31", "id": 637, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3356:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "3342:16:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 639, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "3321:38:5", "typeDescriptions": {"typeIdentifier": "t_tuple$__$_t_uint256_$_t_uint256_$", "typeString": "tuple(,uint256,uint256)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"baseExpression": {"id": 641, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 621, "src": "3386:8:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 643, "indexExpression": {"hexValue": "30", "id": 642, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3395:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3386:11:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 644, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 621, "src": "3399:8:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 646, "indexExpression": {"hexValue": "31", "id": 645, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3408:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3399:11:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "74727565", "id": 647, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3412:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 640, "name": "_calculateCurrentValues", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1133, "src": "3362:23:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256,bool) view returns (uint256,uint256,uint256)"}}, "id": 648, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3362:55:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256,uint256)"}}, "src": "3321:96:5", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 650, "nodeType": "ExpressionStatement", "src": "3321:96:5"}]}, "documentation": {"id": 611, "nodeType": "StructuredDocumentation", "src": "2888:97:5", "text": "@dev Returns virtual offsets a and b for reserves x and y respectively, as in (x+a)*(y+b)=L^2"}, "functionSelector": "8dd9f89d", "id": 652, "implemented": true, "kind": "function", "modifiers": [], "name": "getVirtualParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 612, "nodeType": "ParameterList", "parameters": [], "src": "3019:2:5"}, "returnParameters": {"id": 616, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 615, "mutability": "mutable", "name": "virtualParams", "nodeType": "VariableDeclaration", "scope": 652, "src": "3045:30:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 613, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3045:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 614, "nodeType": "ArrayTypeName", "src": "3045:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "3044:32:5"}, "scope": 1941, "src": "2990:434:5", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 691, "nodeType": "Block", "src": "3614:208:5", "statements": [{"expression": {"id": 675, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 665, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 663, "src": "3624:17:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 667, "indexExpression": {"hexValue": "30", "id": 666, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3642:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "3624:20:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "74727565", "id": 669, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3666:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, {"baseExpression": {"id": 670, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 656, "src": "3672:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 672, "indexExpression": {"hexValue": "31", "id": 671, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3683:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3672:13:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 673, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 658, "src": "3687:9:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 668, "name": "_virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 719, "src": "3647:18:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (bool,uint256,uint256) view returns (uint256)"}}, "id": 674, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3647:50:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3624:73:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 676, "nodeType": "ExpressionStatement", "src": "3624:73:5"}, {"expression": {"id": 687, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 677, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 663, "src": "3707:17:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 679, "indexExpression": {"hexValue": "31", "id": 678, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3725:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "3707:20:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "66616c7365", "id": 681, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3749:5:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, {"baseExpression": {"id": 682, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 656, "src": "3756:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 684, "indexExpression": {"hexValue": "30", "id": 683, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3767:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3756:13:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 685, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 658, "src": "3771:9:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 680, "name": "_virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 719, "src": "3730:18:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (bool,uint256,uint256) view returns (uint256)"}}, "id": 686, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3730:51:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3707:74:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 688, "nodeType": "ExpressionStatement", "src": "3707:74:5"}, {"expression": {"id": 689, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 663, "src": "3798:17:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "functionReturnParameters": 664, "id": 690, "nodeType": "Return", "src": "3791:24:5"}]}, "id": 692, "implemented": true, "kind": "function", "modifiers": [], "name": "_getVirtualParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 659, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 656, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 692, "src": "3461:28:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 653, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3461:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 655, "length": {"hexValue": "32", "id": 654, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3469:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "3461:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}, {"constant": false, "id": 658, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 692, "src": "3491:17:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 657, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3491:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3460:49:5"}, "returnParameters": {"id": 664, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 663, "mutability": "mutable", "name": "virtualParameters", "nodeType": "VariableDeclaration", "scope": 692, "src": "3573:35:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 660, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3573:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 662, "length": {"hexValue": "32", "id": 661, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3581:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "3573:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "src": "3572:37:5"}, "scope": 1941, "src": "3430:392:5", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"body": {"id": 718, "nodeType": "Block", "src": "3981:210:5", "statements": [{"expression": {"condition": {"id": 703, "name": "parameter0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 694, "src": "4010:10:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"components": [{"arguments": [{"id": 712, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 698, "src": "4162:9:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 713, "name": "sqrtParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 696, "src": "4173:9:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 710, "name": "GyroTwoMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 474, "src": "4122:11:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroTwoMath_$474_$", "typeString": "type(library GyroTwoMath)"}}, "id": 711, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateVirtualParameter1", "nodeType": "MemberAccess", "referencedDeclaration": 473, "src": "4122:39:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 714, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4122:61:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 715, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4121:63:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 716, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "4010:174:5", "trueExpression": {"components": [{"arguments": [{"id": 706, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 698, "src": "4080:9:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 707, "name": "sqrtParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 696, "src": "4091:9:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 704, "name": "GyroTwoMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 474, "src": "4040:11:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroTwoMath_$474_$", "typeString": "type(library GyroTwoMath)"}}, "id": 705, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateVirtualParameter0", "nodeType": "MemberAccess", "referencedDeclaration": 457, "src": "4040:39:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 708, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4040:61:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 709, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4039:63:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 702, "id": 717, "nodeType": "Return", "src": "3991:193:5"}]}, "id": 719, "implemented": true, "kind": "function", "modifiers": [], "name": "_virtualParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 699, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 694, "mutability": "mutable", "name": "parameter0", "nodeType": "VariableDeclaration", "scope": 719, "src": "3865:15:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 693, "name": "bool", "nodeType": "ElementaryTypeName", "src": "3865:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 696, "mutability": "mutable", "name": "sqrtParam", "nodeType": "VariableDeclaration", "scope": 719, "src": "3890:17:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 695, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3890:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 698, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 719, "src": "3917:17:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 697, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3917:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3855:85:5"}, "returnParameters": {"id": 702, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 701, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 719, "src": "3972:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 700, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3972:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3971:9:5"}, "scope": 1941, "src": "3828:363:5", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"baseFunctions": [4555], "body": {"id": 762, "nodeType": "Block", "src": "4332:389:5", "statements": [{"assignments": [null, 730, null], "declarations": [null, {"constant": false, "id": 730, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 762, "src": "4345:25:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 728, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4345:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 729, "nodeType": "ArrayTypeName", "src": "4345:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, null], "id": 737, "initialValue": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 734, "name": "getPoolId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4260, "src": "4401:9:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$", "typeString": "function () view returns (bytes32)"}}, "id": 735, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4401:11:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 731, "name": "getVault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9457, "src": "4376:8:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IVault_$7606_$", "typeString": "function () view returns (contract IVault)"}}, "id": 732, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4376:10:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IVault_$7606", "typeString": "contract IVault"}}, "id": 733, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getPoolTokens", "nodeType": "MemberAccess", "referencedDeclaration": 7362, "src": "4376:24:5", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_array$_t_contract$_IERC20_$8107_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$", "typeString": "function (bytes32) view external returns (contract IERC20[] memory,uint256[] memory,uint256)"}}, "id": 736, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4376:37:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_array$_t_contract$_IERC20_$8107_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$", "typeString": "tuple(contract IERC20[] memory,uint256[] memory,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "4342:71:5"}, {"assignments": [743], "declarations": [{"constant": false, "id": 743, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 762, "src": "4423:28:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 741, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4423:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 742, "length": {"hexValue": "32", "id": 740, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4431:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "4423:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 746, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 744, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [597, 610], "referencedDeclaration": 597, "src": "4454:15:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function () view returns (uint256[2] memory)"}}, "id": 745, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4454:17:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "4423:48:5"}, {"expression": {"arguments": [{"id": 748, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 730, "src": "4616:8:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}], "id": 747, "name": "_upscaleArray", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6132, "src": "4602:13:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$", "typeString": "function (uint256[] memory) view"}}, "id": 749, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4602:23:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 750, "nodeType": "ExpressionStatement", "src": "4602:23:5"}, {"expression": {"arguments": [{"id": 753, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 730, "src": "4675:8:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"baseExpression": {"id": 754, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 743, "src": "4685:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 756, "indexExpression": {"hexValue": "30", "id": 755, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4696:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4685:13:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 757, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 743, "src": "4700:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 759, "indexExpression": {"hexValue": "31", "id": 758, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4711:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4700:13:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 751, "name": "GyroTwoMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 474, "src": "4643:11:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroTwoMath_$474_$", "typeString": "type(library GyroTwoMath)"}}, "id": 752, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 61, "src": "4643:31:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256)"}}, "id": 760, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4643:71:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 725, "id": 761, "nodeType": "Return", "src": "4636:78:5"}]}, "documentation": {"id": 720, "nodeType": "StructuredDocumentation", "src": "4197:67:5", "text": " @dev Returns the current value of the invariant."}, "functionSelector": "c0ff1a15", "id": 763, "implemented": true, "kind": "function", "modifiers": [], "name": "getInvariant", "nodeType": "FunctionDefinition", "overrides": {"id": 722, "nodeType": "OverrideSpecifier", "overrides": [], "src": "4305:8:5"}, "parameters": {"id": 721, "nodeType": "ParameterList", "parameters": [], "src": "4290:2:5"}, "returnParameters": {"id": 725, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 724, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 763, "src": "4323:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 723, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4323:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4322:9:5"}, "scope": 1941, "src": "4269:452:5", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"baseFunctions": [4715], "body": {"id": 929, "nodeType": "Block", "src": "4951:2506:5", "statements": [{"assignments": [782], "declarations": [{"constant": false, "id": 782, "mutability": "mutable", "name": "tokenInIsToken0", "nodeType": "VariableDeclaration", "scope": 929, "src": "4961:20:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 781, "name": "bool", "nodeType": "ElementaryTypeName", "src": "4961:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "id": 787, "initialValue": {"commonType": {"typeIdentifier": "t_contract$_IERC20_$8107", "typeString": "contract IERC20"}, "id": 786, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 783, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 765, "src": "4984:7:5", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$17568_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 784, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenIn", "nodeType": "MemberAccess", "referencedDeclaration": 17553, "src": "4984:15:5", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$8107", "typeString": "contract IERC20"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 785, "name": "_token0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4053, "src": "5003:7:5", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$8107", "typeString": "contract IERC20"}}, "src": "4984:26:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "VariableDeclarationStatement", "src": "4961:49:5"}, {"assignments": [789], "declarations": [{"constant": false, "id": 789, "mutability": "mutable", "name": "scalingFactorTokenIn", "nodeType": "VariableDeclaration", "scope": 929, "src": "5021:28:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 788, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5021:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 793, "initialValue": {"arguments": [{"id": 791, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 782, "src": "5067:15:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 790, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6079, "src": "5052:14:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 792, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5052:31:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "5021:62:5"}, {"assignments": [795], "declarations": [{"constant": false, "id": 795, "mutability": "mutable", "name": "scalingFactorTokenOut", "nodeType": "VariableDeclaration", "scope": 929, "src": "5093:29:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 794, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5093:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 800, "initialValue": {"arguments": [{"id": 798, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "5140:16:5", "subExpression": {"id": 797, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 782, "src": "5141:15:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 796, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6079, "src": "5125:14:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 799, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5125:32:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "5093:64:5"}, {"expression": {"id": 806, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 801, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 767, "src": "5211:14:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 803, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 767, "src": "5237:14:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 804, "name": "scalingFactorTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 789, "src": "5253:20:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 802, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6096, "src": "5228:8:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 805, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5228:46:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5211:63:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 807, "nodeType": "ExpressionStatement", "src": "5211:63:5"}, {"expression": {"id": 813, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 808, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 769, "src": "5284:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 810, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 769, "src": "5311:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 811, "name": "scalingFactorTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 795, "src": "5328:21:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 809, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6096, "src": "5302:8:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 812, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5302:48:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5284:66:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 814, "nodeType": "ExpressionStatement", "src": "5284:66:5"}, {"assignments": [816, 818, 820], "declarations": [{"constant": false, "id": 816, "mutability": "mutable", "name": "currentInvariant", "nodeType": "VariableDeclaration", "scope": 929, "src": "5440:24:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 815, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5440:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 818, "mutability": "mutable", "name": "virtualParamIn", "nodeType": "VariableDeclaration", "scope": 929, "src": "5466:22:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 817, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5466:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 820, "mutability": "mutable", "name": "virtualParamOut", "nodeType": "VariableDeclaration", "scope": 929, "src": "5490:23:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 819, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5490:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 826, "initialValue": {"arguments": [{"id": 822, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 767, "src": "5554:14:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 823, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 769, "src": "5582:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 824, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 782, "src": "5611:15:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 821, "name": "_calculateCurrentValues", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1133, "src": "5517:23:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256,bool) view returns (uint256,uint256,uint256)"}}, "id": 825, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5517:119:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "5439:197:5"}, {"expression": {"arguments": [{"expression": {"id": 828, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 765, "src": "5732:7:5", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$17568_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 829, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "lastChangeBlock", "nodeType": "MemberAccess", "referencedDeclaration": 17561, "src": "5732:23:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"condition": {"id": 830, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 782, "src": "5769:15:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 832, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 769, "src": "5804:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 833, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "5769:50:5", "trueExpression": {"id": 831, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 767, "src": "5787:14:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"condition": {"id": 834, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 782, "src": "5833:15:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 836, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 767, "src": "5869:14:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 837, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "5833:50:5", "trueExpression": {"id": 835, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 769, "src": "5851:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"condition": {"id": 838, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 782, "src": "5897:15:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 840, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 820, "src": "5932:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 841, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "5897:50:5", "trueExpression": {"id": 839, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 818, "src": "5915:14:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"condition": {"id": 842, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 782, "src": "5961:15:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 844, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 818, "src": "5997:14:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 845, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "5961:50:5", "trueExpression": {"id": 843, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 820, "src": "5979:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 827, "name": "_updateOracle", "nodeType": "Identifier", "overloadedDeclarations": [1928, 1940], "referencedDeclaration": 1928, "src": "5705:13:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256,uint256,uint256,uint256)"}}, "id": 846, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5705:316:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 847, "nodeType": "ExpressionStatement", "src": "5705:316:5"}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_SwapKind_$7430", "typeString": "enum IVault.SwapKind"}, "id": 853, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 848, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 765, "src": "6036:7:5", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$17568_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 849, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kind", "nodeType": "MemberAccess", "referencedDeclaration": 17551, "src": "6036:12:5", "typeDescriptions": {"typeIdentifier": "t_enum$_SwapKind_$7430", "typeString": "enum IVault.SwapKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 850, "name": "IVault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7606, "src": "6052:6:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IVault_$7606_$", "typeString": "type(contract IVault)"}}, "id": 851, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "SwapKind", "nodeType": "MemberAccess", "referencedDeclaration": 7430, "src": "6052:15:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_SwapKind_$7430_$", "typeString": "type(enum IVault.SwapKind)"}}, "id": 852, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "GIVEN_IN", "nodeType": "MemberAccess", "src": "6052:24:5", "typeDescriptions": {"typeIdentifier": "t_enum$_SwapKind_$7430", "typeString": "enum IVault.SwapKind"}}, "src": "6036:40:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 927, "nodeType": "Block", "src": "6820:631:5", "statements": [{"expression": {"id": 900, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 892, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 765, "src": "6834:7:5", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$17568_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 894, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 17557, "src": "6834:14:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 896, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 765, "src": "6860:7:5", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$17568_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 897, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 17557, "src": "6860:14:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 898, "name": "scalingFactorTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 795, "src": "6876:21:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 895, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6096, "src": "6851:8:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 899, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6851:47:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6834:64:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 901, "nodeType": "ExpressionStatement", "src": "6834:64:5"}, {"assignments": [903], "declarations": [{"constant": false, "id": 903, "mutability": "mutable", "name": "amountIn", "nodeType": "VariableDeclaration", "scope": 927, "src": "6913:16:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 902, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6913:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 911, "initialValue": {"arguments": [{"id": 905, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 765, "src": "6948:7:5", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$17568_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, {"id": 906, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 767, "src": "6957:14:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 907, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 769, "src": "6973:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 908, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 818, "src": "6990:14:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 909, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 820, "src": "7006:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_SwapRequest_$17568_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 904, "name": "_onSwapGivenOut", "nodeType": "Identifier", "overloadedDeclarations": [984], "referencedDeclaration": 984, "src": "6932:15:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_SwapRequest_$17568_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (struct IPoolSwapStructs.SwapRequest memory,uint256,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 910, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6932:90:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6913:109:5"}, {"expression": {"id": 917, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 912, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 903, "src": "7107:8:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 914, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 903, "src": "7131:8:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 915, "name": "scalingFactorTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 789, "src": "7141:20:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 913, "name": "_downscaleUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6202, "src": "7118:12:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 916, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7118:44:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7107:55:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 918, "nodeType": "ExpressionStatement", "src": "7107:55:5"}, {"expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 921, "name": "getSwapFeePercentage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4326, "src": "7404:20:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 922, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7404:22:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 923, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "complement", "nodeType": "MemberAccess", "referencedDeclaration": 3561, "src": "7404:33:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256) pure returns (uint256)"}}, "id": 924, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7404:35:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 919, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 903, "src": "7389:8:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 920, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "divUp", "nodeType": "MemberAccess", "referencedDeclaration": 3465, "src": "7389:14:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 925, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7389:51:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 780, "id": 926, "nodeType": "Return", "src": "7382:58:5"}]}, "id": 928, "nodeType": "IfStatement", "src": "6032:1419:5", "trueBody": {"id": 891, "nodeType": "Block", "src": "6078:736:5", "statements": [{"assignments": [855], "declarations": [{"constant": false, "id": 855, "mutability": "mutable", "name": "feeAmount", "nodeType": "VariableDeclaration", "scope": 891, "src": "6295:17:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 854, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6295:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 862, "initialValue": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 859, "name": "getSwapFeePercentage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4326, "src": "6336:20:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 860, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6336:22:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"id": 856, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 765, "src": "6315:7:5", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$17568_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 857, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 17557, "src": "6315:14:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 858, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mulUp", "nodeType": "MemberAccess", "referencedDeclaration": 3367, "src": "6315:20:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 861, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6315:44:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6295:64:5"}, {"expression": {"id": 874, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 863, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 765, "src": "6459:7:5", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$17568_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 865, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 17557, "src": "6459:14:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [{"id": 870, "name": "feeAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 855, "src": "6504:9:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"id": 867, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 765, "src": "6485:7:5", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$17568_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 868, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 17557, "src": "6485:14:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 869, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 3285, "src": "6485:18:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 871, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6485:29:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 872, "name": "scalingFactorTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 789, "src": "6516:20:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 866, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6096, "src": "6476:8:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 873, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6476:61:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6459:78:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 875, "nodeType": "ExpressionStatement", "src": "6459:78:5"}, {"assignments": [877], "declarations": [{"constant": false, "id": 877, "mutability": "mutable", "name": "amountOut", "nodeType": "VariableDeclaration", "scope": 891, "src": "6552:17:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 876, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6552:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 885, "initialValue": {"arguments": [{"id": 879, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 765, "src": "6587:7:5", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$17568_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, {"id": 880, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 767, "src": "6596:14:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 881, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 769, "src": "6612:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 882, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 818, "src": "6629:14:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 883, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 820, "src": "6645:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_SwapRequest_$17568_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 878, "name": "_onSwapGivenIn", "nodeType": "Identifier", "overloadedDeclarations": [957], "referencedDeclaration": 957, "src": "6572:14:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_SwapRequest_$17568_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (struct IPoolSwapStructs.SwapRequest memory,uint256,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 884, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6572:89:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6552:109:5"}, {"expression": {"arguments": [{"id": 887, "name": "amountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 877, "src": "6770:9:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 888, "name": "scalingFactorTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 795, "src": "6781:21:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 886, "name": "_downscaleDown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6149, "src": "6755:14:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 889, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6755:48:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 780, "id": 890, "nodeType": "Return", "src": "6748:55:5"}]}}]}, "functionSelector": "9d2c110c", "id": 930, "implemented": true, "kind": "function", "modifiers": [{"id": 773, "modifierName": {"id": 772, "name": "whenNotPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12671, "src": "4893:13:5", "typeDescriptions": {"typeIdentifier": "t_modifier$__$", "typeString": "modifier ()"}}, "nodeType": "ModifierInvocation", "src": "4893:13:5"}, {"arguments": [{"expression": {"id": 775, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 765, "src": "4917:7:5", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$17568_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 776, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "poolId", "nodeType": "MemberAccess", "referencedDeclaration": 17559, "src": "4917:14:5", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "id": 777, "modifierName": {"id": 774, "name": "onlyVault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4104, "src": "4907:9:5", "typeDescriptions": {"typeIdentifier": "t_modifier$_t_bytes32_$", "typeString": "modifier (bytes32)"}}, "nodeType": "ModifierInvocation", "src": "4907:25:5"}], "name": "onSwap", "nodeType": "FunctionDefinition", "overrides": {"id": 771, "nodeType": "OverrideSpecifier", "overrides": [], "src": "4884:8:5"}, "parameters": {"id": 770, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 765, "mutability": "mutable", "name": "request", "nodeType": "VariableDeclaration", "scope": 930, "src": "4771:26:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$17568_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 764, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 17568, "src": "4771:11:5", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$17568_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 767, "mutability": "mutable", "name": "balanceTokenIn", "nodeType": "VariableDeclaration", "scope": 930, "src": "4807:22:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 766, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4807:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 769, "mutability": "mutable", "name": "balanceTokenOut", "nodeType": "VariableDeclaration", "scope": 930, "src": "4839:23:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 768, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4839:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4761:107:5"}, "returnParameters": {"id": 780, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 779, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 930, "src": "4942:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 778, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4942:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4941:9:5"}, "scope": 1941, "src": "4746:2711:5", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"baseFunctions": [4741], "body": {"id": 956, "nodeType": "Block", "src": "7718:211:5", "statements": [{"expression": {"arguments": [{"id": 948, "name": "currentBalanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 934, "src": "7823:21:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 949, "name": "currentBalanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 936, "src": "7846:22:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 950, "name": "swapRequest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 932, "src": "7870:11:5", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$17568_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 951, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 17557, "src": "7870:18:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 952, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 938, "src": "7890:14:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 953, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 940, "src": "7906:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 946, "name": "GyroTwoMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 474, "src": "7795:11:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroTwoMath_$474_$", "typeString": "type(library GyroTwoMath)"}}, "id": 947, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcOutGivenIn", "nodeType": "MemberAccess", "referencedDeclaration": 354, "src": "7795:27:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 954, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7795:127:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 945, "id": 955, "nodeType": "Return", "src": "7788:134:5"}]}, "id": 957, "implemented": true, "kind": "function", "modifiers": [], "name": "_onSwapGivenIn", "nodeType": "FunctionDefinition", "overrides": {"id": 942, "nodeType": "OverrideSpecifier", "overrides": [], "src": "7691:8:5"}, "parameters": {"id": 941, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 932, "mutability": "mutable", "name": "swapRequest", "nodeType": "VariableDeclaration", "scope": 957, "src": "7496:30:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$17568_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 931, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 17568, "src": "7496:11:5", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$17568_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 934, "mutability": "mutable", "name": "currentBalanceTokenIn", "nodeType": "VariableDeclaration", "scope": 957, "src": "7536:29:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 933, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7536:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 936, "mutability": "mutable", "name": "currentBalanceTokenOut", "nodeType": "VariableDeclaration", "scope": 957, "src": "7575:30:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 935, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7575:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 938, "mutability": "mutable", "name": "virtualParamIn", "nodeType": "VariableDeclaration", "scope": 957, "src": "7615:22:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 937, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7615:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 940, "mutability": "mutable", "name": "virtualParamOut", "nodeType": "VariableDeclaration", "scope": 957, "src": "7647:23:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 939, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7647:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7486:190:5"}, "returnParameters": {"id": 945, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 944, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 957, "src": "7709:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 943, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7709:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7708:9:5"}, "scope": 1941, "src": "7463:466:5", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"baseFunctions": [4767], "body": {"id": 983, "nodeType": "Block", "src": "8191:211:5", "statements": [{"expression": {"arguments": [{"id": 975, "name": "currentBalanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 961, "src": "8296:21:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 976, "name": "currentBalanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 963, "src": "8319:22:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 977, "name": "swapRequest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 959, "src": "8343:11:5", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$17568_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 978, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 17557, "src": "8343:18:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 979, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 965, "src": "8363:14:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 980, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 967, "src": "8379:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 973, "name": "GyroTwoMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 474, "src": "8268:11:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroTwoMath_$474_$", "typeString": "type(library GyroTwoMath)"}}, "id": 974, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcInGivenOut", "nodeType": "MemberAccess", "referencedDeclaration": 441, "src": "8268:27:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 981, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8268:127:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 972, "id": 982, "nodeType": "Return", "src": "8261:134:5"}]}, "id": 984, "implemented": true, "kind": "function", "modifiers": [], "name": "_onSwapGivenOut", "nodeType": "FunctionDefinition", "overrides": {"id": 969, "nodeType": "OverrideSpecifier", "overrides": [], "src": "8164:8:5"}, "parameters": {"id": 968, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 959, "mutability": "mutable", "name": "swapRequest", "nodeType": "VariableDeclaration", "scope": 984, "src": "7969:30:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$17568_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 958, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 17568, "src": "7969:11:5", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$17568_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 961, "mutability": "mutable", "name": "currentBalanceTokenIn", "nodeType": "VariableDeclaration", "scope": 984, "src": "8009:29:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 960, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8009:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 963, "mutability": "mutable", "name": "currentBalanceTokenOut", "nodeType": "VariableDeclaration", "scope": 984, "src": "8048:30:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 962, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8048:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 965, "mutability": "mutable", "name": "virtualParamIn", "nodeType": "VariableDeclaration", "scope": 984, "src": "8088:22:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 964, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8088:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 967, "mutability": "mutable", "name": "virtualParamOut", "nodeType": "VariableDeclaration", "scope": 984, "src": "8120:23:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 966, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8120:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7959:190:5"}, "returnParameters": {"id": 972, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 971, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 984, "src": "8182:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 970, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8182:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "8181:9:5"}, "scope": 1941, "src": "7935:467:5", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 1032, "nodeType": "Block", "src": "8711:392:5", "statements": [{"assignments": [1000], "declarations": [{"constant": false, "id": 1000, "mutability": "mutable", "name": "scalingFactorTokenIn", "nodeType": "VariableDeclaration", "scope": 1032, "src": "8721:28:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 999, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8721:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1004, "initialValue": {"arguments": [{"id": 1002, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 990, "src": "8767:15:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 1001, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6079, "src": "8752:14:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 1003, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8752:31:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "8721:62:5"}, {"assignments": [1006], "declarations": [{"constant": false, "id": 1006, "mutability": "mutable", "name": "scalingFactorTokenOut", "nodeType": "VariableDeclaration", "scope": 1032, "src": "8793:29:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1005, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8793:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1011, "initialValue": {"arguments": [{"id": 1009, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "8840:16:5", "subExpression": {"id": 1008, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 990, "src": "8841:15:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 1007, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6079, "src": "8825:14:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 1010, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8825:32:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "8793:64:5"}, {"expression": {"id": 1017, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1012, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 986, "src": "8867:14:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1014, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 986, "src": "8893:14:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1015, "name": "scalingFactorTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1000, "src": "8909:20:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1013, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6096, "src": "8884:8:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1016, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8884:46:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8867:63:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1018, "nodeType": "ExpressionStatement", "src": "8867:63:5"}, {"expression": {"id": 1024, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1019, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 988, "src": "8940:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1021, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 988, "src": "8967:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1022, "name": "scalingFactorTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1006, "src": "8984:21:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1020, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6096, "src": "8958:8:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1023, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8958:48:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8940:66:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1025, "nodeType": "ExpressionStatement", "src": "8940:66:5"}, {"expression": {"arguments": [{"id": 1027, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 986, "src": "9047:14:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1028, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 988, "src": "9063:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1029, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 990, "src": "9080:15:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 1026, "name": "_calculateCurrentValues", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1133, "src": "9023:23:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256,bool) view returns (uint256,uint256,uint256)"}}, "id": 1030, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9023:73:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256,uint256)"}}, "functionReturnParameters": 998, "id": 1031, "nodeType": "Return", "src": "9016:80:5"}]}, "functionSelector": "3c4dd5bb", "id": 1033, "implemented": true, "kind": "function", "modifiers": [], "name": "calculateCurrentValues", "nodeType": "FunctionDefinition", "parameters": {"id": 991, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 986, "mutability": "mutable", "name": "balanceTokenIn", "nodeType": "VariableDeclaration", "scope": 1033, "src": "8449:22:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 985, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8449:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 988, "mutability": "mutable", "name": "balanceTokenOut", "nodeType": "VariableDeclaration", "scope": 1033, "src": "8481:23:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 987, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8481:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 990, "mutability": "mutable", "name": "tokenInIsToken0", "nodeType": "VariableDeclaration", "scope": 1033, "src": "8514:20:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 989, "name": "bool", "nodeType": "ElementaryTypeName", "src": "8514:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "8439:101:5"}, "returnParameters": {"id": 998, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 993, "mutability": "mutable", "name": "currentInvariant", "nodeType": "VariableDeclaration", "scope": 1033, "src": "8599:24:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 992, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8599:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 995, "mutability": "mutable", "name": "virtualParamIn", "nodeType": "VariableDeclaration", "scope": 1033, "src": "8637:22:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 994, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8637:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 997, "mutability": "mutable", "name": "virtualParamOut", "nodeType": "VariableDeclaration", "scope": 1033, "src": "8673:23:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 996, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8673:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "8585:121:5"}, "scope": 1941, "src": "8408:695:5", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 1132, "nodeType": "Block", "src": "9415:705:5", "statements": [{"assignments": [1052], "declarations": [{"constant": false, "id": 1052, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 1132, "src": "9508:25:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1050, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9508:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1051, "nodeType": "ArrayTypeName", "src": "9508:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 1058, "initialValue": {"arguments": [{"hexValue": "32", "id": 1056, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9550:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 1055, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "9536:13:5", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 1053, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9540:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1054, "nodeType": "ArrayTypeName", "src": "9540:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 1057, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9536:16:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "9508:44:5"}, {"expression": {"id": 1066, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 1059, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1052, "src": "9562:8:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1061, "indexExpression": {"hexValue": "30", "id": 1060, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9571:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "9562:11:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"id": 1062, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1039, "src": "9576:15:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 1064, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1037, "src": "9611:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1065, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "9576:50:5", "trueExpression": {"id": 1063, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1035, "src": "9594:14:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9562:64:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1067, "nodeType": "ExpressionStatement", "src": "9562:64:5"}, {"expression": {"id": 1075, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 1068, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1052, "src": "9636:8:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1070, "indexExpression": {"hexValue": "31", "id": 1069, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9645:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "9636:11:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"id": 1071, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1039, "src": "9650:15:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 1073, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1035, "src": "9686:14:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1074, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "9650:50:5", "trueExpression": {"id": 1072, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1037, "src": "9668:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9636:64:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1076, "nodeType": "ExpressionStatement", "src": "9636:64:5"}, {"assignments": [1082], "declarations": [{"constant": false, "id": 1082, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 1132, "src": "9711:28:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 1080, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9711:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1081, "length": {"hexValue": "32", "id": 1079, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9719:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "9711:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 1085, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 1083, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [597, 610], "referencedDeclaration": 597, "src": "9742:15:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function () view returns (uint256[2] memory)"}}, "id": 1084, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9742:17:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "9711:48:5"}, {"expression": {"id": 1097, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1086, "name": "currentInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1042, "src": "9770:16:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1089, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1052, "src": "9821:8:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"baseExpression": {"id": 1090, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1082, "src": "9831:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1092, "indexExpression": {"hexValue": "30", "id": 1091, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9842:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9831:13:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1093, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1082, "src": "9846:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1095, "indexExpression": {"hexValue": "31", "id": 1094, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9857:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9846:13:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1087, "name": "GyroTwoMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 474, "src": "9789:11:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroTwoMath_$474_$", "typeString": "type(library GyroTwoMath)"}}, "id": 1088, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 61, "src": "9789:31:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256)"}}, "id": 1096, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9789:71:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9770:90:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1098, "nodeType": "ExpressionStatement", "src": "9770:90:5"}, {"assignments": [1104], "declarations": [{"constant": false, "id": 1104, "mutability": "mutable", "name": "virtualParam", "nodeType": "VariableDeclaration", "scope": 1132, "src": "9871:30:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 1102, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9871:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1103, "length": {"hexValue": "32", "id": 1101, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9879:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "9871:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 1109, "initialValue": {"arguments": [{"id": 1106, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1082, "src": "9926:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, {"id": 1107, "name": "currentInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1042, "src": "9938:16:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1105, "name": "_getVirtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 692, "src": "9904:21:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function (uint256[2] memory,uint256) view returns (uint256[2] memory)"}}, "id": 1108, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9904:51:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "9871:84:5"}, {"expression": {"id": 1119, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1110, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1044, "src": "9966:14:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"id": 1111, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1039, "src": "9983:15:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"baseExpression": {"id": 1115, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1104, "src": "10019:12:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1117, "indexExpression": {"hexValue": "31", "id": 1116, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10032:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10019:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1118, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "9983:51:5", "trueExpression": {"baseExpression": {"id": 1112, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1104, "src": "10001:12:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1114, "indexExpression": {"hexValue": "30", "id": 1113, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10014:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10001:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9966:68:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1120, "nodeType": "ExpressionStatement", "src": "9966:68:5"}, {"expression": {"id": 1130, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1121, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1046, "src": "10044:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"id": 1122, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1039, "src": "10062:15:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"baseExpression": {"id": 1126, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1104, "src": "10098:12:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1128, "indexExpression": {"hexValue": "30", "id": 1127, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10111:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10098:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1129, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "10062:51:5", "trueExpression": {"baseExpression": {"id": 1123, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1104, "src": "10080:12:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1125, "indexExpression": {"hexValue": "31", "id": 1124, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10093:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10080:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10044:69:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1131, "nodeType": "ExpressionStatement", "src": "10044:69:5"}]}, "id": 1133, "implemented": true, "kind": "function", "modifiers": [], "name": "_calculateCurrentValues", "nodeType": "FunctionDefinition", "parameters": {"id": 1040, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1035, "mutability": "mutable", "name": "balanceTokenIn", "nodeType": "VariableDeclaration", "scope": 1133, "src": "9151:22:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1034, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9151:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1037, "mutability": "mutable", "name": "balanceTokenOut", "nodeType": "VariableDeclaration", "scope": 1133, "src": "9183:23:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1036, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9183:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1039, "mutability": "mutable", "name": "tokenInIsToken0", "nodeType": "VariableDeclaration", "scope": 1133, "src": "9216:20:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1038, "name": "bool", "nodeType": "ElementaryTypeName", "src": "9216:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "9141:101:5"}, "returnParameters": {"id": 1047, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1042, "mutability": "mutable", "name": "currentInvariant", "nodeType": "VariableDeclaration", "scope": 1133, "src": "9303:24:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1041, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9303:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1044, "mutability": "mutable", "name": "virtualParamIn", "nodeType": "VariableDeclaration", "scope": 1133, "src": "9341:22:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1043, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9341:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1046, "mutability": "mutable", "name": "virtualParamOut", "nodeType": "VariableDeclaration", "scope": 1133, "src": "9377:23:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1045, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9377:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "9289:121:5"}, "scope": 1941, "src": "9109:1011:5", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [4988], "body": {"id": 1228, "nodeType": "Block", "src": "11166:847:5", "statements": [{"assignments": [1154], "declarations": [{"constant": false, "id": 1154, "mutability": "mutable", "name": "kind", "nodeType": "VariableDeclaration", "scope": 1228, "src": "11176:30:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$14145", "typeString": "enum BaseWeightedPool.JoinKind"}, "typeName": {"id": 1153, "name": "BaseWeightedPool.JoinKind", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 14145, "src": "11176:25:5", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$14145", "typeString": "enum BaseWeightedPool.JoinKind"}}, "visibility": "internal"}], "id": 1158, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1155, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1142, "src": "11209:8:5", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 1156, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "joinKind", "nodeType": "MemberAccess", "referencedDeclaration": 6782, "src": "11209:17:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_enum$_JoinKind_$14145_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (enum BaseWeightedPool.JoinKind)"}}, "id": 1157, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11209:19:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$14145", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "VariableDeclarationStatement", "src": "11176:52:5"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_JoinKind_$14145", "typeString": "enum BaseWeightedPool.JoinKind"}, "id": 1164, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1160, "name": "kind", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1154, "src": "11247:4:5", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$14145", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 1161, "name": "BaseWeightedPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15346, "src": "11255:16:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BaseWeightedPool_$15346_$", "typeString": "type(contract BaseWeightedPool)"}}, "id": 1162, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "JoinKind", "nodeType": "MemberAccess", "referencedDeclaration": 14145, "src": "11255:25:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_JoinKind_$14145_$", "typeString": "type(enum BaseWeightedPool.JoinKind)"}}, "id": 1163, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "INIT", "nodeType": "MemberAccess", "src": "11255:30:5", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$14145", "typeString": "enum BaseWeightedPool.JoinKind"}}, "src": "11247:38:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 1165, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8029, "src": "11287:6:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$8029_$", "typeString": "type(library Errors)"}}, "id": 1166, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNINITIALIZED", "nodeType": "MemberAccess", "referencedDeclaration": 7698, "src": "11287:20:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1159, "name": "_require", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7624, "src": "11238:8:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 1167, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11238:70:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1168, "nodeType": "ExpressionStatement", "src": "11238:70:5"}, {"assignments": [1173], "declarations": [{"constant": false, "id": 1173, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 1228, "src": "11319:26:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1171, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11319:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1172, "nodeType": "ArrayTypeName", "src": "11319:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 1177, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1174, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1142, "src": "11348:8:5", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 1175, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "initialAmountsIn", "nodeType": "MemberAccess", "referencedDeclaration": 6821, "src": "11348:25:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (uint256[] memory)"}}, "id": 1176, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11348:27:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "11319:56:5"}, {"expression": {"arguments": [{"expression": {"id": 1181, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1173, "src": "11421:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1182, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "11421:16:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "32", "id": 1183, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11439:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "expression": {"id": 1178, "name": "InputHelpers", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3220, "src": "11385:12:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_InputHelpers_$3220_$", "typeString": "type(library InputHelpers)"}}, "id": 1180, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ensureInputLengthMatch", "nodeType": "MemberAccess", "referencedDeclaration": 3128, "src": "11385:35:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256) pure"}}, "id": 1184, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11385:56:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1185, "nodeType": "ExpressionStatement", "src": "11385:56:5"}, {"expression": {"arguments": [{"id": 1187, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1173, "src": "11465:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}], "id": 1186, "name": "_upscaleArray", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6132, "src": "11451:13:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$", "typeString": "function (uint256[] memory) view"}}, "id": 1188, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11451:24:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1189, "nodeType": "ExpressionStatement", "src": "11451:24:5"}, {"assignments": [1195], "declarations": [{"constant": false, "id": 1195, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 1228, "src": "11486:28:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 1193, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11486:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1194, "length": {"hexValue": "32", "id": 1192, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11494:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "11486:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 1198, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 1196, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [597, 610], "referencedDeclaration": 597, "src": "11517:15:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function () view returns (uint256[2] memory)"}}, "id": 1197, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11517:17:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "11486:48:5"}, {"assignments": [1200], "declarations": [{"constant": false, "id": 1200, "mutability": "mutable", "name": "invariantAfterJoin", "nodeType": "VariableDeclaration", "scope": 1228, "src": "11545:26:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1199, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11545:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1211, "initialValue": {"arguments": [{"id": 1203, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1173, "src": "11606:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"baseExpression": {"id": 1204, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1195, "src": "11617:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1206, "indexExpression": {"hexValue": "30", "id": 1205, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11628:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "11617:13:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1207, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1195, "src": "11632:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1209, "indexExpression": {"hexValue": "31", "id": 1208, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11643:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "11632:13:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1201, "name": "GyroTwoMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 474, "src": "11574:11:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroTwoMath_$474_$", "typeString": "type(library GyroTwoMath)"}}, "id": 1202, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 61, "src": "11574:31:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256)"}}, "id": 1210, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11574:72:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "11545:101:5"}, {"assignments": [1213], "declarations": [{"constant": false, "id": 1213, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 1228, "src": "11863:20:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1212, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11863:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1219, "initialValue": {"arguments": [{"id": 1216, "name": "invariantAfterJoin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1200, "src": "11895:18:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "32", "id": 1217, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11915:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "expression": {"id": 1214, "name": "Math", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3851, "src": "11886:4:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Math_$3851_$", "typeString": "type(library Math)"}}, "id": 1215, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mul", "nodeType": "MemberAccess", "referencedDeclaration": 3770, "src": "11886:8:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1218, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11886:31:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "11863:54:5"}, {"expression": {"id": 1222, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1220, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4049, "src": "11928:14:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 1221, "name": "invariantAfterJoin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1200, "src": "11945:18:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11928:35:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1223, "nodeType": "ExpressionStatement", "src": "11928:35:5"}, {"expression": {"components": [{"id": 1224, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1213, "src": "11982:12:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1225, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1173, "src": "11996:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1226, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "11981:25:5", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "functionReturnParameters": 1150, "id": 1227, "nodeType": "Return", "src": "11974:32:5"}]}, "documentation": {"id": 1134, "nodeType": "StructuredDocumentation", "src": "10191:801:5", "text": " @dev Called when the Pool is joined for the first time; that is, when the BPT total supply is zero.\n Returns the amount of BPT to mint, and the token amounts the Pool will receive in return.\n Minted BPT will be sent to `recipient`, except for _MINIMUM_BPT, which will be deducted from this amount and sent\n to the zero address instead. This will cause that BPT to remain forever locked there, preventing total BTP from\n ever dropping below that value, and ensuring `_onInitializePool` can only be called once in the entire Pool's\n lifetime.\n The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n be downscaled (rounding up) before being returned to the Vault."}, "id": 1229, "implemented": true, "kind": "function", "modifiers": [], "name": "_onInitializePool", "nodeType": "FunctionDefinition", "overrides": {"id": 1144, "nodeType": "OverrideSpecifier", "overrides": [], "src": "11121:8:5"}, "parameters": {"id": 1143, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1136, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1229, "src": "11033:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 1135, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "11033:7:5", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 1138, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1229, "src": "11050:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1137, "name": "address", "nodeType": "ElementaryTypeName", "src": "11050:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1140, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1229, "src": "11067:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1139, "name": "address", "nodeType": "ElementaryTypeName", "src": "11067:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1142, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 1229, "src": "11084:21:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1141, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "11084:5:5", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "11023:88:5"}, "returnParameters": {"id": 1150, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1146, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1229, "src": "11139:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1145, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11139:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1149, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1229, "src": "11148:16:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1147, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11148:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1148, "nodeType": "ArrayTypeName", "src": "11148:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "11138:27:5"}, "scope": 1941, "src": "10997:1016:5", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [5083], "body": {"id": 1353, "nodeType": "Block", "src": "13789:1709:5", "statements": [{"assignments": [1262], "declarations": [{"constant": false, "id": 1262, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 1353, "src": "13799:28:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 1260, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13799:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1261, "length": {"hexValue": "32", "id": 1259, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13807:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "13799:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 1265, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 1263, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [597, 610], "referencedDeclaration": 597, "src": "13830:15:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function () view returns (uint256[2] memory)"}}, "id": 1264, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13830:17:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "13799:48:5"}, {"assignments": [1267], "declarations": [{"constant": false, "id": 1267, "mutability": "mutable", "name": "invariantBeforeAction", "nodeType": "VariableDeclaration", "scope": 1353, "src": "14152:29:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1266, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14152:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1278, "initialValue": {"arguments": [{"id": 1270, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1239, "src": "14216:8:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"baseExpression": {"id": 1271, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1262, "src": "14226:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1273, "indexExpression": {"hexValue": "30", "id": 1272, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14237:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "14226:13:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1274, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1262, "src": "14241:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1276, "indexExpression": {"hexValue": "31", "id": 1275, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14252:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "14241:13:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1268, "name": "GyroTwoMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 474, "src": "14184:11:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroTwoMath_$474_$", "typeString": "type(library GyroTwoMath)"}}, "id": 1269, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 61, "src": "14184:31:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256)"}}, "id": 1277, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14184:71:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "14152:103:5"}, {"assignments": [1284], "declarations": [{"constant": false, "id": 1284, "mutability": "mutable", "name": "virtualParam", "nodeType": "VariableDeclaration", "scope": 1353, "src": "14265:30:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 1282, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14265:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1283, "length": {"hexValue": "32", "id": 1281, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14273:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "14265:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 1289, "initialValue": {"arguments": [{"id": 1286, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1262, "src": "14320:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, {"id": 1287, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1267, "src": "14332:21:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1285, "name": "_getVirtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 692, "src": "14298:21:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function (uint256[2] memory,uint256) view returns (uint256[2] memory)"}}, "id": 1288, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14298:56:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "14265:89:5"}, {"expression": {"arguments": [{"id": 1291, "name": "lastChangeBlock", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1241, "src": "14433:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1292, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1239, "src": "14450:8:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1294, "indexExpression": {"hexValue": "30", "id": 1293, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14459:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "14450:11:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1295, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1239, "src": "14463:8:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1297, "indexExpression": {"hexValue": "31", "id": 1296, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14472:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "14463:11:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1298, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1284, "src": "14476:12:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1300, "indexExpression": {"hexValue": "30", "id": 1299, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14489:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "14476:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1301, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1284, "src": "14493:12:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1303, "indexExpression": {"hexValue": "31", "id": 1302, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14506:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "14493:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1290, "name": "_updateOracle", "nodeType": "Identifier", "overloadedDeclarations": [1928, 1940], "referencedDeclaration": 1928, "src": "14419:13:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256,uint256,uint256,uint256)"}}, "id": 1304, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14419:90:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1305, "nodeType": "ExpressionStatement", "src": "14419:90:5"}, {"expression": {"arguments": [{"id": 1307, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1267, "src": "14536:21:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1306, "name": "_distributeFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1678, "src": "14520:15:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 1308, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14520:38:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1309, "nodeType": "ExpressionStatement", "src": "14520:38:5"}, {"assignments": [1311, 1314], "declarations": [{"constant": false, "id": 1311, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 1353, "src": "14570:20:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1310, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14570:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1314, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 1353, "src": "14592:26:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1312, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14592:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1313, "nodeType": "ArrayTypeName", "src": "14592:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 1319, "initialValue": {"arguments": [{"id": 1316, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1239, "src": "14630:8:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 1317, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1245, "src": "14640:8:5", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 1315, "name": "_doJoin", "nodeType": "Identifier", "overloadedDeclarations": [1398, 5152], "referencedDeclaration": 1398, "src": "14622:7:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 1318, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14622:27:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "14569:80:5"}, {"condition": {"expression": {"id": 1320, "name": "_capParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3876, "src": "14664:10:5", "typeDescriptions": {"typeIdentifier": "t_struct$_CapParams_$6982_storage", "typeString": "struct ICappedLiquidity.CapParams storage ref"}}, "id": 1321, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "capEnabled", "nodeType": "MemberAccess", "referencedDeclaration": 6977, "src": "14664:21:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1332, "nodeType": "IfStatement", "src": "14660:113:5", "trueBody": {"id": 1331, "nodeType": "Block", "src": "14687:86:5", "statements": [{"expression": {"arguments": [{"id": 1323, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1311, "src": "14712:12:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"id": 1325, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1236, "src": "14736:9:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 1324, "name": "balanceOf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12884, "src": "14726:9:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view returns (uint256)"}}, "id": 1326, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14726:20:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 1327, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12870, "src": "14748:11:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1328, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14748:13:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1322, "name": "_ensureCap", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3998, "src": "14701:10:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256,uint256) view"}}, "id": 1329, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14701:61:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1330, "nodeType": "ExpressionStatement", "src": "14701:61:5"}]}}, {"expression": {"id": 1342, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1333, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4049, "src": "15206:14:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1336, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1267, "src": "15261:21:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1337, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1311, "src": "15284:12:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 1338, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12870, "src": "15298:11:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1339, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15298:13:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "74727565", "id": 1340, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "15313:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "expression": {"id": 1334, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3108, "src": "15223:12:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$3108_$", "typeString": "type(library GyroPoolMath)"}}, "id": 1335, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "liquidityInvariantUpdate", "nodeType": "MemberAccess", "referencedDeclaration": 3027, "src": "15223:37:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,bool) pure returns (uint256)"}}, "id": 1341, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15223:95:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "15206:112:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1343, "nodeType": "ExpressionStatement", "src": "15206:112:5"}, {"expression": {"components": [{"id": 1344, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1311, "src": "15449:12:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1345, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1314, "src": "15463:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"arguments": [{"hexValue": "32", "id": 1349, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15488:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 1348, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "15474:13:5", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 1346, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15478:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1347, "nodeType": "ArrayTypeName", "src": "15478:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 1350, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15474:16:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1351, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "15448:43:5", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory,uint256[] memory)"}}, "functionReturnParameters": 1256, "id": 1352, "nodeType": "Return", "src": "15441:50:5"}]}, "documentation": {"id": 1230, "nodeType": "StructuredDocumentation", "src": "12019:1386:5", "text": " @dev Called whenever the Pool is joined after the first initialization join (see `_onInitializePool`).\n Returns the amount of BPT to mint, the token amounts that the Pool will receive in return, and the number of\n tokens to pay in protocol swap fees.\n Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n Minted BPT will be sent to `recipient`.\n The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n be downscaled (rounding up) before being returned to the Vault.\n Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onJoinPool`). These\n amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way\n Responsibility for updating the oracle has been moved from `onJoinPool()` (without the underscore) to this function. That is because both this function and `_updateOracle()` need access to the invariant and this way we can share the computation."}, "id": 1354, "implemented": true, "kind": "function", "modifiers": [], "name": "_onJoinPool", "nodeType": "FunctionDefinition", "overrides": {"id": 1247, "nodeType": "OverrideSpecifier", "overrides": [], "src": "13668:8:5"}, "parameters": {"id": 1246, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1232, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1354, "src": "13440:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 1231, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "13440:7:5", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 1234, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1354, "src": "13457:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1233, "name": "address", "nodeType": "ElementaryTypeName", "src": "13457:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1236, "mutability": "mutable", "name": "recipient", "nodeType": "VariableDeclaration", "scope": 1354, "src": "13474:17:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1235, "name": "address", "nodeType": "ElementaryTypeName", "src": "13474:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1239, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 1354, "src": "13501:25:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1237, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13501:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1238, "nodeType": "ArrayTypeName", "src": "13501:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1241, "mutability": "mutable", "name": "lastChangeBlock", "nodeType": "VariableDeclaration", "scope": 1354, "src": "13536:23:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1240, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13536:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1243, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1354, "src": "13569:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1242, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13569:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1245, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 1354, "src": "13615:21:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1244, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "13615:5:5", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "13430:212:5"}, "returnParameters": {"id": 1256, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1249, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1354, "src": "13707:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1248, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13707:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1252, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1354, "src": "13728:16:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1250, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13728:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1251, "nodeType": "ArrayTypeName", "src": "13728:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1255, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1354, "src": "13758:16:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1253, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13758:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1254, "nodeType": "ArrayTypeName", "src": "13758:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "13693:91:5"}, "scope": 1941, "src": "13410:2088:5", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 1397, "nodeType": "Block", "src": "15644:441:5", "statements": [{"assignments": [1370], "declarations": [{"constant": false, "id": 1370, "mutability": "mutable", "name": "kind", "nodeType": "VariableDeclaration", "scope": 1397, "src": "15654:30:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$14145", "typeString": "enum BaseWeightedPool.JoinKind"}, "typeName": {"id": 1369, "name": "BaseWeightedPool.JoinKind", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 14145, "src": "15654:25:5", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$14145", "typeString": "enum BaseWeightedPool.JoinKind"}}, "visibility": "internal"}], "id": 1374, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1371, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1359, "src": "15687:8:5", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 1372, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "joinKind", "nodeType": "MemberAccess", "referencedDeclaration": 6782, "src": "15687:17:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_enum$_JoinKind_$14145_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (enum BaseWeightedPool.JoinKind)"}}, "id": 1373, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15687:19:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$14145", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "VariableDeclarationStatement", "src": "15654:52:5"}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_JoinKind_$14145", "typeString": "enum BaseWeightedPool.JoinKind"}, "id": 1379, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1375, "name": "kind", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1370, "src": "15843:4:5", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$14145", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 1376, "name": "BaseWeightedPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15346, "src": "15851:16:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BaseWeightedPool_$15346_$", "typeString": "type(contract BaseWeightedPool)"}}, "id": 1377, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "JoinKind", "nodeType": "MemberAccess", "referencedDeclaration": 14145, "src": "15851:25:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_JoinKind_$14145_$", "typeString": "type(enum BaseWeightedPool.JoinKind)"}}, "id": 1378, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "ALL_TOKENS_IN_FOR_EXACT_BPT_OUT", "nodeType": "MemberAccess", "src": "15851:57:5", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$14145", "typeString": "enum BaseWeightedPool.JoinKind"}}, "src": "15843:65:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 1395, "nodeType": "Block", "src": "16019:60:5", "statements": [{"expression": {"arguments": [{"expression": {"id": 1391, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8029, "src": "16041:6:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$8029_$", "typeString": "type(library Errors)"}}, "id": 1392, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNHANDLED_JOIN_KIND", "nodeType": "MemberAccess", "referencedDeclaration": 7743, "src": "16041:26:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1390, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7632, "src": "16033:7:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$", "typeString": "function (uint256) pure"}}, "id": 1393, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16033:35:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1394, "nodeType": "ExpressionStatement", "src": "16033:35:5"}]}, "id": 1396, "nodeType": "IfStatement", "src": "15839:240:5", "trueBody": {"id": 1389, "nodeType": "Block", "src": "15910:103:5", "statements": [{"expression": {"id": 1387, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 1380, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1362, "src": "15925:12:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1381, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1365, "src": "15939:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1382, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "15924:25:5", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1384, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1357, "src": "15983:8:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 1385, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1359, "src": "15993:8:5", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 1383, "name": "_joinAllTokensInForExactBPTOut", "nodeType": "Identifier", "overloadedDeclarations": [1436], "referencedDeclaration": 1436, "src": "15952:30:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 1386, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15952:50:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "15924:78:5", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1388, "nodeType": "ExpressionStatement", "src": "15924:78:5"}]}}]}, "id": 1398, "implemented": true, "kind": "function", "modifiers": [], "name": "_doJoin", "nodeType": "FunctionDefinition", "parameters": {"id": 1360, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1357, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 1398, "src": "15521:25:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1355, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15521:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1356, "nodeType": "ArrayTypeName", "src": "15521:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1359, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 1398, "src": "15548:21:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1358, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "15548:5:5", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "15520:50:5"}, "returnParameters": {"id": 1366, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1362, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 1398, "src": "15594:20:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1361, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15594:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1365, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 1398, "src": "15616:26:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1363, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15616:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1364, "nodeType": "ArrayTypeName", "src": "15616:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "15593:50:5"}, "scope": 1941, "src": "15504:581:5", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [5322], "body": {"id": 1435, "nodeType": "Block", "src": "16276:343:5", "statements": [{"assignments": [1413], "declarations": [{"constant": false, "id": 1413, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 1435, "src": "16286:20:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1412, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16286:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1417, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1414, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1403, "src": "16309:8:5", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 1415, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "allTokensInForExactBptOut", "nodeType": "MemberAccess", "referencedDeclaration": 6896, "src": "16309:34:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (uint256)"}}, "id": 1416, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16309:36:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "16286:59:5"}, {"assignments": [1422], "declarations": [{"constant": false, "id": 1422, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 1435, "src": "16456:26:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1420, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16456:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1421, "nodeType": "ArrayTypeName", "src": "16456:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 1430, "initialValue": {"arguments": [{"id": 1425, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1401, "src": "16531:8:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 1426, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1413, "src": "16541:12:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 1427, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12870, "src": "16555:11:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1428, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16555:13:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1423, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3108, "src": "16485:12:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$3108_$", "typeString": "type(library GyroPoolMath)"}}, "id": 1424, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcAllTokensInGivenExactBptOut", "nodeType": "MemberAccess", "referencedDeclaration": 2407, "src": "16485:45:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256[] memory)"}}, "id": 1429, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16485:84:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "16456:113:5"}, {"expression": {"components": [{"id": 1431, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1413, "src": "16588:12:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1432, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1422, "src": "16602:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1433, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "16587:25:5", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "functionReturnParameters": 1411, "id": 1434, "nodeType": "Return", "src": "16580:32:5"}]}, "id": 1436, "implemented": true, "kind": "function", "modifiers": [], "name": "_joinAllTokensInForExactBPTOut", "nodeType": "FunctionDefinition", "overrides": {"id": 1405, "nodeType": "OverrideSpecifier", "overrides": [], "src": "16219:8:5"}, "parameters": {"id": 1404, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1401, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 1436, "src": "16131:25:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1399, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16131:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1400, "nodeType": "ArrayTypeName", "src": "16131:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1403, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 1436, "src": "16158:21:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1402, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "16158:5:5", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "16130:50:5"}, "returnParameters": {"id": 1411, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1407, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1436, "src": "16245:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1406, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16245:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1410, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1436, "src": "16254:16:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1408, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16254:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1409, "nodeType": "ArrayTypeName", "src": "16254:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "16244:27:5"}, "scope": 1941, "src": "16091:528:5", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [5511], "body": {"id": 1568, "nodeType": "Block", "src": "18099:2677:5", "statements": [{"assignments": [1469], "declarations": [{"constant": false, "id": 1469, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 1568, "src": "18264:28:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 1467, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18264:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1468, "length": {"hexValue": "32", "id": 1466, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "18272:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "18264:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 1472, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 1470, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [597, 610], "referencedDeclaration": 597, "src": "18295:15:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function () view returns (uint256[2] memory)"}}, "id": 1471, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18295:17:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "18264:48:5"}, {"condition": {"arguments": [], "expression": {"argumentTypes": [], "id": 1473, "name": "_isNotPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12766, "src": "18519:12:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$", "typeString": "function () view returns (bool)"}}, "id": 1474, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18519:14:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 1557, "nodeType": "Block", "src": "19938:659:5", "statements": [{"expression": {"id": 1547, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 1540, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1456, "src": "20153:11:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1541, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1459, "src": "20166:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1542, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "20152:25:5", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1544, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1446, "src": "20188:8:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 1545, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1452, "src": "20198:8:5", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 1543, "name": "_doExit", "nodeType": "Identifier", "overloadedDeclarations": [1613, 5580], "referencedDeclaration": 1613, "src": "20180:7:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 1546, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20180:27:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "20152:55:5", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1548, "nodeType": "ExpressionStatement", "src": "20152:55:5"}, {"expression": {"id": 1555, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1549, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4049, "src": "20552:14:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"arguments": [{"id": 1552, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "20574:7:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 1551, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20574:7:5", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}], "id": 1550, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "20569:4:5", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 1553, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20569:13:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint256", "typeString": "type(uint256)"}}, "id": 1554, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "20569:17:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "20552:34:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1556, "nodeType": "ExpressionStatement", "src": "20552:34:5"}]}, "id": 1558, "nodeType": "IfStatement", "src": "18515:2082:5", "trueBody": {"id": 1539, "nodeType": "Block", "src": "18535:1397:5", "statements": [{"assignments": [1476], "declarations": [{"constant": false, "id": 1476, "mutability": "mutable", "name": "invariantBeforeAction", "nodeType": "VariableDeclaration", "scope": 1539, "src": "18855:29:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1475, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18855:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1487, "initialValue": {"arguments": [{"id": 1479, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1446, "src": "18919:8:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"baseExpression": {"id": 1480, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1469, "src": "18929:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1482, "indexExpression": {"hexValue": "30", "id": 1481, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "18940:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "18929:13:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1483, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1469, "src": "18944:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1485, "indexExpression": {"hexValue": "31", "id": 1484, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "18955:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "18944:13:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1477, "name": "GyroTwoMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 474, "src": "18887:11:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroTwoMath_$474_$", "typeString": "type(library GyroTwoMath)"}}, "id": 1478, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 61, "src": "18887:31:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256)"}}, "id": 1486, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18887:71:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "18855:103:5"}, {"assignments": [1493], "declarations": [{"constant": false, "id": 1493, "mutability": "mutable", "name": "virtualParam", "nodeType": "VariableDeclaration", "scope": 1539, "src": "18972:30:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 1491, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18972:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1492, "length": {"hexValue": "32", "id": 1490, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "18980:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "18972:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 1498, "initialValue": {"arguments": [{"id": 1495, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1469, "src": "19027:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, {"id": 1496, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1476, "src": "19039:21:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1494, "name": "_getVirtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 692, "src": "19005:21:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function (uint256[2] memory,uint256) view returns (uint256[2] memory)"}}, "id": 1497, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19005:56:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "18972:89:5"}, {"expression": {"arguments": [{"id": 1500, "name": "lastChangeBlock", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1448, "src": "19152:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1501, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1446, "src": "19169:8:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1503, "indexExpression": {"hexValue": "30", "id": 1502, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "19178:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "19169:11:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1504, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1446, "src": "19182:8:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1506, "indexExpression": {"hexValue": "31", "id": 1505, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "19191:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "19182:11:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1507, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1493, "src": "19195:12:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1509, "indexExpression": {"hexValue": "30", "id": 1508, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "19208:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "19195:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1510, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1493, "src": "19212:12:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1512, "indexExpression": {"hexValue": "31", "id": 1511, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "19225:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "19212:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1499, "name": "_updateOracle", "nodeType": "Identifier", "overloadedDeclarations": [1928, 1940], "referencedDeclaration": 1928, "src": "19138:13:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256,uint256,uint256,uint256)"}}, "id": 1513, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19138:90:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1514, "nodeType": "ExpressionStatement", "src": "19138:90:5"}, {"expression": {"arguments": [{"id": 1516, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1476, "src": "19259:21:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1515, "name": "_distributeFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1678, "src": "19243:15:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 1517, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19243:38:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1518, "nodeType": "ExpressionStatement", "src": "19243:38:5"}, {"expression": {"id": 1526, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 1519, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1456, "src": "19297:11:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1520, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1459, "src": "19310:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1521, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "19296:25:5", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1523, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1446, "src": "19332:8:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 1524, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1452, "src": "19342:8:5", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 1522, "name": "_doExit", "nodeType": "Identifier", "overloadedDeclarations": [1613, 5580], "referencedDeclaration": 1613, "src": "19324:7:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 1525, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19324:27:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "19296:55:5", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1527, "nodeType": "ExpressionStatement", "src": "19296:55:5"}, {"expression": {"id": 1537, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1528, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4049, "src": "19809:14:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1531, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1476, "src": "19864:21:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1532, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1456, "src": "19887:11:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 1533, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12870, "src": "19900:11:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1534, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19900:13:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "66616c7365", "id": 1535, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "19915:5:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "expression": {"id": 1529, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3108, "src": "19826:12:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$3108_$", "typeString": "type(library GyroPoolMath)"}}, "id": 1530, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "liquidityInvariantUpdate", "nodeType": "MemberAccess", "referencedDeclaration": 3027, "src": "19826:37:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,bool) pure returns (uint256)"}}, "id": 1536, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19826:95:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "19809:112:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1538, "nodeType": "ExpressionStatement", "src": "19809:112:5"}]}}, {"expression": {"components": [{"id": 1559, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1456, "src": "20727:11:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1560, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1459, "src": "20740:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"arguments": [{"hexValue": "32", "id": 1564, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20766:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 1563, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "20752:13:5", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 1561, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20756:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1562, "nodeType": "ArrayTypeName", "src": "20756:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 1565, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20752:16:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1566, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "20726:43:5", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory,uint256[] memory)"}}, "functionReturnParameters": 1463, "id": 1567, "nodeType": "Return", "src": "20719:50:5"}]}, "documentation": {"id": 1437, "nodeType": "StructuredDocumentation", "src": "16625:1054:5", "text": " @dev Called whenever the Pool is exited.\n Returns the amount of BPT to burn, the token amounts for each Pool token that the Pool will grant in return, and\n the number of tokens to pay in protocol swap fees.\n Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n BPT will be burnt from `sender`.\n The Pool will grant tokens to `recipient`. These amounts are considered upscaled and will be downscaled\n (rounding down) before being returned to the Vault.\n Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onExitPool`). These\n amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way"}, "id": 1569, "implemented": true, "kind": "function", "modifiers": [], "name": "_onExitPool", "nodeType": "FunctionDefinition", "overrides": {"id": 1454, "nodeType": "OverrideSpecifier", "overrides": [], "src": "17933:8:5"}, "parameters": {"id": 1453, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1439, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1569, "src": "17714:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 1438, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "17714:7:5", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 1441, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1569, "src": "17731:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1440, "name": "address", "nodeType": "ElementaryTypeName", "src": "17731:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1443, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1569, "src": "17748:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1442, "name": "address", "nodeType": "ElementaryTypeName", "src": "17748:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1446, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 1569, "src": "17765:25:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1444, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17765:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1445, "nodeType": "ArrayTypeName", "src": "17765:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1448, "mutability": "mutable", "name": "lastChangeBlock", "nodeType": "VariableDeclaration", "scope": 1569, "src": "17800:23:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1447, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17800:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1450, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1569, "src": "17833:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1449, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17833:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1452, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 1569, "src": "17880:21:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1451, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "17880:5:5", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "17704:203:5"}, "returnParameters": {"id": 1463, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1456, "mutability": "mutable", "name": "bptAmountIn", "nodeType": "VariableDeclaration", "scope": 1569, "src": "17972:19:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1455, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17972:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1459, "mutability": "mutable", "name": "amountsOut", "nodeType": "VariableDeclaration", "scope": 1569, "src": "18005:27:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1457, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18005:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1458, "nodeType": "ArrayTypeName", "src": "18005:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1462, "mutability": "mutable", "name": "dueProtocolFeeAmounts", "nodeType": "VariableDeclaration", "scope": 1569, "src": "18046:38:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1460, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18046:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1461, "nodeType": "ArrayTypeName", "src": "18046:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "17958:136:5"}, "scope": 1941, "src": "17684:3092:5", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 1612, "nodeType": "Block", "src": "20922:452:5", "statements": [{"assignments": [1585], "declarations": [{"constant": false, "id": 1585, "mutability": "mutable", "name": "kind", "nodeType": "VariableDeclaration", "scope": 1612, "src": "20932:30:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$14150", "typeString": "enum BaseWeightedPool.ExitKind"}, "typeName": {"id": 1584, "name": "BaseWeightedPool.ExitKind", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 14150, "src": "20932:25:5", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$14150", "typeString": "enum BaseWeightedPool.ExitKind"}}, "visibility": "internal"}], "id": 1589, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1586, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1574, "src": "20965:8:5", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 1587, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "exitKind", "nodeType": "MemberAccess", "referencedDeclaration": 6798, "src": "20965:17:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_enum$_ExitKind_$14150_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (enum BaseWeightedPool.ExitKind)"}}, "id": 1588, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20965:19:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$14150", "typeString": "enum BaseWeightedPool.ExitKind"}}, "nodeType": "VariableDeclarationStatement", "src": "20932:52:5"}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_ExitKind_$14150", "typeString": "enum BaseWeightedPool.ExitKind"}, "id": 1594, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1590, "name": "kind", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1585, "src": "21139:4:5", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$14150", "typeString": "enum BaseWeightedPool.ExitKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 1591, "name": "BaseWeightedPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15346, "src": "21147:16:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BaseWeightedPool_$15346_$", "typeString": "type(contract BaseWeightedPool)"}}, "id": 1592, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ExitKind", "nodeType": "MemberAccess", "referencedDeclaration": 14150, "src": "21147:25:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_ExitKind_$14150_$", "typeString": "type(enum BaseWeightedPool.ExitKind)"}}, "id": 1593, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "EXACT_BPT_IN_FOR_TOKENS_OUT", "nodeType": "MemberAccess", "src": "21147:53:5", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$14150", "typeString": "enum BaseWeightedPool.ExitKind"}}, "src": "21139:61:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 1610, "nodeType": "Block", "src": "21308:60:5", "statements": [{"expression": {"arguments": [{"expression": {"id": 1606, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8029, "src": "21330:6:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$8029_$", "typeString": "type(library Errors)"}}, "id": 1607, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNHANDLED_EXIT_KIND", "nodeType": "MemberAccess", "referencedDeclaration": 7821, "src": "21330:26:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1605, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7632, "src": "21322:7:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$", "typeString": "function (uint256) pure"}}, "id": 1608, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21322:35:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1609, "nodeType": "ExpressionStatement", "src": "21322:35:5"}]}, "id": 1611, "nodeType": "IfStatement", "src": "21135:233:5", "trueBody": {"id": 1604, "nodeType": "Block", "src": "21202:100:5", "statements": [{"expression": {"id": 1602, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 1595, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1577, "src": "21217:11:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1596, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1580, "src": "21230:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1597, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "21216:25:5", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1599, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1572, "src": "21272:8:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 1600, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1574, "src": "21282:8:5", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 1598, "name": "_exitExactBPTInForTokensOut", "nodeType": "Identifier", "overloadedDeclarations": [1651], "referencedDeclaration": 1651, "src": "21244:27:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 1601, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21244:47:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "21216:75:5", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1603, "nodeType": "ExpressionStatement", "src": "21216:75:5"}]}}]}, "id": 1613, "implemented": true, "kind": "function", "modifiers": [], "name": "_doExit", "nodeType": "FunctionDefinition", "parameters": {"id": 1575, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1572, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 1613, "src": "20799:25:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1570, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20799:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1571, "nodeType": "ArrayTypeName", "src": "20799:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1574, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 1613, "src": "20826:21:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1573, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "20826:5:5", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "20798:50:5"}, "returnParameters": {"id": 1581, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1577, "mutability": "mutable", "name": "bptAmountIn", "nodeType": "VariableDeclaration", "scope": 1613, "src": "20872:19:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1576, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20872:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1580, "mutability": "mutable", "name": "amountsOut", "nodeType": "VariableDeclaration", "scope": 1613, "src": "20893:27:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1578, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20893:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1579, "nodeType": "ArrayTypeName", "src": "20893:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "20871:50:5"}, "scope": 1941, "src": "20782:592:5", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [5687], "body": {"id": 1650, "nodeType": "Block", "src": "21562:746:5", "statements": [{"assignments": [1628], "declarations": [{"constant": false, "id": 1628, "mutability": "mutable", "name": "bptAmountIn", "nodeType": "VariableDeclaration", "scope": 1650, "src": "21983:19:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1627, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21983:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1632, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1629, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1618, "src": "22005:8:5", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 1630, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "exactBptInForTokensOut", "nodeType": "MemberAccess", "referencedDeclaration": 6943, "src": "22005:31:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (uint256)"}}, "id": 1631, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22005:33:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "21983:55:5"}, {"assignments": [1637], "declarations": [{"constant": false, "id": 1637, "mutability": "mutable", "name": "amountsOut", "nodeType": "VariableDeclaration", "scope": 1650, "src": "22149:27:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1635, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22149:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1636, "nodeType": "ArrayTypeName", "src": "22149:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 1645, "initialValue": {"arguments": [{"id": 1640, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1616, "src": "22222:8:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 1641, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1628, "src": "22232:11:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 1642, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12870, "src": "22245:11:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1643, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22245:13:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1638, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3108, "src": "22179:12:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$3108_$", "typeString": "type(library GyroPoolMath)"}}, "id": 1639, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcTokensOutGivenExactBptIn", "nodeType": "MemberAccess", "referencedDeclaration": 2459, "src": "22179:42:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256[] memory)"}}, "id": 1644, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22179:80:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "22149:110:5"}, {"expression": {"components": [{"id": 1646, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1628, "src": "22277:11:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1647, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1637, "src": "22290:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1648, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "22276:25:5", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "functionReturnParameters": 1626, "id": 1649, "nodeType": "Return", "src": "22269:32:5"}]}, "id": 1651, "implemented": true, "kind": "function", "modifiers": [], "name": "_exitExactBPTInForTokensOut", "nodeType": "FunctionDefinition", "overrides": {"id": 1620, "nodeType": "OverrideSpecifier", "overrides": [], "src": "21505:8:5"}, "parameters": {"id": 1619, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1616, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 1651, "src": "21417:25:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1614, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21417:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1615, "nodeType": "ArrayTypeName", "src": "21417:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1618, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 1651, "src": "21444:21:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1617, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "21444:5:5", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "21416:50:5"}, "returnParameters": {"id": 1626, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1622, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1651, "src": "21531:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1621, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21531:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1625, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1651, "src": "21540:16:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1623, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21540:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1624, "nodeType": "ArrayTypeName", "src": "21540:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "21530:27:5"}, "scope": 1941, "src": "21380:928:5", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 1677, "nodeType": "Block", "src": "22654:518:5", "statements": [{"assignments": [1658, 1660, 1662, 1664], "declarations": [{"constant": false, "id": 1658, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 1677, "src": "22882:16:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1657, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22882:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1660, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 1677, "src": "22900:20:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1659, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22900:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1662, "mutability": "mutable", "name": "gyroTreasury", "nodeType": "VariableDeclaration", "scope": 1677, "src": "22922:20:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1661, "name": "address", "nodeType": "ElementaryTypeName", "src": "22922:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1664, "mutability": "mutable", "name": "balTreasury", "nodeType": "VariableDeclaration", "scope": 1677, "src": "22944:19:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1663, "name": "address", "nodeType": "ElementaryTypeName", "src": "22944:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 1669, "initialValue": {"arguments": [{"id": 1666, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4049, "src": "23006:14:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1667, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1654, "src": "23034:21:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1665, "name": "_getDueProtocolFeeAmounts", "nodeType": "Identifier", "overloadedDeclarations": [1703, 1762], "referencedDeclaration": 1762, "src": "22967:25:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "function (uint256,uint256) view returns (uint256,uint256,address,address)"}}, "id": 1668, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22967:98:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "nodeType": "VariableDeclarationStatement", "src": "22881:184:5"}, {"expression": {"arguments": [{"id": 1671, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1658, "src": "23115:8:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1672, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1660, "src": "23125:12:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1673, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1662, "src": "23139:12:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1674, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1664, "src": "23153:11:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 1670, "name": "_payFeesBpt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1794, "src": "23103:11:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$", "typeString": "function (uint256,uint256,address,address)"}}, "id": 1675, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23103:62:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1676, "nodeType": "ExpressionStatement", "src": "23103:62:5"}]}, "documentation": {"id": 1652, "nodeType": "StructuredDocumentation", "src": "22330:253:5", "text": " @dev Computes and distributes fees between the Balancer and the Gyro treasury\n The fees are computed and distributed in BPT rather than using the\n Balancer regular distribution mechanism which would pay these in underlying"}, "id": 1678, "implemented": true, "kind": "function", "modifiers": [], "name": "_distributeFees", "nodeType": "FunctionDefinition", "parameters": {"id": 1655, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1654, "mutability": "mutable", "name": "invariantBeforeAction", "nodeType": "VariableDeclaration", "scope": 1678, "src": "22614:29:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1653, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22614:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "22613:31:5"}, "returnParameters": {"id": 1656, "nodeType": "ParameterList", "parameters": [], "src": "22654:0:5"}, "scope": 1941, "src": "22589:583:5", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [5968], "body": {"id": 1702, "nodeType": "Block", "src": "23580:42:5", "statements": [{"expression": {"arguments": [{"hexValue": "4e6f7420696d706c656d656e746564", "id": 1699, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "23597:17:5", "typeDescriptions": {"typeIdentifier": "t_stringliteral_9f5474d7a5849b3f79e8aee7ea2c60bcd36a60a08b4fa41f97e2fccf1c4df98b", "typeString": "literal_string \"Not implemented\""}, "value": "Not implemented"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_9f5474d7a5849b3f79e8aee7ea2c60bcd36a60a08b4fa41f97e2fccf1c4df98b", "typeString": "literal_string \"Not implemented\""}], "id": 1698, "name": "revert", "nodeType": "Identifier", "overloadedDeclarations": [-19, -19], "referencedDeclaration": -19, "src": "23590:6:5", "typeDescriptions": {"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory) pure"}}, "id": 1700, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23590:25:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1701, "nodeType": "ExpressionStatement", "src": "23590:25:5"}]}, "documentation": {"id": 1679, "nodeType": "StructuredDocumentation", "src": "23178:96:5", "text": " @dev this function overrides inherited function to make sure it is never used"}, "id": 1703, "implemented": true, "kind": "function", "modifiers": [], "name": "_getDueProtocolFeeAmounts", "nodeType": "FunctionDefinition", "overrides": {"id": 1693, "nodeType": "OverrideSpecifier", "overrides": [], "src": "23544:8:5"}, "parameters": {"id": 1692, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1682, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1703, "src": "23323:16:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1680, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23323:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1681, "nodeType": "ArrayTypeName", "src": "23323:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1685, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1703, "src": "23362:16:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1683, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23362:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1684, "nodeType": "ArrayTypeName", "src": "23362:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1687, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1703, "src": "23410:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1686, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23410:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1689, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1703, "src": "23449:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1688, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23449:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1691, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1703, "src": "23487:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1690, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23487:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "23313:216:5"}, "returnParameters": {"id": 1697, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1696, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1703, "src": "23562:16:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1694, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23562:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1695, "nodeType": "ArrayTypeName", "src": "23562:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "23561:18:5"}, "scope": 1941, "src": "23279:343:5", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 1761, "nodeType": "Block", "src": "24164:681:5", "statements": [{"assignments": [1720, 1722, 1724, 1726], "declarations": [{"constant": false, "id": 1720, "mutability": "mutable", "name": "protocolSwapFeePerc", "nodeType": "VariableDeclaration", "scope": 1761, "src": "24175:27:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1719, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24175:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1722, "mutability": "mutable", "name": "protocolFeeGyroPortion", "nodeType": "VariableDeclaration", "scope": 1761, "src": "24204:30:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1721, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24204:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1724, "mutability": "mutable", "name": "gyroTreasury", "nodeType": "VariableDeclaration", "scope": 1761, "src": "24236:20:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1723, "name": "address", "nodeType": "ElementaryTypeName", "src": "24236:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1726, "mutability": "mutable", "name": "balTreasury", "nodeType": "VariableDeclaration", "scope": 1761, "src": "24258:19:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1725, "name": "address", "nodeType": "ElementaryTypeName", "src": "24258:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 1729, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 1727, "name": "_getFeesMetadata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1828, "src": "24281:16:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "function () view returns (uint256,uint256,address,address)"}}, "id": 1728, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24281:18:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "nodeType": "VariableDeclarationStatement", "src": "24174:125:5"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1732, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1730, "name": "protocolSwapFeePerc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1720, "src": "24395:19:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 1731, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "24418:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "24395:24:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1740, "nodeType": "IfStatement", "src": "24391:95:5", "trueBody": {"id": 1739, "nodeType": "Block", "src": "24421:65:5", "statements": [{"expression": {"components": [{"hexValue": "30", "id": 1733, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "24443:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"hexValue": "30", "id": 1734, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "24446:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"id": 1735, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1724, "src": "24449:12:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1736, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1726, "src": "24463:11:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 1737, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "24442:33:5", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_address_$_t_address_$", "typeString": "tuple(int_const 0,int_const 0,address,address)"}}, "functionReturnParameters": 1718, "id": 1738, "nodeType": "Return", "src": "24435:40:5"}]}}, {"assignments": [1742, 1744], "declarations": [{"constant": false, "id": 1742, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 1761, "src": "24530:16:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1741, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24530:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1744, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 1761, "src": "24548:20:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1743, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24548:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1754, "initialValue": {"arguments": [{"id": 1747, "name": "previousInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1706, "src": "24616:17:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1748, "name": "currentInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1708, "src": "24647:16:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 1749, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12870, "src": "24677:11:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1750, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24677:13:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1751, "name": "protocolSwapFeePerc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1720, "src": "24704:19:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1752, "name": "protocolFeeGyroPortion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1722, "src": "24737:22:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1745, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3108, "src": "24572:12:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$3108_$", "typeString": "type(library GyroPoolMath)"}}, "id": 1746, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcProtocolFees", "nodeType": "MemberAccess", "referencedDeclaration": 2543, "src": "24572:30:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,uint256,uint256) pure returns (uint256,uint256)"}}, "id": 1753, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24572:197:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "24529:240:5"}, {"expression": {"components": [{"id": 1755, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1742, "src": "24788:8:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1756, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1744, "src": "24798:12:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1757, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1724, "src": "24812:12:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1758, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1726, "src": "24826:11:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 1759, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "24787:51:5", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "functionReturnParameters": 1718, "id": 1760, "nodeType": "Return", "src": "24780:58:5"}]}, "documentation": {"id": 1704, "nodeType": "StructuredDocumentation", "src": "23628:298:5", "text": " @dev Calculates protocol fee amounts in BPT terms.\n protocolSwapFeePercentage is not used here b/c we take parameters from GyroConfig instead.\n Returns: BPT due to Gyro, BPT due to Balancer, receiving address for Gyro fees, receiving address for Balancer\n fees."}, "id": 1762, "implemented": true, "kind": "function", "modifiers": [], "name": "_getDueProtocolFeeAmounts", "nodeType": "FunctionDefinition", "parameters": {"id": 1709, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1706, "mutability": "mutable", "name": "previousInvariant", "nodeType": "VariableDeclaration", "scope": 1762, "src": "23966:25:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1705, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23966:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1708, "mutability": "mutable", "name": "currentInvariant", "nodeType": "VariableDeclaration", "scope": 1762, "src": "23993:24:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1707, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23993:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "23965:53:5"}, "returnParameters": {"id": 1718, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1711, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1762, "src": "24079:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1710, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24079:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1713, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1762, "src": "24100:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1712, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24100:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1715, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1762, "src": "24121:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1714, "name": "address", "nodeType": "ElementaryTypeName", "src": "24121:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1717, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1762, "src": "24142:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1716, "name": "address", "nodeType": "ElementaryTypeName", "src": "24142:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "24065:94:5"}, "scope": 1941, "src": "23931:914:5", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 1793, "nodeType": "Block", "src": "25002:283:5", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1775, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1773, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1764, "src": "25060:8:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 1774, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "25071:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "25060:12:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1782, "nodeType": "IfStatement", "src": "25056:82:5", "trueBody": {"id": 1781, "nodeType": "Block", "src": "25074:64:5", "statements": [{"expression": {"arguments": [{"id": 1777, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1768, "src": "25104:12:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1778, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1764, "src": "25118:8:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1776, "name": "_mintPoolTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9614, "src": "25088:15:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 1779, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25088:39:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1780, "nodeType": "ExpressionStatement", "src": "25088:39:5"}]}}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1785, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1783, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1766, "src": "25194:12:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 1784, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "25209:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "25194:16:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1792, "nodeType": "IfStatement", "src": "25190:89:5", "trueBody": {"id": 1791, "nodeType": "Block", "src": "25212:67:5", "statements": [{"expression": {"arguments": [{"id": 1787, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1770, "src": "25242:11:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1788, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1766, "src": "25255:12:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1786, "name": "_mintPoolTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9614, "src": "25226:15:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 1789, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25226:42:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1790, "nodeType": "ExpressionStatement", "src": "25226:42:5"}]}}]}, "id": 1794, "implemented": true, "kind": "function", "modifiers": [], "name": "_payFeesBpt", "nodeType": "FunctionDefinition", "parameters": {"id": 1771, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1764, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 1794, "src": "24881:16:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1763, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24881:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1766, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 1794, "src": "24907:20:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1765, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24907:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1768, "mutability": "mutable", "name": "gyroTreasury", "nodeType": "VariableDeclaration", "scope": 1794, "src": "24937:20:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1767, "name": "address", "nodeType": "ElementaryTypeName", "src": "24937:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1770, "mutability": "mutable", "name": "balTreasury", "nodeType": "VariableDeclaration", "scope": 1794, "src": "24967:19:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1769, "name": "address", "nodeType": "ElementaryTypeName", "src": "24967:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "24871:121:5"}, "returnParameters": {"id": 1772, "nodeType": "ParameterList", "parameters": [], "src": "25002:0:5"}, "scope": 1941, "src": "24851:434:5", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 1827, "nodeType": "Block", "src": "25464:324:5", "statements": [{"expression": {"components": [{"arguments": [{"expression": {"id": 1807, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6547, "src": "25514:14:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$6547_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 1808, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "PROTOCOL_SWAP_FEE_PERC_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 6537, "src": "25514:41:5", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 1805, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 509, "src": "25495:10:5", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$6532", "typeString": "contract IGyroConfig"}}, "id": 1806, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getUint", "nodeType": "MemberAccess", "referencedDeclaration": 6507, "src": "25495:18:5", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_uint256_$", "typeString": "function (bytes32) view external returns (uint256)"}}, "id": 1809, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25495:61:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"expression": {"id": 1812, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6547, "src": "25589:14:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$6547_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 1813, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "PROTOCOL_FEE_GYRO_PORTION_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 6540, "src": "25589:44:5", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 1810, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 509, "src": "25570:10:5", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$6532", "typeString": "contract IGyroConfig"}}, "id": 1811, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getUint", "nodeType": "MemberAccess", "referencedDeclaration": 6507, "src": "25570:18:5", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_uint256_$", "typeString": "function (bytes32) view external returns (uint256)"}}, "id": 1814, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25570:64:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"expression": {"id": 1817, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6547, "src": "25670:14:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$6547_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 1818, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "GYRO_TREASURY_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 6543, "src": "25670:32:5", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 1815, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 509, "src": "25648:10:5", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$6532", "typeString": "contract IGyroConfig"}}, "id": 1816, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getAddress", "nodeType": "MemberAccess", "referencedDeclaration": 6515, "src": "25648:21:5", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$", "typeString": "function (bytes32) view external returns (address)"}}, "id": 1819, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25648:55:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"expression": {"id": 1822, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6547, "src": "25739:14:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$6547_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 1823, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "BAL_TREASURY_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 6546, "src": "25739:31:5", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 1820, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 509, "src": "25717:10:5", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$6532", "typeString": "contract IGyroConfig"}}, "id": 1821, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getAddress", "nodeType": "MemberAccess", "referencedDeclaration": 6515, "src": "25717:21:5", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$", "typeString": "function (bytes32) view external returns (address)"}}, "id": 1824, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25717:54:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 1825, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "25481:300:5", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "functionReturnParameters": 1804, "id": 1826, "nodeType": "Return", "src": "25474:307:5"}]}, "id": 1828, "implemented": true, "kind": "function", "modifiers": [], "name": "_getFeesMetadata", "nodeType": "FunctionDefinition", "parameters": {"id": 1795, "nodeType": "ParameterList", "parameters": [], "src": "25316:2:5"}, "returnParameters": {"id": 1804, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1797, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1828, "src": "25379:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1796, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25379:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1799, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1828, "src": "25400:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1798, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25400:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1801, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1828, "src": "25421:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1800, "name": "address", "nodeType": "ElementaryTypeName", "src": "25421:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1803, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1828, "src": "25442:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1802, "name": "address", "nodeType": "ElementaryTypeName", "src": "25442:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "25365:94:5"}, "scope": 1941, "src": "25291:497:5", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 1927, "nodeType": "Block", "src": "26327:1264:5", "statements": [{"assignments": [1843], "declarations": [{"constant": false, "id": 1843, "mutability": "mutable", "name": "miscData", "nodeType": "VariableDeclaration", "scope": 1927, "src": "26337:16:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 1842, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "26337:7:5", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 1845, "initialValue": {"id": 1844, "name": "_miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4047, "src": "26356:9:5", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "26337:28:5"}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 1853, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1846, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1843, "src": "26379:8:5", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 1847, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "oracleEnabled", "nodeType": "MemberAccess", "referencedDeclaration": 6645, "src": "26379:22:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bool_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (bool)"}}, "id": 1848, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26379:24:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1852, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 1849, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "26407:5:5", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 1850, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "number", "nodeType": "MemberAccess", "src": "26407:12:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"id": 1851, "name": "lastChangeBlock", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1831, "src": "26422:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "26407:30:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "26379:58:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1926, "nodeType": "IfStatement", "src": "26375:1210:5", "trueBody": {"id": 1925, "nodeType": "Block", "src": "26439:1146:5", "statements": [{"assignments": [1855], "declarations": [{"constant": false, "id": 1855, "mutability": "mutable", "name": "logSpotPrice", "nodeType": "VariableDeclaration", "scope": 1925, "src": "26453:19:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 1854, "name": "int256", "nodeType": "ElementaryTypeName", "src": "26453:6:5", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 1863, "initialValue": {"arguments": [{"id": 1858, "name": "balanceToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1833, "src": "26511:13:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1859, "name": "virtualParam0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1837, "src": "26526:13:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1860, "name": "balanceToken1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1835, "src": "26541:13:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1861, "name": "virtualParam1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1839, "src": "26556:13:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1856, "name": "GyroTwoOracleMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6472, "src": "26475:17:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroTwoOracleMath_$6472_$", "typeString": "type(contract GyroTwoOracleMath)"}}, "id": 1857, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcLogSpotPrice", "nodeType": "MemberAccess", "referencedDeclaration": 6424, "src": "26475:35:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_int256_$", "typeString": "function (uint256,uint256,uint256,uint256) pure returns (int256)"}}, "id": 1862, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26475:95:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "VariableDeclarationStatement", "src": "26453:117:5"}, {"assignments": [1865], "declarations": [{"constant": false, "id": 1865, "mutability": "mutable", "name": "logBPTPrice", "nodeType": "VariableDeclaration", "scope": 1925, "src": "26585:18:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 1864, "name": "int256", "nodeType": "ElementaryTypeName", "src": "26585:6:5", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 1876, "initialValue": {"arguments": [{"id": 1868, "name": "balanceToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1833, "src": "26658:13:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1869, "name": "virtualParam0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1837, "src": "26689:13:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1870, "name": "balanceToken1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1835, "src": "26720:13:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1871, "name": "virtualParam1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1839, "src": "26751:13:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1872, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1843, "src": "26782:8:5", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 1873, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "logTotalSupply", "nodeType": "MemberAccess", "referencedDeclaration": 6603, "src": "26782:23:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_int256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (int256)"}}, "id": 1874, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26782:25:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 1866, "name": "GyroTwoOracleMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6472, "src": "26606:17:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroTwoOracleMath_$6472_$", "typeString": "type(contract GyroTwoOracleMath)"}}, "id": 1867, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcLogBPTPrice", "nodeType": "MemberAccess", "referencedDeclaration": 6471, "src": "26606:34:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_int256_$returns$_t_int256_$", "typeString": "function (uint256,uint256,uint256,uint256,int256) pure returns (int256)"}}, "id": 1875, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26606:215:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "VariableDeclarationStatement", "src": "26585:236:5"}, {"assignments": [1878], "declarations": [{"constant": false, "id": 1878, "mutability": "mutable", "name": "oracleCurrentIndex", "nodeType": "VariableDeclaration", "scope": 1925, "src": "26836:26:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1877, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26836:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1882, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1879, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1843, "src": "26865:8:5", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 1880, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "oracleIndex", "nodeType": "MemberAccess", "referencedDeclaration": 6631, "src": "26865:20:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (uint256)"}}, "id": 1881, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26865:22:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "26836:51:5"}, {"assignments": [1884], "declarations": [{"constant": false, "id": 1884, "mutability": "mutable", "name": "oracleCurrentSampleInitialTimestamp", "nodeType": "VariableDeclaration", "scope": 1925, "src": "26901:43:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1883, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26901:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1888, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1885, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1843, "src": "26947:8:5", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 1886, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "oracleSampleCreationTimestamp", "nodeType": "MemberAccess", "referencedDeclaration": 6617, "src": "26947:38:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (uint256)"}}, "id": 1887, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26947:40:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "26901:86:5"}, {"assignments": [1890], "declarations": [{"constant": false, "id": 1890, "mutability": "mutable", "name": "oracleUpdatedIndex", "nodeType": "VariableDeclaration", "scope": 1925, "src": "27001:26:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1889, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27001:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1900, "initialValue": {"arguments": [{"id": 1892, "name": "oracleCurrentSampleInitialTimestamp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1884, "src": "27065:35:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1893, "name": "oracleCurrentIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1878, "src": "27118:18:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1894, "name": "logSpotPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1855, "src": "27154:12:5", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 1895, "name": "logBPTPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1865, "src": "27184:11:5", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1896, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1843, "src": "27213:8:5", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 1897, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "logInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 6589, "src": "27213:21:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_int256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (int256)"}}, "id": 1898, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27213:23:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "id": 1891, "name": "_processPriceData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11304, "src": "27030:17:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_int256_$_t_int256_$_t_int256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,int256,int256,int256) returns (uint256)"}}, "id": 1899, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27030:220:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "27001:249:5"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1903, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1901, "name": "oracleCurrentIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1878, "src": "27269:18:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"id": 1902, "name": "oracleUpdatedIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1890, "src": "27291:18:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "27269:40:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1924, "nodeType": "IfStatement", "src": "27265:310:5", "trueBody": {"id": 1923, "nodeType": "Block", "src": "27311:264:5", "statements": [{"expression": {"id": 1909, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1904, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1843, "src": "27381:8:5", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1907, "name": "oracleUpdatedIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1890, "src": "27416:18:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1905, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1843, "src": "27392:8:5", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 1906, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "setOracleIndex", "nodeType": "MemberAccess", "referencedDeclaration": 6727, "src": "27392:23:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_bytes32_$", "typeString": "function (bytes32,uint256) pure returns (bytes32)"}}, "id": 1908, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27392:43:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "27381:54:5", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 1910, "nodeType": "ExpressionStatement", "src": "27381:54:5"}, {"expression": {"id": 1917, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1911, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1843, "src": "27453:8:5", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 1914, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "27506:5:5", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 1915, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "27506:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1912, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1843, "src": "27464:8:5", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 1913, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "setOracleSampleCreationTimestamp", "nodeType": "MemberAccess", "referencedDeclaration": 6710, "src": "27464:41:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_bytes32_$", "typeString": "function (bytes32,uint256) pure returns (bytes32)"}}, "id": 1916, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27464:58:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "27453:69:5", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 1918, "nodeType": "ExpressionStatement", "src": "27453:69:5"}, {"expression": {"id": 1921, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1919, "name": "_miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4047, "src": "27540:9:5", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 1920, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1843, "src": "27552:8:5", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "27540:20:5", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 1922, "nodeType": "ExpressionStatement", "src": "27540:20:5"}]}}]}}]}, "documentation": {"id": 1829, "nodeType": "StructuredDocumentation", "src": "25794:333:5", "text": " @dev Updates the Price Oracle based on the Pool's current state (balances, BPT supply and invariant). Must be\n called on *all* state-changing functions with the balances *before* the state change happens, and with\n `lastChangeBlock` as the number of the block in which any of the balances last changed."}, "id": 1928, "implemented": true, "kind": "function", "modifiers": [], "name": "_updateOracle", "nodeType": "FunctionDefinition", "parameters": {"id": 1840, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1831, "mutability": "mutable", "name": "lastChangeBlock", "nodeType": "VariableDeclaration", "scope": 1928, "src": "26164:23:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1830, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26164:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1833, "mutability": "mutable", "name": "balanceToken0", "nodeType": "VariableDeclaration", "scope": 1928, "src": "26197:21:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1832, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26197:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1835, "mutability": "mutable", "name": "balanceToken1", "nodeType": "VariableDeclaration", "scope": 1928, "src": "26228:21:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1834, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26228:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1837, "mutability": "mutable", "name": "virtualParam0", "nodeType": "VariableDeclaration", "scope": 1928, "src": "26259:21:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1836, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26259:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1839, "mutability": "mutable", "name": "virtualParam1", "nodeType": "VariableDeclaration", "scope": 1928, "src": "26290:21:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1838, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26290:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "26154:163:5"}, "returnParameters": {"id": 1841, "nodeType": "ParameterList", "parameters": [], "src": "26327:0:5"}, "scope": 1941, "src": "26132:1459:5", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [5764], "body": {"id": 1939, "nodeType": "Block", "src": "28018:30:5", "statements": []}, "documentation": {"id": 1929, "nodeType": "StructuredDocumentation", "src": "27597:274:5", "text": " @dev this variant of the function, called from `onJoinPool()` and `onExitPool()`, which we inherit, is a no-op. We instead have moved responsibility for updating the oracle to `_onJoinPool()` and `_onExitPool()` and the above version is called from there."}, "id": 1940, "implemented": true, "kind": "function", "modifiers": [], "name": "_updateOracle", "nodeType": "FunctionDefinition", "overrides": {"id": 1937, "nodeType": "OverrideSpecifier", "overrides": [], "src": "28009:8:5"}, "parameters": {"id": 1936, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1931, "mutability": "mutable", "name": "lastChangeBlock", "nodeType": "VariableDeclaration", "scope": 1940, "src": "27908:23:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1930, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27908:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1933, "mutability": "mutable", "name": "balanceToken0", "nodeType": "VariableDeclaration", "scope": 1940, "src": "27941:21:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1932, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27941:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1935, "mutability": "mutable", "name": "balanceToken1", "nodeType": "VariableDeclaration", "scope": 1940, "src": "27972:21:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1934, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27972:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "27898:101:5"}, "returnParameters": {"id": 1938, "nodeType": "ParameterList", "parameters": [], "src": "28018:0:5"}, "scope": 1941, "src": "27876:172:5", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}], "scope": 1942, "src": "1296:26754:5"}], "src": "688:27363:5"}, "bytecode": "", "bytecodeSha1": "1410f8370becdd4b50876056170d1dbe4bf9f2d2", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": false, "runs": 200}, "version": "0.7.1+commit.f4a555be"}, "contractName": "GyroTwoPool", "coverageMap": {"branches": {"0": {"CappedLiquidity._ensureCap": {"469": [1653, 1706, true], "470": [1744, 1795, true]}, "CappedLiquidity.setCapParams": {"467": [1195, 1219, true], "468": [1255, 1276, true]}}, "1": {"ExtensibleWeightedPool2Tokens._cacheInvariantAndSupply": {"474": [34813, 34837, false]}, "ExtensibleWeightedPool2Tokens._normalizedWeights": {"477": [9294, 9300, true]}, "ExtensibleWeightedPool2Tokens._queryAction": {"476": [44584, 44611, false]}, "ExtensibleWeightedPool2Tokens._scalingFactor": {"475": [41160, 41166, true]}, "ExtensibleWeightedPool2Tokens.enableOracle": {"471": [8371, 8388, false]}, "ExtensibleWeightedPool2Tokens.onExitPool": {"472": [25190, 25204, false]}, "ExtensibleWeightedPool2Tokens.onJoinPool": {"473": [14350, 14368, false]}}, "10": {}, "11": {"GyroPoolMath._calcProtocolFees": {"485": [5695, 5732, false]}, "GyroPoolMath._intLog2Halved": {"504": [10540, 10553, false], "505": [10623, 10635, false], "506": [10704, 10716, false], "507": [10785, 10797, false], "508": [10865, 10876, false], "509": [10943, 10954, false], "510": [11021, 11032, false]}, "GyroPoolMath._makeInitialGuess": {"486": [8916, 8939, false], "487": [9061, 9072, false], "488": [9145, 9157, false], "489": [9220, 9232, false], "490": [9305, 9317, false], "491": [9380, 9392, false], "492": [9465, 9477, false], "493": [9540, 9552, false], "494": [9625, 9637, false], "495": [9700, 9712, false], "496": [9784, 9797, false], "497": [9860, 9873, false], "498": [9945, 9958, false], "499": [10021, 10034, false], "500": [10106, 10119, false], "501": [10182, 10195, false], "502": [10267, 10280, false], "503": [10343, 10356, false]}, "GyroPoolMath._sqrt": {"482": [7350, 7360, false], "483": [8091, 8140, false], "484": [8144, 8193, true]}, "GyroPoolMath.liquidityInvariantUpdate": {"481": [11711, 11724, false]}}, "13": {"BalancerPoolToken.allowance": {"465": [2364, 2394, false]}, "BalancerPoolToken.decreaseAllowance": {"464": [3611, 3637, false]}, "BalancerPoolToken.transferFrom": {"462": [3030, 3050, false], "463": [3054, 3085, false]}}, "16": {"BasePoolAuthorization._canPerform": {"466": [2112, 2140, false]}}, "19": {}, "2": {}, "20": {}, "21": {}, "22": {"PoolPriceOracle._processPriceData": {"530": [6576, 6585, true]}, "PoolPriceOracle.dirtyUninitializedOracleSamples": {"529": [3899, 3927, false]}}, "23": {}, "24": {}, "26": {}, "28": {}, "29": {}, "3": {}, "30": {}, "31": {}, "34": {}, "35": {}, "36": {}, "37": {"InputHelpers.ensureArrayIsSorted": {"511": [1496, 1512, false]}}, "38": {"LogCompression.toLowResLog": {"512": [2209, 2215, true]}}, "39": {"TemporarilyPausable._setPaused": {"531": [3849, 3855, false]}}, "4": {}, "40": {"WordCodec.decodeInt22": {"533": [12558, 12577, true]}, "WordCodec.decodeInt53": {"534": [13167, 13186, true]}, "WordCodec.insertBool": {"532": [3342, 3347, true]}}, "41": {"FixedPoint.divDown": {"478": [2619, 2625, false]}, "FixedPoint.divUp": {"480": [2978, 2984, false]}, "FixedPoint.mulUp": {"479": [2046, 2058, false]}}, "42": {"LogExpMath._ln": {"515": [14218, 14228, false], "516": [15949, 15965, false], "517": [16073, 16089, false], "518": [16469, 16476, false], "519": [16561, 16568, false], "520": [16653, 16660, false], "521": [16745, 16752, false], "522": [16837, 16844, false], "523": [16929, 16936, false], "524": [17021, 17028, false], "525": [17113, 17120, false], "526": [17205, 17213, false], "527": [17300, 17308, false]}, "LogExpMath.ln": {"513": [13889, 13910, false], "514": [13914, 13935, false]}}, "43": {"Math.divUp": {"528": [2443, 2449, false]}}, "44": {}, "45": {}, "46": {}, "47": {}, "48": {}, "49": {}, "5": {"GyroTwoPool._calculateCurrentValues": {"446": [9576, 9591, true], "447": [9650, 9665, true], "448": [9983, 9998, true], "449": [10062, 10077, true]}, "GyroTwoPool._doExit": {"455": [21139, 21200, false]}, "GyroTwoPool._doJoin": {"457": [15843, 15908, false]}, "GyroTwoPool._getDueProtocolFeeAmounts": {"459": [24395, 24419, false]}, "GyroTwoPool._onExitPool": {"450": [18519, 18533, false]}, "GyroTwoPool._onJoinPool": {"451": [14664, 14685, false]}, "GyroTwoPool._payFeesBpt": {"460": [25060, 25072, false], "461": [25194, 25210, false]}, "GyroTwoPool._sqrtParameters": {"456": [2840, 2850, true]}, "GyroTwoPool._updateOracle": {"452": [26379, 26403, false], "453": [26407, 26437, false], "454": [27269, 27309, false]}, "GyroTwoPool._virtualParameters": {"458": [4010, 4020, true]}, "GyroTwoPool.onSwap": {"441": [5769, 5784, true], "442": [5833, 5848, true], "443": [5897, 5912, true], "444": [5961, 5976, true], "445": [6036, 6076, false]}}, "50": {}, "51": {}, "52": {}, "53": {}, "54": {}, "55": {}, "56": {}, "57": {}, "58": {}, "8": {}, "9": {}}, "statements": {"0": {"CappedLiquidity._ensureCap": {"272": [1645, 1726], "273": [1736, 1814]}, "CappedLiquidity.capParams": {"26": [1082, 1099]}, "CappedLiquidity.setCapParams": {"54": [1187, 1237], "55": [1247, 1288], "56": [1299, 1340], "57": [1350, 1397], "58": [1407, 1446]}}, "1": {"ExtensibleWeightedPool2Tokens._cacheInvariantAndSupply": {"136": [34853, 34932], "137": [34946, 35026], "138": [35040, 35060]}, "ExtensibleWeightedPool2Tokens._downscaleDown": {"209": [42212, 42254]}, "ExtensibleWeightedPool2Tokens._downscaleDownArray": {"169": [42533, 42592], "170": [42602, 42662]}, "ExtensibleWeightedPool2Tokens._downscaleUp": {"211": [42974, 43014]}, "ExtensibleWeightedPool2Tokens._downscaleUpArray": {"198": [43289, 43346], "199": [43356, 43414]}, "ExtensibleWeightedPool2Tokens._getAuthorizer": {"217": [43875, 43908]}, "ExtensibleWeightedPool2Tokens._getOracleIndex": {"125": [35161, 35191]}, "ExtensibleWeightedPool2Tokens._isOwnerOnlyAction": {"305": [7680, 7850]}, "ExtensibleWeightedPool2Tokens._normalizedWeights": {"227": [9044, 9091], "228": [9101, 9149], "229": [9159, 9183], "304": [9287, 9342]}, "ExtensibleWeightedPool2Tokens._queryAction": {"171": [48785, 48808], "172": [49117, 49146]}, "ExtensibleWeightedPool2Tokens._scalingFactor": {"148": [41153, 41202]}, "ExtensibleWeightedPool2Tokens._setOracleEnabled": {"134": [8513, 8560], "135": [8570, 8604]}, "ExtensibleWeightedPool2Tokens._setSwapFeePercentage": {"142": [7251, 7338], "143": [7348, 7435], "144": [7446, 7507], "145": [7517, 7565]}, "ExtensibleWeightedPool2Tokens._upscale": {"149": [41470, 41508]}, "ExtensibleWeightedPool2Tokens._upscaleArray": {"190": [41775, 41830], "191": [41840, 41896]}, "ExtensibleWeightedPool2Tokens.enableOracle": {"15": [8258, 8281], "16": [8404, 8430]}, "ExtensibleWeightedPool2Tokens.getLastInvariant": {"68": [9425, 9446]}, "ExtensibleWeightedPool2Tokens.getMiscData": {"30": [6460, 6498], "31": [6508, 6550], "32": [6560, 6632], "33": [6642, 6678], "34": [6688, 6728], "35": [6738, 6786]}, "ExtensibleWeightedPool2Tokens.getNormalizedWeights": {"106": [8852, 8879]}, "ExtensibleWeightedPool2Tokens.getPoolId": {"23": [6078, 6092]}, "ExtensibleWeightedPool2Tokens.getRate": {"41": [40271, 40328]}, "ExtensibleWeightedPool2Tokens.getSwapFeePercentage": {"36": [6871, 6907]}, "ExtensibleWeightedPool2Tokens.onExitPool": {"48": [24219, 24242], "49": [24726, 24762], "50": [24874, 24905], "51": [24915, 24957], "52": [25220, 25246], "53": [25267, 25309]}, "ExtensibleWeightedPool2Tokens.onJoinPool": {"91": [14384, 14466], "92": [14761, 14819], "93": [14833, 14874], "94": [14888, 14943], "95": [15030, 15058], "96": [15148, 15188], "97": [15219, 15242], "98": [15319, 15375], "99": [15390, 15669], "100": [15783, 15823], "101": [15910, 15938], "102": [16037, 16079], "103": [16241, 16267]}, "ExtensibleWeightedPool2Tokens.queryExit": {"37": [37674, 37729], "38": [37740, 37995]}, "ExtensibleWeightedPool2Tokens.queryJoin": {"61": [36165, 36220], "62": [36231, 36484]}, "ExtensibleWeightedPool2Tokens.setPaused": {"3": [8738, 8756]}, "ExtensibleWeightedPool2Tokens.setSwapFeePercentage": {"22": [7122, 7162]}}, "10": {}, "11": {"GyroPoolMath._calcAllTokensInGivenExactBptOut": {"404": [2655, 2697], "405": [2767, 2823], "406": [2748, 2751]}, "GyroPoolMath._calcProtocolFees": {"397": [6110, 6123], "398": [7108, 7139]}, "GyroPoolMath._calcTokensOutGivenExactBptIn": {"400": [4187, 4230], "401": [4300, 4360], "402": [4281, 4284]}, "GyroPoolMath._intLog2Halved": {"427": [10569, 10578], "428": [10592, 10599], "429": [10651, 10659], "430": [10673, 10680], "431": [10732, 10740], "432": [10754, 10761], "433": [10813, 10821], "434": [10835, 10841], "435": [10892, 10899], "436": [10913, 10919], "437": [10970, 10977], "438": [10991, 10997], "439": [11048, 11055], "440": [11069, 11075]}, "GyroPoolMath._makeInitialGuess": {"408": [8955, 9026], "409": [9092, 9113], "410": [9177, 9188], "411": [9252, 9273], "412": [9337, 9348], "413": [9412, 9433], "414": [9497, 9508], "415": [9572, 9593], "416": [9657, 9668], "417": [9732, 9752], "418": [9817, 9828], "419": [9893, 9913], "420": [9978, 9989], "421": [10054, 10074], "422": [10139, 10150], "423": [10215, 10235], "424": [10300, 10311], "425": [10376, 10396], "426": [10424, 10436]}, "GyroPoolMath._sqrt": {"329": [7376, 7384], "330": [7480, 7536], "331": [7546, 7602], "332": [7612, 7668], "333": [7678, 7734], "334": [7744, 7800], "335": [7810, 7866], "336": [7876, 7932], "337": [8083, 8210], "338": [8221, 8233]}, "GyroPoolMath.liquidityInvariantUpdate": {"254": [11898, 11932], "255": [12148, 12182]}}, "13": {"BalancerPoolToken._burnPoolTokens": {"192": [4092, 4113]}, "BalancerPoolToken._mintPoolTokens": {"225": [3979, 4003]}, "BalancerPoolToken.allowance": {"104": [2410, 2428], "105": [2459, 2497]}, "BalancerPoolToken.decreaseAllowance": {"77": [3653, 3685], "78": [3772, 3828], "79": [3849, 3860]}, "BalancerPoolToken.getVault": {"64": [1938, 1951]}, "BalancerPoolToken.transferFrom": {"11": [2867, 2968], "12": [2979, 3015], "13": [3218, 3273], "14": [3294, 3305]}}, "16": {"BasePoolAuthorization._canPerform": {"234": [2251, 2282], "235": [2428, 2496]}, "BasePoolAuthorization.getAuthorizer": {"82": [1933, 1956]}, "BasePoolAuthorization.getOwner": {"63": [1836, 1849]}}, "19": {}, "2": {}, "20": {}, "21": {"Buffer.add": {"407": [1504, 1534]}, "Buffer.next": {"326": [1276, 1296]}}, "22": {"PoolPriceOracle._getPastAccumulator": {"187": [6913, 6991]}, "PoolPriceOracle._getSample": {"173": [7580, 7602]}, "PoolPriceOracle._processPriceData": {"279": [6562, 6620], "280": [6675, 6705], "281": [6716, 6734]}, "PoolPriceOracle.dirtyUninitializedOracleSamples": {"18": [3512, 3592], "19": [3947, 3971], "20": [3876, 3879]}, "PoolPriceOracle.getLargestSafeQueryWindow": {"107": [4117, 4132]}, "PoolPriceOracle.getLatest": {"83": [4234, 4310]}, "PoolPriceOracle.getPastAccumulators": {"42": [4935, 4973], "43": [5137, 5155], "44": [5169, 5241], "45": [5118, 5121]}, "PoolPriceOracle.getSample": {"39": [2874, 2932], "40": [2987, 3009]}, "PoolPriceOracle.getTimeWeightedAverage": {"8": [4496, 4535], "9": [4654, 4739], "10": [4635, 4638]}, "PoolPriceOracle.getTotalSamples": {"84": [3100, 3118]}}, "23": {}, "24": {"Samples._accLogBptPrice": {"261": [6629, 6681]}, "Samples._accLogInvariant": {"263": [7116, 7168]}, "Samples._accLogPairPrice": {"259": [6143, 6196]}, "Samples._instLogBptPrice": {"260": [6388, 6441]}, "Samples._instLogInvariant": {"262": [6874, 6927]}, "Samples._instLogPairPrice": {"258": [5899, 5953]}, "Samples.pack": {"139": [7553, 8032]}, "Samples.timestamp": {"140": [5660, 5705]}, "Samples.unpack": {"174": [8468, 8508], "175": [8518, 8560], "176": [8570, 8608], "177": [8618, 8658], "178": [8668, 8708], "179": [8718, 8760], "180": [8770, 8800]}, "Samples.update": {"325": [4143, 4413]}}, "26": {}, "28": {"WeightedPool2TokensMiscData.logInvariant": {"155": [2316, 2362]}, "WeightedPool2TokensMiscData.logTotalSupply": {"156": [2532, 2581]}, "WeightedPool2TokensMiscData.oracleEnabled": {"159": [3221, 3267]}, "WeightedPool2TokensMiscData.oracleIndex": {"158": [3019, 3065]}, "WeightedPool2TokensMiscData.oracleSampleCreationTimestamp": {"157": [2786, 2852]}, "WeightedPool2TokensMiscData.setLogInvariant": {"239": [3697, 3758]}, "WeightedPool2TokensMiscData.setLogTotalSupply": {"240": [3985, 4051]}, "WeightedPool2TokensMiscData.setOracleEnabled": {"109": [4911, 4973]}, "WeightedPool2TokensMiscData.setOracleIndex": {"282": [4636, 4696]}, "WeightedPool2TokensMiscData.setOracleSampleCreationTimestamp": {"283": [4322, 4407]}, "WeightedPool2TokensMiscData.setSwapFeePercentage": {"110": [5197, 5270]}, "WeightedPool2TokensMiscData.swapFeePercentage": {"160": [3424, 3477]}}, "29": {"WeightedPoolUserDataHelpers.allTokensInForExactBptOut": {"403": [2013, 2086]}, "WeightedPoolUserDataHelpers.exactBptInForTokensOut": {"399": [2448, 2520]}, "WeightedPoolUserDataHelpers.exitKind": {"315": [1126, 1178]}, "WeightedPoolUserDataHelpers.initialAmountsIn": {"299": [1311, 1383]}, "WeightedPoolUserDataHelpers.joinKind": {"298": [964, 1016]}}, "3": {"GyroTwoMath._calcInGivenOut": {"288": [12841, 12912], "289": [12922, 13001], "290": [13378, 13451], "291": [13472, 13547]}, "GyroTwoMath._calcOutGivenIn": {"284": [9922, 9997], "285": [10374, 10450], "286": [10471, 10542], "287": [10615, 10694]}, "GyroTwoMath._calculateInvariant": {"218": [4409, 4455]}, "GyroTwoMath._calculateQuadratic": {"297": [7054, 7096]}, "GyroTwoMath._calculateQuadraticTerms": {"292": [5011, 5062], "293": [5197, 5220], "294": [5234, 5271], "295": [5464, 5546], "296": [5773, 5810]}, "GyroTwoMath._calculateVirtualParameter0": {"395": [13763, 13798]}, "GyroTwoMath._calculateVirtualParameter1": {"394": [14015, 14051]}}, "30": {"Authentication._authenticateCaller": {"117": [2404, 2474]}, "Authentication.getActionId": {"60": [2842, 2910]}}, "31": {"_require": {"126": [946, 964]}}, "34": {}, "35": {}, "36": {}, "37": {"InputHelpers.ensureArrayIsSorted": {"108": [1369, 1402], "230": [1528, 1535], "231": [1689, 1740], "232": [1754, 1772], "233": [1630, 1633]}, "InputHelpers.ensureInputLengthMatch": {"161": [888, 934]}}, "38": {"LogCompression.toLowResLog": {"238": [2298, 2342]}}, "39": {"TemporarilyPausable._ensureNotPaused": {"133": [4272, 4311]}, "TemporarilyPausable._getBufferPeriodEndTime": {"124": [5084, 5111]}, "TemporarilyPausable._getPauseWindowEndTime": {"123": [4969, 4995]}, "TemporarilyPausable._isNotPaused": {"122": [4712, 4774]}, "TemporarilyPausable._setPaused": {"118": [3871, 3952], "119": [3983, 4066], "120": [4087, 4103], "121": [4113, 4144]}, "TemporarilyPausable.getPausedState": {"5": [3374, 3398], "6": [3408, 3453], "7": [3463, 3510]}}, "4": {"GyroTwoOracleMath._calcLogBPTPrice": {"278": [5362, 5406]}, "GyroTwoOracleMath._calcLogSpotPrice": {"277": [3405, 3449]}, "GyroTwoOracleMath._calcSpotPrice": {"324": [1966, 2137]}}, "40": {"WordCodec.decodeBool": {"249": [9819, 9866]}, "WordCodec.decodeInt22": {"247": [12551, 12615]}, "WordCodec.decodeInt53": {"321": [13160, 13224]}, "WordCodec.decodeUint10": {"248": [10628, 10669]}, "WordCodec.decodeUint31": {"244": [11156, 11197]}, "WordCodec.decodeUint64": {"250": [11684, 11725]}, "WordCodec.encodeInt22": {"243": [9118, 9171]}, "WordCodec.encodeInt53": {"242": [9547, 9600]}, "WordCodec.encodeUint": {"241": [8696, 8727]}, "WordCodec.insertBool": {"113": [3305, 3367]}, "WordCodec.insertInt22": {"309": [7697, 7764]}, "WordCodec.insertUint10": {"327": [4969, 5014]}, "WordCodec.insertUint31": {"328": [6012, 6057]}, "WordCodec.insertUint64": {"114": [7104, 7149]}}, "41": {"FixedPoint.add": {"317": [1334, 1371], "318": [1381, 1389]}, "FixedPoint.complement": {"212": [4885, 4917]}, "FixedPoint.divDown": {"183": [2566, 2604], "184": [2641, 2649], "185": [2721, 2772], "186": [2803, 2823]}, "FixedPoint.divUp": {"213": [2925, 2963], "214": [3000, 3008], "215": [3080, 3131], "216": [3479, 3511]}, "FixedPoint.mulDown": {"319": [1761, 1818], "320": [1829, 1849]}, "FixedPoint.mulUp": {"203": [1974, 2031], "204": [2074, 2082], "205": [2430, 2462]}, "FixedPoint.sub": {"206": [1552, 1589], "207": [1626, 1634]}}, "42": {"LogExpMath._ln": {"355": [14549, 14585], "356": [15981, 15988], "357": [16039, 16048], "358": [16105, 16112], "359": [16163, 16172], "360": [16314, 16324], "361": [16334, 16342], "362": [16492, 16513], "363": [16527, 16536], "364": [16584, 16605], "365": [16619, 16628], "366": [16676, 16697], "367": [16711, 16720], "368": [16768, 16789], "369": [16803, 16812], "370": [16860, 16881], "371": [16895, 16904], "372": [16952, 16973], "373": [16987, 16996], "374": [17044, 17065], "375": [17079, 17088], "376": [17136, 17157], "377": [17171, 17180], "378": [17229, 17251], "379": [17265, 17275], "380": [17324, 17346], "381": [17360, 17370], "382": [18279, 18311], "383": [18321, 18341], "384": [18352, 18384], "385": [18394, 18414], "386": [18425, 18457], "387": [18467, 18487], "388": [18498, 18530], "389": [18540, 18560], "390": [18571, 18603], "391": [18613, 18634], "392": [18793, 18807], "393": [19073, 19103]}, "LogExpMath._ln_36": {"339": [19646, 19657], "340": [20414, 20446], "341": [20456, 20476], "342": [20487, 20519], "343": [20529, 20549], "344": [20560, 20592], "345": [20602, 20622], "346": [20633, 20665], "347": [20675, 20695], "348": [20706, 20738], "349": [20748, 20769], "350": [20780, 20812], "351": [20822, 20843], "352": [20854, 20886], "353": [20896, 20917], "354": [21063, 21083]}, "LogExpMath.ln": {"306": [13838, 13875], "307": [13951, 13976], "308": [14007, 14020]}}, "43": {"Math.divDown": {"256": [2238, 2276], "257": [2286, 2298]}, "Math.divUp": {"274": [2390, 2428], "275": [2465, 2473], "276": [2504, 2526]}, "Math.mul": {"181": [1897, 1948], "182": [1958, 1966]}, "Math.sub": {"111": [1025, 1062], "112": [1099, 1107]}}, "44": {}, "45": {"EIP712._domainSeparatorV4": {"141": [2466, 2567]}, "EIP712._hashTypedDataV4": {"219": [3295, 3375]}}, "46": {"ERC20._approve": {"115": [9468, 9504], "116": [9514, 9551]}, "ERC20._burn": {"265": [8587, 8655], "266": [8666, 8715], "267": [8726, 8814], "268": [8824, 8863], "269": [8873, 8915]}, "ERC20._mint": {"300": [7973, 8022], "301": [8033, 8072], "302": [8082, 8133], "303": [8143, 8185]}, "ERC20._transfer": {"127": [7195, 7266], "128": [7276, 7348], "129": [7359, 7406], "130": [7417, 7505], "131": [7515, 7570], "132": [7580, 7620]}, "ERC20.allowance": {"226": [3993, 4027]}, "ERC20.approve": {"1": [4271, 4308], "2": [4318, 4329]}, "ERC20.balanceOf": {"47": [3422, 3447]}, "ERC20.decimals": {"17": [3098, 3114]}, "ERC20.increaseAllowance": {"24": [5688, 5767], "25": [5777, 5788]}, "ERC20.name": {"0": [2200, 2212]}, "ERC20.symbol": {"67": [2396, 2410]}, "ERC20.totalSupply": {"4": [3253, 3272]}, "ERC20.transfer": {"80": [3759, 3799], "81": [3809, 3820]}}, "47": {"ERC20Permit.DOMAIN_SEPARATOR": {"21": [2438, 2465]}, "ERC20Permit.nonces": {"59": [2207, 2228]}, "ERC20Permit.permit": {"87": [1575, 1635], "88": [1902, 1981], "89": [1992, 2018], "90": [2028, 2059]}}, "48": {}, "49": {}, "5": {"GyroTwoPool._calculateCurrentValues": {"150": [9562, 9626], "151": [9636, 9700], "152": [9770, 9860], "153": [9966, 10034], "154": [10044, 10113]}, "GyroTwoPool._distributeFees": {"251": [23103, 23165]}, "GyroTwoPool._doExit": {"252": [21216, 21291], "253": [21322, 21357]}, "GyroTwoPool._doJoin": {"270": [15924, 16002], "271": [16033, 16068]}, "GyroTwoPool._exitExactBPTInForTokensOut": {"316": [22269, 22301]}, "GyroTwoPool._getDueProtocolFeeAmounts": {"311": [24435, 24475], "312": [24780, 24838]}, "GyroTwoPool._getFeesMetadata": {"396": [25474, 25781]}, "GyroTwoPool._getVirtualParameters": {"245": [3624, 3697], "246": [3707, 3781]}, "GyroTwoPool._joinAllTokensInForExactBPTOut": {"323": [16580, 16612]}, "GyroTwoPool._onExitPool": {"162": [19138, 19228], "163": [19243, 19281], "164": [19296, 19351], "165": [19809, 19921], "166": [20152, 20207], "167": [20552, 20586], "168": [20719, 20769]}, "GyroTwoPool._onInitializePool": {"220": [11238, 11308], "221": [11385, 11441], "222": [11451, 11475], "223": [11928, 11963], "224": [11974, 12006]}, "GyroTwoPool._onJoinPool": {"193": [14419, 14509], "194": [14520, 14558], "195": [14701, 14762], "196": [15206, 15318], "197": [15441, 15491]}, "GyroTwoPool._onSwapGivenIn": {"208": [7788, 7922]}, "GyroTwoPool._onSwapGivenOut": {"210": [8261, 8395]}, "GyroTwoPool._payFeesBpt": {"313": [25088, 25127], "314": [25226, 25268]}, "GyroTwoPool._sqrtParameters": {"188": [2595, 2639], "189": [2649, 2694], "264": [2833, 2875]}, "GyroTwoPool._updateOracle": {"200": [27381, 27435], "201": [27453, 27522], "202": [27540, 27560]}, "GyroTwoPool._virtualParameters": {"310": [3991, 4184]}, "GyroTwoPool.calculateCurrentValues": {"27": [8867, 8930], "28": [8940, 9006], "29": [9016, 9096]}, "GyroTwoPool.getInvariant": {"85": [4602, 4625], "86": [4636, 4714]}, "GyroTwoPool.getSqrtParameters": {"46": [2453, 2477]}, "GyroTwoPool.getVirtualParameters": {"65": [3288, 3311], "66": [3321, 3417]}, "GyroTwoPool.onSwap": {"69": [5211, 5274], "70": [5284, 5350], "71": [5705, 6021], "72": [6459, 6537], "73": [6748, 6803], "74": [6834, 6898], "75": [7107, 7162], "76": [7382, 7440]}}, "50": {"SafeMath.add": {"146": [1019, 1056], "147": [1067, 1075]}, "SafeMath.sub": {"236": [1861, 1888], "237": [1926, 1934], "322": [1430, 1467]}}, "51": {}, "52": {}, "53": {}, "54": {}, "55": {}, "56": {}, "57": {}, "58": {}, "8": {}, "9": {}}}, "dependencies": ["Authentication", "BalancerPoolToken", "BasePoolAuthorization", "Buffer", "CappedLiquidity", "EIP712", "ERC20", "ERC20Permit", "Errors", "ExtensibleWeightedPool2Tokens", "FixedPoint", "Gyro2PoolErrors", "GyroConfigKeys", "GyroPoolMath", "GyroTwoMath", "GyroTwoOracleMath", "IAsset", "IAuthentication", "IAuthorizer", "IBasePool", "ICappedLiquidity", "IERC20", "IERC20Permit", "IFlashLoanRecipient", "IGyroConfig", "IMinimalSwapInfoPool", "IPoolPriceOracle", "IPoolSwapStructs", "IPriceOracle", "IProtocolFeesCollector", "ISignaturesValidator", "ITemporarilyPausable", "IVault", "IWETH", "InputHelpers", "LogCompression", "LogExpMath", "Math", "PoolPriceOracle", "QueryProcessor", "SafeMath", "Samples", "TemporarilyPausable", "WeightedMath", "WeightedPool2TokensMiscData", "WeightedPoolUserDataHelpers", "WordCodec"], "deployedBytecode": "608060405234801561001057600080fd5b50600436106102a05760003560e01c8063707dcd1e116101675780639d2c110c116100ce578063c0ff1a1511610087578063c0ff1a15146108b9578063d505accf146108d7578063d5c096c4146108f3578063dd62ed3e14610924578063f89f27ed14610954578063ffd088eb14610972576102a0565b80639d2c110c146107bd578063a457c2d7146107ed578063a9059cbb1461081d578063aaabadc51461084d578063b10be7391461086b578063b48b5b401461089b576102a0565b806387ec68171161012057806387ec6817146106f6578063893d20e8146107275780638d928af8146107455780638dd9f89d1461076357806395d89b41146107815780639b02cdde1461079f576102a0565b8063707dcd1e146105fb57806370a082311461061957806374f3b0091461064957806376e54a461461067a5780637ecebe0014610696578063851c1bb3146106c6576102a0565b806338fff2d01161020b57806355c67628116101c457806355c676281461050a5780636028bfd41461052857806360d1507c14610559578063679aefce1461058f5780636b843239146105ad5780636d785a87146105dd576102a0565b806338fff2d01461042b57806339509351146104495780633aeae0d3146104795780633c4dd5bb1461049757806344bbdb55146104c95780634a6b0b15146104e7576102a0565b806323b872dd1161025d57806323b872dd1461037d578063292c914a146103ad578063313ce567146103b75780633331bc36146103d55780633644e515146103f157806338e9922e1461040f576102a0565b806306fdde03146102a5578063095ea7b3146102c357806316c38b3c146102f357806318160ddd1461030f5780631c0de0511461032d5780631dccd8301461034d575b600080fd5b6102ad610990565b6040516102ba9190617617565b60405180910390f35b6102dd60048036038101906102d89190616805565b610a32565b6040516102ea91906172a6565b60405180910390f35b61030d60048036038101906103089190616942565b610a49565b005b610317610a5d565b6040516103249190617674565b60405180910390f35b610335610a67565b604051610344939291906172c1565b60405180910390f35b61036760048036038101906103629190616901565b610a90565b604051610374919061724d565b60405180910390f35b61039760048036038101906103929190616718565b610bbd565b6040516103a491906172a6565b60405180910390f35b6103b5610c97565b005b6103bf610ccc565b6040516103cc91906176f6565b60405180910390f35b6103ef60048036038101906103ea9190616d06565b610ce3565b005b6103f9610d73565b60405161040691906172f8565b60405180910390f35b61042960048036038101906104249190616cb4565b610d82565b005b610433610d9e565b60405161044091906172f8565b60405180910390f35b610463600480360381019061045e9190616805565b610dc6565b60405161047091906172a6565b60405180910390f35b610481610e6b565b60405161048e9190617659565b60405180910390f35b6104b160048036038101906104ac9190616d42565b610f31565b6040516104c0939291906176bf565b60405180910390f35b6104d1610f84565b6040516104de919061745e565b60405180910390f35b6104ef610faa565b60405161050196959493929190617503565b60405180910390f35b610512611005565b60405161051f9190617674565b60405180910390f35b610542600480360381019061053d9190616994565b611017565b60405161055092919061768f565b60405180910390f35b610573600480360381019061056e9190616cb4565b611048565b6040516105869796959493929190617494565b60405180910390f35b610597611093565b6040516105a49190617674565b60405180910390f35b6105c760048036038101906105c291906168c0565b6110c5565b6040516105d49190617210565b60405180910390f35b6105e5611185565b6040516105f291906171f5565b60405180910390f35b6106036111ab565b6040516106109190617232565b60405180910390f35b610633600480360381019061062e919061668a565b6111c0565b6040516106409190617674565b60405180910390f35b610663600480360381019061065e9190616994565b611208565b60405161067192919061726f565b60405180910390f35b610694600480360381019061068f9190616c24565b6112cc565b005b6106b060048036038101906106ab919061668a565b6114c2565b6040516106bd9190617674565b60405180910390f35b6106e060048036038101906106db9190616a62565b61150b565b6040516106ed91906172f8565b60405180910390f35b610710600480360381019061070b9190616994565b61155d565b60405161071e92919061768f565b60405180910390f35b61072f61158e565b60405161073c91906171f5565b60405180910390f35b61074d6115b6565b60405161075a9190617479565b60405180910390f35b61076b6115de565b604051610778919061724d565b60405180910390f35b6107896116f7565b6040516107969190617617565b60405180910390f35b6107a7611799565b6040516107b49190617674565b60405180910390f35b6107d760048036038101906107d29190616c4d565b6117a3565b6040516107e49190617674565b60405180910390f35b61080760048036038101906108029190616805565b6119e8565b60405161081491906172a6565b60405180910390f35b61083760048036038101906108329190616805565b611a28565b60405161084491906172a6565b60405180910390f35b610855611a3f565b6040516108629190617443565b60405180910390f35b61088560048036038101906108809190616bd2565b611a4e565b6040516108929190617674565b60405180910390f35b6108a3611aea565b6040516108b09190617674565b60405180910390f35b6108c1611af4565b6040516108ce9190617674565b60405180910390f35b6108f160048036038101906108ec9190616767565b611be7565b005b61090d60048036038101906109089190616994565b611dc0565b60405161091b92919061726f565b60405180910390f35b61093e600480360381019061093991906166dc565b611f56565b60405161094b9190617674565b60405180910390f35b61095c611fce565b604051610969919061724d565b60405180910390f35b61097a611fdd565b6040516109879190617674565b60405180910390f35b606060038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a285780601f106109fd57610100808354040283529160200191610a28565b820191906000526020600020905b815481529060010190602001808311610a0b57829003601f168201915b5050505050905090565b6000610a3f3384846120bf565b6001905092915050565b610a516121aa565b610a5a816121f3565b50565b6000600254905090565b6000806000610a7461227d565b159250610a7f6122a6565b9150610a896122ce565b9050909192565b6060815167ffffffffffffffff81118015610aaa57600080fd5b50604051908082528060200260200182016040528015610ad95781602001602082028036833780820191505090505b5090506000610ae66122f6565b905060005b8351811015610bb65773__$85f042f43089d976c21d0d184f206dc395$__6379eaef826008868481518110610b1c57fe5b6020026020010151856040518463ffffffff1660e01b8152600401610b43939291906175e0565b60206040518083038186803b158015610b5b57600080fd5b505af4158015610b6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b939190616cdd565b838281518110610b9f57fe5b602002602001018181525050806001019050610aeb565b5050919050565b600080610bca8533611f56565b9050610c118573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610c095750838210155b61019e612308565b610c1c85858561231b565b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158015610c7857507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114155b15610c8b57610c8a85338584036120bf565b5b60019150509392505050565b610c9f612532565b610ca76121aa565b610cb16001612547565b6000610cbb610a5d565b1115610cca57610cc961259c565b5b565b6000600560009054906101000a900460ff16905090565b610cfe8183108015610cf757506104008211155b6064612308565b6000610d1360016000806000806000806125ff565b905060008390505b82811015610d6d576000610d4160086000848152602001908152602001600020546126a0565b1415610d60578160086000838152602001908152602001600020819055505b8080600101915050610d1b565b50505050565b6000610d7d6126bd565b905090565b610d8a6121aa565b610d92612532565b610d9b8161275a565b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000610e613384610e5c85600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127d890919063ffffffff16565b6120bf565b6001905092915050565b610e73615f8b565b600b6040518060600160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a90046effffffffffffffffffffffffffffff166effffffffffffffffffffffffffffff166effffffffffffffffffffffffffffff1681526020016000820160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681525050905090565b600080600080610f40856127f8565b90506000610f4e86156127f8565b9050610f5a888361284e565b9750610f66878261284e565b9650610f73888888612862565b945094509450505093509350939050565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008060008060006009549050610fc3816129c2565b9650610fce816129df565b9550610fd9816129fc565b9450610fe481612a19565b9350610fef81612a36565b9250610ffa81612a53565b915050909192939495565b6000611012600954612a53565b905090565b6000606061102786516002612a70565b61103c89898989898989612a81612c15612c98565b97509795505050505050565b6000806000806000806000611063610400891061013b612308565b600061106e89612e18565b905061107981612e35565b975097509750975097509750975050919395979092949650565b60006110c06110a0610a5d565b6110b26110ab611af4565b6002612e98565b612ecb90919063ffffffff16565b905090565b6060815167ffffffffffffffff811180156110df57600080fd5b5060405190808252806020026020018201604052801561110e5781602001602082028036833780820191505090505b509050600061111b6122f6565b9050611125615fd1565b60005b845181101561117d5784818151811061113d57fe5b6020026020010151915061115a8260000151848460200151612f2f565b84828151811061116657fe5b602002602001018181525050806001019050611128565b505050919050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6111b3615ff6565b6111bb612fc8565b905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060808861124c6112176115b6565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161460cd612308565b611261611257610d9e565b82146101f4612308565b61126a87613013565b600060608061127e8d8d8d8d8d8d8d612a81565b92509250925061128e8c84613096565b61129782612c15565b6112a081612c15565b6112a861227d565b156112b6576112b561259c565b5b8181955095505050505097509795505050505050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600e81526020017f6e6f7420617574686f72697a656400000000000000000000000000000000000081525090611394576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161138b9190617617565b60405180910390fd5b50600b60000160009054906101000a900460ff166040518060400160405280601081526020017f706f6f6c20697320756e636170706564000000000000000000000000000000008152509061141f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114169190617617565b60405180910390fd5b508060000151600b60000160006101000a81548160ff0219169083151502179055508060200151600b60000160016101000a8154816effffffffffffffffffffffffffffff02191690836effffffffffffffffffffffffffffff1602179055508060400151600b60000160106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555050565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60007f000000000000000000000000000000000000000000000000000000000000000082604051602001611540929190617179565b604051602081830303815290604052805190602001209050919050565b6000606061156d86516002612a70565b611582898989898989896130a4613221612c98565b97509795505050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6060806115e96115b6565b73ffffffffffffffffffffffffffffffffffffffff1663f94d466861160c610d9e565b6040518263ffffffff1660e01b815260040161162891906172f8565b60006040518083038186803b15801561164057600080fd5b505afa158015611654573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061167d9190616841565b5091505061168a81613013565b6116be8160008151811061169a57fe5b6020026020010151826001815181106116af57fe5b60200260200101516001612862565b909150836000815181106116ce57fe5b60200260200101846001815181106116e257fe5b60200260200101828152508281525050505090565b606060048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561178f5780601f106117645761010080835404028352916020019161178f565b820191906000526020600020905b81548152906001019060200180831161177257829003601f168201915b5050505050905090565b6000600a54905090565b60006117ad612532565b83608001516117f26117bd6115b6565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161460cd612308565b6118076117fd610d9e565b82146101f4612308565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16866020015173ffffffffffffffffffffffffffffffffffffffff161490506000611869826127f8565b9050600061187783156127f8565b9050611883878361284e565b965061188f868261284e565b955060008060006118a18a8a88612862565b9250925092506118e88b60a00151876118ba578a6118bc565b8b5b886118c7578c6118c9565b8b5b896118d457846118d6565b855b8a6118e157866118e3565b855b6132a4565b600060018111156118f557fe5b8b60000151600181111561190557fe5b141561198057600061192b611918611005565b8d6060015161336790919063ffffffff16565b905061194d611947828e606001516133c590919063ffffffff16565b8761284e565b8c606001818152505060006119658d8d8d87876133e6565b90506119718187613404565b995050505050505050506119e0565b61198e8b606001518561284e565b8b606001818152505060006119a68c8c8c8686613418565b90506119b28187613436565b90506119d66119c76119c2611005565b61344a565b8261347590919063ffffffff16565b9850505050505050505b509392505050565b6000806119f53385611f56565b9050808310611a0f57611a0a338560006120bf565b611a1d565b611a1c33858584036120bf565b5b600191505092915050565b6000611a3533848461231b565b6001905092915050565b6000611a496134df565b905090565b600073__$85f042f43089d976c21d0d184f206dc395$__630397bee0600884611a756122f6565b6040518463ffffffff1660e01b8152600401611a9393929190617564565b60206040518083038186803b158015611aab57600080fd5b505af4158015611abf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ae39190616cdd565b9050919050565b6000610400905090565b60006060611b006115b6565b73ffffffffffffffffffffffffffffffffffffffff1663f94d4668611b23610d9e565b6040518263ffffffff1660e01b8152600401611b3f91906172f8565b60006040518083038186803b158015611b5757600080fd5b505afa158015611b6b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190611b949190616841565b50915050611ba0615ff6565b611ba8612fc8565b9050611bb382613013565b611be08282600060028110611bc457fe5b602002015183600160028110611bd657fe5b602002015161356b565b9250505090565b611bf58442111560d1612308565b6000600660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060007f0000000000000000000000000000000000000000000000000000000000000000898989858a604051602001611c769695949392919061734a565b6040516020818303038152906040528051906020012090506000611c998261359f565b9050600060018288888860405160008152602001604052604051611cc094939291906173fe565b6020604051602081039080840390855afa158015611ce2573d6000803e3d6000fd5b505050602060405103519050611d61600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614158015611d5957508b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b6101f8612308565b60018401600660008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611db38b8b8b6120bf565b5050505050505050505050565b60608088611e04611dcf6115b6565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161460cd612308565b611e19611e0f610d9e565b82146101f4612308565b611e21612532565b600080611e2c610a5d565b1415611ecc57611e3e8b8b8b886135d8565b8095508192505050611e57620f424082101560cc612308565b611e656000620f424061369c565b611e7489620f4240830361369c565b611e7d84613221565b600267ffffffffffffffff81118015611e9557600080fd5b50604051908082528060200260200182016040528015611ec45781602001602082028036833780820191505090505b509250611f40565b611ed588613013565b611f088789600081518110611ee657fe5b60200260200101518a600181518110611efb57fe5b60200260200101516136aa565b611f178b8b8b8b8b8b8b6130a4565b809550819650829350505050611f2d898261369c565b611f3684613221565b611f3f83612c15565b5b611f4861259c565b505097509795505050505050565b6000611f606115b6565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611fbb577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9050611fc8565b611fc583836136af565b90505b92915050565b6060611fd8613736565b905090565b60006201de20905090565b6060819050611ff6816137d0565b5050565b60006120128260558561205b9092919063ffffffff16565b905092915050565b6000612032826056856120929092919063ffffffff16565b905092915050565b600061204a838311156001612308565b600082840390508091505092915050565b600080826001901b198560001c1660001b9050828461207b57600061207e565b60015b60ff16901b60001b81179150509392505050565b6000808267ffffffffffffffff901b198560001c1660001b90508284901b60001b81179150509392505050565b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161219d9190617674565b60405180910390a3505050565b60006121d96000357fffffffff000000000000000000000000000000000000000000000000000000001661150b565b90506121f06121e8823361386e565b610191612308565b50565b80156122135761220e6122046122a6565b4210610193612308565b612229565b61222861221e6122ce565b42106101a9612308565b5b80600760006101000a81548160ff0219169083151502179055507f9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be648160405161227291906172a6565b60405180910390a150565b60006122876122ce565b4211806122a15750600760009054906101000a900460ff16155b905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000612303600954612a19565b905090565b8161231757612316816139ab565b5b5050565b612357600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610198612308565b612393600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610199612308565b61239e838383613a1b565b6123f3816101a06000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a209092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612486816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127d890919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516125259190617674565b60405180910390a3505050565b61254561253d61227d565b610192612308565b565b61255c81600954611ffa90919063ffffffff16565b6009819055507f3e350b41e86a8e10f804ade6d35340d620be35569cc75ac943e8bb14ab80ead18160405161259191906172a6565b60405180910390a150565b600060095490506125ac81612a36565b156125fc576125ce6125bf600a54613a41565b82613a8b90919063ffffffff16565b90506125f26125e36125de610a5d565b613a41565b82613aab90919063ffffffff16565b9050806009819055505b50565b6000612615600083613acb90919063ffffffff16565b612629601f85613adc90919063ffffffff16565b61263d605487613af690919063ffffffff16565b612651606a89613adc90919063ffffffff16565b612665609f8b613af690919063ffffffff16565b61267960b58d613adc90919063ffffffff16565b61268d60ea8f613af690919063ffffffff16565b1717171717179050979650505050505050565b60006126b6600083613b0c90919063ffffffff16565b9050919050565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000061272a613b23565b3060405160200161273f9594939291906173ab565b60405160208183030381529060405280519060200120905090565b61276d64e8d4a5100082101560cb612308565b61278367016345785d8a000082111560ca612308565b6127988160095461201a90919063ffffffff16565b6009819055507fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc816040516127cd9190617674565b60405180910390a150565b60008082840190506127ee848210156000612308565b8091505092915050565b600081612825577f0000000000000000000000000000000000000000000000000000000000000000612847565b7f00000000000000000000000000000000000000000000000000000000000000005b9050919050565b600061285a8383612e98565b905092915050565b60008060006060600267ffffffffffffffff8111801561288157600080fd5b506040519080825280602002602001820160405280156128b05781602001602082028036833780820191505090505b509050846128be57856128c0565b865b816000815181106128cd57fe5b602002602001018181525050846128e457866128e6565b855b816001815181106128f357fe5b602002602001018181525050612907615ff6565b61290f612fc8565b905061293e828260006002811061292257fe5b60200201518360016002811061293457fe5b602002015161356b565b9450612948615ff6565b6129528287613b2b565b905086612970578060016002811061296657fe5b6020020151612983565b8060006002811061297d57fe5b60200201515b9450866129a1578060006002811061299757fe5b60200201516129b4565b806001600281106129ae57fe5b60200201515b935050505093509350939050565b60006129d8600083613b9f90919063ffffffff16565b9050919050565b60006129f5601683613b9f90919063ffffffff16565b9050919050565b6000612a12602c83613b0c90919063ffffffff16565b9050919050565b6000612a2f604b83613bd190919063ffffffff16565b9050919050565b6000612a4c605583613be690919063ffffffff16565b9050919050565b6000612a69605683613bfc90919063ffffffff16565b9050919050565b612a7d8183146067612308565b5050565b6000606080612a8e615ff6565b612a96612fc8565b9050612aa061227d565b15612b7d576000612ad48983600060028110612ab857fe5b602002015184600160028110612aca57fe5b602002015161356b565b9050612ade615ff6565b612ae88383613b2b565b9050612b41898b600081518110612afb57fe5b60200260200101518c600181518110612b1057fe5b602002602001015184600060028110612b2557fe5b602002015185600160028110612b3757fe5b60200201516132a4565b612b4a82613c17565b612b548a88613c44565b8096508197505050612b708287612b69610a5d565b6000613c9f565b600a819055505050612bb7565b612b878886613c44565b80945081955050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600a819055505b8383600267ffffffffffffffff81118015612bd157600080fd5b50604051908082528060200260200182016040528015612c005781602001602082028036833780820191505090505b50935093509350509750975097945050505050565b612c3c81600081518110612c2557fe5b6020026020010151612c3760016127f8565b613d33565b81600081518110612c4957fe5b602002602001018181525050612c7c81600181518110612c6557fe5b6020026020010151612c7760006127f8565b613d33565b81600181518110612c8957fe5b60200260200101818152505050565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612dc35760003073ffffffffffffffffffffffffffffffffffffffff16600036604051612cf59291906171a5565b6000604051808303816000865af19150503d8060008114612d32576040519150601f19603f3d011682016040523d82523d6000602084013e612d37565b606091505b505090508060008114612d4657fe5b60046000803e7fffffffff000000000000000000000000000000000000000000000000000000006000511660007f43adbafb0000000000000000000000000000000000000000000000000000000082141415612da6573d6000803e3d6000fd5b6020600460003e604060205260243d03602460403e601c3d016000f35b612dcc86613013565b60006060612de38b8b8b8b8b8b8b8b63ffffffff16565b5091509150612df5818463ffffffff16565b6020815102602082038381526343adbafb60208203526004810390506044820181fd5b600060086000838152602001908152602001600020549050919050565b6000806000806000806000612e4988613d56565b9650612e5488613d73565b9550612e5f88613d90565b9450612e6a88613dad565b9350612e7588613dca565b9250612e8088613de7565b9150612e8b886126a0565b9050919395979092949650565b6000808284029050612ec16000851480612eba575083858381612eb757fe5b04145b6003612308565b8091505092915050565b6000612edc60008314156004612308565b6000831415612eee5760009050612f29565b6000670de0b6b3a764000084029050612f1b670de0b6b3a7640000858381612f1257fe5b04146005612308565b828181612f2457fe5b049150505b92915050565b600073__$85f042f43089d976c21d0d184f206dc395$__6334171a8560088686866040518563ffffffff1660e01b8152600401612f6f949392919061759b565b60206040518083038186803b158015612f8757600080fd5b505af4158015612f9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fbf9190616bfb565b90509392505050565b612fd0615ff6565b612fda6001613e04565b81600060028110612fe757fe5b602002018181525050612ffa6000613e04565b8160016002811061300757fe5b60200201818152505090565b61303a8160008151811061302357fe5b602002602001015161303560016127f8565b612e98565b8160008151811061304757fe5b60200260200101818152505061307a8160018151811061306357fe5b602002602001015161307560006127f8565b612e98565b8160018151811061308757fe5b60200260200101818152505050565b6130a08282613e5a565b5050565b60006060806130b1615ff6565b6130b9612fc8565b905060006130ea89836000600281106130ce57fe5b6020020151846001600281106130e057fe5b602002015161356b565b90506130f4615ff6565b6130fe8383613b2b565b9050613157898b60008151811061311157fe5b60200260200101518c60018151811061312657fe5b60200260200101518460006002811061313b57fe5b60200201518560016002811061314d57fe5b60200201516132a4565b61316082613c17565b6000606061316e8c8a613fbe565b91509150600b60000160009054906101000a900460ff16156131a5576131a4826131978f6111c0565b61319f610a5d565b614018565b5b6131b984836131b2610a5d565b6001613c9f565b600a819055508181600267ffffffffffffffff811180156131d957600080fd5b506040519080825280602002602001820160405280156132085781602001602082028036833780820191505090505b5097509750975050505050509750975097945050505050565b6132488160008151811061323157fe5b602002602001015161324360016127f8565b614228565b8160008151811061325557fe5b6020026020010181815250506132888160018151811061327157fe5b602002602001015161328360006127f8565b614228565b8160018151811061329557fe5b60200260200101818152505050565b600060095490506132b481612a36565b80156132bf57508543115b1561335f5760006132d286858786614264565b905060006132eb878688876132e6886129df565b614289565b905060006132f884612a19565b90506000613305856129fc565b9050600061331e828487876133198b6129c2565b6142e1565b90508083146133595761333a818761434f90919063ffffffff16565b955061334f428761436f90919063ffffffff16565b9550856009819055505b50505050505b505050505050565b6000808284029050613390600085148061338957508385838161338657fe5b04145b6003612308565b60008114156133a35760009150506133bf565b6001670de0b6b3a764000060018303816133b957fe5b04019150505b92915050565b60006133d5838311156001612308565b600082840390508091505092915050565b60006133f985858860600151868661438f565b905095945050505050565b60006134108383613d33565b905092915050565b600061342b85858860600151868661449d565b905095945050505050565b60006134428383614228565b905092915050565b6000670de0b6b3a7640000821061346257600061346e565b81670de0b6b3a7640000035b9050919050565b600061348660008314156004612308565b600083141561349857600090506134d9565b6000670de0b6b3a7640000840290506134c5670de0b6b3a76400008583816134bc57fe5b04146005612308565b60018360018303816134d357fe5b04019150505b92915050565b60006134e96115b6565b73ffffffffffffffffffffffffffffffffffffffff1663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b15801561352e57600080fd5b505afa158015613542573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135669190616a8b565b905090565b600080600080600061357e8888886145ab565b935093509350935061359284848484614800565b9450505050509392505050565b60006135a96126bd565b826040516020016135bb9291906171be565b604051602081830303815290604052805190602001209050919050565b6000606060006135e7846148b6565b905061360d600060038111156135f957fe5b82600381111561360557fe5b1460ce612308565b6060613618856148d3565b905061362681516002612a70565b61362f81613013565b613637615ff6565b61363f612fc8565b90506000613670838360006002811061365457fe5b60200201518460016002811061366657fe5b602002015161356b565b9050600061367f826002612e98565b905081600a81905550808496509650505050505094509492505050565b6136a682826148f4565b5050565b505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b606080600267ffffffffffffffff8111801561375157600080fd5b506040519080825280602002602001820160405280156137805781602001602082028036833780820191505090505b50905061378d6001614a18565b8160008151811061379a57fe5b6020026020010181815250506137b06000614a18565b816001815181106137bd57fe5b6020026020010181815250508091505090565b6002815110156137df5761386b565b6000816000815181106137ee57fe5b602002602001015190506000600190505b825181101561386857600083828151811061381657fe5b602002602001015190506138598173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16106065612308565b809250508060010190506137ff565b50505b50565b600073ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b73ffffffffffffffffffffffffffffffffffffffff166138a361158e565b73ffffffffffffffffffffffffffffffffffffffff16141580156138cc57506138cb83614a6e565b5b1561390e576138d961158e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161490506139a5565b6139166134df565b73ffffffffffffffffffffffffffffffffffffffff16639be2a8848484306040518463ffffffff1660e01b815260040161395293929190617313565b60206040518083038186803b15801561396a57600080fd5b505afa15801561397e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139a2919061696b565b90505b92915050565b6030600a820601600a820491506030600a830601600a830492506030600a8406018060101b8260081b8401016642414c230000000160c81b7f08c379a000000000000000000000000000000000000000000000000000000000600052602060045260076024528060445260646000fd5b505050565b6000613a2f8484111583612308565b60008385039050809150509392505050565b600080613a4d83614aa2565b90506000808213613a6657652d79883d20008203613a70565b652d79883d200082015b9050655af3107a40008181613a8157fe5b0592505050919050565b6000613aa382600085614b1b9092919063ffffffff16565b905092915050565b6000613ac382601685614b1b9092919063ffffffff16565b905092915050565b60008183901b60001b905092915050565b600081661fffffffffffff8416901b60001b905092915050565b600081623fffff8416901b60001b905092915050565b6000637fffffff8284901c60001c16905092915050565b600046905090565b613b33615ff6565b613b50600184600160028110613b4557fe5b602002015184614b48565b81600060028110613b5d57fe5b602002018181525050613b83600084600060028110613b7857fe5b602002015184614b48565b81600160028110613b9057fe5b60200201818152505092915050565b600080623fffff8385901c60001c169050621fffff8113613bc05780613bc8565b623fffff1981175b91505092915050565b60006103ff8284901c60001c16905092915050565b60006001808385901c60001c1614905092915050565b600067ffffffffffffffff8284901c60001c16905092915050565b600080600080613c29600a5486614b72565b9350935093509350613c3d84848484614be4565b5050505050565b600060606000613c5384614c12565b905060016003811115613c6257fe5b816003811115613c6e57fe5b1415613c8b57613c7e8585614c2f565b8093508194505050613c97565b613c966101506139ab565b5b509250929050565b60008115613ceb576000613cce84613cc0878961336790919063ffffffff16565b61347590919063ffffffff16565b9050613ce38187614c6590919063ffffffff16565b915050613d2b565b6000613d1284613d048789614c8590919063ffffffff16565b612ecb90919063ffffffff16565b9050613d2781876133c590919063ffffffff16565b9150505b949350505050565b6000613d4460008314156004612308565b818381613d4d57fe5b04905092915050565b6000613d6c60ea83613b9f90919063ffffffff16565b9050919050565b6000613d8960b583614cc990919063ffffffff16565b9050919050565b6000613da6609f83613b9f90919063ffffffff16565b9050919050565b6000613dc3606a83614cc990919063ffffffff16565b9050919050565b6000613de0605483613b9f90919063ffffffff16565b9050919050565b6000613dfd601f83614cc990919063ffffffff16565b9050919050565b600081613e31577f0000000000000000000000000000000000000000000000000000000000000000613e53565b7f00000000000000000000000000000000000000000000000000000000000000005b9050919050565b613e96600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561019b612308565b613ea282600083613a1b565b613ef7816101a16000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a209092919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550613f4e81600254614d0790919063ffffffff16565b600281905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051613fb29190617674565b60405180910390a35050565b600060606000613fcd846148b6565b9050600380811115613fdb57fe5b816003811115613fe757fe5b141561400457613ff78585614d1d565b8093508194505050614010565b61400f6101366139ab565b5b509250929050565b614020615f8b565b600b6040518060600160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a90046effffffffffffffffffffffffffffff166effffffffffffffffffffffffffffff166effffffffffffffffffffffffffffff1681526020016000820160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681525050905080602001516effffffffffffffffffffffffffffff166141048486614c6590919063ffffffff16565b11156040518060400160405280601a81526020017f6f7665722061646472657373206c6971756964697479206361700000000000008152509061417d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016141749190617617565b60405180910390fd5b5080604001516fffffffffffffffffffffffffffffffff166141a88386614c6590919063ffffffff16565b11156040518060400160405280601981526020017f6f76657220676c6f62616c206c6971756964697479206361700000000000000081525090614221576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016142189190617617565b60405180910390fd5b5050505050565b600061423960008314156004612308565b600083141561424b576000905061425e565b81600184038161425757fe5b0460010190505b92915050565b60008061427386868686614d53565b905061427e81613a41565b915050949350505050565b60008061429887878787614d53565b905060006142c16142b2838861336790919063ffffffff16565b89614c6590919063ffffffff16565b905060006142ce82613a41565b9050848103935050505095945050505050565b600080614305858585426142f48b612e18565b614dc790949392919063ffffffff16565b905060006078884203101590508061431d5786614327565b61432687614e28565b5b9650816008600089815260200190815260200160002081905550869250505095945050505050565b600061436782604b85614e3c9092919063ffffffff16565b905092915050565b600061438782602c85614e639092919063ffffffff16565b905092915050565b60006143ba6143af670429d069189e000088614c8590919063ffffffff16565b851115610130612308565b60006143ec6143dd6002670de0b6b3a7640000018661336790919063ffffffff16565b88614c6590919063ffffffff16565b905060006144206144116001670de0b6b3a76400000386614c8590919063ffffffff16565b88614c6590919063ffffffff16565b90506144596144388784614c6590919063ffffffff16565b61444b8884614c8590919063ffffffff16565b612ecb90919063ffffffff16565b9250505061446b858210610165612308565b614494614489670429d069189e000087614c8590919063ffffffff16565b821115610131612308565b95945050505050565b60006144ad858510610165612308565b6144d66144cb670429d069189e000087614c8590919063ffffffff16565b851115610131612308565b60006145086144f96002670de0b6b3a7640000018661336790919063ffffffff16565b88614c6590919063ffffffff16565b9050600061453c61452d6001670de0b6b3a76400000386614c8590919063ffffffff16565b88614c6590919063ffffffff16565b905061457561455487836133c590919063ffffffff16565b614567888561336790919063ffffffff16565b61347590919063ffffffff16565b925050506145a2614597670429d069189e000088614c8590919063ffffffff16565b821115610130612308565b95945050505050565b6000806000806145de6145c78688612ecb90919063ffffffff16565b670de0b6b3a76400006133c590919063ffffffff16565b9350600061460986896001815181106145f357fe5b6020026020010151612ecb90919063ffffffff16565b90506000614634888a60008151811061461e57fe5b6020026020010151614c8590919063ffffffff16565b90506146498183614c6590919063ffffffff16565b94506146868960018151811061465b57fe5b60200260200101518a60008151811061467057fe5b6020026020010151614c8590919063ffffffff16565b925050506146e9866146db886146cd8b6000815181106146a257fe5b60200260200101518c6000815181106146b757fe5b6020026020010151614c8590919063ffffffff16565b614c8590919063ffffffff16565b614c8590919063ffffffff16565b915060006147698661475b8961474d670de0b6b3a764000060020261473f8e60018151811061471457fe5b60200260200101518f60008151811061472957fe5b6020026020010151614c8590919063ffffffff16565b614c8590919063ffffffff16565b614c8590919063ffffffff16565b612ecb90919063ffffffff16565b905060006147cc614783888961336790919063ffffffff16565b6147be8b60018151811061479357fe5b60200260200101518c6001815181106147a857fe5b6020026020010151614c8590919063ffffffff16565b612ecb90919063ffffffff16565b90506147f3816147e58487614c6590919063ffffffff16565b614c6590919063ffffffff16565b9350505093509350935093565b600080614821670de0b6b3a76400006002028761336790919063ffffffff16565b9050600061485587614847670de0b6b3a764000060040287614c8590919063ffffffff16565b614c8590919063ffffffff16565b9050600061486c8287614c6590919063ffffffff16565b9050600061487b826005614e8c565b90506000614892828a614c6590919063ffffffff16565b90506148a78582612ecb90919063ffffffff16565b95505050505050949350505050565b6000818060200190518101906148cc9190616b19565b9050919050565b6060818060200190518101906148e99190616b42565b905080915050919050565b61490060008383613a1b565b614915816002546127d890919063ffffffff16565b60028190555061496c816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127d890919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051614a0c9190617674565b60405180910390a35050565b600081614a45577f0000000000000000000000000000000000000000000000000000000000000000614a67565b7f00000000000000000000000000000000000000000000000000000000000000005b9050919050565b6000614a806338e9922e60e01b61150b565b821480614a9b5750614a986350dd6ed960e01b61150b565b82145b9050919050565b6000614ab2600083136064612308565b8167016345785d8a0000670de0b6b3a764000003128015614ae4575067016345785d8a0000670de0b6b3a76400000182125b15614b0a57670de0b6b3a7640000614afb83615054565b81614b0257fe5b059050614b16565b614b1382615201565b90505b919050565b60008082623fffff901b198560001c1660001b905082623fffff8516901b60001b81179150509392505050565b600083614b5e57614b598284615698565b614b69565b614b6882846156b5565b5b90509392505050565b600080600080600080600080614b866156d2565b93509350935093506000841415614bad576000808383975097509750975050505050614bdb565b600080614bc48c8c614bbd610a5d565b8989615a12565b915091508181858599509950995099505050505050505b92959194509250565b6000841115614bf857614bf7828561369c565b5b6000831115614c0c57614c0b818461369c565b5b50505050565b600081806020019051810190614c289190616ab4565b9050919050565b600060606000614c3e84615aff565b90506060614c548683614c4f610a5d565b615b20565b905081819350935050509250929050565b6000808284019050614c7b848210156000612308565b8091505092915050565b6000808284029050614cae6000851480614ca7575083858381614ca457fe5b04145b6003612308565b670de0b6b3a76400008181614cbf57fe5b0491505092915050565b600080661fffffffffffff8385901c60001c169050660fffffffffffff8113614cf25780614cfe565b661fffffffffffff1981175b91505092915050565b6000614d1583836001613a20565b905092915050565b600060606000614d2c84615bdd565b90506060614d428683614d3d610a5d565b615bfe565b905081819350935050509250929050565b6000806706f05b59d3b200009050614dbc614d8982614d7b8688614c6590919063ffffffff16565b61347590919063ffffffff16565b614dae83614da0898b614c6590919063ffffffff16565b61347590919063ffffffff16565b61347590919063ffffffff16565b915050949350505050565b600080614dd3876126a0565b830390506000818702614de589613d73565b0190506000828702614df68a613dad565b0190506000838702614e078b613de7565b019050614e1989848a858b868c6125ff565b94505050505095945050505050565b6000614e35826001615cbb565b9050919050565b600080826103ff901b198560001c1660001b90508284901b60001b81179150509392505050565b60008082637fffffff901b198560001c1660001b90508284901b60001b81179150509392505050565b600080831415614e9f576000905061504e565b6000614eaa84615cd3565b9050600281670de0b6b3a7640000860281614ec157fe5b04820181614ecb57fe5b049050600281670de0b6b3a7640000860281614ee357fe5b04820181614eed57fe5b049050600281670de0b6b3a7640000860281614f0557fe5b04820181614f0f57fe5b049050600281670de0b6b3a7640000860281614f2757fe5b04820181614f3157fe5b049050600281670de0b6b3a7640000860281614f4957fe5b04820181614f5357fe5b049050600281670de0b6b3a7640000860281614f6b57fe5b04820181614f7557fe5b049050600281670de0b6b3a7640000860281614f8d57fe5b04820181614f9757fe5b0490506000614faf8283614c8590919063ffffffff16565b9050614fd6614fc7858461336790919063ffffffff16565b86614c6590919063ffffffff16565b81111580156150095750615005614ff6858461336790919063ffffffff16565b866133c590919063ffffffff16565b8110155b615048576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161503f90617639565b60405180910390fd5b81925050505b92915050565b6000670de0b6b3a76400008202915060006ec097ce7bc90715b34b9f100000000083016ec097ce7bc90715b34b9f1000000000808503028161509257fe5b05905060006ec097ce7bc90715b34b9f1000000000828302816150b157fe5b059050600082905060008190506ec097ce7bc90715b34b9f1000000000838302816150d857fe5b059150600382816150e557fe5b05810190506ec097ce7bc90715b34b9f10000000008383028161510457fe5b0591506005828161511157fe5b05810190506ec097ce7bc90715b34b9f10000000008383028161513057fe5b0591506007828161513d57fe5b05810190506ec097ce7bc90715b34b9f10000000008383028161515c57fe5b0591506009828161516957fe5b05810190506ec097ce7bc90715b34b9f10000000008383028161518857fe5b059150600b828161519557fe5b05810190506ec097ce7bc90715b34b9f1000000000838302816151b457fe5b059150600d82816151c157fe5b05810190506ec097ce7bc90715b34b9f1000000000838302816151e057fe5b059150600f82816151ed57fe5b058101905060028102945050505050919050565b6000670de0b6b3a76400008212156152395761522f82670de0b6b3a764000080028161522957fe5b05615201565b6000039050615693565b6000670de0b6b3a7640000770195e54c5dd42177f53a27172fa9ec63026282700000000002831261529757770195e54c5dd42177f53a27172fa9ec630262827000000000838161528557fe5b0592506806f05b59d3b2000000810190505b670de0b6b3a76400006b1425982cf597cd205cef73800283126152db576b1425982cf597cd205cef738083816152c957fe5b0592506803782dace9d9000000810190505b6064810290506064830292506e01855144814a7ff805980ff00840008312615332576e01855144814a7ff805980ff008400068056bc75e2d6310000084028161532057fe5b05925068ad78ebc5ac62000000810190505b6b02df0ab5a80a22c61ab5a7008312615377576b02df0ab5a80a22c61ab5a70068056bc75e2d6310000084028161536557fe5b0592506856bc75e2d631000000810190505b693f1fce3da636ea5cf85083126153b857693f1fce3da636ea5cf85068056bc75e2d631000008402816153a657fe5b059250682b5e3af16b18800000810190505b690127fa27722cc06cc5e283126153f957690127fa27722cc06cc5e268056bc75e2d631000008402816153e757fe5b0592506815af1d78b58c400000810190505b68280e60114edb805d0383126154385768280e60114edb805d0368056bc75e2d6310000084028161542657fe5b059250680ad78ebc5ac6200000810190505b680ebc5fb41746121110831261547757680ebc5fb4174612111068056bc75e2d6310000084028161546557fe5b05925068056bc75e2d63100000810190505b6808f00f760a4b2db55d83126154b6576808f00f760a4b2db55d68056bc75e2d631000008402816154a457fe5b0592506802b5e3af16b1880000810190505b6806f5f177578893793783126154f5576806f5f177578893793768056bc75e2d631000008402816154e357fe5b05925068015af1d78b58c40000810190505b6806248f33704b2866038312615533576806248f33704b28660368056bc75e2d6310000084028161552257fe5b05925067ad78ebc5ac620000810190505b6805c548670b9510e7ac8312615571576805c548670b9510e7ac68056bc75e2d6310000084028161556057fe5b0592506756bc75e2d6310000810190505b600068056bc75e2d63100000840168056bc75e2d63100000808603028161559457fe5b059050600068056bc75e2d63100000828302816155ad57fe5b0590506000829050600081905068056bc75e2d63100000838302816155ce57fe5b059150600382816155db57fe5b058101905068056bc75e2d63100000838302816155f457fe5b0591506005828161560157fe5b058101905068056bc75e2d631000008383028161561a57fe5b0591506007828161562757fe5b058101905068056bc75e2d631000008383028161564057fe5b0591506009828161564d57fe5b058101905068056bc75e2d631000008383028161566657fe5b059150600b828161567357fe5b058101905060028102905060648186018161568a57fe5b05955050505050505b919050565b60006156ad8284614c8590919063ffffffff16565b905092915050565b60006156ca8284612ecb90919063ffffffff16565b905092915050565b600080600080600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bd02d0f57f50524f544f434f4c5f535741505f4645455f50455243000000000000000000006040518263ffffffff1660e01b815260040161575391906172f8565b60206040518083038186803b15801561576b57600080fd5b505afa15801561577f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906157a39190616cdd565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bd02d0f57f50524f544f434f4c5f4645455f4759524f5f504f5254494f4e000000000000006040518263ffffffff1660e01b815260040161581e91906172f8565b60206040518083038186803b15801561583657600080fd5b505afa15801561584a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061586e9190616cdd565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166321f8a7217f4759524f5f5452454153555259000000000000000000000000000000000000006040518263ffffffff1660e01b81526004016158e991906172f8565b60206040518083038186803b15801561590157600080fd5b505afa158015615915573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061593991906166b3565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166321f8a7217f42414c5f545245415355525900000000000000000000000000000000000000006040518263ffffffff1660e01b81526004016159b491906172f8565b60206040518083038186803b1580156159cc57600080fd5b505afa1580156159e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190615a0491906166b3565b935093509350935090919293565b600080868611615a285760008091509150615af5565b6000615a6185615a53615a448b8b6133c590919063ffffffff16565b89614c8590919063ffffffff16565b614c8590919063ffffffff16565b90506000615a8a615a7b8a8a6133c590919063ffffffff16565b87614c8590919063ffffffff16565b90506000615aa1828a6133c590919063ffffffff16565b90506000615ab88285612ecb90919063ffffffff16565b90506000615acf8289614c8590919063ffffffff16565b90506000615ae682846133c590919063ffffffff16565b90508181975097505050505050505b9550959350505050565b600081806020019051810190615b159190616add565b905080915050919050565b6060835167ffffffffffffffff81118015615b3a57600080fd5b50604051908082528060200260200182016040528015615b695781602001602082028036833780820191505090505b50905060005b8451811015615bd557615bb083615ba286888581518110615b8c57fe5b6020026020010151614c8590919063ffffffff16565b612ecb90919063ffffffff16565b828281518110615bbc57fe5b6020026020010181815250508080600101915050615b6f565b509392505050565b600081806020019051810190615bf39190616b96565b905080915050919050565b6060835167ffffffffffffffff81118015615c1857600080fd5b50604051908082528060200260200182016040528015615c475781602001602082028036833780820191505090505b50905060005b8451811015615cb357615c8e83615c8086888581518110615c6a57fe5b602002602001015161336790919063ffffffff16565b61347590919063ffffffff16565b828281518110615c9a57fe5b6020026020010181815250508080600101915050615c4d565b509392505050565b600061040082840181615cca57fe5b06905092915050565b6000670de0b6b3a76400008210615d1357670de0b6b3a7640000615d07670de0b6b3a76400008481615d0157fe5b04615ecb565b6001901b029050615ec6565b600a8211615d275763bc7c871c9050615ec6565b60648211615d3c576402540be4009050615ec6565b6103e88211615d525764075cdd47199050615ec6565b6127108211615d685764174876e8009050615ec6565b620186a08211615d7f576449a0a4c7009050615ec6565b620f42408211615d965764e8d4a510009050615ec6565b629896808211615dae576502e0466fc6089050615ec6565b6305f5e1008211615dc7576509184e72a0009050615ec6565b633b9aca008211615de057651cc2c05dbc539050615ec6565b6402540be4008211615dfa57655af3107a40009050615ec6565b64174876e8008211615e155766011f9b83a95b459050615ec6565b64e8d4a510008211615e305766038d7ea4c680009050615ec6565b6509184e72a0008211615e4c57660b3c13249d90bb9050615ec6565b655af3107a40008211615e6857662386f26fc100009050615ec6565b66038d7ea4c680008211615e8557667058bf6e27a7519050615ec6565b662386f26fc100008211615ea35767016345785d8a00009050615ec6565b67016345785d8a00008211615ec257670463777a4d8c892d9050615ec6565b8190505b919050565b60007001000000000000000000000000000000008210615ef357608082901c91506040810190505b680100000000000000008210615f1157604082901c91506020810190505b6401000000008210615f2b57602082901c91506010810190505b620100008210615f4357601082901c91506008810190505b6101008210615f5a57600882901c91506004810190505b60108210615f7057600482901c91506002810190505b60048210615f8657600282901c91506001810190505b919050565b604051806060016040528060001515815260200160006effffffffffffffffffffffffffffff16815260200160006fffffffffffffffffffffffffffffffff1681525090565b604051806040016040528060006002811115615fe957fe5b8152602001600081525090565b6040518060400160405280600290602082028036833780820191505090505090565b60008135905061602781617ad0565b92915050565b60008151905061603c81617ad0565b92915050565b600082601f83011261605357600080fd5b81516160666160618261773e565b617711565b9150818183526020840193506020810190508385602084028201111561608b57600080fd5b60005b838110156160bb57816160a188826163a3565b84526020840193506020830192505060018101905061608e565b5050505092915050565b600082601f8301126160d657600080fd5b81356160e96160e482617766565b617711565b9150818183526020840193506020810190508385604084028201111561610e57600080fd5b60005b8381101561613e57816161248882616481565b845260208401935060408301925050600181019050616111565b5050505092915050565b600082601f83011261615957600080fd5b813561616c6161678261778e565b617711565b9150818183526020840193506020810190508385606084028201111561619157600080fd5b60005b838110156161c157816161a788826164cd565b845260208401935060608301925050600181019050616194565b5050505092915050565b600082601f8301126161dc57600080fd5b81356161ef6161ea826177b6565b617711565b9150818183526020840193506020810190508385602084028201111561621457600080fd5b60005b83811015616244578161622a888261664b565b845260208401935060208301925050600181019050616217565b5050505092915050565b600082601f83011261625f57600080fd5b815161627261626d826177b6565b617711565b9150818183526020840193506020810190508385602084028201111561629757600080fd5b60005b838110156162c757816162ad8882616660565b84526020840193506020830192505060018101905061629a565b5050505092915050565b6000813590506162e081617ae7565b92915050565b6000815190506162f581617ae7565b92915050565b60008135905061630a81617afe565b92915050565b60008135905061631f81617b15565b92915050565b600082601f83011261633657600080fd5b8135616349616344826177de565b617711565b9150808252602083016020830185838301111561636557600080fd5b616370838284617a5c565b50505092915050565b60008151905061638881617b2c565b92915050565b60008135905061639d81617b43565b92915050565b6000815190506163b281617b43565b92915050565b6000815190506163c781617b5a565b92915050565b6000815190506163dc81617b6a565b92915050565b6000813590506163f181617b7a565b92915050565b60008135905061640681617b8a565b92915050565b60008151905061641b81617b9a565b92915050565b60006060828403121561643357600080fd5b61643d6060617711565b9050600061644d848285016162d1565b600083015250602061646184828501616621565b602083015250604061647584828501616636565b60408301525092915050565b60006040828403121561649357600080fd5b61649d6040617711565b905060006164ad848285016163f7565b60008301525060206164c18482850161664b565b60208301525092915050565b6000606082840312156164df57600080fd5b6164e96060617711565b905060006164f9848285016163f7565b600083015250602061650d8482850161664b565b60208301525060406165218482850161664b565b60408301525092915050565b6000610120828403121561654057600080fd5b61654b610120617711565b9050600061655b848285016163e2565b600083015250602061656f8482850161638e565b60208301525060406165838482850161638e565b60408301525060606165978482850161664b565b60608301525060806165ab848285016162fb565b60808301525060a06165bf8482850161664b565b60a08301525060c06165d384828501616018565b60c08301525060e06165e784828501616018565b60e08301525061010082013567ffffffffffffffff81111561660857600080fd5b61661484828501616325565b6101008301525092915050565b60008135905061663081617bb1565b92915050565b60008135905061664581617bc8565b92915050565b60008135905061665a81617bdf565b92915050565b60008151905061666f81617bdf565b92915050565b60008135905061668481617bf6565b92915050565b60006020828403121561669c57600080fd5b60006166aa84828501616018565b91505092915050565b6000602082840312156166c557600080fd5b60006166d38482850161602d565b91505092915050565b600080604083850312156166ef57600080fd5b60006166fd85828601616018565b925050602061670e85828601616018565b9150509250929050565b60008060006060848603121561672d57600080fd5b600061673b86828701616018565b935050602061674c86828701616018565b925050604061675d8682870161664b565b9150509250925092565b600080600080600080600060e0888a03121561678257600080fd5b60006167908a828b01616018565b97505060206167a18a828b01616018565b96505060406167b28a828b0161664b565b95505060606167c38a828b0161664b565b94505060806167d48a828b01616675565b93505060a06167e58a828b016162fb565b92505060c06167f68a828b016162fb565b91505092959891949750929550565b6000806040838503121561681857600080fd5b600061682685828601616018565b92505060206168378582860161664b565b9150509250929050565b60008060006060848603121561685657600080fd5b600084015167ffffffffffffffff81111561687057600080fd5b61687c86828701616042565b935050602084015167ffffffffffffffff81111561689957600080fd5b6168a58682870161624e565b92505060406168b686828701616660565b9150509250925092565b6000602082840312156168d257600080fd5b600082013567ffffffffffffffff8111156168ec57600080fd5b6168f8848285016160c5565b91505092915050565b60006020828403121561691357600080fd5b600082013567ffffffffffffffff81111561692d57600080fd5b61693984828501616148565b91505092915050565b60006020828403121561695457600080fd5b6000616962848285016162d1565b91505092915050565b60006020828403121561697d57600080fd5b600061698b848285016162e6565b91505092915050565b600080600080600080600060e0888a0312156169af57600080fd5b60006169bd8a828b016162fb565b97505060206169ce8a828b01616018565b96505060406169df8a828b01616018565b955050606088013567ffffffffffffffff8111156169fc57600080fd5b616a088a828b016161cb565b9450506080616a198a828b0161664b565b93505060a0616a2a8a828b0161664b565b92505060c088013567ffffffffffffffff811115616a4757600080fd5b616a538a828b01616325565b91505092959891949750929550565b600060208284031215616a7457600080fd5b6000616a8284828501616310565b91505092915050565b600060208284031215616a9d57600080fd5b6000616aab84828501616379565b91505092915050565b600060208284031215616ac657600080fd5b6000616ad4848285016163b8565b91505092915050565b60008060408385031215616af057600080fd5b6000616afe858286016163b8565b9250506020616b0f85828601616660565b9150509250929050565b600060208284031215616b2b57600080fd5b6000616b39848285016163cd565b91505092915050565b60008060408385031215616b5557600080fd5b6000616b63858286016163cd565b925050602083015167ffffffffffffffff811115616b8057600080fd5b616b8c8582860161624e565b9150509250929050565b60008060408385031215616ba957600080fd5b6000616bb7858286016163cd565b9250506020616bc885828601616660565b9150509250929050565b600060208284031215616be457600080fd5b6000616bf2848285016163f7565b91505092915050565b600060208284031215616c0d57600080fd5b6000616c1b8482850161640c565b91505092915050565b600060608284031215616c3657600080fd5b6000616c4484828501616421565b91505092915050565b600080600060608486031215616c6257600080fd5b600084013567ffffffffffffffff811115616c7c57600080fd5b616c888682870161652d565b9350506020616c998682870161664b565b9250506040616caa8682870161664b565b9150509250925092565b600060208284031215616cc657600080fd5b6000616cd48482850161664b565b91505092915050565b600060208284031215616cef57600080fd5b6000616cfd84828501616660565b91505092915050565b60008060408385031215616d1957600080fd5b6000616d278582860161664b565b9250506020616d388582860161664b565b9150509250929050565b600080600060608486031215616d5757600080fd5b6000616d658682870161664b565b9350506020616d768682870161664b565b9250506040616d87868287016162d1565b9150509250925092565b6000616d9d8383616fae565b60208301905092915050565b6000616db5838361712e565b60208301905092915050565b616dca816178db565b82525050565b6000616ddb82617834565b616de58185617887565b9350616df08361780a565b8060005b83811015616e21578151616e088882616d91565b9750616e1383617860565b925050600181019050616df4565b5085935050505092915050565b616e378161783f565b616e418184617898565b9250616e4c8261781a565b8060005b83811015616e7d578151616e648782616da9565b9650616e6f8361786d565b925050600181019050616e50565b505050505050565b6000616e908261784a565b616e9a81856178a3565b9350616ea583617824565b8060005b83811015616ed6578151616ebd8882616da9565b9750616ec88361787a565b925050600181019050616ea9565b5085935050505092915050565b616eec816178ed565b82525050565b616efb816178ed565b82525050565b616f0a816178f9565b82525050565b616f21616f1c826178f9565b617a9e565b82525050565b616f38616f3382617903565b617aa8565b82525050565b6000616f4a83856178b4565b9350616f57838584617a5c565b82840190509392505050565b616f6c816179de565b82525050565b616f7b81617a02565b82525050565b616f8a81617a26565b82525050565b616f9981617a4a565b82525050565b616fa881617a4a565b82525050565b616fb781617966565b82525050565b616fc681617966565b82525050565b8082525050565b6000616fde82617855565b616fe881856178bf565b9350616ff8818560208601617a6b565b61700181617ab2565b840191505092915050565b60006170196002836178d0565b91507f19010000000000000000000000000000000000000000000000000000000000006000830152600282019050919050565b6000617059600c836178bf565b91507f5f73717274204641494c454400000000000000000000000000000000000000006000830152602082019050919050565b6060820160008201516170a26000850182616ee3565b5060208201516170b56020850182617110565b5060408201516170c8604085018261711f565b50505050565b6060820160008201516170e46000850182616f9f565b5060208201516170f7602085018261715b565b50604082015161710a604085018261715b565b50505050565b61711981617970565b82525050565b6171288161798b565b82525050565b617137816179c7565b82525050565b617146816179c7565b82525050565b617155816179c7565b82525050565b617164816179c7565b82525050565b617173816179d1565b82525050565b60006171858285616f10565b6020820191506171958284616f27565b6004820191508190509392505050565b60006171b2828486616f3e565b91508190509392505050565b60006171c98261700c565b91506171d58285616f10565b6020820191506171e58284616f10565b6020820191508190509392505050565b600060208201905061720a6000830184616dc1565b92915050565b6000602082019050818103600083015261722a8184616dd0565b905092915050565b60006040820190506172476000830184616e2e565b92915050565b600060208201905081810360008301526172678184616e85565b905092915050565b600060408201905081810360008301526172898185616e85565b9050818103602083015261729d8184616e85565b90509392505050565b60006020820190506172bb6000830184616ef2565b92915050565b60006060820190506172d66000830186616ef2565b6172e3602083018561713d565b6172f0604083018461713d565b949350505050565b600060208201905061730d6000830184616f01565b92915050565b60006060820190506173286000830186616f01565b6173356020830185616dc1565b6173426040830184616dc1565b949350505050565b600060c08201905061735f6000830189616f01565b61736c6020830188616dc1565b6173796040830187616dc1565b617386606083018661713d565b617393608083018561713d565b6173a060a083018461713d565b979650505050505050565b600060a0820190506173c06000830188616f01565b6173cd6020830187616f01565b6173da6040830186616f01565b6173e7606083018561713d565b6173f46080830184616dc1565b9695505050505050565b60006080820190506174136000830187616f01565b617420602083018661716a565b61742d6040830185616f01565b61743a6060830184616f01565b95945050505050565b60006020820190506174586000830184616f63565b92915050565b60006020820190506174736000830184616f72565b92915050565b600060208201905061748e6000830184616f81565b92915050565b600060e0820190506174a9600083018a616fbd565b6174b66020830189616fbd565b6174c36040830188616fbd565b6174d06060830187616fbd565b6174dd6080830186616fbd565b6174ea60a0830185616fbd565b6174f760c083018461713d565b98975050505050505050565b600060c0820190506175186000830189616fbd565b6175256020830188616fbd565b617532604083018761713d565b61753f606083018661713d565b61754c6080830185616ef2565b61755960a083018461713d565b979650505050505050565b60006060820190506175796000830186616fcc565b6175866020830185616f90565b617593604083018461714c565b949350505050565b60006080820190506175b06000830187616fcc565b6175bd6020830186616f90565b6175ca604083018561714c565b6175d7606083018461714c565b95945050505050565b600060a0820190506175f56000830186616fcc565b61760260208301856170ce565b61760f608083018461714c565b949350505050565b600060208201905081810360008301526176318184616fd3565b905092915050565b600060208201905081810360008301526176528161704c565b9050919050565b600060608201905061766e600083018461708c565b92915050565b6000602082019050617689600083018461713d565b92915050565b60006040820190506176a4600083018561713d565b81810360208301526176b68184616e85565b90509392505050565b60006060820190506176d4600083018661713d565b6176e1602083018561713d565b6176ee604083018461713d565b949350505050565b600060208201905061770b600083018461716a565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561773457600080fd5b8060405250919050565b600067ffffffffffffffff82111561775557600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561777d57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff8211156177a557600080fd5b602082029050602081019050919050565b600067ffffffffffffffff8211156177cd57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff8211156177f557600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050919050565b6000819050602082019050919050565b600081519050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b60006178e6826179a7565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600061793a826178db565b9050919050565b600061794c826178db565b9050919050565b600081905061796182617ac3565b919050565b6000819050919050565b60006effffffffffffffffffffffffffffff82169050919050565b60006fffffffffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006179e9826179f0565b9050919050565b60006179fb826179a7565b9050919050565b6000617a0d82617a14565b9050919050565b6000617a1f826179a7565b9050919050565b6000617a3182617a38565b9050919050565b6000617a43826179a7565b9050919050565b6000617a5582617953565b9050919050565b82818337600083830152505050565b60005b83811015617a89578082015181840152602081019050617a6e565b83811115617a98576000848401525b50505050565b6000819050919050565b6000819050919050565b6000601f19601f8301169050919050565b60038110617acd57fe5b50565b617ad9816178db565b8114617ae457600080fd5b50565b617af0816178ed565b8114617afb57600080fd5b50565b617b07816178f9565b8114617b1257600080fd5b50565b617b1e81617903565b8114617b2957600080fd5b50565b617b358161792f565b8114617b4057600080fd5b50565b617b4c81617941565b8114617b5757600080fd5b50565b60048110617b6757600080fd5b50565b60048110617b7757600080fd5b50565b60028110617b8757600080fd5b50565b60038110617b9757600080fd5b50565b617ba381617966565b8114617bae57600080fd5b50565b617bba81617970565b8114617bc557600080fd5b50565b617bd18161798b565b8114617bdc57600080fd5b50565b617be8816179c7565b8114617bf357600080fd5b50565b617bff816179d1565b8114617c0a57600080fd5b5056fea2646970667358221220759bfd118d8228647e21f64b89311785d348e72aa4373878fa8124180ebcaaa864736f6c63430007010033", "deployedSourceMap": "1296:26754:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2138:81:46;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4172:164;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8674:89:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3181:98:46;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3154:363:39;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;4323:433:22;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2657:655:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8188:259:1;;;:::i;:::-;;3040:81:46;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3414:588:22;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2359:113:47;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6977:192:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6008:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5584:211:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1001:105:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8408:695:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1611:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6105:688:1;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;6799:115;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;37360:888;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2516:500:22;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;40124:211:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4762:496:22;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;720:34:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2372:112:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3337:117:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;23879:1437:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1112:341:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2127:108:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2487:430:30;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;35851:886:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1776:80:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1879:79:13;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2990:434:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2332:85:46;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9355:98:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4746:2711:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3438:429:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3657:170:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1862:101:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4145:172:22;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3022:103;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4269:452:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1313:753:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;13785:2489:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2260:254:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8769:117:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4029:110:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2138:81:46;2175:13;2207:5;2200:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2138:81;:::o;4172:164::-;4255:4;4271:37;4280:10;4292:7;4301:6;4271:8;:37::i;:::-;4325:4;4318:11;;4172:164;;;;:::o;8674:89:1:-;2156:21:30;:19;:21::i;:::-;8738:18:1::1;8749:6;8738:10;:18::i;:::-;8674:89:::0;:::o;3181:98:46:-;3234:7;3260:12;;3253:19;;3181:98;:::o;3154:363:39:-;3257:11;3282:26;3322:27;3384:14;:12;:14::i;:::-;3383:15;3374:24;;3429;:22;:24::i;:::-;3408:45;;3485:25;:23;:25::i;:::-;3463:47;;3154:363;;;:::o;4323:433:22:-;4456:24;4520:7;:14;4506:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4496:39;;4545:19;4567:17;:15;:17::i;:::-;4545:39;;4600:9;4595:155;4619:7;:14;4615:1;:18;4595:155;;;4667:14;:37;4705:8;4715:7;4723:1;4715:10;;;;;;;;;;;;;;4727:11;4667:72;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4654:7;4662:1;4654:10;;;;;;;;;;;;;:85;;;;;4635:3;;;;;4595:155;;;;4323:433;;;;:::o;2657:655:13:-;2785:4;2801:24;2828:29;2838:6;2846:10;2828:9;:29::i;:::-;2801:56;;2867:101;2890:6;2876:20;;:10;:20;;;:50;;;;2920:6;2900:16;:26;;2876:50;9174:3:31;2867:8:13;:101::i;:::-;2979:36;2989:6;2997:9;3008:6;2979:9;:36::i;:::-;3044:6;3030:20;;:10;:20;;;;:55;;;;;3082:2;3054:16;:31;;3030:55;3026:258;;;3218:55;3227:6;3235:10;3266:6;3247:16;:25;3218:8;:55::i;:::-;3026:258;3301:4;3294:11;;;2657:655;;;;;:::o;8188:259:1:-;2970:18:39;:16;:18::i;:::-;2156:21:30::1;:19;:21::i;:::-;8258:23:1::2;8276:4;8258:17;:23::i;:::-;8387:1;8371:13;:11;:13::i;:::-;:17;8367:74;;;8404:26;:24;:26::i;:::-;8367:74;8188:259::o:0;3040:81:46:-;3081:5;3105:9;;;;;;;;;;;3098:16;;3040:81;:::o;3414:588:22:-;3512:80;3534:8;3521:10;:21;:48;;;;;899:4:21;3546:8:22;:23;;3521:48;4838:3:31;3512:8:22;:80::i;:::-;3769:18;3790:33;3803:1;3806;3809;3812;3815;3818;3821;3790:12;:33::i;:::-;3769:54;;3838:9;3850:10;3838:22;;3833:163;3866:8;3862:1;:12;3833:163;;;3926:1;3899:23;:8;:11;3908:1;3899:11;;;;;;;;;;;;:21;:23::i;:::-;:28;3895:91;;;3961:10;3947:8;:11;3956:1;3947:11;;;;;;;;;;;:24;;;;3895:91;3876:3;;;;;;;3833:163;;;;3414:588;;;:::o;2359:113:47:-;2419:7;2445:20;:18;:20::i;:::-;2438:27;;2359:113;:::o;6977:192:1:-;2156:21:30;:19;:21::i;:::-;2970:18:39::1;:16;:18::i;:::-;7122:40:1::2;7144:17;7122:21;:40::i;:::-;6977:192:::0;:::o;6008:91::-;6059:7;6085;6078:14;;6008:91;:::o;5584:211:46:-;5672:4;5688:79;5697:10;5709:7;5718:48;5755:10;5718:11;:23;5730:10;5718:23;;;;;;;;;;;;;;;:32;5742:7;5718:32;;;;;;;;;;;;;;;;:36;;:48;;;;:::i;:::-;5688:8;:79::i;:::-;5784:4;5777:11;;5584:211;;;;:::o;1001:105:0:-;1054:16;;:::i;:::-;1089:10;1082:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:105;:::o;8408:695:5:-;8599:24;8637:22;8673:23;8721:28;8752:31;8767:15;8752:14;:31::i;:::-;8721:62;;8793:29;8825:32;8841:15;8840:16;8825:14;:32::i;:::-;8793:64;;8884:46;8893:14;8909:20;8884:8;:46::i;:::-;8867:63;;8958:48;8967:15;8984:21;8958:8;:48::i;:::-;8940:66;;9023:73;9047:14;9063:15;9080;9023:23;:73::i;:::-;9016:80;;;;;;;;8408:695;;;;;;;:::o;1611:29::-;;;;;;;;;;;;;:::o;6105:688:1:-;6188:19;6221:21;6256:37;6307:19;6340:18;6372:25;6422:16;6441:9;;6422:28;;6475:23;:8;:21;:23::i;:::-;6460:38;;6525:25;:8;:23;:25::i;:::-;6508:42;;6592:40;:8;:38;:40::i;:::-;6560:72;;6656:22;:8;:20;:22::i;:::-;6642:36;;6704:24;:8;:22;:24::i;:::-;6688:40;;6758:28;:8;:26;:28::i;:::-;6738:48;;6105:688;;;;;;;:::o;6799:115::-;6852:7;6878:29;:9;;:27;:29::i;:::-;6871:36;;6799:115;:::o;37360:888::-;37620:13;37635:27;37674:55;37710:8;:15;37727:1;37674:35;:55::i;:::-;37740:255;37766:6;37786;37806:9;37829:8;37851:15;37880:25;37919:8;37941:11;37966:19;37740:12;:255::i;:::-;37360:888;;;;;;;;;;:::o;2516:500:22:-;2627:19;2660:22;2696:18;2728:21;2763:19;2796:22;2832:17;2874:58;899:4:21;2883:5:22;:19;6557:3:31;2874:8:22;:58::i;:::-;2943:14;2960:17;2971:5;2960:10;:17::i;:::-;2943:34;;2994:15;:6;:13;:15::i;:::-;2987:22;;;;;;;;;;;;;;;2516:500;;;;;;;;;:::o;40124:211:1:-;40164:7;40278:50;40314:13;:11;:13::i;:::-;40278:27;40287:14;:12;:14::i;:::-;40303:1;40278:8;:27::i;:::-;:35;;:50;;;;:::i;:::-;40271:57;;40124:211;:::o;4762:496:22:-;4896:23;4958:7;:14;4945:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4935:38;;4983:19;5005:17;:15;:17::i;:::-;4983:39;;5033:35;;:::i;:::-;5083:9;5078:174;5102:7;:14;5098:1;:18;5078:174;;;5145:7;5153:1;5145:10;;;;;;;;;;;;;;5137:18;;5182:59;5202:5;:14;;;5218:11;5231:5;:9;;;5182:19;:59::i;:::-;5169:7;5177:1;5169:10;;;;;;;;;;;;;:72;;;;;5118:3;;;;;5078:174;;;;4762:496;;;;;:::o;720:34:0:-;;;;;;;;;;;;;:::o;2372:112:5:-;2424:17;;:::i;:::-;2460;:15;:17::i;:::-;2453:24;;2372:112;:::o;3337:117:46:-;3403:7;3429:9;:18;3439:7;3429:18;;;;;;;;;;;;;;;;3422:25;;3337:117;;;:::o;23879:1437:1:-;24173:16;24191;24156:6;3721:68;3752:10;:8;:10::i;:::-;3730:33;;:10;:33;;;5392:3:31;3721:8:1;:68::i;:::-;3799:55;3818:11;:9;:11::i;:::-;3808:6;:21;10241:3:31;3799:8:1;:55::i;:::-;24219:23:::1;24233:8;24219:13;:23::i;:::-;24267:19;24300:27;24341:38:::0;24392:228:::1;24421:6;24445;24469:9;24496:8;24522:15;24555:25;24598:8;24392:11;:228::i;:::-;24253:367;;;;;;24726:36;24742:6;24750:11;24726:15;:36::i;:::-;24874:31;24894:10;24874:19;:31::i;:::-;24915:42;24935:21;24915:19;:42::i;:::-;25190:14;:12;:14::i;:::-;25186:71;;;25220:26;:24;:26::i;:::-;25186:71;25275:10;25287:21;25267:42;;;;;;;23879:1437:::0;;;;;;;;;;;:::o;1112:341:0:-;1209:10;;;;;;;;;;;1195:24;;:10;:24;;;1221:15;;;;;;;;;;;;;;;;;1187:50;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1255:10;:21;;;;;;;;;;;;1278:9;;;;;;;;;;;;;;;;;1247:41;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1323:6;:17;;;1299:10;:21;;;:41;;;;;;;;;;;;;;;;;;1377:6;:20;;;1350:10;:24;;;:47;;;;;;;;;;;;;;;;;;1430:6;:16;;;1407:10;:20;;;:39;;;;;;;;;;;;;;;;;;1112:341;:::o;2127:108:47:-;2188:7;2214;:14;2222:5;2214:14;;;;;;;;;;;;;;;;2207:21;;2127:108;;;:::o;2487:430:30:-;2555:7;2876:22;2900:8;2859:50;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2849:61;;;;;;2842:68;;2487:430;;;:::o;35851:886:1:-;36111:14;36127:26;36165:55;36201:8;:15;36218:1;36165:35;:55::i;:::-;36231:253;36257:6;36277;36297:9;36320:8;36342:15;36371:25;36410:8;36432:11;36457:17;36231:12;:253::i;:::-;35851:886;;;;;;;;;;:::o;1776:80:16:-;1817:7;1843:6;1836:13;;1776:80;:::o;1879:79:13:-;1920:6;1945;1938:13;;1879:79;:::o;2990:434:5:-;3045:30;3090:25;3121:10;:8;:10::i;:::-;:24;;;3146:11;:9;:11::i;:::-;3121:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3087:71;;;;3288:23;3302:8;3288:13;:23::i;:::-;3362:55;3386:8;3395:1;3386:11;;;;;;;;;;;;;;3399:8;3408:1;3399:11;;;;;;;;;;;;;;3412:4;3362:23;:55::i;:::-;3321:96;;;3324:13;3338:1;3324:16;;;;;;;;;;;;;3342:13;3356:1;3342:16;;;;;;;;;;;;;3321:96;;;;;;;;;;2990:434;;:::o;2332:85:46:-;2371:13;2403:7;2396:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2332:85;:::o;9355:98:1:-;9406:7;9432:14;;9425:21;;9355:98;:::o;4746:2711:5:-;4942:7;2970:18:39;:16;:18::i;:::-;4917:7:5::1;:14;;;3721:68:1;3752:10;:8;:10::i;:::-;3730:33;;:10;:33;;;5392:3:31;3721:8:1;:68::i;:::-;3799:55;3818:11;:9;:11::i;:::-;3808:6;:21;10241:3:31;3799:8:1;:55::i;:::-;4961:20:5::2;5003:7;4984:26;;:7;:15;;;:26;;;4961:49;;5021:28;5052:31;5067:15;5052:14;:31::i;:::-;5021:62;;5093:29;5125:32;5141:15;5140:16;5125:14;:32::i;:::-;5093:64;;5228:46;5237:14;5253:20;5228:8;:46::i;:::-;5211:63;;5302:48;5311:15;5328:21;5302:8;:48::i;:::-;5284:66;;5440:24;5466:22:::0;5490:23:::2;5517:119;5554:14;5582:15;5611;5517:23;:119::i;:::-;5439:197;;;;;;5705:316;5732:7;:23;;;5769:15;:50;;5804:15;5769:50;;;5787:14;5769:50;5833:15;:50;;5869:14;5833:50;;;5851:15;5833:50;5897:15;:50;;5932:15;5897:50;;;5915:14;5897:50;5961:15;:50;;5997:14;5961:50;;;5979:15;5961:50;5705:13;:316::i;:::-;6052:24;6036:40;;;;;;;;:7;:12;;;:40;;;;;;;;;6032:1419;;;6295:17;6315:44;6336:22;:20;:22::i;:::-;6315:7;:14;;;:20;;:44;;;;:::i;:::-;6295:64;;6476:61;6485:29;6504:9;6485:7;:14;;;:18;;:29;;;;:::i;:::-;6516:20;6476:8;:61::i;:::-;6459:7;:14;;:78;;;::::0;::::2;6552:17;6572:89;6587:7;6596:14;6612:15;6629:14;6645:15;6572:14;:89::i;:::-;6552:109;;6755:48;6770:9;6781:21;6755:14;:48::i;:::-;6748:55;;;;;;;;;;;;6032:1419;6851:47;6860:7;:14;;;6876:21;6851:8;:47::i;:::-;6834:7;:14;;:64;;;::::0;::::2;6913:16;6932:90;6948:7;6957:14;6973:15;6990:14;7006:15;6932;:90::i;:::-;6913:109;;7118:44;7131:8;7141:20;7118:12;:44::i;:::-;7107:55;;7389:51;7404:35;:22;:20;:22::i;:::-;:33;:35::i;:::-;7389:8;:14;;:51;;;;:::i;:::-;7382:58;;;;;;;;;3864:1:1;2998::39::1;4746:2711:5::0;;;;;:::o;3438:429:13:-;3523:4;3539:24;3566:30;3576:10;3588:7;3566:9;:30::i;:::-;3539:57;;3621:16;3611:6;:26;3607:232;;3653:32;3662:10;3674:7;3683:1;3653:8;:32::i;:::-;3607:232;;;3772:56;3781:10;3793:7;3821:6;3802:16;:25;3772:8;:56::i;:::-;3607:232;3856:4;3849:11;;;3438:429;;;;:::o;3657:170:46:-;3743:4;3759:40;3769:10;3781:9;3792:6;3759:9;:40::i;:::-;3816:4;3809:11;;3657:170;;;;:::o;1862:101:16:-;1910:11;1940:16;:14;:16::i;:::-;1933:23;;1862:101;:::o;4145:172:22:-;4215:7;4241:14;:30;4272:8;4282;4292:17;:15;:17::i;:::-;4241:69;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4234:76;;4145:172;;;:::o;3022:103::-;3081:7;899:4:21;3100:18:22;;3022:103;:::o;4269:452:5:-;4323:7;4345:25;4376:10;:8;:10::i;:::-;:24;;;4401:11;:9;:11::i;:::-;4376:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4342:71;;;;4423:28;;:::i;:::-;4454:17;:15;:17::i;:::-;4423:48;;4602:23;4616:8;4602:13;:23::i;:::-;4643:71;4675:8;4685:10;4696:1;4685:13;;;;;;;;;;;4700:10;4711:1;4700:13;;;;;;;;;;;4643:31;:71::i;:::-;4636:78;;;;4269:452;:::o;1313:753:47:-;1575:60;1603:8;1584:15;:27;;5606:3:31;1575:8:47;:60::i;:::-;1646:13;1662:7;:14;1670:5;1662:14;;;;;;;;;;;;;;;;1646:30;;1686:18;1728:16;1746:5;1753:7;1762:5;1769;1776:8;1717:68;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1707:79;;;;;;1686:100;;1797:12;1812:28;1829:10;1812:16;:28::i;:::-;1797:43;;1851:14;1868:24;1878:4;1884:1;1887;1890;1868:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1851:41;;1902:79;1930:1;1912:20;;:6;:20;;;;1911:43;;;;;1948:5;1938:15;;:6;:15;;;1911:43;10474:3:31;1902:8:47;:79::i;:::-;2017:1;2009:5;:9;1992:7;:14;2000:5;1992:14;;;;;;;;;;;;;;;:26;;;;2028:31;2037:5;2044:7;2053:5;2028:8;:31::i;:::-;1313:753;;;;;;;;;;;:::o;13785:2489:1:-;14141:26;14169:38;14094:6;3721:68;3752:10;:8;:10::i;:::-;3730:33;;:10;:33;;;5392:3:31;3721:8:1;:68::i;:::-;3799:55;3818:11;:9;:11::i;:::-;3808:6;:21;10241:3:31;3799:8:1;:55::i;:::-;2970:18:39::1;:16;:18::i;:::-;14316:20:1::2;14367:1:::0;14350:13:::2;:11;:13::i;:::-;:18;14346:1744;;;14412:54;14430:6;14438;14446:9;14457:8;14412:17;:54::i;:::-;14384:82;;;;;;;;14761:58;2239:3;14770:12;:28;;5338:3:31;14761:8:1;:58::i;:::-;14833:41;14857:1;2239:3;14833:15;:41::i;:::-;14888:55;14904:9;2239:3;14915:12;:27;14888:15;:55::i;:::-;15030:28;15048:9;15030:17;:28::i;:::-;15186:1;15172:16;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15148:40;;14346:1744;;;15219:23;15233:8;15219:13;:23::i;:::-;15319:56;15333:15;15350:8;15359:1;15350:11;;;;;;;;;;;;;;15363:8;15372:1;15363:11;;;;;;;;;;;;;;15319:13;:56::i;:::-;15441:228;15470:6;15494;15518:9;15545:8;15571:15;15604:25;15647:8;15441:11;:228::i;:::-;15390:279;;;;;;;;;;;;15783:40;15799:9;15810:12;15783:15;:40::i;:::-;15910:28;15928:9;15910:17;:28::i;:::-;16037:42;16057:21;16037:19;:42::i;:::-;14346:1744;16241:26;:24;:26::i;:::-;2998:1:39;13785:2489:1::0;;;;;;;;;;;:::o;2260:254:13:-;2341:7;2383:10;:8;:10::i;:::-;2364:30;;:7;:30;;;2360:148;;;2425:2;2410:18;;;;2360:148;2466:31;2482:5;2489:7;2466:15;:31::i;:::-;2459:38;;2260:254;;;;;:::o;8769:117:1:-;8824:16;8859:20;:18;:20::i;:::-;8852:27;;8769:117;:::o;4029:110:22:-;4098:7;4124:8;4117:15;;4029:110;:::o;1135:274:37:-;1211:29;1345:5;1329:21;;1369:33;1389:12;1369:19;:33::i;:::-;1135:274;;:::o;4808:172:28:-;4892:7;4918:55;4934:14;2092:2;4918:4;:15;;:55;;;;;:::i;:::-;4911:62;;4808:172;;;;:::o;5083:194::-;5178:7;5204:66;5222:18;2155:2;5204:4;:17;;:66;;;;;:::i;:::-;5197:73;;5083:194;;;;:::o;948:166:43:-;1006:7;1025:37;1039:1;1034;:6;;4370:1:31;1025:8:43;:37::i;:::-;1072:9;1088:1;1084;:5;1072:17;;1106:1;1099:8;;;948:166;;;;:::o;3094:280:40:-;3209:7;3228:19;3287:6;2126:10;3276:17;;3274:20;3266:4;3258:13;;:36;3250:45;;3228:67;;3360:6;3342:5;:13;;3354:1;3342:13;;;3350:1;3342:13;3334:22;;:32;;3326:41;;3312:11;:55;3305:62;;;3094:280;;;;;:::o;6887:269::-;7007:7;7026:19;7086:6;2598:11;7074:18;;7072:21;7064:4;7056:13;;:37;7048:46;;7026:68;;7142:6;7133:5;:15;;7125:24;;7111:11;:38;7104:45;;;6887:269;;;;;:::o;9345:213:46:-;9498:6;9468:11;:18;9480:5;9468:18;;;;;;;;;;;;;;;:27;9487:7;9468:27;;;;;;;;;;;;;;;:36;;;;9535:7;9519:32;;9528:5;9519:32;;;9544:6;9519:32;;;;;;:::i;:::-;;;;;;;;9345:213;;;:::o;2300:181:30:-;2355:16;2374:20;2386:7;;;;2374:11;:20::i;:::-;2355:39;;2404:70;2413:33;2425:8;2435:10;2413:11;:33::i;:::-;8353:3:31;2404:8:30;:70::i;:::-;2300:181;:::o;3793:358:39:-;3849:6;3845:232;;;3871:81;3898:24;:22;:24::i;:::-;3880:15;:42;8455:3:31;3871:8:39;:81::i;:::-;3845:232;;;3983:83;4010:25;:23;:25::i;:::-;3992:15;:43;9885:3:31;3983:8:39;:83::i;:::-;3845:232;4097:6;4087:7;;:16;;;;;;;;;;;;;;;;;;4118:26;4137:6;4118:26;;;;;;:::i;:::-;;;;;;;;3793:358;:::o;4544:237::-;4591:4;4737:25;:23;:25::i;:::-;4719:15;:43;:55;;;;4767:7;;;;;;;;;;;4766:8;4719:55;4712:62;;4544:237;:::o;4894:108::-;4950:7;4976:19;4969:26;;4894:108;:::o;5008:110::-;5065:7;5091:20;5084:27;;5008:110;:::o;35083:115:1:-;35142:7;35168:23;:9;;:21;:23::i;:::-;35161:30;;35083:115;:::o;866:101:31:-;935:9;930:34;;946:18;954:9;946:7;:18::i;:::-;930:34;866:101;;:::o;7068:559:46:-;7195:71;7222:1;7204:20;;:6;:20;;;;8770:3:31;7195:8:46;:71::i;:::-;7276:72;7306:1;7285:23;;:9;:23;;;;8838:3:31;7276:8:46;:72::i;:::-;7359:47;7380:6;7388:9;7399:6;7359:20;:47::i;:::-;7437:68;7459:6;9316:3:31;7437:9:46;:17;7447:6;7437:17;;;;;;;;;;;;;;;;:21;;:68;;;;;:::i;:::-;7417:9;:17;7427:6;7417:17;;;;;;;;;;;;;;;:88;;;;7538:32;7563:6;7538:9;:20;7548:9;7538:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7515:9;:20;7525:9;7515:20;;;;;;;;;;;;;;;:55;;;;7602:9;7585:35;;7594:6;7585:35;;;7613:6;7585:35;;;;;;:::i;:::-;;;;;;;;7068:559;;;:::o;4220:98:39:-;4272:39;4281:14;:12;:14::i;:::-;8397:3:31;4272:8:39;:39::i;:::-;4220:98::o;8453:158:1:-;8525:35;8552:7;8525:9;;:26;;:35;;;;:::i;:::-;8513:9;:47;;;;8575:29;8596:7;8575:29;;;;;;:::i;:::-;;;;;;;;8453:158;:::o;34716:361::-;34771:16;34790:9;;34771:28;;34813:24;:8;:22;:24::i;:::-;34809:262;;;34864:68;34889:42;34916:14;;34889:26;:42::i;:::-;34864:8;:24;;:68;;;;:::i;:::-;34853:79;;34957:69;34984:41;35011:13;:11;:13::i;:::-;34984:26;:41::i;:::-;34957:8;:26;;:69;;;;:::i;:::-;34946:80;;35052:8;35040:9;:20;;;;34809:262;34716:361;:::o;7270:786:24:-;7534:7;7992:40;2544:1;7992:10;:21;;:40;;;;:::i;:::-;7923:54;2605:2;7923:15;:27;;:54;;;;:::i;:::-;7852:56;2668:2;7852:16;:28;;:56;;;;:::i;:::-;7784:53;2730:3;7784:14;:26;;:53;;;;:::i;:::-;7714:55;2794:3;7714:15;:27;;:55;;;;:::i;:::-;7644;2858:3;7644:15;:27;;:55;;;;:::i;:::-;7572:57;2923:3;7572:16;:28;;:57;;;;:::i;:::-;:127;:197;:265;:336;:405;:460;7553:479;;7270:786;;;;;;;;;:::o;5583:129::-;5641:7;5667:38;2544:1;5667:6;:19;;:38;;;;:::i;:::-;5660:45;;5583:129;;;:::o;2386:188:45:-;2447:7;2494:10;2506:12;2520:15;2537:13;:11;:13::i;:::-;2560:4;2483:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2473:94;;;;;;2466:101;;2386:188;:::o;7175:397:1:-;7251:87;2347:4;7260:17;:45;;5289:3:31;7251:8:1;:87::i;:::-;7348;2420:4;7357:17;:45;;5228:3:31;7348:8:1;:87::i;:::-;7458:49;7489:17;7458:9;;:30;;:49;;;;:::i;:::-;7446:9;:61;;;;7522:43;7547:17;7522:43;;;;;;:::i;:::-;;;;;;;;7175:397;:::o;915:167:50:-;973:7;992:9;1008:1;1004;:5;992:17;;1019:37;1033:1;1028;:6;;4322:1:31;1019:8:50;:37::i;:::-;1074:1;1067:8;;;915:167;;;;:::o;41074:135:1:-;41134:7;41160:6;:42;;41187:15;41160:42;;;41169:15;41160:42;41153:49;;41074:135;;;:::o;41371:144::-;41451:7;41477:31;41486:6;41494:13;41477:8;:31::i;:::-;41470:38;;41371:144;;;;:::o;9109:1011:5:-;9303:24;9341:22;9377:23;9508:25;9550:1;9536:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9508:44;;9576:15;:50;;9611:15;9576:50;;;9594:14;9576:50;9562:8;9571:1;9562:11;;;;;;;;;;;;;:64;;;;;9650:15;:50;;9686:14;9650:50;;;9668:15;9650:50;9636:8;9645:1;9636:11;;;;;;;;;;;;;:64;;;;;9711:28;;:::i;:::-;9742:17;:15;:17::i;:::-;9711:48;;9789:71;9821:8;9831:10;9842:1;9831:13;;;;;;;;;;;9846:10;9857:1;9846:13;;;;;;;;;;;9789:31;:71::i;:::-;9770:90;;9871:30;;:::i;:::-;9904:51;9926:10;9938:16;9904:21;:51::i;:::-;9871:84;;9983:15;:51;;10019:12;10032:1;10019:15;;;;;;;;;;;9983:51;;;10001:12;10014:1;10001:15;;;;;;;;;;;9983:51;9966:68;;10062:15;:51;;10098:12;10111:1;10098:15;;;;;;;;;;;10062:51;;;10080:12;10093:1;10080:15;;;;;;;;;;;10062:51;10044:69;;9109:1011;;;;;;;;;;:::o;2239:130:28:-;2298:6;2323:39;1843:1;2323:4;:16;;:39;;;;:::i;:::-;2316:46;;2239:130;;;:::o;2453:135::-;2514:6;2539:42;1902:2;2539:4;:16;;:42;;;;:::i;:::-;2532:49;;2453:135;;;:::o;2691:168::-;2767:7;2793:59;1978:2;2793:4;:17;;:59;;;;:::i;:::-;2786:66;;2691:168;;;:::o;2942:130::-;3000:7;3026:39;2034:2;3026:4;:17;;:39;;;;:::i;:::-;3019:46;;2942:130;;;:::o;3145:129::-;3205:4;3228:39;2092:2;3228:4;:15;;:39;;;;:::i;:::-;3221:46;;3145:129;;;:::o;3341:143::-;3405:7;3431:46;2155:2;3431:4;:17;;:46;;;;:::i;:::-;3424:53;;3341:143;;;:::o;810:131:37:-;888:46;902:1;897;:6;5002:3:31;888:8:37;:46::i;:::-;810:131;;:::o;17684:3092:5:-;17972:19;18005:27;18046:38;18264:28;;:::i;:::-;18295:17;:15;:17::i;:::-;18264:48;;18519:14;:12;:14::i;:::-;18515:2082;;;18855:29;18887:71;18919:8;18929:10;18940:1;18929:13;;;;;;;;;;;18944:10;18955:1;18944:13;;;;;;;;;;;18887:31;:71::i;:::-;18855:103;;18972:30;;:::i;:::-;19005:56;19027:10;19039:21;19005;:56::i;:::-;18972:89;;19138:90;19152:15;19169:8;19178:1;19169:11;;;;;;;;;;;;;;19182:8;19191:1;19182:11;;;;;;;;;;;;;;19195:12;19208:1;19195:15;;;;;;;;;;;19212:12;19225:1;19212:15;;;;;;;;;;;19138:13;:90::i;:::-;19243:38;19259:21;19243:15;:38::i;:::-;19324:27;19332:8;19342;19324:7;:27::i;:::-;19296:55;;;;;;;;19826:95;19864:21;19887:11;19900:13;:11;:13::i;:::-;19915:5;19826:37;:95::i;:::-;19809:14;:112;;;;18515:2082;;;;;20180:27;20188:8;20198;20180:7;:27::i;:::-;20152:55;;;;;;;;20569:17;20552:14;:34;;;;18515:2082;20727:11;20740:10;20766:1;20752:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20719:50;;;;;;;17684:3092;;;;;;;;;;;:::o;42454:215:1:-;42546:46;42559:7;42567:1;42559:10;;;;;;;;;;;;;;42571:20;42586:4;42571:14;:20::i;:::-;42546:12;:46::i;:::-;42533:7;42541:1;42533:10;;;;;;;;;;;;;:59;;;;;42615:47;42628:7;42636:1;42628:10;;;;;;;;;;;;;;42640:21;42655:5;42640:14;:21::i;:::-;42615:12;:47::i;:::-;42602:7;42610:1;42602:10;;;;;;;;;;;;;:60;;;;;42454:215;:::o;43921:6817::-;44606:4;44584:27;;:10;:27;;;44580:6152;;44880:12;44906:4;44898:18;;44917:8;;44898:28;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;44879:47;;;45144:7;45173:1;45168:3398;;;;48714:9;45168:3398;45624:4;45621:1;45618;45603:26;45726:66;45698:1;45692:8;45663:151;46167:1;46049:66;46014:5;45982:159;45954:236;45951:2;;;46238:16;46235:1;46232;46217:38;46290:16;46287:1;46280:27;45951:2;47629;47623:4;47620:1;47605:27;47814:2;47808:4;47801:16;48222:2;48204:16;48200:25;48194:4;48188;48173:53;48544:2;48526:16;48522:25;48519:1;48512:36;45010:3745;48785:23;48799:8;48785:13;:23::i;:::-;48824:17;48843:29;48878:224;48903:6;48927;48951:9;48978:8;49004:15;49037:25;49080:8;48878:7;:224;;:::i;:::-;48823:279;;;;;49117:29;49133:12;49117:15;:29;;:::i;:::-;49648:2;49633:12;49627:19;49623:28;50032:4;50018:12;50014:23;50068:9;50061:5;50054:24;50341:66;50314:4;50307:5;50303:16;50275:150;50462:4;50455:5;50451:16;50442:25;;50704:2;50698:4;50694:13;50687:5;50680:28;7503:106:22;7561:7;7587:8;:15;7596:5;7587:15;;;;;;;;;;;;7580:22;;7503:106;;;:::o;8128:679:24:-;8220:19;8253:22;8289:18;8321:21;8356:19;8389:22;8425:18;8483:25;8501:6;8483:17;:25::i;:::-;8468:40;;8536:24;8553:6;8536:16;:24::i;:::-;8518:42;;8584:24;8601:6;8584:16;:24::i;:::-;8570:38;;8635:23;8651:6;8635:15;:23::i;:::-;8618:40;;8683:25;8701:6;8683:17;:25::i;:::-;8668:40;;8736:24;8753:6;8736:16;:24::i;:::-;8718:42;;8783:17;8793:6;8783:9;:17::i;:::-;8770:30;;8128:679;;;;;;;;;:::o;1793:180:43:-;1851:7;1870:9;1886:1;1882;:5;1870:17;;1897:51;1911:1;1906;:6;:20;;;;1925:1;1920;1916;:5;;;;;;:10;1906:20;4467:1:31;1897:8:43;:51::i;:::-;1965:1;1958:8;;;1793:180;;;;:::o;2485:355:41:-;2547:7;2566:38;2580:1;2575;:6;;4516:1:31;2566:8:41;:38::i;:::-;2624:1;2619;:6;2615:219;;;2648:1;2641:8;;;;2615:219;2680:17;893:4;2700:1;:7;2680:27;;2721:51;893:4;2742:1;2730:9;:13;;;;;;:20;4564:1:31;2721:8:41;:51::i;:::-;2822:1;2810:9;:13;;;;;;2803:20;;;2485:355;;;;;:::o;6747:251:22:-;6895:6;6920:14;:33;6954:8;6964;6974:11;6987:3;6920:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6913:78;;6747:251;;;;;:::o;2490:245:5:-;2548:35;;:::i;:::-;2618:21;2634:4;2618:15;:21::i;:::-;2595:17;2613:1;2595:20;;;;;;;;;;:44;;;;;2672:22;2688:5;2672:15;:22::i;:::-;2649:17;2667:1;2649:20;;;;;;;;;;:45;;;;;2490:245;:::o;41702:201:1:-;41788:42;41797:7;41805:1;41797:10;;;;;;;;;;;;;;41809:20;41824:4;41809:14;:20::i;:::-;41788:8;:42::i;:::-;41775:7;41783:1;41775:10;;;;;;;;;;;;;:55;;;;;41853:43;41862:7;41870:1;41862:10;;;;;;;;;;;;;;41874:21;41889:5;41874:14;:21::i;:::-;41853:8;:43::i;:::-;41840:7;41848:1;41840:10;;;;;;;;;;;;;:56;;;;;41702:201;:::o;4016:104:13:-;4092:21;4098:6;4106;4092:5;:21::i;:::-;4016:104;;:::o;13410:2088:5:-;13707:7;13728:16;13758;13799:28;;:::i;:::-;13830:17;:15;:17::i;:::-;13799:48;;14152:29;14184:71;14216:8;14226:10;14237:1;14226:13;;;;;;;;;;;14241:10;14252:1;14241:13;;;;;;;;;;;14184:31;:71::i;:::-;14152:103;;14265:30;;:::i;:::-;14298:56;14320:10;14332:21;14298;:56::i;:::-;14265:89;;14419:90;14433:15;14450:8;14459:1;14450:11;;;;;;;;;;;;;;14463:8;14472:1;14463:11;;;;;;;;;;;;;;14476:12;14489:1;14476:15;;;;;;;;;;;14493:12;14506:1;14493:15;;;;;;;;;;;14419:13;:90::i;:::-;14520:38;14536:21;14520:15;:38::i;:::-;14570:20;14592:26;14622:27;14630:8;14640;14622:7;:27::i;:::-;14569:80;;;;14664:10;:21;;;;;;;;;;;;14660:113;;;14701:61;14712:12;14726:20;14736:9;14726;:20::i;:::-;14748:13;:11;:13::i;:::-;14701:10;:61::i;:::-;14660:113;15223:95;15261:21;15284:12;15298:13;:11;:13::i;:::-;15313:4;15223:37;:95::i;:::-;15206:14;:112;;;;15449:12;15463:9;15488:1;15474:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15441:50;;;;;;;;;;;13410:2088;;;;;;;;;;;:::o;43212:209:1:-;43302:44;43313:7;43321:1;43313:10;;;;;;;;;;;;;;43325:20;43340:4;43325:14;:20::i;:::-;43302:10;:44::i;:::-;43289:7;43297:1;43289:10;;;;;;;;;;;;;:57;;;;;43369:45;43380:7;43388:1;43380:10;;;;;;;;;;;;;;43392:21;43407:5;43392:14;:21::i;:::-;43369:10;:45::i;:::-;43356:7;43364:1;43356:10;;;;;;;;;;;;;:58;;;;;43212:209;:::o;26132:1459:5:-;26337:16;26356:9;;26337:28;;26379:24;:8;:22;:24::i;:::-;:58;;;;;26422:15;26407:12;:30;26379:58;26375:1210;;;26453:19;26475:95;26511:13;26526;26541;26556;26475:35;:95::i;:::-;26453:117;;26585:18;26606:215;26658:13;26689;26720;26751;26782:25;:8;:23;:25::i;:::-;26606:34;:215::i;:::-;26585:236;;26836:26;26865:22;:8;:20;:22::i;:::-;26836:51;;26901:43;26947:40;:8;:38;:40::i;:::-;26901:86;;27001:26;27030:220;27065:35;27118:18;27154:12;27184:11;27213:23;:8;:21;:23::i;:::-;27030:17;:220::i;:::-;27001:249;;27291:18;27269;:40;27265:310;;27392:43;27416:18;27392:8;:23;;:43;;;;:::i;:::-;27381:54;;27464:58;27506:15;27464:8;:41;;:58;;;;:::i;:::-;27453:69;;27552:8;27540:9;:20;;;;27265:310;26375:1210;;;;;;26132:1459;;;;;;:::o;1862:617:41:-;1922:7;1941:15;1963:1;1959;:5;1941:23;;1974:57;1988:1;1983;:6;:26;;;;2008:1;2003;1993:7;:11;;;;;;:16;1983:26;4467:1:31;1974:8:41;:57::i;:::-;2057:1;2046:7;:12;2042:431;;;2081:1;2074:8;;;;;2042:431;2461:1;893:4;2449:1;2439:7;:11;2438:19;;;;;;2437:25;2430:32;;;1862:617;;;;;:::o;1402:239::-;1460:7;1552:37;1566:1;1561;:6;;4370:1:31;1552:8:41;:37::i;:::-;1599:9;1615:1;1611;:5;1599:17;;1633:1;1626:8;;;1402:239;;;;:::o;7463:466:5:-;7709:7;7795:127;7823:21;7846:22;7870:11;:18;;;7890:14;7906:15;7795:27;:127::i;:::-;7788:134;;7463:466;;;;;;;:::o;42107:154:1:-;42193:7;42219:35;42232:6;42240:13;42219:12;:35::i;:::-;42212:42;;42107:154;;;;:::o;7935:467:5:-;8182:7;8268:127;8296:21;8319:22;8343:11;:18;;;8363:14;8379:15;8268:27;:127::i;:::-;8261:134;;7935:467;;;;;;;:::o;42871:150:1:-;42955:7;42981:33;42992:6;43000:13;42981:10;:33::i;:::-;42974:40;;42871:150;;;;:::o;4812:112:41:-;4866:7;893:4;4893:1;:7;4892:25;;4916:1;4892:25;;;4911:1;893:4;4905:7;4892:25;4885:32;;4812:112;;;:::o;2846:682::-;2906:7;2925:38;2939:1;2934;:6;;4516:1:31;2925:8:41;:38::i;:::-;2983:1;2978;:6;2974:548;;;3007:1;3000:8;;;;2974:548;3039:17;893:4;3059:1;:7;3039:27;;3080:51;893:4;3101:1;3089:9;:13;;;;;;:20;4564:1:31;3080:8:41;:51::i;:::-;3510:1;3505;3500;3488:9;:13;3487:19;;;;;;3486:25;3479:32;;;2846:682;;;;;:::o;43427:488:1:-;43485:11;43882:10;:8;:10::i;:::-;:24;;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;43875:33;;43427:488;:::o;3224:1238:3:-;3370:7;4290:9;4301:10;4313:15;4330:10;4344:55;4369:8;4379:9;4390:8;4344:24;:55::i;:::-;4289:110;;;;;;;;4416:39;4436:1;4439:2;4443:7;4452:2;4416:19;:39::i;:::-;4409:46;;;;;;3224:1238;;;;;:::o;3199:183:45:-;3276:7;3341:20;:18;:20::i;:::-;3363:10;3312:62;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3302:73;;;;;;3295:80;;3199:183;;;:::o;10997:1016:5:-;11139:7;11148:16;11176:30;11209:19;:8;:17;:19::i;:::-;11176:52;;11238:70;11255:30;11247:38;;;;;;;;:4;:38;;;;;;;;;5443:3:31;11238:8:5;:70::i;:::-;11319:26;11348:27;:8;:25;:27::i;:::-;11319:56;;11385;11421:9;:16;11439:1;11385:35;:56::i;:::-;11451:24;11465:9;11451:13;:24::i;:::-;11486:28;;:::i;:::-;11517:17;:15;:17::i;:::-;11486:48;;11545:26;11574:72;11606:9;11617:10;11628:1;11617:13;;;;;;;;;;;11632:10;11643:1;11632:13;;;;;;;;;;;11574:31;:72::i;:::-;11545:101;;11863:20;11886:31;11895:18;11915:1;11886:8;:31::i;:::-;11863:54;;11945:18;11928:14;:35;;;;11982:12;11996:9;11974:32;;;;;;;;;10997:1016;;;;;;;:::o;3900:110:13:-;3979:24;3985:9;3996:6;3979:5;:24::i;:::-;3900:110;;:::o;27876:172:5:-;;;;:::o;3885:149:46:-;3974:7;4000:11;:18;4012:5;4000:18;;;;;;;;;;;;;;;:27;4019:7;4000:27;;;;;;;;;;;;;;;;3993:34;;3885:149;;;;:::o;8892:298:1:-;8953:16;8981:34;9032:1;9018:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8981:53;;9067:24;9086:4;9067:18;:24::i;:::-;9044:17;9062:1;9044:20;;;;;;;;;;;;;:47;;;;;9124:25;9143:5;9124:18;:25::i;:::-;9101:17;9119:1;9101:20;;;;;;;;;;;;;:48;;;;;9166:17;9159:24;;;8892:298;:::o;1415:374:37:-;1511:1;1496:5;:12;:16;1492:53;;;1528:7;;1492:53;1555:16;1574:5;1580:1;1574:8;;;;;;;;;;;;;;1555:27;;1597:9;1609:1;1597:13;;1592:191;1616:5;:12;1612:1;:16;1592:191;;;1649:15;1667:5;1673:1;1667:8;;;;;;;;;;;;;;1649:26;;1689:51;1709:7;1698:18;;:8;:18;;;4890:3:31;1689:8:37;:51::i;:::-;1765:7;1754:18;;1592:191;1630:3;;;;;1592:191;;;;1415:374;;;:::o;1969:544:16:-;2057:4;1663:42;2078:29;;:10;:8;:10::i;:::-;:29;;;;2077:63;;;;;2112:28;2131:8;2112:18;:28::i;:::-;2077:63;2073:434;;;2272:10;:8;:10::i;:::-;2258:24;;:10;:24;;;2251:31;;;;2073:434;2435:16;:14;:16::i;:::-;:27;;;2463:8;2473:7;2490:4;2435:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2428:68;;1969:544;;;;;:::o;1074:3172:31:-;2215:4;2210:2;2199:9;2195:18;2191:29;2258:2;2247:9;2243:18;2230:31;;2308:4;2303:2;2292:9;2288:18;2284:29;2351:2;2340:9;2336:18;2323:31;;2403:4;2398:2;2387:9;2383:18;2379:29;3061:8;3057:2;3053:17;3043:6;3040:1;3036:14;3029:5;3025:26;3021:50;3003:16;2999:73;2994:3;2990:83;3593:66;3588:3;3581:79;3799:66;3793:4;3786:80;3941:1;3935:4;3928:15;4014:12;4008:4;4001:26;4234:3;4231:1;4224:14;10556:121:46;;;;:::o;1765:176:50:-;1842:7;1861:27;1875:1;1870;:6;;1878:9;1861:8;:27::i;:::-;1898:9;1914:1;1910;:5;1898:17;;1933:1;1926:8;;;1765:176;;;;;:::o;2009:340:38:-;2068:6;2086:9;2098:28;2119:5;2098:13;:28::i;:::-;2086:40;;2187:18;2214:1;2209:2;:6;:78;;1324:6;2254:2;:33;2209:78;;;1324:6;2218:2;:33;2209:78;2187:101;;1259:4;2305:11;:37;;;;;;2298:44;;;;2009:340;;;:::o;3594:171:28:-;3678:7;3704:54;3721:13;1843:1;3704:4;:16;;:54;;;;;:::i;:::-;3697:61;;3594:171;;;;:::o;3878:180::-;3966:7;3992:59;4009:15;1902:2;3992:4;:16;;:59;;;;;:::i;:::-;3985:66;;3878:180;;;;:::o;8603:131:40:-;8677:7;8720:6;8711:5;:15;;8703:24;;8696:31;;8603:131;;;;:::o;9370:237::-;9444:7;9593:6;2545:11;9571:5;9563:25;9562:37;;9554:46;;9547:53;;9370:237;;;;:::o;8941:::-;9015:7;9164:6;2386:11;9142:5;9134:25;9133:37;;9125:46;;9118:53;;8941:237;;;;:::o;11062:142::-;11137:7;2439:11;11179:6;11171:4;:14;;11163:23;;:34;11156:41;;11062:142;;;;:::o;3388:427:45:-;3433:15;3790:9;3779:20;;3765:44;:::o;3430:392:5:-;3573:35;;:::i;:::-;3647:50;3666:4;3672:10;3683:1;3672:13;;;;;;;;;;;3687:9;3647:18;:50::i;:::-;3624:17;3642:1;3624:20;;;;;;;;;;:73;;;;;3730:51;3749:5;3756:10;3767:1;3756:13;;;;;;;;;;;3771:9;3730:18;:51::i;:::-;3707:17;3725:1;3707:20;;;;;;;;;;:74;;;;;3430:392;;;;:::o;12135:487:40:-;12209:6;12227:12;2386:11;12265:6;12257:4;:14;;12249:23;;:34;12227:57;;2846:11;12558:5;:19;:57;;12610:5;12558:57;;;2386:11;12596:9;12581:5;:25;12558:57;12551:64;;;12135:487;;;;:::o;10534:142::-;10609:7;2280:11;10651:6;10643:4;:14;;10635:23;;:34;10628:41;;10534:142;;;;:::o;9730:143::-;9803:4;9865:1;2126:10;9843:6;9835:4;:14;;9827:23;;:33;9826:40;9819:47;;9730:143;;;;:::o;11590:142::-;11665:7;2598:11;11707:6;11699:4;:14;;11691:23;;:34;11684:41;;11590:142;;;;:::o;22589:583:5:-;22882:16;22900:20;22922;22944:19;22967:98;23006:14;;23034:21;22967:25;:98::i;:::-;22881:184;;;;;;;;23103:62;23115:8;23125:12;23139;23153:11;23103;:62::i;:::-;22589:583;;;;;:::o;20782:592::-;20872:19;20893:27;20932:30;20965:19;:8;:17;:19::i;:::-;20932:52;;21147:53;21139:61;;;;;;;;:4;:61;;;;;;;;;21135:233;;;21244:47;21272:8;21282;21244:27;:47::i;:::-;21216:75;;;;;;;;21135:233;;;21322:35;7850:3:31;21322:7:5;:35::i;:::-;21135:233;20782:592;;;;;;:::o;11456:743:11:-;11642:21;11711:13;11707:486;;;11814:10;11827:57;11867:16;11827:33;11844:15;11827:10;:16;;:33;;;;:::i;:::-;:39;;:57;;;;:::i;:::-;11814:70;;11914:18;11929:2;11914:10;:14;;:18;;;;:::i;:::-;11898:34;;11707:486;;;;12060:10;12073:61;12117:16;12073:35;12092:15;12073:10;:18;;:35;;;;:::i;:::-;:43;;:61;;;;:::i;:::-;12060:74;;12164:18;12179:2;12164:10;:14;;:18;;;;:::i;:::-;12148:34;;11707:486;;11456:743;;;;;;:::o;2157:148:43:-;2219:7;2238:38;2252:1;2247;:6;;4516:1:31;2238:8:43;:38::i;:::-;2297:1;2293;:5;;;;;;2286:12;;2157:148;;;;:::o;5816:144:24:-;5881:6;5906:47;2923:3;5906:6;:18;;:47;;;;:::i;:::-;5899:54;;5816:144;;;:::o;6061:142::-;6125:6;6150:46;2858:3;6150:6;:18;;:46;;;;:::i;:::-;6143:53;;6061:142;;;:::o;6306:::-;6370:6;6395:46;2794:3;6395:6;:18;;:46;;;;:::i;:::-;6388:53;;6306:142;;;:::o;6548:140::-;6611:6;6636:45;2730:3;6636:6;:18;;:45;;;;:::i;:::-;6629:52;;6548:140;;;:::o;6791:143::-;6856:6;6881:46;2668:2;6881:6;:18;;:46;;;;:::i;:::-;6874:53;;6791:143;;;:::o;7034:141::-;7098:6;7123:45;2605:2;7123:6;:18;;:45;;;;:::i;:::-;7116:52;;7034:141;;;:::o;2741::5:-;2814:7;2840:10;:35;;2866:9;2840:35;;;2853:10;2840:35;2833:42;;2741:141;;;:::o;8512:410:46:-;8587:68;8615:1;8596:21;;:7;:21;;;;8968:3:31;8587:8:46;:68::i;:::-;8666:49;8687:7;8704:1;8708:6;8666:20;:49::i;:::-;8747:67;8770:6;9382:3:31;8747:9:46;:18;8757:7;8747:18;;;;;;;;;;;;;;;;:22;;:67;;;;;:::i;:::-;8726:9;:18;8736:7;8726:18;;;;;;;;;;;;;;;:88;;;;8839:24;8856:6;8839:12;;:16;;:24;;;;:::i;:::-;8824:12;:39;;;;8904:1;8878:37;;8887:7;8878:37;;;8908:6;8878:37;;;;;;:::i;:::-;;;;;;;;8512:410;;:::o;15504:581:5:-;15594:20;15616:26;15654:30;15687:19;:8;:17;:19::i;:::-;15654:52;;15851:57;15843:65;;;;;;;;:4;:65;;;;;;;;;15839:240;;;15952:50;15983:8;15993;15952:30;:50::i;:::-;15924:78;;;;;;;;15839:240;;;16033:35;6263:3:31;16033:7:5;:35::i;:::-;15839:240;15504:581;;;;;;:::o;1459:362:0:-;1599:23;;:::i;:::-;1625:10;1599:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1686:6;:20;;;1653:53;;:29;1670:11;1653:12;:16;;:29;;;;:::i;:::-;:53;;1708:17;;;;;;;;;;;;;;;;;1645:81;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1779:6;:16;;;1744:51;;:31;1761:13;1744:12;:16;;:31;;;;:::i;:::-;:51;;1797:16;;;;;;;;;;;;;;;;;1736:78;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1459:362;;;;:::o;2311:232:43:-;2371:7;2390:38;2404:1;2399;:6;;4516:1:31;2390:8:43;:38::i;:::-;2448:1;2443;:6;2439:98;;;2472:1;2465:8;;;;2439:98;2525:1;2520;2516;:5;2515:11;;;;;;2511:1;:15;2504:22;;2311:232;;;;;:::o;2609:847:4:-;2787:6;3245:17;3265:130;3293:8;3315:17;3346:8;3368:17;3265:14;:130::i;:::-;3245:150;;3412:37;3439:9;3412:26;:37::i;:::-;3405:44;;;2609:847;;;;;;:::o;3954:1459::-;4165:6;4849:17;4869:130;4897:8;4919:17;4950:8;4972:17;4869:14;:130::i;:::-;4849:150;;5009:22;5034:39;5047:25;5062:9;5047:8;:14;;:25;;;;:::i;:::-;5034:8;:12;;:39;;;;:::i;:::-;5009:64;;5083:24;5110:42;5137:14;5110:26;:42::i;:::-;5083:69;;5389:17;5369;:37;5362:44;;;;;3954:1459;;;;;;;:::o;5786:955:22:-;5999:7;6119:14;6136:88;6167:12;6181:11;6194:12;6208:15;6136:23;6147:11;6136:10;:23::i;:::-;:30;;:88;;;;;;;:::i;:::-;6119:105;;6464:14;2237:9;6499:29;6481:15;:47;:71;;6464:88;;6576:9;:44;;6609:11;6576:44;;;6588:18;:11;:16;:18::i;:::-;6576:44;6562:58;;6699:6;6675:8;:21;6684:11;6675:21;;;;;;;;;;;:30;;;;6723:11;6716:18;;;;5786:955;;;;;;;:::o;4534:169:28:-;4617:7;4643:53;4661:12;2034:2;4643:4;:17;;:53;;;;;:::i;:::-;4636:60;;4534:169;;;;:::o;4197:217::-;4303:7;4329:78;4347:17;1978:2;4329:4;:17;;:78;;;;;:::i;:::-;4322:85;;4197:217;;;;:::o;8155:2546:3:-;8357:17;9922:75;9943:32;2015:6;9943:9;:17;;:32;;;;:::i;:::-;9931:8;:44;;5915:3:31;9922:8:3;:75::i;:::-;10183:18;10206:56;10220:41;10259:1;893:4:41;10242:18:3;10220:15;:21;;:41;;;;:::i;:::-;10206:9;:13;;:56;;;;:::i;:::-;10183:79;;10276:20;10299:60;10314:44;10356:1;893:4:41;10339:18:3;10314:16;:24;;:44;;;;:::i;:::-;10299:10;:14;;:60;;;;:::i;:::-;10276:83;;10386:64;10425:24;10440:8;10425:10;:14;;:24;;;;:::i;:::-;10386:30;10407:8;10386:12;:20;;:30;;;;:::i;:::-;:38;;:64;;;;:::i;:::-;10374:76;;8155:2546;;10471:71;10492:10;10480:9;:22;880:3:2;10471:8:3;:71::i;:::-;10615:79;10637:34;2070:6;10637:10;:18;;:34;;;;:::i;:::-;10624:9;:47;;5966:3:31;10615:8:3;:79::i;:::-;8155:2546;;;;;;;:::o;11052:2502::-;11255:16;12841:71;12862:10;12850:9;:22;880:3:2;12841:8:3;:71::i;:::-;12922:79;12944:34;2070:6;12944:10;:18;;:34;;;;:::i;:::-;12931:9;:47;;5966:3:31;12922:8:3;:79::i;:::-;13187:18;13210:56;13224:41;13263:1;893:4:41;13246:18:3;13224:15;:21;;:41;;;;:::i;:::-;13210:9;:13;;:56;;;;:::i;:::-;13187:79;;13280:20;13303:60;13318:44;13360:1;893:4:41;13343:18:3;13318:16;:24;;:44;;;;:::i;:::-;13303:10;:14;;:60;;;;:::i;:::-;13280:83;;13389:62;13423:27;13440:9;13423:12;:16;;:27;;;;:::i;:::-;13389;13406:9;13389:10;:16;;:27;;;;:::i;:::-;:33;;:62;;;;:::i;:::-;13378:73;;11052:2502;;13472:75;13493:32;2015:6;13493:9;:17;;:32;;;;:::i;:::-;13481:8;:44;;5915:3:31;13472:8:3;:75::i;:::-;11052:2502;;;;;;;:::o;4698:1119::-;4886:9;4909:10;4933:15;4962:10;5015:47;5034:27;5052:8;5034:9;:17;;:27;;;;:::i;:::-;893:4:41;5015:18:3;;:47;;;;:::i;:::-;5011:51;;5076:14;5093:29;5113:8;5093;5102:1;5093:11;;;;;;;;;;;;;;:19;;:29;;;;:::i;:::-;5076:46;;5136:14;5153:30;5173:9;5153:8;5162:1;5153:11;;;;;;;;;;;;;;:19;;:30;;;;:::i;:::-;5136:47;;5202:18;5213:6;5202;:10;;:18;;;;:::i;:::-;5197:23;;5239:32;5259:8;5268:1;5259:11;;;;;;;;;;;;;;5239:8;5248:1;5239:11;;;;;;;;;;;;;;:19;;:32;;;;:::i;:::-;5234:37;;4698:1119;;5474:72;5536:9;5474:53;5517:9;5475:32;5495:8;5504:1;5495:11;;;;;;;;;;;;;;5475:8;5484:1;5475:11;;;;;;;;;;;;;;:19;;:32;;;;:::i;:::-;5474:42;;:53;;;;:::i;:::-;:61;;:72;;;;:::i;:::-;5464:82;;5556:12;5571:99;5661:8;5571:81;5642:9;5571:62;893:4:41;5614:1:3;:18;5572:32;5592:8;5601:1;5592:11;;;;;;;;;;;;;;5572:8;5581:1;5572:11;;;;;;;;;;;;;;:19;;:32;;;;:::i;:::-;5571:42;;:62;;;;:::i;:::-;:70;;:81;;;;:::i;:::-;:89;;:99;;;;:::i;:::-;5556:114;;5680:12;5695:68;5738:24;5753:8;5738;:14;;:24;;;;:::i;:::-;5696:32;5716:8;5725:1;5716:11;;;;;;;;;;;;;;5696:8;5705:1;5696:11;;;;;;;;;;;;;;:19;;:32;;;;:::i;:::-;5695:42;;:68;;;;:::i;:::-;5680:83;;5783:27;5805:4;5783:17;5795:4;5783:7;:11;;:17;;;;:::i;:::-;:21;;:27;;;;:::i;:::-;5773:37;;4698:1119;;;;;;;;;:::o;6319:784::-;6517:17;6546:19;6568:27;893:4:41;6576:1:3;:18;6568:1;:7;;:27;;;;:::i;:::-;6546:49;;6664:15;6682:43;6723:1;6683:30;893:4:41;6694:1:3;:18;6683:2;:10;;:30;;;;:::i;:::-;6682:40;;:43;;;;:::i;:::-;6664:61;;6821:16;6840:20;6852:7;6840;:11;;:20;;;;:::i;:::-;6821:39;;6870:17;6890:31;6909:8;6919:1;6890:18;:31::i;:::-;6870:51;;7007:17;7027;7034:9;7027:2;:6;;:17;;;;:::i;:::-;7007:37;;7066:30;7084:11;7066:9;:17;;:30;;;;:::i;:::-;7054:42;;6319:784;;;;;;;;;;;:::o;867:156:29:-;927:25;982:4;971:45;;;;;;;;;;;;:::i;:::-;964:52;;867:156;;;:::o;1205:185::-;1273:26;1338:4;1327:56;;;;;;;;;;;;:::i;:::-;1311:72;;;;;;1205:185;;;:::o;7898:294:46:-;7973:49;8002:1;8006:7;8015:6;7973:20;:49::i;:::-;8048:24;8065:6;8048:12;;:16;;:24;;;;:::i;:::-;8033:12;:39;;;;8103:30;8126:6;8103:9;:18;8113:7;8103:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;8082:9;:18;8092:7;8082:18;;;;;;;;;;;;;;;:51;;;;8169:7;8148:37;;8165:1;8148:37;;;8178:6;8148:37;;;;;;:::i;:::-;;;;;;;;7898:294;;:::o;9196:153:1:-;9268:7;9294:6;:48;;9324:18;9294:48;;;9303:18;9294:48;9287:55;;9196:153;;;:::o;7578:279::-;7664:4;7712:51;7724:38;;;7712:11;:51::i;:::-;7700:8;:63;7699:151;;;;7793:56;7805:43;;;7793:11;:56::i;:::-;7781:8;:68;7699:151;7680:170;;7578:279;;;:::o;13692:345:42:-;13737:6;13838:37;13851:1;13847;:5;4838:3:31;13838:8:42;:37::i;:::-;13909:1;2973:4;1935;2964:13;13889:21;:46;;;;;3028:4;1935;3019:13;13914:1;:21;13889:46;13885:146;;;1935:4;13958:9;13965:1;13958:6;:9::i;:::-;:18;;;;;;13951:25;;;;13885:146;14014:6;14018:1;14014:3;:6::i;:::-;14007:13;;13692:345;;;;:::o;7398:373:40:-;7516:7;7535:19;7595:6;2386:11;7583:18;;7581:21;7573:4;7565:13;;:37;7557:46;;7535:68;;7757:6;2386:11;7735:5;7727:25;7726:37;;7718:46;;7704:11;:60;7697:67;;;7398:373;;;;;:::o;3828:363:5:-;3972:7;4010:10;:174;;4122:61;4162:9;4173;4122:39;:61::i;:::-;4010:174;;;4040:61;4080:9;4091;4040:39;:61::i;:::-;4010:174;3991:193;;3828:363;;;;;:::o;23931:914::-;24079:7;24100;24121;24142;24175:27;24204:30;24236:20;24258:19;24281:18;:16;:18::i;:::-;24174:125;;;;;;;;24418:1;24395:19;:24;24391:95;;;24443:1;24446;24449:12;24463:11;24435:40;;;;;;;;;;;;;;24391:95;24530:16;24548:20;24572:197;24616:17;24647:16;24677:13;:11;:13::i;:::-;24704:19;24737:22;24572:30;:197::i;:::-;24529:240;;;;24788:8;24798:12;24812;24826:11;24780:58;;;;;;;;;;;;;;23931:914;;;;;;;;:::o;24851:434::-;25071:1;25060:8;:12;25056:82;;;25088:39;25104:12;25118:8;25088:15;:39::i;:::-;25056:82;25209:1;25194:12;:16;25190:89;;;25226:42;25242:11;25255:12;25226:15;:42::i;:::-;25190:89;24851:434;;;;:::o;1029:156:29:-;1089:25;1144:4;1133:45;;;;;;;;;;;;:::i;:::-;1126:52;;1029:156;;;:::o;21380:928:5:-;21531:7;21540:16;21983:19;22005:33;:8;:31;:33::i;:::-;21983:55;;22149:27;22179:80;22222:8;22232:11;22245:13;:11;:13::i;:::-;22179:42;:80::i;:::-;22149:110;;22277:11;22290:10;22269:32;;;;;;21380:928;;;;;:::o;1157:239:41:-;1215:7;1307:9;1323:1;1319;:5;1307:17;;1334:37;1348:1;1343;:6;;4322:1:31;1334:8:41;:37::i;:::-;1388:1;1381:8;;;1157:239;;;;:::o;1647:209::-;1709:7;1728:15;1750:1;1746;:5;1728:23;;1761:57;1775:1;1770;:6;:26;;;;1795:1;1790;1780:7;:11;;;;;;:16;1770:26;4467:1:31;1761:8:41;:57::i;:::-;893:4;1836:7;:13;;;;;;1829:20;;;1647:209;;;;:::o;12743:488:40:-;12817:6;12835:12;2545:11;12873:6;12865:4;:14;;12857:23;;:34;12835:57;;2901:11;13167:5;:19;:57;;13219:5;13167:57;;;2545:11;13205:9;13190:5;:25;13167:57;13160:64;;;12743:488;;;;:::o;1353:121:50:-;1411:7;1437:30;1441:1;1444;4370::31;1437:3:50;:30::i;:::-;1430:37;;1353:121;;;;:::o;16091:528:5:-;16245:7;16254:16;16286:20;16309:36;:8;:34;:36::i;:::-;16286:59;;16456:26;16485:84;16531:8;16541:12;16555:13;:11;:13::i;:::-;16485:45;:84::i;:::-;16456:113;;16588:12;16602:9;16580:32;;;;;;16091:528;;;;;:::o;1244:900:4:-;1419:7;1925:24;1952:4;1925:31;;1985:152;2066:57;2106:16;2067:31;2080:17;2067:8;:12;;:31;;;;:::i;:::-;2066:39;;:57;;;;:::i;:::-;1985;2025:16;1986:31;1999:17;1986:8;:12;;:31;;;;:::i;:::-;1985:39;;:57;;;;:::i;:::-;:63;;:152;;;;:::i;:::-;1966:171;;;1244:900;;;;;;:::o;3387:1033:24:-;3588:7;3810:14;3853:17;3863:6;3853:9;:17::i;:::-;3834:16;:36;3810:61;;3881:22;3952:7;3933:16;:26;3906:24;3923:6;3906:16;:24::i;:::-;:53;3881:78;;3969:21;4037:7;4019:15;:25;3993:23;4009:6;3993:15;:23::i;:::-;:51;3969:75;;4054:22;4125:7;4106:16;:26;4079:24;4096:6;4079:16;:24::i;:::-;:53;4054:78;;4162:251;4184:16;4218:15;4251;4284:14;4316:16;4350:15;4383:16;4162:4;:251::i;:::-;4143:270;;;;;;3387:1033;;;;;;;:::o;1205:98:21:-;1257:7;1283:13;1287:5;1294:1;1283:3;:13::i;:::-;1276:20;;1205:98;;;:::o;4752:269:40:-;4872:7;4891:19;4951:6;2280:11;4939:18;;4937:21;4929:4;4921:13;;:37;4913:46;;4891:68;;5007:6;4998:5;:15;;4990:24;;4976:11;:38;4969:45;;;4752:269;;;;;:::o;5795:::-;5915:7;5934:19;5994:6;2439:11;5982:18;;5980:21;5972:4;5964:13;;:37;5956:46;;5934:68;;6050:6;6041:5;:15;;6033:24;;6019:11;:38;6012:45;;;5795:269;;;;;:::o;7255:985:11:-;7327:7;7359:1;7350:5;:10;7346:49;;;7383:1;7376:8;;;;7346:49;7405:13;7421:24;7439:5;7421:17;:24::i;:::-;7405:40;;7535:1;7525:5;893:4:41;7499:5:11;:22;7498:32;;;;;;7489:5;:42;7488:48;;;;;;7480:56;;7601:1;7591:5;893:4:41;7565:5:11;:22;7564:32;;;;;;7555:5;:42;7554:48;;;;;;7546:56;;7667:1;7657:5;893:4:41;7631:5:11;:22;7630:32;;;;;;7621:5;:42;7620:48;;;;;;7612:56;;7733:1;7723:5;893:4:41;7697:5:11;:22;7696:32;;;;;;7687:5;:42;7686:48;;;;;;7678:56;;7799:1;7789:5;893:4:41;7763:5:11;:22;7762:32;;;;;;7753:5;:42;7752:48;;;;;;7744:56;;7865:1;7855:5;893:4:41;7829:5:11;:22;7828:32;;;;;;7819:5;:42;7818:48;;;;;;7810:56;;7931:1;7921:5;893:4:41;7895:5:11;:22;7894:32;;;;;;7885:5;:42;7884:48;;;;;;7876:56;;8030:20;8053;8067:5;8053;:13;;:20;;;;:::i;:::-;8030:43;;8107:33;8117:22;8129:9;8117:5;:11;;:22;;;;:::i;:::-;8107:5;:9;;:33;;;;:::i;:::-;8091:12;:49;;:102;;;;;8160:33;8170:22;8182:9;8170:5;:11;;:22;;;;:::i;:::-;8160:5;:9;;:33;;;;:::i;:::-;8144:12;:49;;8091:102;8083:127;;;;;;;;;;;;:::i;:::-;;;;;;;;;8228:5;8221:12;;;;7255:985;;;;;:::o;19376:1714:42:-;19424:6;1935:4;19646:11;;;;20018:8;2160:4;20056:1;:10;2160:4;;20031:1;:10;20030:21;20029:38;;;;;;20018:49;;20077:16;2160:4;20101:1;20097;:5;20096:16;;;;;;20077:35;;20193:10;20206:1;20193:14;;20321:16;20340:3;20321:22;;2160:4;20427:9;20421:3;:15;20420:26;;;;;;20414:32;;20475:1;20469:3;:7;;;;;;20456:20;;;;2160:4;20500:9;20494:3;:15;20493:26;;;;;;20487:32;;20548:1;20542:3;:7;;;;;;20529:20;;;;2160:4;20573:9;20567:3;:15;20566:26;;;;;;20560:32;;20621:1;20615:3;:7;;;;;;20602:20;;;;2160:4;20646:9;20640:3;:15;20639:26;;;;;;20633:32;;20694:1;20688:3;:7;;;;;;20675:20;;;;2160:4;20719:9;20713:3;:15;20712:26;;;;;;20706:32;;20767:2;20761:3;:8;;;;;;20748:21;;;;2160:4;20793:9;20787:3;:15;20786:26;;;;;;20780:32;;20841:2;20835:3;:8;;;;;;20822:21;;;;2160:4;20867:9;20861:3;:15;20860:26;;;;;;20854:32;;20915:2;20909:3;:8;;;;;;20896:21;;;;21082:1;21070:9;:13;21063:20;;;;;;19376:1714;;;:::o;14151:4959::-;14196:6;1935:4;14218:1;:10;14214:382;;;14558:26;14582:1;1935:4;;14563:15;14562:21;;;;;;14558:3;:26::i;:::-;14557:27;;14549:36;;;;14214:382;15921:10;1935:4;3214:56;15954:11;15949:1;:16;15945:114;;3214:56;15981:7;;;;;;;;;3158:21;16039:9;;;;15945:114;1935:4;3377:28;16078:11;16073:1;:16;16069:114;;3377:28;16105:7;;;;;;;;;3322:20;16163:9;;;;16069:114;16321:3;16314:10;;;;16339:3;16334:8;;;;3543:34;16469:1;:7;16465:82;;3543:34;2125:4;16497:1;:10;16496:17;;;;;;16492:21;;3486:22;16527:9;;;;16465:82;3672:27;16561:1;:7;16557:82;;3672:27;2125:4;16589:1;:10;16588:17;;;;;;16584:21;;3615:22;16619:9;;;;16557:82;3793:24;16653:1;:7;16649:82;;3793:24;2125:4;16681:1;:10;16680:17;;;;;;16676:21;;3737;16711:9;;;;16649:82;3911:22;16745:1;:7;16741:82;;3911:22;2125:4;16773:1;:10;16772:17;;;;;;16768:21;;3855;16803:9;;;;16741:82;4027:21;16837:1;:7;16833:82;;4027:21;2125:4;16865:1;:10;16864:17;;;;;;16860:21;;3971;16895:9;;;;16833:82;4142:21;16929:1;:7;16925:82;;4142:21;2125:4;16957:1;:10;16956:17;;;;;;16952:21;;4086;16987:9;;;;16925:82;4257:21;17021:1;:7;17017:82;;4257:21;2125:4;17049:1;:10;17048:17;;;;;;17044:21;;4201:20;17079:9;;;;17017:82;4372:21;17113:1;:7;17109:82;;4372:21;2125:4;17141:1;:10;17140:17;;;;;;17136:21;;4316:20;17171:9;;;;17109:82;4489:21;17205:1;:8;17201:85;;4489:21;2125:4;17234:1;:10;17233:18;;;;;;17229:22;;4432:20;17265:10;;;;17201:85;4606:21;17300:1;:8;17296:85;;4606:21;2125:4;17329:1;:10;17328:18;;;;;;17324:22;;4550:19;17360:10;;;;17296:85;17883:8;2125:4;17921:1;:10;2125:4;;17896:1;:10;17895:21;17894:38;;;;;;17883:49;;17942:16;2125:4;17966:1;17962;:5;17961:16;;;;;;17942:35;;18058:10;18071:1;18058:14;;18186:16;18205:3;18186:22;;2125:4;18292:9;18286:3;:15;18285:26;;;;;;18279:32;;18340:1;18334:3;:7;;;;;;18321:20;;;;2125:4;18365:9;18359:3;:15;18358:26;;;;;;18352:32;;18413:1;18407:3;:7;;;;;;18394:20;;;;2125:4;18438:9;18432:3;:15;18431:26;;;;;;18425:32;;18486:1;18480:3;:7;;;;;;18467:20;;;;2125:4;18511:9;18505:3;:15;18504:26;;;;;;18498:32;;18559:1;18553:3;:7;;;;;;18540:20;;;;2125:4;18584:9;18578:3;:15;18577:26;;;;;;18571:32;;18632:2;18626:3;:8;;;;;;18613:21;;;;18806:1;18793:14;;;;19100:3;19087:9;19081:3;:15;19080:23;;;;;;19073:30;;;;;;;14151:4959;;;;:::o;13897:161:3:-;13996:7;14022:29;14040:10;14022:9;:17;;:29;;;;:::i;:::-;14015:36;;13897:161;;;;:::o;13646:159::-;13744:7;13770:28;13788:9;13770;:17;;:28;;;;:::i;:::-;13763:35;;13646:159;;;;:::o;25291:497:5:-;25379:7;25400;25421;25442;25495:10;;;;;;;;;;;:18;;;25514:41;25495:61;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25570:10;;;;;;;;;;;:18;;;25589:44;25570:64;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25648:10;;;;;;;;;;;:21;;;25670:32;25648:55;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25717:10;;;;;;;;;;;:21;;;25739:31;25717:54;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25474:307;;;;;;;;25291:497;;;;:::o;4736:2410:11:-;4972:7;4981;5715:17;5695:16;:37;5691:443;;6118:1;6121;6110:13;;;;;;5691:443;6586:17;6606:96;6682:19;6607:65;6632:39;6653:17;6632:16;:20;;:39;;;;:::i;:::-;6607:16;:24;;:65;;;;:::i;:::-;6606:75;;:96;;;;:::i;:::-;6586:116;;6712:21;6736:68;6764:39;6785:17;6764:16;:20;;:39;;;;:::i;:::-;6736:19;:27;;:68;;;;:::i;:::-;6712:92;;6814:19;6836:35;6857:13;6836:16;:20;;:35;;;;:::i;:::-;6814:57;;6881:14;6898:30;6916:11;6898:9;:17;;:30;;;;:::i;:::-;6881:47;;6987:16;7006:38;7037:6;7006:22;:30;;:38;;;;:::i;:::-;6987:57;;7054:20;7077;7088:8;7077:6;:10;;:20;;;;:::i;:::-;7054:43;;7116:8;7126:12;7108:31;;;;;;;;;;4736:2410;;;;;;;;;:::o;2343:184:29:-;2417:19;2477:4;2466:54;;;;;;;;;;;;:::i;:::-;2448:72;;;;;;2343:184;;;:::o;2961:1444:11:-;3113:27;4214:8;:15;4200:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4187:43;;4245:9;4240:131;4264:8;:15;4260:1;:19;4240:131;;;4316:44;4351:8;4316:26;4336:5;4316:8;4325:1;4316:11;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;:34;;:44;;;;:::i;:::-;4300:10;4311:1;4300:13;;;;;;;;;;;;;:60;;;;;4281:3;;;;;;;4240:131;;;;2961:1444;;;;;:::o;1904:189:29:-;1981:20;2043:4;2032:54;;;;;;;;;;;;:::i;:::-;2013:73;;;;;;1904:189;;;:::o;1692:1175:11:-;1848:26;2681:8;:15;2667:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2655:42;;2712:9;2707:127;2731:8;:15;2727:1;:19;2707:127;;;2782:41;2814:8;2782:25;2800:6;2782:8;2791:1;2782:11;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;:31;;:41;;;;:::i;:::-;2767:9;2777:1;2767:12;;;;;;;;;;;;;:56;;;;;2748:3;;;;;;;2707:127;;;;1692:1175;;;;;:::o;1418:123:21:-;1485:7;899:4;1520:6;1512:5;:14;1511:23;;;;;;1504:30;;1418:123;;;;:::o;8828:1625:11:-;8893:7;893:4:41;8916:5:11;:23;8912:1535;;893:4:41;8969:38:11;893:4:41;8984:5:11;:22;;;;;;8969:14;:38::i;:::-;8963:1;:45;;8962:64;8955:71;;;;8912:1535;9070:2;9061:5;:11;9057:71;;1531:10;9092:21;;;;9057:71;9154:3;9145:5;:12;9141:62;;9184:4;9177:11;;;;9141:62;9229:3;9220:5;:12;9216:72;;1472:11;9252:21;;;;9216:72;9314:3;9305:5;:12;9301:62;;9344:4;9337:11;;;;9301:62;9389:3;9380:5;:12;9376:72;;1412:12;9412:21;;;;9376:72;9474:3;9465:5;:12;9461:62;;9504:4;9497:11;;;;9461:62;9549:3;9540:5;:12;9536:72;;1351:13;9572:21;;;;9536:72;9634:3;9625:5;:12;9621:62;;9664:4;9657:11;;;;9621:62;9709:3;9700:5;:12;9696:71;;1289:14;9732:20;;;;9696:71;9793:4;9784:5;:13;9780:63;;9824:4;9817:11;;;;9780:63;9869:4;9860:5;:13;9856:72;;1227:15;9893:20;;;;9856:72;9954:4;9945:5;:13;9941:63;;9985:4;9978:11;;;;9941:63;10030:4;10021:5;:13;10017:72;;1164:16;10054:20;;;;10017:72;10115:4;10106:5;:13;10102:63;;10146:4;10139:11;;;;10102:63;10191:4;10182:5;:13;10178:72;;1100:17;10215:20;;;;10178:72;10276:4;10267:5;:13;10263:63;;10307:4;10300:11;;;;10263:63;10352:4;10343:5;:13;10339:72;;1035:18;10376:20;;;;10339:72;10431:5;10424:12;;8828:1625;;;;:::o;10459:633::-;10515:9;10545:8;10540:1;:13;10536:74;;10575:3;10569:9;;;;;10597:2;10592:7;;;;10536:74;10628:7;10623:1;:12;10619:72;;10657:2;10651:8;;;;;10678:2;10673:7;;;;10619:72;10709:7;10704:1;:12;10700:72;;10738:2;10732:8;;;;;10759:2;10754:7;;;;10700:72;10790:7;10785:1;:12;10781:71;;10819:2;10813:8;;;;;10840:1;10835:6;;;;10781:71;10870:6;10865:1;:11;10861:69;;10898:1;10892:7;;;;;10918:1;10913:6;;;;10861:69;10948:6;10943:1;:11;10939:69;;10976:1;10970:7;;;;;10996:1;10991:6;;;;10939:69;11026:6;11021:1;:11;11017:69;;11054:1;11048:7;;;;;11074:1;11069:6;;;;11017:69;10459:633;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130::-;;85:6;72:20;63:29;;97:33;124:5;97:33;:::i;:::-;57:78;;;;:::o;142:134::-;;226:6;220:13;211:22;;238:33;265:5;238:33;:::i;:::-;205:71;;;;:::o;309:767::-;;452:3;445:4;437:6;433:17;429:27;419:2;;470:1;467;460:12;419:2;500:6;494:13;522:95;537:79;609:6;537:79;:::i;:::-;522:95;:::i;:::-;513:104;;634:5;659:6;652:5;645:21;689:4;681:6;677:17;667:27;;711:4;706:3;702:14;695:21;;764:6;811:3;803:4;795:6;791:17;786:3;782:27;779:36;776:2;;;828:1;825;818:12;776:2;853:1;838:232;863:6;860:1;857:13;838:232;;;921:3;943:63;1002:3;990:10;943:63;:::i;:::-;938:3;931:76;1030:4;1025:3;1021:14;1014:21;;1058:4;1053:3;1049:14;1042:21;;895:175;885:1;882;878:9;873:14;;838:232;;;842:14;412:664;;;;;;;:::o;1137:830::-;;1295:3;1288:4;1280:6;1276:17;1272:27;1262:2;;1313:1;1310;1303:12;1262:2;1350:6;1337:20;1372:121;1387:105;1485:6;1387:105;:::i;:::-;1372:121;:::i;:::-;1363:130;;1510:5;1535:6;1528:5;1521:21;1565:4;1557:6;1553:17;1543:27;;1587:4;1582:3;1578:14;1571:21;;1640:6;1687:3;1679:4;1671:6;1667:17;1662:3;1658:27;1655:36;1652:2;;;1704:1;1701;1694:12;1652:2;1729:1;1714:247;1739:6;1736:1;1733:13;1714:247;;;1797:3;1819:78;1893:3;1881:10;1819:78;:::i;:::-;1814:3;1807:91;1921:4;1916:3;1912:14;1905:21;;1949:4;1944:3;1940:14;1933:21;;1771:190;1761:1;1758;1754:9;1749:14;;1714:247;;;1718:14;1255:712;;;;;;;:::o;2024:818::-;;2178:3;2171:4;2163:6;2159:17;2155:27;2145:2;;2196:1;2193;2186:12;2145:2;2233:6;2220:20;2255:117;2270:101;2364:6;2270:101;:::i;:::-;2255:117;:::i;:::-;2246:126;;2389:5;2414:6;2407:5;2400:21;2444:4;2436:6;2432:17;2422:27;;2466:4;2461:3;2457:14;2450:21;;2519:6;2566:3;2558:4;2550:6;2546:17;2541:3;2537:27;2534:36;2531:2;;;2583:1;2580;2573:12;2531:2;2608:1;2593:243;2618:6;2615:1;2612:13;2593:243;;;2676:3;2698:74;2768:3;2756:10;2698:74;:::i;:::-;2693:3;2686:87;2796:4;2791:3;2787:14;2780:21;;2824:4;2819:3;2815:14;2808:21;;2650:186;2640:1;2637;2633:9;2628:14;;2593:243;;;2597:14;2138:704;;;;;;;:::o;2868:707::-;;2985:3;2978:4;2970:6;2966:17;2962:27;2952:2;;3003:1;3000;2993:12;2952:2;3040:6;3027:20;3062:80;3077:64;3134:6;3077:64;:::i;:::-;3062:80;:::i;:::-;3053:89;;3159:5;3184:6;3177:5;3170:21;3214:4;3206:6;3202:17;3192:27;;3236:4;3231:3;3227:14;3220:21;;3289:6;3336:3;3328:4;3320:6;3316:17;3311:3;3307:27;3304:36;3301:2;;;3353:1;3350;3343:12;3301:2;3378:1;3363:206;3388:6;3385:1;3382:13;3363:206;;;3446:3;3468:37;3501:3;3489:10;3468:37;:::i;:::-;3463:3;3456:50;3529:4;3524:3;3520:14;3513:21;;3557:4;3552:3;3548:14;3541:21;;3420:149;3410:1;3407;3403:9;3398:14;;3363:206;;;3367:14;2945:630;;;;;;;:::o;3601:722::-;;3729:3;3722:4;3714:6;3710:17;3706:27;3696:2;;3747:1;3744;3737:12;3696:2;3777:6;3771:13;3799:80;3814:64;3871:6;3814:64;:::i;:::-;3799:80;:::i;:::-;3790:89;;3896:5;3921:6;3914:5;3907:21;3951:4;3943:6;3939:17;3929:27;;3973:4;3968:3;3964:14;3957:21;;4026:6;4073:3;4065:4;4057:6;4053:17;4048:3;4044:27;4041:36;4038:2;;;4090:1;4087;4080:12;4038:2;4115:1;4100:217;4125:6;4122:1;4119:13;4100:217;;;4183:3;4205:48;4249:3;4237:10;4205:48;:::i;:::-;4200:3;4193:61;4277:4;4272:3;4268:14;4261:21;;4305:4;4300:3;4296:14;4289:21;;4157:160;4147:1;4144;4140:9;4135:14;;4100:217;;;4104:14;3689:634;;;;;;;:::o;4331:124::-;;4408:6;4395:20;4386:29;;4420:30;4444:5;4420:30;:::i;:::-;4380:75;;;;:::o;4462:128::-;;4543:6;4537:13;4528:22;;4555:30;4579:5;4555:30;:::i;:::-;4522:68;;;;:::o;4597:130::-;;4677:6;4664:20;4655:29;;4689:33;4716:5;4689:33;:::i;:::-;4649:78;;;;:::o;4734:128::-;;4813:6;4800:20;4791:29;;4825:32;4851:5;4825:32;:::i;:::-;4785:77;;;;:::o;4870:440::-;;4971:3;4964:4;4956:6;4952:17;4948:27;4938:2;;4989:1;4986;4979:12;4938:2;5026:6;5013:20;5048:64;5063:48;5104:6;5063:48;:::i;:::-;5048:64;:::i;:::-;5039:73;;5132:6;5125:5;5118:21;5168:4;5160:6;5156:17;5201:4;5194:5;5190:16;5236:3;5227:6;5222:3;5218:16;5215:25;5212:2;;;5253:1;5250;5243:12;5212:2;5263:41;5297:6;5292:3;5287;5263:41;:::i;:::-;4931:379;;;;;;;:::o;5318:176::-;;5423:6;5417:13;5408:22;;5435:54;5483:5;5435:54;:::i;:::-;5402:92;;;;:::o;5501:160::-;;5596:6;5583:20;5574:29;;5608:48;5650:5;5608:48;:::i;:::-;5568:93;;;;:::o;5668:164::-;;5767:6;5761:13;5752:22;;5779:48;5821:5;5779:48;:::i;:::-;5746:86;;;;:::o;5839:162::-;;5937:6;5931:13;5922:22;;5949:47;5990:5;5949:47;:::i;:::-;5916:85;;;;:::o;6008:162::-;;6106:6;6100:13;6091:22;;6118:47;6159:5;6118:47;:::i;:::-;6085:85;;;;:::o;6177:156::-;;6270:6;6257:20;6248:29;;6282:46;6322:5;6282:46;:::i;:::-;6242:91;;;;:::o;6340:158::-;;6434:6;6421:20;6412:29;;6446:47;6487:5;6446:47;:::i;:::-;6406:92;;;;:::o;6505:132::-;;6588:6;6582:13;6573:22;;6600:32;6626:5;6600:32;:::i;:::-;6567:70;;;;:::o;6684:630::-;;6800:4;6788:9;6783:3;6779:19;6775:30;6772:2;;;6818:1;6815;6808:12;6772:2;6836:20;6851:4;6836:20;:::i;:::-;6827:29;;6912:1;6944:46;6986:3;6977:6;6966:9;6962:22;6944:46;:::i;:::-;6937:4;6930:5;6926:16;6919:72;6866:136;7061:2;7094:49;7139:3;7130:6;7119:9;7115:22;7094:49;:::i;:::-;7087:4;7080:5;7076:16;7069:75;7012:143;7210:2;7243:49;7288:3;7279:6;7268:9;7264:22;7243:49;:::i;:::-;7236:4;7229:5;7225:16;7218:75;7165:139;6766:548;;;;:::o;7370:500::-;;7500:4;7488:9;7483:3;7479:19;7475:30;7472:2;;;7518:1;7515;7508:12;7472:2;7536:20;7551:4;7536:20;:::i;:::-;7527:29;;7610:1;7642:63;7701:3;7692:6;7681:9;7677:22;7642:63;:::i;:::-;7635:4;7628:5;7624:16;7617:89;7566:151;7766:2;7799:49;7844:3;7835:6;7824:9;7820:22;7799:49;:::i;:::-;7792:4;7785:5;7781:16;7774:75;7727:133;7466:404;;;;:::o;7922:640::-;;8048:4;8036:9;8031:3;8027:19;8023:30;8020:2;;;8066:1;8063;8056:12;8020:2;8084:20;8099:4;8084:20;:::i;:::-;8075:29;;8158:1;8190:63;8249:3;8240:6;8229:9;8225:22;8190:63;:::i;:::-;8183:4;8176:5;8172:16;8165:89;8114:151;8315:2;8348:49;8393:3;8384:6;8373:9;8369:22;8348:49;:::i;:::-;8341:4;8334:5;8330:16;8323:75;8275:134;8458:2;8491:49;8536:3;8527:6;8516:9;8512:22;8491:49;:::i;:::-;8484:4;8477:5;8473:16;8466:75;8419:133;8014:548;;;;:::o;8611:1653::-;;8730:6;8718:9;8713:3;8709:19;8705:32;8702:2;;;8750:1;8747;8740:12;8702:2;8768:22;8783:6;8768:22;:::i;:::-;8759:31;;8840:1;8872:62;8930:3;8921:6;8910:9;8906:22;8872:62;:::i;:::-;8865:4;8858:5;8854:16;8847:88;8800:146;8999:2;9032:64;9092:3;9083:6;9072:9;9068:22;9032:64;:::i;:::-;9025:4;9018:5;9014:16;9007:90;8956:152;9162:2;9195:64;9255:3;9246:6;9235:9;9231:22;9195:64;:::i;:::-;9188:4;9181:5;9177:16;9170:90;9118:153;9323:2;9356:49;9401:3;9392:6;9381:9;9377:22;9356:49;:::i;:::-;9349:4;9342:5;9338:16;9331:75;9281:136;9469:3;9503:49;9548:3;9539:6;9528:9;9524:22;9503:49;:::i;:::-;9496:4;9489:5;9485:16;9478:75;9427:137;9625:3;9659:49;9704:3;9695:6;9684:9;9680:22;9659:49;:::i;:::-;9652:4;9645:5;9641:16;9634:75;9574:146;9770:3;9804:49;9849:3;9840:6;9829:9;9825:22;9804:49;:::i;:::-;9797:4;9790:5;9786:16;9779:75;9730:135;9913:3;9947:49;9992:3;9983:6;9972:9;9968:22;9947:49;:::i;:::-;9940:4;9933:5;9929:16;9922:75;9875:133;10090:3;10079:9;10075:19;10062:33;10115:18;10107:6;10104:30;10101:2;;;10147:1;10144;10137:12;10101:2;10184:58;10238:3;10229:6;10218:9;10214:22;10184:58;:::i;:::-;10175:6;10168:5;10164:18;10157:86;10018:236;8696:1568;;;;:::o;10271:130::-;;10351:6;10338:20;10329:29;;10363:33;10390:5;10363:33;:::i;:::-;10323:78;;;;:::o;10408:130::-;;10488:6;10475:20;10466:29;;10500:33;10527:5;10500:33;:::i;:::-;10460:78;;;;:::o;10545:130::-;;10625:6;10612:20;10603:29;;10637:33;10664:5;10637:33;:::i;:::-;10597:78;;;;:::o;10682:134::-;;10766:6;10760:13;10751:22;;10778:33;10805:5;10778:33;:::i;:::-;10745:71;;;;:::o;10823:126::-;;10901:6;10888:20;10879:29;;10913:31;10938:5;10913:31;:::i;:::-;10873:76;;;;:::o;10956:241::-;;11060:2;11048:9;11039:7;11035:23;11031:32;11028:2;;;11076:1;11073;11066:12;11028:2;11111:1;11128:53;11173:7;11164:6;11153:9;11149:22;11128:53;:::i;:::-;11118:63;;11090:97;11022:175;;;;:::o;11204:263::-;;11319:2;11307:9;11298:7;11294:23;11290:32;11287:2;;;11335:1;11332;11325:12;11287:2;11370:1;11387:64;11443:7;11434:6;11423:9;11419:22;11387:64;:::i;:::-;11377:74;;11349:108;11281:186;;;;:::o;11474:366::-;;;11595:2;11583:9;11574:7;11570:23;11566:32;11563:2;;;11611:1;11608;11601:12;11563:2;11646:1;11663:53;11708:7;11699:6;11688:9;11684:22;11663:53;:::i;:::-;11653:63;;11625:97;11753:2;11771:53;11816:7;11807:6;11796:9;11792:22;11771:53;:::i;:::-;11761:63;;11732:98;11557:283;;;;;:::o;11847:491::-;;;;11985:2;11973:9;11964:7;11960:23;11956:32;11953:2;;;12001:1;11998;11991:12;11953:2;12036:1;12053:53;12098:7;12089:6;12078:9;12074:22;12053:53;:::i;:::-;12043:63;;12015:97;12143:2;12161:53;12206:7;12197:6;12186:9;12182:22;12161:53;:::i;:::-;12151:63;;12122:98;12251:2;12269:53;12314:7;12305:6;12294:9;12290:22;12269:53;:::i;:::-;12259:63;;12230:98;11947:391;;;;;:::o;12345:991::-;;;;;;;;12549:3;12537:9;12528:7;12524:23;12520:33;12517:2;;;12566:1;12563;12556:12;12517:2;12601:1;12618:53;12663:7;12654:6;12643:9;12639:22;12618:53;:::i;:::-;12608:63;;12580:97;12708:2;12726:53;12771:7;12762:6;12751:9;12747:22;12726:53;:::i;:::-;12716:63;;12687:98;12816:2;12834:53;12879:7;12870:6;12859:9;12855:22;12834:53;:::i;:::-;12824:63;;12795:98;12924:2;12942:53;12987:7;12978:6;12967:9;12963:22;12942:53;:::i;:::-;12932:63;;12903:98;13032:3;13051:51;13094:7;13085:6;13074:9;13070:22;13051:51;:::i;:::-;13041:61;;13011:97;13139:3;13158:53;13203:7;13194:6;13183:9;13179:22;13158:53;:::i;:::-;13148:63;;13118:99;13248:3;13267:53;13312:7;13303:6;13292:9;13288:22;13267:53;:::i;:::-;13257:63;;13227:99;12511:825;;;;;;;;;;:::o;13343:366::-;;;13464:2;13452:9;13443:7;13439:23;13435:32;13432:2;;;13480:1;13477;13470:12;13432:2;13515:1;13532:53;13577:7;13568:6;13557:9;13553:22;13532:53;:::i;:::-;13522:63;;13494:97;13622:2;13640:53;13685:7;13676:6;13665:9;13661:22;13640:53;:::i;:::-;13630:63;;13601:98;13426:283;;;;;:::o;13716:823::-;;;;13930:2;13918:9;13909:7;13905:23;13901:32;13898:2;;;13946:1;13943;13936:12;13898:2;14002:1;13991:9;13987:17;13981:24;14025:18;14017:6;14014:30;14011:2;;;14057:1;14054;14047:12;14011:2;14077:104;14173:7;14164:6;14153:9;14149:22;14077:104;:::i;:::-;14067:114;;13960:227;14239:2;14228:9;14224:18;14218:25;14263:18;14255:6;14252:30;14249:2;;;14295:1;14292;14285:12;14249:2;14315:89;14396:7;14387:6;14376:9;14372:22;14315:89;:::i;:::-;14305:99;;14197:213;14441:2;14459:64;14515:7;14506:6;14495:9;14491:22;14459:64;:::i;:::-;14449:74;;14420:109;13892:647;;;;;:::o;14546:459::-;;14716:2;14704:9;14695:7;14691:23;14687:32;14684:2;;;14732:1;14729;14722:12;14684:2;14795:1;14784:9;14780:17;14767:31;14818:18;14810:6;14807:30;14804:2;;;14850:1;14847;14840:12;14804:2;14870:119;14981:7;14972:6;14961:9;14957:22;14870:119;:::i;:::-;14860:129;;14746:249;14678:327;;;;:::o;15012:451::-;;15178:2;15166:9;15157:7;15153:23;15149:32;15146:2;;;15194:1;15191;15184:12;15146:2;15257:1;15246:9;15242:17;15229:31;15280:18;15272:6;15269:30;15266:2;;;15312:1;15309;15302:12;15266:2;15332:115;15439:7;15430:6;15419:9;15415:22;15332:115;:::i;:::-;15322:125;;15208:245;15140:323;;;;:::o;15470:235::-;;15571:2;15559:9;15550:7;15546:23;15542:32;15539:2;;;15587:1;15584;15577:12;15539:2;15622:1;15639:50;15681:7;15672:6;15661:9;15657:22;15639:50;:::i;:::-;15629:60;;15601:94;15533:172;;;;:::o;15712:257::-;;15824:2;15812:9;15803:7;15799:23;15795:32;15792:2;;;15840:1;15837;15830:12;15792:2;15875:1;15892:61;15945:7;15936:6;15925:9;15921:22;15892:61;:::i;:::-;15882:71;;15854:105;15786:183;;;;:::o;15976:1235::-;;;;;;;;16216:3;16204:9;16195:7;16191:23;16187:33;16184:2;;;16233:1;16230;16223:12;16184:2;16268:1;16285:53;16330:7;16321:6;16310:9;16306:22;16285:53;:::i;:::-;16275:63;;16247:97;16375:2;16393:53;16438:7;16429:6;16418:9;16414:22;16393:53;:::i;:::-;16383:63;;16354:98;16483:2;16501:53;16546:7;16537:6;16526:9;16522:22;16501:53;:::i;:::-;16491:63;;16462:98;16619:2;16608:9;16604:18;16591:32;16643:18;16635:6;16632:30;16629:2;;;16675:1;16672;16665:12;16629:2;16695:78;16765:7;16756:6;16745:9;16741:22;16695:78;:::i;:::-;16685:88;;16570:209;16810:3;16829:53;16874:7;16865:6;16854:9;16850:22;16829:53;:::i;:::-;16819:63;;16789:99;16919:3;16938:53;16983:7;16974:6;16963:9;16959:22;16938:53;:::i;:::-;16928:63;;16898:99;17056:3;17045:9;17041:19;17028:33;17081:18;17073:6;17070:30;17067:2;;;17113:1;17110;17103:12;17067:2;17133:62;17187:7;17178:6;17167:9;17163:22;17133:62;:::i;:::-;17123:72;;17007:194;16178:1033;;;;;;;;;;:::o;17218:239::-;;17321:2;17309:9;17300:7;17296:23;17292:32;17289:2;;;17337:1;17334;17327:12;17289:2;17372:1;17389:52;17433:7;17424:6;17413:9;17409:22;17389:52;:::i;:::-;17379:62;;17351:96;17283:174;;;;:::o;17464:305::-;;17600:2;17588:9;17579:7;17575:23;17571:32;17568:2;;;17616:1;17613;17606:12;17568:2;17651:1;17668:85;17745:7;17736:6;17725:9;17721:22;17668:85;:::i;:::-;17658:95;;17630:129;17562:207;;;;:::o;17776:291::-;;17905:2;17893:9;17884:7;17880:23;17876:32;17873:2;;;17921:1;17918;17911:12;17873:2;17956:1;17973:78;18043:7;18034:6;18023:9;18019:22;17973:78;:::i;:::-;17963:88;;17935:122;17867:200;;;;:::o;18074:427::-;;;18220:2;18208:9;18199:7;18195:23;18191:32;18188:2;;;18236:1;18233;18226:12;18188:2;18271:1;18288:78;18358:7;18349:6;18338:9;18334:22;18288:78;:::i;:::-;18278:88;;18250:122;18403:2;18421:64;18477:7;18468:6;18457:9;18453:22;18421:64;:::i;:::-;18411:74;;18382:109;18182:319;;;;;:::o;18508:291::-;;18637:2;18625:9;18616:7;18612:23;18608:32;18605:2;;;18653:1;18650;18643:12;18605:2;18688:1;18705:78;18775:7;18766:6;18755:9;18751:22;18705:78;:::i;:::-;18695:88;;18667:122;18599:200;;;;:::o;18806:556::-;;;18977:2;18965:9;18956:7;18952:23;18948:32;18945:2;;;18993:1;18990;18983:12;18945:2;19028:1;19045:78;19115:7;19106:6;19095:9;19091:22;19045:78;:::i;:::-;19035:88;;19007:122;19181:2;19170:9;19166:18;19160:25;19205:18;19197:6;19194:30;19191:2;;;19237:1;19234;19227:12;19191:2;19257:89;19338:7;19329:6;19318:9;19314:22;19257:89;:::i;:::-;19247:99;;19139:213;18939:423;;;;;:::o;19369:427::-;;;19515:2;19503:9;19494:7;19490:23;19486:32;19483:2;;;19531:1;19528;19521:12;19483:2;19566:1;19583:78;19653:7;19644:6;19633:9;19629:22;19583:78;:::i;:::-;19573:88;;19545:122;19698:2;19716:64;19772:7;19763:6;19752:9;19748:22;19716:64;:::i;:::-;19706:74;;19677:109;19477:319;;;;;:::o;19803:269::-;;19921:2;19909:9;19900:7;19896:23;19892:32;19889:2;;;19937:1;19934;19927:12;19889:2;19972:1;19989:67;20048:7;20039:6;20028:9;20024:22;19989:67;:::i;:::-;19979:77;;19951:111;19883:189;;;;:::o;20079:261::-;;20193:2;20181:9;20172:7;20168:23;20164:32;20161:2;;;20209:1;20206;20199:12;20161:2;20244:1;20261:63;20316:7;20307:6;20296:9;20292:22;20261:63;:::i;:::-;20251:73;;20223:107;20155:185;;;;:::o;20347:295::-;;20478:2;20466:9;20457:7;20453:23;20449:32;20446:2;;;20494:1;20491;20484:12;20446:2;20529:1;20546:80;20618:7;20609:6;20598:9;20594:22;20546:80;:::i;:::-;20536:90;;20508:124;20440:202;;;;:::o;20649:637::-;;;;20817:2;20805:9;20796:7;20792:23;20788:32;20785:2;;;20833:1;20830;20823:12;20785:2;20896:1;20885:9;20881:17;20868:31;20919:18;20911:6;20908:30;20905:2;;;20951:1;20948;20941:12;20905:2;20971:83;21046:7;21037:6;21026:9;21022:22;20971:83;:::i;:::-;20961:93;;20847:213;21091:2;21109:53;21154:7;21145:6;21134:9;21130:22;21109:53;:::i;:::-;21099:63;;21070:98;21199:2;21217:53;21262:7;21253:6;21242:9;21238:22;21217:53;:::i;:::-;21207:63;;21178:98;20779:507;;;;;:::o;21293:241::-;;21397:2;21385:9;21376:7;21372:23;21368:32;21365:2;;;21413:1;21410;21403:12;21365:2;21448:1;21465:53;21510:7;21501:6;21490:9;21486:22;21465:53;:::i;:::-;21455:63;;21427:97;21359:175;;;;:::o;21541:263::-;;21656:2;21644:9;21635:7;21631:23;21627:32;21624:2;;;21672:1;21669;21662:12;21624:2;21707:1;21724:64;21780:7;21771:6;21760:9;21756:22;21724:64;:::i;:::-;21714:74;;21686:108;21618:186;;;;:::o;21811:366::-;;;21932:2;21920:9;21911:7;21907:23;21903:32;21900:2;;;21948:1;21945;21938:12;21900:2;21983:1;22000:53;22045:7;22036:6;22025:9;22021:22;22000:53;:::i;:::-;21990:63;;21962:97;22090:2;22108:53;22153:7;22144:6;22133:9;22129:22;22108:53;:::i;:::-;22098:63;;22069:98;21894:283;;;;;:::o;22184:485::-;;;;22319:2;22307:9;22298:7;22294:23;22290:32;22287:2;;;22335:1;22332;22325:12;22287:2;22370:1;22387:53;22432:7;22423:6;22412:9;22408:22;22387:53;:::i;:::-;22377:63;;22349:97;22477:2;22495:53;22540:7;22531:6;22520:9;22516:22;22495:53;:::i;:::-;22485:63;;22456:98;22585:2;22603:50;22645:7;22636:6;22625:9;22621:22;22603:50;:::i;:::-;22593:60;;22564:95;22281:388;;;;;:::o;22677:169::-;;22762:44;22802:3;22794:6;22762:44;:::i;:::-;22835:4;22830:3;22826:14;22812:28;;22755:91;;;;:::o;22855:173::-;;22942:46;22984:3;22976:6;22942:46;:::i;:::-;23017:4;23012:3;23008:14;22994:28;;22935:93;;;;:::o;23036:113::-;23119:24;23137:5;23119:24;:::i;:::-;23114:3;23107:37;23101:48;;:::o;23185:682::-;;23328:53;23375:5;23328:53;:::i;:::-;23394:85;23472:6;23467:3;23394:85;:::i;:::-;23387:92;;23500:55;23549:5;23500:55;:::i;:::-;23575:7;23603:1;23588:257;23613:6;23610:1;23607:13;23588:257;;;23680:6;23674:13;23701:61;23758:3;23743:13;23701:61;:::i;:::-;23694:68;;23779:59;23831:6;23779:59;:::i;:::-;23769:69;;23645:200;23635:1;23632;23628:9;23623:14;;23588:257;;;23592:14;23858:3;23851:10;;23307:560;;;;;;;:::o;23908:660::-;24041:52;24087:5;24041:52;:::i;:::-;24106:84;24183:6;24178:3;24106:84;:::i;:::-;24099:91;;24211:54;24259:5;24211:54;:::i;:::-;24285:7;24313:1;24298:258;24323:6;24320:1;24317:13;24298:258;;;24390:6;24384:13;24411:63;24470:3;24455:13;24411:63;:::i;:::-;24404:70;;24491:58;24542:6;24491:58;:::i;:::-;24481:68;;24355:201;24345:1;24342;24338:9;24333:14;;24298:258;;;24302:14;24020:548;;;;;:::o;24607:690::-;;24752:54;24800:5;24752:54;:::i;:::-;24819:86;24898:6;24893:3;24819:86;:::i;:::-;24812:93;;24926:56;24976:5;24926:56;:::i;:::-;25002:7;25030:1;25015:260;25040:6;25037:1;25034:13;25015:260;;;25107:6;25101:13;25128:63;25187:3;25172:13;25128:63;:::i;:::-;25121:70;;25208:60;25261:6;25208:60;:::i;:::-;25198:70;;25072:203;25062:1;25059;25055:9;25050:14;;25015:260;;;25019:14;25288:3;25281:10;;24731:566;;;;;;;:::o;25305:94::-;25372:21;25387:5;25372:21;:::i;:::-;25367:3;25360:34;25354:45;;:::o;25406:104::-;25483:21;25498:5;25483:21;:::i;:::-;25478:3;25471:34;25465:45;;:::o;25517:113::-;25600:24;25618:5;25600:24;:::i;:::-;25595:3;25588:37;25582:48;;:::o;25637:152::-;25738:45;25758:24;25776:5;25758:24;:::i;:::-;25738:45;:::i;:::-;25733:3;25726:58;25720:69;;:::o;25796:148::-;25895:43;25914:23;25931:5;25914:23;:::i;:::-;25895:43;:::i;:::-;25890:3;25883:56;25877:67;;:::o;25974:310::-;;26106:88;26187:6;26182:3;26106:88;:::i;:::-;26099:95;;26206:43;26242:6;26237:3;26230:5;26206:43;:::i;:::-;26271:6;26266:3;26262:16;26255:23;;26092:192;;;;;:::o;26292:168::-;26396:58;26448:5;26396:58;:::i;:::-;26391:3;26384:71;26378:82;;:::o;26467:166::-;26570:57;26621:5;26570:57;:::i;:::-;26565:3;26558:70;26552:81;;:::o;26640:156::-;26738:52;26784:5;26738:52;:::i;:::-;26733:3;26726:65;26720:76;;:::o;26803:158::-;26906:49;26949:5;26906:49;:::i;:::-;26901:3;26894:62;26888:73;;:::o;26968:148::-;27061:49;27104:5;27061:49;:::i;:::-;27056:3;27049:62;27043:73;;:::o;27123:100::-;27194:23;27211:5;27194:23;:::i;:::-;27189:3;27182:36;27176:47;;:::o;27230:110::-;27311:23;27328:5;27311:23;:::i;:::-;27306:3;27299:36;27293:47;;:::o;27347:127::-;27463:5;27458:3;27451:18;27445:29;;:::o;27481:347::-;;27593:39;27626:5;27593:39;:::i;:::-;27644:71;27708:6;27703:3;27644:71;:::i;:::-;27637:78;;27720:52;27765:6;27760:3;27753:4;27746:5;27742:16;27720:52;:::i;:::-;27793:29;27815:6;27793:29;:::i;:::-;27788:3;27784:39;27777:46;;27573:255;;;;;:::o;27836:398::-;;28014:84;28096:1;28091:3;28014:84;:::i;:::-;28007:91;;28131:66;28127:1;28122:3;28118:11;28111:87;28226:1;28221:3;28217:11;28210:18;;28000:234;;;:::o;28243:312::-;;28403:67;28467:2;28462:3;28403:67;:::i;:::-;28396:74;;28503:14;28499:1;28494:3;28490:11;28483:35;28546:2;28541:3;28537:12;28530:19;;28389:166;;;:::o;28640:648::-;28787:4;28782:3;28778:14;28876:4;28869:5;28865:16;28859:23;28888:57;28939:4;28934:3;28930:14;28916:12;28888:57;:::i;:::-;28807:144;29033:4;29026:5;29022:16;29016:23;29045:63;29102:4;29097:3;29093:14;29079:12;29045:63;:::i;:::-;28961:153;29192:4;29185:5;29181:16;29175:23;29204:63;29261:4;29256:3;29252:14;29238:12;29204:63;:::i;:::-;29124:149;28760:528;;;:::o;29382:701::-;29557:4;29552:3;29548:14;29644:4;29637:5;29633:16;29627:23;29656:83;29733:4;29728:3;29724:14;29710:12;29656:83;:::i;:::-;29577:168;29818:4;29811:5;29807:16;29801:23;29830:71;29895:4;29890:3;29886:14;29872:12;29830:71;:::i;:::-;29755:152;29979:4;29972:5;29968:16;29962:23;29991:71;30056:4;30051:3;30047:14;30033:12;29991:71;:::i;:::-;29917:151;29530:553;;;:::o;30090:103::-;30163:24;30181:5;30163:24;:::i;:::-;30158:3;30151:37;30145:48;;:::o;30200:103::-;30273:24;30291:5;30273:24;:::i;:::-;30268:3;30261:37;30255:48;;:::o;30310:103::-;30383:24;30401:5;30383:24;:::i;:::-;30378:3;30371:37;30365:48;;:::o;30420:113::-;30503:24;30521:5;30503:24;:::i;:::-;30498:3;30491:37;30485:48;;:::o;30540:121::-;30631:24;30649:5;30631:24;:::i;:::-;30626:3;30619:37;30613:48;;:::o;30668:111::-;30749:24;30767:5;30749:24;:::i;:::-;30744:3;30737:37;30731:48;;:::o;30786:107::-;30865:22;30881:5;30865:22;:::i;:::-;30860:3;30853:35;30847:46;;:::o;30900:387::-;;31054:75;31125:3;31116:6;31054:75;:::i;:::-;31151:2;31146:3;31142:12;31135:19;;31165:73;31234:3;31225:6;31165:73;:::i;:::-;31260:1;31255:3;31251:11;31244:18;;31279:3;31272:10;;31042:245;;;;;:::o;31294:291::-;;31457:103;31556:3;31547:6;31539;31457:103;:::i;:::-;31450:110;;31577:3;31570:10;;31438:147;;;;;:::o;31592:659::-;;31856:148;32000:3;31856:148;:::i;:::-;31849:155;;32015:75;32086:3;32077:6;32015:75;:::i;:::-;32112:2;32107:3;32103:12;32096:19;;32126:75;32197:3;32188:6;32126:75;:::i;:::-;32223:2;32218:3;32214:12;32207:19;;32243:3;32236:10;;31837:414;;;;;:::o;32258:222::-;;32385:2;32374:9;32370:18;32362:26;;32399:71;32467:1;32456:9;32452:17;32443:6;32399:71;:::i;:::-;32356:124;;;;:::o;32487:366::-;;32662:2;32651:9;32647:18;32639:26;;32712:9;32706:4;32702:20;32698:1;32687:9;32683:17;32676:47;32737:106;32838:4;32829:6;32737:106;:::i;:::-;32729:114;;32633:220;;;;:::o;32860:314::-;;33033:2;33022:9;33018:18;33010:26;;33047:117;33161:1;33150:9;33146:17;33137:6;33047:117;:::i;:::-;33004:170;;;;:::o;33181:370::-;;33358:2;33347:9;33343:18;33335:26;;33408:9;33402:4;33398:20;33394:1;33383:9;33379:17;33372:47;33433:108;33536:4;33527:6;33433:108;:::i;:::-;33425:116;;33329:222;;;;:::o;33558:629::-;;33813:2;33802:9;33798:18;33790:26;;33863:9;33857:4;33853:20;33849:1;33838:9;33834:17;33827:47;33888:108;33991:4;33982:6;33888:108;:::i;:::-;33880:116;;34044:9;34038:4;34034:20;34029:2;34018:9;34014:18;34007:48;34069:108;34172:4;34163:6;34069:108;:::i;:::-;34061:116;;33784:403;;;;;:::o;34194:210::-;;34315:2;34304:9;34300:18;34292:26;;34329:65;34391:1;34380:9;34376:17;34367:6;34329:65;:::i;:::-;34286:118;;;;:::o;34411:432::-;;34588:2;34577:9;34573:18;34565:26;;34602:65;34664:1;34653:9;34649:17;34640:6;34602:65;:::i;:::-;34678:72;34746:2;34735:9;34731:18;34722:6;34678:72;:::i;:::-;34761;34829:2;34818:9;34814:18;34805:6;34761:72;:::i;:::-;34559:284;;;;;;:::o;34850:222::-;;34977:2;34966:9;34962:18;34954:26;;34991:71;35059:1;35048:9;35044:17;35035:6;34991:71;:::i;:::-;34948:124;;;;:::o;35079:444::-;;35262:2;35251:9;35247:18;35239:26;;35276:71;35344:1;35333:9;35329:17;35320:6;35276:71;:::i;:::-;35358:72;35426:2;35415:9;35411:18;35402:6;35358:72;:::i;:::-;35441;35509:2;35498:9;35494:18;35485:6;35441:72;:::i;:::-;35233:290;;;;;;:::o;35530:780::-;;35797:3;35786:9;35782:19;35774:27;;35812:71;35880:1;35869:9;35865:17;35856:6;35812:71;:::i;:::-;35894:72;35962:2;35951:9;35947:18;35938:6;35894:72;:::i;:::-;35977;36045:2;36034:9;36030:18;36021:6;35977:72;:::i;:::-;36060;36128:2;36117:9;36113:18;36104:6;36060:72;:::i;:::-;36143:73;36211:3;36200:9;36196:19;36187:6;36143:73;:::i;:::-;36227;36295:3;36284:9;36280:19;36271:6;36227:73;:::i;:::-;35768:542;;;;;;;;;:::o;36317:668::-;;36556:3;36545:9;36541:19;36533:27;;36571:71;36639:1;36628:9;36624:17;36615:6;36571:71;:::i;:::-;36653:72;36721:2;36710:9;36706:18;36697:6;36653:72;:::i;:::-;36736;36804:2;36793:9;36789:18;36780:6;36736:72;:::i;:::-;36819;36887:2;36876:9;36872:18;36863:6;36819:72;:::i;:::-;36902:73;36970:3;36959:9;36955:19;36946:6;36902:73;:::i;:::-;36527:458;;;;;;;;:::o;36992:548::-;;37199:3;37188:9;37184:19;37176:27;;37214:71;37282:1;37271:9;37267:17;37258:6;37214:71;:::i;:::-;37296:68;37360:2;37349:9;37345:18;37336:6;37296:68;:::i;:::-;37375:72;37443:2;37432:9;37428:18;37419:6;37375:72;:::i;:::-;37458;37526:2;37515:9;37511:18;37502:6;37458:72;:::i;:::-;37170:370;;;;;;;:::o;37547:264::-;;37695:2;37684:9;37680:18;37672:26;;37709:92;37798:1;37787:9;37783:17;37774:6;37709:92;:::i;:::-;37666:145;;;;:::o;37818:262::-;;37965:2;37954:9;37950:18;37942:26;;37979:91;38067:1;38056:9;38052:17;38043:6;37979:91;:::i;:::-;37936:144;;;;:::o;38087:252::-;;38229:2;38218:9;38214:18;38206:26;;38243:86;38326:1;38315:9;38311:17;38302:6;38243:86;:::i;:::-;38200:139;;;;:::o;38346:868::-;;38629:3;38618:9;38614:19;38606:27;;38644:69;38710:1;38699:9;38695:17;38686:6;38644:69;:::i;:::-;38724:70;38790:2;38779:9;38775:18;38766:6;38724:70;:::i;:::-;38805;38871:2;38860:9;38856:18;38847:6;38805:70;:::i;:::-;38886;38952:2;38941:9;38937:18;38928:6;38886:70;:::i;:::-;38967:71;39033:3;39022:9;39018:19;39009:6;38967:71;:::i;:::-;39049;39115:3;39104:9;39100:19;39091:6;39049:71;:::i;:::-;39131:73;39199:3;39188:9;39184:19;39175:6;39131:73;:::i;:::-;38600:614;;;;;;;;;;:::o;39221:760::-;;39478:3;39467:9;39463:19;39455:27;;39493:69;39559:1;39548:9;39544:17;39535:6;39493:69;:::i;:::-;39573:70;39639:2;39628:9;39624:18;39615:6;39573:70;:::i;:::-;39654:72;39722:2;39711:9;39707:18;39698:6;39654:72;:::i;:::-;39737;39805:2;39794:9;39790:18;39781:6;39737:72;:::i;:::-;39820:67;39882:3;39871:9;39867:19;39858:6;39820:67;:::i;:::-;39898:73;39966:3;39955:9;39951:19;39942:6;39898:73;:::i;:::-;39449:532;;;;;;;;;:::o;39988:550::-;;40216:2;40205:9;40201:18;40193:26;;40230:104;40331:1;40320:9;40316:17;40307:6;40230:104;:::i;:::-;40345:92;40433:2;40422:9;40418:18;40409:6;40345:92;:::i;:::-;40448:80;40524:2;40513:9;40509:18;40500:6;40448:80;:::i;:::-;40187:351;;;;;;:::o;40545:670::-;;40801:3;40790:9;40786:19;40778:27;;40816:104;40917:1;40906:9;40902:17;40893:6;40816:104;:::i;:::-;40931:92;41019:2;41008:9;41004:18;40995:6;40931:92;:::i;:::-;41034:80;41110:2;41099:9;41095:18;41086:6;41034:80;:::i;:::-;41125;41201:2;41190:9;41186:18;41177:6;41125:80;:::i;:::-;40772:443;;;;;;;:::o;41222:676::-;;41512:3;41501:9;41497:19;41489:27;;41527:104;41628:1;41617:9;41613:17;41604:6;41527:104;:::i;:::-;41642:154;41792:2;41781:9;41777:18;41768:6;41642:154;:::i;:::-;41807:81;41883:3;41872:9;41868:19;41859:6;41807:81;:::i;:::-;41483:415;;;;;;:::o;41905:310::-;;42052:2;42041:9;42037:18;42029:26;;42102:9;42096:4;42092:20;42088:1;42077:9;42073:17;42066:47;42127:78;42200:4;42191:6;42127:78;:::i;:::-;42119:86;;42023:192;;;;:::o;42222:416::-;;42422:2;42411:9;42407:18;42399:26;;42472:9;42466:4;42462:20;42458:1;42447:9;42443:17;42436:47;42497:131;42623:4;42497:131;:::i;:::-;42489:139;;42393:245;;;:::o;42645:330::-;;42826:2;42815:9;42811:18;42803:26;;42840:125;42962:1;42951:9;42947:17;42938:6;42840:125;:::i;:::-;42797:178;;;;:::o;42982:222::-;;43109:2;43098:9;43094:18;43086:26;;43123:71;43191:1;43180:9;43176:17;43167:6;43123:71;:::i;:::-;43080:124;;;;:::o;43211:481::-;;43416:2;43405:9;43401:18;43393:26;;43430:71;43498:1;43487:9;43483:17;43474:6;43430:71;:::i;:::-;43549:9;43543:4;43539:20;43534:2;43523:9;43519:18;43512:48;43574:108;43677:4;43668:6;43574:108;:::i;:::-;43566:116;;43387:305;;;;;:::o;43699:444::-;;43882:2;43871:9;43867:18;43859:26;;43896:71;43964:1;43953:9;43949:17;43940:6;43896:71;:::i;:::-;43978:72;44046:2;44035:9;44031:18;44022:6;43978:72;:::i;:::-;44061;44129:2;44118:9;44114:18;44105:6;44061:72;:::i;:::-;43853:290;;;;;;:::o;44150:214::-;;44273:2;44262:9;44258:18;44250:26;;44287:67;44351:1;44340:9;44336:17;44327:6;44287:67;:::i;:::-;44244:120;;;;:::o;44371:256::-;;44433:2;44427:9;44417:19;;44471:4;44463:6;44459:17;44570:6;44558:10;44555:22;44534:18;44522:10;44519:34;44516:62;44513:2;;;44591:1;44588;44581:12;44513:2;44611:10;44607:2;44600:22;44411:216;;;;:::o;44634:319::-;;44808:18;44800:6;44797:30;44794:2;;;44840:1;44837;44830:12;44794:2;44875:4;44867:6;44863:17;44855:25;;44938:4;44932;44928:15;44920:23;;44731:222;;;:::o;44960:345::-;;45160:18;45152:6;45149:30;45146:2;;;45192:1;45189;45182:12;45146:2;45227:4;45219:6;45215:17;45207:25;;45290:4;45284;45280:15;45272:23;;45083:222;;;:::o;45312:341::-;;45508:18;45500:6;45497:30;45494:2;;;45540:1;45537;45530:12;45494:2;45575:4;45567:6;45563:17;45555:25;;45638:4;45632;45628:15;45620:23;;45431:222;;;:::o;45660:304::-;;45819:18;45811:6;45808:30;45805:2;;;45851:1;45848;45841:12;45805:2;45886:4;45878:6;45874:17;45866:25;;45949:4;45943;45939:15;45931:23;;45742:222;;;:::o;45971:321::-;;46114:18;46106:6;46103:30;46100:2;;;46146:1;46143;46136:12;46100:2;46213:4;46209:9;46202:4;46194:6;46190:17;46186:33;46178:41;;46277:4;46271;46267:15;46259:23;;46037:255;;;:::o;46299:150::-;;46384:3;46376:11;;46422:4;46417:3;46413:14;46405:22;;46370:79;;;:::o;46456:97::-;;46540:3;46532:11;;46526:27;;;:::o;46560:151::-;;46646:3;46638:11;;46684:4;46679:3;46675:14;46667:22;;46632:79;;;:::o;46718:136::-;;46826:5;46820:12;46810:22;;46791:63;;;:::o;46861:108::-;;46955:4;46945:14;;46933:36;;;:::o;46976:137::-;;47085:5;47079:12;47069:22;;47050:63;;;:::o;47120:122::-;;47214:5;47208:12;47198:22;;47179:63;;;:::o;47249:107::-;;47346:4;47341:3;47337:14;47329:22;;47323:33;;;:::o;47363:106::-;;47459:4;47454:3;47450:14;47442:22;;47436:33;;;:::o;47476:108::-;;47574:4;47569:3;47565:14;47557:22;;47551:33;;;:::o;47592:177::-;;47721:6;47716:3;47709:19;47758:4;47753:3;47749:14;47734:29;;47702:67;;;;:::o;47778:140::-;;47909:3;47894:18;;47887:31;;;;:::o;47927:178::-;;48057:6;48052:3;48045:19;48094:4;48089:3;48085:14;48070:29;;48038:67;;;;:::o;48114:144::-;;48249:3;48234:18;;48227:31;;;;:::o;48267:163::-;;48382:6;48377:3;48370:19;48419:4;48414:3;48410:14;48395:29;;48363:67;;;;:::o;48439:145::-;;48575:3;48560:18;;48553:31;;;;:::o;48592:91::-;;48654:24;48672:5;48654:24;:::i;:::-;48643:35;;48637:46;;;:::o;48690:85::-;;48763:5;48756:13;48749:21;48738:32;;48732:43;;;:::o;48782:72::-;;48844:5;48833:16;;48827:27;;;:::o;48861:144::-;;48933:66;48926:5;48922:78;48911:89;;48905:100;;;:::o;49012:112::-;;49095:24;49113:5;49095:24;:::i;:::-;49084:35;;49078:46;;;:::o;49131:106::-;;49208:24;49226:5;49208:24;:::i;:::-;49197:35;;49191:46;;;:::o;49244:134::-;;49320:5;49309:16;;49326:47;49367:5;49326:47;:::i;:::-;49303:75;;;:::o;49385:71::-;;49446:5;49435:16;;49429:27;;;:::o;49463:111::-;;49536:32;49529:5;49525:44;49514:55;;49508:66;;;:::o;49581:113::-;;49654:34;49647:5;49643:46;49632:57;;49626:68;;;:::o;49701:121::-;;49774:42;49767:5;49763:54;49752:65;;49746:76;;;:::o;49829:72::-;;49891:5;49880:16;;49874:27;;;:::o;49908:81::-;;49979:4;49972:5;49968:16;49957:27;;49951:38;;;:::o;49996:163::-;;50096:58;50148:5;50096:58;:::i;:::-;50083:71;;50077:82;;;:::o;50166:129::-;;50266:24;50284:5;50266:24;:::i;:::-;50253:37;;50247:48;;;:::o;50302:161::-;;50401:57;50452:5;50401:57;:::i;:::-;50388:70;;50382:81;;;:::o;50470:128::-;;50569:24;50587:5;50569:24;:::i;:::-;50556:37;;50550:48;;;:::o;50605:151::-;;50699:52;50745:5;50699:52;:::i;:::-;50686:65;;50680:76;;;:::o;50763:123::-;;50857:24;50875:5;50857:24;:::i;:::-;50844:37;;50838:48;;;:::o;50893:134::-;;50984:38;51016:5;50984:38;:::i;:::-;50971:51;;50965:62;;;:::o;51035:145::-;51116:6;51111:3;51106;51093:30;51172:1;51163:6;51158:3;51154:16;51147:27;51086:94;;;:::o;51189:268::-;51254:1;51261:101;51275:6;51272:1;51269:13;51261:101;;;51351:1;51346:3;51342:11;51336:18;51332:1;51327:3;51323:11;51316:39;51297:2;51294:1;51290:10;51285:15;;51261:101;;;51377:6;51374:1;51371:13;51368:2;;;51442:1;51433:6;51428:3;51424:16;51417:27;51368:2;51238:219;;;;:::o;51465:74::-;;51529:5;51518:16;;51512:27;;;:::o;51546:73::-;;51609:5;51598:16;;51592:27;;;:::o;51626:97::-;;51714:2;51710:7;51705:2;51698:5;51694:14;51690:28;51680:38;;51674:49;;;:::o;51731:105::-;51814:1;51807:5;51804:12;51794:2;;51820:9;51794:2;51788:48;:::o;51843:117::-;51912:24;51930:5;51912:24;:::i;:::-;51905:5;51902:35;51892:2;;51951:1;51948;51941:12;51892:2;51886:74;:::o;51967:111::-;52033:21;52048:5;52033:21;:::i;:::-;52026:5;52023:32;52013:2;;52069:1;52066;52059:12;52013:2;52007:71;:::o;52085:117::-;52154:24;52172:5;52154:24;:::i;:::-;52147:5;52144:35;52134:2;;52193:1;52190;52183:12;52134:2;52128:74;:::o;52209:115::-;52277:23;52294:5;52277:23;:::i;:::-;52270:5;52267:34;52257:2;;52315:1;52312;52305:12;52257:2;52251:73;:::o;52331:159::-;52421:45;52460:5;52421:45;:::i;:::-;52414:5;52411:56;52401:2;;52481:1;52478;52471:12;52401:2;52395:95;:::o;52497:147::-;52581:39;52614:5;52581:39;:::i;:::-;52574:5;52571:50;52561:2;;52635:1;52632;52625:12;52561:2;52555:89;:::o;52651:108::-;52734:1;52727:5;52724:12;52714:2;;52750:1;52747;52740:12;52714:2;52708:51;:::o;52766:108::-;52849:1;52842:5;52839:12;52829:2;;52865:1;52862;52855:12;52829:2;52823:51;:::o;52881:107::-;52963:1;52956:5;52953:12;52943:2;;52979:1;52976;52969:12;52943:2;52937:51;:::o;52995:108::-;53078:1;53071:5;53068:12;53058:2;;53094:1;53091;53084:12;53058:2;53052:51;:::o;53110:115::-;53178:23;53195:5;53178:23;:::i;:::-;53171:5;53168:34;53158:2;;53216:1;53213;53206:12;53158:2;53152:73;:::o;53232:117::-;53301:24;53319:5;53301:24;:::i;:::-;53294:5;53291:35;53281:2;;53340:1;53337;53330:12;53281:2;53275:74;:::o;53356:117::-;53425:24;53443:5;53425:24;:::i;:::-;53418:5;53415:35;53405:2;;53464:1;53461;53454:12;53405:2;53399:74;:::o;53480:117::-;53549:24;53567:5;53549:24;:::i;:::-;53542:5;53539:35;53529:2;;53588:1;53585;53578:12;53529:2;53523:74;:::o;53604:113::-;53671:22;53687:5;53671:22;:::i;:::-;53664:5;53661:33;53651:2;;53708:1;53705;53698:12;53651:2;53645:72;:::o", "language": "Solidity", "natspec": {"kind": "dev", "methods": {"DOMAIN_SEPARATOR()": {"details": "See {IERC20Permit-DOMAIN_SEPARATOR}."}, "allowance(address,address)": {"details": "Override to grant the Vault infinite allowance, causing for Pool Tokens to not require approval. This is sound as the Vault already provides authorization mechanisms when initiation token transfers, which this contract inherits."}, "approve(address,uint256)": {"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."}, "balanceOf(address)": {"details": "See {IERC20-balanceOf}."}, "decimals()": {"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."}, "decreaseAllowance(address,uint256)": {"details": "Override to allow decreasing allowance by more than the current amount (setting it to zero)"}, "dirtyUninitializedOracleSamples(uint256,uint256)": {"details": "Manually dirty oracle sample storage slots with dummy data, to reduce the gas cost of the future swaps that will initialize them. This function is only useful before the oracle has been fully initialized. `endIndex` is non-inclusive."}, "enableOracle()": {"details": "Balancer Governance can always enable the Oracle, even if it was originally not enabled. This allows for Pools that unexpectedly drive much more volume and liquidity than expected to serve as Price Oracles. Note that the Oracle can only be enabled - it can never be disabled."}, "getActionId(bytes4)": {"details": "Returns the action identifier associated with the external function described by `selector`."}, "getInvariant()": {"details": "Returns the current value of the invariant."}, "getLargestSafeQueryWindow()": {"details": "Returns largest time window that can be safely queried, where 'safely' means the Oracle is guaranteed to be able to produce a result and not revert. If a query has a non-zero `ago` value, then `secs + ago` (the oldest point in time) must be smaller than this value for 'safe' queries."}, "getLatest(uint8)": {"details": "Returns latest sample of `variable`. Prices are represented as 18 decimal fixed point values."}, "getPastAccumulators((uint8,uint256)[])": {"details": "Returns the accumulators corresponding to each of `queries`."}, "getPausedState()": {"details": "Returns the current contract pause status, as well as the end times of the Pause Window and Buffer Period."}, "getRate()": {"details": "This function returns the appreciation of one BPT relative to the underlying tokens. This starts at 1 when the pool is created and grows over time"}, "getSample(uint256)": {"details": "Returns the raw data of the sample at `index`."}, "getTimeWeightedAverage((uint8,uint256,uint256)[])": {"details": "Returns the time average weighted price corresponding to each of `queries`. Prices are represented as 18 decimal fixed point values."}, "getTotalSamples()": {"details": "Returns the total number of samples."}, "getVirtualParameters()": {"details": "Returns virtual offsets a and b for reserves x and y respectively, as in (x+a)*(y+b)=L^2"}, "increaseAllowance(address,uint256)": {"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."}, "name()": {"details": "Returns the name of the token."}, "nonces(address)": {"details": "See {IERC20Permit-nonces}."}, "onExitPool(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Called by the Vault when a user calls `IVault.exitPool` to remove liquidity from this Pool. Returns how many tokens the Vault should deduct from the Pool's balances, as well as the amount of protocol fees the Pool owes to the Vault. The Vault will then take tokens from the Pool's balances and send them to `recipient`, as well as collect the reported amount in protocol fees, which the Pool should calculate based on `protocolSwapFeePercentage`. Protocol fees are charged on exit events to guarantee that users exiting the Pool have paid their share. `sender` is the account performing the exit (typically the pool shareholder), and `recipient` is the account to which the Vault will send the proceeds. `balances` contains the total token balances for each token the Pool registered in the Vault, in the same order that `IVault.getPoolTokens` would return. `lastChangeBlock` is the last block in which *any* of the Pool's registered tokens last changed its total balance. `userData` contains any pool-specific instructions needed to perform the calculations, such as the type of exit (e.g., proportional given an amount of pool shares, single-asset, multi-asset, etc.) Contracts implementing this function should check that the caller is indeed the Vault before performing any state-changing operations, such as burning pool shares."}, "onJoinPool(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Called by the Vault when a user calls `IVault.joinPool` to add liquidity to this Pool. Returns how many of each registered token the user should provide, as well as the amount of protocol fees the Pool owes to the Vault. The Vault will then take tokens from `sender` and add them to the Pool's balances, as well as collect the reported amount in protocol fees, which the pool should calculate based on `protocolSwapFeePercentage`. Protocol fees are reported and charged on join events so that the Pool is free of debt whenever new users join. `sender` is the account performing the join (from which tokens will be withdrawn), and `recipient` is the account designated to receive any benefits (typically pool shares). `balances` contains the total balances for each token the Pool registered in the Vault, in the same order that `IVault.getPoolTokens` would return. `lastChangeBlock` is the last block in which *any* of the Pool's registered tokens last changed its total balance. `userData` contains any pool-specific instructions needed to perform the calculations, such as the type of join (e.g., proportional given an amount of pool shares, single-asset, multi-asset, etc.) Contracts implementing this function should check that the caller is indeed the Vault before performing any state-changing operations, such as minting pool shares."}, "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {"details": "See {IERC20Permit-permit}."}, "queryExit(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Returns the amount of BPT that would be burned from `sender` if the `onExitPool` hook were called by the Vault with the same arguments, along with the number of tokens `recipient` would receive. This function is not meant to be called directly, but rather from a helper contract that fetches current Vault data, such as the protocol swap fee percentage and Pool balances. Like `IVault.queryBatchSwap`, this function is not view due to internal implementation details: the caller must explicitly use eth_call instead of eth_sendTransaction."}, "queryJoin(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Returns the amount of BPT that would be granted to `recipient` if the `onJoinPool` hook were called by the Vault with the same arguments, along with the number of tokens `sender` would have to supply. This function is not meant to be called directly, but rather from a helper contract that fetches current Vault data, such as the protocol swap fee percentage and Pool balances. Like `IVault.queryBatchSwap`, this function is not view due to internal implementation details: the caller must explicitly use eth_call instead of eth_sendTransaction."}, "symbol()": {"details": "Returns the symbol of the token, usually a shorter version of the name."}, "totalSupply()": {"details": "See {IERC20-totalSupply}."}, "transfer(address,uint256)": {"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."}, "transferFrom(address,address,uint256)": {"details": "Override to allow for 'infinite allowance' and let the token owner use `transferFrom` with no self-allowance"}}, "version": 1}, "offset": [1296, 28050], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2A0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x707DCD1E GT PUSH2 0x167 JUMPI DUP1 PUSH4 0x9D2C110C GT PUSH2 0xCE JUMPI DUP1 PUSH4 0xC0FF1A15 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xC0FF1A15 EQ PUSH2 0x8B9 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x8D7 JUMPI DUP1 PUSH4 0xD5C096C4 EQ PUSH2 0x8F3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x924 JUMPI DUP1 PUSH4 0xF89F27ED EQ PUSH2 0x954 JUMPI DUP1 PUSH4 0xFFD088EB EQ PUSH2 0x972 JUMPI PUSH2 0x2A0 JUMP JUMPDEST DUP1 PUSH4 0x9D2C110C EQ PUSH2 0x7BD JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x7ED JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x81D JUMPI DUP1 PUSH4 0xAAABADC5 EQ PUSH2 0x84D JUMPI DUP1 PUSH4 0xB10BE739 EQ PUSH2 0x86B JUMPI DUP1 PUSH4 0xB48B5B40 EQ PUSH2 0x89B JUMPI PUSH2 0x2A0 JUMP JUMPDEST DUP1 PUSH4 0x87EC6817 GT PUSH2 0x120 JUMPI DUP1 PUSH4 0x87EC6817 EQ PUSH2 0x6F6 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x727 JUMPI DUP1 PUSH4 0x8D928AF8 EQ PUSH2 0x745 JUMPI DUP1 PUSH4 0x8DD9F89D EQ PUSH2 0x763 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x781 JUMPI DUP1 PUSH4 0x9B02CDDE EQ PUSH2 0x79F JUMPI PUSH2 0x2A0 JUMP JUMPDEST DUP1 PUSH4 0x707DCD1E EQ PUSH2 0x5FB JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x619 JUMPI DUP1 PUSH4 0x74F3B009 EQ PUSH2 0x649 JUMPI DUP1 PUSH4 0x76E54A46 EQ PUSH2 0x67A JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x696 JUMPI DUP1 PUSH4 0x851C1BB3 EQ PUSH2 0x6C6 JUMPI PUSH2 0x2A0 JUMP JUMPDEST DUP1 PUSH4 0x38FFF2D0 GT PUSH2 0x20B JUMPI DUP1 PUSH4 0x55C67628 GT PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x55C67628 EQ PUSH2 0x50A JUMPI DUP1 PUSH4 0x6028BFD4 EQ PUSH2 0x528 JUMPI DUP1 PUSH4 0x60D1507C EQ PUSH2 0x559 JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x58F JUMPI DUP1 PUSH4 0x6B843239 EQ PUSH2 0x5AD JUMPI DUP1 PUSH4 0x6D785A87 EQ PUSH2 0x5DD JUMPI PUSH2 0x2A0 JUMP JUMPDEST DUP1 PUSH4 0x38FFF2D0 EQ PUSH2 0x42B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0x3AEAE0D3 EQ PUSH2 0x479 JUMPI DUP1 PUSH4 0x3C4DD5BB EQ PUSH2 0x497 JUMPI DUP1 PUSH4 0x44BBDB55 EQ PUSH2 0x4C9 JUMPI DUP1 PUSH4 0x4A6B0B15 EQ PUSH2 0x4E7 JUMPI PUSH2 0x2A0 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x25D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0x292C914A EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0x3331BC36 EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0x38E9922E EQ PUSH2 0x40F JUMPI PUSH2 0x2A0 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x1C0DE051 EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0x1DCCD830 EQ PUSH2 0x34D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2AD PUSH2 0x990 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x7617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x6805 JUMP JUMPDEST PUSH2 0xA32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x72A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x6942 JUMP JUMPDEST PUSH2 0xA49 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x317 PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x7674 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x335 PUSH2 0xA67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x344 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x72C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x367 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x362 SWAP2 SWAP1 PUSH2 0x6901 JUMP JUMPDEST PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x374 SWAP2 SWAP1 PUSH2 0x724D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x397 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x6718 JUMP JUMPDEST PUSH2 0xBBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x72A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B5 PUSH2 0xC97 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BF PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0x76F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x6D06 JUMP JUMPDEST PUSH2 0xCE3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F9 PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x406 SWAP2 SWAP1 PUSH2 0x72F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x429 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x424 SWAP2 SWAP1 PUSH2 0x6CB4 JUMP JUMPDEST PUSH2 0xD82 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x433 PUSH2 0xD9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x440 SWAP2 SWAP1 PUSH2 0x72F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x463 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45E SWAP2 SWAP1 PUSH2 0x6805 JUMP JUMPDEST PUSH2 0xDC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x470 SWAP2 SWAP1 PUSH2 0x72A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x481 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48E SWAP2 SWAP1 PUSH2 0x7659 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AC SWAP2 SWAP1 PUSH2 0x6D42 JUMP JUMPDEST PUSH2 0xF31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x76BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D1 PUSH2 0xF84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DE SWAP2 SWAP1 PUSH2 0x745E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4EF PUSH2 0xFAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x501 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7503 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x512 PUSH2 0x1005 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51F SWAP2 SWAP1 PUSH2 0x7674 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x542 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53D SWAP2 SWAP1 PUSH2 0x6994 JUMP JUMPDEST PUSH2 0x1017 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x550 SWAP3 SWAP2 SWAP1 PUSH2 0x768F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x573 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x56E SWAP2 SWAP1 PUSH2 0x6CB4 JUMP JUMPDEST PUSH2 0x1048 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x586 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x597 PUSH2 0x1093 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A4 SWAP2 SWAP1 PUSH2 0x7674 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0x68C0 JUMP JUMPDEST PUSH2 0x10C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D4 SWAP2 SWAP1 PUSH2 0x7210 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E5 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F2 SWAP2 SWAP1 PUSH2 0x71F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x603 PUSH2 0x11AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x610 SWAP2 SWAP1 PUSH2 0x7232 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x633 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62E SWAP2 SWAP1 PUSH2 0x668A JUMP JUMPDEST PUSH2 0x11C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x640 SWAP2 SWAP1 PUSH2 0x7674 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x663 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65E SWAP2 SWAP1 PUSH2 0x6994 JUMP JUMPDEST PUSH2 0x1208 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x671 SWAP3 SWAP2 SWAP1 PUSH2 0x726F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x694 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x68F SWAP2 SWAP1 PUSH2 0x6C24 JUMP JUMPDEST PUSH2 0x12CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6AB SWAP2 SWAP1 PUSH2 0x668A JUMP JUMPDEST PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6BD SWAP2 SWAP1 PUSH2 0x7674 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6DB SWAP2 SWAP1 PUSH2 0x6A62 JUMP JUMPDEST PUSH2 0x150B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6ED SWAP2 SWAP1 PUSH2 0x72F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x710 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x70B SWAP2 SWAP1 PUSH2 0x6994 JUMP JUMPDEST PUSH2 0x155D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71E SWAP3 SWAP2 SWAP1 PUSH2 0x768F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x72F PUSH2 0x158E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x73C SWAP2 SWAP1 PUSH2 0x71F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x74D PUSH2 0x15B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x75A SWAP2 SWAP1 PUSH2 0x7479 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x76B PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x778 SWAP2 SWAP1 PUSH2 0x724D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x789 PUSH2 0x16F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x796 SWAP2 SWAP1 PUSH2 0x7617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7A7 PUSH2 0x1799 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B4 SWAP2 SWAP1 PUSH2 0x7674 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7D2 SWAP2 SWAP1 PUSH2 0x6C4D JUMP JUMPDEST PUSH2 0x17A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7E4 SWAP2 SWAP1 PUSH2 0x7674 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x807 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x802 SWAP2 SWAP1 PUSH2 0x6805 JUMP JUMPDEST PUSH2 0x19E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x814 SWAP2 SWAP1 PUSH2 0x72A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x837 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x832 SWAP2 SWAP1 PUSH2 0x6805 JUMP JUMPDEST PUSH2 0x1A28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x844 SWAP2 SWAP1 PUSH2 0x72A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x855 PUSH2 0x1A3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x862 SWAP2 SWAP1 PUSH2 0x7443 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x885 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x880 SWAP2 SWAP1 PUSH2 0x6BD2 JUMP JUMPDEST PUSH2 0x1A4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x892 SWAP2 SWAP1 PUSH2 0x7674 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A3 PUSH2 0x1AEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B0 SWAP2 SWAP1 PUSH2 0x7674 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8C1 PUSH2 0x1AF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8CE SWAP2 SWAP1 PUSH2 0x7674 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8EC SWAP2 SWAP1 PUSH2 0x6767 JUMP JUMPDEST PUSH2 0x1BE7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x90D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x908 SWAP2 SWAP1 PUSH2 0x6994 JUMP JUMPDEST PUSH2 0x1DC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x91B SWAP3 SWAP2 SWAP1 PUSH2 0x726F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x93E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x939 SWAP2 SWAP1 PUSH2 0x66DC JUMP JUMPDEST PUSH2 0x1F56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94B SWAP2 SWAP1 PUSH2 0x7674 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95C PUSH2 0x1FCE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x969 SWAP2 SWAP1 PUSH2 0x724D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x97A PUSH2 0x1FDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x987 SWAP2 SWAP1 PUSH2 0x7674 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xA28 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA28 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA0B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA3F CALLER DUP5 DUP5 PUSH2 0x20BF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA51 PUSH2 0x21AA JUMP JUMPDEST PUSH2 0xA5A DUP2 PUSH2 0x21F3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xA74 PUSH2 0x227D JUMP JUMPDEST ISZERO SWAP3 POP PUSH2 0xA7F PUSH2 0x22A6 JUMP JUMPDEST SWAP2 POP PUSH2 0xA89 PUSH2 0x22CE JUMP JUMPDEST SWAP1 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xAAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAD9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH2 0xAE6 PUSH2 0x22F6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xBB6 JUMPI PUSH20 0x0 PUSH4 0x79EAEF82 PUSH1 0x8 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xB1C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB43 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x75E0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0xB6F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB93 SWAP2 SWAP1 PUSH2 0x6CDD JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB9F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xAEB JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBCA DUP6 CALLER PUSH2 0x1F56 JUMP JUMPDEST SWAP1 POP PUSH2 0xC11 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xC09 JUMPI POP DUP4 DUP3 LT ISZERO JUMPDEST PUSH2 0x19E PUSH2 0x2308 JUMP JUMPDEST PUSH2 0xC1C DUP6 DUP6 DUP6 PUSH2 0x231B JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xC78 JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0xC8B JUMPI PUSH2 0xC8A DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x20BF JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xC9F PUSH2 0x2532 JUMP JUMPDEST PUSH2 0xCA7 PUSH2 0x21AA JUMP JUMPDEST PUSH2 0xCB1 PUSH1 0x1 PUSH2 0x2547 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBB PUSH2 0xA5D JUMP JUMPDEST GT ISZERO PUSH2 0xCCA JUMPI PUSH2 0xCC9 PUSH2 0x259C JUMP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xCFE DUP2 DUP4 LT DUP1 ISZERO PUSH2 0xCF7 JUMPI POP PUSH2 0x400 DUP3 GT ISZERO JUMPDEST PUSH1 0x64 PUSH2 0x2308 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD13 PUSH1 0x1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x25FF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xD6D JUMPI PUSH1 0x0 PUSH2 0xD41 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x26A0 JUMP JUMPDEST EQ ISZERO PUSH2 0xD60 JUMPI DUP2 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xD1B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD7D PUSH2 0x26BD JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD8A PUSH2 0x21AA JUMP JUMPDEST PUSH2 0xD92 PUSH2 0x2532 JUMP JUMPDEST PUSH2 0xD9B DUP2 PUSH2 0x275A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE61 CALLER DUP5 PUSH2 0xE5C DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x27D8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x20BF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE73 PUSH2 0x5F8B JUMP JUMPDEST PUSH1 0xB PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xF40 DUP6 PUSH2 0x27F8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF4E DUP7 ISZERO PUSH2 0x27F8 JUMP JUMPDEST SWAP1 POP PUSH2 0xF5A DUP9 DUP4 PUSH2 0x284E JUMP JUMPDEST SWAP8 POP PUSH2 0xF66 DUP8 DUP3 PUSH2 0x284E JUMP JUMPDEST SWAP7 POP PUSH2 0xF73 DUP9 DUP9 DUP9 PUSH2 0x2862 JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP POP POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x9 SLOAD SWAP1 POP PUSH2 0xFC3 DUP2 PUSH2 0x29C2 JUMP JUMPDEST SWAP7 POP PUSH2 0xFCE DUP2 PUSH2 0x29DF JUMP JUMPDEST SWAP6 POP PUSH2 0xFD9 DUP2 PUSH2 0x29FC JUMP JUMPDEST SWAP5 POP PUSH2 0xFE4 DUP2 PUSH2 0x2A19 JUMP JUMPDEST SWAP4 POP PUSH2 0xFEF DUP2 PUSH2 0x2A36 JUMP JUMPDEST SWAP3 POP PUSH2 0xFFA DUP2 PUSH2 0x2A53 JUMP JUMPDEST SWAP2 POP POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1012 PUSH1 0x9 SLOAD PUSH2 0x2A53 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x1027 DUP7 MLOAD PUSH1 0x2 PUSH2 0x2A70 JUMP JUMPDEST PUSH2 0x103C DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x2A81 PUSH2 0x2C15 PUSH2 0x2C98 JUMP JUMPDEST SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1063 PUSH2 0x400 DUP10 LT PUSH2 0x13B PUSH2 0x2308 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x106E DUP10 PUSH2 0x2E18 JUMP JUMPDEST SWAP1 POP PUSH2 0x1079 DUP2 PUSH2 0x2E35 JUMP JUMPDEST SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP1 SWAP3 SWAP5 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10C0 PUSH2 0x10A0 PUSH2 0xA5D JUMP JUMPDEST PUSH2 0x10B2 PUSH2 0x10AB PUSH2 0x1AF4 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x2E98 JUMP JUMPDEST PUSH2 0x2ECB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x10DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x110E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH2 0x111B PUSH2 0x22F6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1125 PUSH2 0x5FD1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x117D JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x113D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP PUSH2 0x115A DUP3 PUSH1 0x0 ADD MLOAD DUP5 DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x2F2F JUMP JUMPDEST DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1166 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1128 JUMP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x11B3 PUSH2 0x5FF6 JUMP JUMPDEST PUSH2 0x11BB PUSH2 0x2FC8 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP9 PUSH2 0x124C PUSH2 0x1217 PUSH2 0x15B6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH1 0xCD PUSH2 0x2308 JUMP JUMPDEST PUSH2 0x1261 PUSH2 0x1257 PUSH2 0xD9E JUMP JUMPDEST DUP3 EQ PUSH2 0x1F4 PUSH2 0x2308 JUMP JUMPDEST PUSH2 0x126A DUP8 PUSH2 0x3013 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH2 0x127E DUP14 DUP14 DUP14 DUP14 DUP14 DUP14 DUP14 PUSH2 0x2A81 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x128E DUP13 DUP5 PUSH2 0x3096 JUMP JUMPDEST PUSH2 0x1297 DUP3 PUSH2 0x2C15 JUMP JUMPDEST PUSH2 0x12A0 DUP2 PUSH2 0x2C15 JUMP JUMPDEST PUSH2 0x12A8 PUSH2 0x227D JUMP JUMPDEST ISZERO PUSH2 0x12B6 JUMPI PUSH2 0x12B5 PUSH2 0x259C JUMP JUMPDEST JUMPDEST DUP2 DUP2 SWAP6 POP SWAP6 POP POP POP POP POP SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6E6F7420617574686F72697A6564000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x1394 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138B SWAP2 SWAP1 PUSH2 0x7617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x706F6F6C20697320756E63617070656400000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x141F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1416 SWAP2 SWAP1 PUSH2 0x7617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x40 ADD MLOAD PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1540 SWAP3 SWAP2 SWAP1 PUSH2 0x7179 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x156D DUP7 MLOAD PUSH1 0x2 PUSH2 0x2A70 JUMP JUMPDEST PUSH2 0x1582 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x30A4 PUSH2 0x3221 PUSH2 0x2C98 JUMP JUMPDEST SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH2 0x15E9 PUSH2 0x15B6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF94D4668 PUSH2 0x160C PUSH2 0xD9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1628 SWAP2 SWAP1 PUSH2 0x72F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1640 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1654 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x167D SWAP2 SWAP1 PUSH2 0x6841 JUMP JUMPDEST POP SWAP2 POP POP PUSH2 0x168A DUP2 PUSH2 0x3013 JUMP JUMPDEST PUSH2 0x16BE DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x169A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x16AF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH2 0x2862 JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x16CE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP5 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x16E2 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP3 DUP2 MSTORE POP DUP3 DUP2 MSTORE POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x178F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1764 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x178F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1772 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17AD PUSH2 0x2532 JUMP JUMPDEST DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0x17F2 PUSH2 0x17BD PUSH2 0x15B6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH1 0xCD PUSH2 0x2308 JUMP JUMPDEST PUSH2 0x1807 PUSH2 0x17FD PUSH2 0xD9E JUMP JUMPDEST DUP3 EQ PUSH2 0x1F4 PUSH2 0x2308 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH1 0x0 PUSH2 0x1869 DUP3 PUSH2 0x27F8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1877 DUP4 ISZERO PUSH2 0x27F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x1883 DUP8 DUP4 PUSH2 0x284E JUMP JUMPDEST SWAP7 POP PUSH2 0x188F DUP7 DUP3 PUSH2 0x284E JUMP JUMPDEST SWAP6 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x18A1 DUP11 DUP11 DUP9 PUSH2 0x2862 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x18E8 DUP12 PUSH1 0xA0 ADD MLOAD DUP8 PUSH2 0x18BA JUMPI DUP11 PUSH2 0x18BC JUMP JUMPDEST DUP12 JUMPDEST DUP9 PUSH2 0x18C7 JUMPI DUP13 PUSH2 0x18C9 JUMP JUMPDEST DUP12 JUMPDEST DUP10 PUSH2 0x18D4 JUMPI DUP5 PUSH2 0x18D6 JUMP JUMPDEST DUP6 JUMPDEST DUP11 PUSH2 0x18E1 JUMPI DUP7 PUSH2 0x18E3 JUMP JUMPDEST DUP6 JUMPDEST PUSH2 0x32A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x18F5 JUMPI INVALID JUMPDEST DUP12 PUSH1 0x0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1905 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1980 JUMPI PUSH1 0x0 PUSH2 0x192B PUSH2 0x1918 PUSH2 0x1005 JUMP JUMPDEST DUP14 PUSH1 0x60 ADD MLOAD PUSH2 0x3367 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x194D PUSH2 0x1947 DUP3 DUP15 PUSH1 0x60 ADD MLOAD PUSH2 0x33C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH2 0x284E JUMP JUMPDEST DUP13 PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 PUSH2 0x1965 DUP14 DUP14 DUP14 DUP8 DUP8 PUSH2 0x33E6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1971 DUP2 DUP8 PUSH2 0x3404 JUMP JUMPDEST SWAP10 POP POP POP POP POP POP POP POP POP PUSH2 0x19E0 JUMP JUMPDEST PUSH2 0x198E DUP12 PUSH1 0x60 ADD MLOAD DUP6 PUSH2 0x284E JUMP JUMPDEST DUP12 PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 PUSH2 0x19A6 DUP13 DUP13 DUP13 DUP7 DUP7 PUSH2 0x3418 JUMP JUMPDEST SWAP1 POP PUSH2 0x19B2 DUP2 DUP8 PUSH2 0x3436 JUMP JUMPDEST SWAP1 POP PUSH2 0x19D6 PUSH2 0x19C7 PUSH2 0x19C2 PUSH2 0x1005 JUMP JUMPDEST PUSH2 0x344A JUMP JUMPDEST DUP3 PUSH2 0x3475 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP9 POP POP POP POP POP POP POP POP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x19F5 CALLER DUP6 PUSH2 0x1F56 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 LT PUSH2 0x1A0F JUMPI PUSH2 0x1A0A CALLER DUP6 PUSH1 0x0 PUSH2 0x20BF JUMP JUMPDEST PUSH2 0x1A1D JUMP JUMPDEST PUSH2 0x1A1C CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x20BF JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A35 CALLER DUP5 DUP5 PUSH2 0x231B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A49 PUSH2 0x34DF JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0x397BEE0 PUSH1 0x8 DUP5 PUSH2 0x1A75 PUSH2 0x22F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A93 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7564 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1AAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1ABF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AE3 SWAP2 SWAP1 PUSH2 0x6CDD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x400 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x1B00 PUSH2 0x15B6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF94D4668 PUSH2 0x1B23 PUSH2 0xD9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B3F SWAP2 SWAP1 PUSH2 0x72F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B6B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B94 SWAP2 SWAP1 PUSH2 0x6841 JUMP JUMPDEST POP SWAP2 POP POP PUSH2 0x1BA0 PUSH2 0x5FF6 JUMP JUMPDEST PUSH2 0x1BA8 PUSH2 0x2FC8 JUMP JUMPDEST SWAP1 POP PUSH2 0x1BB3 DUP3 PUSH2 0x3013 JUMP JUMPDEST PUSH2 0x1BE0 DUP3 DUP3 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x1BC4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x1BD6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x356B JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1BF5 DUP5 TIMESTAMP GT ISZERO PUSH1 0xD1 PUSH2 0x2308 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH32 0x0 DUP10 DUP10 DUP10 DUP6 DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1C76 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x734A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1C99 DUP3 PUSH2 0x359F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1CC0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x73FE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CE2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH2 0x1D61 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1D59 JUMPI POP DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x1F8 PUSH2 0x2308 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH1 0x6 PUSH1 0x0 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1DB3 DUP12 DUP12 DUP12 PUSH2 0x20BF JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP9 PUSH2 0x1E04 PUSH2 0x1DCF PUSH2 0x15B6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH1 0xCD PUSH2 0x2308 JUMP JUMPDEST PUSH2 0x1E19 PUSH2 0x1E0F PUSH2 0xD9E JUMP JUMPDEST DUP3 EQ PUSH2 0x1F4 PUSH2 0x2308 JUMP JUMPDEST PUSH2 0x1E21 PUSH2 0x2532 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1E2C PUSH2 0xA5D JUMP JUMPDEST EQ ISZERO PUSH2 0x1ECC JUMPI PUSH2 0x1E3E DUP12 DUP12 DUP12 DUP9 PUSH2 0x35D8 JUMP JUMPDEST DUP1 SWAP6 POP DUP2 SWAP3 POP POP POP PUSH2 0x1E57 PUSH3 0xF4240 DUP3 LT ISZERO PUSH1 0xCC PUSH2 0x2308 JUMP JUMPDEST PUSH2 0x1E65 PUSH1 0x0 PUSH3 0xF4240 PUSH2 0x369C JUMP JUMPDEST PUSH2 0x1E74 DUP10 PUSH3 0xF4240 DUP4 SUB PUSH2 0x369C JUMP JUMPDEST PUSH2 0x1E7D DUP5 PUSH2 0x3221 JUMP JUMPDEST PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x1E95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1EC4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP PUSH2 0x1F40 JUMP JUMPDEST PUSH2 0x1ED5 DUP9 PUSH2 0x3013 JUMP JUMPDEST PUSH2 0x1F08 DUP8 DUP10 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1EE6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP11 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1EFB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x36AA JUMP JUMPDEST PUSH2 0x1F17 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH2 0x30A4 JUMP JUMPDEST DUP1 SWAP6 POP DUP2 SWAP7 POP DUP3 SWAP4 POP POP POP POP PUSH2 0x1F2D DUP10 DUP3 PUSH2 0x369C JUMP JUMPDEST PUSH2 0x1F36 DUP5 PUSH2 0x3221 JUMP JUMPDEST PUSH2 0x1F3F DUP4 PUSH2 0x2C15 JUMP JUMPDEST JUMPDEST PUSH2 0x1F48 PUSH2 0x259C JUMP JUMPDEST POP POP SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F60 PUSH2 0x15B6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1FBB JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP PUSH2 0x1FC8 JUMP JUMPDEST PUSH2 0x1FC5 DUP4 DUP4 PUSH2 0x36AF JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1FD8 PUSH2 0x3736 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1DE20 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 SWAP1 POP PUSH2 0x1FF6 DUP2 PUSH2 0x37D0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2012 DUP3 PUSH1 0x55 DUP6 PUSH2 0x205B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2032 DUP3 PUSH1 0x56 DUP6 PUSH2 0x2092 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x204A DUP4 DUP4 GT ISZERO PUSH1 0x1 PUSH2 0x2308 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 SWAP1 SHL NOT DUP6 PUSH1 0x0 SHR AND PUSH1 0x0 SHL SWAP1 POP DUP3 DUP5 PUSH2 0x207B JUMPI PUSH1 0x0 PUSH2 0x207E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND SWAP1 SHL PUSH1 0x0 SHL DUP2 OR SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SHL NOT DUP6 PUSH1 0x0 SHR AND PUSH1 0x0 SHL SWAP1 POP DUP3 DUP5 SWAP1 SHL PUSH1 0x0 SHL DUP2 OR SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x219D SWAP2 SWAP1 PUSH2 0x7674 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21D9 PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x150B JUMP JUMPDEST SWAP1 POP PUSH2 0x21F0 PUSH2 0x21E8 DUP3 CALLER PUSH2 0x386E JUMP JUMPDEST PUSH2 0x191 PUSH2 0x2308 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2213 JUMPI PUSH2 0x220E PUSH2 0x2204 PUSH2 0x22A6 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x193 PUSH2 0x2308 JUMP JUMPDEST PUSH2 0x2229 JUMP JUMPDEST PUSH2 0x2228 PUSH2 0x221E PUSH2 0x22CE JUMP JUMPDEST TIMESTAMP LT PUSH2 0x1A9 PUSH2 0x2308 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x9E3A5E37224532DEA67B89FACE185703738A228A6E8A23DEE546960180D3BE64 DUP2 PUSH1 0x40 MLOAD PUSH2 0x2272 SWAP2 SWAP1 PUSH2 0x72A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2287 PUSH2 0x22CE JUMP JUMPDEST TIMESTAMP GT DUP1 PUSH2 0x22A1 JUMPI POP PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2303 PUSH1 0x9 SLOAD PUSH2 0x2A19 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH2 0x2317 JUMPI PUSH2 0x2316 DUP2 PUSH2 0x39AB JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2357 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x198 PUSH2 0x2308 JUMP JUMPDEST PUSH2 0x2393 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x199 PUSH2 0x2308 JUMP JUMPDEST PUSH2 0x239E DUP4 DUP4 DUP4 PUSH2 0x3A1B JUMP JUMPDEST PUSH2 0x23F3 DUP2 PUSH2 0x1A0 PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3A20 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x2486 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x27D8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x2525 SWAP2 SWAP1 PUSH2 0x7674 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x2545 PUSH2 0x253D PUSH2 0x227D JUMP JUMPDEST PUSH2 0x192 PUSH2 0x2308 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x255C DUP2 PUSH1 0x9 SLOAD PUSH2 0x1FFA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH32 0x3E350B41E86A8E10F804ADE6D35340D620BE35569CC75AC943E8BB14AB80EAD1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x2591 SWAP2 SWAP1 PUSH2 0x72A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD SWAP1 POP PUSH2 0x25AC DUP2 PUSH2 0x2A36 JUMP JUMPDEST ISZERO PUSH2 0x25FC JUMPI PUSH2 0x25CE PUSH2 0x25BF PUSH1 0xA SLOAD PUSH2 0x3A41 JUMP JUMPDEST DUP3 PUSH2 0x3A8B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x25F2 PUSH2 0x25E3 PUSH2 0x25DE PUSH2 0xA5D JUMP JUMPDEST PUSH2 0x3A41 JUMP JUMPDEST DUP3 PUSH2 0x3AAB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2615 PUSH1 0x0 DUP4 PUSH2 0x3ACB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2629 PUSH1 0x1F DUP6 PUSH2 0x3ADC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x263D PUSH1 0x54 DUP8 PUSH2 0x3AF6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2651 PUSH1 0x6A DUP10 PUSH2 0x3ADC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2665 PUSH1 0x9F DUP12 PUSH2 0x3AF6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2679 PUSH1 0xB5 DUP14 PUSH2 0x3ADC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x268D PUSH1 0xEA DUP16 PUSH2 0x3AF6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST OR OR OR OR OR OR SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26B6 PUSH1 0x0 DUP4 PUSH2 0x3B0C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x272A PUSH2 0x3B23 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x273F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x73AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x276D PUSH5 0xE8D4A51000 DUP3 LT ISZERO PUSH1 0xCB PUSH2 0x2308 JUMP JUMPDEST PUSH2 0x2783 PUSH8 0x16345785D8A0000 DUP3 GT ISZERO PUSH1 0xCA PUSH2 0x2308 JUMP JUMPDEST PUSH2 0x2798 DUP2 PUSH1 0x9 SLOAD PUSH2 0x201A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH32 0xA9BA3FFE0B6C366B81232CAAB38605A0699AD5398D6CCE76F91EE809E322DAFC DUP2 PUSH1 0x40 MLOAD PUSH2 0x27CD SWAP2 SWAP1 PUSH2 0x7674 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP PUSH2 0x27EE DUP5 DUP3 LT ISZERO PUSH1 0x0 PUSH2 0x2308 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2825 JUMPI PUSH32 0x0 PUSH2 0x2847 JUMP JUMPDEST PUSH32 0x0 JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x285A DUP4 DUP4 PUSH2 0x2E98 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x2881 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x28B0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP5 PUSH2 0x28BE JUMPI DUP6 PUSH2 0x28C0 JUMP JUMPDEST DUP7 JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x28CD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP5 PUSH2 0x28E4 JUMPI DUP7 PUSH2 0x28E6 JUMP JUMPDEST DUP6 JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x28F3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2907 PUSH2 0x5FF6 JUMP JUMPDEST PUSH2 0x290F PUSH2 0x2FC8 JUMP JUMPDEST SWAP1 POP PUSH2 0x293E DUP3 DUP3 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x2922 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x2934 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x356B JUMP JUMPDEST SWAP5 POP PUSH2 0x2948 PUSH2 0x5FF6 JUMP JUMPDEST PUSH2 0x2952 DUP3 DUP8 PUSH2 0x3B2B JUMP JUMPDEST SWAP1 POP DUP7 PUSH2 0x2970 JUMPI DUP1 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x2966 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x2983 JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x297D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD JUMPDEST SWAP5 POP DUP7 PUSH2 0x29A1 JUMPI DUP1 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x2997 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x29B4 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x29AE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD JUMPDEST SWAP4 POP POP POP POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29D8 PUSH1 0x0 DUP4 PUSH2 0x3B9F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29F5 PUSH1 0x16 DUP4 PUSH2 0x3B9F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A12 PUSH1 0x2C DUP4 PUSH2 0x3B0C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A2F PUSH1 0x4B DUP4 PUSH2 0x3BD1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A4C PUSH1 0x55 DUP4 PUSH2 0x3BE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A69 PUSH1 0x56 DUP4 PUSH2 0x3BFC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A7D DUP2 DUP4 EQ PUSH1 0x67 PUSH2 0x2308 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH2 0x2A8E PUSH2 0x5FF6 JUMP JUMPDEST PUSH2 0x2A96 PUSH2 0x2FC8 JUMP JUMPDEST SWAP1 POP PUSH2 0x2AA0 PUSH2 0x227D JUMP JUMPDEST ISZERO PUSH2 0x2B7D JUMPI PUSH1 0x0 PUSH2 0x2AD4 DUP10 DUP4 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x2AB8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x2ACA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x356B JUMP JUMPDEST SWAP1 POP PUSH2 0x2ADE PUSH2 0x5FF6 JUMP JUMPDEST PUSH2 0x2AE8 DUP4 DUP4 PUSH2 0x3B2B JUMP JUMPDEST SWAP1 POP PUSH2 0x2B41 DUP10 DUP12 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2AFB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP13 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2B10 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x2B25 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP6 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x2B37 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x32A4 JUMP JUMPDEST PUSH2 0x2B4A DUP3 PUSH2 0x3C17 JUMP JUMPDEST PUSH2 0x2B54 DUP11 DUP9 PUSH2 0x3C44 JUMP JUMPDEST DUP1 SWAP7 POP DUP2 SWAP8 POP POP POP PUSH2 0x2B70 DUP3 DUP8 PUSH2 0x2B69 PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C9F JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x2BB7 JUMP JUMPDEST PUSH2 0x2B87 DUP9 DUP7 PUSH2 0x3C44 JUMP JUMPDEST DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA DUP2 SWAP1 SSTORE POP JUMPDEST DUP4 DUP4 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x2BD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2C00 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP8 POP SWAP8 POP SWAP8 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2C3C DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2C25 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2C37 PUSH1 0x1 PUSH2 0x27F8 JUMP JUMPDEST PUSH2 0x3D33 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2C49 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2C7C DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2C65 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2C77 PUSH1 0x0 PUSH2 0x27F8 JUMP JUMPDEST PUSH2 0x3D33 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2C89 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2DC3 JUMPI PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD PUSH2 0x2CF5 SWAP3 SWAP2 SWAP1 PUSH2 0x71A5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2D32 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2D37 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2D46 JUMPI INVALID JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MLOAD AND PUSH1 0x0 PUSH32 0x43ADBAFB00000000000000000000000000000000000000000000000000000000 DUP3 EQ EQ ISZERO PUSH2 0x2DA6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 PUSH1 0x4 PUSH1 0x0 RETURNDATACOPY PUSH1 0x40 PUSH1 0x20 MSTORE PUSH1 0x24 RETURNDATASIZE SUB PUSH1 0x24 PUSH1 0x40 RETURNDATACOPY PUSH1 0x1C RETURNDATASIZE ADD PUSH1 0x0 RETURN JUMPDEST PUSH2 0x2DCC DUP7 PUSH2 0x3013 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x2DE3 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2DF5 DUP2 DUP5 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD MUL PUSH1 0x20 DUP3 SUB DUP4 DUP2 MSTORE PUSH4 0x43ADBAFB PUSH1 0x20 DUP3 SUB MSTORE PUSH1 0x4 DUP2 SUB SWAP1 POP PUSH1 0x44 DUP3 ADD DUP2 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2E49 DUP9 PUSH2 0x3D56 JUMP JUMPDEST SWAP7 POP PUSH2 0x2E54 DUP9 PUSH2 0x3D73 JUMP JUMPDEST SWAP6 POP PUSH2 0x2E5F DUP9 PUSH2 0x3D90 JUMP JUMPDEST SWAP5 POP PUSH2 0x2E6A DUP9 PUSH2 0x3DAD JUMP JUMPDEST SWAP4 POP PUSH2 0x2E75 DUP9 PUSH2 0x3DCA JUMP JUMPDEST SWAP3 POP PUSH2 0x2E80 DUP9 PUSH2 0x3DE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E8B DUP9 PUSH2 0x26A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP1 SWAP3 SWAP5 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 MUL SWAP1 POP PUSH2 0x2EC1 PUSH1 0x0 DUP6 EQ DUP1 PUSH2 0x2EBA JUMPI POP DUP4 DUP6 DUP4 DUP2 PUSH2 0x2EB7 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH1 0x3 PUSH2 0x2308 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EDC PUSH1 0x0 DUP4 EQ ISZERO PUSH1 0x4 PUSH2 0x2308 JUMP JUMPDEST PUSH1 0x0 DUP4 EQ ISZERO PUSH2 0x2EEE JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2F29 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP5 MUL SWAP1 POP PUSH2 0x2F1B PUSH8 0xDE0B6B3A7640000 DUP6 DUP4 DUP2 PUSH2 0x2F12 JUMPI INVALID JUMPDEST DIV EQ PUSH1 0x5 PUSH2 0x2308 JUMP JUMPDEST DUP3 DUP2 DUP2 PUSH2 0x2F24 JUMPI INVALID JUMPDEST DIV SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0x34171A85 PUSH1 0x8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F6F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x759B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2F9B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2FBF SWAP2 SWAP1 PUSH2 0x6BFB JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2FD0 PUSH2 0x5FF6 JUMP JUMPDEST PUSH2 0x2FDA PUSH1 0x1 PUSH2 0x3E04 JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x2FE7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2FFA PUSH1 0x0 PUSH2 0x3E04 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x3007 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP SWAP1 JUMP JUMPDEST PUSH2 0x303A DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x3023 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3035 PUSH1 0x1 PUSH2 0x27F8 JUMP JUMPDEST PUSH2 0x2E98 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x3047 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x307A DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x3063 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3075 PUSH1 0x0 PUSH2 0x27F8 JUMP JUMPDEST PUSH2 0x2E98 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x3087 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x30A0 DUP3 DUP3 PUSH2 0x3E5A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH2 0x30B1 PUSH2 0x5FF6 JUMP JUMPDEST PUSH2 0x30B9 PUSH2 0x2FC8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x30EA DUP10 DUP4 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x30CE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x30E0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x356B JUMP JUMPDEST SWAP1 POP PUSH2 0x30F4 PUSH2 0x5FF6 JUMP JUMPDEST PUSH2 0x30FE DUP4 DUP4 PUSH2 0x3B2B JUMP JUMPDEST SWAP1 POP PUSH2 0x3157 DUP10 DUP12 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x3111 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP13 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x3126 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x313B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP6 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x314D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x32A4 JUMP JUMPDEST PUSH2 0x3160 DUP3 PUSH2 0x3C17 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x316E DUP13 DUP11 PUSH2 0x3FBE JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x31A5 JUMPI PUSH2 0x31A4 DUP3 PUSH2 0x3197 DUP16 PUSH2 0x11C0 JUMP JUMPDEST PUSH2 0x319F PUSH2 0xA5D JUMP JUMPDEST PUSH2 0x4018 JUMP JUMPDEST JUMPDEST PUSH2 0x31B9 DUP5 DUP4 PUSH2 0x31B2 PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x1 PUSH2 0x3C9F JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x31D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3208 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP8 POP SWAP8 POP SWAP8 POP POP POP POP POP POP SWAP8 POP SWAP8 POP SWAP8 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3248 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x3231 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3243 PUSH1 0x1 PUSH2 0x27F8 JUMP JUMPDEST PUSH2 0x4228 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x3255 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x3288 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x3271 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3283 PUSH1 0x0 PUSH2 0x27F8 JUMP JUMPDEST PUSH2 0x4228 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x3295 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD SWAP1 POP PUSH2 0x32B4 DUP2 PUSH2 0x2A36 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x32BF JUMPI POP DUP6 NUMBER GT JUMPDEST ISZERO PUSH2 0x335F JUMPI PUSH1 0x0 PUSH2 0x32D2 DUP7 DUP6 DUP8 DUP7 PUSH2 0x4264 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x32EB DUP8 DUP7 DUP9 DUP8 PUSH2 0x32E6 DUP9 PUSH2 0x29DF JUMP JUMPDEST PUSH2 0x4289 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x32F8 DUP5 PUSH2 0x2A19 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3305 DUP6 PUSH2 0x29FC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x331E DUP3 DUP5 DUP8 DUP8 PUSH2 0x3319 DUP12 PUSH2 0x29C2 JUMP JUMPDEST PUSH2 0x42E1 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 EQ PUSH2 0x3359 JUMPI PUSH2 0x333A DUP2 DUP8 PUSH2 0x434F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP PUSH2 0x334F TIMESTAMP DUP8 PUSH2 0x436F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP DUP6 PUSH1 0x9 DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 MUL SWAP1 POP PUSH2 0x3390 PUSH1 0x0 DUP6 EQ DUP1 PUSH2 0x3389 JUMPI POP DUP4 DUP6 DUP4 DUP2 PUSH2 0x3386 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH1 0x3 PUSH2 0x2308 JUMP JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x33A3 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x33BF JUMP JUMPDEST PUSH1 0x1 PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 DUP4 SUB DUP2 PUSH2 0x33B9 JUMPI INVALID JUMPDEST DIV ADD SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33D5 DUP4 DUP4 GT ISZERO PUSH1 0x1 PUSH2 0x2308 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33F9 DUP6 DUP6 DUP9 PUSH1 0x60 ADD MLOAD DUP7 DUP7 PUSH2 0x438F JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3410 DUP4 DUP4 PUSH2 0x3D33 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x342B DUP6 DUP6 DUP9 PUSH1 0x60 ADD MLOAD DUP7 DUP7 PUSH2 0x449D JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3442 DUP4 DUP4 PUSH2 0x4228 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 LT PUSH2 0x3462 JUMPI PUSH1 0x0 PUSH2 0x346E JUMP JUMPDEST DUP2 PUSH8 0xDE0B6B3A7640000 SUB JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3486 PUSH1 0x0 DUP4 EQ ISZERO PUSH1 0x4 PUSH2 0x2308 JUMP JUMPDEST PUSH1 0x0 DUP4 EQ ISZERO PUSH2 0x3498 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x34D9 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP5 MUL SWAP1 POP PUSH2 0x34C5 PUSH8 0xDE0B6B3A7640000 DUP6 DUP4 DUP2 PUSH2 0x34BC JUMPI INVALID JUMPDEST DIV EQ PUSH1 0x5 PUSH2 0x2308 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x1 DUP4 SUB DUP2 PUSH2 0x34D3 JUMPI INVALID JUMPDEST DIV ADD SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34E9 PUSH2 0x15B6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAAABADC5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x352E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3542 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3566 SWAP2 SWAP1 PUSH2 0x6A8B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x357E DUP9 DUP9 DUP9 PUSH2 0x45AB JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH2 0x3592 DUP5 DUP5 DUP5 DUP5 PUSH2 0x4800 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35A9 PUSH2 0x26BD JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x35BB SWAP3 SWAP2 SWAP1 PUSH2 0x71BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x35E7 DUP5 PUSH2 0x48B6 JUMP JUMPDEST SWAP1 POP PUSH2 0x360D PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x35F9 JUMPI INVALID JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3605 JUMPI INVALID JUMPDEST EQ PUSH1 0xCE PUSH2 0x2308 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3618 DUP6 PUSH2 0x48D3 JUMP JUMPDEST SWAP1 POP PUSH2 0x3626 DUP2 MLOAD PUSH1 0x2 PUSH2 0x2A70 JUMP JUMPDEST PUSH2 0x362F DUP2 PUSH2 0x3013 JUMP JUMPDEST PUSH2 0x3637 PUSH2 0x5FF6 JUMP JUMPDEST PUSH2 0x363F PUSH2 0x2FC8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3670 DUP4 DUP4 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x3654 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x3666 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x356B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x367F DUP3 PUSH1 0x2 PUSH2 0x2E98 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0xA DUP2 SWAP1 SSTORE POP DUP1 DUP5 SWAP7 POP SWAP7 POP POP POP POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x36A6 DUP3 DUP3 PUSH2 0x48F4 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x3751 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3780 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH2 0x378D PUSH1 0x1 PUSH2 0x4A18 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x379A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x37B0 PUSH1 0x0 PUSH2 0x4A18 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x37BD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD LT ISZERO PUSH2 0x37DF JUMPI PUSH2 0x386B JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x37EE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x3868 JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3816 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x3859 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH1 0x65 PUSH2 0x2308 JUMP JUMPDEST DUP1 SWAP3 POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x37FF JUMP JUMPDEST POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xBA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1B PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x38A3 PUSH2 0x158E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x38CC JUMPI POP PUSH2 0x38CB DUP4 PUSH2 0x4A6E JUMP JUMPDEST JUMPDEST ISZERO PUSH2 0x390E JUMPI PUSH2 0x38D9 PUSH2 0x158E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH2 0x39A5 JUMP JUMPDEST PUSH2 0x3916 PUSH2 0x34DF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9BE2A884 DUP5 DUP5 ADDRESS PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3952 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7313 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x396A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x397E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x39A2 SWAP2 SWAP1 PUSH2 0x696B JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x30 PUSH1 0xA DUP3 MOD ADD PUSH1 0xA DUP3 DIV SWAP2 POP PUSH1 0x30 PUSH1 0xA DUP4 MOD ADD PUSH1 0xA DUP4 DIV SWAP3 POP PUSH1 0x30 PUSH1 0xA DUP5 MOD ADD DUP1 PUSH1 0x10 SHL DUP3 PUSH1 0x8 SHL DUP5 ADD ADD PUSH7 0x42414C23000000 ADD PUSH1 0xC8 SHL PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE DUP1 PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A2F DUP5 DUP5 GT ISZERO DUP4 PUSH2 0x2308 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3A4D DUP4 PUSH2 0x4AA2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 SGT PUSH2 0x3A66 JUMPI PUSH6 0x2D79883D2000 DUP3 SUB PUSH2 0x3A70 JUMP JUMPDEST PUSH6 0x2D79883D2000 DUP3 ADD JUMPDEST SWAP1 POP PUSH6 0x5AF3107A4000 DUP2 DUP2 PUSH2 0x3A81 JUMPI INVALID JUMPDEST SDIV SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AA3 DUP3 PUSH1 0x0 DUP6 PUSH2 0x4B1B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AC3 DUP3 PUSH1 0x16 DUP6 PUSH2 0x4B1B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 SWAP1 SHL PUSH1 0x0 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH7 0x1FFFFFFFFFFFFF DUP5 AND SWAP1 SHL PUSH1 0x0 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH3 0x3FFFFF DUP5 AND SWAP1 SHL PUSH1 0x0 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x7FFFFFFF DUP3 DUP5 SWAP1 SHR PUSH1 0x0 SHR AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CHAINID SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3B33 PUSH2 0x5FF6 JUMP JUMPDEST PUSH2 0x3B50 PUSH1 0x1 DUP5 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x3B45 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH2 0x4B48 JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x3B5D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x3B83 PUSH1 0x0 DUP5 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x3B78 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH2 0x4B48 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x3B90 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x3FFFFF DUP4 DUP6 SWAP1 SHR PUSH1 0x0 SHR AND SWAP1 POP PUSH3 0x1FFFFF DUP2 SGT PUSH2 0x3BC0 JUMPI DUP1 PUSH2 0x3BC8 JUMP JUMPDEST PUSH3 0x3FFFFF NOT DUP2 OR JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FF DUP3 DUP5 SWAP1 SHR PUSH1 0x0 SHR AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 DUP4 DUP6 SWAP1 SHR PUSH1 0x0 SHR AND EQ SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 DUP5 SWAP1 SHR PUSH1 0x0 SHR AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x3C29 PUSH1 0xA SLOAD DUP7 PUSH2 0x4B72 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH2 0x3C3D DUP5 DUP5 DUP5 DUP5 PUSH2 0x4BE4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x3C53 DUP5 PUSH2 0x4C12 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3C62 JUMPI INVALID JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3C6E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x3C8B JUMPI PUSH2 0x3C7E DUP6 DUP6 PUSH2 0x4C2F JUMP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP5 POP POP POP PUSH2 0x3C97 JUMP JUMPDEST PUSH2 0x3C96 PUSH2 0x150 PUSH2 0x39AB JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO PUSH2 0x3CEB JUMPI PUSH1 0x0 PUSH2 0x3CCE DUP5 PUSH2 0x3CC0 DUP8 DUP10 PUSH2 0x3367 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3475 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x3CE3 DUP2 DUP8 PUSH2 0x4C65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3D2B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D12 DUP5 PUSH2 0x3D04 DUP8 DUP10 PUSH2 0x4C85 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2ECB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x3D27 DUP2 DUP8 PUSH2 0x33C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D44 PUSH1 0x0 DUP4 EQ ISZERO PUSH1 0x4 PUSH2 0x2308 JUMP JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x3D4D JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D6C PUSH1 0xEA DUP4 PUSH2 0x3B9F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D89 PUSH1 0xB5 DUP4 PUSH2 0x4CC9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DA6 PUSH1 0x9F DUP4 PUSH2 0x3B9F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DC3 PUSH1 0x6A DUP4 PUSH2 0x4CC9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DE0 PUSH1 0x54 DUP4 PUSH2 0x3B9F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DFD PUSH1 0x1F DUP4 PUSH2 0x4CC9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x3E31 JUMPI PUSH32 0x0 PUSH2 0x3E53 JUMP JUMPDEST PUSH32 0x0 JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E96 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x19B PUSH2 0x2308 JUMP JUMPDEST PUSH2 0x3EA2 DUP3 PUSH1 0x0 DUP4 PUSH2 0x3A1B JUMP JUMPDEST PUSH2 0x3EF7 DUP2 PUSH2 0x1A1 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3A20 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x3F4E DUP2 PUSH1 0x2 SLOAD PUSH2 0x4D07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x3FB2 SWAP2 SWAP1 PUSH2 0x7674 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x3FCD DUP5 PUSH2 0x48B6 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x3FDB JUMPI INVALID JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3FE7 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x4004 JUMPI PUSH2 0x3FF7 DUP6 DUP6 PUSH2 0x4D1D JUMP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP5 POP POP POP PUSH2 0x4010 JUMP JUMPDEST PUSH2 0x400F PUSH2 0x136 PUSH2 0x39AB JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x4020 PUSH2 0x5F8B JUMP JUMPDEST PUSH1 0xB PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4104 DUP5 DUP7 PUSH2 0x4C65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6F7665722061646472657373206C697175696469747920636170000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x417D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4174 SWAP2 SWAP1 PUSH2 0x7617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 PUSH1 0x40 ADD MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x41A8 DUP4 DUP7 PUSH2 0x4C65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6F76657220676C6F62616C206C69717569646974792063617000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x4221 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4218 SWAP2 SWAP1 PUSH2 0x7617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4239 PUSH1 0x0 DUP4 EQ ISZERO PUSH1 0x4 PUSH2 0x2308 JUMP JUMPDEST PUSH1 0x0 DUP4 EQ ISZERO PUSH2 0x424B JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x425E JUMP JUMPDEST DUP2 PUSH1 0x1 DUP5 SUB DUP2 PUSH2 0x4257 JUMPI INVALID JUMPDEST DIV PUSH1 0x1 ADD SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4273 DUP7 DUP7 DUP7 DUP7 PUSH2 0x4D53 JUMP JUMPDEST SWAP1 POP PUSH2 0x427E DUP2 PUSH2 0x3A41 JUMP JUMPDEST SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4298 DUP8 DUP8 DUP8 DUP8 PUSH2 0x4D53 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x42C1 PUSH2 0x42B2 DUP4 DUP9 PUSH2 0x3367 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP10 PUSH2 0x4C65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x42CE DUP3 PUSH2 0x3A41 JUMP JUMPDEST SWAP1 POP DUP5 DUP2 SUB SWAP4 POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4305 DUP6 DUP6 DUP6 TIMESTAMP PUSH2 0x42F4 DUP12 PUSH2 0x2E18 JUMP JUMPDEST PUSH2 0x4DC7 SWAP1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x78 DUP9 TIMESTAMP SUB LT ISZERO SWAP1 POP DUP1 PUSH2 0x431D JUMPI DUP7 PUSH2 0x4327 JUMP JUMPDEST PUSH2 0x4326 DUP8 PUSH2 0x4E28 JUMP JUMPDEST JUMPDEST SWAP7 POP DUP2 PUSH1 0x8 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP7 SWAP3 POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4367 DUP3 PUSH1 0x4B DUP6 PUSH2 0x4E3C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4387 DUP3 PUSH1 0x2C DUP6 PUSH2 0x4E63 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43BA PUSH2 0x43AF PUSH8 0x429D069189E0000 DUP9 PUSH2 0x4C85 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 GT ISZERO PUSH2 0x130 PUSH2 0x2308 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43EC PUSH2 0x43DD PUSH1 0x2 PUSH8 0xDE0B6B3A7640000 ADD DUP7 PUSH2 0x3367 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP9 PUSH2 0x4C65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4420 PUSH2 0x4411 PUSH1 0x1 PUSH8 0xDE0B6B3A7640000 SUB DUP7 PUSH2 0x4C85 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP9 PUSH2 0x4C65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x4459 PUSH2 0x4438 DUP8 DUP5 PUSH2 0x4C65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x444B DUP9 DUP5 PUSH2 0x4C85 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2ECB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x446B DUP6 DUP3 LT PUSH2 0x165 PUSH2 0x2308 JUMP JUMPDEST PUSH2 0x4494 PUSH2 0x4489 PUSH8 0x429D069189E0000 DUP8 PUSH2 0x4C85 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x131 PUSH2 0x2308 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44AD DUP6 DUP6 LT PUSH2 0x165 PUSH2 0x2308 JUMP JUMPDEST PUSH2 0x44D6 PUSH2 0x44CB PUSH8 0x429D069189E0000 DUP8 PUSH2 0x4C85 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 GT ISZERO PUSH2 0x131 PUSH2 0x2308 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4508 PUSH2 0x44F9 PUSH1 0x2 PUSH8 0xDE0B6B3A7640000 ADD DUP7 PUSH2 0x3367 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP9 PUSH2 0x4C65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x453C PUSH2 0x452D PUSH1 0x1 PUSH8 0xDE0B6B3A7640000 SUB DUP7 PUSH2 0x4C85 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP9 PUSH2 0x4C65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x4575 PUSH2 0x4554 DUP8 DUP4 PUSH2 0x33C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4567 DUP9 DUP6 PUSH2 0x3367 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3475 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x45A2 PUSH2 0x4597 PUSH8 0x429D069189E0000 DUP9 PUSH2 0x4C85 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x130 PUSH2 0x2308 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x45DE PUSH2 0x45C7 DUP7 DUP9 PUSH2 0x2ECB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x33C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP PUSH1 0x0 PUSH2 0x4609 DUP7 DUP10 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x45F3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2ECB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4634 DUP9 DUP11 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x461E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x4C85 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x4649 DUP2 DUP4 PUSH2 0x4C65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP PUSH2 0x4686 DUP10 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x465B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP11 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x4670 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x4C85 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x46E9 DUP7 PUSH2 0x46DB DUP9 PUSH2 0x46CD DUP12 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x46A2 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP13 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x46B7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x4C85 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4C85 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4C85 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x0 PUSH2 0x4769 DUP7 PUSH2 0x475B DUP10 PUSH2 0x474D PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 MUL PUSH2 0x473F DUP15 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x4714 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP16 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x4729 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x4C85 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4C85 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4C85 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2ECB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x47CC PUSH2 0x4783 DUP9 DUP10 PUSH2 0x3367 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x47BE DUP12 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x4793 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP13 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x47A8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x4C85 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2ECB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x47F3 DUP2 PUSH2 0x47E5 DUP5 DUP8 PUSH2 0x4C65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4C65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4821 PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 MUL DUP8 PUSH2 0x3367 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4855 DUP8 PUSH2 0x4847 PUSH8 0xDE0B6B3A7640000 PUSH1 0x4 MUL DUP8 PUSH2 0x4C85 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4C85 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x486C DUP3 DUP8 PUSH2 0x4C65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x487B DUP3 PUSH1 0x5 PUSH2 0x4E8C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4892 DUP3 DUP11 PUSH2 0x4C65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x48A7 DUP6 DUP3 PUSH2 0x2ECB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP POP POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x48CC SWAP2 SWAP1 PUSH2 0x6B19 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x48E9 SWAP2 SWAP1 PUSH2 0x6B42 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4900 PUSH1 0x0 DUP4 DUP4 PUSH2 0x3A1B JUMP JUMPDEST PUSH2 0x4915 DUP2 PUSH1 0x2 SLOAD PUSH2 0x27D8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x496C DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x27D8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x4A0C SWAP2 SWAP1 PUSH2 0x7674 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x4A45 JUMPI PUSH32 0x0 PUSH2 0x4A67 JUMP JUMPDEST PUSH32 0x0 JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A80 PUSH4 0x38E9922E PUSH1 0xE0 SHL PUSH2 0x150B JUMP JUMPDEST DUP3 EQ DUP1 PUSH2 0x4A9B JUMPI POP PUSH2 0x4A98 PUSH4 0x50DD6ED9 PUSH1 0xE0 SHL PUSH2 0x150B JUMP JUMPDEST DUP3 EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AB2 PUSH1 0x0 DUP4 SGT PUSH1 0x64 PUSH2 0x2308 JUMP JUMPDEST DUP2 PUSH8 0x16345785D8A0000 PUSH8 0xDE0B6B3A7640000 SUB SLT DUP1 ISZERO PUSH2 0x4AE4 JUMPI POP PUSH8 0x16345785D8A0000 PUSH8 0xDE0B6B3A7640000 ADD DUP3 SLT JUMPDEST ISZERO PUSH2 0x4B0A JUMPI PUSH8 0xDE0B6B3A7640000 PUSH2 0x4AFB DUP4 PUSH2 0x5054 JUMP JUMPDEST DUP2 PUSH2 0x4B02 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH2 0x4B16 JUMP JUMPDEST PUSH2 0x4B13 DUP3 PUSH2 0x5201 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH3 0x3FFFFF SWAP1 SHL NOT DUP6 PUSH1 0x0 SHR AND PUSH1 0x0 SHL SWAP1 POP DUP3 PUSH3 0x3FFFFF DUP6 AND SWAP1 SHL PUSH1 0x0 SHL DUP2 OR SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x4B5E JUMPI PUSH2 0x4B59 DUP3 DUP5 PUSH2 0x5698 JUMP JUMPDEST PUSH2 0x4B69 JUMP JUMPDEST PUSH2 0x4B68 DUP3 DUP5 PUSH2 0x56B5 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x4B86 PUSH2 0x56D2 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH1 0x0 DUP5 EQ ISZERO PUSH2 0x4BAD JUMPI PUSH1 0x0 DUP1 DUP4 DUP4 SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP POP POP POP POP PUSH2 0x4BDB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4BC4 DUP13 DUP13 PUSH2 0x4BBD PUSH2 0xA5D JUMP JUMPDEST DUP10 DUP10 PUSH2 0x5A12 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 DUP2 DUP6 DUP6 SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP POP POP POP POP POP POP JUMPDEST SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x4BF8 JUMPI PUSH2 0x4BF7 DUP3 DUP6 PUSH2 0x369C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x4C0C JUMPI PUSH2 0x4C0B DUP2 DUP5 PUSH2 0x369C JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x4C28 SWAP2 SWAP1 PUSH2 0x6AB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x4C3E DUP5 PUSH2 0x5AFF JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x4C54 DUP7 DUP4 PUSH2 0x4C4F PUSH2 0xA5D JUMP JUMPDEST PUSH2 0x5B20 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SWAP4 POP SWAP4 POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP PUSH2 0x4C7B DUP5 DUP3 LT ISZERO PUSH1 0x0 PUSH2 0x2308 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 MUL SWAP1 POP PUSH2 0x4CAE PUSH1 0x0 DUP6 EQ DUP1 PUSH2 0x4CA7 JUMPI POP DUP4 DUP6 DUP4 DUP2 PUSH2 0x4CA4 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH1 0x3 PUSH2 0x2308 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 DUP2 PUSH2 0x4CBF JUMPI INVALID JUMPDEST DIV SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH7 0x1FFFFFFFFFFFFF DUP4 DUP6 SWAP1 SHR PUSH1 0x0 SHR AND SWAP1 POP PUSH7 0xFFFFFFFFFFFFF DUP2 SGT PUSH2 0x4CF2 JUMPI DUP1 PUSH2 0x4CFE JUMP JUMPDEST PUSH7 0x1FFFFFFFFFFFFF NOT DUP2 OR JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D15 DUP4 DUP4 PUSH1 0x1 PUSH2 0x3A20 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x4D2C DUP5 PUSH2 0x5BDD JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x4D42 DUP7 DUP4 PUSH2 0x4D3D PUSH2 0xA5D JUMP JUMPDEST PUSH2 0x5BFE JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SWAP4 POP SWAP4 POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH8 0x6F05B59D3B20000 SWAP1 POP PUSH2 0x4DBC PUSH2 0x4D89 DUP3 PUSH2 0x4D7B DUP7 DUP9 PUSH2 0x4C65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3475 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4DAE DUP4 PUSH2 0x4DA0 DUP10 DUP12 PUSH2 0x4C65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3475 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3475 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4DD3 DUP8 PUSH2 0x26A0 JUMP JUMPDEST DUP4 SUB SWAP1 POP PUSH1 0x0 DUP2 DUP8 MUL PUSH2 0x4DE5 DUP10 PUSH2 0x3D73 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP3 DUP8 MUL PUSH2 0x4DF6 DUP11 PUSH2 0x3DAD JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP4 DUP8 MUL PUSH2 0x4E07 DUP12 PUSH2 0x3DE7 JUMP JUMPDEST ADD SWAP1 POP PUSH2 0x4E19 DUP10 DUP5 DUP11 DUP6 DUP12 DUP7 DUP13 PUSH2 0x25FF JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E35 DUP3 PUSH1 0x1 PUSH2 0x5CBB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH2 0x3FF SWAP1 SHL NOT DUP6 PUSH1 0x0 SHR AND PUSH1 0x0 SHL SWAP1 POP DUP3 DUP5 SWAP1 SHL PUSH1 0x0 SHL DUP2 OR SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH4 0x7FFFFFFF SWAP1 SHL NOT DUP6 PUSH1 0x0 SHR AND PUSH1 0x0 SHL SWAP1 POP DUP3 DUP5 SWAP1 SHL PUSH1 0x0 SHL DUP2 OR SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x4E9F JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x504E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EAA DUP5 PUSH2 0x5CD3 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x4EC1 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x4ECB JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x4EE3 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x4EED JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x4F05 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x4F0F JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x4F27 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x4F31 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x4F49 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x4F53 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x4F6B JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x4F75 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x4F8D JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x4F97 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH2 0x4FAF DUP3 DUP4 PUSH2 0x4C85 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x4FD6 PUSH2 0x4FC7 DUP6 DUP5 PUSH2 0x3367 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP7 PUSH2 0x4C65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x5009 JUMPI POP PUSH2 0x5005 PUSH2 0x4FF6 DUP6 DUP5 PUSH2 0x3367 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP7 PUSH2 0x33C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 LT ISZERO JUMPDEST PUSH2 0x5048 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x503F SWAP1 PUSH2 0x7639 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 MUL SWAP2 POP PUSH1 0x0 PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP4 ADD PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP1 DUP6 SUB MUL DUP2 PUSH2 0x5092 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x0 PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP3 DUP4 MUL DUP2 PUSH2 0x50B1 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP4 DUP4 MUL DUP2 PUSH2 0x50D8 JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH1 0x3 DUP3 DUP2 PUSH2 0x50E5 JUMPI INVALID JUMPDEST SDIV DUP2 ADD SWAP1 POP PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP4 DUP4 MUL DUP2 PUSH2 0x5104 JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH1 0x5 DUP3 DUP2 PUSH2 0x5111 JUMPI INVALID JUMPDEST SDIV DUP2 ADD SWAP1 POP PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP4 DUP4 MUL DUP2 PUSH2 0x5130 JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH1 0x7 DUP3 DUP2 PUSH2 0x513D JUMPI INVALID JUMPDEST SDIV DUP2 ADD SWAP1 POP PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP4 DUP4 MUL DUP2 PUSH2 0x515C JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH1 0x9 DUP3 DUP2 PUSH2 0x5169 JUMPI INVALID JUMPDEST SDIV DUP2 ADD SWAP1 POP PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP4 DUP4 MUL DUP2 PUSH2 0x5188 JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH1 0xB DUP3 DUP2 PUSH2 0x5195 JUMPI INVALID JUMPDEST SDIV DUP2 ADD SWAP1 POP PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP4 DUP4 MUL DUP2 PUSH2 0x51B4 JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH1 0xD DUP3 DUP2 PUSH2 0x51C1 JUMPI INVALID JUMPDEST SDIV DUP2 ADD SWAP1 POP PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP4 DUP4 MUL DUP2 PUSH2 0x51E0 JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH1 0xF DUP3 DUP2 PUSH2 0x51ED JUMPI INVALID JUMPDEST SDIV DUP2 ADD SWAP1 POP PUSH1 0x2 DUP2 MUL SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 SLT ISZERO PUSH2 0x5239 JUMPI PUSH2 0x522F DUP3 PUSH8 0xDE0B6B3A7640000 DUP1 MUL DUP2 PUSH2 0x5229 JUMPI INVALID JUMPDEST SDIV PUSH2 0x5201 JUMP JUMPDEST PUSH1 0x0 SUB SWAP1 POP PUSH2 0x5693 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH24 0x195E54C5DD42177F53A27172FA9EC630262827000000000 MUL DUP4 SLT PUSH2 0x5297 JUMPI PUSH24 0x195E54C5DD42177F53A27172FA9EC630262827000000000 DUP4 DUP2 PUSH2 0x5285 JUMPI INVALID JUMPDEST SDIV SWAP3 POP PUSH9 0x6F05B59D3B2000000 DUP2 ADD SWAP1 POP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH12 0x1425982CF597CD205CEF7380 MUL DUP4 SLT PUSH2 0x52DB JUMPI PUSH12 0x1425982CF597CD205CEF7380 DUP4 DUP2 PUSH2 0x52C9 JUMPI INVALID JUMPDEST SDIV SWAP3 POP PUSH9 0x3782DACE9D9000000 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP2 MUL SWAP1 POP PUSH1 0x64 DUP4 MUL SWAP3 POP PUSH15 0x1855144814A7FF805980FF0084000 DUP4 SLT PUSH2 0x5332 JUMPI PUSH15 0x1855144814A7FF805980FF0084000 PUSH9 0x56BC75E2D63100000 DUP5 MUL DUP2 PUSH2 0x5320 JUMPI INVALID JUMPDEST SDIV SWAP3 POP PUSH9 0xAD78EBC5AC62000000 DUP2 ADD SWAP1 POP JUMPDEST PUSH12 0x2DF0AB5A80A22C61AB5A700 DUP4 SLT PUSH2 0x5377 JUMPI PUSH12 0x2DF0AB5A80A22C61AB5A700 PUSH9 0x56BC75E2D63100000 DUP5 MUL DUP2 PUSH2 0x5365 JUMPI INVALID JUMPDEST SDIV SWAP3 POP PUSH9 0x56BC75E2D631000000 DUP2 ADD SWAP1 POP JUMPDEST PUSH10 0x3F1FCE3DA636EA5CF850 DUP4 SLT PUSH2 0x53B8 JUMPI PUSH10 0x3F1FCE3DA636EA5CF850 PUSH9 0x56BC75E2D63100000 DUP5 MUL DUP2 PUSH2 0x53A6 JUMPI INVALID JUMPDEST SDIV SWAP3 POP PUSH9 0x2B5E3AF16B18800000 DUP2 ADD SWAP1 POP JUMPDEST PUSH10 0x127FA27722CC06CC5E2 DUP4 SLT PUSH2 0x53F9 JUMPI PUSH10 0x127FA27722CC06CC5E2 PUSH9 0x56BC75E2D63100000 DUP5 MUL DUP2 PUSH2 0x53E7 JUMPI INVALID JUMPDEST SDIV SWAP3 POP PUSH9 0x15AF1D78B58C400000 DUP2 ADD SWAP1 POP JUMPDEST PUSH9 0x280E60114EDB805D03 DUP4 SLT PUSH2 0x5438 JUMPI PUSH9 0x280E60114EDB805D03 PUSH9 0x56BC75E2D63100000 DUP5 MUL DUP2 PUSH2 0x5426 JUMPI INVALID JUMPDEST SDIV SWAP3 POP PUSH9 0xAD78EBC5AC6200000 DUP2 ADD SWAP1 POP JUMPDEST PUSH9 0xEBC5FB41746121110 DUP4 SLT PUSH2 0x5477 JUMPI PUSH9 0xEBC5FB41746121110 PUSH9 0x56BC75E2D63100000 DUP5 MUL DUP2 PUSH2 0x5465 JUMPI INVALID JUMPDEST SDIV SWAP3 POP PUSH9 0x56BC75E2D63100000 DUP2 ADD SWAP1 POP JUMPDEST PUSH9 0x8F00F760A4B2DB55D DUP4 SLT PUSH2 0x54B6 JUMPI PUSH9 0x8F00F760A4B2DB55D PUSH9 0x56BC75E2D63100000 DUP5 MUL DUP2 PUSH2 0x54A4 JUMPI INVALID JUMPDEST SDIV SWAP3 POP PUSH9 0x2B5E3AF16B1880000 DUP2 ADD SWAP1 POP JUMPDEST PUSH9 0x6F5F1775788937937 DUP4 SLT PUSH2 0x54F5 JUMPI PUSH9 0x6F5F1775788937937 PUSH9 0x56BC75E2D63100000 DUP5 MUL DUP2 PUSH2 0x54E3 JUMPI INVALID JUMPDEST SDIV SWAP3 POP PUSH9 0x15AF1D78B58C40000 DUP2 ADD SWAP1 POP JUMPDEST PUSH9 0x6248F33704B286603 DUP4 SLT PUSH2 0x5533 JUMPI PUSH9 0x6248F33704B286603 PUSH9 0x56BC75E2D63100000 DUP5 MUL DUP2 PUSH2 0x5522 JUMPI INVALID JUMPDEST SDIV SWAP3 POP PUSH8 0xAD78EBC5AC620000 DUP2 ADD SWAP1 POP JUMPDEST PUSH9 0x5C548670B9510E7AC DUP4 SLT PUSH2 0x5571 JUMPI PUSH9 0x5C548670B9510E7AC PUSH9 0x56BC75E2D63100000 DUP5 MUL DUP2 PUSH2 0x5560 JUMPI INVALID JUMPDEST SDIV SWAP3 POP PUSH8 0x56BC75E2D6310000 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH9 0x56BC75E2D63100000 DUP5 ADD PUSH9 0x56BC75E2D63100000 DUP1 DUP7 SUB MUL DUP2 PUSH2 0x5594 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x0 PUSH9 0x56BC75E2D63100000 DUP3 DUP4 MUL DUP2 PUSH2 0x55AD JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH9 0x56BC75E2D63100000 DUP4 DUP4 MUL DUP2 PUSH2 0x55CE JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH1 0x3 DUP3 DUP2 PUSH2 0x55DB JUMPI INVALID JUMPDEST SDIV DUP2 ADD SWAP1 POP PUSH9 0x56BC75E2D63100000 DUP4 DUP4 MUL DUP2 PUSH2 0x55F4 JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH1 0x5 DUP3 DUP2 PUSH2 0x5601 JUMPI INVALID JUMPDEST SDIV DUP2 ADD SWAP1 POP PUSH9 0x56BC75E2D63100000 DUP4 DUP4 MUL DUP2 PUSH2 0x561A JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH1 0x7 DUP3 DUP2 PUSH2 0x5627 JUMPI INVALID JUMPDEST SDIV DUP2 ADD SWAP1 POP PUSH9 0x56BC75E2D63100000 DUP4 DUP4 MUL DUP2 PUSH2 0x5640 JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH1 0x9 DUP3 DUP2 PUSH2 0x564D JUMPI INVALID JUMPDEST SDIV DUP2 ADD SWAP1 POP PUSH9 0x56BC75E2D63100000 DUP4 DUP4 MUL DUP2 PUSH2 0x5666 JUMPI INVALID JUMPDEST SDIV SWAP2 POP PUSH1 0xB DUP3 DUP2 PUSH2 0x5673 JUMPI INVALID JUMPDEST SDIV DUP2 ADD SWAP1 POP PUSH1 0x2 DUP2 MUL SWAP1 POP PUSH1 0x64 DUP2 DUP7 ADD DUP2 PUSH2 0x568A JUMPI INVALID JUMPDEST SDIV SWAP6 POP POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56AD DUP3 DUP5 PUSH2 0x4C85 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56CA DUP3 DUP5 PUSH2 0x2ECB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBD02D0F5 PUSH32 0x50524F544F434F4C5F535741505F4645455F5045524300000000000000000000 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5753 SWAP2 SWAP1 PUSH2 0x72F8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x576B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x577F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x57A3 SWAP2 SWAP1 PUSH2 0x6CDD JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBD02D0F5 PUSH32 0x50524F544F434F4C5F4645455F4759524F5F504F5254494F4E00000000000000 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x581E SWAP2 SWAP1 PUSH2 0x72F8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5836 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x584A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x586E SWAP2 SWAP1 PUSH2 0x6CDD JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x21F8A721 PUSH32 0x4759524F5F545245415355525900000000000000000000000000000000000000 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58E9 SWAP2 SWAP1 PUSH2 0x72F8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5901 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5915 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5939 SWAP2 SWAP1 PUSH2 0x66B3 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x21F8A721 PUSH32 0x42414C5F54524541535552590000000000000000000000000000000000000000 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59B4 SWAP2 SWAP1 PUSH2 0x72F8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x59CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x59E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5A04 SWAP2 SWAP1 PUSH2 0x66B3 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 DUP7 GT PUSH2 0x5A28 JUMPI PUSH1 0x0 DUP1 SWAP2 POP SWAP2 POP PUSH2 0x5AF5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A61 DUP6 PUSH2 0x5A53 PUSH2 0x5A44 DUP12 DUP12 PUSH2 0x33C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP10 PUSH2 0x4C85 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4C85 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5A8A PUSH2 0x5A7B DUP11 DUP11 PUSH2 0x33C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH2 0x4C85 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5AA1 DUP3 DUP11 PUSH2 0x33C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5AB8 DUP3 DUP6 PUSH2 0x2ECB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5ACF DUP3 DUP10 PUSH2 0x4C85 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5AE6 DUP3 DUP5 PUSH2 0x33C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SWAP8 POP SWAP8 POP POP POP POP POP POP POP JUMPDEST SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x5B15 SWAP2 SWAP1 PUSH2 0x6ADD JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x5B3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5B69 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x5BD5 JUMPI PUSH2 0x5BB0 DUP4 PUSH2 0x5BA2 DUP7 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x5B8C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x4C85 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2ECB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5BBC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x5B6F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x5BF3 SWAP2 SWAP1 PUSH2 0x6B96 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x5C18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5C47 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x5CB3 JUMPI PUSH2 0x5C8E DUP4 PUSH2 0x5C80 DUP7 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x5C6A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3367 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3475 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5C9A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x5C4D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x400 DUP3 DUP5 ADD DUP2 PUSH2 0x5CCA JUMPI INVALID JUMPDEST MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 LT PUSH2 0x5D13 JUMPI PUSH8 0xDE0B6B3A7640000 PUSH2 0x5D07 PUSH8 0xDE0B6B3A7640000 DUP5 DUP2 PUSH2 0x5D01 JUMPI INVALID JUMPDEST DIV PUSH2 0x5ECB JUMP JUMPDEST PUSH1 0x1 SWAP1 SHL MUL SWAP1 POP PUSH2 0x5EC6 JUMP JUMPDEST PUSH1 0xA DUP3 GT PUSH2 0x5D27 JUMPI PUSH4 0xBC7C871C SWAP1 POP PUSH2 0x5EC6 JUMP JUMPDEST PUSH1 0x64 DUP3 GT PUSH2 0x5D3C JUMPI PUSH5 0x2540BE400 SWAP1 POP PUSH2 0x5EC6 JUMP JUMPDEST PUSH2 0x3E8 DUP3 GT PUSH2 0x5D52 JUMPI PUSH5 0x75CDD4719 SWAP1 POP PUSH2 0x5EC6 JUMP JUMPDEST PUSH2 0x2710 DUP3 GT PUSH2 0x5D68 JUMPI PUSH5 0x174876E800 SWAP1 POP PUSH2 0x5EC6 JUMP JUMPDEST PUSH3 0x186A0 DUP3 GT PUSH2 0x5D7F JUMPI PUSH5 0x49A0A4C700 SWAP1 POP PUSH2 0x5EC6 JUMP JUMPDEST PUSH3 0xF4240 DUP3 GT PUSH2 0x5D96 JUMPI PUSH5 0xE8D4A51000 SWAP1 POP PUSH2 0x5EC6 JUMP JUMPDEST PUSH3 0x989680 DUP3 GT PUSH2 0x5DAE JUMPI PUSH6 0x2E0466FC608 SWAP1 POP PUSH2 0x5EC6 JUMP JUMPDEST PUSH4 0x5F5E100 DUP3 GT PUSH2 0x5DC7 JUMPI PUSH6 0x9184E72A000 SWAP1 POP PUSH2 0x5EC6 JUMP JUMPDEST PUSH4 0x3B9ACA00 DUP3 GT PUSH2 0x5DE0 JUMPI PUSH6 0x1CC2C05DBC53 SWAP1 POP PUSH2 0x5EC6 JUMP JUMPDEST PUSH5 0x2540BE400 DUP3 GT PUSH2 0x5DFA JUMPI PUSH6 0x5AF3107A4000 SWAP1 POP PUSH2 0x5EC6 JUMP JUMPDEST PUSH5 0x174876E800 DUP3 GT PUSH2 0x5E15 JUMPI PUSH7 0x11F9B83A95B45 SWAP1 POP PUSH2 0x5EC6 JUMP JUMPDEST PUSH5 0xE8D4A51000 DUP3 GT PUSH2 0x5E30 JUMPI PUSH7 0x38D7EA4C68000 SWAP1 POP PUSH2 0x5EC6 JUMP JUMPDEST PUSH6 0x9184E72A000 DUP3 GT PUSH2 0x5E4C JUMPI PUSH7 0xB3C13249D90BB SWAP1 POP PUSH2 0x5EC6 JUMP JUMPDEST PUSH6 0x5AF3107A4000 DUP3 GT PUSH2 0x5E68 JUMPI PUSH7 0x2386F26FC10000 SWAP1 POP PUSH2 0x5EC6 JUMP JUMPDEST PUSH7 0x38D7EA4C68000 DUP3 GT PUSH2 0x5E85 JUMPI PUSH7 0x7058BF6E27A751 SWAP1 POP PUSH2 0x5EC6 JUMP JUMPDEST PUSH7 0x2386F26FC10000 DUP3 GT PUSH2 0x5EA3 JUMPI PUSH8 0x16345785D8A0000 SWAP1 POP PUSH2 0x5EC6 JUMP JUMPDEST PUSH8 0x16345785D8A0000 DUP3 GT PUSH2 0x5EC2 JUMPI PUSH8 0x463777A4D8C892D SWAP1 POP PUSH2 0x5EC6 JUMP JUMPDEST DUP2 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH17 0x100000000000000000000000000000000 DUP3 LT PUSH2 0x5EF3 JUMPI PUSH1 0x80 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0x5F11 JUMPI PUSH1 0x40 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0x5F2B JUMPI PUSH1 0x20 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0x5F43 JUMPI PUSH1 0x10 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x5F5A JUMPI PUSH1 0x8 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x5F70 JUMPI PUSH1 0x4 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0x5F86 JUMPI PUSH1 0x2 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5FE9 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6027 DUP2 PUSH2 0x7AD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x603C DUP2 PUSH2 0x7AD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6053 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x6066 PUSH2 0x6061 DUP3 PUSH2 0x773E JUMP JUMPDEST PUSH2 0x7711 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0x608B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x60BB JUMPI DUP2 PUSH2 0x60A1 DUP9 DUP3 PUSH2 0x63A3 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x608E JUMP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x60D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x60E9 PUSH2 0x60E4 DUP3 PUSH2 0x7766 JUMP JUMPDEST PUSH2 0x7711 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x40 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0x610E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x613E JUMPI DUP2 PUSH2 0x6124 DUP9 DUP3 PUSH2 0x6481 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x40 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x6111 JUMP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x616C PUSH2 0x6167 DUP3 PUSH2 0x778E JUMP JUMPDEST PUSH2 0x7711 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x60 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0x6191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x61C1 JUMPI DUP2 PUSH2 0x61A7 DUP9 DUP3 PUSH2 0x64CD JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x60 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x6194 JUMP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x61DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x61EF PUSH2 0x61EA DUP3 PUSH2 0x77B6 JUMP JUMPDEST PUSH2 0x7711 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0x6214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6244 JUMPI DUP2 PUSH2 0x622A DUP9 DUP3 PUSH2 0x664B JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x6217 JUMP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x625F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x6272 PUSH2 0x626D DUP3 PUSH2 0x77B6 JUMP JUMPDEST PUSH2 0x7711 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0x6297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x62C7 JUMPI DUP2 PUSH2 0x62AD DUP9 DUP3 PUSH2 0x6660 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x629A JUMP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x62E0 DUP2 PUSH2 0x7AE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x62F5 DUP2 PUSH2 0x7AE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x630A DUP2 PUSH2 0x7AFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x631F DUP2 PUSH2 0x7B15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6349 PUSH2 0x6344 DUP3 PUSH2 0x77DE JUMP JUMPDEST PUSH2 0x7711 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP6 DUP4 DUP4 ADD GT ISZERO PUSH2 0x6365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6370 DUP4 DUP3 DUP5 PUSH2 0x7A5C JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6388 DUP2 PUSH2 0x7B2C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x639D DUP2 PUSH2 0x7B43 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x63B2 DUP2 PUSH2 0x7B43 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x63C7 DUP2 PUSH2 0x7B5A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x63DC DUP2 PUSH2 0x7B6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x63F1 DUP2 PUSH2 0x7B7A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6406 DUP2 PUSH2 0x7B8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x641B DUP2 PUSH2 0x7B9A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x643D PUSH1 0x60 PUSH2 0x7711 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x644D DUP5 DUP3 DUP6 ADD PUSH2 0x62D1 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x6461 DUP5 DUP3 DUP6 ADD PUSH2 0x6621 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x6475 DUP5 DUP3 DUP6 ADD PUSH2 0x6636 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x649D PUSH1 0x40 PUSH2 0x7711 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x64AD DUP5 DUP3 DUP6 ADD PUSH2 0x63F7 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x64C1 DUP5 DUP3 DUP6 ADD PUSH2 0x664B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x64DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64E9 PUSH1 0x60 PUSH2 0x7711 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x64F9 DUP5 DUP3 DUP6 ADD PUSH2 0x63F7 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x650D DUP5 DUP3 DUP6 ADD PUSH2 0x664B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x6521 DUP5 DUP3 DUP6 ADD PUSH2 0x664B JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x654B PUSH2 0x120 PUSH2 0x7711 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x655B DUP5 DUP3 DUP6 ADD PUSH2 0x63E2 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x656F DUP5 DUP3 DUP6 ADD PUSH2 0x638E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x6583 DUP5 DUP3 DUP6 ADD PUSH2 0x638E JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x6597 DUP5 DUP3 DUP6 ADD PUSH2 0x664B JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x65AB DUP5 DUP3 DUP6 ADD PUSH2 0x62FB JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x65BF DUP5 DUP3 DUP6 ADD PUSH2 0x664B JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x65D3 DUP5 DUP3 DUP6 ADD PUSH2 0x6018 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH2 0x65E7 DUP5 DUP3 DUP6 ADD PUSH2 0x6018 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x100 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6608 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6614 DUP5 DUP3 DUP6 ADD PUSH2 0x6325 JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6630 DUP2 PUSH2 0x7BB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6645 DUP2 PUSH2 0x7BC8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x665A DUP2 PUSH2 0x7BDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x666F DUP2 PUSH2 0x7BDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6684 DUP2 PUSH2 0x7BF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x669C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x66AA DUP5 DUP3 DUP6 ADD PUSH2 0x6018 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x66C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x66D3 DUP5 DUP3 DUP6 ADD PUSH2 0x602D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x66EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x66FD DUP6 DUP3 DUP7 ADD PUSH2 0x6018 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x670E DUP6 DUP3 DUP7 ADD PUSH2 0x6018 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x672D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x673B DUP7 DUP3 DUP8 ADD PUSH2 0x6018 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x674C DUP7 DUP3 DUP8 ADD PUSH2 0x6018 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x675D DUP7 DUP3 DUP8 ADD PUSH2 0x664B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x6782 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6790 DUP11 DUP3 DUP12 ADD PUSH2 0x6018 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x67A1 DUP11 DUP3 DUP12 ADD PUSH2 0x6018 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x67B2 DUP11 DUP3 DUP12 ADD PUSH2 0x664B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x67C3 DUP11 DUP3 DUP12 ADD PUSH2 0x664B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x67D4 DUP11 DUP3 DUP12 ADD PUSH2 0x6675 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x67E5 DUP11 DUP3 DUP12 ADD PUSH2 0x62FB JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x67F6 DUP11 DUP3 DUP12 ADD PUSH2 0x62FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6818 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6826 DUP6 DUP3 DUP7 ADD PUSH2 0x6018 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x6837 DUP6 DUP3 DUP7 ADD PUSH2 0x664B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x6856 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x687C DUP7 DUP3 DUP8 ADD PUSH2 0x6042 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6899 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x68A5 DUP7 DUP3 DUP8 ADD PUSH2 0x624E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x68B6 DUP7 DUP3 DUP8 ADD PUSH2 0x6660 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x68D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x68EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x68F8 DUP5 DUP3 DUP6 ADD PUSH2 0x60C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6913 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x692D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6939 DUP5 DUP3 DUP6 ADD PUSH2 0x6148 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6954 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6962 DUP5 DUP3 DUP6 ADD PUSH2 0x62D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x697D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x698B DUP5 DUP3 DUP6 ADD PUSH2 0x62E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x69AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x69BD DUP11 DUP3 DUP12 ADD PUSH2 0x62FB JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x69CE DUP11 DUP3 DUP12 ADD PUSH2 0x6018 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x69DF DUP11 DUP3 DUP12 ADD PUSH2 0x6018 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x69FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6A08 DUP11 DUP3 DUP12 ADD PUSH2 0x61CB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x6A19 DUP11 DUP3 DUP12 ADD PUSH2 0x664B JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x6A2A DUP11 DUP3 DUP12 ADD PUSH2 0x664B JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6A47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6A53 DUP11 DUP3 DUP12 ADD PUSH2 0x6325 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6A74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6A82 DUP5 DUP3 DUP6 ADD PUSH2 0x6310 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6A9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6AAB DUP5 DUP3 DUP6 ADD PUSH2 0x6379 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6AC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6AD4 DUP5 DUP3 DUP6 ADD PUSH2 0x63B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6AF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6AFE DUP6 DUP3 DUP7 ADD PUSH2 0x63B8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x6B0F DUP6 DUP3 DUP7 ADD PUSH2 0x6660 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6B2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6B39 DUP5 DUP3 DUP6 ADD PUSH2 0x63CD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6B55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6B63 DUP6 DUP3 DUP7 ADD PUSH2 0x63CD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6B80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B8C DUP6 DUP3 DUP7 ADD PUSH2 0x624E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6BA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6BB7 DUP6 DUP3 DUP7 ADD PUSH2 0x63CD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x6BC8 DUP6 DUP3 DUP7 ADD PUSH2 0x6660 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6BE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6BF2 DUP5 DUP3 DUP6 ADD PUSH2 0x63F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6C0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6C1B DUP5 DUP3 DUP6 ADD PUSH2 0x640C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6C36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6C44 DUP5 DUP3 DUP6 ADD PUSH2 0x6421 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x6C62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6C7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6C88 DUP7 DUP3 DUP8 ADD PUSH2 0x652D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x6C99 DUP7 DUP3 DUP8 ADD PUSH2 0x664B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x6CAA DUP7 DUP3 DUP8 ADD PUSH2 0x664B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6CC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6CD4 DUP5 DUP3 DUP6 ADD PUSH2 0x664B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6CEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6CFD DUP5 DUP3 DUP6 ADD PUSH2 0x6660 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6D19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6D27 DUP6 DUP3 DUP7 ADD PUSH2 0x664B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x6D38 DUP6 DUP3 DUP7 ADD PUSH2 0x664B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x6D57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6D65 DUP7 DUP3 DUP8 ADD PUSH2 0x664B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x6D76 DUP7 DUP3 DUP8 ADD PUSH2 0x664B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x6D87 DUP7 DUP3 DUP8 ADD PUSH2 0x62D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6D9D DUP4 DUP4 PUSH2 0x6FAE JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DB5 DUP4 DUP4 PUSH2 0x712E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6DCA DUP2 PUSH2 0x78DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DDB DUP3 PUSH2 0x7834 JUMP JUMPDEST PUSH2 0x6DE5 DUP2 DUP6 PUSH2 0x7887 JUMP JUMPDEST SWAP4 POP PUSH2 0x6DF0 DUP4 PUSH2 0x780A JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6E21 JUMPI DUP2 MLOAD PUSH2 0x6E08 DUP9 DUP3 PUSH2 0x6D91 JUMP JUMPDEST SWAP8 POP PUSH2 0x6E13 DUP4 PUSH2 0x7860 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x6DF4 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6E37 DUP2 PUSH2 0x783F JUMP JUMPDEST PUSH2 0x6E41 DUP2 DUP5 PUSH2 0x7898 JUMP JUMPDEST SWAP3 POP PUSH2 0x6E4C DUP3 PUSH2 0x781A JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6E7D JUMPI DUP2 MLOAD PUSH2 0x6E64 DUP8 DUP3 PUSH2 0x6DA9 JUMP JUMPDEST SWAP7 POP PUSH2 0x6E6F DUP4 PUSH2 0x786D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x6E50 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6E90 DUP3 PUSH2 0x784A JUMP JUMPDEST PUSH2 0x6E9A DUP2 DUP6 PUSH2 0x78A3 JUMP JUMPDEST SWAP4 POP PUSH2 0x6EA5 DUP4 PUSH2 0x7824 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6ED6 JUMPI DUP2 MLOAD PUSH2 0x6EBD DUP9 DUP3 PUSH2 0x6DA9 JUMP JUMPDEST SWAP8 POP PUSH2 0x6EC8 DUP4 PUSH2 0x787A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x6EA9 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6EEC DUP2 PUSH2 0x78ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6EFB DUP2 PUSH2 0x78ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6F0A DUP2 PUSH2 0x78F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6F21 PUSH2 0x6F1C DUP3 PUSH2 0x78F9 JUMP JUMPDEST PUSH2 0x7A9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6F38 PUSH2 0x6F33 DUP3 PUSH2 0x7903 JUMP JUMPDEST PUSH2 0x7AA8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F4A DUP4 DUP6 PUSH2 0x78B4 JUMP JUMPDEST SWAP4 POP PUSH2 0x6F57 DUP4 DUP6 DUP5 PUSH2 0x7A5C JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x6F6C DUP2 PUSH2 0x79DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6F7B DUP2 PUSH2 0x7A02 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6F8A DUP2 PUSH2 0x7A26 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6F99 DUP2 PUSH2 0x7A4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6FA8 DUP2 PUSH2 0x7A4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6FB7 DUP2 PUSH2 0x7966 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6FC6 DUP2 PUSH2 0x7966 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST DUP1 DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FDE DUP3 PUSH2 0x7855 JUMP JUMPDEST PUSH2 0x6FE8 DUP2 DUP6 PUSH2 0x78BF JUMP JUMPDEST SWAP4 POP PUSH2 0x6FF8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x7A6B JUMP JUMPDEST PUSH2 0x7001 DUP2 PUSH2 0x7AB2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7019 PUSH1 0x2 DUP4 PUSH2 0x78D0 JUMP JUMPDEST SWAP2 POP PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7059 PUSH1 0xC DUP4 PUSH2 0x78BF JUMP JUMPDEST SWAP2 POP PUSH32 0x5F73717274204641494C45440000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x70A2 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x6EE3 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x70B5 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x7110 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x70C8 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x711F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x70E4 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x6F9F JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x70F7 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x715B JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x710A PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x715B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x7119 DUP2 PUSH2 0x7970 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7128 DUP2 PUSH2 0x798B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7137 DUP2 PUSH2 0x79C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7146 DUP2 PUSH2 0x79C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7155 DUP2 PUSH2 0x79C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7164 DUP2 PUSH2 0x79C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7173 DUP2 PUSH2 0x79D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7185 DUP3 DUP6 PUSH2 0x6F10 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x7195 DUP3 DUP5 PUSH2 0x6F27 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x71B2 DUP3 DUP5 DUP7 PUSH2 0x6F3E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x71C9 DUP3 PUSH2 0x700C JUMP JUMPDEST SWAP2 POP PUSH2 0x71D5 DUP3 DUP6 PUSH2 0x6F10 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x71E5 DUP3 DUP5 PUSH2 0x6F10 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x720A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6DC1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x722A DUP2 DUP5 PUSH2 0x6DD0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7247 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6E2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7267 DUP2 DUP5 PUSH2 0x6E85 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7289 DUP2 DUP6 PUSH2 0x6E85 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x729D DUP2 DUP5 PUSH2 0x6E85 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x72BB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6EF2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x72D6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x6EF2 JUMP JUMPDEST PUSH2 0x72E3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x713D JUMP JUMPDEST PUSH2 0x72F0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x713D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x730D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6F01 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x7328 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x6F01 JUMP JUMPDEST PUSH2 0x7335 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x6DC1 JUMP JUMPDEST PUSH2 0x7342 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x6DC1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x735F PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x6F01 JUMP JUMPDEST PUSH2 0x736C PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x6DC1 JUMP JUMPDEST PUSH2 0x7379 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x6DC1 JUMP JUMPDEST PUSH2 0x7386 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x713D JUMP JUMPDEST PUSH2 0x7393 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x713D JUMP JUMPDEST PUSH2 0x73A0 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x713D JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x73C0 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x6F01 JUMP JUMPDEST PUSH2 0x73CD PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x6F01 JUMP JUMPDEST PUSH2 0x73DA PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x6F01 JUMP JUMPDEST PUSH2 0x73E7 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x713D JUMP JUMPDEST PUSH2 0x73F4 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x6DC1 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x7413 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x6F01 JUMP JUMPDEST PUSH2 0x7420 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x716A JUMP JUMPDEST PUSH2 0x742D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x6F01 JUMP JUMPDEST PUSH2 0x743A PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x6F01 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7458 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6F63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7473 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6F72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x748E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6F81 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x74A9 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x6FBD JUMP JUMPDEST PUSH2 0x74B6 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x6FBD JUMP JUMPDEST PUSH2 0x74C3 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x6FBD JUMP JUMPDEST PUSH2 0x74D0 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x6FBD JUMP JUMPDEST PUSH2 0x74DD PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x6FBD JUMP JUMPDEST PUSH2 0x74EA PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x6FBD JUMP JUMPDEST PUSH2 0x74F7 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x713D JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x7518 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x6FBD JUMP JUMPDEST PUSH2 0x7525 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x6FBD JUMP JUMPDEST PUSH2 0x7532 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x713D JUMP JUMPDEST PUSH2 0x753F PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x713D JUMP JUMPDEST PUSH2 0x754C PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x6EF2 JUMP JUMPDEST PUSH2 0x7559 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x713D JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x7579 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x6FCC JUMP JUMPDEST PUSH2 0x7586 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x6F90 JUMP JUMPDEST PUSH2 0x7593 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x714C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x75B0 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x6FCC JUMP JUMPDEST PUSH2 0x75BD PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x6F90 JUMP JUMPDEST PUSH2 0x75CA PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x714C JUMP JUMPDEST PUSH2 0x75D7 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x714C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x75F5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x6FCC JUMP JUMPDEST PUSH2 0x7602 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x70CE JUMP JUMPDEST PUSH2 0x760F PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x714C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7631 DUP2 DUP5 PUSH2 0x6FD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7652 DUP2 PUSH2 0x704C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x766E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x708C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7689 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x713D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x76A4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x713D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x76B6 DUP2 DUP5 PUSH2 0x6E85 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x76D4 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x713D JUMP JUMPDEST PUSH2 0x76E1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x713D JUMP JUMPDEST PUSH2 0x76EE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x713D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x770B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x716A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x7734 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x7755 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x777D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x77A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x77CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x77F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78E6 DUP3 PUSH2 0x79A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x793A DUP3 PUSH2 0x78DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x794C DUP3 PUSH2 0x78DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x7961 DUP3 PUSH2 0x7AC3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x79E9 DUP3 PUSH2 0x79F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x79FB DUP3 PUSH2 0x79A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A0D DUP3 PUSH2 0x7A14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A1F DUP3 PUSH2 0x79A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A31 DUP3 PUSH2 0x7A38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A43 DUP3 PUSH2 0x79A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A55 DUP3 PUSH2 0x7953 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7A89 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x7A6E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x7A98 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x7ACD JUMPI INVALID JUMPDEST POP JUMP JUMPDEST PUSH2 0x7AD9 DUP2 PUSH2 0x78DB JUMP JUMPDEST DUP2 EQ PUSH2 0x7AE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x7AF0 DUP2 PUSH2 0x78ED JUMP JUMPDEST DUP2 EQ PUSH2 0x7AFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x7B07 DUP2 PUSH2 0x78F9 JUMP JUMPDEST DUP2 EQ PUSH2 0x7B12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x7B1E DUP2 PUSH2 0x7903 JUMP JUMPDEST DUP2 EQ PUSH2 0x7B29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x7B35 DUP2 PUSH2 0x792F JUMP JUMPDEST DUP2 EQ PUSH2 0x7B40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x7B4C DUP2 PUSH2 0x7941 JUMP JUMPDEST DUP2 EQ PUSH2 0x7B57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x7B67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x7B77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x7B87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x7B97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x7BA3 DUP2 PUSH2 0x7966 JUMP JUMPDEST DUP2 EQ PUSH2 0x7BAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x7BBA DUP2 PUSH2 0x7970 JUMP JUMPDEST DUP2 EQ PUSH2 0x7BC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x7BD1 DUP2 PUSH2 0x798B JUMP JUMPDEST DUP2 EQ PUSH2 0x7BDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x7BE8 DUP2 PUSH2 0x79C7 JUMP JUMPDEST DUP2 EQ PUSH2 0x7BF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x7BFF DUP2 PUSH2 0x79D1 JUMP JUMPDEST DUP2 EQ PUSH2 0x7C0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0x9BFD118D8228647E21F64B89311785D348E72AA43738 PUSH25 0xFA8124180EBCAAA864736F6C63430007010033000000000000 ", "sha1": "3e1026640462e4ee90355f92befb34337472b9dd", "source": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\npragma experimental ABIEncoderV2;\n\nimport \"@balancer-labs/v2-solidity-utils/contracts/math/FixedPoint.sol\";\n\nimport \"@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol\";\nimport \"@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol\";\n\nimport \"../../libraries/GyroConfigKeys.sol\";\nimport \"../../interfaces/IGyroConfig.sol\";\nimport \"../../libraries/GyroPoolMath.sol\";\n\nimport \"../CappedLiquidity.sol\";\nimport \"./ExtensibleWeightedPool2Tokens.sol\";\nimport \"./Gyro2PoolErrors.sol\";\nimport \"./GyroTwoMath.sol\";\nimport \"./GyroTwoOracleMath.sol\";\n\ncontract GyroTwoPool is ExtensibleWeightedPool2Tokens, GyroTwoOracleMath, CappedLiquidity {\n    using FixedPoint for uint256;\n    using WeightedPoolUserDataHelpers for bytes;\n    using WeightedPool2TokensMiscData for bytes32;\n\n    uint256 private immutable _sqrtAlpha;\n    uint256 private immutable _sqrtBeta;\n\n    IGyroConfig public gyroConfig;\n\n    struct GyroParams {\n        NewPoolParams baseParams;\n        uint256 sqrtAlpha; // A: Should already be upscaled\n        uint256 sqrtBeta; // A: Should already be upscaled. Could be passed as an array[](2)\n        CapParams capParams;\n    }\n\n    constructor(GyroParams memory params, address configAddress) ExtensibleWeightedPool2Tokens(params.baseParams) CappedLiquidity(params.capParams) {\n        _require(params.sqrtAlpha < params.sqrtBeta, Gyro2PoolErrors.SQRT_PARAMS_WRONG);\n        _sqrtAlpha = params.sqrtAlpha;\n        _sqrtBeta = params.sqrtBeta;\n\n        gyroConfig = IGyroConfig(configAddress);\n    }\n\n    // Returns sqrtAlpha and sqrtBeta (square roots of lower and upper price bounds of p_x respectively)\n\n    function getSqrtParameters() external view returns (uint256[2] memory) {\n        return _sqrtParameters();\n    }\n\n    function _sqrtParameters() internal view virtual returns (uint256[2] memory virtualParameters) {\n        virtualParameters[0] = _sqrtParameters(true);\n        virtualParameters[1] = _sqrtParameters(false);\n        return virtualParameters;\n    }\n\n    function _sqrtParameters(bool parameter0) internal view virtual returns (uint256) {\n        return parameter0 ? _sqrtAlpha : _sqrtBeta;\n    }\n\n    /// @dev Returns virtual offsets a and b for reserves x and y respectively, as in (x+a)*(y+b)=L^2\n    function getVirtualParameters() external view returns (uint256[] memory virtualParams) {\n        (, uint256[] memory balances, ) = getVault().getPoolTokens(getPoolId());\n        // _calculateCurrentValues() is defined in terms of an in/out pair, but we just map this to the 0/1 (x/y) pair.\n        _upscaleArray(balances);\n        (, virtualParams[0], virtualParams[1]) = _calculateCurrentValues(balances[0], balances[1], true);\n    }\n\n    function _getVirtualParameters(uint256[2] memory sqrtParams, uint256 invariant)\n        internal\n        view\n        virtual\n        returns (uint256[2] memory virtualParameters)\n    {\n        virtualParameters[0] = _virtualParameters(true, sqrtParams[1], invariant);\n        virtualParameters[1] = _virtualParameters(false, sqrtParams[0], invariant);\n        return virtualParameters;\n    }\n\n    function _virtualParameters(\n        bool parameter0,\n        uint256 sqrtParam,\n        uint256 invariant\n    ) internal view virtual returns (uint256) {\n        return\n            parameter0\n                ? (GyroTwoMath._calculateVirtualParameter0(invariant, sqrtParam))\n                : (GyroTwoMath._calculateVirtualParameter1(invariant, sqrtParam));\n    }\n\n    /**\n     * @dev Returns the current value of the invariant.\n     */\n    function getInvariant() public view override returns (uint256) {\n        (, uint256[] memory balances, ) = getVault().getPoolTokens(getPoolId());\n        uint256[2] memory sqrtParams = _sqrtParameters();\n\n        // Since the Pool hooks always work with upscaled balances, we manually\n        // upscale here for consistency\n        _upscaleArray(balances);\n\n        return GyroTwoMath._calculateInvariant(balances, sqrtParams[0], sqrtParams[1]);\n    }\n\n    // Swap Hooks\n\n    function onSwap(\n        SwapRequest memory request,\n        uint256 balanceTokenIn,\n        uint256 balanceTokenOut\n    ) public virtual override whenNotPaused onlyVault(request.poolId) returns (uint256) {\n        bool tokenInIsToken0 = request.tokenIn == _token0;\n\n        uint256 scalingFactorTokenIn = _scalingFactor(tokenInIsToken0);\n        uint256 scalingFactorTokenOut = _scalingFactor(!tokenInIsToken0);\n\n        // All token amounts are upscaled.\n        balanceTokenIn = _upscale(balanceTokenIn, scalingFactorTokenIn);\n        balanceTokenOut = _upscale(balanceTokenOut, scalingFactorTokenOut);\n\n        // All the calculations in one function to avoid Error Stack Too Deep\n        (uint256 currentInvariant, uint256 virtualParamIn, uint256 virtualParamOut) = _calculateCurrentValues(\n            balanceTokenIn,\n            balanceTokenOut,\n            tokenInIsToken0\n        );\n\n        // Update price oracle with the pre-swap balances\n        _updateOracle(\n            request.lastChangeBlock,\n            tokenInIsToken0 ? balanceTokenIn : balanceTokenOut,\n            tokenInIsToken0 ? balanceTokenOut : balanceTokenIn,\n            tokenInIsToken0 ? virtualParamIn : virtualParamOut,\n            tokenInIsToken0 ? virtualParamOut : virtualParamIn\n        );\n\n        if (request.kind == IVault.SwapKind.GIVEN_IN) {\n            // Fees are subtracted before scaling, to reduce the complexity of the rounding direction analysis.\n            // This is amount - fee amount, so we round up (favoring a higher fee amount).\n            uint256 feeAmount = request.amount.mulUp(getSwapFeePercentage());\n            // TODO check this call: why do we need to upscale? Should we downscale??\n            request.amount = _upscale(request.amount.sub(feeAmount), scalingFactorTokenIn);\n\n            uint256 amountOut = _onSwapGivenIn(request, balanceTokenIn, balanceTokenOut, virtualParamIn, virtualParamOut);\n\n            // amountOut tokens are exiting the Pool, so we round down.\n            return _downscaleDown(amountOut, scalingFactorTokenOut);\n        } else {\n            request.amount = _upscale(request.amount, scalingFactorTokenOut);\n\n            uint256 amountIn = _onSwapGivenOut(request, balanceTokenIn, balanceTokenOut, virtualParamIn, virtualParamOut);\n\n            // amountIn tokens are entering the Pool, so we round up.\n            amountIn = _downscaleUp(amountIn, scalingFactorTokenIn);\n\n            // Fees are added after scaling happens, to reduce the complexity of the rounding direction analysis.\n            // This is amount + fee amount, so we round up (favoring a higher fee amount).\n            return amountIn.divUp(getSwapFeePercentage().complement());\n        }\n    }\n\n    function _onSwapGivenIn(\n        SwapRequest memory swapRequest,\n        uint256 currentBalanceTokenIn,\n        uint256 currentBalanceTokenOut,\n        uint256 virtualParamIn,\n        uint256 virtualParamOut\n    ) internal pure override returns (uint256) {\n        // Swaps are disabled while the contract is paused.\n        return GyroTwoMath._calcOutGivenIn(currentBalanceTokenIn, currentBalanceTokenOut, swapRequest.amount, virtualParamIn, virtualParamOut);\n    }\n\n    function _onSwapGivenOut(\n        SwapRequest memory swapRequest,\n        uint256 currentBalanceTokenIn,\n        uint256 currentBalanceTokenOut,\n        uint256 virtualParamIn,\n        uint256 virtualParamOut\n    ) internal pure override returns (uint256) {\n        // Swaps are disabled while the contract is paused.\n        return GyroTwoMath._calcInGivenOut(currentBalanceTokenIn, currentBalanceTokenOut, swapRequest.amount, virtualParamIn, virtualParamOut);\n    }\n\n    function calculateCurrentValues(\n        uint256 balanceTokenIn,\n        uint256 balanceTokenOut,\n        bool tokenInIsToken0\n    )\n        public\n        view\n        returns (\n            uint256 currentInvariant,\n            uint256 virtualParamIn,\n            uint256 virtualParamOut\n        )\n    {\n        uint256 scalingFactorTokenIn = _scalingFactor(tokenInIsToken0);\n        uint256 scalingFactorTokenOut = _scalingFactor(!tokenInIsToken0);\n        balanceTokenIn = _upscale(balanceTokenIn, scalingFactorTokenIn);\n        balanceTokenOut = _upscale(balanceTokenOut, scalingFactorTokenOut);\n        return _calculateCurrentValues(balanceTokenIn, balanceTokenOut, tokenInIsToken0);\n    }\n\n    function _calculateCurrentValues(\n        uint256 balanceTokenIn,\n        uint256 balanceTokenOut,\n        bool tokenInIsToken0\n    )\n        internal\n        view\n        returns (\n            uint256 currentInvariant,\n            uint256 virtualParamIn,\n            uint256 virtualParamOut\n        )\n    {\n        // if we have more tokens we might need to get the balances from the Vault\n        uint256[] memory balances = new uint256[](2);\n        balances[0] = tokenInIsToken0 ? balanceTokenIn : balanceTokenOut;\n        balances[1] = tokenInIsToken0 ? balanceTokenOut : balanceTokenIn;\n\n        uint256[2] memory sqrtParams = _sqrtParameters();\n\n        currentInvariant = GyroTwoMath._calculateInvariant(balances, sqrtParams[0], sqrtParams[1]);\n\n        uint256[2] memory virtualParam = _getVirtualParameters(sqrtParams, currentInvariant);\n\n        virtualParamIn = tokenInIsToken0 ? virtualParam[0] : virtualParam[1];\n        virtualParamOut = tokenInIsToken0 ? virtualParam[1] : virtualParam[0];\n    }\n\n    //Note: is public visibility ok for the following function?\n\n    /**\n     * @dev Called when the Pool is joined for the first time; that is, when the BPT total supply is zero.\n     *\n     * Returns the amount of BPT to mint, and the token amounts the Pool will receive in return.\n     *\n     * Minted BPT will be sent to `recipient`, except for _MINIMUM_BPT, which will be deducted from this amount and sent\n     * to the zero address instead. This will cause that BPT to remain forever locked there, preventing total BTP from\n     * ever dropping below that value, and ensuring `_onInitializePool` can only be called once in the entire Pool's\n     * lifetime.\n     *\n     * The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n     * be downscaled (rounding up) before being returned to the Vault.\n     */\n    function _onInitializePool(\n        bytes32,\n        address,\n        address,\n        bytes memory userData\n    ) internal override returns (uint256, uint256[] memory) {\n        BaseWeightedPool.JoinKind kind = userData.joinKind();\n        _require(kind == BaseWeightedPool.JoinKind.INIT, Errors.UNINITIALIZED);\n\n        uint256[] memory amountsIn = userData.initialAmountsIn();\n        InputHelpers.ensureInputLengthMatch(amountsIn.length, 2);\n        _upscaleArray(amountsIn);\n\n        uint256[2] memory sqrtParams = _sqrtParameters();\n\n        uint256 invariantAfterJoin = GyroTwoMath._calculateInvariant(amountsIn, sqrtParams[0], sqrtParams[1]);\n\n        // Set the initial BPT to the value of the invariant times the number of tokens. This makes BPT supply more\n        // consistent in Pools with similar compositions but different number of tokens.\n\n        uint256 bptAmountOut = Math.mul(invariantAfterJoin, 2);\n\n        _lastInvariant = invariantAfterJoin;\n\n        return (bptAmountOut, amountsIn);\n    }\n\n    /**\n     * @dev Called whenever the Pool is joined after the first initialization join (see `_onInitializePool`).\n     *\n     * Returns the amount of BPT to mint, the token amounts that the Pool will receive in return, and the number of\n     * tokens to pay in protocol swap fees.\n     *\n     * Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n     * performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n     *\n     * Minted BPT will be sent to `recipient`.\n     *\n     * The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n     * be downscaled (rounding up) before being returned to the Vault.\n     *\n     * Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onJoinPool`). These\n     * amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n     *\n     * protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way\n     *\n     * Responsibility for updating the oracle has been moved from `onJoinPool()` (without the underscore) to this function. That is because both this function and `_updateOracle()` need access to the invariant and this way we can share the computation.\n     */\n    function _onJoinPool(\n        bytes32,\n        address,\n        address recipient,\n        uint256[] memory balances,\n        uint256 lastChangeBlock,\n        uint256, //protocolSwapFeePercentage,\n        bytes memory userData\n    )\n        internal\n        override\n        returns (\n            uint256,\n            uint256[] memory,\n            uint256[] memory\n        )\n    {\n        uint256[2] memory sqrtParams = _sqrtParameters();\n\n        // Due protocol swap fee amounts are computed by measuring the growth of the invariant between the previous\n        // join or exit event and now - the invariant's growth is due exclusively to swap fees. This avoids\n        // spending gas calculating the fees on each individual swap.\n        uint256 invariantBeforeAction = GyroTwoMath._calculateInvariant(balances, sqrtParams[0], sqrtParams[1]);\n        uint256[2] memory virtualParam = _getVirtualParameters(sqrtParams, invariantBeforeAction);\n\n        // Update price oracle with pre-join balances\n        _updateOracle(lastChangeBlock, balances[0], balances[1], virtualParam[0], virtualParam[1]);\n\n        _distributeFees(invariantBeforeAction);\n\n        (uint256 bptAmountOut, uint256[] memory amountsIn) = _doJoin(balances, userData);\n\n        if (_capParams.capEnabled) {\n            _ensureCap(bptAmountOut, balanceOf(recipient), totalSupply());\n        }\n\n        // Since we pay fees in BPT, they have not changed the invariant and 'invariantBeforeAction' is still consistent with\n        // 'balances'. Therefore, we can use a simplified method to update the invariant that does not require a full\n        // re-computation.\n        // Note: Should this be changed in the future, we also need to reduce the invariant proportionally by the total\n        // protocol fee factor.\n        _lastInvariant = GyroPoolMath.liquidityInvariantUpdate(invariantBeforeAction, bptAmountOut, totalSupply(), true);\n\n        // returns a new uint256[](2) b/c Balancer vault is expecting a fee array, but fees paid in BPT instead\n        return (bptAmountOut, amountsIn, new uint256[](2));\n    }\n\n    function _doJoin(uint256[] memory balances, bytes memory userData) internal view returns (uint256 bptAmountOut, uint256[] memory amountsIn) {\n        BaseWeightedPool.JoinKind kind = userData.joinKind();\n\n        // We do NOT currently support unbalanced update, i.e., EXACT_TOKENS_IN_FOR_BPT_OUT or TOKEN_IN_FOR_EXACT_BPT_OUT\n        if (kind == BaseWeightedPool.JoinKind.ALL_TOKENS_IN_FOR_EXACT_BPT_OUT) {\n            (bptAmountOut, amountsIn) = _joinAllTokensInForExactBPTOut(balances, userData);\n        } else {\n            _revert(Errors.UNHANDLED_JOIN_KIND);\n        }\n    }\n\n    function _joinAllTokensInForExactBPTOut(uint256[] memory balances, bytes memory userData)\n        internal\n        view\n        override\n        returns (uint256, uint256[] memory)\n    {\n        uint256 bptAmountOut = userData.allTokensInForExactBptOut();\n        // Note that there is no maximum amountsIn parameter: this is handled by `IVault.joinPool`.\n\n        uint256[] memory amountsIn = GyroPoolMath._calcAllTokensInGivenExactBptOut(balances, bptAmountOut, totalSupply());\n\n        return (bptAmountOut, amountsIn);\n    }\n\n    /**\n     * @dev Called whenever the Pool is exited.\n     *\n     * Returns the amount of BPT to burn, the token amounts for each Pool token that the Pool will grant in return, and\n     * the number of tokens to pay in protocol swap fees.\n     *\n     * Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n     * performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n     *\n     * BPT will be burnt from `sender`.\n     *\n     * The Pool will grant tokens to `recipient`. These amounts are considered upscaled and will be downscaled\n     * (rounding down) before being returned to the Vault.\n     *\n     * Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onExitPool`). These\n     * amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n     *\n     * protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way\n     */\n    function _onExitPool(\n        bytes32,\n        address,\n        address,\n        uint256[] memory balances,\n        uint256 lastChangeBlock,\n        uint256, // protocolSwapFeePercentage,\n        bytes memory userData\n    )\n        internal\n        override\n        returns (\n            uint256 bptAmountIn,\n            uint256[] memory amountsOut,\n            uint256[] memory dueProtocolFeeAmounts\n        )\n    {\n        // Exits are not completely disabled while the contract is paused: proportional exits (exact BPT in for tokens\n        // out) remain functional.\n\n        uint256[2] memory sqrtParams = _sqrtParameters();\n\n        // Note: If the contract is paused, swap protocol fee amounts are not charged and the oracle is not updated\n        // to avoid extra calculations and reduce the potential for errors.\n        if (_isNotPaused()) {\n            // Due protocol swap fee amounts are computed by measuring the growth of the invariant between the previous\n            // join or exit event and now - the invariant's growth is due exclusively to swap fees. This avoids\n            // spending gas calculating the fees on each individual swap.\n            uint256 invariantBeforeAction = GyroTwoMath._calculateInvariant(balances, sqrtParams[0], sqrtParams[1]);\n            uint256[2] memory virtualParam = _getVirtualParameters(sqrtParams, invariantBeforeAction);\n\n            // Update price oracle with the pre-exit balances\n            _updateOracle(lastChangeBlock, balances[0], balances[1], virtualParam[0], virtualParam[1]);\n\n            _distributeFees(invariantBeforeAction);\n\n            (bptAmountIn, amountsOut) = _doExit(balances, userData);\n\n            // Since we pay fees in BPT, they have not changed the invariant and 'invariantBeforeAction' is still consistent with\n            // 'balances'. Therefore, we can use a simplified method to update the invariant that does not require a full\n            // re-computation.\n            // Note: Should this be changed in the future, we also need to reduce the invariant proportionally by the total\n            // protocol fee factor.\n            _lastInvariant = GyroPoolMath.liquidityInvariantUpdate(invariantBeforeAction, bptAmountIn, totalSupply(), false);\n        } else {\n            // Note: If the contract is paused, swap protocol fee amounts are not charged and the oracle is not updated\n            // to avoid extra calculations and reduce the potential for errors.\n            (bptAmountIn, amountsOut) = _doExit(balances, userData);\n\n            // Invalidate _lastInvariant. We do not compute the invariant to make sure the pool is not locking\n            // up b/c numerical limits might be violated. Instead, we set the invariant such that any following\n            // (non-paused) join/exit will ignore and recompute it. (see GyroPoolMath._calcProtocolFees())\n            _lastInvariant = type(uint256).max;\n        }\n\n        // returns a new uint256[](2) b/c Balancer vault is expecting a fee array, but fees paid in BPT instead\n        return (bptAmountIn, amountsOut, new uint256[](2));\n    }\n\n    function _doExit(uint256[] memory balances, bytes memory userData) internal view returns (uint256 bptAmountIn, uint256[] memory amountsOut) {\n        BaseWeightedPool.ExitKind kind = userData.exitKind();\n\n        // We do NOT support unbalanced exit at the moment, i.e., EXACT_BPT_IN_FOR_ONE_TOKEN_OUT or\n        // BPT_IN_FOR_EXACT_TOKENS_OUT.\n        if (kind == BaseWeightedPool.ExitKind.EXACT_BPT_IN_FOR_TOKENS_OUT) {\n            (bptAmountIn, amountsOut) = _exitExactBPTInForTokensOut(balances, userData);\n        } else {\n            _revert(Errors.UNHANDLED_EXIT_KIND);\n        }\n    }\n\n    function _exitExactBPTInForTokensOut(uint256[] memory balances, bytes memory userData)\n        internal\n        view\n        override\n        returns (uint256, uint256[] memory)\n    {\n        // This exit function is the only one that is not disabled if the contract is paused: it remains unrestricted\n        // in an attempt to provide users with a mechanism to retrieve their tokens in case of an emergency.\n        // This particular exit function is the only one that remains available because it is the simplest one, and\n        // therefore the one with the lowest likelihood of errors.\n\n        uint256 bptAmountIn = userData.exactBptInForTokensOut();\n        // Note that there is no minimum amountOut parameter: this is handled by `IVault.exitPool`.\n\n        uint256[] memory amountsOut = GyroPoolMath._calcTokensOutGivenExactBptIn(balances, bptAmountIn, totalSupply());\n        return (bptAmountIn, amountsOut);\n    }\n\n    // Helpers\n\n    /**\n     * @dev Computes and distributes fees between the Balancer and the Gyro treasury\n     * The fees are computed and distributed in BPT rather than using the\n     * Balancer regular distribution mechanism which would pay these in underlying\n     */\n\n    function _distributeFees(uint256 invariantBeforeAction) internal {\n        // calculate Protocol fees in BPT\n        // lastInvariant is the invariant logged at the end of the last liquidity update\n        // protocol fees are calculated on swap fees earned between liquidity updates\n        (uint256 gyroFees, uint256 balancerFees, address gyroTreasury, address balTreasury) = _getDueProtocolFeeAmounts(\n            _lastInvariant,\n            invariantBeforeAction\n        );\n\n        // Pay fees in BPT\n        _payFeesBpt(gyroFees, balancerFees, gyroTreasury, balTreasury);\n    }\n\n    /**\n     * @dev this function overrides inherited function to make sure it is never used\n     */\n    function _getDueProtocolFeeAmounts(\n        uint256[] memory, // balances,\n        uint256[] memory, // normalizedWeights,\n        uint256, // previousInvariant,\n        uint256, // currentInvariant,\n        uint256 // protocolSwapFeePercentage\n    ) internal pure override returns (uint256[] memory) {\n        revert(\"Not implemented\");\n    }\n\n    /**\n     * @dev Calculates protocol fee amounts in BPT terms.\n     * protocolSwapFeePercentage is not used here b/c we take parameters from GyroConfig instead.\n     * Returns: BPT due to Gyro, BPT due to Balancer, receiving address for Gyro fees, receiving address for Balancer\n     * fees.\n     */\n    function _getDueProtocolFeeAmounts(uint256 previousInvariant, uint256 currentInvariant)\n        internal\n        view\n        returns (\n            uint256,\n            uint256,\n            address,\n            address\n        )\n    {\n        (uint256 protocolSwapFeePerc, uint256 protocolFeeGyroPortion, address gyroTreasury, address balTreasury) = _getFeesMetadata();\n\n        // Early return if the protocol swap fee percentage is zero, saving gas.\n        if (protocolSwapFeePerc == 0) {\n            return (0, 0, gyroTreasury, balTreasury);\n        }\n\n        // Calculate fees in BPT\n        (uint256 gyroFees, uint256 balancerFees) = GyroPoolMath._calcProtocolFees(\n            previousInvariant,\n            currentInvariant,\n            totalSupply(),\n            protocolSwapFeePerc,\n            protocolFeeGyroPortion\n        );\n\n        return (gyroFees, balancerFees, gyroTreasury, balTreasury);\n    }\n\n    function _payFeesBpt(\n        uint256 gyroFees,\n        uint256 balancerFees,\n        address gyroTreasury,\n        address balTreasury\n    ) internal {\n        // Pay fees in BPT to gyro treasury\n        if (gyroFees > 0) {\n            _mintPoolTokens(gyroTreasury, gyroFees);\n        }\n        // Pay fees in BPT to bal treasury\n        if (balancerFees > 0) {\n            _mintPoolTokens(balTreasury, balancerFees);\n        }\n    }\n\n    function _getFeesMetadata()\n        internal\n        view\n        returns (\n            uint256,\n            uint256,\n            address,\n            address\n        )\n    {\n        return (\n            gyroConfig.getUint(GyroConfigKeys.PROTOCOL_SWAP_FEE_PERC_KEY),\n            gyroConfig.getUint(GyroConfigKeys.PROTOCOL_FEE_GYRO_PORTION_KEY),\n            gyroConfig.getAddress(GyroConfigKeys.GYRO_TREASURY_KEY),\n            gyroConfig.getAddress(GyroConfigKeys.BAL_TREASURY_KEY)\n        );\n    }\n\n    /**\n     * @dev Updates the Price Oracle based on the Pool's current state (balances, BPT supply and invariant). Must be\n     * called on *all* state-changing functions with the balances *before* the state change happens, and with\n     * `lastChangeBlock` as the number of the block in which any of the balances last changed.\n     */\n    function _updateOracle(\n        uint256 lastChangeBlock,\n        uint256 balanceToken0,\n        uint256 balanceToken1,\n        uint256 virtualParam0,\n        uint256 virtualParam1\n    ) internal {\n        bytes32 miscData = _miscData;\n        if (miscData.oracleEnabled() && block.number > lastChangeBlock) {\n            int256 logSpotPrice = GyroTwoOracleMath._calcLogSpotPrice(balanceToken0, virtualParam0, balanceToken1, virtualParam1);\n\n            int256 logBPTPrice = GyroTwoOracleMath._calcLogBPTPrice(\n                balanceToken0,\n                virtualParam0,\n                balanceToken1,\n                virtualParam1,\n                miscData.logTotalSupply()\n            );\n\n            uint256 oracleCurrentIndex = miscData.oracleIndex();\n            uint256 oracleCurrentSampleInitialTimestamp = miscData.oracleSampleCreationTimestamp();\n            uint256 oracleUpdatedIndex = _processPriceData(\n                oracleCurrentSampleInitialTimestamp,\n                oracleCurrentIndex,\n                logSpotPrice,\n                logBPTPrice,\n                miscData.logInvariant()\n            );\n\n            if (oracleCurrentIndex != oracleUpdatedIndex) {\n                // solhint-disable not-rely-on-time\n                miscData = miscData.setOracleIndex(oracleUpdatedIndex);\n                miscData = miscData.setOracleSampleCreationTimestamp(block.timestamp);\n                _miscData = miscData;\n            }\n        }\n    }\n\n    /**\n     * @dev this variant of the function, called from `onJoinPool()` and `onExitPool()`, which we inherit, is a no-op. We instead have moved responsibility for updating the oracle to `_onJoinPool()` and `_onExitPool()` and the above version is called from there.\n     */\n    function _updateOracle(\n        uint256 lastChangeBlock,\n        uint256 balanceToken0,\n        uint256 balanceToken1\n    ) internal override {\n        // Do nothing.\n    }\n}\n", "sourceMap": "1296:26754:5:-:0;;;873:95:47;820:148;;;;;2785:4:1;2738:51;;;;;2842:4;2795:51;;;;;3111:1;3061:51;;;;;1894:366:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2020:6;:16;;;1985:6;:17;;;4949:6:1;:26;;;4977:6;:27;;;4835:6;:11;;;4848:6;:13;;;4863:6;:12;;;1831:9:13;1239:4:47;2020:280:45;;;;;;;;;;;;;;;;;1795:9:13;1806:11;4907:6:1;:12;;;4795:10;4787:19;;4779:28;;1954:21:30;1929:46;;;;;;1876:106;1758:5:16;1749:14;;;;;;;;;;;;1712:58;2010:5:46;2002;:13;;;;;;;;;;;;:::i;:::-;;2035:7;2025;:17;;;;;;;;;;;;:::i;:::-;;2064:2;2052:9;;:14;;;;;;;;;;;;;;;;;;1936:137;;2116:4:45;2100:22;;;;;;2085:37;;;;;;2166:7;2150:25;;;;;;2132:43;;;;;;2198:95;2185:108;;;;;;2020:280;;1200:52:47;1861:5:13::2;1852:14;;;;;;;;;;::::0;::::2;1681:192:::0;;;2458:93:39;2164:7;2467:19;:49;;8518:3:31;2458:8:39;;;:93;;:::i;:::-;2561:96;2232:7;2570:20;:51;;8582:3:31;2561:8:39;;;:96;;:::i;:::-;2668:26;2715:19;2697:15;:37;2668:66;;2767:18;2745:40;;;;;;2839:20;2818:18;:41;2795:64;;;;;;2377:489;;;5020:22:1::4;5058:1;5045:15;;;;;;;;::::0;::::4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5020:40;;5082:6;:13;;;5070:6;5077:1;5070:9;;;;;;;;;;;;;:25;;;;;;;;;::::0;::::4;5117:6;:13;;;5105:6;5112:1;5105:9;;;;;;;;;;;;;:25;;;;;;;;;::::0;::::4;5295:40;5328:6;5295:32;;;;;:40;;:::i;:::-;5346:39;5364:6;:20;;;5346:17;;;:39;;:::i;:::-;5395:47;5417:6;:24;;;5395:21;;;:47;;:::i;:::-;5453:14;5470:6;:12;;;:25;;;5496:35;5470:62;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5453:79;;5596:6;:12;;;:27;;;5624:6;5632;5654:1;5640:16;;;;;;;;::::0;::::4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5596:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;::::0;::::4;;;;;;;;;5767:6;5757:16;;;;::::0;::::4;5794:6;:13;;;5784:23;;;;;;;;;;::::0;::::4;5827:6;:13;;;5817:23;;;;;;;;;;::::0;::::4;5869:36;5891:6;:13;;;5869:21;;;:36;;:::i;:::-;5851:54;;;;::::0;::::4;5933:36;5955:6;:13;;;5933:21;;;:36;;:::i;:::-;5915:54;;;;::::0;::::4;4185:1791;;::::0;821:10:0;808;;:23;;;;;;;;;;;;;;;;;;865:6;:17;;;841:10;:21;;;:41;;;;;;;;;;;;;;;;;;919:6;:20;;;892:10;:24;;;:47;;;;;;;;;;;;;;;;;;972:6;:16;;;949:10;:20;;;:39;;;;;;;;;;;;;;;;;;761:234;2048:79:5::2;2076:6;:15;;;2057:6;:16;;;:34;821:3:2;2048:8:5;;;:79;;:::i;:::-;2150:6;:16;;;2137:29;;;;::::0;::::2;2188:6;:15;;;2176:27;;;;::::0;::::2;2239:13;2214:10;;:39;;;;;;;;;;;;;;;;;;1894:366:::0;;1296:26754;;866:101:31;935:9;930:34;;946:18;954:9;946:7;;;:18;;:::i;:::-;930:34;866:101;;:::o;1135:274:37:-;1211:29;1345:5;1329:21;;1369:33;1389:12;1369:19;;;:33;;:::i;:::-;1135:274;;:::o;8453:158:1:-;8525:35;8552:7;8525:9;;:26;;;;;;:35;;;;:::i;:::-;8513:9;:47;;;;8575:29;8596:7;8575:29;;;;;;:::i;:::-;;;;;;;;8453:158;:::o;7175:397::-;7251:87;2347:4;7260:17;:45;;5289:3:31;7251:8:1;;;:87;;:::i;:::-;7348;2420:4;7357:17;:45;;5228:3:31;7348:8:1;;;:87;;:::i;:::-;7458:49;7489:17;7458:9;;:30;;;;;;:49;;;;:::i;:::-;7446:9;:61;;;;7522:43;7547:17;7522:43;;;;;;:::i;:::-;;;;;;;;7175:397;:::o;40519:399::-;40586:7;40685:21;40723:5;40709:30;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;40685:56;;;;40816:26;40845:27;40854:2;40858:13;40845:8;;;;;:27;;:::i;:::-;40816:56;;40893:18;40889:2;:22;40882:29;;;;40519:399;;;:::o;1074:3172:31:-;2215:4;2210:2;2199:9;2195:18;2191:29;2258:2;2247:9;2243:18;2230:31;;2308:4;2303:2;2292:9;2288:18;2284:29;2351:2;2340:9;2336:18;2323:31;;2403:4;2398:2;2387:9;2383:18;2379:29;3061:8;3057:2;3053:17;3043:6;3040:1;3036:14;3029:5;3025:26;3021:50;3003:16;2999:73;2994:3;2990:83;3593:66;3588:3;3581:79;3799:66;3793:4;3786:80;3941:1;3935:4;3928:15;4014:12;4008:4;4001:26;4234:3;4231:1;4224:14;1415:374:37;1511:1;1496:5;:12;:16;1492:53;;;1528:7;;1492:53;1555:16;1574:5;1580:1;1574:8;;;;;;;;;;;;;;1555:27;;1597:9;1609:1;1597:13;;1592:191;1616:5;:12;1612:1;:16;1592:191;;;1649:15;1667:5;1673:1;1667:8;;;;;;;;;;;;;;1649:26;;1689:51;1709:7;1698:18;;:8;:18;;;4890:3:31;1689:8:37;;;:51;;:::i;:::-;1765:7;1754:18;;1592:191;1630:3;;;;;1592:191;;;;1415:374;;;:::o;4808:172:28:-;4892:7;4918:55;4934:14;2092:2;4918:4;:15;;;;;;:55;;;;;:::i;:::-;4911:62;;4808:172;;;;:::o;5083:194::-;5178:7;5204:66;5222:18;2155:2;5204:4;:17;;;;;;:66;;;;;:::i;:::-;5197:73;;5083:194;;;;:::o;948:166:43:-;1006:7;1025:37;1039:1;1034;:6;;4370:1:31;1025:8:43;;;:37;;:::i;:::-;1072:9;1088:1;1084;:5;1072:17;;1106:1;1099:8;;;948:166;;;;:::o;3094:280:40:-;3209:7;3228:19;3287:6;2126:10;3276:17;;3274:20;3266:4;3258:13;;:36;3250:45;;3228:67;;3360:6;3342:5;:13;;3354:1;3342:13;;;3350:1;3342:13;3334:22;;:32;;3326:41;;3312:11;:55;3305:62;;;3094:280;;;;;:::o;6887:269::-;7007:7;7026:19;7086:6;2598:11;7074:18;;7072:21;7064:4;7056:13;;:37;7048:46;;7026:68;;7142:6;7133:5;:15;;7125:24;;7111:11;:38;7104:45;;;6887:269;;;;;:::o;1296:26754:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;5:134:-1:-;;89:6;83:13;74:22;;101:33;128:5;101:33;:::i;:::-;68:71;;;;:::o;146:128::-;;227:6;221:13;212:22;;239:30;263:5;239:30;:::i;:::-;206:68;;;;:::o;281:134::-;;365:6;359:13;350:22;;377:33;404:5;377:33;:::i;:::-;344:71;;;;:::o;422:164::-;;521:6;515:13;506:22;;533:48;575:5;533:48;:::i;:::-;500:86;;;;:::o;593:164::-;;692:6;686:13;677:22;;704:48;746:5;704:48;:::i;:::-;671:86;;;;:::o;765:444::-;;878:3;871:4;863:6;859:17;855:27;845:2;;896:1;893;886:12;845:2;926:6;920:13;948:65;963:49;1005:6;963:49;:::i;:::-;948:65;:::i;:::-;939:74;;1033:6;1026:5;1019:21;1069:4;1061:6;1057:17;1102:4;1095:5;1091:16;1137:3;1128:6;1123:3;1119:16;1116:25;1113:2;;;1154:1;1151;1144:12;1113:2;1164:39;1196:6;1191:3;1186;1164:39;:::i;:::-;838:371;;;;;;;:::o;1257:674::-;;1384:4;1372:9;1367:3;1363:19;1359:30;1356:2;;;1402:1;1399;1392:12;1356:2;1420:20;1435:4;1420:20;:::i;:::-;1411:29;;1496:1;1528:57;1581:3;1572:6;1561:9;1557:22;1528:57;:::i;:::-;1521:4;1514:5;1510:16;1503:83;1450:147;1656:2;1689:60;1745:3;1736:6;1725:9;1721:22;1689:60;:::i;:::-;1682:4;1675:5;1671:16;1664:86;1607:154;1816:2;1849:60;1905:3;1896:6;1885:9;1881:22;1849:60;:::i;:::-;1842:4;1835:5;1831:16;1824:86;1771:150;1350:581;;;;:::o;1974:969::-;;2101:4;2089:9;2084:3;2080:19;2076:30;2073:2;;;2119:1;2116;2109:12;2073:2;2137:20;2152:4;2137:20;:::i;:::-;2128:29;;2234:1;2223:9;2219:17;2213:24;2257:18;2249:6;2246:30;2243:2;;;2289:1;2286;2279:12;2243:2;2324:91;2411:3;2402:6;2391:9;2387:22;2324:91;:::i;:::-;2317:4;2310:5;2306:16;2299:117;2167:260;2482:2;2515:60;2571:3;2562:6;2551:9;2547:22;2515:60;:::i;:::-;2508:4;2501:5;2497:16;2490:86;2437:150;2641:2;2674:60;2730:3;2721:6;2710:9;2706:22;2674:60;:::i;:::-;2667:4;2660:5;2656:16;2649:86;2597:149;2801:2;2834:87;2917:3;2908:6;2897:9;2893:22;2834:87;:::i;:::-;2827:4;2820:5;2816:16;2809:113;2756:177;2067:876;;;;:::o;3007:2041::-;;3138:6;3126:9;3121:3;3117:19;3113:32;3110:2;;;3158:1;3155;3148:12;3110:2;3176:22;3191:6;3176:22;:::i;:::-;3167:31;;3249:1;3281:75;3352:3;3343:6;3332:9;3328:22;3281:75;:::i;:::-;3274:4;3267:5;3263:16;3256:101;3208:160;3439:2;3428:9;3424:18;3418:25;3463:18;3455:6;3452:30;3449:2;;;3495:1;3492;3485:12;3449:2;3530:70;3596:3;3587:6;3576:9;3572:22;3530:70;:::i;:::-;3523:4;3516:5;3512:16;3505:96;3378:234;3685:2;3674:9;3670:18;3664:25;3709:18;3701:6;3698:30;3695:2;;;3741:1;3738;3731:12;3695:2;3776:70;3842:3;3833:6;3822:9;3818:22;3776:70;:::i;:::-;3769:4;3762:5;3758:16;3751:96;3622:236;3910:2;3943:75;4014:3;4005:6;3994:9;3990:22;3943:75;:::i;:::-;3936:4;3929:5;3925:16;3918:101;3868:162;4082:3;4116:75;4187:3;4178:6;4167:9;4163:22;4116:75;:::i;:::-;4109:4;4102:5;4098:16;4091:101;4040:163;4266:3;4300:60;4356:3;4347:6;4336:9;4332:22;4300:60;:::i;:::-;4293:4;4286:5;4282:16;4275:86;4213:159;4437:3;4471:60;4527:3;4518:6;4507:9;4503:22;4471:60;:::i;:::-;4464:4;4457:5;4453:16;4446:86;4382:161;4609:3;4643:60;4699:3;4690:6;4679:9;4675:22;4643:60;:::i;:::-;4636:4;4629:5;4625:16;4618:86;4553:162;4774:3;4810:57;4863:3;4854:6;4843:9;4839:22;4810:57;:::i;:::-;4801:6;4794:5;4790:18;4783:85;4725:154;4930:3;4966:60;5022:3;5013:6;5002:9;4998:22;4966:60;:::i;:::-;4957:6;4950:5;4946:18;4939:88;4889:149;3104:1944;;;;:::o;5055:134::-;;5139:6;5133:13;5124:22;;5151:33;5178:5;5151:33;:::i;:::-;5118:71;;;;:::o;5196:134::-;;5280:6;5274:13;5265:22;;5292:33;5319:5;5292:33;:::i;:::-;5259:71;;;;:::o;5337:134::-;;5421:6;5415:13;5406:22;;5433:33;5460:5;5433:33;:::i;:::-;5400:71;;;;:::o;5478:130::-;;5560:6;5554:13;5545:22;;5572:31;5597:5;5572:31;:::i;:::-;5539:69;;;;:::o;5615:263::-;;5730:2;5718:9;5709:7;5705:23;5701:32;5698:2;;;5746:1;5743;5736:12;5698:2;5781:1;5798:64;5854:7;5845:6;5834:9;5830:22;5798:64;:::i;:::-;5788:74;;5760:108;5692:186;;;;:::o;5885:532::-;;;6044:2;6032:9;6023:7;6019:23;6015:32;6012:2;;;6060:1;6057;6050:12;6012:2;6116:1;6105:9;6101:17;6095:24;6139:18;6131:6;6128:30;6125:2;;;6171:1;6168;6161:12;6125:2;6191:91;6274:7;6265:6;6254:9;6250:22;6191:91;:::i;:::-;6181:101;;6074:214;6319:2;6337:64;6393:7;6384:6;6373:9;6369:22;6337:64;:::i;:::-;6327:74;;6298:109;6006:411;;;;;:::o;6424:259::-;;6537:2;6525:9;6516:7;6512:23;6508:32;6505:2;;;6553:1;6550;6543:12;6505:2;6588:1;6605:62;6659:7;6650:6;6639:9;6635:22;6605:62;:::i;:::-;6595:72;;6567:106;6499:184;;;;:::o;6691:173::-;;6778:46;6820:3;6812:6;6778:46;:::i;:::-;6853:4;6848:3;6844:14;6830:28;;6771:93;;;;:::o;6873:203::-;;6975:61;7032:3;7024:6;6975:61;:::i;:::-;7065:4;7060:3;7056:14;7042:28;;6968:108;;;;:::o;7084:103::-;7157:24;7175:5;7157:24;:::i;:::-;7152:3;7145:37;7139:48;;:::o;7225:690::-;;7370:54;7418:5;7370:54;:::i;:::-;7437:86;7516:6;7511:3;7437:86;:::i;:::-;7430:93;;7544:56;7594:5;7544:56;:::i;:::-;7620:7;7648:1;7633:260;7658:6;7655:1;7652:13;7633:260;;;7725:6;7719:13;7746:63;7805:3;7790:13;7746:63;:::i;:::-;7739:70;;7826:60;7879:6;7826:60;:::i;:::-;7816:70;;7690:203;7680:1;7677;7673:9;7668:14;;7633:260;;;7637:14;7906:3;7899:10;;7349:566;;;;;;;:::o;7962:765::-;;8122:69;8185:5;8122:69;:::i;:::-;8204:86;8283:6;8278:3;8204:86;:::i;:::-;8197:93;;8311:71;8376:5;8311:71;:::i;:::-;8402:7;8430:1;8415:290;8440:6;8437:1;8434:13;8415:290;;;8507:6;8501:13;8528:78;8602:3;8587:13;8528:78;:::i;:::-;8521:85;;8623:75;8691:6;8623:75;:::i;:::-;8613:85;;8472:233;8462:1;8459;8455:9;8450:14;;8415:290;;;8419:14;8718:3;8711:10;;8101:626;;;;;;;:::o;8735:104::-;8812:21;8827:5;8812:21;:::i;:::-;8807:3;8800:34;8794:45;;:::o;8846:113::-;8929:24;8947:5;8929:24;:::i;:::-;8924:3;8917:37;8911:48;;:::o;8966:146::-;9054:52;9100:5;9054:52;:::i;:::-;9049:3;9042:65;9036:76;;:::o;9119:168::-;9223:58;9275:5;9223:58;:::i;:::-;9218:3;9211:71;9205:82;;:::o;9294:113::-;9377:24;9395:5;9377:24;:::i;:::-;9372:3;9365:37;9359:48;;:::o;9414:210::-;;9535:2;9524:9;9520:18;9512:26;;9549:65;9611:1;9600:9;9596:17;9587:6;9549:65;:::i;:::-;9506:118;;;;:::o;9631:770::-;;9929:2;9918:9;9914:18;9906:26;;9943:71;10011:1;10000:9;9996:17;9987:6;9943:71;:::i;:::-;10062:9;10056:4;10052:20;10047:2;10036:9;10032:18;10025:48;10087:123;10205:4;10196:6;10087:123;:::i;:::-;10079:131;;10258:9;10252:4;10248:20;10243:2;10232:9;10228:18;10221:48;10283:108;10386:4;10377:6;10283:108;:::i;:::-;10275:116;;9900:501;;;;;;:::o;10408:264::-;;10556:2;10545:9;10541:18;10533:26;;10570:92;10659:1;10648:9;10644:17;10635:6;10570:92;:::i;:::-;10527:145;;;;:::o;10679:222::-;;10806:2;10795:9;10791:18;10783:26;;10820:71;10888:1;10877:9;10873:17;10864:6;10820:71;:::i;:::-;10777:124;;;;:::o;10908:256::-;;10970:2;10964:9;10954:19;;11008:4;11000:6;10996:17;11107:6;11095:10;11092:22;11071:18;11059:10;11056:34;11053:62;11050:2;;;11128:1;11125;11118:12;11050:2;11148:10;11144:2;11137:22;10948:216;;;;:::o;11171:322::-;;11315:18;11307:6;11304:30;11301:2;;;11347:1;11344;11337:12;11301:2;11414:4;11410:9;11403:4;11395:6;11391:17;11387:33;11379:41;;11478:4;11472;11468:15;11460:23;;11238:255;;;:::o;11500:151::-;;11586:3;11578:11;;11624:4;11619:3;11615:14;11607:22;;11572:79;;;:::o;11658:166::-;;11759:3;11751:11;;11797:4;11792:3;11788:14;11780:22;;11745:79;;;:::o;11831:137::-;;11940:5;11934:12;11924:22;;11905:63;;;:::o;11975:152::-;;12099:5;12093:12;12083:22;;12064:63;;;:::o;12134:108::-;;12232:4;12227:3;12223:14;12215:22;;12209:33;;;:::o;12249:123::-;;12362:4;12357:3;12353:14;12345:22;;12339:33;;;:::o;12380:178::-;;12510:6;12505:3;12498:19;12547:4;12542:3;12538:14;12523:29;;12491:67;;;;:::o;12566:91::-;;12628:24;12646:5;12628:24;:::i;:::-;12617:35;;12611:46;;;:::o;12664:85::-;;12737:5;12730:13;12723:21;12712:32;;12706:43;;;:::o;12756:72::-;;12818:5;12807:16;;12801:27;;;:::o;12835:106::-;;12912:24;12930:5;12912:24;:::i;:::-;12901:35;;12895:46;;;:::o;12948:106::-;;13025:24;13043:5;13025:24;:::i;:::-;13014:35;;13008:46;;;:::o;13061:152::-;;13146:5;13135:16;;13152:56;13202:5;13152:56;:::i;:::-;13129:84;;;:::o;13220:111::-;;13293:32;13286:5;13282:44;13271:55;;13265:66;;;:::o;13338:113::-;;13411:34;13404:5;13400:46;13389:57;;13383:68;;;:::o;13458:121::-;;13531:42;13524:5;13520:54;13509:65;;13503:76;;;:::o;13586:72::-;;13648:5;13637:16;;13631:27;;;:::o;13665:81::-;;13736:4;13729:5;13725:16;13714:27;;13708:38;;;:::o;13753:151::-;;13847:52;13893:5;13847:52;:::i;:::-;13834:65;;13828:76;;;:::o;13911:123::-;;14005:24;14023:5;14005:24;:::i;:::-;13992:37;;13986:48;;;:::o;14041:152::-;;14141:47;14182:5;14141:47;:::i;:::-;14128:60;;14122:71;;;:::o;14201:268::-;14266:1;14273:101;14287:6;14284:1;14281:13;14273:101;;;14363:1;14358:3;14354:11;14348:18;14344:1;14339:3;14335:11;14328:39;14309:2;14306:1;14302:10;14297:15;;14273:101;;;14389:6;14386:1;14383:13;14380:2;;;14454:1;14445:6;14440:3;14436:16;14429:27;14380:2;14250:219;;;;:::o;14477:114::-;14569:1;14562:5;14559:12;14549:2;;14575:9;14549:2;14543:48;:::o;14598:117::-;14667:24;14685:5;14667:24;:::i;:::-;14660:5;14657:35;14647:2;;14706:1;14703;14696:12;14647:2;14641:74;:::o;14722:111::-;14788:21;14803:5;14788:21;:::i;:::-;14781:5;14778:32;14768:2;;14824:1;14821;14814:12;14768:2;14762:71;:::o;14840:117::-;14909:24;14927:5;14909:24;:::i;:::-;14902:5;14899:35;14889:2;;14948:1;14945;14938:12;14889:2;14883:74;:::o;14964:147::-;15048:39;15081:5;15048:39;:::i;:::-;15041:5;15038:50;15028:2;;15102:1;15099;15092:12;15028:2;15022:89;:::o;15118:147::-;15202:39;15235:5;15202:39;:::i;:::-;15195:5;15192:50;15182:2;;15256:1;15253;15246:12;15182:2;15176:89;:::o;15272:117::-;15341:24;15359:5;15341:24;:::i;:::-;15334:5;15331:35;15321:2;;15380:1;15377;15370:12;15321:2;15315:74;:::o;15396:117::-;15465:24;15483:5;15465:24;:::i;:::-;15458:5;15455:35;15445:2;;15504:1;15501;15494:12;15445:2;15439:74;:::o;15520:117::-;15589:24;15607:5;15589:24;:::i;:::-;15582:5;15579:35;15569:2;;15628:1;15625;15618:12;15569:2;15563:74;:::o;15644:113::-;15711:22;15727:5;15711:22;:::i;:::-;15704:5;15701:33;15691:2;;15748:1;15745;15738:12;15691:2;15685:72;:::o;1296:26754:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/cpmmv-2/GyroTwoPool.sol", "type": "contract", "deployment": {"address": "0xD9e058f39c11313103229bD481a8453bdDD20D81", "chainid": "42", "blockHeight": 33064061}}