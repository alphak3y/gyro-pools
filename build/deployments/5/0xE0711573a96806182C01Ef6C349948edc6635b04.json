{"abi": [{"inputs": [{"components": [{"components": [{"internalType": "contract IVault", "name": "vault", "type": "address"}, {"internalType": "string", "name": "name", "type": "string"}, {"internalType": "string", "name": "symbol", "type": "string"}, {"internalType": "contract IERC20", "name": "token0", "type": "address"}, {"internalType": "contract IERC20", "name": "token1", "type": "address"}, {"internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}, {"internalType": "uint256", "name": "pauseWindowDuration", "type": "uint256"}, {"internalType": "uint256", "name": "bufferPeriodDuration", "type": "uint256"}, {"internalType": "bool", "name": "oracleEnabled", "type": "bool"}, {"internalType": "address", "name": "owner", "type": "address"}], "internalType": "struct ExtensibleWeightedPool2Tokens.NewPoolParams", "name": "baseParams", "type": "tuple"}, {"components": [{"internalType": "int256", "name": "alpha", "type": "int256"}, {"internalType": "int256", "name": "beta", "type": "int256"}, {"internalType": "int256", "name": "c", "type": "int256"}, {"internalType": "int256", "name": "s", "type": "int256"}, {"internalType": "int256", "name": "lambda", "type": "int256"}], "internalType": "struct GyroECLPMath.Params", "name": "eclpParams", "type": "tuple"}, {"components": [{"components": [{"internalType": "int256", "name": "x", "type": "int256"}, {"internalType": "int256", "name": "y", "type": "int256"}], "internalType": "struct GyroECLPMath.Vector2", "name": "tauAlpha", "type": "tuple"}, {"components": [{"internalType": "int256", "name": "x", "type": "int256"}, {"internalType": "int256", "name": "y", "type": "int256"}], "internalType": "struct GyroECLPMath.Vector2", "name": "tauBeta", "type": "tuple"}, {"internalType": "int256", "name": "u", "type": "int256"}, {"internalType": "int256", "name": "v", "type": "int256"}, {"internalType": "int256", "name": "w", "type": "int256"}, {"internalType": "int256", "name": "z", "type": "int256"}, {"internalType": "int256", "name": "dSq", "type": "int256"}], "internalType": "struct GyroECLPMath.DerivedParams", "name": "derivedEclpParams", "type": "tuple"}, {"internalType": "address", "name": "capManager", "type": "address"}, {"components": [{"internalType": "bool", "name": "capEnabled", "type": "bool"}, {"internalType": "uint120", "name": "perAddressCap", "type": "uint120"}, {"internalType": "uint128", "name": "globalCap", "type": "uint128"}], "internalType": "struct ICappedLiquidity.CapParams", "name": "capParams", "type": "tuple"}, {"internalType": "address", "name": "pauseManager", "type": "address"}], "internalType": "struct GyroECLPPool.GyroParams", "name": "params", "type": "tuple"}, {"internalType": "address", "name": "configAddress", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "owner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "spender", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Approval", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "capManager", "type": "address"}], "name": "CapManagerUpdated", "type": "event"}, {"anonymous": false, "inputs": [{"components": [{"internalType": "bool", "name": "capEnabled", "type": "bool"}, {"internalType": "uint120", "name": "perAddressCap", "type": "uint120"}, {"internalType": "uint128", "name": "globalCap", "type": "uint128"}], "indexed": false, "internalType": "struct ICappedLiquidity.CapParams", "name": "params", "type": "tuple"}], "name": "CapParamsUpdated", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bool", "name": "derivedParamsValidated", "type": "bool"}], "name": "ECLPDerivedParamsValidated", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bool", "name": "paramsValidated", "type": "bool"}], "name": "ECLPParamsValidated", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "invariantAfterJoin", "type": "uint256"}], "name": "InvariantAterInitializeJoin", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "oldInvariant", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "newInvariant", "type": "uint256"}], "name": "InvariantOldAndNew", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bool", "name": "enabled", "type": "bool"}], "name": "OracleEnabledChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "oracleUpdatedIndex", "type": "uint256"}], "name": "OracleIndexUpdated", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "oldPauseManager", "type": "address"}, {"indexed": false, "internalType": "address", "name": "newPauseManager", "type": "address"}], "name": "PauseManagerChanged", "type": "event"}, {"anonymous": false, "inputs": [], "name": "PausedLocally", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bool", "name": "paused", "type": "bool"}], "name": "PausedStateChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}], "name": "SwapFeePercentageChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"components": [{"internalType": "int256", "name": "x", "type": "int256"}, {"internalType": "int256", "name": "y", "type": "int256"}], "indexed": false, "internalType": "struct GyroECLPMath.Vector2", "name": "invariant", "type": "tuple"}, {"indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "SwapParams", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "from", "type": "address"}, {"indexed": true, "internalType": "address", "name": "to", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Transfer", "type": "event"}, {"anonymous": false, "inputs": [], "name": "UnpausedLocally", "type": "event"}, {"inputs": [], "name": "DOMAIN_SEPARATOR", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "_dSq", "outputs": [{"internalType": "int256", "name": "", "type": "int256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "_paramsAlpha", "outputs": [{"internalType": "int256", "name": "", "type": "int256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "_paramsBeta", "outputs": [{"internalType": "int256", "name": "", "type": "int256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "_paramsC", "outputs": [{"internalType": "int256", "name": "", "type": "int256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "_paramsLambda", "outputs": [{"internalType": "int256", "name": "", "type": "int256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "_paramsS", "outputs": [{"internalType": "int256", "name": "", "type": "int256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "_tauAlphaX", "outputs": [{"internalType": "int256", "name": "", "type": "int256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "_tauAlphaY", "outputs": [{"internalType": "int256", "name": "", "type": "int256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "_tauBetaX", "outputs": [{"internalType": "int256", "name": "", "type": "int256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "_tauBetaY", "outputs": [{"internalType": "int256", "name": "", "type": "int256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "_u", "outputs": [{"internalType": "int256", "name": "", "type": "int256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "_v", "outputs": [{"internalType": "int256", "name": "", "type": "int256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "_w", "outputs": [{"internalType": "int256", "name": "", "type": "int256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "_z", "outputs": [{"internalType": "int256", "name": "", "type": "int256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "spender", "type": "address"}], "name": "allowance", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "approve", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "balanceOf", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "capManager", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "capParams", "outputs": [{"components": [{"internalType": "bool", "name": "capEnabled", "type": "bool"}, {"internalType": "uint120", "name": "perAddressCap", "type": "uint120"}, {"internalType": "uint128", "name": "globalCap", "type": "uint128"}], "internalType": "struct ICappedLiquidity.CapParams", "name": "", "type": "tuple"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_pauseManager", "type": "address"}], "name": "changePauseManager", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "decimals", "outputs": [{"internalType": "uint8", "name": "", "type": "uint8"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "decreaseAllowance", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "startIndex", "type": "uint256"}, {"internalType": "uint256", "name": "endIndex", "type": "uint256"}], "name": "dirtyUninitializedOracleSamples", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "enableOracle", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes4", "name": "selector", "type": "bytes4"}], "name": "getActionId", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getAuthorizer", "outputs": [{"internalType": "contract IAuthorizer", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getECLPParams", "outputs": [{"components": [{"internalType": "int256", "name": "alpha", "type": "int256"}, {"internalType": "int256", "name": "beta", "type": "int256"}, {"internalType": "int256", "name": "c", "type": "int256"}, {"internalType": "int256", "name": "s", "type": "int256"}, {"internalType": "int256", "name": "lambda", "type": "int256"}], "internalType": "struct GyroECLPMath.Params", "name": "params", "type": "tuple"}, {"components": [{"components": [{"internalType": "int256", "name": "x", "type": "int256"}, {"internalType": "int256", "name": "y", "type": "int256"}], "internalType": "struct GyroECLPMath.Vector2", "name": "tauAlpha", "type": "tuple"}, {"components": [{"internalType": "int256", "name": "x", "type": "int256"}, {"internalType": "int256", "name": "y", "type": "int256"}], "internalType": "struct GyroECLPMath.Vector2", "name": "tauBeta", "type": "tuple"}, {"internalType": "int256", "name": "u", "type": "int256"}, {"internalType": "int256", "name": "v", "type": "int256"}, {"internalType": "int256", "name": "w", "type": "int256"}, {"internalType": "int256", "name": "z", "type": "int256"}, {"internalType": "int256", "name": "dSq", "type": "int256"}], "internalType": "struct GyroECLPMath.DerivedParams", "name": "d", "type": "tuple"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getInvariant", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getLargestSafeQueryWindow", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "pure", "type": "function"}, {"inputs": [], "name": "getLastInvariant", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "enum IPriceOracle.Variable", "name": "variable", "type": "uint8"}], "name": "getLatest", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getMiscData", "outputs": [{"internalType": "int256", "name": "logInvariant", "type": "int256"}, {"internalType": "int256", "name": "logTotalSupply", "type": "int256"}, {"internalType": "uint256", "name": "oracleSampleCreationTimestamp", "type": "uint256"}, {"internalType": "uint256", "name": "oracleIndex", "type": "uint256"}, {"internalType": "bool", "name": "oracleEnabled", "type": "bool"}, {"internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getNormalizedWeights", "outputs": [{"internalType": "uint256[]", "name": "", "type": "uint256[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getOwner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"components": [{"internalType": "enum IPriceOracle.Variable", "name": "variable", "type": "uint8"}, {"internalType": "uint256", "name": "ago", "type": "uint256"}], "internalType": "struct IPriceOracle.OracleAccumulatorQuery[]", "name": "queries", "type": "tuple[]"}], "name": "getPastAccumulators", "outputs": [{"internalType": "int256[]", "name": "results", "type": "int256[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getPausedState", "outputs": [{"internalType": "bool", "name": "paused", "type": "bool"}, {"internalType": "uint256", "name": "pauseWindowEndTime", "type": "uint256"}, {"internalType": "uint256", "name": "bufferPeriodEndTime", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getPoolId", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getRate", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "index", "type": "uint256"}], "name": "getSample", "outputs": [{"internalType": "int256", "name": "logPairPrice", "type": "int256"}, {"internalType": "int256", "name": "accLogPairPrice", "type": "int256"}, {"internalType": "int256", "name": "logBptPrice", "type": "int256"}, {"internalType": "int256", "name": "accLogBptPrice", "type": "int256"}, {"internalType": "int256", "name": "logInvariant", "type": "int256"}, {"internalType": "int256", "name": "accLogInvariant", "type": "int256"}, {"internalType": "uint256", "name": "timestamp", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getSwapFeePercentage", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"components": [{"internalType": "enum IPriceOracle.Variable", "name": "variable", "type": "uint8"}, {"internalType": "uint256", "name": "secs", "type": "uint256"}, {"internalType": "uint256", "name": "ago", "type": "uint256"}], "internalType": "struct IPriceOracle.OracleAverageQuery[]", "name": "queries", "type": "tuple[]"}], "name": "getTimeWeightedAverage", "outputs": [{"internalType": "uint256[]", "name": "results", "type": "uint256[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getTotalSamples", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "pure", "type": "function"}, {"inputs": [], "name": "getVault", "outputs": [{"internalType": "contract IVault", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "gyroConfig", "outputs": [{"internalType": "contract IGyroConfig", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "addedValue", "type": "uint256"}], "name": "increaseAllowance", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "name", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}], "name": "nonces", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "onExitPool", "outputs": [{"internalType": "uint256[]", "name": "", "type": "uint256[]"}, {"internalType": "uint256[]", "name": "", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "onJoinPool", "outputs": [{"internalType": "uint256[]", "name": "amountsIn", "type": "uint256[]"}, {"internalType": "uint256[]", "name": "dueProtocolFeeAmounts", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"components": [{"internalType": "enum IVault.SwapKind", "name": "kind", "type": "uint8"}, {"internalType": "contract IERC20", "name": "tokenIn", "type": "address"}, {"internalType": "contract IERC20", "name": "tokenOut", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}, {"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "address", "name": "from", "type": "address"}, {"internalType": "address", "name": "to", "type": "address"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "internalType": "struct IPoolSwapStructs.SwapRequest", "name": "request", "type": "tuple"}, {"internalType": "uint256", "name": "balanceTokenIn", "type": "uint256"}, {"internalType": "uint256", "name": "balanceTokenOut", "type": "uint256"}], "name": "onSwap", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "pause", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "pauseManager", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "value", "type": "uint256"}, {"internalType": "uint256", "name": "deadline", "type": "uint256"}, {"internalType": "uint8", "name": "v", "type": "uint8"}, {"internalType": "bytes32", "name": "r", "type": "bytes32"}, {"internalType": "bytes32", "name": "s", "type": "bytes32"}], "name": "permit", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "queryExit", "outputs": [{"internalType": "uint256", "name": "bptIn", "type": "uint256"}, {"internalType": "uint256[]", "name": "amountsOut", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "queryJoin", "outputs": [{"internalType": "uint256", "name": "bptOut", "type": "uint256"}, {"internalType": "uint256[]", "name": "amountsIn", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_capManager", "type": "address"}], "name": "setCapManager", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"components": [{"internalType": "bool", "name": "capEnabled", "type": "bool"}, {"internalType": "uint120", "name": "perAddressCap", "type": "uint120"}, {"internalType": "uint128", "name": "globalCap", "type": "uint128"}], "internalType": "struct ICappedLiquidity.CapParams", "name": "params", "type": "tuple"}], "name": "setCapParams", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bool", "name": "paused", "type": "bool"}], "name": "setPaused", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}], "name": "setSwapFeePercentage", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "symbol", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "totalSupply", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transfer", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transferFrom", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "unpause", "outputs": [], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"112": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IAsset.sol", "113": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IAuthorizer.sol", "114": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IBasePool.sol", "115": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IFlashLoanRecipient.sol", "117": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IMinimalSwapInfoPool.sol", "118": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IPoolSwapStructs.sol", "119": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IProtocolFeesCollector.sol", "120": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IVault.sol", "128": "node_modules/@openzeppelin/contracts/utils/SafeCast.sol", "14": "contracts/CappedLiquidity.sol", "15": "contracts/ExtensibleWeightedPool2Tokens.sol", "17": "contracts/LocallyPausable.sol", "18": "contracts/eclp/GyroECLPMath.sol", "19": "contracts/eclp/GyroECLPOracleMath.sol", "20": "contracts/eclp/GyroECLPPool.sol", "21": "contracts/eclp/GyroECLPPoolErrors.sol", "36": "interfaces/ICappedLiquidity.sol", "39": "interfaces/IGyroConfig.sol", "41": "interfaces/ILocallyPausable.sol", "42": "libraries/GyroConfigKeys.sol", "43": "libraries/GyroErrors.sol", "44": "libraries/GyroFixedPoint.sol", "45": "libraries/GyroPoolMath.sol", "46": "libraries/SignedFixedPoint.sol", "48": "node_modules/@balancer-labs/v2-pool-utils/contracts/BalancerPoolToken.sol", "51": "node_modules/@balancer-labs/v2-pool-utils/contracts/BasePoolAuthorization.sol", "54": "node_modules/@balancer-labs/v2-pool-utils/contracts/interfaces/IPoolPriceOracle.sol", "55": "node_modules/@balancer-labs/v2-pool-utils/contracts/interfaces/IPriceOracle.sol", "56": "node_modules/@balancer-labs/v2-pool-utils/contracts/oracle/Buffer.sol", "57": "node_modules/@balancer-labs/v2-pool-utils/contracts/oracle/PoolPriceOracle.sol", "58": "node_modules/@balancer-labs/v2-pool-utils/contracts/oracle/QueryProcessor.sol", "59": "node_modules/@balancer-labs/v2-pool-utils/contracts/oracle/Samples.sol", "61": "node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedMath.sol", "63": "node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol", "64": "node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol", "65": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/Authentication.sol", "66": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol", "69": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol", "70": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/ISignaturesValidator.sol", "71": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol", "72": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/InputHelpers.sol", "73": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/LogCompression.sol", "75": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/TemporarilyPausable.sol", "76": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/WordCodec.sol", "77": "node_modules/@balancer-labs/v2-solidity-utils/contracts/math/FixedPoint.sol", "78": "node_modules/@balancer-labs/v2-solidity-utils/contracts/math/LogExpMath.sol", "79": "node_modules/@balancer-labs/v2-solidity-utils/contracts/math/Math.sol", "80": "node_modules/@balancer-labs/v2-solidity-utils/contracts/misc/IWETH.sol", "83": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/EIP712.sol", "84": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ERC20.sol", "85": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ERC20Permit.sol", "88": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol", "89": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20Permit.sol", "93": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/SafeMath.sol"}, "ast": {"absolutePath": "contracts/eclp/GyroECLPPool.sol", "exportedSymbols": {"Authentication": [34326], "BalancerPoolToken": [22027], "BaseMinimalSwapInfoPool": [20694], "BasePool": [23207], "BasePoolAuthorization": [23300], "BaseWeightedPool": [31538], "Buffer": [23372], "CappedLiquidity": [6715], "EIP712": [37561], "ERC20": [24495], "ERC20Permit": [34167], "Errors": [28064], "ExtensibleWeightedPool2Tokens": [9067], "FixedPoint": [34014], "GyroConfigKeys": [19229], "GyroECLPMath": [12097], "GyroECLPOracleMath": [12177], "GyroECLPPool": [13647], "GyroECLPPoolErrors": [13692], "GyroErrors": [17238], "GyroFixedPoint": [17898], "GyroPoolMath": [18686], "IAsset": [31817], "IAssetManager": [34249], "IAuthentication": [21815], "IAuthorizer": [26520], "IBasePool": [27113], "ICappedLiquidity": [19688], "IERC20": [27049], "IERC20Permit": [37597], "IFlashLoanRecipient": [31836], "IGyroConfig": [19214], "ILocallyPausable": [24877], "IMinimalSwapInfoPool": [24514], "IPoolPriceOracle": [27189], "IPoolSwapStructs": [27160], "IPriceOracle": [27244], "IProtocolFeesCollector": [31901], "ISignaturesValidator": [31779], "ITemporarilyPausable": [31798], "IVault": [20329], "IWETH": [31813], "InputHelpers": [18798], "LocallyPausable": [9232], "LogCompression": [19154], "LogExpMath": [29472], "Math": [19087], "PoolPriceOracle": [23765], "QueryProcessor": [26971], "SafeCast": [26190], "SafeMath": [34404], "Samples": [27641], "SignedFixedPoint": [25877], "TemporarilyPausable": [24017], "WeightedMath": [21792], "WeightedOracleMath": [23837], "WeightedPool2TokensMiscData": [19444], "WeightedPoolUserDataHelpers": [19654], "WordCodec": [30313], "_grequire": [17183, 17202], "_grevert": [17214, 17234], "_require": [27659], "_revert": [27667]}, "id": 13648, "license": "GPL-3.0-or-later", "nodeType": "SourceUnit", "nodes": [{"id": 12179, "literals": ["solidity", "0.7", ".6"], "nodeType": "PragmaDirective", "src": "688:22:20"}, {"id": 12180, "literals": ["experimental", "ABIEncoderV2"], "nodeType": "PragmaDirective", "src": "711:33:20"}, {"absolutePath": "libraries/GyroFixedPoint.sol", "file": "../../libraries/GyroFixedPoint.sol", "id": 12181, "nodeType": "ImportDirective", "scope": 13648, "sourceUnit": 17899, "src": "822:44:20", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol", "file": "@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol", "id": 12182, "nodeType": "ImportDirective", "scope": 13648, "sourceUnit": 19655, "src": "868:83:20", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol", "file": "@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol", "id": 12183, "nodeType": "ImportDirective", "scope": 13648, "sourceUnit": 19445, "src": "952:83:20", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/GyroConfigKeys.sol", "file": "../../libraries/GyroConfigKeys.sol", "id": 12184, "nodeType": "ImportDirective", "scope": 13648, "sourceUnit": 19230, "src": "1037:44:20", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/GyroErrors.sol", "file": "../../libraries/GyroErrors.sol", "id": 12185, "nodeType": "ImportDirective", "scope": 13648, "sourceUnit": 17239, "src": "1082:40:20", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/IGyroConfig.sol", "file": "../../interfaces/IGyroConfig.sol", "id": 12186, "nodeType": "ImportDirective", "scope": 13648, "sourceUnit": 19215, "src": "1123:42:20", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/GyroPoolMath.sol", "file": "../../libraries/GyroPoolMath.sol", "id": 12187, "nodeType": "ImportDirective", "scope": 13648, "sourceUnit": 18687, "src": "1166:42:20", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/ExtensibleWeightedPool2Tokens.sol", "file": "../ExtensibleWeightedPool2Tokens.sol", "id": 12188, "nodeType": "ImportDirective", "scope": 13648, "sourceUnit": 9068, "src": "1210:46:20", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/eclp/GyroECLPMath.sol", "file": "./GyroECLPMath.sol", "id": 12189, "nodeType": "ImportDirective", "scope": 13648, "sourceUnit": 12098, "src": "1257:28:20", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/eclp/GyroECLPOracleMath.sol", "file": "./GyroECLPOracleMath.sol", "id": 12190, "nodeType": "ImportDirective", "scope": 13648, "sourceUnit": 12178, "src": "1286:34:20", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/CappedLiquidity.sol", "file": "../CappedLiquidity.sol", "id": 12191, "nodeType": "ImportDirective", "scope": 13648, "sourceUnit": 6716, "src": "1321:32:20", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/LocallyPausable.sol", "file": "../LocallyPausable.sol", "id": 12192, "nodeType": "ImportDirective", "scope": 13648, "sourceUnit": 9233, "src": "1354:32:20", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 12193, "name": "ExtensibleWeightedPool2Tokens", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9067, "src": "1413:29:20", "typeDescriptions": {"typeIdentifier": "t_contract$_ExtensibleWeightedPool2Tokens_$9067", "typeString": "contract ExtensibleWeightedPool2Tokens"}}, "id": 12194, "nodeType": "InheritanceSpecifier", "src": "1413:29:20"}, {"baseName": {"id": 12195, "name": "CappedLiquidity", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 6715, "src": "1444:15:20", "typeDescriptions": {"typeIdentifier": "t_contract$_CappedLiquidity_$6715", "typeString": "contract CappedLiquidity"}}, "id": 12196, "nodeType": "InheritanceSpecifier", "src": "1444:15:20"}, {"baseName": {"id": 12197, "name": "LocallyPausable", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9232, "src": "1461:15:20", "typeDescriptions": {"typeIdentifier": "t_contract$_LocallyPausable_$9232", "typeString": "contract LocallyPausable"}}, "id": 12198, "nodeType": "InheritanceSpecifier", "src": "1461:15:20"}], "contractDependencies": [6715, 9067, 9232, 19688, 21815, 22027, 23300, 23765, 24017, 24495, 24514, 24877, 27049, 27113, 27160, 27189, 27244, 31798, 34167, 34326, 37561, 37597], "contractKind": "contract", "fullyImplemented": true, "id": 13647, "linearizedBaseContracts": [13647, 9232, 24877, 6715, 19688, 9067, 23765, 27244, 27189, 24017, 31798, 22027, 34167, 37561, 37597, 24495, 27049, 23300, 34326, 21815, 24514, 27113, 27160], "name": "GyroECLPPool", "nodeType": "ContractDefinition", "nodes": [{"id": 12201, "libraryName": {"id": 12199, "name": "GyroFixedPoint", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 17898, "src": "1489:14:20", "typeDescriptions": {"typeIdentifier": "t_contract$_GyroFixedPoint_$17898", "typeString": "library GyroFixedPoint"}}, "nodeType": "UsingForDirective", "src": "1483:33:20", "typeName": {"id": 12200, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1508:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"id": 12204, "libraryName": {"id": 12202, "name": "WeightedPoolUserDataHelpers", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 19654, "src": "1527:27:20", "typeDescriptions": {"typeIdentifier": "t_contract$_WeightedPoolUserDataHelpers_$19654", "typeString": "library WeightedPoolUserDataHelpers"}}, "nodeType": "UsingForDirective", "src": "1521:44:20", "typeName": {"id": 12203, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "1559:5:20", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}}, {"id": 12207, "libraryName": {"id": 12205, "name": "WeightedPool2TokensMiscData", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 19444, "src": "1576:27:20", "typeDescriptions": {"typeIdentifier": "t_contract$_WeightedPool2TokensMiscData_$19444", "typeString": "library WeightedPool2TokensMiscData"}}, "nodeType": "UsingForDirective", "src": "1570:46:20", "typeName": {"id": 12206, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1608:7:20", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}}, {"id": 12210, "libraryName": {"id": 12208, "name": "SafeCast", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 26190, "src": "1627:8:20", "typeDescriptions": {"typeIdentifier": "t_contract$_SafeCast_$26190", "typeString": "library SafeCast"}}, "nodeType": "UsingForDirective", "src": "1621:26:20", "typeName": {"id": 12209, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1640:6:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}}, {"id": 12213, "libraryName": {"id": 12211, "name": "SafeCast", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 26190, "src": "1658:8:20", "typeDescriptions": {"typeIdentifier": "t_contract$_SafeCast_$26190", "typeString": "library SafeCast"}}, "nodeType": "UsingForDirective", "src": "1652:27:20", "typeName": {"id": 12212, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1671:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"constant": true, "id": 12216, "mutability": "constant", "name": "_MINIMUM_BPT", "nodeType": "VariableDeclaration", "scope": 13647, "src": "1685:43:20", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12214, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1685:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "316536", "id": 12215, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1725:3:20", "typeDescriptions": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}, "value": "1e6"}, "visibility": "private"}, {"constant": false, "documentation": {"id": 12217, "nodeType": "StructuredDocumentation", "src": "1735:39:20", "text": "@notice Parameters of the ECLP pool"}, "functionSelector": "bcc43692", "id": 12219, "mutability": "immutable", "name": "_paramsAlpha", "nodeType": "VariableDeclaration", "scope": 13647, "src": "1779:36:20", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12218, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1779:6:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "1469ed6c", "id": 12221, "mutability": "immutable", "name": "_paramsBeta", "nodeType": "VariableDeclaration", "scope": 13647, "src": "1821:35:20", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12220, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1821:6:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "66e9ddf4", "id": 12223, "mutability": "immutable", "name": "_paramsC", "nodeType": "VariableDeclaration", "scope": 13647, "src": "1862:32:20", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12222, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1862:6:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "c4fea7c9", "id": 12225, "mutability": "immutable", "name": "_paramsS", "nodeType": "VariableDeclaration", "scope": 13647, "src": "1900:32:20", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12224, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1900:6:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "591a137f", "id": 12227, "mutability": "immutable", "name": "_paramsLambda", "nodeType": "VariableDeclaration", "scope": 13647, "src": "1938:37:20", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12226, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1938:6:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "58ecbcc3", "id": 12229, "mutability": "immutable", "name": "_tauAlphaX", "nodeType": "VariableDeclaration", "scope": 13647, "src": "1981:34:20", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12228, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1981:6:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "ddb387c9", "id": 12231, "mutability": "immutable", "name": "_tauAlphaY", "nodeType": "VariableDeclaration", "scope": 13647, "src": "2021:34:20", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12230, "name": "int256", "nodeType": "ElementaryTypeName", "src": "2021:6:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "7ef355cd", "id": 12233, "mutability": "immutable", "name": "_tauBetaX", "nodeType": "VariableDeclaration", "scope": 13647, "src": "2061:33:20", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12232, "name": "int256", "nodeType": "ElementaryTypeName", "src": "2061:6:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "1d86bb99", "id": 12235, "mutability": "immutable", "name": "_tauBetaY", "nodeType": "VariableDeclaration", "scope": 13647, "src": "2100:33:20", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12234, "name": "int256", "nodeType": "ElementaryTypeName", "src": "2100:6:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "2024cf41", "id": 12237, "mutability": "immutable", "name": "_u", "nodeType": "VariableDeclaration", "scope": 13647, "src": "2139:26:20", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12236, "name": "int256", "nodeType": "ElementaryTypeName", "src": "2139:6:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "c2c3bd6a", "id": 12239, "mutability": "immutable", "name": "_v", "nodeType": "VariableDeclaration", "scope": 13647, "src": "2171:26:20", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12238, "name": "int256", "nodeType": "ElementaryTypeName", "src": "2171:6:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "8143eb76", "id": 12241, "mutability": "immutable", "name": "_w", "nodeType": "VariableDeclaration", "scope": 13647, "src": "2203:26:20", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12240, "name": "int256", "nodeType": "ElementaryTypeName", "src": "2203:6:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "dc09f3aa", "id": 12243, "mutability": "immutable", "name": "_z", "nodeType": "VariableDeclaration", "scope": 13647, "src": "2235:26:20", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12242, "name": "int256", "nodeType": "ElementaryTypeName", "src": "2235:6:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "ce482387", "id": 12245, "mutability": "immutable", "name": "_dSq", "nodeType": "VariableDeclaration", "scope": 13647, "src": "2267:28:20", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12244, "name": "int256", "nodeType": "ElementaryTypeName", "src": "2267:6:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "44bbdb55", "id": 12247, "mutability": "mutable", "name": "gyroConfig", "nodeType": "VariableDeclaration", "scope": 13647, "src": "2302:29:20", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$19214", "typeString": "contract IGyroConfig"}, "typeName": {"id": 12246, "name": "IGyroConfig", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 19214, "src": "2302:11:20", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$19214", "typeString": "contract IGyroConfig"}}, "visibility": "public"}, {"canonicalName": "GyroECLPPool.GyroParams", "id": 12260, "members": [{"constant": false, "id": 12249, "mutability": "mutable", "name": "baseParams", "nodeType": "VariableDeclaration", "scope": 12260, "src": "2366:24:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$6842_storage_ptr", "typeString": "struct ExtensibleWeightedPool2Tokens.NewPoolParams"}, "typeName": {"id": 12248, "name": "NewPoolParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 6842, "src": "2366:13:20", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$6842_storage_ptr", "typeString": "struct ExtensibleWeightedPool2Tokens.NewPoolParams"}}, "visibility": "internal"}, {"constant": false, "id": 12251, "mutability": "mutable", "name": "eclpParams", "nodeType": "VariableDeclaration", "scope": 12260, "src": "2400:30:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_storage_ptr", "typeString": "struct GyroECLPMath.Params"}, "typeName": {"id": 12250, "name": "GyroECLPMath.Params", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9297, "src": "2400:19:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_storage_ptr", "typeString": "struct GyroECLPMath.Params"}}, "visibility": "internal"}, {"constant": false, "id": 12253, "mutability": "mutable", "name": "derivedEclpParams", "nodeType": "VariableDeclaration", "scope": 12260, "src": "2440:44:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_storage_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}, "typeName": {"id": 12252, "name": "GyroECLPMath.DerivedParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9312, "src": "2440:26:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_storage_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}}, "visibility": "internal"}, {"constant": false, "id": 12255, "mutability": "mutable", "name": "capManager", "nodeType": "VariableDeclaration", "scope": 12260, "src": "2494:18:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 12254, "name": "address", "nodeType": "ElementaryTypeName", "src": "2494:7:20", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 12257, "mutability": "mutable", "name": "capParams", "nodeType": "VariableDeclaration", "scope": 12260, "src": "2522:19:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_CapParams_$19672_storage_ptr", "typeString": "struct ICappedLiquidity.CapParams"}, "typeName": {"id": 12256, "name": "CapParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 19672, "src": "2522:9:20", "typeDescriptions": {"typeIdentifier": "t_struct$_CapParams_$19672_storage_ptr", "typeString": "struct ICappedLiquidity.CapParams"}}, "visibility": "internal"}, {"constant": false, "id": 12259, "mutability": "mutable", "name": "pauseManager", "nodeType": "VariableDeclaration", "scope": 12260, "src": "2551:20:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 12258, "name": "address", "nodeType": "ElementaryTypeName", "src": "2551:7:20", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "name": "GyroParams", "nodeType": "StructDefinition", "scope": 13647, "src": "2338:240:20", "visibility": "public"}, {"anonymous": false, "id": 12264, "name": "ECLPParamsValidated", "nodeType": "EventDefinition", "parameters": {"id": 12263, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12262, "indexed": false, "mutability": "mutable", "name": "paramsValidated", "nodeType": "VariableDeclaration", "scope": 12264, "src": "2610:20:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 12261, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2610:4:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "2609:22:20"}, "src": "2584:48:20"}, {"anonymous": false, "id": 12268, "name": "ECLPDerivedParamsValidated", "nodeType": "EventDefinition", "parameters": {"id": 12267, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12266, "indexed": false, "mutability": "mutable", "name": "derivedParamsValidated", "nodeType": "VariableDeclaration", "scope": 12268, "src": "2670:27:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 12265, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2670:4:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "2669:29:20"}, "src": "2637:62:20"}, {"anonymous": false, "id": 12272, "name": "InvariantAterInitializeJoin", "nodeType": "EventDefinition", "parameters": {"id": 12271, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12270, "indexed": false, "mutability": "mutable", "name": "invariantAfterJoin", "nodeType": "VariableDeclaration", "scope": 12272, "src": "2739:26:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12269, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2739:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2738:28:20"}, "src": "2705:62:20"}, {"anonymous": false, "id": 12278, "name": "InvariantOldAndNew", "nodeType": "EventDefinition", "parameters": {"id": 12277, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12274, "indexed": false, "mutability": "mutable", "name": "oldInvariant", "nodeType": "VariableDeclaration", "scope": 12278, "src": "2797:20:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12273, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2797:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 12276, "indexed": false, "mutability": "mutable", "name": "newInvariant", "nodeType": "VariableDeclaration", "scope": 12278, "src": "2819:20:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12275, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2819:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2796:44:20"}, "src": "2772:69:20"}, {"anonymous": false, "id": 12287, "name": "SwapParams", "nodeType": "EventDefinition", "parameters": {"id": 12286, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12281, "indexed": false, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 12287, "src": "2864:18:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 12279, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2864:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12280, "nodeType": "ArrayTypeName", "src": "2864:9:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 12283, "indexed": false, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 12287, "src": "2884:30:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9317_memory_ptr", "typeString": "struct GyroECLPMath.Vector2"}, "typeName": {"id": 12282, "name": "GyroECLPMath.Vector2", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9317, "src": "2884:20:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9317_storage_ptr", "typeString": "struct GyroECLPMath.Vector2"}}, "visibility": "internal"}, {"constant": false, "id": 12285, "indexed": false, "mutability": "mutable", "name": "amount", "nodeType": "VariableDeclaration", "scope": 12287, "src": "2916:14:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12284, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2916:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2863:68:20"}, "src": "2847:85:20"}, {"anonymous": false, "id": 12291, "name": "OracleIndexUpdated", "nodeType": "EventDefinition", "parameters": {"id": 12290, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12289, "indexed": false, "mutability": "mutable", "name": "oracleUpdatedIndex", "nodeType": "VariableDeclaration", "scope": 12291, "src": "2963:26:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12288, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2963:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2962:28:20"}, "src": "2938:53:20"}, {"body": {"id": 12421, "nodeType": "Block", "src": "3225:1142:20", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 12318, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 12313, "name": "configAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12295, "src": "3245:13:20", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "307830", "id": 12316, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3270:3:20", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0x0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 12315, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3262:7:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 12314, "name": "address", "nodeType": "ElementaryTypeName", "src": "3262:7:20", "typeDescriptions": {}}}, "id": 12317, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3262:12:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "3245:29:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 12319, "name": "GyroECLPPoolErrors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13692, "src": "3276:18:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPPoolErrors_$13692_$", "typeString": "type(library GyroECLPPoolErrors)"}}, "id": 12320, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ADDRESS_IS_ZERO_ADDRESS", "nodeType": "MemberAccess", "referencedDeclaration": 13652, "src": "3276:42:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 12312, "name": "_grequire", "nodeType": "Identifier", "overloadedDeclarations": [17183, 17202], "referencedDeclaration": 17183, "src": "3235:9:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 12321, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3235:84:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12322, "nodeType": "ExpressionStatement", "src": "3235:84:20"}, {"expression": {"arguments": [{"expression": {"id": 12326, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12293, "src": "3358:6:20", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12260_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12327, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "eclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 12251, "src": "3358:17:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}], "expression": {"id": 12323, "name": "GyroECLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12097, "src": "3330:12:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPMath_$12097_$", "typeString": "type(library GyroECLPMath)"}}, "id": 12325, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "validateParams", "nodeType": "MemberAccess", "referencedDeclaration": 9405, "src": "3330:27:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_Params_$9297_memory_ptr_$returns$__$", "typeString": "function (struct GyroECLPMath.Params memory) pure"}}, "id": 12328, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3330:46:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12329, "nodeType": "ExpressionStatement", "src": "3330:46:20"}, {"eventCall": {"arguments": [{"hexValue": "74727565", "id": 12331, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3411:4:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 12330, "name": "ECLPParamsValidated", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12264, "src": "3391:19:20", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$", "typeString": "function (bool)"}}, "id": 12332, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3391:25:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12333, "nodeType": "EmitStatement", "src": "3386:30:20"}, {"expression": {"arguments": [{"expression": {"id": 12337, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12293, "src": "3468:6:20", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12260_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12338, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "eclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 12251, "src": "3468:17:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"expression": {"id": 12339, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12293, "src": "3487:6:20", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12260_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12340, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "derivedEclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 12253, "src": "3487:24:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}], "expression": {"id": 12334, "name": "GyroECLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12097, "src": "3427:12:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPMath_$12097_$", "typeString": "type(library GyroECLPMath)"}}, "id": 12336, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "validateDerivedParamsLimits", "nodeType": "MemberAccess", "referencedDeclaration": 9541, "src": "3427:40:20", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_struct$_Params_$9297_memory_ptr_$_t_struct$_DerivedParams_$9312_memory_ptr_$returns$__$", "typeString": "function (struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory) pure"}}, "id": 12341, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3427:85:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12342, "nodeType": "ExpressionStatement", "src": "3427:85:20"}, {"eventCall": {"arguments": [{"hexValue": "74727565", "id": 12344, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3554:4:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 12343, "name": "ECLPDerivedParamsValidated", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12268, "src": "3527:26:20", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$", "typeString": "function (bool)"}}, "id": 12345, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3527:32:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12346, "nodeType": "EmitStatement", "src": "3522:37:20"}, {"expression": {"id": 12369, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 12347, "name": "_paramsAlpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12219, "src": "3571:12:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12348, "name": "_paramsBeta", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12221, "src": "3585:11:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12349, "name": "_paramsC", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12223, "src": "3598:8:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12350, "name": "_paramsS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12225, "src": "3608:8:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12351, "name": "_paramsLambda", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12227, "src": "3618:13:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 12352, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "3570:62:20", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256,int256,int256,int256)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"components": [{"expression": {"expression": {"id": 12353, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12293, "src": "3649:6:20", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12260_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12354, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "eclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 12251, "src": "3649:17:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, "id": 12355, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "alpha", "nodeType": "MemberAccess", "referencedDeclaration": 9288, "src": "3649:23:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"id": 12356, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12293, "src": "3686:6:20", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12260_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12357, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "eclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 12251, "src": "3686:17:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, "id": 12358, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "beta", "nodeType": "MemberAccess", "referencedDeclaration": 9290, "src": "3686:22:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"id": 12359, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12293, "src": "3722:6:20", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12260_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12360, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "eclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 12251, "src": "3722:17:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, "id": 12361, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "c", "nodeType": "MemberAccess", "referencedDeclaration": 9292, "src": "3722:19:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"id": 12362, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12293, "src": "3755:6:20", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12260_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12363, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "eclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 12251, "src": "3755:17:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, "id": 12364, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "s", "nodeType": "MemberAccess", "referencedDeclaration": 9294, "src": "3755:19:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"id": 12365, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12293, "src": "3788:6:20", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12260_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12366, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "eclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 12251, "src": "3788:17:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, "id": 12367, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "lambda", "nodeType": "MemberAccess", "referencedDeclaration": 9296, "src": "3788:24:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 12368, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "3635:187:20", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256,int256,int256,int256)"}}, "src": "3570:252:20", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12370, "nodeType": "ExpressionStatement", "src": "3570:252:20"}, {"expression": {"id": 12413, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 12371, "name": "_tauAlphaX", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12229, "src": "3834:10:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12372, "name": "_tauAlphaY", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12231, "src": "3846:10:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12373, "name": "_tauBetaX", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12233, "src": "3858:9:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12374, "name": "_tauBetaY", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12235, "src": "3869:9:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12375, "name": "_u", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12237, "src": "3880:2:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12376, "name": "_v", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12239, "src": "3884:2:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12377, "name": "_w", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12241, "src": "3888:2:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12378, "name": "_z", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12243, "src": "3892:2:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12379, "name": "_dSq", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12245, "src": "3896:4:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 12380, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "3833:68:20", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256,int256,int256,int256,int256,int256,int256,int256)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"components": [{"expression": {"expression": {"expression": {"id": 12381, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12293, "src": "3918:6:20", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12260_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12382, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "derivedEclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 12253, "src": "3918:24:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 12383, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tauAlpha", "nodeType": "MemberAccess", "referencedDeclaration": 9299, "src": "3918:33:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9317_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, "id": 12384, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "x", "nodeType": "MemberAccess", "referencedDeclaration": 9314, "src": "3918:35:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"expression": {"id": 12385, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12293, "src": "3967:6:20", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12260_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12386, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "derivedEclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 12253, "src": "3967:24:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 12387, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tauAlpha", "nodeType": "MemberAccess", "referencedDeclaration": 9299, "src": "3967:33:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9317_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, "id": 12388, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "y", "nodeType": "MemberAccess", "referencedDeclaration": 9316, "src": "3967:35:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"expression": {"id": 12389, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12293, "src": "4016:6:20", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12260_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12390, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "derivedEclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 12253, "src": "4016:24:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 12391, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tauBeta", "nodeType": "MemberAccess", "referencedDeclaration": 9301, "src": "4016:32:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9317_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, "id": 12392, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "x", "nodeType": "MemberAccess", "referencedDeclaration": 9314, "src": "4016:34:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"expression": {"id": 12393, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12293, "src": "4064:6:20", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12260_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12394, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "derivedEclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 12253, "src": "4064:24:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 12395, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tauBeta", "nodeType": "MemberAccess", "referencedDeclaration": 9301, "src": "4064:32:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9317_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, "id": 12396, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "y", "nodeType": "MemberAccess", "referencedDeclaration": 9316, "src": "4064:34:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"id": 12397, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12293, "src": "4112:6:20", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12260_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12398, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "derivedEclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 12253, "src": "4112:24:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 12399, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "u", "nodeType": "MemberAccess", "referencedDeclaration": 9303, "src": "4112:26:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"id": 12400, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12293, "src": "4152:6:20", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12260_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12401, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "derivedEclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 12253, "src": "4152:24:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 12402, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "v", "nodeType": "MemberAccess", "referencedDeclaration": 9305, "src": "4152:26:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"id": 12403, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12293, "src": "4192:6:20", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12260_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12404, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "derivedEclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 12253, "src": "4192:24:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 12405, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "w", "nodeType": "MemberAccess", "referencedDeclaration": 9307, "src": "4192:26:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"id": 12406, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12293, "src": "4232:6:20", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12260_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12407, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "derivedEclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 12253, "src": "4232:24:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 12408, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "z", "nodeType": "MemberAccess", "referencedDeclaration": 9309, "src": "4232:26:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"id": 12409, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12293, "src": "4272:6:20", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12260_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12410, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "derivedEclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 12253, "src": "4272:24:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 12411, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "dSq", "nodeType": "MemberAccess", "referencedDeclaration": 9311, "src": "4272:28:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 12412, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "3904:406:20", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256,int256,int256,int256,int256,int256,int256,int256)"}}, "src": "3833:477:20", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12414, "nodeType": "ExpressionStatement", "src": "3833:477:20"}, {"expression": {"id": 12419, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 12415, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12247, "src": "4321:10:20", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$19214", "typeString": "contract IGyroConfig"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 12417, "name": "configAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12295, "src": "4346:13:20", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 12416, "name": "IGyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19214, "src": "4334:11:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IGyroConfig_$19214_$", "typeString": "type(contract IGyroConfig)"}}, "id": 12418, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4334:26:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$19214", "typeString": "contract IGyroConfig"}}, "src": "4321:39:20", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$19214", "typeString": "contract IGyroConfig"}}, "id": 12420, "nodeType": "ExpressionStatement", "src": "4321:39:20"}]}, "id": 12422, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"expression": {"id": 12298, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12293, "src": "3096:6:20", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12260_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12299, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "baseParams", "nodeType": "MemberAccess", "referencedDeclaration": 12249, "src": "3096:17:20", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$6842_memory_ptr", "typeString": "struct ExtensibleWeightedPool2Tokens.NewPoolParams memory"}}], "id": 12300, "modifierName": {"id": 12297, "name": "ExtensibleWeightedPool2Tokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9067, "src": "3066:29:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ExtensibleWeightedPool2Tokens_$9067_$", "typeString": "type(contract ExtensibleWeightedPool2Tokens)"}}, "nodeType": "ModifierInvocation", "src": "3066:48:20"}, {"arguments": [{"expression": {"id": 12302, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12293, "src": "3139:6:20", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12260_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12303, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "capManager", "nodeType": "MemberAccess", "referencedDeclaration": 12255, "src": "3139:17:20", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 12304, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12293, "src": "3158:6:20", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12260_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12305, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "capParams", "nodeType": "MemberAccess", "referencedDeclaration": 12257, "src": "3158:16:20", "typeDescriptions": {"typeIdentifier": "t_struct$_CapParams_$19672_memory_ptr", "typeString": "struct ICappedLiquidity.CapParams memory"}}], "id": 12306, "modifierName": {"id": 12301, "name": "CappedLiquidity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6715, "src": "3123:15:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_CappedLiquidity_$6715_$", "typeString": "type(contract CappedLiquidity)"}}, "nodeType": "ModifierInvocation", "src": "3123:52:20"}, {"arguments": [{"expression": {"id": 12308, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12293, "src": "3200:6:20", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12260_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 12309, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "pauseManager", "nodeType": "MemberAccess", "referencedDeclaration": 12259, "src": "3200:19:20", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 12310, "modifierName": {"id": 12307, "name": "LocallyPausable", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9232, "src": "3184:15:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_LocallyPausable_$9232_$", "typeString": "type(contract LocallyPausable)"}}, "nodeType": "ModifierInvocation", "src": "3184:36:20"}], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 12296, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12293, "mutability": "mutable", "name": "params", "nodeType": "VariableDeclaration", "scope": 12422, "src": "3009:24:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12260_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams"}, "typeName": {"id": 12292, "name": "GyroParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 12260, "src": "3009:10:20", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$12260_storage_ptr", "typeString": "struct GyroECLPPool.GyroParams"}}, "visibility": "internal"}, {"constant": false, "id": 12295, "mutability": "mutable", "name": "configAddress", "nodeType": "VariableDeclaration", "scope": 12422, "src": "3035:21:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 12294, "name": "address", "nodeType": "ElementaryTypeName", "src": "3035:7:20", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "3008:49:20"}, "returnParameters": {"id": 12311, "nodeType": "ParameterList", "parameters": [], "src": "3225:0:20"}, "scope": 13647, "src": "2997:1370:20", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 12492, "nodeType": "Block", "src": "4572:319:20", "statements": [{"expression": {"id": 12448, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"expression": {"id": 12430, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12426, "src": "4583:6:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, "id": 12432, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "alpha", "nodeType": "MemberAccess", "referencedDeclaration": 9288, "src": "4583:12:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"id": 12433, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12426, "src": "4597:6:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, "id": 12434, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "beta", "nodeType": "MemberAccess", "referencedDeclaration": 9290, "src": "4597:11:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"id": 12435, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12426, "src": "4610:6:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, "id": 12436, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "c", "nodeType": "MemberAccess", "referencedDeclaration": 9292, "src": "4610:8:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"id": 12437, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12426, "src": "4620:6:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, "id": 12438, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "s", "nodeType": "MemberAccess", "referencedDeclaration": 9294, "src": "4620:8:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"id": 12439, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12426, "src": "4630:6:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, "id": 12440, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "lambda", "nodeType": "MemberAccess", "referencedDeclaration": 9296, "src": "4630:13:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 12441, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "4582:62:20", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256,int256,int256,int256)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"components": [{"id": 12442, "name": "_paramsAlpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12219, "src": "4648:12:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12443, "name": "_paramsBeta", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12221, "src": "4662:11:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12444, "name": "_paramsC", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12223, "src": "4675:8:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12445, "name": "_paramsS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12225, "src": "4685:8:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12446, "name": "_paramsLambda", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12227, "src": "4695:13:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 12447, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4647:62:20", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256,int256,int256,int256)"}}, "src": "4582:127:20", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12449, "nodeType": "ExpressionStatement", "src": "4582:127:20"}, {"expression": {"id": 12470, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"expression": {"expression": {"id": 12450, "name": "d", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12428, "src": "4720:1:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 12453, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tauAlpha", "nodeType": "MemberAccess", "referencedDeclaration": 9299, "src": "4720:10:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9317_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, "id": 12454, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "x", "nodeType": "MemberAccess", "referencedDeclaration": 9314, "src": "4720:12:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"id": 12455, "name": "d", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12428, "src": "4734:1:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 12456, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tauAlpha", "nodeType": "MemberAccess", "referencedDeclaration": 9299, "src": "4734:10:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9317_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, "id": 12457, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "y", "nodeType": "MemberAccess", "referencedDeclaration": 9316, "src": "4734:12:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"id": 12458, "name": "d", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12428, "src": "4748:1:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 12459, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tauBeta", "nodeType": "MemberAccess", "referencedDeclaration": 9301, "src": "4748:9:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9317_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, "id": 12460, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "x", "nodeType": "MemberAccess", "referencedDeclaration": 9314, "src": "4748:11:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"id": 12461, "name": "d", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12428, "src": "4761:1:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 12462, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tauBeta", "nodeType": "MemberAccess", "referencedDeclaration": 9301, "src": "4761:9:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9317_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, "id": 12463, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "y", "nodeType": "MemberAccess", "referencedDeclaration": 9316, "src": "4761:11:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 12464, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "4719:54:20", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256,int256,int256)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"components": [{"id": 12465, "name": "_tauAlphaX", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12229, "src": "4777:10:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12466, "name": "_tauAlphaY", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12231, "src": "4789:10:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12467, "name": "_tauBetaX", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12233, "src": "4801:9:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12468, "name": "_tauBetaY", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12235, "src": "4812:9:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 12469, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4776:46:20", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256,int256,int256)"}}, "src": "4719:103:20", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12471, "nodeType": "ExpressionStatement", "src": "4719:103:20"}, {"expression": {"id": 12490, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"expression": {"id": 12472, "name": "d", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12428, "src": "4833:1:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 12474, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "u", "nodeType": "MemberAccess", "referencedDeclaration": 9303, "src": "4833:3:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"id": 12475, "name": "d", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12428, "src": "4838:1:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 12476, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "v", "nodeType": "MemberAccess", "referencedDeclaration": 9305, "src": "4838:3:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"id": 12477, "name": "d", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12428, "src": "4843:1:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 12478, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "w", "nodeType": "MemberAccess", "referencedDeclaration": 9307, "src": "4843:3:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"id": 12479, "name": "d", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12428, "src": "4848:1:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 12480, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "z", "nodeType": "MemberAccess", "referencedDeclaration": 9309, "src": "4848:3:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"id": 12481, "name": "d", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12428, "src": "4853:1:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 12482, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "dSq", "nodeType": "MemberAccess", "referencedDeclaration": 9311, "src": "4853:5:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 12483, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "4832:27:20", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256,int256,int256,int256)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"components": [{"id": 12484, "name": "_u", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12237, "src": "4863:2:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12485, "name": "_v", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12239, "src": "4867:2:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12486, "name": "_w", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12241, "src": "4871:2:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12487, "name": "_z", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12243, "src": "4875:2:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12488, "name": "_dSq", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12245, "src": "4879:4:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 12489, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4862:22:20", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256,int256,int256,int256)"}}, "src": "4832:52:20", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12491, "nodeType": "ExpressionStatement", "src": "4832:52:20"}]}, "documentation": {"id": 12423, "nodeType": "StructuredDocumentation", "src": "4373:66:20", "text": "@dev reconstructs ECLP params structs from immutable arrays "}, "id": 12493, "implemented": true, "kind": "function", "modifiers": [], "name": "reconstructECLPParams", "nodeType": "FunctionDefinition", "parameters": {"id": 12424, "nodeType": "ParameterList", "parameters": [], "src": "4474:2:20"}, "returnParameters": {"id": 12429, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12426, "mutability": "mutable", "name": "params", "nodeType": "VariableDeclaration", "scope": 12493, "src": "4500:33:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params"}, "typeName": {"id": 12425, "name": "GyroECLPMath.Params", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9297, "src": "4500:19:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_storage_ptr", "typeString": "struct GyroECLPMath.Params"}}, "visibility": "internal"}, {"constant": false, "id": 12428, "mutability": "mutable", "name": "d", "nodeType": "VariableDeclaration", "scope": 12493, "src": "4535:35:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}, "typeName": {"id": 12427, "name": "GyroECLPMath.DerivedParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9312, "src": "4535:26:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_storage_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}}, "visibility": "internal"}], "src": "4499:72:20"}, "scope": 13647, "src": "4444:447:20", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 12503, "nodeType": "Block", "src": "5017:47:20", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 12500, "name": "reconstructECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12493, "src": "5034:21:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_Params_$9297_memory_ptr_$_t_struct$_DerivedParams_$9312_memory_ptr_$", "typeString": "function () view returns (struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "id": 12501, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5034:23:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_struct$_Params_$9297_memory_ptr_$_t_struct$_DerivedParams_$9312_memory_ptr_$", "typeString": "tuple(struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "functionReturnParameters": 12499, "id": 12502, "nodeType": "Return", "src": "5027:30:20"}]}, "functionSelector": "7be219a2", "id": 12504, "implemented": true, "kind": "function", "modifiers": [], "name": "getECLPParams", "nodeType": "FunctionDefinition", "parameters": {"id": 12494, "nodeType": "ParameterList", "parameters": [], "src": "4919:2:20"}, "returnParameters": {"id": 12499, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12496, "mutability": "mutable", "name": "params", "nodeType": "VariableDeclaration", "scope": 12504, "src": "4945:33:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params"}, "typeName": {"id": 12495, "name": "GyroECLPMath.Params", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9297, "src": "4945:19:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_storage_ptr", "typeString": "struct GyroECLPMath.Params"}}, "visibility": "internal"}, {"constant": false, "id": 12498, "mutability": "mutable", "name": "d", "nodeType": "VariableDeclaration", "scope": 12504, "src": "4980:35:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}, "typeName": {"id": 12497, "name": "GyroECLPMath.DerivedParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9312, "src": "4980:26:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_storage_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}}, "visibility": "internal"}], "src": "4944:72:20"}, "scope": 13647, "src": "4897:167:20", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"baseFunctions": [7432], "body": {"id": 12744, "nodeType": "Block", "src": "5890:3336:20", "statements": [{"assignments": [12524], "declarations": [{"constant": false, "id": 12524, "mutability": "mutable", "name": "tokenInIsToken0", "nodeType": "VariableDeclaration", "scope": 12744, "src": "5900:20:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 12523, "name": "bool", "nodeType": "ElementaryTypeName", "src": "5900:4:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "id": 12525, "nodeType": "VariableDeclarationStatement", "src": "5900:20:20"}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 12534, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_contract$_IERC20_$27049", "typeString": "contract IERC20"}, "id": 12529, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 12526, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12507, "src": "5935:7:20", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27159_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 12527, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenIn", "nodeType": "MemberAccess", "referencedDeclaration": 27144, "src": "5935:15:20", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$27049", "typeString": "contract IERC20"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 12528, "name": "_token0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6770, "src": "5954:7:20", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$27049", "typeString": "contract IERC20"}}, "src": "5935:26:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_contract$_IERC20_$27049", "typeString": "contract IERC20"}, "id": 12533, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 12530, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12507, "src": "5965:7:20", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27159_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 12531, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenOut", "nodeType": "MemberAccess", "referencedDeclaration": 27146, "src": "5965:16:20", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$27049", "typeString": "contract IERC20"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 12532, "name": "_token1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6772, "src": "5985:7:20", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$27049", "typeString": "contract IERC20"}}, "src": "5965:27:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "5935:57:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 12548, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_contract$_IERC20_$27049", "typeString": "contract IERC20"}, "id": 12543, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 12540, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12507, "src": "6051:7:20", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27159_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 12541, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenIn", "nodeType": "MemberAccess", "referencedDeclaration": 27144, "src": "6051:15:20", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$27049", "typeString": "contract IERC20"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 12542, "name": "_token1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6772, "src": "6070:7:20", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$27049", "typeString": "contract IERC20"}}, "src": "6051:26:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_contract$_IERC20_$27049", "typeString": "contract IERC20"}, "id": 12547, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 12544, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12507, "src": "6081:7:20", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27159_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 12545, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenOut", "nodeType": "MemberAccess", "referencedDeclaration": 27146, "src": "6081:16:20", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$27049", "typeString": "contract IERC20"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 12546, "name": "_token0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6770, "src": "6101:7:20", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$27049", "typeString": "contract IERC20"}}, "src": "6081:27:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "6051:57:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 12559, "nodeType": "Block", "src": "6164:76:20", "statements": [{"expression": {"arguments": [{"expression": {"id": 12555, "name": "GyroECLPPoolErrors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13692, "src": "6186:18:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPPoolErrors_$13692_$", "typeString": "type(library GyroECLPPoolErrors)"}}, "id": 12556, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "TOKEN_IN_IS_NOT_TOKEN_0", "nodeType": "MemberAccess", "referencedDeclaration": 13655, "src": "6186:42:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 12554, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 27667, "src": "6178:7:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$", "typeString": "function (uint256) pure"}}, "id": 12557, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6178:51:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12558, "nodeType": "ExpressionStatement", "src": "6178:51:20"}]}, "id": 12560, "nodeType": "IfStatement", "src": "6047:193:20", "trueBody": {"id": 12553, "nodeType": "Block", "src": "6110:48:20", "statements": [{"expression": {"id": 12551, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 12549, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12524, "src": "6124:15:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "66616c7365", "id": 12550, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "6142:5:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "src": "6124:23:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 12552, "nodeType": "ExpressionStatement", "src": "6124:23:20"}]}}, "id": 12561, "nodeType": "IfStatement", "src": "5931:309:20", "trueBody": {"id": 12539, "nodeType": "Block", "src": "5994:47:20", "statements": [{"expression": {"id": 12537, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 12535, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12524, "src": "6008:15:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 12536, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "6026:4:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "6008:22:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 12538, "nodeType": "ExpressionStatement", "src": "6008:22:20"}]}}, {"assignments": [12563], "declarations": [{"constant": false, "id": 12563, "mutability": "mutable", "name": "scalingFactorTokenIn", "nodeType": "VariableDeclaration", "scope": 12744, "src": "6250:28:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12562, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6250:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 12567, "initialValue": {"arguments": [{"id": 12565, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12524, "src": "6296:15:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 12564, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8796, "src": "6281:14:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 12566, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6281:31:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6250:62:20"}, {"assignments": [12569], "declarations": [{"constant": false, "id": 12569, "mutability": "mutable", "name": "scalingFactorTokenOut", "nodeType": "VariableDeclaration", "scope": 12744, "src": "6322:29:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12568, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6322:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 12574, "initialValue": {"arguments": [{"id": 12572, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "6369:16:20", "subExpression": {"id": 12571, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12524, "src": "6370:15:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 12570, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8796, "src": "6354:14:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 12573, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6354:32:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6322:64:20"}, {"expression": {"id": 12580, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 12575, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12509, "src": "6440:14:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 12577, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12509, "src": "6466:14:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 12578, "name": "scalingFactorTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12563, "src": "6482:20:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 12576, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8813, "src": "6457:8:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 12579, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6457:46:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6440:63:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12581, "nodeType": "ExpressionStatement", "src": "6440:63:20"}, {"expression": {"id": 12587, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 12582, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12511, "src": "6513:15:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 12584, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12511, "src": "6540:15:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 12585, "name": "scalingFactorTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12569, "src": "6557:21:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 12583, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8813, "src": "6531:8:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 12586, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6531:48:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6513:66:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12588, "nodeType": "ExpressionStatement", "src": "6513:66:20"}, {"assignments": [12593], "declarations": [{"constant": false, "id": 12593, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 12744, "src": "6777:25:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 12591, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6777:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12592, "nodeType": "ArrayTypeName", "src": "6777:9:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 12599, "initialValue": {"arguments": [{"id": 12595, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12509, "src": "6829:14:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 12596, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12511, "src": "6845:15:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 12597, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12524, "src": "6862:15:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 12594, "name": "_balancesFromTokenInOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13336, "src": "6805:23:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256,uint256,bool) pure returns (uint256[] memory)"}}, "id": 12598, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6805:73:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "6777:101:20"}, {"assignments": [12603, 12605], "declarations": [{"constant": false, "id": 12603, "mutability": "mutable", "name": "eclpParams", "nodeType": "VariableDeclaration", "scope": 12744, "src": "6890:37:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params"}, "typeName": {"id": 12602, "name": "GyroECLPMath.Params", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9297, "src": "6890:19:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_storage_ptr", "typeString": "struct GyroECLPMath.Params"}}, "visibility": "internal"}, {"constant": false, "id": 12605, "mutability": "mutable", "name": "derivedECLPParams", "nodeType": "VariableDeclaration", "scope": 12744, "src": "6929:51:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}, "typeName": {"id": 12604, "name": "GyroECLPMath.DerivedParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9312, "src": "6929:26:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_storage_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}}, "visibility": "internal"}], "id": 12608, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 12606, "name": "reconstructECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12493, "src": "6984:21:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_Params_$9297_memory_ptr_$_t_struct$_DerivedParams_$9312_memory_ptr_$", "typeString": "function () view returns (struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "id": 12607, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6984:23:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_struct$_Params_$9297_memory_ptr_$_t_struct$_DerivedParams_$9312_memory_ptr_$", "typeString": "tuple(struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "6889:118:20"}, {"assignments": [12612], "declarations": [{"constant": false, "id": 12612, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 12744, "src": "7017:37:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9317_memory_ptr", "typeString": "struct GyroECLPMath.Vector2"}, "typeName": {"id": 12611, "name": "GyroECLPMath.Vector2", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9317, "src": "7017:20:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9317_storage_ptr", "typeString": "struct GyroECLPMath.Vector2"}}, "visibility": "internal"}], "id": 12613, "nodeType": "VariableDeclarationStatement", "src": "7017:37:20"}, {"id": 12648, "nodeType": "Block", "src": "7064:684:20", "statements": [{"assignments": [12615, 12617], "declarations": [{"constant": false, "id": 12615, "mutability": "mutable", "name": "currentInvariant", "nodeType": "VariableDeclaration", "scope": 12648, "src": "7079:23:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12614, "name": "int256", "nodeType": "ElementaryTypeName", "src": "7079:6:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 12617, "mutability": "mutable", "name": "invErr", "nodeType": "VariableDeclaration", "scope": 12648, "src": "7104:13:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12616, "name": "int256", "nodeType": "ElementaryTypeName", "src": "7104:6:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 12624, "initialValue": {"arguments": [{"id": 12620, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12593, "src": "7162:8:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 12621, "name": "eclpParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12603, "src": "7172:10:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"id": 12622, "name": "derivedECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12605, "src": "7184:17:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}], "expression": {"id": 12618, "name": "GyroECLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12097, "src": "7121:12:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPMath_$12097_$", "typeString": "type(library GyroECLPMath)"}}, "id": 12619, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "calculateInvariantWithError", "nodeType": "MemberAccess", "referencedDeclaration": 10170, "src": "7121:40:20", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_struct$_Params_$9297_memory_ptr_$_t_struct$_DerivedParams_$9312_memory_ptr_$returns$_t_int256_$_t_int256_$", "typeString": "function (uint256[] memory,struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory) pure returns (int256,int256)"}}, "id": 12623, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7121:81:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256)"}}, "nodeType": "VariableDeclarationStatement", "src": "7078:124:20"}, {"expression": {"id": 12635, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 12625, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12612, "src": "7404:9:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9317_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 12632, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 12628, "name": "currentInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12615, "src": "7437:16:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 12631, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"hexValue": "32", "id": 12629, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7456:1:20", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 12630, "name": "invErr", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12617, "src": "7460:6:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "7456:10:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "7437:29:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12633, "name": "currentInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12615, "src": "7468:16:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 12626, "name": "GyroECLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12097, "src": "7416:12:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPMath_$12097_$", "typeString": "type(library GyroECLPMath)"}}, "id": 12627, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "Vector2", "nodeType": "MemberAccess", "referencedDeclaration": 9317, "src": "7416:20:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_struct$_Vector2_$9317_storage_ptr_$", "typeString": "type(struct GyroECLPMath.Vector2 storage pointer)"}}, "id": 12634, "isConstant": false, "isLValue": false, "isPure": false, "kind": "structConstructorCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7416:69:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9317_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, "src": "7404:81:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9317_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, "id": 12636, "nodeType": "ExpressionStatement", "src": "7404:81:20"}, {"expression": {"arguments": [{"expression": {"id": 12638, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12507, "src": "7642:7:20", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27159_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 12639, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "lastChangeBlock", "nodeType": "MemberAccess", "referencedDeclaration": 27152, "src": "7642:23:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 12640, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12593, "src": "7667:8:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 12641, "name": "currentInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12615, "src": "7677:16:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 12642, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "toUint256", "nodeType": "MemberAccess", "referencedDeclaration": 26016, "src": "7677:26:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$bound_to$_t_int256_$", "typeString": "function (int256) pure returns (uint256)"}}, "id": 12643, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7677:28:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 12644, "name": "eclpParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12603, "src": "7707:10:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"id": 12645, "name": "derivedECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12605, "src": "7719:17:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}], "id": 12637, "name": "_updateOracle", "nodeType": "Identifier", "overloadedDeclarations": [13447, 13458], "referencedDeclaration": 13447, "src": "7628:13:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_struct$_Params_$9297_memory_ptr_$_t_struct$_DerivedParams_$9312_memory_ptr_$returns$__$", "typeString": "function (uint256,uint256[] memory,uint256,struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "id": 12646, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7628:109:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12647, "nodeType": "ExpressionStatement", "src": "7628:109:20"}]}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_SwapKind_$20153", "typeString": "enum IVault.SwapKind"}, "id": 12654, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 12649, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12507, "src": "7762:7:20", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27159_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 12650, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kind", "nodeType": "MemberAccess", "referencedDeclaration": 27142, "src": "7762:12:20", "typeDescriptions": {"typeIdentifier": "t_enum$_SwapKind_$20153", "typeString": "enum IVault.SwapKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 12651, "name": "IVault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20329, "src": "7778:6:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IVault_$20329_$", "typeString": "type(contract IVault)"}}, "id": 12652, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "SwapKind", "nodeType": "MemberAccess", "referencedDeclaration": 20153, "src": "7778:15:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_SwapKind_$20153_$", "typeString": "type(enum IVault.SwapKind)"}}, "id": 12653, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "GIVEN_IN", "nodeType": "MemberAccess", "src": "7778:24:20", "typeDescriptions": {"typeIdentifier": "t_enum$_SwapKind_$20153", "typeString": "enum IVault.SwapKind"}}, "src": "7762:40:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 12742, "nodeType": "Block", "src": "8525:695:20", "statements": [{"expression": {"id": 12708, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 12700, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12507, "src": "8539:7:20", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27159_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 12702, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 27148, "src": "8539:14:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 12704, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12507, "src": "8565:7:20", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27159_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 12705, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 27148, "src": "8565:14:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 12706, "name": "scalingFactorTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12569, "src": "8581:21:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 12703, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8813, "src": "8556:8:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 12707, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8556:47:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8539:64:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12709, "nodeType": "ExpressionStatement", "src": "8539:64:20"}, {"assignments": [12711], "declarations": [{"constant": false, "id": 12711, "mutability": "mutable", "name": "amountIn", "nodeType": "VariableDeclaration", "scope": 12742, "src": "8618:16:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12710, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8618:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 12720, "initialValue": {"arguments": [{"id": 12713, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12507, "src": "8653:7:20", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27159_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, {"id": 12714, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12593, "src": "8662:8:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 12715, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12524, "src": "8672:15:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"id": 12716, "name": "eclpParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12603, "src": "8689:10:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"id": 12717, "name": "derivedECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12605, "src": "8701:17:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, {"id": 12718, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12612, "src": "8720:9:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9317_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_SwapRequest_$27159_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}, {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}, {"typeIdentifier": "t_struct$_Vector2_$9317_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}], "id": 12712, "name": "_onSwapGivenOut", "nodeType": "Identifier", "overloadedDeclarations": [12805, 7484], "referencedDeclaration": 12805, "src": "8637:15:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_SwapRequest_$27159_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bool_$_t_struct$_Params_$9297_memory_ptr_$_t_struct$_DerivedParams_$9312_memory_ptr_$_t_struct$_Vector2_$9317_memory_ptr_$returns$_t_uint256_$", "typeString": "function (struct IPoolSwapStructs.SwapRequest memory,uint256[] memory,bool,struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory,struct GyroECLPMath.Vector2 memory) pure returns (uint256)"}}, "id": 12719, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8637:93:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "8618:112:20"}, {"eventCall": {"arguments": [{"id": 12722, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12593, "src": "8761:8:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 12723, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12612, "src": "8771:9:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9317_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, {"id": 12724, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12711, "src": "8782:8:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_struct$_Vector2_$9317_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 12721, "name": "SwapParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12287, "src": "8750:10:20", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_struct$_Vector2_$9317_memory_ptr_$_t_uint256_$returns$__$", "typeString": "function (uint256[] memory,struct GyroECLPMath.Vector2 memory,uint256)"}}, "id": 12725, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8750:41:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12726, "nodeType": "EmitStatement", "src": "8745:46:20"}, {"expression": {"id": 12732, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 12727, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12711, "src": "8876:8:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 12729, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12711, "src": "8900:8:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 12730, "name": "scalingFactorTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12563, "src": "8910:20:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 12728, "name": "_downscaleUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8919, "src": "8887:12:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 12731, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8887:44:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8876:55:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12733, "nodeType": "ExpressionStatement", "src": "8876:55:20"}, {"expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 12736, "name": "getSwapFeePercentage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7043, "src": "9173:20:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 12737, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9173:22:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12738, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "complement", "nodeType": "MemberAccess", "referencedDeclaration": 17897, "src": "9173:33:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256) pure returns (uint256)"}}, "id": 12739, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9173:35:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 12734, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12711, "src": "9158:8:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12735, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "divUp", "nodeType": "MemberAccess", "referencedDeclaration": 17603, "src": "9158:14:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 12740, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9158:51:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 12522, "id": 12741, "nodeType": "Return", "src": "9151:58:20"}]}, "id": 12743, "nodeType": "IfStatement", "src": "7758:1462:20", "trueBody": {"id": 12699, "nodeType": "Block", "src": "7804:715:20", "statements": [{"assignments": [12656], "declarations": [{"constant": false, "id": 12656, "mutability": "mutable", "name": "feeAmount", "nodeType": "VariableDeclaration", "scope": 12699, "src": "8021:17:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12655, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8021:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 12663, "initialValue": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 12660, "name": "getSwapFeePercentage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7043, "src": "8062:20:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 12661, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8062:22:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"id": 12657, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12507, "src": "8041:7:20", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27159_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 12658, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 27148, "src": "8041:14:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12659, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mulUp", "nodeType": "MemberAccess", "referencedDeclaration": 17426, "src": "8041:20:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 12662, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8041:44:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "8021:64:20"}, {"expression": {"id": 12675, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 12664, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12507, "src": "8099:7:20", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27159_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 12666, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 27148, "src": "8099:14:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [{"id": 12671, "name": "feeAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12656, "src": "8144:9:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"id": 12668, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12507, "src": "8125:7:20", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27159_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 12669, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 27148, "src": "8125:14:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12670, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 17317, "src": "8125:18:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 12672, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8125:29:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 12673, "name": "scalingFactorTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12563, "src": "8156:20:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 12667, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8813, "src": "8116:8:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 12674, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8116:61:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8099:78:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12676, "nodeType": "ExpressionStatement", "src": "8099:78:20"}, {"assignments": [12678], "declarations": [{"constant": false, "id": 12678, "mutability": "mutable", "name": "amountOut", "nodeType": "VariableDeclaration", "scope": 12699, "src": "8192:17:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12677, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8192:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 12687, "initialValue": {"arguments": [{"id": 12680, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12507, "src": "8227:7:20", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27159_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, {"id": 12681, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12593, "src": "8236:8:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 12682, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12524, "src": "8246:15:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"id": 12683, "name": "eclpParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12603, "src": "8263:10:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"id": 12684, "name": "derivedECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12605, "src": "8275:17:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, {"id": 12685, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12612, "src": "8294:9:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9317_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_SwapRequest_$27159_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}, {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}, {"typeIdentifier": "t_struct$_Vector2_$9317_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}], "id": 12679, "name": "_onSwapGivenIn", "nodeType": "Identifier", "overloadedDeclarations": [12775, 7458], "referencedDeclaration": 12775, "src": "8212:14:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_SwapRequest_$27159_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bool_$_t_struct$_Params_$9297_memory_ptr_$_t_struct$_DerivedParams_$9312_memory_ptr_$_t_struct$_Vector2_$9317_memory_ptr_$returns$_t_uint256_$", "typeString": "function (struct IPoolSwapStructs.SwapRequest memory,uint256[] memory,bool,struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory,struct GyroECLPMath.Vector2 memory) pure returns (uint256)"}}, "id": 12686, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8212:92:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "8192:112:20"}, {"eventCall": {"arguments": [{"id": 12689, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12593, "src": "8335:8:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 12690, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12612, "src": "8345:9:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9317_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, {"id": 12691, "name": "amountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12678, "src": "8356:9:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_struct$_Vector2_$9317_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 12688, "name": "SwapParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12287, "src": "8324:10:20", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_struct$_Vector2_$9317_memory_ptr_$_t_uint256_$returns$__$", "typeString": "function (uint256[] memory,struct GyroECLPMath.Vector2 memory,uint256)"}}, "id": 12692, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8324:42:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12693, "nodeType": "EmitStatement", "src": "8319:47:20"}, {"expression": {"arguments": [{"id": 12695, "name": "amountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12678, "src": "8475:9:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 12696, "name": "scalingFactorTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12569, "src": "8486:21:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 12694, "name": "_downscaleDown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8866, "src": "8460:14:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 12697, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8460:48:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 12522, "id": 12698, "nodeType": "Return", "src": "8453:55:20"}]}}]}, "documentation": {"id": 12505, "nodeType": "StructuredDocumentation", "src": "5070:67:20", "text": " @dev Returns the current value of the invariant."}, "functionSelector": "9d2c110c", "id": 12745, "implemented": true, "kind": "function", "modifiers": [{"id": 12515, "modifierName": {"id": 12514, "name": "whenNotPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23905, "src": "5832:13:20", "typeDescriptions": {"typeIdentifier": "t_modifier$__$", "typeString": "modifier ()"}}, "nodeType": "ModifierInvocation", "src": "5832:13:20"}, {"arguments": [{"expression": {"id": 12517, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12507, "src": "5856:7:20", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27159_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 12518, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "poolId", "nodeType": "MemberAccess", "referencedDeclaration": 27150, "src": "5856:14:20", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "id": 12519, "modifierName": {"id": 12516, "name": "onlyVault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6821, "src": "5846:9:20", "typeDescriptions": {"typeIdentifier": "t_modifier$_t_bytes32_$", "typeString": "modifier (bytes32)"}}, "nodeType": "ModifierInvocation", "src": "5846:25:20"}], "name": "onSwap", "nodeType": "FunctionDefinition", "overrides": {"id": 12513, "nodeType": "OverrideSpecifier", "overrides": [], "src": "5823:8:20"}, "parameters": {"id": 12512, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12507, "mutability": "mutable", "name": "request", "nodeType": "VariableDeclaration", "scope": 12745, "src": "5710:26:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27159_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 12506, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 27159, "src": "5710:11:20", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27159_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 12509, "mutability": "mutable", "name": "balanceTokenIn", "nodeType": "VariableDeclaration", "scope": 12745, "src": "5746:22:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12508, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5746:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 12511, "mutability": "mutable", "name": "balanceTokenOut", "nodeType": "VariableDeclaration", "scope": 12745, "src": "5778:23:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12510, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5778:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5700:107:20"}, "returnParameters": {"id": 12522, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12521, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 12745, "src": "5881:7:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12520, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5881:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5880:9:20"}, "scope": 13647, "src": "5685:3541:20", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"body": {"id": 12774, "nodeType": "Block", "src": "9553:200:20", "statements": [{"expression": {"arguments": [{"id": 12765, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12750, "src": "9658:8:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"expression": {"id": 12766, "name": "swapRequest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12747, "src": "9668:11:20", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27159_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 12767, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 27148, "src": "9668:18:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 12768, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12752, "src": "9688:15:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"id": 12769, "name": "eclpParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12754, "src": "9705:10:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"id": 12770, "name": "derivedECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12756, "src": "9717:17:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, {"id": 12771, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12758, "src": "9736:9:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9317_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}, {"typeIdentifier": "t_struct$_Vector2_$9317_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}], "expression": {"id": 12763, "name": "GyroECLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12097, "src": "9630:12:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPMath_$12097_$", "typeString": "type(library GyroECLPMath)"}}, "id": 12764, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "calcOutGivenIn", "nodeType": "MemberAccess", "referencedDeclaration": 11242, "src": "9630:27:20", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bool_$_t_struct$_Params_$9297_memory_ptr_$_t_struct$_DerivedParams_$9312_memory_ptr_$_t_struct$_Vector2_$9317_memory_ptr_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,bool,struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory,struct GyroECLPMath.Vector2 memory) pure returns (uint256)"}}, "id": 12772, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9630:116:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 12762, "id": 12773, "nodeType": "Return", "src": "9623:123:20"}]}, "id": 12775, "implemented": true, "kind": "function", "modifiers": [], "name": "_onSwapGivenIn", "nodeType": "FunctionDefinition", "parameters": {"id": 12759, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12747, "mutability": "mutable", "name": "swapRequest", "nodeType": "VariableDeclaration", "scope": 12775, "src": "9265:30:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27159_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 12746, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 27159, "src": "9265:11:20", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27159_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 12750, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 12775, "src": "9305:25:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 12748, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9305:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12749, "nodeType": "ArrayTypeName", "src": "9305:9:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 12752, "mutability": "mutable", "name": "tokenInIsToken0", "nodeType": "VariableDeclaration", "scope": 12775, "src": "9340:20:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 12751, "name": "bool", "nodeType": "ElementaryTypeName", "src": "9340:4:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 12754, "mutability": "mutable", "name": "eclpParams", "nodeType": "VariableDeclaration", "scope": 12775, "src": "9370:37:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params"}, "typeName": {"id": 12753, "name": "GyroECLPMath.Params", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9297, "src": "9370:19:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_storage_ptr", "typeString": "struct GyroECLPMath.Params"}}, "visibility": "internal"}, {"constant": false, "id": 12756, "mutability": "mutable", "name": "derivedECLPParams", "nodeType": "VariableDeclaration", "scope": 12775, "src": "9417:51:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}, "typeName": {"id": 12755, "name": "GyroECLPMath.DerivedParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9312, "src": "9417:26:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_storage_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}}, "visibility": "internal"}, {"constant": false, "id": 12758, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 12775, "src": "9478:37:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9317_memory_ptr", "typeString": "struct GyroECLPMath.Vector2"}, "typeName": {"id": 12757, "name": "GyroECLPMath.Vector2", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9317, "src": "9478:20:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9317_storage_ptr", "typeString": "struct GyroECLPMath.Vector2"}}, "visibility": "internal"}], "src": "9255:266:20"}, "returnParameters": {"id": 12762, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12761, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 12775, "src": "9544:7:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12760, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9544:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "9543:9:20"}, "scope": 13647, "src": "9232:521:20", "stateMutability": "pure", "virtual": false, "visibility": "private"}, {"body": {"id": 12804, "nodeType": "Block", "src": "10081:200:20", "statements": [{"expression": {"arguments": [{"id": 12795, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12780, "src": "10186:8:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"expression": {"id": 12796, "name": "swapRequest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12777, "src": "10196:11:20", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27159_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 12797, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 27148, "src": "10196:18:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 12798, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12782, "src": "10216:15:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"id": 12799, "name": "eclpParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12784, "src": "10233:10:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"id": 12800, "name": "derivedECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12786, "src": "10245:17:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, {"id": 12801, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12788, "src": "10264:9:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9317_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}, {"typeIdentifier": "t_struct$_Vector2_$9317_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}], "expression": {"id": 12793, "name": "GyroECLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12097, "src": "10158:12:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPMath_$12097_$", "typeString": "type(library GyroECLPMath)"}}, "id": 12794, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "calcInGivenOut", "nodeType": "MemberAccess", "referencedDeclaration": 11363, "src": "10158:27:20", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bool_$_t_struct$_Params_$9297_memory_ptr_$_t_struct$_DerivedParams_$9312_memory_ptr_$_t_struct$_Vector2_$9317_memory_ptr_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,bool,struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory,struct GyroECLPMath.Vector2 memory) pure returns (uint256)"}}, "id": 12802, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10158:116:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 12792, "id": 12803, "nodeType": "Return", "src": "10151:123:20"}]}, "id": 12805, "implemented": true, "kind": "function", "modifiers": [], "name": "_onSwapGivenOut", "nodeType": "FunctionDefinition", "parameters": {"id": 12789, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12777, "mutability": "mutable", "name": "swapRequest", "nodeType": "VariableDeclaration", "scope": 12805, "src": "9793:30:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27159_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 12776, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 27159, "src": "9793:11:20", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27159_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 12780, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 12805, "src": "9833:25:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 12778, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9833:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12779, "nodeType": "ArrayTypeName", "src": "9833:9:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 12782, "mutability": "mutable", "name": "tokenInIsToken0", "nodeType": "VariableDeclaration", "scope": 12805, "src": "9868:20:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 12781, "name": "bool", "nodeType": "ElementaryTypeName", "src": "9868:4:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 12784, "mutability": "mutable", "name": "eclpParams", "nodeType": "VariableDeclaration", "scope": 12805, "src": "9898:37:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params"}, "typeName": {"id": 12783, "name": "GyroECLPMath.Params", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9297, "src": "9898:19:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_storage_ptr", "typeString": "struct GyroECLPMath.Params"}}, "visibility": "internal"}, {"constant": false, "id": 12786, "mutability": "mutable", "name": "derivedECLPParams", "nodeType": "VariableDeclaration", "scope": 12805, "src": "9945:51:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}, "typeName": {"id": 12785, "name": "GyroECLPMath.DerivedParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9312, "src": "9945:26:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_storage_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}}, "visibility": "internal"}, {"constant": false, "id": 12788, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 12805, "src": "10006:37:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9317_memory_ptr", "typeString": "struct GyroECLPMath.Vector2"}, "typeName": {"id": 12787, "name": "GyroECLPMath.Vector2", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9317, "src": "10006:20:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$9317_storage_ptr", "typeString": "struct GyroECLPMath.Vector2"}}, "visibility": "internal"}], "src": "9783:266:20"}, "returnParameters": {"id": 12792, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12791, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 12805, "src": "10072:7:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12790, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10072:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "10071:9:20"}, "scope": 13647, "src": "9759:522:20", "stateMutability": "pure", "virtual": false, "visibility": "private"}, {"baseFunctions": [7705], "body": {"id": 12900, "nodeType": "Block", "src": "11262:980:20", "statements": [{"assignments": [12826], "declarations": [{"constant": false, "id": 12826, "mutability": "mutable", "name": "kind", "nodeType": "VariableDeclaration", "scope": 12900, "src": "11272:30:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$30337", "typeString": "enum BaseWeightedPool.JoinKind"}, "typeName": {"id": 12825, "name": "BaseWeightedPool.JoinKind", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 30337, "src": "11272:25:20", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$30337", "typeString": "enum BaseWeightedPool.JoinKind"}}, "visibility": "internal"}], "id": 12830, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 12827, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12814, "src": "11305:8:20", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 12828, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "joinKind", "nodeType": "MemberAccess", "referencedDeclaration": 19464, "src": "11305:17:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_enum$_JoinKind_$30337_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (enum BaseWeightedPool.JoinKind)"}}, "id": 12829, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11305:19:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$30337", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "VariableDeclarationStatement", "src": "11272:52:20"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_JoinKind_$30337", "typeString": "enum BaseWeightedPool.JoinKind"}, "id": 12836, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 12832, "name": "kind", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12826, "src": "11343:4:20", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$30337", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 12833, "name": "BaseWeightedPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31538, "src": "11351:16:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BaseWeightedPool_$31538_$", "typeString": "type(contract BaseWeightedPool)"}}, "id": 12834, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "JoinKind", "nodeType": "MemberAccess", "referencedDeclaration": 30337, "src": "11351:25:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_JoinKind_$30337_$", "typeString": "type(enum BaseWeightedPool.JoinKind)"}}, "id": 12835, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "INIT", "nodeType": "MemberAccess", "src": "11351:30:20", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$30337", "typeString": "enum BaseWeightedPool.JoinKind"}}, "src": "11343:38:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 12837, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 28064, "src": "11383:6:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$28064_$", "typeString": "type(library Errors)"}}, "id": 12838, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNINITIALIZED", "nodeType": "MemberAccess", "referencedDeclaration": 27733, "src": "11383:20:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 12831, "name": "_require", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 27659, "src": "11334:8:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 12839, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11334:70:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12840, "nodeType": "ExpressionStatement", "src": "11334:70:20"}, {"assignments": [12845], "declarations": [{"constant": false, "id": 12845, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 12900, "src": "11415:26:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 12843, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11415:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12844, "nodeType": "ArrayTypeName", "src": "11415:9:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 12849, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 12846, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12814, "src": "11444:8:20", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 12847, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "initialAmountsIn", "nodeType": "MemberAccess", "referencedDeclaration": 19503, "src": "11444:25:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (uint256[] memory)"}}, "id": 12848, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11444:27:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "11415:56:20"}, {"expression": {"arguments": [{"expression": {"id": 12853, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12845, "src": "11517:9:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 12854, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "11517:16:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "32", "id": 12855, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11535:1:20", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "expression": {"id": 12850, "name": "InputHelpers", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18798, "src": "11481:12:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_InputHelpers_$18798_$", "typeString": "type(library InputHelpers)"}}, "id": 12852, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ensureInputLengthMatch", "nodeType": "MemberAccess", "referencedDeclaration": 18706, "src": "11481:35:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256) pure"}}, "id": 12856, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11481:56:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12857, "nodeType": "ExpressionStatement", "src": "11481:56:20"}, {"expression": {"arguments": [{"id": 12859, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12845, "src": "11561:9:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}], "id": 12858, "name": "_upscaleArray", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8849, "src": "11547:13:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$", "typeString": "function (uint256[] memory) view"}}, "id": 12860, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11547:24:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12861, "nodeType": "ExpressionStatement", "src": "11547:24:20"}, {"assignments": [12865, 12867], "declarations": [{"constant": false, "id": 12865, "mutability": "mutable", "name": "eclpParams", "nodeType": "VariableDeclaration", "scope": 12900, "src": "11583:37:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params"}, "typeName": {"id": 12864, "name": "GyroECLPMath.Params", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9297, "src": "11583:19:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_storage_ptr", "typeString": "struct GyroECLPMath.Params"}}, "visibility": "internal"}, {"constant": false, "id": 12867, "mutability": "mutable", "name": "derivedECLPParams", "nodeType": "VariableDeclaration", "scope": 12900, "src": "11622:51:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}, "typeName": {"id": 12866, "name": "GyroECLPMath.DerivedParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9312, "src": "11622:26:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_storage_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}}, "visibility": "internal"}], "id": 12870, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 12868, "name": "reconstructECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12493, "src": "11677:21:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_Params_$9297_memory_ptr_$_t_struct$_DerivedParams_$9312_memory_ptr_$", "typeString": "function () view returns (struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "id": 12869, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11677:23:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_struct$_Params_$9297_memory_ptr_$_t_struct$_DerivedParams_$9312_memory_ptr_$", "typeString": "tuple(struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "11582:118:20"}, {"assignments": [12872], "declarations": [{"constant": false, "id": 12872, "mutability": "mutable", "name": "invariantAfterJoin", "nodeType": "VariableDeclaration", "scope": 12900, "src": "11710:26:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12871, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11710:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 12879, "initialValue": {"arguments": [{"id": 12875, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12845, "src": "11771:9:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 12876, "name": "eclpParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12865, "src": "11782:10:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"id": 12877, "name": "derivedECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12867, "src": "11794:17:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}], "expression": {"id": 12873, "name": "GyroECLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12097, "src": "11739:12:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPMath_$12097_$", "typeString": "type(library GyroECLPMath)"}}, "id": 12874, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 10197, "src": "11739:31:20", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_struct$_Params_$9297_memory_ptr_$_t_struct$_DerivedParams_$9312_memory_ptr_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory) pure returns (uint256)"}}, "id": 12878, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11739:73:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "11710:102:20"}, {"eventCall": {"arguments": [{"id": 12881, "name": "invariantAfterJoin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12872, "src": "11856:18:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 12880, "name": "InvariantAterInitializeJoin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12272, "src": "11828:27:20", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 12882, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11828:47:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12883, "nodeType": "EmitStatement", "src": "11823:52:20"}, {"assignments": [12885], "declarations": [{"constant": false, "id": 12885, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 12900, "src": "12092:20:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12884, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12092:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 12891, "initialValue": {"arguments": [{"id": 12888, "name": "invariantAfterJoin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12872, "src": "12124:18:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "32", "id": 12889, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12144:1:20", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "expression": {"id": 12886, "name": "Math", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19087, "src": "12115:4:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Math_$19087_$", "typeString": "type(library Math)"}}, "id": 12887, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mul", "nodeType": "MemberAccess", "referencedDeclaration": 19006, "src": "12115:8:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 12890, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12115:31:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "12092:54:20"}, {"expression": {"id": 12894, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 12892, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6766, "src": "12157:14:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 12893, "name": "invariantAfterJoin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12872, "src": "12174:18:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "12157:35:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12895, "nodeType": "ExpressionStatement", "src": "12157:35:20"}, {"expression": {"components": [{"id": 12896, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12885, "src": "12211:12:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 12897, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12845, "src": "12225:9:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 12898, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "12210:25:20", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "functionReturnParameters": 12822, "id": 12899, "nodeType": "Return", "src": "12203:32:20"}]}, "documentation": {"id": 12806, "nodeType": "StructuredDocumentation", "src": "10287:801:20", "text": " @dev Called when the Pool is joined for the first time; that is, when the BPT total supply is zero.\n Returns the amount of BPT to mint, and the token amounts the Pool will receive in return.\n Minted BPT will be sent to `recipient`, except for _MINIMUM_BPT, which will be deducted from this amount and sent\n to the zero address instead. This will cause that BPT to remain forever locked there, preventing total BTP from\n ever dropping below that value, and ensuring `_onInitializePool` can only be called once in the entire Pool's\n lifetime.\n The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n be downscaled (rounding up) before being returned to the Vault."}, "id": 12901, "implemented": true, "kind": "function", "modifiers": [], "name": "_onInitializePool", "nodeType": "FunctionDefinition", "overrides": {"id": 12816, "nodeType": "OverrideSpecifier", "overrides": [], "src": "11217:8:20"}, "parameters": {"id": 12815, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12808, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 12901, "src": "11129:7:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 12807, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "11129:7:20", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 12810, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 12901, "src": "11146:7:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 12809, "name": "address", "nodeType": "ElementaryTypeName", "src": "11146:7:20", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 12812, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 12901, "src": "11163:7:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 12811, "name": "address", "nodeType": "ElementaryTypeName", "src": "11163:7:20", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 12814, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 12901, "src": "11180:21:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 12813, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "11180:5:20", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "11119:88:20"}, "returnParameters": {"id": 12822, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12818, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 12901, "src": "11235:7:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12817, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11235:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 12821, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 12901, "src": "11244:16:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 12819, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11244:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12820, "nodeType": "ArrayTypeName", "src": "11244:9:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "11234:27:20"}, "scope": 13647, "src": "11093:1149:20", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [7800], "body": {"id": 13007, "nodeType": "Block", "src": "13758:1820:20", "statements": [{"assignments": [12932, 12934], "declarations": [{"constant": false, "id": 12932, "mutability": "mutable", "name": "eclpParams", "nodeType": "VariableDeclaration", "scope": 13007, "src": "14056:37:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params"}, "typeName": {"id": 12931, "name": "GyroECLPMath.Params", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9297, "src": "14056:19:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_storage_ptr", "typeString": "struct GyroECLPMath.Params"}}, "visibility": "internal"}, {"constant": false, "id": 12934, "mutability": "mutable", "name": "derivedECLPParams", "nodeType": "VariableDeclaration", "scope": 13007, "src": "14095:51:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}, "typeName": {"id": 12933, "name": "GyroECLPMath.DerivedParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9312, "src": "14095:26:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_storage_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}}, "visibility": "internal"}], "id": 12937, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 12935, "name": "reconstructECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12493, "src": "14150:21:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_Params_$9297_memory_ptr_$_t_struct$_DerivedParams_$9312_memory_ptr_$", "typeString": "function () view returns (struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "id": 12936, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14150:23:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_struct$_Params_$9297_memory_ptr_$_t_struct$_DerivedParams_$9312_memory_ptr_$", "typeString": "tuple(struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "14055:118:20"}, {"assignments": [12939], "declarations": [{"constant": false, "id": 12939, "mutability": "mutable", "name": "invariantBeforeAction", "nodeType": "VariableDeclaration", "scope": 13007, "src": "14183:29:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12938, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14183:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 12946, "initialValue": {"arguments": [{"id": 12942, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12911, "src": "14247:8:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 12943, "name": "eclpParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12932, "src": "14257:10:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"id": 12944, "name": "derivedECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12934, "src": "14269:17:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}], "expression": {"id": 12940, "name": "GyroECLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12097, "src": "14215:12:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPMath_$12097_$", "typeString": "type(library GyroECLPMath)"}}, "id": 12941, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 10197, "src": "14215:31:20", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_struct$_Params_$9297_memory_ptr_$_t_struct$_DerivedParams_$9312_memory_ptr_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory) pure returns (uint256)"}}, "id": 12945, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14215:72:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "14183:104:20"}, {"expression": {"arguments": [{"id": 12948, "name": "lastChangeBlock", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12913, "src": "14436:15:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 12949, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12911, "src": "14453:8:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 12950, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12939, "src": "14463:21:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 12951, "name": "eclpParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12932, "src": "14486:10:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"id": 12952, "name": "derivedECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12934, "src": "14498:17:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}], "id": 12947, "name": "_updateOracle", "nodeType": "Identifier", "overloadedDeclarations": [13447, 13458], "referencedDeclaration": 13447, "src": "14422:13:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_struct$_Params_$9297_memory_ptr_$_t_struct$_DerivedParams_$9312_memory_ptr_$returns$__$", "typeString": "function (uint256,uint256[] memory,uint256,struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "id": 12953, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14422:94:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12954, "nodeType": "ExpressionStatement", "src": "14422:94:20"}, {"expression": {"arguments": [{"id": 12956, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12939, "src": "14543:21:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 12955, "name": "_distributeFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13485, "src": "14527:15:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 12957, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14527:38:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12958, "nodeType": "ExpressionStatement", "src": "14527:38:20"}, {"assignments": [12960, 12963], "declarations": [{"constant": false, "id": 12960, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 13007, "src": "14577:20:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12959, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14577:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 12963, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 13007, "src": "14599:26:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 12961, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14599:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12962, "nodeType": "ArrayTypeName", "src": "14599:9:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 12968, "initialValue": {"arguments": [{"id": 12965, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12911, "src": "14637:8:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 12966, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12917, "src": "14647:8:20", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 12964, "name": "_doJoin", "nodeType": "Identifier", "overloadedDeclarations": [13052, 7869], "referencedDeclaration": 13052, "src": "14629:7:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 12967, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14629:27:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "14576:80:20"}, {"condition": {"expression": {"id": 12969, "name": "_capParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6555, "src": "14671:10:20", "typeDescriptions": {"typeIdentifier": "t_struct$_CapParams_$19672_storage", "typeString": "struct ICappedLiquidity.CapParams storage ref"}}, "id": 12970, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "capEnabled", "nodeType": "MemberAccess", "referencedDeclaration": 19667, "src": "14671:21:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 12981, "nodeType": "IfStatement", "src": "14667:113:20", "trueBody": {"id": 12980, "nodeType": "Block", "src": "14694:86:20", "statements": [{"expression": {"arguments": [{"id": 12972, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12960, "src": "14719:12:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"id": 12974, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12908, "src": "14743:9:20", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 12973, "name": "balanceOf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24118, "src": "14733:9:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view returns (uint256)"}}, "id": 12975, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14733:20:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 12976, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24104, "src": "14755:11:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 12977, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14755:13:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 12971, "name": "_ensureCap", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6714, "src": "14708:10:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256,uint256) view"}}, "id": 12978, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14708:61:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12979, "nodeType": "ExpressionStatement", "src": "14708:61:20"}]}}, {"expression": {"id": 12991, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 12982, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6766, "src": "15213:14:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 12985, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12939, "src": "15268:21:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 12986, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12960, "src": "15291:12:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 12987, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24104, "src": "15305:11:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 12988, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15305:13:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "74727565", "id": 12989, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "15320:4:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "expression": {"id": 12983, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18686, "src": "15230:12:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$18686_$", "typeString": "type(library GyroPoolMath)"}}, "id": 12984, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "liquidityInvariantUpdate", "nodeType": "MemberAccess", "referencedDeclaration": 18605, "src": "15230:37:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,bool) pure returns (uint256)"}}, "id": 12990, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15230:95:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "15213:112:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12992, "nodeType": "ExpressionStatement", "src": "15213:112:20"}, {"eventCall": {"arguments": [{"id": 12994, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12939, "src": "15360:21:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 12995, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6766, "src": "15383:14:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 12993, "name": "InvariantOldAndNew", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12278, "src": "15341:18:20", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256)"}}, "id": 12996, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15341:57:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12997, "nodeType": "EmitStatement", "src": "15336:62:20"}, {"expression": {"components": [{"id": 12998, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12960, "src": "15529:12:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 12999, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12963, "src": "15543:9:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"arguments": [{"hexValue": "32", "id": 13003, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15568:1:20", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 13002, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "15554:13:20", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 13000, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15558:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13001, "nodeType": "ArrayTypeName", "src": "15558:9:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 13004, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15554:16:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 13005, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "15528:43:20", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory,uint256[] memory)"}}, "functionReturnParameters": 12928, "id": 13006, "nodeType": "Return", "src": "15521:50:20"}]}, "documentation": {"id": 12902, "nodeType": "StructuredDocumentation", "src": "12248:1126:20", "text": " @dev Called whenever the Pool is joined after the first initialization join (see `_onInitializePool`).\n Returns the amount of BPT to mint, the token amounts that the Pool will receive in return, and the number of\n tokens to pay in protocol swap fees.\n Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n Minted BPT will be sent to `recipient`.\n The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n be downscaled (rounding up) before being returned to the Vault.\n Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onJoinPool`). These\n amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way"}, "id": 13008, "implemented": true, "kind": "function", "modifiers": [], "name": "_onJoinPool", "nodeType": "FunctionDefinition", "overrides": {"id": 12919, "nodeType": "OverrideSpecifier", "overrides": [], "src": "13637:8:20"}, "parameters": {"id": 12918, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12904, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13008, "src": "13409:7:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 12903, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "13409:7:20", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 12906, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13008, "src": "13426:7:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 12905, "name": "address", "nodeType": "ElementaryTypeName", "src": "13426:7:20", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 12908, "mutability": "mutable", "name": "recipient", "nodeType": "VariableDeclaration", "scope": 13008, "src": "13443:17:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 12907, "name": "address", "nodeType": "ElementaryTypeName", "src": "13443:7:20", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 12911, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 13008, "src": "13470:25:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 12909, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13470:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12910, "nodeType": "ArrayTypeName", "src": "13470:9:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 12913, "mutability": "mutable", "name": "lastChangeBlock", "nodeType": "VariableDeclaration", "scope": 13008, "src": "13505:23:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12912, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13505:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 12915, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13008, "src": "13538:7:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12914, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13538:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 12917, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 13008, "src": "13584:21:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 12916, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "13584:5:20", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "13399:212:20"}, "returnParameters": {"id": 12928, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12921, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13008, "src": "13676:7:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12920, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13676:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 12924, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13008, "src": "13697:16:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 12922, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13697:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12923, "nodeType": "ArrayTypeName", "src": "13697:9:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 12927, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13008, "src": "13727:16:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 12925, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13727:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12926, "nodeType": "ArrayTypeName", "src": "13727:9:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "13662:91:20"}, "scope": 13647, "src": "13379:2199:20", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 13051, "nodeType": "Block", "src": "15724:441:20", "statements": [{"assignments": [13024], "declarations": [{"constant": false, "id": 13024, "mutability": "mutable", "name": "kind", "nodeType": "VariableDeclaration", "scope": 13051, "src": "15734:30:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$30337", "typeString": "enum BaseWeightedPool.JoinKind"}, "typeName": {"id": 13023, "name": "BaseWeightedPool.JoinKind", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 30337, "src": "15734:25:20", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$30337", "typeString": "enum BaseWeightedPool.JoinKind"}}, "visibility": "internal"}], "id": 13028, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 13025, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13013, "src": "15767:8:20", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 13026, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "joinKind", "nodeType": "MemberAccess", "referencedDeclaration": 19464, "src": "15767:17:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_enum$_JoinKind_$30337_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (enum BaseWeightedPool.JoinKind)"}}, "id": 13027, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15767:19:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$30337", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "VariableDeclarationStatement", "src": "15734:52:20"}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_JoinKind_$30337", "typeString": "enum BaseWeightedPool.JoinKind"}, "id": 13033, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 13029, "name": "kind", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13024, "src": "15923:4:20", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$30337", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 13030, "name": "BaseWeightedPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31538, "src": "15931:16:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BaseWeightedPool_$31538_$", "typeString": "type(contract BaseWeightedPool)"}}, "id": 13031, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "JoinKind", "nodeType": "MemberAccess", "referencedDeclaration": 30337, "src": "15931:25:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_JoinKind_$30337_$", "typeString": "type(enum BaseWeightedPool.JoinKind)"}}, "id": 13032, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "ALL_TOKENS_IN_FOR_EXACT_BPT_OUT", "nodeType": "MemberAccess", "src": "15931:57:20", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$30337", "typeString": "enum BaseWeightedPool.JoinKind"}}, "src": "15923:65:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 13049, "nodeType": "Block", "src": "16099:60:20", "statements": [{"expression": {"arguments": [{"expression": {"id": 13045, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 28064, "src": "16121:6:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$28064_$", "typeString": "type(library Errors)"}}, "id": 13046, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNHANDLED_JOIN_KIND", "nodeType": "MemberAccess", "referencedDeclaration": 27778, "src": "16121:26:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 13044, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 27667, "src": "16113:7:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$", "typeString": "function (uint256) pure"}}, "id": 13047, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16113:35:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13048, "nodeType": "ExpressionStatement", "src": "16113:35:20"}]}, "id": 13050, "nodeType": "IfStatement", "src": "15919:240:20", "trueBody": {"id": 13043, "nodeType": "Block", "src": "15990:103:20", "statements": [{"expression": {"id": 13041, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 13034, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13016, "src": "16005:12:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13035, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13019, "src": "16019:9:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 13036, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "16004:25:20", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 13038, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13011, "src": "16063:8:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 13039, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13013, "src": "16073:8:20", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 13037, "name": "_joinAllTokensInForExactBPTOut", "nodeType": "Identifier", "overloadedDeclarations": [13090], "referencedDeclaration": 13090, "src": "16032:30:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 13040, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16032:50:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "16004:78:20", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13042, "nodeType": "ExpressionStatement", "src": "16004:78:20"}]}}]}, "id": 13052, "implemented": true, "kind": "function", "modifiers": [], "name": "_doJoin", "nodeType": "FunctionDefinition", "parameters": {"id": 13014, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13011, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 13052, "src": "15601:25:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13009, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15601:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13010, "nodeType": "ArrayTypeName", "src": "15601:9:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 13013, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 13052, "src": "15628:21:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 13012, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "15628:5:20", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "15600:50:20"}, "returnParameters": {"id": 13020, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13016, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 13052, "src": "15674:20:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13015, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15674:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13019, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 13052, "src": "15696:26:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13017, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15696:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13018, "nodeType": "ArrayTypeName", "src": "15696:9:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "15673:50:20"}, "scope": 13647, "src": "15584:581:20", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [8039], "body": {"id": 13089, "nodeType": "Block", "src": "16356:343:20", "statements": [{"assignments": [13067], "declarations": [{"constant": false, "id": 13067, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 13089, "src": "16366:20:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13066, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16366:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 13071, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 13068, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13057, "src": "16389:8:20", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 13069, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "allTokensInForExactBptOut", "nodeType": "MemberAccess", "referencedDeclaration": 19578, "src": "16389:34:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (uint256)"}}, "id": 13070, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16389:36:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "16366:59:20"}, {"assignments": [13076], "declarations": [{"constant": false, "id": 13076, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 13089, "src": "16536:26:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13074, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16536:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13075, "nodeType": "ArrayTypeName", "src": "16536:9:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 13084, "initialValue": {"arguments": [{"id": 13079, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13055, "src": "16611:8:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 13080, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13067, "src": "16621:12:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 13081, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24104, "src": "16635:11:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 13082, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16635:13:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 13077, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18686, "src": "16565:12:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$18686_$", "typeString": "type(library GyroPoolMath)"}}, "id": 13078, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcAllTokensInGivenExactBptOut", "nodeType": "MemberAccess", "referencedDeclaration": 17985, "src": "16565:45:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256[] memory)"}}, "id": 13083, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16565:84:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "16536:113:20"}, {"expression": {"components": [{"id": 13085, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13067, "src": "16668:12:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13086, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13076, "src": "16682:9:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 13087, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "16667:25:20", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "functionReturnParameters": 13065, "id": 13088, "nodeType": "Return", "src": "16660:32:20"}]}, "id": 13090, "implemented": true, "kind": "function", "modifiers": [], "name": "_joinAllTokensInForExactBPTOut", "nodeType": "FunctionDefinition", "overrides": {"id": 13059, "nodeType": "OverrideSpecifier", "overrides": [], "src": "16299:8:20"}, "parameters": {"id": 13058, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13055, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 13090, "src": "16211:25:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13053, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16211:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13054, "nodeType": "ArrayTypeName", "src": "16211:9:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 13057, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 13090, "src": "16238:21:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 13056, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "16238:5:20", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "16210:50:20"}, "returnParameters": {"id": 13065, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13061, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13090, "src": "16325:7:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13060, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16325:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13064, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13090, "src": "16334:16:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13062, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16334:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13063, "nodeType": "ArrayTypeName", "src": "16334:9:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "16324:27:20"}, "scope": 13647, "src": "16171:528:20", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [8228], "body": {"id": 13204, "nodeType": "Block", "src": "18179:2791:20", "statements": [{"assignments": [13121, 13123], "declarations": [{"constant": false, "id": 13121, "mutability": "mutable", "name": "eclpParams", "nodeType": "VariableDeclaration", "scope": 13204, "src": "18344:37:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params"}, "typeName": {"id": 13120, "name": "GyroECLPMath.Params", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9297, "src": "18344:19:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_storage_ptr", "typeString": "struct GyroECLPMath.Params"}}, "visibility": "internal"}, {"constant": false, "id": 13123, "mutability": "mutable", "name": "derivedECLPParams", "nodeType": "VariableDeclaration", "scope": 13204, "src": "18383:51:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}, "typeName": {"id": 13122, "name": "GyroECLPMath.DerivedParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9312, "src": "18383:26:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_storage_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}}, "visibility": "internal"}], "id": 13126, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 13124, "name": "reconstructECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12493, "src": "18438:21:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_Params_$9297_memory_ptr_$_t_struct$_DerivedParams_$9312_memory_ptr_$", "typeString": "function () view returns (struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "id": 13125, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18438:23:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_struct$_Params_$9297_memory_ptr_$_t_struct$_DerivedParams_$9312_memory_ptr_$", "typeString": "tuple(struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "18343:118:20"}, {"condition": {"arguments": [], "expression": {"argumentTypes": [], "id": 13127, "name": "_isNotPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24000, "src": "18668:12:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$", "typeString": "function () view returns (bool)"}}, "id": 13128, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18668:14:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 13193, "nodeType": "Block", "src": "20132:659:20", "statements": [{"expression": {"id": 13183, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 13176, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13110, "src": "20347:11:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13177, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13113, "src": "20360:10:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 13178, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "20346:25:20", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 13180, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13100, "src": "20382:8:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 13181, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13106, "src": "20392:8:20", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 13179, "name": "_doExit", "nodeType": "Identifier", "overloadedDeclarations": [13249, 8297], "referencedDeclaration": 13249, "src": "20374:7:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 13182, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20374:27:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "20346:55:20", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13184, "nodeType": "ExpressionStatement", "src": "20346:55:20"}, {"expression": {"id": 13191, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 13185, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6766, "src": "20746:14:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"arguments": [{"id": 13188, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "20768:7:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 13187, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20768:7:20", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}], "id": 13186, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "20763:4:20", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 13189, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20763:13:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint256", "typeString": "type(uint256)"}}, "id": 13190, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "20763:17:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "20746:34:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13192, "nodeType": "ExpressionStatement", "src": "20746:34:20"}]}, "id": 13194, "nodeType": "IfStatement", "src": "18664:2127:20", "trueBody": {"id": 13175, "nodeType": "Block", "src": "18684:1442:20", "statements": [{"assignments": [13130], "declarations": [{"constant": false, "id": 13130, "mutability": "mutable", "name": "invariantBeforeAction", "nodeType": "VariableDeclaration", "scope": 13175, "src": "19004:29:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13129, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19004:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 13137, "initialValue": {"arguments": [{"id": 13133, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13100, "src": "19068:8:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 13134, "name": "eclpParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13121, "src": "19078:10:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"id": 13135, "name": "derivedECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13123, "src": "19090:17:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}], "expression": {"id": 13131, "name": "GyroECLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12097, "src": "19036:12:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPMath_$12097_$", "typeString": "type(library GyroECLPMath)"}}, "id": 13132, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 10197, "src": "19036:31:20", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_struct$_Params_$9297_memory_ptr_$_t_struct$_DerivedParams_$9312_memory_ptr_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory) pure returns (uint256)"}}, "id": 13136, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19036:72:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "19004:104:20"}, {"expression": {"arguments": [{"id": 13139, "name": "lastChangeBlock", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13102, "src": "19265:15:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13140, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13100, "src": "19282:8:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 13141, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13130, "src": "19292:21:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13142, "name": "eclpParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13121, "src": "19315:10:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"id": 13143, "name": "derivedECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13123, "src": "19327:17:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}], "id": 13138, "name": "_updateOracle", "nodeType": "Identifier", "overloadedDeclarations": [13447, 13458], "referencedDeclaration": 13447, "src": "19251:13:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_struct$_Params_$9297_memory_ptr_$_t_struct$_DerivedParams_$9312_memory_ptr_$returns$__$", "typeString": "function (uint256,uint256[] memory,uint256,struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "id": 13144, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19251:94:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13145, "nodeType": "ExpressionStatement", "src": "19251:94:20"}, {"expression": {"arguments": [{"id": 13147, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13130, "src": "19376:21:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 13146, "name": "_distributeFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13485, "src": "19360:15:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 13148, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19360:38:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13149, "nodeType": "ExpressionStatement", "src": "19360:38:20"}, {"expression": {"id": 13157, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 13150, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13110, "src": "19414:11:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13151, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13113, "src": "19427:10:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 13152, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "19413:25:20", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 13154, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13100, "src": "19449:8:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 13155, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13106, "src": "19459:8:20", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 13153, "name": "_doExit", "nodeType": "Identifier", "overloadedDeclarations": [13249, 8297], "referencedDeclaration": 13249, "src": "19441:7:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 13156, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19441:27:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "19413:55:20", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13158, "nodeType": "ExpressionStatement", "src": "19413:55:20"}, {"expression": {"id": 13168, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 13159, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6766, "src": "19926:14:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 13162, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13130, "src": "19981:21:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13163, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13110, "src": "20004:11:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 13164, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24104, "src": "20017:11:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 13165, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20017:13:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "66616c7365", "id": 13166, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "20032:5:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "expression": {"id": 13160, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18686, "src": "19943:12:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$18686_$", "typeString": "type(library GyroPoolMath)"}}, "id": 13161, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "liquidityInvariantUpdate", "nodeType": "MemberAccess", "referencedDeclaration": 18605, "src": "19943:37:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,bool) pure returns (uint256)"}}, "id": 13167, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19943:95:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "19926:112:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13169, "nodeType": "ExpressionStatement", "src": "19926:112:20"}, {"eventCall": {"arguments": [{"id": 13171, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13130, "src": "20077:21:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13172, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6766, "src": "20100:14:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 13170, "name": "InvariantOldAndNew", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12278, "src": "20058:18:20", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256)"}}, "id": 13173, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20058:57:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13174, "nodeType": "EmitStatement", "src": "20053:62:20"}]}}, {"expression": {"components": [{"id": 13195, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13110, "src": "20921:11:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13196, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13113, "src": "20934:10:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"arguments": [{"hexValue": "32", "id": 13200, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20960:1:20", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 13199, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "20946:13:20", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 13197, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20950:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13198, "nodeType": "ArrayTypeName", "src": "20950:9:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 13201, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20946:16:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 13202, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "20920:43:20", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory,uint256[] memory)"}}, "functionReturnParameters": 13117, "id": 13203, "nodeType": "Return", "src": "20913:50:20"}]}, "documentation": {"id": 13091, "nodeType": "StructuredDocumentation", "src": "16705:1054:20", "text": " @dev Called whenever the Pool is exited.\n Returns the amount of BPT to burn, the token amounts for each Pool token that the Pool will grant in return, and\n the number of tokens to pay in protocol swap fees.\n Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n BPT will be burnt from `sender`.\n The Pool will grant tokens to `recipient`. These amounts are considered upscaled and will be downscaled\n (rounding down) before being returned to the Vault.\n Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onExitPool`). These\n amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way"}, "id": 13205, "implemented": true, "kind": "function", "modifiers": [], "name": "_onExitPool", "nodeType": "FunctionDefinition", "overrides": {"id": 13108, "nodeType": "OverrideSpecifier", "overrides": [], "src": "18013:8:20"}, "parameters": {"id": 13107, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13093, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13205, "src": "17794:7:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 13092, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "17794:7:20", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 13095, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13205, "src": "17811:7:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 13094, "name": "address", "nodeType": "ElementaryTypeName", "src": "17811:7:20", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 13097, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13205, "src": "17828:7:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 13096, "name": "address", "nodeType": "ElementaryTypeName", "src": "17828:7:20", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 13100, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 13205, "src": "17845:25:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13098, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17845:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13099, "nodeType": "ArrayTypeName", "src": "17845:9:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 13102, "mutability": "mutable", "name": "lastChangeBlock", "nodeType": "VariableDeclaration", "scope": 13205, "src": "17880:23:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13101, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17880:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13104, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13205, "src": "17913:7:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13103, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17913:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13106, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 13205, "src": "17960:21:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 13105, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "17960:5:20", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "17784:203:20"}, "returnParameters": {"id": 13117, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13110, "mutability": "mutable", "name": "bptAmountIn", "nodeType": "VariableDeclaration", "scope": 13205, "src": "18052:19:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13109, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18052:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13113, "mutability": "mutable", "name": "amountsOut", "nodeType": "VariableDeclaration", "scope": 13205, "src": "18085:27:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13111, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18085:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13112, "nodeType": "ArrayTypeName", "src": "18085:9:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 13116, "mutability": "mutable", "name": "dueProtocolFeeAmounts", "nodeType": "VariableDeclaration", "scope": 13205, "src": "18126:38:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13114, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18126:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13115, "nodeType": "ArrayTypeName", "src": "18126:9:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "18038:136:20"}, "scope": 13647, "src": "17764:3206:20", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 13248, "nodeType": "Block", "src": "21116:452:20", "statements": [{"assignments": [13221], "declarations": [{"constant": false, "id": 13221, "mutability": "mutable", "name": "kind", "nodeType": "VariableDeclaration", "scope": 13248, "src": "21126:30:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$30342", "typeString": "enum BaseWeightedPool.ExitKind"}, "typeName": {"id": 13220, "name": "BaseWeightedPool.ExitKind", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 30342, "src": "21126:25:20", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$30342", "typeString": "enum BaseWeightedPool.ExitKind"}}, "visibility": "internal"}], "id": 13225, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 13222, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13210, "src": "21159:8:20", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 13223, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "exitKind", "nodeType": "MemberAccess", "referencedDeclaration": 19480, "src": "21159:17:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_enum$_ExitKind_$30342_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (enum BaseWeightedPool.ExitKind)"}}, "id": 13224, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21159:19:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$30342", "typeString": "enum BaseWeightedPool.ExitKind"}}, "nodeType": "VariableDeclarationStatement", "src": "21126:52:20"}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_ExitKind_$30342", "typeString": "enum BaseWeightedPool.ExitKind"}, "id": 13230, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 13226, "name": "kind", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13221, "src": "21333:4:20", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$30342", "typeString": "enum BaseWeightedPool.ExitKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 13227, "name": "BaseWeightedPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31538, "src": "21341:16:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BaseWeightedPool_$31538_$", "typeString": "type(contract BaseWeightedPool)"}}, "id": 13228, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ExitKind", "nodeType": "MemberAccess", "referencedDeclaration": 30342, "src": "21341:25:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_ExitKind_$30342_$", "typeString": "type(enum BaseWeightedPool.ExitKind)"}}, "id": 13229, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "EXACT_BPT_IN_FOR_TOKENS_OUT", "nodeType": "MemberAccess", "src": "21341:53:20", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$30342", "typeString": "enum BaseWeightedPool.ExitKind"}}, "src": "21333:61:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 13246, "nodeType": "Block", "src": "21502:60:20", "statements": [{"expression": {"arguments": [{"expression": {"id": 13242, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 28064, "src": "21524:6:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$28064_$", "typeString": "type(library Errors)"}}, "id": 13243, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNHANDLED_EXIT_KIND", "nodeType": "MemberAccess", "referencedDeclaration": 27856, "src": "21524:26:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 13241, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 27667, "src": "21516:7:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$", "typeString": "function (uint256) pure"}}, "id": 13244, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21516:35:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13245, "nodeType": "ExpressionStatement", "src": "21516:35:20"}]}, "id": 13247, "nodeType": "IfStatement", "src": "21329:233:20", "trueBody": {"id": 13240, "nodeType": "Block", "src": "21396:100:20", "statements": [{"expression": {"id": 13238, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 13231, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13213, "src": "21411:11:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13232, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13216, "src": "21424:10:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 13233, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "21410:25:20", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 13235, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13208, "src": "21466:8:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 13236, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13210, "src": "21476:8:20", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 13234, "name": "_exitExactBPTInForTokensOut", "nodeType": "Identifier", "overloadedDeclarations": [13287], "referencedDeclaration": 13287, "src": "21438:27:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 13237, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21438:47:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "21410:75:20", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13239, "nodeType": "ExpressionStatement", "src": "21410:75:20"}]}}]}, "id": 13249, "implemented": true, "kind": "function", "modifiers": [], "name": "_doExit", "nodeType": "FunctionDefinition", "parameters": {"id": 13211, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13208, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 13249, "src": "20993:25:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13206, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20993:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13207, "nodeType": "ArrayTypeName", "src": "20993:9:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 13210, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 13249, "src": "21020:21:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 13209, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "21020:5:20", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "20992:50:20"}, "returnParameters": {"id": 13217, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13213, "mutability": "mutable", "name": "bptAmountIn", "nodeType": "VariableDeclaration", "scope": 13249, "src": "21066:19:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13212, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21066:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13216, "mutability": "mutable", "name": "amountsOut", "nodeType": "VariableDeclaration", "scope": 13249, "src": "21087:27:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13214, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21087:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13215, "nodeType": "ArrayTypeName", "src": "21087:9:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "21065:50:20"}, "scope": 13647, "src": "20976:592:20", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [8404], "body": {"id": 13286, "nodeType": "Block", "src": "21756:746:20", "statements": [{"assignments": [13264], "declarations": [{"constant": false, "id": 13264, "mutability": "mutable", "name": "bptAmountIn", "nodeType": "VariableDeclaration", "scope": 13286, "src": "22177:19:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13263, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22177:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 13268, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 13265, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13254, "src": "22199:8:20", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 13266, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "exactBptInForTokensOut", "nodeType": "MemberAccess", "referencedDeclaration": 19625, "src": "22199:31:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (uint256)"}}, "id": 13267, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22199:33:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "22177:55:20"}, {"assignments": [13273], "declarations": [{"constant": false, "id": 13273, "mutability": "mutable", "name": "amountsOut", "nodeType": "VariableDeclaration", "scope": 13286, "src": "22343:27:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13271, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22343:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13272, "nodeType": "ArrayTypeName", "src": "22343:9:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 13281, "initialValue": {"arguments": [{"id": 13276, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13252, "src": "22416:8:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 13277, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13264, "src": "22426:11:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 13278, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24104, "src": "22439:11:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 13279, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22439:13:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 13274, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18686, "src": "22373:12:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$18686_$", "typeString": "type(library GyroPoolMath)"}}, "id": 13275, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcTokensOutGivenExactBptIn", "nodeType": "MemberAccess", "referencedDeclaration": 18037, "src": "22373:42:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256[] memory)"}}, "id": 13280, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22373:80:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "22343:110:20"}, {"expression": {"components": [{"id": 13282, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13264, "src": "22471:11:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13283, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13273, "src": "22484:10:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 13284, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "22470:25:20", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "functionReturnParameters": 13262, "id": 13285, "nodeType": "Return", "src": "22463:32:20"}]}, "id": 13287, "implemented": true, "kind": "function", "modifiers": [], "name": "_exitExactBPTInForTokensOut", "nodeType": "FunctionDefinition", "overrides": {"id": 13256, "nodeType": "OverrideSpecifier", "overrides": [], "src": "21699:8:20"}, "parameters": {"id": 13255, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13252, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 13287, "src": "21611:25:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13250, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21611:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13251, "nodeType": "ArrayTypeName", "src": "21611:9:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 13254, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 13287, "src": "21638:21:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 13253, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "21638:5:20", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "21610:50:20"}, "returnParameters": {"id": 13262, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13258, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13287, "src": "21725:7:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13257, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21725:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13261, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13287, "src": "21734:16:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13259, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21734:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13260, "nodeType": "ArrayTypeName", "src": "21734:9:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "21724:27:20"}, "scope": 13647, "src": "21574:928:20", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 13335, "nodeType": "Block", "src": "22709:272:20", "statements": [{"expression": {"id": 13305, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 13299, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13297, "src": "22719:8:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "32", "id": 13303, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "22744:1:20", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 13302, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "22730:13:20", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 13300, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22734:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13301, "nodeType": "ArrayTypeName", "src": "22734:9:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 13304, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22730:16:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "src": "22719:27:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 13306, "nodeType": "ExpressionStatement", "src": "22719:27:20"}, {"condition": {"id": 13307, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13293, "src": "22760:15:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 13333, "nodeType": "Block", "src": "22879:96:20", "statements": [{"expression": {"id": 13325, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 13321, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13297, "src": "22893:8:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 13323, "indexExpression": {"hexValue": "30", "id": 13322, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "22902:1:20", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "22893:11:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 13324, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13291, "src": "22907:15:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "22893:29:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13326, "nodeType": "ExpressionStatement", "src": "22893:29:20"}, {"expression": {"id": 13331, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 13327, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13297, "src": "22936:8:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 13329, "indexExpression": {"hexValue": "31", "id": 13328, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "22945:1:20", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "22936:11:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 13330, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13289, "src": "22950:14:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "22936:28:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13332, "nodeType": "ExpressionStatement", "src": "22936:28:20"}]}, "id": 13334, "nodeType": "IfStatement", "src": "22756:219:20", "trueBody": {"id": 13320, "nodeType": "Block", "src": "22777:96:20", "statements": [{"expression": {"id": 13312, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 13308, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13297, "src": "22791:8:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 13310, "indexExpression": {"hexValue": "30", "id": 13309, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "22800:1:20", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "22791:11:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 13311, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13289, "src": "22805:14:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "22791:28:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13313, "nodeType": "ExpressionStatement", "src": "22791:28:20"}, {"expression": {"id": 13318, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 13314, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13297, "src": "22833:8:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 13316, "indexExpression": {"hexValue": "31", "id": 13315, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "22842:1:20", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "22833:11:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 13317, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13291, "src": "22847:15:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "22833:29:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13319, "nodeType": "ExpressionStatement", "src": "22833:29:20"}]}}]}, "id": 13336, "implemented": true, "kind": "function", "modifiers": [], "name": "_balancesFromTokenInOut", "nodeType": "FunctionDefinition", "parameters": {"id": 13294, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13289, "mutability": "mutable", "name": "balanceTokenIn", "nodeType": "VariableDeclaration", "scope": 13336, "src": "22567:22:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13288, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22567:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13291, "mutability": "mutable", "name": "balanceTokenOut", "nodeType": "VariableDeclaration", "scope": 13336, "src": "22599:23:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13290, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22599:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13293, "mutability": "mutable", "name": "tokenInIsToken0", "nodeType": "VariableDeclaration", "scope": 13336, "src": "22632:20:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 13292, "name": "bool", "nodeType": "ElementaryTypeName", "src": "22632:4:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "22557:101:20"}, "returnParameters": {"id": 13298, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13297, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 13336, "src": "22682:25:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13295, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22682:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13296, "nodeType": "ArrayTypeName", "src": "22682:9:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "22681:27:20"}, "scope": 13647, "src": "22525:456:20", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 13446, "nodeType": "Block", "src": "23566:1635:20", "statements": [{"assignments": [13352], "declarations": [{"constant": false, "id": 13352, "mutability": "mutable", "name": "miscData", "nodeType": "VariableDeclaration", "scope": 13446, "src": "23576:16:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 13351, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "23576:7:20", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 13354, "initialValue": {"id": 13353, "name": "_miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6764, "src": "23595:9:20", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "23576:28:20"}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 13362, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 13355, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13352, "src": "23618:8:20", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 13356, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "oracleEnabled", "nodeType": "MemberAccess", "referencedDeclaration": 19327, "src": "23618:22:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bool_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (bool)"}}, "id": 13357, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23618:24:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 13361, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 13358, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "23646:5:20", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 13359, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "number", "nodeType": "MemberAccess", "src": "23646:12:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"id": 13360, "name": "lastChangeBlock", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13339, "src": "23661:15:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "23646:30:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "23618:58:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 13445, "nodeType": "IfStatement", "src": "23614:1581:20", "trueBody": {"id": 13444, "nodeType": "Block", "src": "23678:1517:20", "statements": [{"assignments": [13364], "declarations": [{"constant": false, "id": 13364, "mutability": "mutable", "name": "spotPrice", "nodeType": "VariableDeclaration", "scope": 13444, "src": "23692:17:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13363, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23692:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 13374, "initialValue": {"arguments": [{"id": 13367, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13342, "src": "23740:8:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 13368, "name": "eclpParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13346, "src": "23750:10:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"id": 13369, "name": "derivedECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13348, "src": "23762:17:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 13370, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13344, "src": "23781:9:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13371, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "toInt256", "nodeType": "MemberAccess", "referencedDeclaration": 26189, "src": "23781:18:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$", "typeString": "function (uint256) pure returns (int256)"}}, "id": 13372, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23781:20:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 13365, "name": "GyroECLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12097, "src": "23712:12:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPMath_$12097_$", "typeString": "type(library GyroECLPMath)"}}, "id": 13366, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "calculatePrice", "nodeType": "MemberAccess", "referencedDeclaration": 11065, "src": "23712:27:20", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_struct$_Params_$9297_memory_ptr_$_t_struct$_DerivedParams_$9312_memory_ptr_$_t_int256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory,int256) pure returns (uint256)"}}, "id": 13373, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23712:90:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "23692:110:20"}, {"assignments": [13376], "declarations": [{"constant": false, "id": 13376, "mutability": "mutable", "name": "logSpotPrice", "nodeType": "VariableDeclaration", "scope": 13444, "src": "23817:19:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 13375, "name": "int256", "nodeType": "ElementaryTypeName", "src": "23817:6:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 13381, "initialValue": {"arguments": [{"id": 13379, "name": "spotPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13364, "src": "23876:9:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 13377, "name": "GyroECLPOracleMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12177, "src": "23839:18:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPOracleMath_$12177_$", "typeString": "type(library GyroECLPOracleMath)"}}, "id": 13378, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcLogSpotPrice", "nodeType": "MemberAccess", "referencedDeclaration": 12118, "src": "23839:36:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$", "typeString": "function (uint256) pure returns (int256)"}}, "id": 13380, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23839:47:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "VariableDeclarationStatement", "src": "23817:69:20"}, {"assignments": [13383], "declarations": [{"constant": false, "id": 13383, "mutability": "mutable", "name": "logInvariantDivSupply", "nodeType": "VariableDeclaration", "scope": 13444, "src": "24221:28:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 13382, "name": "int256", "nodeType": "ElementaryTypeName", "src": "24221:6:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 13391, "initialValue": {"arguments": [{"id": 13386, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13344, "src": "24298:9:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 13387, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13352, "src": "24309:8:20", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 13388, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "logTotalSupply", "nodeType": "MemberAccess", "referencedDeclaration": 19285, "src": "24309:23:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_int256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (int256)"}}, "id": 13389, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24309:25:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 13384, "name": "GyroECLPOracleMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12177, "src": "24252:18:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPOracleMath_$12177_$", "typeString": "type(library GyroECLPOracleMath)"}}, "id": 13385, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcLogInvariantDivSupply", "nodeType": "MemberAccess", "referencedDeclaration": 12176, "src": "24252:45:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_int256_$returns$_t_int256_$", "typeString": "function (uint256,int256) pure returns (int256)"}}, "id": 13390, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24252:83:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "VariableDeclarationStatement", "src": "24221:114:20"}, {"assignments": [13393], "declarations": [{"constant": false, "id": 13393, "mutability": "mutable", "name": "oracleCurrentIndex", "nodeType": "VariableDeclaration", "scope": 13444, "src": "24350:26:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13392, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24350:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 13397, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 13394, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13352, "src": "24379:8:20", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 13395, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "oracleIndex", "nodeType": "MemberAccess", "referencedDeclaration": 19313, "src": "24379:20:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (uint256)"}}, "id": 13396, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24379:22:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "24350:51:20"}, {"assignments": [13399], "declarations": [{"constant": false, "id": 13399, "mutability": "mutable", "name": "oracleCurrentSampleInitialTimestamp", "nodeType": "VariableDeclaration", "scope": 13444, "src": "24415:43:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13398, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24415:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 13403, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 13400, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13352, "src": "24461:8:20", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 13401, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "oracleSampleCreationTimestamp", "nodeType": "MemberAccess", "referencedDeclaration": 19299, "src": "24461:38:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (uint256)"}}, "id": 13402, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24461:40:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "24415:86:20"}, {"assignments": [13405], "declarations": [{"constant": false, "id": 13405, "mutability": "mutable", "name": "oracleUpdatedIndex", "nodeType": "VariableDeclaration", "scope": 13444, "src": "24515:26:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13404, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24515:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 13415, "initialValue": {"arguments": [{"id": 13407, "name": "oracleCurrentSampleInitialTimestamp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13399, "src": "24579:35:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13408, "name": "oracleCurrentIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13393, "src": "24632:18:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13409, "name": "logSpotPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13376, "src": "24668:12:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 13410, "name": "logInvariantDivSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13383, "src": "24698:21:20", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 13411, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13352, "src": "24761:8:20", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 13412, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "logInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 19271, "src": "24761:21:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_int256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (int256)"}}, "id": 13413, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24761:23:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "id": 13406, "name": "_processPriceData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23703, "src": "24544:17:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_int256_$_t_int256_$_t_int256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,int256,int256,int256) returns (uint256)"}}, "id": 13414, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24544:254:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "24515:283:20"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 13418, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 13416, "name": "oracleCurrentIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13393, "src": "24817:18:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"id": 13417, "name": "oracleUpdatedIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13405, "src": "24839:18:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "24817:40:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 13443, "nodeType": "IfStatement", "src": "24813:372:20", "trueBody": {"id": 13442, "nodeType": "Block", "src": "24859:326:20", "statements": [{"expression": {"id": 13424, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 13419, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13352, "src": "24929:8:20", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 13422, "name": "oracleUpdatedIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13405, "src": "24964:18:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 13420, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13352, "src": "24940:8:20", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 13421, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "setOracleIndex", "nodeType": "MemberAccess", "referencedDeclaration": 19409, "src": "24940:23:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_bytes32_$", "typeString": "function (bytes32,uint256) pure returns (bytes32)"}}, "id": 13423, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24940:43:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "24929:54:20", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 13425, "nodeType": "ExpressionStatement", "src": "24929:54:20"}, {"expression": {"id": 13432, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 13426, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13352, "src": "25001:8:20", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 13429, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "25054:5:20", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 13430, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "25054:15:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 13427, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13352, "src": "25012:8:20", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 13428, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "setOracleSampleCreationTimestamp", "nodeType": "MemberAccess", "referencedDeclaration": 19392, "src": "25012:41:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_bytes32_$", "typeString": "function (bytes32,uint256) pure returns (bytes32)"}}, "id": 13431, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25012:58:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "25001:69:20", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 13433, "nodeType": "ExpressionStatement", "src": "25001:69:20"}, {"expression": {"id": 13436, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 13434, "name": "_miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6764, "src": "25088:9:20", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 13435, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13352, "src": "25100:8:20", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "25088:20:20", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 13437, "nodeType": "ExpressionStatement", "src": "25088:20:20"}, {"eventCall": {"arguments": [{"id": 13439, "name": "oracleUpdatedIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13405, "src": "25151:18:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 13438, "name": "OracleIndexUpdated", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12291, "src": "25132:18:20", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 13440, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25132:38:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13441, "nodeType": "EmitStatement", "src": "25127:43:20"}]}}]}}]}, "documentation": {"id": 13337, "nodeType": "StructuredDocumentation", "src": "22987:333:20", "text": " @dev Updates the Price Oracle based on the Pool's current state (balances, BPT supply and invariant). Must be\n called on *all* state-changing functions with the balances *before* the state change happens, and with\n `lastChangeBlock` as the number of the block in which any of the balances last changed."}, "id": 13447, "implemented": true, "kind": "function", "modifiers": [], "name": "_updateOracle", "nodeType": "FunctionDefinition", "parameters": {"id": 13349, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13339, "mutability": "mutable", "name": "lastChangeBlock", "nodeType": "VariableDeclaration", "scope": 13447, "src": "23357:23:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13338, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23357:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13342, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 13447, "src": "23390:25:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13340, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23390:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13341, "nodeType": "ArrayTypeName", "src": "23390:9:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 13344, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 13447, "src": "23425:17:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13343, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23425:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13346, "mutability": "mutable", "name": "eclpParams", "nodeType": "VariableDeclaration", "scope": 13447, "src": "23452:37:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_memory_ptr", "typeString": "struct GyroECLPMath.Params"}, "typeName": {"id": 13345, "name": "GyroECLPMath.Params", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9297, "src": "23452:19:20", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$9297_storage_ptr", "typeString": "struct GyroECLPMath.Params"}}, "visibility": "internal"}, {"constant": false, "id": 13348, "mutability": "mutable", "name": "derivedECLPParams", "nodeType": "VariableDeclaration", "scope": 13447, "src": "23499:51:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}, "typeName": {"id": 13347, "name": "GyroECLPMath.DerivedParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9312, "src": "23499:26:20", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$9312_storage_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}}, "visibility": "internal"}], "src": "23347:209:20"}, "returnParameters": {"id": 13350, "nodeType": "ParameterList", "parameters": [], "src": "23566:0:20"}, "scope": 13647, "src": "23325:1876:20", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [8481], "body": {"id": 13457, "nodeType": "Block", "src": "25688:87:20", "statements": []}, "id": 13458, "implemented": true, "kind": "function", "modifiers": [], "name": "_updateOracle", "nodeType": "FunctionDefinition", "overrides": {"id": 13455, "nodeType": "OverrideSpecifier", "overrides": [], "src": "25679:8:20"}, "parameters": {"id": 13454, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13449, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13458, "src": "25617:7:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13448, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25617:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13451, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13458, "src": "25634:7:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13450, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25634:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13453, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13458, "src": "25651:7:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13452, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25651:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "25607:57:20"}, "returnParameters": {"id": 13456, "nodeType": "ParameterList", "parameters": [], "src": "25688:0:20"}, "scope": 13647, "src": "25585:190:20", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 13484, "nodeType": "Block", "src": "26300:518:20", "statements": [{"assignments": [13465, 13467, 13469, 13471], "declarations": [{"constant": false, "id": 13465, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 13484, "src": "26528:16:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13464, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26528:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13467, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 13484, "src": "26546:20:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13466, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26546:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13469, "mutability": "mutable", "name": "gyroTreasury", "nodeType": "VariableDeclaration", "scope": 13484, "src": "26568:20:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 13468, "name": "address", "nodeType": "ElementaryTypeName", "src": "26568:7:20", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 13471, "mutability": "mutable", "name": "balTreasury", "nodeType": "VariableDeclaration", "scope": 13484, "src": "26590:19:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 13470, "name": "address", "nodeType": "ElementaryTypeName", "src": "26590:7:20", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 13476, "initialValue": {"arguments": [{"id": 13473, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6766, "src": "26652:14:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13474, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13461, "src": "26680:21:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 13472, "name": "_getDueProtocolFeeAmounts", "nodeType": "Identifier", "overloadedDeclarations": [13510, 13569], "referencedDeclaration": 13569, "src": "26613:25:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "function (uint256,uint256) view returns (uint256,uint256,address,address)"}}, "id": 13475, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26613:98:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "nodeType": "VariableDeclarationStatement", "src": "26527:184:20"}, {"expression": {"arguments": [{"id": 13478, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13465, "src": "26761:8:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13479, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13467, "src": "26771:12:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13480, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13469, "src": "26785:12:20", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 13481, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13471, "src": "26799:11:20", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 13477, "name": "_payFeesBpt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13601, "src": "26749:11:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$", "typeString": "function (uint256,uint256,address,address)"}}, "id": 13482, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26749:62:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13483, "nodeType": "ExpressionStatement", "src": "26749:62:20"}]}, "documentation": {"id": 13459, "nodeType": "StructuredDocumentation", "src": "25903:326:20", "text": " Note: This function is identical to that used in Gyro2CLPPool.sol\n @dev Computes and distributes fees between the Balancer and the Gyro treasury\n The fees are computed and distributed in BPT rather than using the\n Balancer regular distribution mechanism which would pay these in underlying"}, "id": 13485, "implemented": true, "kind": "function", "modifiers": [], "name": "_distributeFees", "nodeType": "FunctionDefinition", "parameters": {"id": 13462, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13461, "mutability": "mutable", "name": "invariantBeforeAction", "nodeType": "VariableDeclaration", "scope": 13485, "src": "26260:29:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13460, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26260:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "26259:31:20"}, "returnParameters": {"id": 13463, "nodeType": "ParameterList", "parameters": [], "src": "26300:0:20"}, "scope": 13647, "src": "26235:583:20", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [8685], "body": {"id": 13509, "nodeType": "Block", "src": "27299:42:20", "statements": [{"expression": {"arguments": [{"hexValue": "4e6f7420696d706c656d656e746564", "id": 13506, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "27316:17:20", "typeDescriptions": {"typeIdentifier": "t_stringliteral_9f5474d7a5849b3f79e8aee7ea2c60bcd36a60a08b4fa41f97e2fccf1c4df98b", "typeString": "literal_string \"Not implemented\""}, "value": "Not implemented"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_9f5474d7a5849b3f79e8aee7ea2c60bcd36a60a08b4fa41f97e2fccf1c4df98b", "typeString": "literal_string \"Not implemented\""}], "id": 13505, "name": "revert", "nodeType": "Identifier", "overloadedDeclarations": [-19, -19], "referencedDeclaration": -19, "src": "27309:6:20", "typeDescriptions": {"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory) pure"}}, "id": 13507, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27309:25:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13508, "nodeType": "ExpressionStatement", "src": "27309:25:20"}]}, "documentation": {"id": 13486, "nodeType": "StructuredDocumentation", "src": "26824:169:20", "text": " Note: This function is identical to that used in Gyro2CLPPool.sol\n @dev this function overrides inherited function to make sure it is never used"}, "id": 13510, "implemented": true, "kind": "function", "modifiers": [], "name": "_getDueProtocolFeeAmounts", "nodeType": "FunctionDefinition", "overrides": {"id": 13500, "nodeType": "OverrideSpecifier", "overrides": [], "src": "27263:8:20"}, "parameters": {"id": 13499, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13489, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13510, "src": "27042:16:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13487, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27042:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13488, "nodeType": "ArrayTypeName", "src": "27042:9:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 13492, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13510, "src": "27081:16:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13490, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27081:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13491, "nodeType": "ArrayTypeName", "src": "27081:9:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 13494, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13510, "src": "27129:7:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13493, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27129:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13496, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13510, "src": "27168:7:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13495, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27168:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13498, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13510, "src": "27206:7:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13497, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27206:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "27032:216:20"}, "returnParameters": {"id": 13504, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13503, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13510, "src": "27281:16:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 13501, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27281:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13502, "nodeType": "ArrayTypeName", "src": "27281:9:20", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "27280:18:20"}, "scope": 13647, "src": "26998:343:20", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 13568, "nodeType": "Block", "src": "27964:681:20", "statements": [{"assignments": [13527, 13529, 13531, 13533], "declarations": [{"constant": false, "id": 13527, "mutability": "mutable", "name": "protocolSwapFeePerc", "nodeType": "VariableDeclaration", "scope": 13568, "src": "27975:27:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13526, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27975:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13529, "mutability": "mutable", "name": "protocolFeeGyroPortion", "nodeType": "VariableDeclaration", "scope": 13568, "src": "28004:30:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13528, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28004:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13531, "mutability": "mutable", "name": "gyroTreasury", "nodeType": "VariableDeclaration", "scope": 13568, "src": "28036:20:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 13530, "name": "address", "nodeType": "ElementaryTypeName", "src": "28036:7:20", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 13533, "mutability": "mutable", "name": "balTreasury", "nodeType": "VariableDeclaration", "scope": 13568, "src": "28058:19:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 13532, "name": "address", "nodeType": "ElementaryTypeName", "src": "28058:7:20", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 13536, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 13534, "name": "_getFeesMetadata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13635, "src": "28081:16:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "function () view returns (uint256,uint256,address,address)"}}, "id": 13535, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28081:18:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "nodeType": "VariableDeclarationStatement", "src": "27974:125:20"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 13539, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 13537, "name": "protocolSwapFeePerc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13527, "src": "28195:19:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 13538, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "28218:1:20", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "28195:24:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 13547, "nodeType": "IfStatement", "src": "28191:95:20", "trueBody": {"id": 13546, "nodeType": "Block", "src": "28221:65:20", "statements": [{"expression": {"components": [{"hexValue": "30", "id": 13540, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "28243:1:20", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"hexValue": "30", "id": 13541, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "28246:1:20", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"id": 13542, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13531, "src": "28249:12:20", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 13543, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13533, "src": "28263:11:20", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 13544, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "28242:33:20", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_address_$_t_address_$", "typeString": "tuple(int_const 0,int_const 0,address,address)"}}, "functionReturnParameters": 13525, "id": 13545, "nodeType": "Return", "src": "28235:40:20"}]}}, {"assignments": [13549, 13551], "declarations": [{"constant": false, "id": 13549, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 13568, "src": "28330:16:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13548, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28330:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13551, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 13568, "src": "28348:20:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13550, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28348:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 13561, "initialValue": {"arguments": [{"id": 13554, "name": "previousInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13513, "src": "28416:17:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13555, "name": "currentInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13515, "src": "28447:16:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 13556, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24104, "src": "28477:11:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 13557, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28477:13:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13558, "name": "protocolSwapFeePerc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13527, "src": "28504:19:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13559, "name": "protocolFeeGyroPortion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13529, "src": "28537:22:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 13552, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18686, "src": "28372:12:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$18686_$", "typeString": "type(library GyroPoolMath)"}}, "id": 13553, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcProtocolFees", "nodeType": "MemberAccess", "referencedDeclaration": 18121, "src": "28372:30:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,uint256,uint256) pure returns (uint256,uint256)"}}, "id": 13560, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28372:197:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "28329:240:20"}, {"expression": {"components": [{"id": 13562, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13549, "src": "28588:8:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13563, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13551, "src": "28598:12:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13564, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13531, "src": "28612:12:20", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 13565, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13533, "src": "28626:11:20", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 13566, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "28587:51:20", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "functionReturnParameters": 13525, "id": 13567, "nodeType": "Return", "src": "28580:58:20"}]}, "documentation": {"id": 13511, "nodeType": "StructuredDocumentation", "src": "27347:379:20", "text": " @dev\n Note: This function is identical to that used in Gyro2CLPPool.sol.\n Calculates protocol fee amounts in BPT terms.\n protocolSwapFeePercentage is not used here b/c we take parameters from GyroConfig instead.\n Returns: BPT due to Gyro, BPT due to Balancer, receiving address for Gyro fees, receiving address for Balancer\n fees."}, "id": 13569, "implemented": true, "kind": "function", "modifiers": [], "name": "_getDueProtocolFeeAmounts", "nodeType": "FunctionDefinition", "parameters": {"id": 13516, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13513, "mutability": "mutable", "name": "previousInvariant", "nodeType": "VariableDeclaration", "scope": 13569, "src": "27766:25:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13512, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27766:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13515, "mutability": "mutable", "name": "currentInvariant", "nodeType": "VariableDeclaration", "scope": 13569, "src": "27793:24:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13514, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27793:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "27765:53:20"}, "returnParameters": {"id": 13525, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13518, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13569, "src": "27879:7:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13517, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27879:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13520, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13569, "src": "27900:7:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13519, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27900:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13522, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13569, "src": "27921:7:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 13521, "name": "address", "nodeType": "ElementaryTypeName", "src": "27921:7:20", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 13524, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13569, "src": "27942:7:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 13523, "name": "address", "nodeType": "ElementaryTypeName", "src": "27942:7:20", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "27865:94:20"}, "scope": 13647, "src": "27731:914:20", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 13600, "nodeType": "Block", "src": "28875:283:20", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 13582, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 13580, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13571, "src": "28933:8:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 13581, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "28944:1:20", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "28933:12:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 13589, "nodeType": "IfStatement", "src": "28929:82:20", "trueBody": {"id": 13588, "nodeType": "Block", "src": "28947:64:20", "statements": [{"expression": {"arguments": [{"id": 13584, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13575, "src": "28977:12:20", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 13585, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13571, "src": "28991:8:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 13583, "name": "_mintPoolTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22013, "src": "28961:15:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 13586, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28961:39:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13587, "nodeType": "ExpressionStatement", "src": "28961:39:20"}]}}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 13592, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 13590, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13573, "src": "29067:12:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 13591, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "29082:1:20", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "29067:16:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 13599, "nodeType": "IfStatement", "src": "29063:89:20", "trueBody": {"id": 13598, "nodeType": "Block", "src": "29085:67:20", "statements": [{"expression": {"arguments": [{"id": 13594, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13577, "src": "29115:11:20", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 13595, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13573, "src": "29128:12:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 13593, "name": "_mintPoolTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22013, "src": "29099:15:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 13596, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29099:42:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13597, "nodeType": "ExpressionStatement", "src": "29099:42:20"}]}}]}, "id": 13601, "implemented": true, "kind": "function", "modifiers": [], "name": "_payFeesBpt", "nodeType": "FunctionDefinition", "parameters": {"id": 13578, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13571, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 13601, "src": "28754:16:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13570, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28754:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13573, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 13601, "src": "28780:20:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13572, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28780:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13575, "mutability": "mutable", "name": "gyroTreasury", "nodeType": "VariableDeclaration", "scope": 13601, "src": "28810:20:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 13574, "name": "address", "nodeType": "ElementaryTypeName", "src": "28810:7:20", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 13577, "mutability": "mutable", "name": "balTreasury", "nodeType": "VariableDeclaration", "scope": 13601, "src": "28840:19:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 13576, "name": "address", "nodeType": "ElementaryTypeName", "src": "28840:7:20", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "28744:121:20"}, "returnParameters": {"id": 13579, "nodeType": "ParameterList", "parameters": [], "src": "28875:0:20"}, "scope": 13647, "src": "28724:434:20", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 13634, "nodeType": "Block", "src": "29410:324:20", "statements": [{"expression": {"components": [{"arguments": [{"expression": {"id": 13614, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19229, "src": "29460:14:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$19229_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 13615, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "PROTOCOL_SWAP_FEE_PERC_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 19219, "src": "29460:41:20", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 13612, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12247, "src": "29441:10:20", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$19214", "typeString": "contract IGyroConfig"}}, "id": 13613, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getUint", "nodeType": "MemberAccess", "referencedDeclaration": 19189, "src": "29441:18:20", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_uint256_$", "typeString": "function (bytes32) view external returns (uint256)"}}, "id": 13616, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29441:61:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"expression": {"id": 13619, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19229, "src": "29535:14:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$19229_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 13620, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "PROTOCOL_FEE_GYRO_PORTION_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 19222, "src": "29535:44:20", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 13617, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12247, "src": "29516:10:20", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$19214", "typeString": "contract IGyroConfig"}}, "id": 13618, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getUint", "nodeType": "MemberAccess", "referencedDeclaration": 19189, "src": "29516:18:20", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_uint256_$", "typeString": "function (bytes32) view external returns (uint256)"}}, "id": 13621, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29516:64:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"expression": {"id": 13624, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19229, "src": "29616:14:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$19229_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 13625, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "GYRO_TREASURY_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 19225, "src": "29616:32:20", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 13622, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12247, "src": "29594:10:20", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$19214", "typeString": "contract IGyroConfig"}}, "id": 13623, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getAddress", "nodeType": "MemberAccess", "referencedDeclaration": 19197, "src": "29594:21:20", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$", "typeString": "function (bytes32) view external returns (address)"}}, "id": 13626, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29594:55:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"expression": {"id": 13629, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19229, "src": "29685:14:20", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$19229_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 13630, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "BAL_TREASURY_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 19228, "src": "29685:31:20", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 13627, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12247, "src": "29663:10:20", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$19214", "typeString": "contract IGyroConfig"}}, "id": 13628, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getAddress", "nodeType": "MemberAccess", "referencedDeclaration": 19197, "src": "29663:21:20", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$", "typeString": "function (bytes32) view external returns (address)"}}, "id": 13631, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29663:54:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 13632, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "29427:300:20", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "functionReturnParameters": 13611, "id": 13633, "nodeType": "Return", "src": "29420:307:20"}]}, "id": 13635, "implemented": true, "kind": "function", "modifiers": [], "name": "_getFeesMetadata", "nodeType": "FunctionDefinition", "parameters": {"id": 13602, "nodeType": "ParameterList", "parameters": [], "src": "29262:2:20"}, "returnParameters": {"id": 13611, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13604, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13635, "src": "29325:7:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13603, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "29325:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13606, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13635, "src": "29346:7:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13605, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "29346:7:20", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13608, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13635, "src": "29367:7:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 13607, "name": "address", "nodeType": "ElementaryTypeName", "src": "29367:7:20", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 13610, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13635, "src": "29388:7:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 13609, "name": "address", "nodeType": "ElementaryTypeName", "src": "29388:7:20", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "29311:94:20"}, "scope": 13647, "src": "29237:497:20", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [9231], "body": {"id": 13645, "nodeType": "Block", "src": "29796:35:20", "statements": [{"expression": {"arguments": [{"id": 13642, "name": "paused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13637, "src": "29817:6:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 13641, "name": "_setPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23972, "src": "29806:10:20", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$", "typeString": "function (bool)"}}, "id": 13643, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29806:18:20", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13644, "nodeType": "ExpressionStatement", "src": "29806:18:20"}]}, "id": 13646, "implemented": true, "kind": "function", "modifiers": [], "name": "_setPausedState", "nodeType": "FunctionDefinition", "overrides": {"id": 13639, "nodeType": "OverrideSpecifier", "overrides": [], "src": "29787:8:20"}, "parameters": {"id": 13638, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13637, "mutability": "mutable", "name": "paused", "nodeType": "VariableDeclaration", "scope": 13646, "src": "29765:11:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 13636, "name": "bool", "nodeType": "ElementaryTypeName", "src": "29765:4:20", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "29764:13:20"}, "returnParameters": {"id": 13640, "nodeType": "ParameterList", "parameters": [], "src": "29796:0:20"}, "scope": 13647, "src": "29740:91:20", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}], "scope": 13648, "src": "1388:28445:20"}], "src": "688:29146:20"}, "bytecode": "", "bytecodeSha1": "693d580a1521b87acdccb651c1a513a642891af3", "compiler": {"evm_version": "berlin", "optimizer": {"enabled": true, "runs": 200}, "version": "0.7.6+commit.7338295f"}, "contractName": "GyroECLPPool", "coverageMap": {"branches": {"112": {}, "113": {}, "114": {}, "115": {}, "117": {}, "118": {}, "119": {}, "120": {}, "128": {"SafeCast.toInt256": {"533": [6444, 6458, true]}, "SafeCast.toUint256": {"532": [3365, 3375, true]}}, "14": {"CappedLiquidity._ensureCap": {"479": [2206, 2259, true]}, "CappedLiquidity.setCapManager": {"476": [1376, 1400, true]}, "CappedLiquidity.setCapParams": {"477": [1704, 1728, true], "478": [1764, 1785, true]}}, "15": {"ExtensibleWeightedPool2Tokens._cacheInvariantAndSupply": {"482": [34203, 34227, false]}, "ExtensibleWeightedPool2Tokens._queryAction": {"483": [43701, 43728, false]}, "ExtensibleWeightedPool2Tokens._scalingFactor": {"484": [40277, 40283, true]}, "ExtensibleWeightedPool2Tokens.enableOracle": {"480": [8475, 8492, false]}, "ExtensibleWeightedPool2Tokens.onExitPool": {"481": [24700, 24714, false]}}, "17": {"LocallyPausable.changePauseManager": {"499": [791, 824, true]}, "LocallyPausable.pause": {"500": [1056, 1082, true]}, "LocallyPausable.unpause": {"498": [1269, 1295, true]}}, "18": {}, "19": {}, "20": {"GyroECLPPool._balancesFromTokenInOut": {"462": [22760, 22775, false]}, "GyroECLPPool._doExit": {"466": [21333, 21394, false]}, "GyroECLPPool._doJoin": {"467": [15923, 15988, false]}, "GyroECLPPool._getDueProtocolFeeAmounts": {"468": [28195, 28219, false]}, "GyroECLPPool._onExitPool": {"460": [18668, 18682, false]}, "GyroECLPPool._onJoinPool": {"461": [14671, 14692, false]}, "GyroECLPPool._payFeesBpt": {"469": [28933, 28945, false], "470": [29067, 29083, false]}, "GyroECLPPool._updateOracle": {"463": [23618, 23642, false], "464": [23646, 23676, false], "465": [24817, 24857, false]}, "GyroECLPPool.onSwap": {"455": [5935, 5961, false], "456": [5965, 5992, false], "457": [6051, 6077, false], "458": [6081, 6108, false], "459": [7762, 7802, false]}}, "21": {}, "36": {}, "39": {}, "41": {}, "42": {}, "43": {}, "44": {"GyroFixedPoint.divDown": {"486": [3940, 3946, false], "487": [4024, 4030, false]}, "GyroFixedPoint.divUp": {"491": [4543, 4549, false], "492": [4627, 4633, false]}, "GyroFixedPoint.mulDown": {"493": [2361, 2367, true], "494": [2371, 2387, false]}, "GyroFixedPoint.mulUp": {"488": [2836, 2842, true], "489": [2846, 2862, false], "490": [2940, 2952, false]}}, "45": {"GyroPoolMath._calcProtocolFees": {"496": [5676, 5713, false]}, "GyroPoolMath.liquidityInvariantUpdate": {"495": [11732, 11745, false]}}, "46": {"SignedFixedPoint.mulDownMag": {"534": [2599, 2605, true], "535": [2609, 2625, false]}}, "48": {"BalancerPoolToken.allowance": {"474": [2364, 2394, false]}, "BalancerPoolToken.decreaseAllowance": {"473": [3611, 3637, false]}, "BalancerPoolToken.transferFrom": {"471": [3030, 3050, false], "472": [3054, 3085, false]}}, "51": {"BasePoolAuthorization._canPerform": {"475": [2112, 2140, false]}}, "54": {}, "55": {}, "56": {}, "57": {}, "58": {}, "59": {}, "61": {}, "63": {}, "64": {}, "65": {}, "66": {}, "69": {}, "70": {}, "71": {}, "72": {"InputHelpers.ensureArrayIsSorted": {"497": [1496, 1512, false]}}, "73": {}, "75": {"TemporarilyPausable._setPaused": {"536": [3849, 3855, false]}}, "76": {"WordCodec.decodeInt22": {"538": [12558, 12577, true]}, "WordCodec.decodeInt53": {"539": [13167, 13186, true]}, "WordCodec.insertBool": {"537": [3342, 3347, true]}}, "77": {"FixedPoint.powDown": {"485": [3961, 3975, false]}}, "78": {"LogExpMath._ln": {"507": [14218, 14228, false], "508": [15949, 15965, false], "509": [16073, 16089, false], "510": [16469, 16476, false], "511": [16561, 16568, false], "512": [16653, 16660, false], "513": [16745, 16752, false], "514": [16837, 16844, false], "515": [16929, 16936, false], "516": [17021, 17028, false], "517": [17113, 17120, false], "518": [17205, 17213, false], "519": [17300, 17308, false]}, "LogExpMath.exp": {"520": [7439, 7444, false], "521": [9117, 9124, false], "522": [9194, 9201, false], "523": [9742, 9749, false], "524": [9843, 9850, false], "525": [9944, 9951, false], "526": [10045, 10052, false], "527": [10146, 10153, false], "528": [10247, 10254, false], "529": [10348, 10355, false], "530": [10449, 10456, false]}, "LogExpMath.ln": {"501": [13889, 13910, false], "502": [13914, 13935, false]}, "LogExpMath.pow": {"503": [4946, 4952, false], "504": [5087, 5093, false], "505": [6071, 6099, false], "506": [6103, 6131, false]}}, "79": {"Math.divUp": {"531": [2443, 2449, false]}}, "80": {}, "83": {}, "84": {}, "85": {}, "88": {}, "89": {}, "93": {}}, "statements": {"112": {}, "113": {}, "114": {}, "115": {}, "117": {}, "118": {}, "119": {}, "120": {}, "128": {"SafeCast.toInt256": {"298": [6436, 6503]}, "SafeCast.toUint256": {"218": [3357, 3412], "219": [3422, 3443]}}, "14": {"CappedLiquidity._ensureCap": {"293": [2198, 2279], "294": [2289, 2367]}, "CappedLiquidity.capParams": {"28": [1591, 1608]}, "CappedLiquidity.setCapManager": {"3": [1368, 1418], "4": [1428, 1452], "5": [1462, 1497]}, "CappedLiquidity.setCapParams": {"55": [1696, 1746], "56": [1756, 1797], "57": [1808, 1849], "58": [1859, 1906], "59": [1916, 1955], "60": [1966, 1999]}}, "15": {"ExtensibleWeightedPool2Tokens._cacheInvariantAndSupply": {"153": [34243, 34322], "154": [34336, 34416], "155": [34430, 34450]}, "ExtensibleWeightedPool2Tokens._downscaleDown": {"229": [41329, 41371]}, "ExtensibleWeightedPool2Tokens._downscaleDownArray": {"179": [41650, 41709], "180": [41719, 41779]}, "ExtensibleWeightedPool2Tokens._downscaleUp": {"231": [42091, 42131]}, "ExtensibleWeightedPool2Tokens._downscaleUpArray": {"209": [42406, 42463], "210": [42473, 42531]}, "ExtensibleWeightedPool2Tokens._getAuthorizer": {"237": [42992, 43025]}, "ExtensibleWeightedPool2Tokens._getOracleIndex": {"142": [34551, 34581]}, "ExtensibleWeightedPool2Tokens._isOwnerOnlyAction": {"317": [7784, 7954]}, "ExtensibleWeightedPool2Tokens._normalizedWeights": {"238": [9148, 9195], "239": [9205, 9253], "240": [9263, 9287], "305": [9391, 9446]}, "ExtensibleWeightedPool2Tokens._queryAction": {"181": [47680, 47703], "182": [48012, 48041]}, "ExtensibleWeightedPool2Tokens._scalingFactor": {"211": [40270, 40319]}, "ExtensibleWeightedPool2Tokens._setOracleEnabled": {"151": [8617, 8664], "152": [8674, 8708]}, "ExtensibleWeightedPool2Tokens._setSwapFeePercentage": {"159": [7355, 7442], "160": [7452, 7539], "161": [7550, 7611], "162": [7621, 7669]}, "ExtensibleWeightedPool2Tokens._upscale": {"212": [40587, 40625]}, "ExtensibleWeightedPool2Tokens._upscaleArray": {"197": [40892, 40947], "198": [40957, 41013]}, "ExtensibleWeightedPool2Tokens.enableOracle": {"18": [8362, 8385], "19": [8508, 8534]}, "ExtensibleWeightedPool2Tokens.getInvariant": {"96": [9909, 9932], "97": [10010, 10078]}, "ExtensibleWeightedPool2Tokens.getLastInvariant": {"75": [9529, 9550]}, "ExtensibleWeightedPool2Tokens.getMiscData": {"32": [6600, 6638], "33": [6648, 6690], "34": [6700, 6772], "35": [6782, 6818], "36": [6828, 6868], "37": [6878, 6926]}, "ExtensibleWeightedPool2Tokens.getNormalizedWeights": {"117": [8956, 8983]}, "ExtensibleWeightedPool2Tokens.getPoolId": {"26": [6218, 6232]}, "ExtensibleWeightedPool2Tokens.getRate": {"43": [39388, 39445]}, "ExtensibleWeightedPool2Tokens.getSwapFeePercentage": {"38": [7011, 7047]}, "ExtensibleWeightedPool2Tokens.onExitPool": {"49": [23807, 23830], "50": [24236, 24272], "51": [24384, 24415], "52": [24425, 24467], "53": [24730, 24756], "54": [24777, 24819]}, "ExtensibleWeightedPool2Tokens.onJoinPool": {"102": [14060, 14142], "103": [14437, 14495], "104": [14509, 14550], "105": [14564, 14619], "106": [14706, 14734], "107": [14824, 14864], "108": [14895, 14918], "109": [14995, 15051], "110": [15066, 15345], "111": [15459, 15499], "112": [15586, 15614], "113": [15713, 15755], "114": [15917, 15943]}, "ExtensibleWeightedPool2Tokens.queryExit": {"39": [36946, 37001], "40": [37012, 37149]}, "ExtensibleWeightedPool2Tokens.queryJoin": {"70": [35555, 35610], "71": [35621, 35756]}, "ExtensibleWeightedPool2Tokens.setPaused": {"6": [8842, 8860]}, "ExtensibleWeightedPool2Tokens.setSwapFeePercentage": {"25": [7226, 7266]}}, "17": {"LocallyPausable.changePauseManager": {"63": [783, 845], "64": [855, 883], "65": [893, 953]}, "LocallyPausable.pause": {"66": [1048, 1103], "67": [1113, 1134], "68": [1144, 1164]}, "LocallyPausable.unpause": {"29": [1261, 1316], "30": [1326, 1348], "31": [1358, 1380]}}, "18": {"GyroECLPMath.scalarProd": {"258": [6437, 6491]}, "GyroECLPMath.validateParams": {"120": [4032, 4117], "121": [4127, 4212], "122": [4341, 4535], "123": [4546, 4659]}}, "19": {"GyroECLPOracleMath._calcLogInvariantDivSupply": {"300": [4203, 4242]}, "GyroECLPOracleMath._calcLogSpotPrice": {"299": [1532, 1576]}}, "20": {"GyroECLPPool._balancesFromTokenInOut": {"213": [22719, 22746], "214": [22791, 22819], "215": [22833, 22862], "216": [22893, 22922], "217": [22936, 22964]}, "GyroECLPPool._distributeFees": {"273": [26749, 26811]}, "GyroECLPPool._doExit": {"274": [21410, 21485], "275": [21516, 21551]}, "GyroECLPPool._doJoin": {"291": [16004, 16082], "292": [16113, 16148]}, "GyroECLPPool._exitExactBPTInForTokensOut": {"326": [22463, 22495]}, "GyroECLPPool._getDueProtocolFeeAmounts": {"322": [28235, 28275], "323": [28580, 28638]}, "GyroECLPPool._getFeesMetadata": {"399": [29420, 29727]}, "GyroECLPPool._onExitPool": {"171": [19251, 19345], "172": [19360, 19398], "173": [19413, 19468], "174": [19926, 20038], "175": [20053, 20115], "176": [20346, 20401], "177": [20746, 20780], "178": [20913, 20963]}, "GyroECLPPool._onInitializePool": {"245": [11334, 11404], "246": [11481, 11537], "247": [11547, 11571], "248": [11823, 11875], "249": [12157, 12192], "250": [12203, 12235]}, "GyroECLPPool._onJoinPool": {"203": [14422, 14516], "204": [14527, 14565], "205": [14708, 14769], "206": [15213, 15325], "207": [15336, 15398], "208": [15521, 15571]}, "GyroECLPPool._onSwapGivenIn": {"228": [9623, 9746]}, "GyroECLPPool._onSwapGivenOut": {"230": [10151, 10274]}, "GyroECLPPool._payFeesBpt": {"324": [28961, 29000], "325": [29099, 29141]}, "GyroECLPPool._updateOracle": {"220": [24929, 24983], "221": [25001, 25070], "222": [25088, 25108], "223": [25127, 25170]}, "GyroECLPPool.getECLPParams": {"61": [5027, 5057]}, "GyroECLPPool.onSwap": {"76": [6008, 6030], "77": [6124, 6147], "78": [6178, 6229], "79": [6440, 6503], "80": [6513, 6579], "81": [7404, 7485], "82": [7628, 7737], "83": [8099, 8177], "84": [8319, 8366], "85": [8453, 8508], "86": [8539, 8603], "87": [8745, 8791], "88": [8876, 8931], "89": [9151, 9209]}, "GyroECLPPool.reconstructECLPParams": {"200": [4582, 4709], "201": [4719, 4822], "202": [4832, 4884]}}, "21": {}, "36": {}, "39": {}, "41": {}, "42": {}, "43": {"_grequire": {"257": [337, 356]}, "_grevert": {"316": [841, 870]}}, "44": {"GyroFixedPoint.add": {"327": [1881, 1917]}, "GyroFixedPoint.complement": {"232": [9904, 9936]}, "GyroFixedPoint.divDown": {"192": [3962, 3999], "193": [4046, 4054], "194": [4155, 4191], "195": [4228, 4248]}, "GyroFixedPoint.divUp": {"233": [4565, 4602], "234": [4649, 4657], "235": [4758, 4809], "236": [5143, 5175]}, "GyroFixedPoint.mulDown": {"328": [2404, 2440]}, "GyroFixedPoint.mulUp": {"224": [2879, 2915], "225": [2968, 2976], "226": [3294, 3326]}, "GyroFixedPoint.sub": {"227": [2137, 2173]}}, "45": {"GyroPoolMath._calcAllTokensInGivenExactBptOut": {"406": [2636, 2678], "407": [2748, 2804], "408": [2729, 2732]}, "GyroPoolMath._calcProtocolFees": {"400": [6091, 6104], "401": [7089, 7120]}, "GyroPoolMath._calcTokensOutGivenExactBptIn": {"403": [4168, 4211], "404": [4281, 4341], "405": [4262, 4265]}, "GyroPoolMath.liquidityInvariantUpdate": {"276": [11919, 11953], "277": [12169, 12203]}}, "46": {"SignedFixedPoint.add": {"131": [1852, 1888]}, "SignedFixedPoint.mulDownMag": {"129": [2628, 2664], "130": [2675, 2695]}}, "48": {"BalancerPoolToken._burnPoolTokens": {"199": [4092, 4113]}, "BalancerPoolToken._mintPoolTokens": {"251": [3979, 4003]}, "BalancerPoolToken.allowance": {"115": [2410, 2428], "116": [2459, 2497]}, "BalancerPoolToken.decreaseAllowance": {"90": [3653, 3685], "91": [3772, 3828], "92": [3849, 3860]}, "BalancerPoolToken.getVault": {"73": [1938, 1951]}, "BalancerPoolToken.transferFrom": {"14": [2867, 2968], "15": [2979, 3015], "16": [3218, 3273], "17": [3294, 3305]}}, "51": {"BasePoolAuthorization._canPerform": {"259": [2251, 2282], "260": [2428, 2496]}, "BasePoolAuthorization.getAuthorizer": {"94": [1933, 1956]}, "BasePoolAuthorization.getOwner": {"72": [1836, 1849]}}, "54": {}, "55": {}, "56": {"Buffer.add": {"409": [1504, 1534]}, "Buffer.next": {"332": [1276, 1296]}}, "57": {"PoolPriceOracle._getPastAccumulator": {"196": [6913, 6991]}, "PoolPriceOracle._getSample": {"183": [7580, 7602]}, "PoolPriceOracle._processPriceData": {"301": [6562, 6620], "302": [6675, 6705]}, "PoolPriceOracle.dirtyUninitializedOracleSamples": {"21": [3512, 3592], "22": [3947, 3971], "23": [3876, 3879]}, "PoolPriceOracle.getLargestSafeQueryWindow": {"118": [4117, 4132]}, "PoolPriceOracle.getLatest": {"95": [4234, 4310]}, "PoolPriceOracle.getPastAccumulators": {"44": [4935, 4973], "45": [5137, 5155], "46": [5169, 5241], "47": [5118, 5121]}, "PoolPriceOracle.getSample": {"41": [2874, 2932], "42": [2987, 3009]}, "PoolPriceOracle.getTimeWeightedAverage": {"11": [4496, 4535], "12": [4654, 4739], "13": [4635, 4638]}}, "58": {}, "59": {"Samples._accLogBptPrice": {"283": [6629, 6681]}, "Samples._accLogInvariant": {"285": [7116, 7168]}, "Samples._accLogPairPrice": {"281": [6143, 6196]}, "Samples._instLogBptPrice": {"282": [6388, 6441]}, "Samples._instLogInvariant": {"284": [6874, 6927]}, "Samples._instLogPairPrice": {"280": [5899, 5953]}, "Samples.pack": {"156": [7553, 8032]}, "Samples.timestamp": {"157": [5660, 5705]}, "Samples.unpack": {"184": [8468, 8508], "185": [8518, 8560], "186": [8570, 8608], "187": [8618, 8658], "188": [8668, 8708], "189": [8718, 8760], "190": [8770, 8800]}, "Samples.update": {"331": [4143, 4413]}}, "61": {"WeightedMath._calculateInvariant": {"241": [4051, 4123], "242": [4032, 4035], "243": [4144, 4190]}}, "63": {"WeightedPool2TokensMiscData.logInvariant": {"164": [2316, 2362]}, "WeightedPool2TokensMiscData.logTotalSupply": {"165": [2532, 2581]}, "WeightedPool2TokensMiscData.oracleEnabled": {"168": [3221, 3267]}, "WeightedPool2TokensMiscData.oracleIndex": {"167": [3019, 3065]}, "WeightedPool2TokensMiscData.oracleSampleCreationTimestamp": {"166": [2786, 2852]}, "WeightedPool2TokensMiscData.setLogInvariant": {"263": [3697, 3758]}, "WeightedPool2TokensMiscData.setLogTotalSupply": {"264": [3985, 4051]}, "WeightedPool2TokensMiscData.setOracleEnabled": {"124": [4911, 4973]}, "WeightedPool2TokensMiscData.setOracleIndex": {"303": [4636, 4696]}, "WeightedPool2TokensMiscData.setOracleSampleCreationTimestamp": {"304": [4322, 4407]}, "WeightedPool2TokensMiscData.setSwapFeePercentage": {"125": [5197, 5270]}, "WeightedPool2TokensMiscData.swapFeePercentage": {"169": [3424, 3477]}}, "64": {"WeightedPoolUserDataHelpers.exactBptInForTokensOut": {"402": [2448, 2520]}, "WeightedPoolUserDataHelpers.initialAmountsIn": {"311": [1311, 1383]}, "WeightedPoolUserDataHelpers.joinKind": {"310": [964, 1016]}}, "65": {"Authentication._authenticateCaller": {"134": [2404, 2474]}, "Authentication.getActionId": {"69": [2842, 2910]}}, "66": {"_require": {"143": [946, 964]}}, "69": {}, "70": {}, "71": {}, "72": {"InputHelpers.ensureArrayIsSorted": {"119": [1369, 1402], "253": [1528, 1535], "254": [1689, 1740], "255": [1754, 1772], "256": [1630, 1633]}, "InputHelpers.ensureInputLengthMatch": {"170": [888, 934]}}, "73": {"LogCompression.toLowResLog": {"262": [2298, 2342]}}, "75": {"TemporarilyPausable._ensureNotPaused": {"150": [4272, 4311]}, "TemporarilyPausable._getBufferPeriodEndTime": {"141": [5084, 5111]}, "TemporarilyPausable._getPauseWindowEndTime": {"140": [4969, 4995]}, "TemporarilyPausable._isNotPaused": {"139": [4712, 4774]}, "TemporarilyPausable._setPaused": {"135": [3871, 3952], "136": [3983, 4066], "137": [4087, 4103], "138": [4113, 4144]}, "TemporarilyPausable.getPausedState": {"8": [3374, 3398], "9": [3408, 3453], "10": [3463, 3510]}}, "76": {"WordCodec.decodeBool": {"271": [9819, 9866]}, "WordCodec.decodeInt22": {"269": [12551, 12615]}, "WordCodec.decodeInt53": {"329": [13160, 13224]}, "WordCodec.decodeUint10": {"270": [10628, 10669]}, "WordCodec.decodeUint31": {"268": [11156, 11197]}, "WordCodec.decodeUint64": {"272": [11684, 11725]}, "WordCodec.encodeInt22": {"267": [9118, 9171]}, "WordCodec.encodeInt53": {"266": [9547, 9600]}, "WordCodec.encodeUint": {"265": [8696, 8727]}, "WordCodec.insertBool": {"127": [3305, 3367]}, "WordCodec.insertInt22": {"321": [7697, 7764]}, "WordCodec.insertUint10": {"333": [4969, 5014]}, "WordCodec.insertUint31": {"334": [6012, 6057]}, "WordCodec.insertUint64": {"128": [7104, 7149]}}, "77": {"FixedPoint.mulDown": {"308": [1761, 1818], "309": [1829, 1849]}, "FixedPoint.mulUp": {"344": [1974, 2031], "345": [2074, 2082], "346": [2430, 2462]}, "FixedPoint.powDown": {"306": [3991, 3999], "307": [4030, 4055]}}, "78": {"LogExpMath._ln": {"363": [14549, 14585], "364": [15981, 15988], "365": [16039, 16048], "366": [16105, 16112], "367": [16163, 16172], "368": [16314, 16324], "369": [16334, 16342], "370": [16492, 16513], "371": [16527, 16536], "372": [16584, 16605], "373": [16619, 16628], "374": [16676, 16697], "375": [16711, 16720], "376": [16768, 16789], "377": [16860, 16881], "378": [16952, 16973], "379": [16987, 16996], "380": [17044, 17065], "381": [17079, 17088], "382": [17136, 17157], "383": [17171, 17180], "384": [17229, 17251], "385": [17265, 17275], "386": [17324, 17346], "387": [18279, 18311], "388": [18321, 18341], "389": [18352, 18384], "390": [18394, 18414], "391": [18425, 18457], "392": [18467, 18487], "393": [18498, 18530], "394": [18540, 18560], "395": [18571, 18603], "396": [18613, 18634], "397": [18793, 18807], "398": [19073, 19103]}, "LogExpMath._ln_36": {"347": [19646, 19657], "348": [21063, 21083], "349": [20456, 20476], "350": [20414, 20446], "351": [20529, 20549], "352": [20487, 20519], "353": [20602, 20622], "354": [20560, 20592], "355": [20675, 20695], "356": [20633, 20665], "357": [20748, 20769], "358": [20706, 20738], "359": [20822, 20843], "360": [20780, 20812], "361": [20896, 20917], "362": [20854, 20886]}, "LogExpMath.exp": {"410": [7335, 7424], "411": [7741, 7777], "412": [9140, 9147], "413": [9217, 9224], "414": [9281, 9292], "415": [9483, 9491], "416": [9765, 9772], "417": [9786, 9819], "418": [9866, 9873], "419": [9887, 9920], "420": [9967, 9974], "421": [9988, 10021], "422": [10068, 10075], "423": [10089, 10122], "424": [10169, 10176], "425": [10190, 10223], "426": [10270, 10277], "427": [10291, 10324], "428": [10371, 10378], "429": [10392, 10425], "430": [10472, 10479], "431": [10493, 10526], "432": [11323, 11355], "433": [11365, 11382], "434": [11393, 11425], "435": [11435, 11452], "436": [11463, 11495], "437": [11505, 11522], "438": [11533, 11565], "439": [11575, 11592], "440": [11603, 11635], "441": [11645, 11662], "442": [11673, 11705], "443": [11715, 11732], "444": [11743, 11775], "445": [11785, 11802], "446": [11813, 11845], "447": [11855, 11872], "448": [11883, 11916], "449": [11926, 11943], "450": [11954, 11987], "451": [11997, 12014], "452": [12025, 12058], "453": [12068, 12085], "454": [12586, 12643]}, "LogExpMath.ln": {"318": [13838, 13875], "319": [13951, 13976], "320": [14007, 14020]}, "LogExpMath.pow": {"335": [5040, 5062], "336": [5109, 5117], "337": [5498, 5542], "338": [5933, 5990], "339": [6581, 6670], "340": [6701, 6740], "341": [6760, 6782], "342": [6856, 7006], "343": [7017, 7050]}}, "79": {"Math.divDown": {"278": [2238, 2276], "279": [2286, 2298]}, "Math.divUp": {"295": [2390, 2428], "296": [2465, 2473], "297": [2504, 2526]}, "Math.mul": {"191": [1897, 1948]}, "Math.sub": {"126": [1025, 1062]}}, "80": {}, "83": {"EIP712._domainSeparatorV4": {"158": [2466, 2567]}, "EIP712._hashTypedDataV4": {"244": [3295, 3375]}}, "84": {"ERC20._approve": {"132": [9468, 9504], "133": [9514, 9551]}, "ERC20._burn": {"286": [8587, 8655], "287": [8666, 8715], "288": [8726, 8814], "289": [8824, 8863], "290": [8873, 8915]}, "ERC20._mint": {"312": [7973, 8022], "313": [8033, 8072], "314": [8082, 8133], "315": [8143, 8185]}, "ERC20._transfer": {"144": [7195, 7266], "145": [7276, 7348], "146": [7359, 7406], "147": [7417, 7505], "148": [7515, 7570], "149": [7580, 7620]}, "ERC20.allowance": {"252": [3993, 4027]}, "ERC20.approve": {"1": [4271, 4308], "2": [4318, 4329]}, "ERC20.balanceOf": {"48": [3422, 3447]}, "ERC20.decimals": {"20": [3098, 3114]}, "ERC20.increaseAllowance": {"27": [5688, 5767]}, "ERC20.name": {"0": [2200, 2212]}, "ERC20.symbol": {"74": [2396, 2410]}, "ERC20.totalSupply": {"7": [3253, 3272]}, "ERC20.transfer": {"93": [3759, 3799]}}, "85": {"ERC20Permit.DOMAIN_SEPARATOR": {"24": [2438, 2465]}, "ERC20Permit.nonces": {"62": [2207, 2228]}, "ERC20Permit.permit": {"98": [1575, 1635], "99": [1902, 1981], "100": [1992, 2018], "101": [2028, 2059]}}, "88": {}, "89": {}, "93": {"SafeMath.add": {"163": [1019, 1056]}, "SafeMath.sub": {"261": [1861, 1888], "330": [1430, 1467]}}}}, "dependencies": ["Authentication", "BalancerPoolToken", "BasePoolAuthorization", "Buffer", "CappedLiquidity", "EIP712", "ERC20", "ERC20Permit", "Errors", "ExtensibleWeightedPool2Tokens", "FixedPoint", "GyroConfigKeys", "GyroECLPMath", "GyroECLPOracleMath", "GyroECLPPoolErrors", "GyroErrors", "GyroFixedPoint", "GyroPoolMath", "IAsset", "IAuthentication", "IAuthorizer", "IBasePool", "ICappedLiquidity", "IERC20", "IERC20Permit", "IFlashLoanRecipient", "IGyroConfig", "ILocallyPausable", "IMinimalSwapInfoPool", "IPoolPriceOracle", "IPoolSwapStructs", "IPriceOracle", "IProtocolFeesCollector", "ISignaturesValidator", "ITemporarilyPausable", "IVault", "IWETH", "InputHelpers", "LocallyPausable", "LogCompression", "LogExpMath", "Math", "PoolPriceOracle", "QueryProcessor", "SafeCast", "SafeMath", "Samples", "SignedFixedPoint", "TemporarilyPausable", "WeightedMath", "WeightedPool2TokensMiscData", "WeightedPoolUserDataHelpers", "WordCodec"], "deployedBytecode": "608060405234801561001057600080fd5b50600436106103db5760003560e01c806374f3b0091161020a578063a9059cbb11610125578063c4fea7c9116100b8578063dc09f3aa11610087578063dc09f3aa14610799578063dd62ed3e146107a1578063ddb387c9146107b4578063f89f27ed146107bc578063ffd088eb146107c4576103db565b8063c4fea7c914610763578063ce4823871461076b578063d505accf14610773578063d5c096c414610786576103db565b8063b48b5b40116100f4578063b48b5b4014610743578063bcc436921461074b578063c0ff1a1514610753578063c2c3bd6a1461075b576103db565b8063a9059cbb1461070d578063aaabadc514610720578063abd13afe14610728578063b10be73914610730576103db565b8063851c1bb31161019d57806395d89b411161016c57806395d89b41146106d75780639b02cdde146106df5780639d2c110c146106e7578063a457c2d7146106fa576103db565b8063851c1bb3146106a157806387ec6817146106b4578063893d20e8146106c75780638d928af8146106cf576103db565b80637ef355cd116101d95780637ef355cd146106765780638002df181461067e5780638143eb76146106915780638456cb5914610699576103db565b806374f3b0091461061957806376e54a461461063a5780637be219a21461064d5780637ecebe0014610663576103db565b806338fff2d0116102fa578063591a137f1161028d578063679aefce1161025c578063679aefce146105d65780636b843239146105de5780636d785a87146105fe57806370a0823114610606576103db565b8063591a137f1461057f5780636028bfd41461058757806360d1507c146105a857806366e9ddf4146105ce576103db565b806344bbdb55116102c957806344bbdb55146105405780634a6b0b151461055557806355c676281461056f57806358ecbcc314610577576103db565b806338fff2d01461050857806339509351146105105780633aeae0d3146105235780633f4ba83a14610538576103db565b80631dccd83011610372578063313ce56711610341578063313ce567146104c55780633331bc36146104da5780633644e515146104ed57806338e9922e146104f5576103db565b80631dccd830146104825780632024cf41146104a257806323b872dd146104aa578063292c914a146104bd576103db565b806316c38b3c116103ae57806316c38b3c1461044857806318160ddd1461045b5780631c0de051146104635780631d86bb991461047a576103db565b806306fdde03146103e0578063095ea7b3146103fe5780630e608b301461041e5780631469ed6c14610433575b600080fd5b6103e86107cc565b6040516103f59190615d61565b60405180910390f35b61041161040c366004615415565b610862565b6040516103f59190615c5a565b61043161042c3660046152f0565b610879565b005b61043b61092a565b6040516103f59190615c7d565b6104316104563660046156a5565b61094e565b61043b610962565b61046b610968565b6040516103f593929190615c65565b61043b610991565b6104956104903660046155d9565b6109b5565b6040516103f59190615b29565b61043b610ad8565b6104116104b8366004615360565b610afc565b610431610b72565b6104cd610ba6565b6040516103f59190615ea9565b6104316104e83660046159c4565b610baf565b61043b610c27565b6104316105033660046159ac565b610c36565b61043b610c4f565b61041161051e366004615415565b610c73565b61052b610cae565b6040516103f59190615db4565b610431610cf9565b610548610dee565b6040516103f59190615ad1565b61055d610dfd565b6040516103f596959493929190615cb6565b61043b610e58565b61043b610e65565b61043b610e89565b61059a6105953660046156bf565b610ead565b6040516103f5929190615e82565b6105bb6105b63660046159ac565b610ede565b6040516103f59796959493929190615c86565b61043b610f27565b61043b610f4b565b6105f16105ec36600461550b565b610f70565b6040516103f59190615ae5565b610548611026565b61043b6106143660046152f0565b611035565b61062c6106273660046156bf565b611054565b6040516103f5929190615b3c565b610431610648366004615838565b6110f9565b610655611220565b6040516103f5929190615e14565b61043b6106713660046152f0565b611240565b61043b61125b565b61043161068c3660046152f0565b61127f565b61043b611365565b610431611389565b61043b6106af3660046157bb565b611441565b61059a6106c23660046156bf565b61149a565b6105486114bf565b6105486114e3565b6103e8611507565b61043b611568565b61043b6106f53660046158b6565b61156e565b610411610708366004615415565b611923565b61041161071b366004615415565b611961565b61054861196e565b610548611978565b61043b61073e3660046157e3565b611987565b61043b611a1c565b61043b611a22565b61043b611a46565b61043b611b01565b61043b611b25565b61043b611b49565b6104316107813660046153a0565b611b6d565b61062c6107943660046156bf565b611cdd565b61043b611dfd565b61043b6107af366004615328565b611e21565b61043b611e5e565b610495611e82565b61043b611e8c565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108585780601f1061082d57610100808354040283529160200191610858565b820191906000526020600020905b81548152906001019060200180831161083b57829003601f168201915b5050505050905090565b600061086f338484612051565b5060015b92915050565b600c5460408051808201909152600e81526d1b9bdd08185d5d1a1bdc9a5e995960921b6020820152906001600160a01b031633146108d35760405162461bcd60e51b81526004016108ca9190615d61565b60405180910390fd5b50600c80546001600160a01b0319166001600160a01b0383161790556040517fb8fd9afc34c38fcd13b9a3b7646482eb1fddcefb40af2c70609972816eba32089061091f908390615ad1565b60405180910390a150565b7f000000000000000000000000000000000000000000000000000000000000000081565b6109566120b3565b61095f816120e1565b50565b60025490565b600080600061097561215d565b15925061098061217a565b915061098a61219e565b9050909192565b7f000000000000000000000000000000000000000000000000000000000000000081565b606081516001600160401b03811180156109ce57600080fd5b506040519080825280602002602001820160405280156109f8578160200160208202803683370190505b5090506000610a056121c2565b905060005b8351811015610ad15773__$85f042f43089d976c21d0d184f206dc395$__6379eaef826008868481518110610a3b57fe5b6020026020010151856040518463ffffffff1660e01b8152600401610a6293929190615d28565b60206040518083038186803b158015610a7a57600080fd5b505af4158015610a8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab291906157fd565b838281518110610abe57fe5b6020908102919091010152600101610a0a565b5050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080610b098533611e21565b9050610b2d336001600160a01b0387161480610b255750838210155b61019e6121cf565b610b388585856121dd565b336001600160a01b03861614801590610b5357506000198114155b15610b6557610b658533858403612051565b60019150505b9392505050565b610b7a6122c5565b610b826120b3565b610b8c60016122d8565b6000610b96610962565b1115610ba457610ba4612318565b565b60055460ff1690565b610bca8183108015610bc357506104008211155b60646121cf565b6000610bdf6001600080600080600080612360565b9050825b82811015610c2157600081815260086020526040902054610c03906123c2565b610c195760008181526008602052604090208290555b600101610be3565b50505050565b6000610c316123ce565b905090565b610c3e6120b3565b610c466122c5565b61095f8161248c565b7f000000000000000000000000000000000000000000000000000000000000000090565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161086f918590610ca990866124f5565b612051565b610cb661511e565b5060408051606081018252600b5460ff81161515825261010081046001600160781b03166020830152600160801b90046001600160801b03169181019190915290565b600d546040805180820190915260118152703737ba103830bab9b29036b0b730b3b2b960791b6020820152906001600160a01b03163314610db85760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610d7d578181015183820152602001610d65565b50505050905090810190601f168015610daa5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50610dc36000610956565b6040517f215385c8bfc731925ec8068d7baa50f6b6f34417cc7804f7273dc2c0b3db279090600090a1565b600e546001600160a01b031681565b60008060008060008060006009549050610e1681612507565b9650610e2181612513565b9550610e2c81612520565b9450610e378161252d565b9350610e428161253a565b9250610e4d81612547565b915050909192939495565b6000610c31600954612547565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006060610ebd86516002612554565b610ed2898989898989896125616126dc61275a565b97509795505050505050565b6000806000806000806000610ef9610400891061013b6121cf565b6000610f048961286d565b9050610f0f8161287f565b959f949e50929c50909a509850965090945092505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000610c31610f58610962565b610f6a610f63611a46565b60026128e2565b90612906565b606081516001600160401b0381118015610f8957600080fd5b50604051908082528060200260200182016040528015610fb3578160200160208202803683370190505b5090506000610fc06121c2565b9050610fca61513e565b60005b845181101561101e57848181518110610fe257fe5b60200260200101519150610fff8260000151848460200151612960565b84828151811061100b57fe5b6020908102919091010152600101610fcd565b505050919050565b600c546001600160a01b031681565b6001600160a01b0381166000908152602081905260409020545b919050565b6060808861107e6110636114e3565b6001600160a01b0316336001600160a01b03161460cd6121cf565b611093611089610c4f565b82146101f46121cf565b61109c876129f9565b60008060006110b08d8d8d8d8d8d8d612561565b9250925092506110c08c84612a5b565b6110c9826126dc565b6110d2816126dc565b6110da61215d565b156110e7576110e7612318565b909c909b509950505050505050505050565b600c5460408051808201909152600e81526d1b9bdd08185d5d1a1bdc9a5e995960921b6020820152906001600160a01b0316331461114a5760405162461bcd60e51b81526004016108ca9190615d61565b50600b5460408051808201909152601081526f1c1bdbdb081a5cc81d5b98d85c1c195960821b60208201529060ff166111965760405162461bcd60e51b81526004016108ca9190615d61565b508051600b8054602084015160408086015160ff19909316941515949094176fffffffffffffffffffffffffffffff0019166101006001600160781b0390921691909102176001600160801b03908116600160801b919092160217815590517f2abf5970d7bc1a2b36eaae52dd2cc353edb0337c7284ef8a01973081b4e044249161091f91615de9565b611228615155565b611230615184565b611238612a65565b915091509091565b6001600160a01b031660009081526006602052604090205490565b7f000000000000000000000000000000000000000000000000000000000000000081565b600d546040805180820190915260118152703737ba103830bab9b29036b0b730b3b2b960791b60208201526001600160a01b03909116903382146113045760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610d7d578181015183820152602001610d65565b50600d80546001600160a01b0319166001600160a01b03848116918217909255604080519284168352602083019190915280517f1ffccd1fa96f4fb3415df8048a0fd107344e262d2d246c85105e2a3f8f3e81989281900390910190a15050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600d546040805180820190915260118152703737ba103830bab9b29036b0b730b3b2b960791b6020820152906001600160a01b0316331461140b5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610d7d578181015183820152602001610d65565b506114166001610956565b6040517f681eace576127d0553b224436a09801fb47d042942cbff59d7d4ff04d8fa03d790600090a1565b604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091526001600160e01b03198416828401528251602481840301815260449092019092528051910120919050565b600060606114aa86516002612554565b610ed289898989898989612c9b612e1761275a565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108585780601f1061082d57610100808354040283529160200191610858565b600a5490565b60006115786122c5565b83608001516115886110636114e3565b611593611089610c4f565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031686602001516001600160a01b031614801561160f57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031686604001516001600160a01b0316145b1561161c575060016116ad565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031686602001516001600160a01b031614801561169657507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031686604001516001600160a01b0316145b156116a3575060006116ad565b6116ad6079612e79565b60006116b882612ecc565b905060006116c68315612ecc565b90506116d28783612f20565b96506116de8682612f20565b955060006116ed888886612f2c565b90506000806116fa612a65565b915091506117066151cd565b60008073__$4dfb88a4c975276bfeda73b9d8c1ea657b$__6378ace8578787876040518463ffffffff1660e01b815260040161174493929190615b6a565b604080518083038186803b15801561175b57600080fd5b505af415801561176f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117939190615815565b91509150604051806040016040528082600202840181526020018381525092506117cc8e60a00151876117c585612fc6565b8888613021565b50600090508c5160018111156117de57fe5b141561188a5760006117fc6117f1610e58565b60608f015190613199565b905061181e611818828f606001516131ee90919063ffffffff16565b88612f20565b60608e015260006118338e878b888888613204565b90507f4e1d56f7310a8c32b2267f756b19ba65019b4890068ce114a25009abe54de5ba86848360405161186893929190615bdc565b60405180910390a161187a818861329c565b9a5050505050505050505061191b565b6118988c6060015186612f20565b60608d015260006118ad8d868a8787876132a8565b90507f4e1d56f7310a8c32b2267f756b19ba65019b4890068ce114a25009abe54de5ba8583836040516118e293929190615bdc565b60405180910390a16118f481886132f0565b9050611910611909611904610e58565b6132fc565b8290613322565b995050505050505050505b509392505050565b6000806119303385611e21565b905080831061194a5761194533856000612051565b611957565b6119573385858403612051565b5060019392505050565b600061086f3384846121dd565b6000610c31613388565b600d546001600160a01b031681565b600073__$85f042f43089d976c21d0d184f206dc395$__630397bee06008846119ae6121c2565b6040518463ffffffff1660e01b81526004016119cc93929190615ce0565b60206040518083038186803b1580156119e457600080fd5b505af41580156119f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087391906157fd565b61040090565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080611a516114e3565b6001600160a01b031663f94d4668611a67610c4f565b6040518263ffffffff1660e01b8152600401611a839190615c7d565b60006040518083038186803b158015611a9b57600080fd5b505afa158015611aaf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611ad79190810190615440565b50915050611ae4816129f9565b6000611aee613402565b9050611afa8183613471565b9250505090565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b611b7b8442111560d16121cf565b6001600160a01b0380881660008181526006602090815260408083205481517f00000000000000000000000000000000000000000000000000000000000000008185015280830195909552948b166060850152608084018a905260a0840185905260c08085018a90528151808603909101815260e09094019052825192019190912090611c07826134e3565b9050600060018288888860405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015611c65573d6000803e3d6000fd5b5050604051601f1901519150611ca790506001600160a01b03821615801590611c9f57508b6001600160a01b0316826001600160a01b0316145b6101f86121cf565b6001600160a01b038b166000908152600660205260409020600185019055611cd08b8b8b612051565b5050505050505050505050565b60608088611cec6110636114e3565b611cf7611089610c4f565b611cff6122c5565b6000611d09610962565b611d7957611d198b8b8b8861352f565b94509050611d2e620f424082101560cc6121cf565b611d3c6000620f4240613674565b611d4b89620f42408303613674565b611d5484612e17565b6040805160028082526060820183529091602083019080368337019050509250611de7565b611d82886129f9565b611db58789600081518110611d9357fe5b60200260200101518a600181518110611da857fe5b6020026020010151611f79565b611dc48b8b8b8b8b8b8b612c9b565b90955093509050611dd58982613674565b611dde84612e17565b611de7836126dc565b611def612318565b505097509795505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000611e2b6114e3565b6001600160a01b0316826001600160a01b03161415611e4d5750600019610873565b611e57838361367e565b9050610873565b7f000000000000000000000000000000000000000000000000000000000000000081565b6060610c31613402565b6201de2090565b80611e9d816136a9565b5050565b611ecd8160600151600013158015611ec55750670de0b6b3a7640000826060015113155b610163613722565b611ef88160400151600013158015611ec55750670de0b6b3a764000082604001511315610163613722565b604080518082018252606083015181529082015160208201526000611f1d8280613730565b9050611f4a670de0b6b3a763fc188212801590611f425750670de0b6b3a76403e88213155b610164613722565b611f798360800151600013158015611f7157506a52b7d2dcc80cd2e4000000846080015113155b610168613722565b505050565b6000610b6b83836055611fb0565b6000610b6b83836056611fd7565b6000611faa8383111560016121cf565b50900390565b60006001821b1984168284611fc6576000611fc9565b60015b60ff16901b17949350505050565b6001600160401b03811b1992909216911b1790565b600082820283158061200657508284828161200357fe5b05145b61201657612016600060036121cf565b670de0b6b3a764000090059392505050565b60008282018183121561203d57838112612042565b838112155b610b6b57610b6b6000806121cf565b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b60006120ca6000356001600160e01b031916611441565b905061095f6120d98233613763565b6101916121cf565b8015612101576120fc6120f261217a565b42106101936121cf565b612116565b61211661210c61219e565b42106101a96121cf565b6007805482151560ff19909116811790915560408051918252517f9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be649181900360200190a150565b600061216761219e565b421180610c3157505060075460ff161590565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000610c3160095461252d565b81611e9d57611e9d81612e79565b6121f46001600160a01b03841615156101986121cf565b61220b6001600160a01b03831615156101996121cf565b612216838383611f79565b6001600160a01b03831660009081526020819052604090205461223c90826101a0613865565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461226b90826124f5565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b610ba46122d061215d565b6101926121cf565b6009546122e59082611f7e565b6009556040517f3e350b41e86a8e10f804ade6d35340d620be35569cc75ac943e8bb14ab80ead19061091f908390615c5a565b6009546123248161253a565b1561095f5761233e612337600a5461387b565b82906138bb565b905061235a61235361234e610962565b61387b565b82906138c8565b60095550565b600061236c82826138d6565b61237784601f6138da565b6123828660546138eb565b61238d88606a6138da565b6123988a609f6138eb565b6123a38c60b56138da565b6123ae8e60ea6138eb565b17171717171790505b979650505050505050565b600061087382826138f8565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000061243b613902565b3060405160200180868152602001858152602001848152602001838152602001826001600160a01b031681526020019550505050505060405160208183030381529060405280519060200120905090565b61249f64e8d4a5100082101560cb6121cf565b6124b567016345785d8a000082111560ca6121cf565b6009546124c29082611f8c565b6009556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc9061091f908390615c7d565b6000828201610b6b84821015836121cf565b60006108738282613906565b6000610873826016613906565b600061087382602c6138f8565b600061087382604b61392d565b6000610873826055613935565b600061087382605661393f565b611e9d81831460676121cf565b6000606080600080612571612a65565b9150915061257d61215d565b1561268f57604051636c1e543160e11b815260009073__$4dfb88a4c975276bfeda73b9d8c1ea657b$__9063d83ca862906125c0908d9087908790600401615b6a565b60206040518083038186803b1580156125d857600080fd5b505af41580156125ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061261091906157fd565b905061261f898b838686613021565b6126288161394c565b6126328a88613979565b909650945061264b8187612644610962565b60006139c5565b600a8190556040517fe1d39caf039c7dc6f364b1e29d1e67c4e330003a43f4991d50cf3e8840d95eac9161268191849190615e9b565b60405180910390a1506126a5565b6126998987613979565b600019600a5590955093505b6040805160028082526060820183528792879291906020830190803683370190505094509450945050509750975097945050505050565b612703816000815181106126ec57fe5b60200260200101516126fe6001612ecc565b613a1d565b8160008151811061271057fe5b60200260200101818152505061273e8160018151811061272c57fe5b60200260200101516126fe6000612ecc565b8160018151811061274b57fe5b60200260200101818152505050565b333014612818576000306001600160a01b031660003660405161277e929190615ac1565b6000604051808303816000865af19150503d80600081146127bb576040519150601f19603f3d011682016040523d82523d6000602084013e6127c0565b606091505b5050905080600081146127cf57fe5b60046000803e6000516001600160e01b0319166343adbafb60e01b81146127fa573d6000803e3d6000fd5b506020600460003e604060205260243d03602460403e601c3d016000f35b612821866129f9565b6000806128378b8b8b8b8b8b8b8b63ffffffff16565b5091509150612849818463ffffffff16565b8051601f1982018390526343adbafb603f1983015260200260231982016044820181fd5b60009081526008602052604090205490565b600080600080600080600061289388613a3d565b965061289e88613a4a565b95506128a988613a57565b94506128b488613a64565b93506128bf88613a71565b92506128ca88613a7e565b91506128d5886123c2565b9050919395979092949650565b6000828202610b6b8415806128ff5750838583816128fc57fe5b04145b60036121cf565b60008161291957612919600060046121cf565b8261292657506000610873565b670de0b6b3a76400008381029084828161293c57fe5b041461294e5761294e600060056121cf565b82818161295757fe5b04949350505050565b6040516334171a8560e01b815260009073__$85f042f43089d976c21d0d184f206dc395$__906334171a85906129a190600890889088908890600401615d02565b60206040518083038186803b1580156129b957600080fd5b505af41580156129cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129f191906157fd565b949350505050565b612a2081600081518110612a0957fe5b6020026020010151612a1b6001612ecc565b6128e2565b81600081518110612a2d57fe5b60200260200101818152505061273e81600181518110612a4957fe5b6020026020010151612a1b6000612ecc565b611e9d8282613a8b565b612a6d615155565b612a75615184565b7f00000000000000000000000000000000000000000000000000000000000000006080808401919091527f00000000000000000000000000000000000000000000000000000000000000006060808501919091527f00000000000000000000000000000000000000000000000000000000000000006040808601919091527f00000000000000000000000000000000000000000000000000000000000000006020808701919091527f000000000000000000000000000000000000000000000000000000000000000086528451858201517f0000000000000000000000000000000000000000000000000000000000000000818401527f000000000000000000000000000000000000000000000000000000000000000090527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000090527f000000000000000000000000000000000000000000000000000000000000000060c08501527f000000000000000000000000000000000000000000000000000000000000000060a08501527f0000000000000000000000000000000000000000000000000000000000000000928401929092527f0000000000000000000000000000000000000000000000000000000000000000908301527f0000000000000000000000000000000000000000000000000000000000000000908201529091565b6000606080600080612cab612a65565b91509150600073__$4dfb88a4c975276bfeda73b9d8c1ea657b$__63d83ca8628b85856040518463ffffffff1660e01b8152600401612cec93929190615b6a565b60206040518083038186803b158015612d0457600080fd5b505af4158015612d18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d3c91906157fd565b9050612d4b898b838686613021565b612d548161394c565b600080612d618c8a613b42565b600b54919350915060ff1615612d8b57612d8b82612d7e8f611035565b612d86610962565b613b7c565b612d9f8383612d98610962565b60016139c5565b600a8190556040517fe1d39caf039c7dc6f364b1e29d1e67c4e330003a43f4991d50cf3e8840d95eac91612dd591869190615e9b565b60405180910390a16040805160028082526060820183528492849291906020830190803683370190505097509750975050505050509750975097945050505050565b612e3e81600081518110612e2757fe5b6020026020010151612e396001612ecc565b613c8e565b81600081518110612e4b57fe5b60200260200101818152505061273e81600181518110612e6757fe5b6020026020010151612e396000612ecc565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b600081612ef9577f0000000000000000000000000000000000000000000000000000000000000000610873565b507f0000000000000000000000000000000000000000000000000000000000000000919050565b6000610b6b83836128e2565b60408051600280825260608083018452926020830190803683370190505090508115612f8b578381600081518110612f6057fe5b6020026020010181815250508281600181518110612f7a57fe5b602002602001018181525050610b6b565b8281600081518110612f9957fe5b6020026020010181815250508381600181518110612fb357fe5b6020026020010181815250509392505050565b60008082121561301d576040805162461bcd60e51b815260206004820181905260248201527f53616665436173743a2076616c7565206d75737420626520706f736974697665604482015290519081900360640190fd5b5090565b60095461302d8161253a565b801561303857508543115b1561319157600073__$4dfb88a4c975276bfeda73b9d8c1ea657b$__63b0a208a78786866130658a613cc1565b6040518563ffffffff1660e01b81526004016130849493929190615b9b565b60206040518083038186803b15801561309c57600080fd5b505af41580156130b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130d491906157fd565b905060006130e182613d05565b905060006130f7876130f286612513565b613d10565b905060006131048561252d565b9050600061311186612520565b9050600061312a828487876131258c612507565b613d27565b905080831461318a5761313d8782613d7e565b96506131498742613d8c565b9650866009819055507f12ade7b7dd29c5e3df1e883f0a092467d851b06c52f3c4484a443d40b9cd6601816040516131819190615c7d565b60405180910390a15b5050505050505b505050505050565b60008282028315806131b35750828482816131b057fe5b04145b6131c3576131c3600060036121cf565b806131d2576000915050610873565b670de0b6b3a764000060001982015b0460010191505092915050565b600082821115611faa57611faa600060016121cf565b60608601516040516330ffa11b60e11b815260009173__$4dfb88a4c975276bfeda73b9d8c1ea657b$__916361ff42369161324c918a91908a908a908a908a90600401615c0c565b60206040518083038186803b15801561326457600080fd5b505af4158015613278573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123b791906157fd565b6000610b6b8383613a1d565b6060860151604051633b18ce7b60e21b815260009173__$4dfb88a4c975276bfeda73b9d8c1ea657b$__9163ec6339ec9161324c918a91908a908a908a908a90600401615c0c565b6000610b6b8383613c8e565b6000670de0b6b3a76400008210613314576000610873565b50670de0b6b3a76400000390565b60008161333557613335600060046121cf565b8261334257506000610873565b670de0b6b3a76400008381029084828161335857fe5b041461337c5761337c670de0b6b3a764000085838161337357fe5b041460056121cf565b8260018203816131e157fe5b60006133926114e3565b6001600160a01b031663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b1580156133ca57600080fd5b505afa1580156133de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c31919061530c565b604080516002808252606080830184529260009291906020830190803683370190505090506134316001613d9a565b8160008151811061343e57fe5b6020026020010181815250506134546000613d9a565b8160018151811061346157fe5b6020908102919091010152905090565b670de0b6b3a764000060005b83518110156134d3576134c96134c285838151811061349857fe5b60200260200101518584815181106134ac57fe5b6020026020010151613dee90919063ffffffff16565b8390613e3d565b915060010161347d565b50610873600082116101376121cf565b60006134ed6123ce565b82604051602001808061190160f01b81525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b60006060600061353e84613e66565b9050613559600082600381111561355157fe5b1460ce6121cf565b600061356485613e85565b905061357281516002612554565b61357b816129f9565b600080613586612a65565b91509150600073__$4dfb88a4c975276bfeda73b9d8c1ea657b$__63d83ca8628585856040518463ffffffff1660e01b81526004016135c793929190615b6a565b60206040518083038186803b1580156135df57600080fd5b505af41580156135f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061361791906157fd565b90507faf65f1a72bf4f8bc48e8153858e1f7b307ce39c88361a677c0a79c2a1ae571ef816040516136489190615c7d565b60405180910390a1600061365d8260026128e2565b600a92909255509a92995091975050505050505050565b611e9d8282613f39565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6002815110156136b85761095f565b6000816000815181106136c757fe5b602002602001015190506000600190505b8251811015611f795760008382815181106136ef57fe5b60200260200101519050613718816001600160a01b0316846001600160a01b03161060656121cf565b91506001016136d8565b81611e9d57611e9d81613fce565b6000610b6b61375083602001518560200151611fec90919063ffffffff16565b8351855161375d91611fec565b90612028565b600073ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b6137826114bf565b6001600160a01b03161415801561379d575061379d83613fde565b156137c5576137aa6114bf565b6001600160a01b0316336001600160a01b0316149050610873565b6137cd613388565b6001600160a01b0316639be2a8848484306040518463ffffffff1660e01b815260040180848152602001836001600160a01b03168152602001826001600160a01b03168152602001935050505060206040518083038186803b15801561383257600080fd5b505afa158015613846573d6000803e3d6000fd5b505050506040513d602081101561385c57600080fd5b50519050610873565b600061387484841115836121cf565b5050900390565b60008061388783614010565b905060008082136138a057652d79883d200082036138aa565b652d79883d200082015b655af3107a40009005949350505050565b6000610b6b838383614074565b6000610b6b83836016614074565b1b90565b661fffffffffffff91909116901b90565b623fffff91909116901b90565b1c637fffffff1690565b4690565b600082821c623fffff16621fffff811361392057806129f1565b623fffff19179392505050565b1c6103ff1690565b1c60019081161490565b1c6001600160401b031690565b60008060008061395e600a548661408b565b9350935093509350613972848484846140f4565b5050505050565b60006060600061398884613e66565b9050600181600381111561399857fe5b14156139b2576139a88585614114565b90935091506139bd565b6139bd610150612e79565b509250929050565b600081156139f75760006139e3846139dd8888613199565b90613322565b90506139ef8682614146565b9150506129f1565b6000613a0784610f6a888861415e565b9050613a1386826131ee565b9695505050505050565b6000613a2c82151560046121cf565b818381613a3557fe5b049392505050565b60006108738260ea613906565b60006108738260b5614188565b600061087382609f613906565b600061087382606a614188565b6000610873826054613906565b600061087382601f614188565b613aa26001600160a01b038316151561019b6121cf565b613aae82600083611f79565b6001600160a01b038216600090815260208190526040902054613ad490826101a1613865565b6001600160a01b038316600090815260208190526040902055600254613afa90826141bb565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b600060606000613b5184613e66565b90506003816003811115613b6157fe5b1415613b71576139a885856141c9565b6139bd610136612e79565b60408051606081018252600b5460ff81161515825261010081046001600160781b031660208301819052600160801b9091046001600160801b03169282019290925290613bc98585614146565b11156040518060400160405280601a81526020017f6f7665722061646472657373206c69717569646974792063617000000000000081525090613c1f5760405162461bcd60e51b81526004016108ca9190615d61565b5060408101516001600160801b0316613c388584614146565b11156040518060400160405280601981526020017f6f76657220676c6f62616c206c69717569646974792063617000000000000000815250906139725760405162461bcd60e51b81526004016108ca9190615d61565b6000613c9d82151560046121cf565b82613caa57506000610873565b816001840381613cb657fe5b046001019050610873565b6000600160ff1b821061301d5760405162461bcd60e51b8152600401808060200182810382526028815260200180615f0d6028913960400191505060405180910390fd5b60006108738261387b565b600080613d1c8461387b565b929092039392505050565b600080613d4385858542613d3a8b61286d565b939291906141ee565b9050607842889003101580613d585786613d61565b613d618761424e565b600081815260086020526040902092909255509695505050505050565b6000610b6b8383604b61425b565b6000610b6b8383602c61426b565b600081613dc7577f0000000000000000000000000000000000000000000000000000000000000000610873565b507f0000000000000000000000000000000000000000000000000000000000000000919050565b600080613dfb848461427d565b90506000613e15613e0e8361271061437e565b60016124f5565b905080821015613e2a57600092505050610873565b613e348282611f9a565b92505050610873565b6000828202613e578415806128ff5750838583816128fc57fe5b670de0b6b3a764000081612957565b6000818060200190516020811015613e7d57600080fd5b505192915050565b6060818060200190516040811015613e9c57600080fd5b815160208301805160405192949293830192919084640100000000821115613ec357600080fd5b908301906020820185811115613ed857600080fd5b8251866020820283011164010000000082111715613ef557600080fd5b82525081516020918201928201910280838360005b83811015613f22578181015183820152602001613f0a565b505050509190910160405250929695505050505050565b613f4560008383611f79565b600254613f5290826124f5565b6002556001600160a01b038216600090815260208190526040902054613f7890826124f5565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b61095f816223aca960e91b6143c1565b6000613ff0631c74c91760e11b611441565b82148061087357506140086350dd6ed960e01b611441565b909114919050565b60006140206000831360646121cf565b670c7d713b49da00008213801561403e5750670f43fc2c04ee000082125b1561406457670de0b6b3a764000061405583614422565b8161405c57fe5b05905061104f565b61406d82614540565b905061104f565b623fffff828116821b90821b198416179392505050565b60008060008060008060008061409f6148df565b935093509350935083600014156140c4576000975087965090945092506140eb915050565b6000806140db8c8c6140d4610962565b8989614b4e565b909a509850929650909450505050505b92959194509250565b8315614104576141048285613674565b8215610c2157610c218184613674565b60006060600061412384614be9565b905060006141398683614134610962565b614c0b565b9196919550909350505050565b600082820183811015610b6b57610b6b6000806121cf565b600082820283158061417857508284828161417557fe5b04145b613e5757613e57600060036121cf565b600082821c661fffffffffffff16660fffffffffffff81136141aa57806129f1565b661fffffffffffff19179392505050565b6000610b6b83836001613865565b6000606060006141d884614be9565b9050600061413986836141e9610962565b614ca6565b6000806141fa876123c2565b83039050600081870261420c89613a4a565b019050600082870261421d8a613a64565b019050600083870261422e8b613a7e565b01905061424089848a858b868c612360565b9a9950505050505050505050565b6000610873826001614d41565b6103ff811b1992909216911b1790565b637fffffff811b1992909216911b1790565b6000816142935750670de0b6b3a7640000610873565b826142a057506000610873565b6142b1600160ff1b841060066121cf565b826142d7770bce5086492111aea88f4bb1ca6bcf584181ea8059f76532841060076121cf565b826000670c7d713b49da0000831380156142f85750670f43fc2c04ee000083125b1561432f57600061430884614422565b9050670de0b6b3a764000080820784020583670de0b6b3a76400008305020191505061433d565b8161433984614540565b0290505b670de0b6b3a76400009005614375680238fd42c5cf03ffff19821280159061436e575068070c1cc73b00c800008213155b60086121cf565b613a1381614d49565b60008282026143988415806128ff5750838583816128fc57fe5b806143a7576000915050610873565b670de0b6b3a7640000600019820104600101915050610873565b62461bcd60e51b600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fd5b670de0b6b3a7640000026000806a0c097ce7bc90715b34b9f160241b808401906ec097ce7bc90715b34b9f0fffffffff198501028161445d57fe5b05905060006a0c097ce7bc90715b34b9f160241b82800205905081806a0c097ce7bc90715b34b9f160241b81840205915060038205016a0c097ce7bc90715b34b9f160241b82840205915060058205016a0c097ce7bc90715b34b9f160241b82840205915060078205016a0c097ce7bc90715b34b9f160241b82840205915060098205016a0c097ce7bc90715b34b9f160241b828402059150600b8205016a0c097ce7bc90715b34b9f160241b828402059150600d8205016a0c097ce7bc90715b34b9f160241b828402059150600f826002919005919091010295945050505050565b6000670de0b6b3a764000082121561457c57614572826a0c097ce7bc90715b34b9f160241b8161456c57fe5b05614540565b600003905061104f565b60007e1600ef3172e58d2e933ec884fde10064c63b5372d805e203c000000000000083126145cd57770195e54c5dd42177f53a27172fa9ec630262827000000000830592506806f05b59d3b2000000015b73011798004d755d3c8bc8e03204cf44619e0000008312614605576b1425982cf597cd205cef7380830592506803782dace9d9000000015b606492830292026e01855144814a7ff805980ff0084000831261464d576e01855144814a7ff805980ff008400068056bc75e2d63100000840205925068ad78ebc5ac62000000015b6b02df0ab5a80a22c61ab5a7008312614688576b02df0ab5a80a22c61ab5a70068056bc75e2d6310000084020592506856bc75e2d631000000015b693f1fce3da636ea5cf85083126146bf57693f1fce3da636ea5cf85068056bc75e2d631000008402059250682b5e3af16b18800000015b690127fa27722cc06cc5e283126146f657690127fa27722cc06cc5e268056bc75e2d6310000084020592506815af1d78b58c400000015b68280e60114edb805d03831261472b5768280e60114edb805d0368056bc75e2d631000008402059250680ad78ebc5ac6200000015b680ebc5fb41746121110831261475657680ebc5fb4174612111068056bc75e2d631000009384020592015b6808f00f760a4b2db55d831261478b576808f00f760a4b2db55d68056bc75e2d6310000084020592506802b5e3af16b1880000015b6806f5f177578893793783126147c0576806f5f177578893793768056bc75e2d63100000840205925068015af1d78b58c40000015b6806248f33704b28660383126147f4576806248f33704b28660368056bc75e2d63100000840205925067ad78ebc5ac620000015b6805c548670b9510e7ac8312614828576805c548670b9510e7ac68056bc75e2d6310000084020592506756bc75e2d6310000015b600068056bc75e2d63100000840168056bc75e2d63100000808603028161484b57fe5b059050600068056bc75e2d63100000828002059050818068056bc75e2d63100000818402059150600382050168056bc75e2d63100000828402059150600582050168056bc75e2d63100000828402059150600782050168056bc75e2d63100000828402059150600982050168056bc75e2d63100000828402059150600b820501600202606485820105979650505050505050565b600e5460405163bd02d0f560e01b81526000918291829182916001600160a01b039091169063bd02d0f590614931907550524f544f434f4c5f535741505f4645455f5045524360501b90600401615c7d565b60206040518083038186803b15801561494957600080fd5b505afa15801561495d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061498191906157fd565b600e5460405163bd02d0f560e01b81526001600160a01b039091169063bd02d0f5906149d1907f50524f544f434f4c5f4645455f4759524f5f504f5254494f4e0000000000000090600401615c7d565b60206040518083038186803b1580156149e957600080fd5b505afa1580156149fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614a2191906157fd565b600e546040516321f8a72160e01b81526001600160a01b03909116906321f8a72190614a61906c4759524f5f545245415355525960981b90600401615c7d565b60206040518083038186803b158015614a7957600080fd5b505afa158015614a8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614ab1919061530c565b600e546040516321f8a72160e01b81526001600160a01b03909116906321f8a72190614af0906b42414c5f545245415355525960a01b90600401615c7d565b60206040518083038186803b158015614b0857600080fd5b505afa158015614b1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614b40919061530c565b935093509350935090919293565b600080868611614b6357506000905080614bdf565b6000614b8385614b7d614b768a8c6131ee565b899061415e565b9061415e565b90506000614b9b614b94898b6131ee565b879061415e565b90506000614ba989836131ee565b90506000614bb78483612906565b90506000614bc5888361415e565b90506000614bd383836131ee565b91975090955050505050505b9550959350505050565b6000818060200190516040811015614c0057600080fd5b506020015192915050565b606083516001600160401b0381118015614c2457600080fd5b50604051908082528060200260200182016040528015614c4e578160200160208202803683370190505b50905060005b845181101561191b57614c8783610f6a86888581518110614c7157fe5b602002602001015161415e90919063ffffffff16565b828281518110614c9357fe5b6020908102919091010152600101614c54565b606083516001600160401b0381118015614cbf57600080fd5b50604051908082528060200260200182016040528015614ce9578160200160208202803683370190505b50905060005b845181101561191b57614d22836139dd86888581518110614d0c57fe5b602002602001015161319990919063ffffffff16565b828281518110614d2e57fe5b6020908102919091010152600101614cef565b016103ff1690565b6000614d78680238fd42c5cf03ffff198312158015614d71575068070c1cc73b00c800008313155b60096121cf565b6000821215614da357614d8d82600003614d49565b6a0c097ce7bc90715b34b9f160241b8161405c57fe5b60006806f05b59d3b20000008312614de357506806f05b59d3b1ffffff1990910190770195e54c5dd42177f53a27172fa9ec630262827000000000614e19565b6803782dace9d90000008312614e1557506803782dace9d8ffffff19909101906b1425982cf597cd205cef7380614e19565b5060015b6064929092029168056bc75e2d6310000068ad78ebc5ac620000008412614e695768ad78ebc5ac61ffffff199093019268056bc75e2d631000006e01855144814a7ff805980ff008400082020590505b6856bc75e2d6310000008412614ea5576856bc75e2d630ffffff199093019268056bc75e2d631000006b02df0ab5a80a22c61ab5a70082020590505b682b5e3af16b188000008412614edf57682b5e3af16b187fffff199093019268056bc75e2d63100000693f1fce3da636ea5cf85082020590505b6815af1d78b58c4000008412614f19576815af1d78b58c3fffff199093019268056bc75e2d63100000690127fa27722cc06cc5e282020590505b680ad78ebc5ac62000008412614f5257680ad78ebc5ac61fffff199093019268056bc75e2d6310000068280e60114edb805d0382020590505b68056bc75e2d631000008412614f8b5768056bc75e2d630fffff199093019268056bc75e2d63100000680ebc5fb4174612111082020590505b6802b5e3af16b18800008412614fc4576802b5e3af16b187ffff199093019268056bc75e2d631000006808f00f760a4b2db55d82020590505b68015af1d78b58c400008412614ffd5768015af1d78b58c3ffff199093019268056bc75e2d631000006806f5f177578893793782020590505b68056bc75e2d631000008481019085906002908280020505918201919050600368056bc75e2d631000008783020505918201919050600468056bc75e2d631000008783020505918201919050600568056bc75e2d631000008783020505918201919050600668056bc75e2d631000008783020505918201919050600768056bc75e2d631000008783020505918201919050600868056bc75e2d631000008783020505918201919050600968056bc75e2d631000008783020505918201919050600a68056bc75e2d631000008783020505918201919050600b68056bc75e2d631000008783020505918201919050600c68056bc75e2d631000008783020505918201919050606468056bc75e2d63100000848402058502059695505050505050565b604080516060810182526000808252602082018190529181019190915290565b604080518082019091526000808252602082015290565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b6040518060e001604052806151976151cd565b81526020016151a46151cd565b815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806040016040528060008152602001600081525090565b803561104f81615ef7565b600082601f830112615202578081fd5b8151602061521761521283615eda565b615eb7565b8281528181019085830183850287018401881015615233578586fd5b855b8581101561525157815184529284019290840190600101615235565b5090979650505050505050565b8035801515811461104f57600080fd5b600082601f83011261527e578081fd5b81356001600160401b0381111561529157fe5b6152a4601f8201601f1916602001615eb7565b8181528460208386010111156152b8578283fd5b816020850160208301379081016020019190915292915050565b80356002811061104f57600080fd5b80356003811061104f57600080fd5b600060208284031215615301578081fd5b8135610b6b81615ef7565b60006020828403121561531d578081fd5b8151610b6b81615ef7565b6000806040838503121561533a578081fd5b823561534581615ef7565b9150602083013561535581615ef7565b809150509250929050565b600080600060608486031215615374578081fd5b833561537f81615ef7565b9250602084013561538f81615ef7565b929592945050506040919091013590565b600080600080600080600060e0888a0312156153ba578485fd5b87356153c581615ef7565b965060208801356153d581615ef7565b95506040880135945060608801359350608088013560ff811681146153f8578384fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215615427578182fd5b823561543281615ef7565b946020939093013593505050565b600080600060608486031215615454578081fd5b83516001600160401b038082111561546a578283fd5b818601915086601f83011261547d578283fd5b8151602061548d61521283615eda565b82815281810190858301838502870184018c10156154a9578788fd5b8796505b848710156154d45780516154c081615ef7565b8352600196909601959183019183016154ad565b50918901519197509093505050808211156154ed578283fd5b506154fa868287016151f2565b925050604084015190509250925092565b6000602080838503121561551d578182fd5b82356001600160401b0380821115615533578384fd5b818501915085601f830112615546578384fd5b813561555461521282615eda565b818152848101908486016040808502870188018b1015615572578889fd5b8896505b848710156155ca5780828c03121561558c578889fd5b8051818101818110888211171561559f57fe5b82526155aa836152e1565b815282890135898201528452600196909601959287019290810190615576565b50909998505050505050505050565b600060208083850312156155eb578182fd5b82356001600160401b0380821115615601578384fd5b818501915085601f830112615614578384fd5b813561562261521282615eda565b818152848101908486016060808502870188018b1015615640578889fd5b8896505b848710156155ca5780828c03121561565a578889fd5b60408051828101818110898211171561566f57fe5b825261567a846152e1565b8152838a01358a82015281840135918101919091528452600196909601959287019290810190615644565b6000602082840312156156b6578081fd5b610b6b8261525e565b600080600080600080600060e0888a0312156156d9578081fd5b873596506020808901356156ec81615ef7565b965060408901356156fc81615ef7565b955060608901356001600160401b0380821115615717578384fd5b818b0191508b601f83011261572a578384fd5b813561573861521282615eda565b8082825285820191508585018f878886028801011115615756578788fd5b8795505b8386101561577857803583526001959095019491860191860161575a565b509850505060808b0135955060a08b0135945060c08b013592508083111561579e578384fd5b50506157ac8a828b0161526e565b91505092959891949750929550565b6000602082840312156157cc578081fd5b81356001600160e01b031981168114610b6b578182fd5b6000602082840312156157f4578081fd5b610b6b826152e1565b60006020828403121561580e578081fd5b5051919050565b60008060408385031215615827578182fd5b505080516020909101519092909150565b600060608284031215615849578081fd5b604051606081018181106001600160401b038211171561586557fe5b6040526158718361525e565b815260208301356001600160781b038116811461588c578283fd5b602082015260408301356001600160801b03811681146158aa578283fd5b60408201529392505050565b6000806000606084860312156158ca578081fd5b83356001600160401b03808211156158e0578283fd5b81860191506101208083890312156158f6578384fd5b6158ff81615eb7565b905061590a836152d2565b8152615918602084016151e7565b6020820152615929604084016151e7565b6040820152606083013560608201526080830135608082015260a083013560a082015261595860c084016151e7565b60c082015261596960e084016151e7565b60e08201526101008084013583811115615981578586fd5b61598d8a82870161526e565b9183019190915250976020870135975060409096013595945050505050565b6000602082840312156159bd578081fd5b5035919050565b600080604083850312156159d6578182fd5b50508035926020909101359150565b6000815180845260208085019450808401835b83811015615a14578151875295820195908201906001016159f8565b509495945050505050565b60038110615a2957fe5b9052565b615a38828251615ab2565b6020810151615a4a6040840182615ab2565b5060408101516080830152606081015160a0830152608081015160c083015260a081015160e083015260c08101516101008301525050565b80518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b80518252602090810151910152565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b6020808252825182820181905260009190848201906040850190845b81811015615b1d57835183529284019291840191600101615b01565b50909695505050505050565b600060208252610b6b60208301846159e5565b600060408252615b4f60408301856159e5565b8281036020840152615b6181856159e5565b95945050505050565b60006101e0808352615b7e818401876159e5565b915050615b8e6020830185615a82565b6129f160c0830184615a2d565b6000610200808352615baf818401886159e5565b915050615bbf6020830186615a82565b615bcc60c0830185615a2d565b826101e083015295945050505050565b600060808252615bef60808301866159e5565b9050615bfe6020830185615ab2565b826060830152949350505050565b6000610260808352615c208184018a6159e5565b9150508660208301528515156040830152615c3e6060830186615a82565b615c4c610100830185615a2d565b6123b7610220830184615ab2565b901515815260200190565b92151583526020830191909152604082015260600190565b90815260200190565b968752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b9586526020860194909452604085019290925260608401521515608083015260a082015260c00190565b83815260608101615cf46020830185615a1f565b826040830152949350505050565b84815260808101615d166020830186615a1f565b60408201939093526060015292915050565b600060a082019050848252615d41602083018551615a1f565b602084015160408381019190915290930151606082015260800152919050565b6000602080835283518082850152825b81811015615d8d57858101830151858201604001528201615d71565b81811115615d9e5783604083870101525b50601f01601f1916929092016040019392505050565b8151151581526020808301516001600160781b0316908201526040918201516001600160801b03169181019190915260600190565b905460ff811615158252600881901c6001600160781b0316602083015260801c604082015260600190565b6101c08101615e238285615a82565b615e3160a083018451615ab2565b6020830151615e4360e0840182615ab2565b5060408301516101208301526060830151610140830152608083015161016083015260a083015161018083015260c08301516101a08301529392505050565b6000838252604060208301526129f160408301846159e5565b918252602082015260400190565b60ff91909116815260200190565b6040518181016001600160401b0381118282101715615ed257fe5b604052919050565b60006001600160401b03821115615eed57fe5b5060209081020190565b6001600160a01b038116811461095f57600080fdfe53616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536a26469706673582212206df1c08e7c48068fdc68021e16ea045840f4d10fe79a1a354c989e79174715e664736f6c63430007060033", "deployedSourceMapi;:::-;;;;;;;:::i;:::-;;;;;;;;4172:164;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1305:199:14:-;;;;;;:::i;:::-;;:::i;:::-;;1821:35:20;;;:::i;:::-;;;;;;;:::i;8778:89:15:-;;;;;;:::i;:::-;;:::i;3181:98:84:-;;;:::i;3154:363:75:-;;;:::i;:::-;;;;;;;;;:::i;2100:33:20:-;;;:::i;4323:433:57:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2139:26:20:-;;;:::i;2657:655:48:-;;;;;;:::i;:::-;;:::i;8292:259:15:-;;;:::i;3040:81:84:-;;;:::i;:::-;;;;;;;:::i;3414:588:57:-;;;;;;:::i;:::-;;:::i;2359:113:85:-;;;:::i;7117:156:15:-;;;;;;:::i;:::-;;:::i;6148:91::-;;;:::i;5584:211:84:-;;;;;;:::i;:::-;;:::i;1510:105:14:-;;;:::i;:::-;;;;;;;:::i;1214:173:17:-;;;:::i;2302:29:20:-;;;:::i;:::-;;;;;;;:::i;6245:688:15:-;;;:::i;:::-;;;;;;;;;;;;:::i;6939:115::-;;;:::i;1981:34:20:-;;;:::i;1938:37::-;;;:::i;36632:770:15:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2516:500:57:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;1862:32:20:-;;;:::i;39241:211:15:-;;;:::i;4762:496:57:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;941:34:14:-;;;:::i;3337:117:84:-;;;;;;:::i;:::-;;:::i;23467:1359:15:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1621:385:14:-;;;;;;:::i;:::-;;:::i;4897:167:20:-;;;:::i;:::-;;;;;;;;:::i;2127:108:85:-;;;;;;:::i;:::-;;:::i;2061:33:20:-;;;:::i;652:308:17:-;;;;;;:::i;:::-;;:::i;2203:26:20:-;;;:::i;1003:168:17:-;;;:::i;2487:430:65:-;;;;;;:::i;:::-;;:::i;35241:768:15:-;;;;;;:::i;:::-;;:::i;1776:80:51:-;;;:::i;1879:79:48:-;;;:::i;2332:85:84:-;;;:::i;9459:98:15:-;;;:::i;5685:3541:20:-;;;;;;:::i;:::-;;:::i;3438:429:48:-;;;;;;:::i;:::-;;:::i;3657:170:84:-;;;;;;:::i;:::-;;:::i;1862:101:51:-;;;:::i;350:27:17:-;;;:::i;4145:172:57:-;;;;;;:::i;:::-;;:::i;3022:103::-;;;:::i;1779:36:20:-;;;:::i;9635:450:15:-;;;:::i;2171:26:20:-;;;:::i;1900:32::-;;;:::i;2267:28::-;;;:::i;1313:753:85:-;;;;;;:::i;:::-;;:::i;13513:2437:15:-;;;;;;:::i;:::-;;:::i;2235:26:20:-;;;:::i;2260:254:48:-;;;;;;:::i;:::-;;:::i;2021:34:20:-;;;:::i;8873:117:15:-;;;:::i;4029:110:57:-;;;:::i;2138:81:84:-;2207:5;2200:12;;;;;;;;;;;;;-1:-1:-1;;2200:12:84;;;;;;;;;;;;;;;;;;;;;;;;;;2175:13;;2200:12;;2207:5;;2200:12;;;2207:5;2200:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2138:81;:::o;4172:164::-;4255:4;4271:37;4280:10;4292:7;4301:6;4271:8;:37::i;:::-;-1:-1:-1;4325:4:84;4172:164;;;;;:::o;1305:199:14:-;1390:10;;1402:15;;;;;;;;;;;;-1:-1:-1;;;1402:15:14;;;;;-1:-1:-1;;;;;1390:10:14;1376;:24;1368:50;;;;-1:-1:-1;;;1368:50:14;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;1428:10:14;:24;;-1:-1:-1;;;;;;1428:24:14;-1:-1:-1;;;;;1428:24:14;;;;;1467:30;;;;;;1428:24;;1467:30;:::i;:::-;;;;;;;;1305:199;:::o;1821:35:20:-;;;:::o;8778:89:15:-;2156:21:65;:19;:21::i;:::-;8842:18:15::1;8853:6;8842:10;:18::i;:::-;8778:89:::0;:::o;3181:98:84:-;3260:12;;3181:98;:::o;3154:363:75:-;3257:11;3282:26;3322:27;3384:14;:12;:14::i;:::-;3383:15;3374:24;;3429;:22;:24::i;:::-;3408:45;;3485:25;:23;:25::i;:::-;3463:47;;3154:363;;;:::o;2100:33:20:-;;;:::o;4323:433:57:-;4520:14;;4456:24;;-1:-1:-1;;;;;4506:29:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4506:29:57;;4496:39;;4545:19;4567:17;:15;:17::i;:::-;4545:39;;4600:9;4595:155;4619:7;:14;4615:1;:18;4595:155;;;4667:14;:37;4705:8;4715:7;4723:1;4715:10;;;;;;;;;;;;;;4727:11;4667:72;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4654:7;4662:1;4654:10;;;;;;;;;;;;;;;;;:85;4635:3;;4595:155;;;;4323:433;;;;:::o;2139:26:20:-;;;:::o;2657:655:48:-;2785:4;2801:24;2828:29;2838:6;2846:10;2828:9;:29::i;:::-;2801:56;-1:-1:-1;2867:101:48;-1:-1:-1;;;;;2876:20:48;;:10;:20;;:50;;;2920:6;2900:16;:26;;2876:50;9174:3:66;2867:8:48;:101::i;:::-;2979:36;2989:6;2997:9;3008:6;2979:9;:36::i;:::-;-1:-1:-1;;;;;3030:20:48;;:10;:20;;;;:55;;-1:-1:-1;;;3054:31:48;;;3030:55;3026:258;;;3218:55;3227:6;3235:10;3266:6;3247:16;:25;3218:8;:55::i;:::-;3301:4;3294:11;;;2657:655;;;;;;:::o;8292:259:15:-;2970:18:75;:16;:18::i;:::-;2156:21:65::1;:19;:21::i;:::-;8362:23:15::2;8380:4;8362:17;:23::i;:::-;8491:1;8475:13;:11;:13::i;:::-;:17;8471:74;;;8508:26;:24;:26::i;:::-;8292:259::o:0;3040:81:84:-;3105:9;;;;3040:81;:::o;3414:588:57:-;3512:80;3534:8;3521:10;:21;:48;;;;;899:4:56;3546:8:57;:23;;3521:48;4838:3:66;3512:8:57;:80::i;:::-;3769:18;3790:33;3803:1;3806;3809;3812;3815;3818;3821;3790:12;:33::i;:::-;3769:54;-1:-1:-1;3850:10:57;3833:163;3866:8;3862:1;:12;3833:163;;;3899:11;;;;:8;:11;;;;;;:23;;:21;:23::i;:::-;3895:91;;3947:11;;;;:8;:11;;;;;:24;;;3895:91;3876:3;;3833:163;;;;3414:588;;;:::o;2359:113:85:-;2419:7;2445:20;:18;:20::i;:::-;2438:27;;2359:113;:::o;7117:156:15:-;2156:21:65;:19;:21::i;:::-;2970:18:75::1;:16;:18::i;:::-;7226:40:15::2;7248:17;7226:21;:40::i;6148:91::-:0;6225:7;6148:91;:::o;5584:211:84:-;5697:10;5672:4;5718:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;5718:32:84;;;;;;;;;;5672:4;;5688:79;;5718:32;;:48;;5755:10;5718:36;:48::i;:::-;5688:8;:79::i;1510:105:14:-;1563:16;;:::i;:::-;-1:-1:-1;1591:17:14;;;;;;;;1598:10;1591:17;;;;;;;;;;;-1:-1:-1;;;;;1591:17:14;;;;;-1:-1:-1;;;1591:17:14;;-1:-1:-1;;;;;1591:17:14;;;;;;;;;1510:105::o;1214:173:17:-;1269:12;;1297:18;;;;;;;;;;;;-1:-1:-1;;;1297:18:17;;;;;-1:-1:-1;;;;;1269:12:17;1285:10;1269:26;1261:55;;;;-1:-1:-1;;;1261:55:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1326:22;1342:5;1326:15;:22::i;:::-;1363:17;;;;;;;1214:173::o;2302:29:20:-;;;-1:-1:-1;;;;;2302:29:20;;:::o;6245:688:15:-;6328:19;6361:21;6396:37;6447:19;6480:18;6512:25;6562:16;6581:9;;6562:28;;6615:23;:8;:21;:23::i;:::-;6600:38;;6665:25;:8;:23;:25::i;:::-;6648:42;;6732:40;:8;:38;:40::i;:::-;6700:72;;6796:22;:8;:20;:22::i;:::-;6782:36;;6844:24;:8;:22;:24::i;:::-;6828:40;;6898:28;:8;:26;:28::i;:::-;6878:48;;6245:688;;;;;;;:::o;6939:115::-;6992:7;7018:29;:9;;:27;:29::i;1981:34:20:-;;;:::o;1938:37::-;;;:::o;36632:770:15:-;36892:13;36907:27;36946:55;36982:8;:15;36999:1;36946:35;:55::i;:::-;37012:137;37025:6;37033;37041:9;37052:8;37062:15;37079:25;37106:8;37116:11;37129:19;37012:12;:137::i;:::-;36632:770;;;;;;;;;;:::o;2516:500:57:-;2627:19;2660:22;2696:18;2728:21;2763:19;2796:22;2832:17;2874:58;899:4:56;2883:5:57;:19;6557:3:66;2874:8:57;:58::i;:::-;2943:14;2960:17;2971:5;2960:10;:17::i;:::-;2943:34;;2994:15;:6;:13;:15::i;:::-;2987:22;;;;-1:-1:-1;2987:22:57;;-1:-1:-1;2987:22:57;;-1:-1:-1;2987:22:57;-1:-1:-1;2987:22:57;-1:-1:-1;2987:22:57;;-1:-1:-1;2516:500:57;-1:-1:-1;;;2516:500:57:o;1862:32:20:-;;;:::o;39241:211:15:-;39281:7;39395:50;39431:13;:11;:13::i;:::-;39395:27;39404:14;:12;:14::i;:::-;39420:1;39395:8;:27::i;:::-;:35;;:50::i;4762:496:57:-;4958:14;;4896:23;;-1:-1:-1;;;;;4945:28:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4945:28:57;;4935:38;;4983:19;5005:17;:15;:17::i;:::-;4983:39;;5033:35;;:::i;:::-;5083:9;5078:174;5102:7;:14;5098:1;:18;5078:174;;;5145:7;5153:1;5145:10;;;;;;;;;;;;;;5137:18;;5182:59;5202:5;:14;;;5218:11;5231:5;:9;;;5182:19;:59::i;:::-;5169:7;5177:1;5169:10;;;;;;;;;;;;;;;;;:72;5118:3;;5078:174;;;;4762:496;;;;;:::o;941:34:14:-;;;-1:-1:-1;;;;;941:34:14;;:::o;3337:117:84:-;-1:-1:-1;;;;;3429:18:84;;3403:7;3429:18;;;;;;;;;;;3337:117;;;;:::o;23467:1359:15:-;23761:16;23779;23744:6;3861:68;3892:10;:8;:10::i;:::-;-1:-1:-1;;;;;3870:33:15;:10;:33;5392:3:66;3861:8:15;:68::i;:::-;3939:55;3958:11;:9;:11::i;:::-;3948:6;:21;10241:3:66;3939:8:15;:55::i;:::-;23807:23:::1;23821:8;23807:13;:23::i;:::-;23842:19;23863:27:::0;23892:38:::1;23934:196;23959:6;23979;23999:9;24022:8;24044:15;24073:25;24112:8;23934:11;:196::i;:::-;23841:289;;;;;;24236:36;24252:6;24260:11;24236:15;:36::i;:::-;24384:31;24404:10;24384:19;:31::i;:::-;24425:42;24445:21;24425:19;:42::i;:::-;24700:14;:12;:14::i;:::-;24696:71;;;24730:26;:24;:26::i;:::-;24785:10:::0;;;;-1:-1:-1;23467:1359:15;-1:-1:-1;;;;;;;;;;23467:1359:15:o;1621:385:14:-;1718:10;;1730:15;;;;;;;;;;;;-1:-1:-1;;;1730:15:14;;;;;-1:-1:-1;;;;;1718:10:14;1704;:24;1696:50;;;;-1:-1:-1;;;1696:50:14;;;;;;;;:::i;:::-;-1:-1:-1;1764:10:14;:21;1787:9;;;;;;;;;;;;-1:-1:-1;;;1787:9:14;;;;;1764:21;;1756:41;;;;-1:-1:-1;;;1756:41:14;;;;;;;;:::i;:::-;-1:-1:-1;1832:17:14;;1808:10;:41;;1886:20;;;;1939:16;;;;;-1:-1:-1;;1808:41:14;;;;;;;;;;-1:-1:-1;;1859:47:14;1808:41;-1:-1:-1;;;;;1859:47:14;;;;;;;;-1:-1:-1;;;;;1916:39:14;;;-1:-1:-1;;;1916:39:14;;;;;;;;1971:28;;;;;;;:::i;4897:167:20:-;4945:33;;:::i;:::-;4980:35;;:::i;:::-;5034:23;:21;:23::i;:::-;5027:30;;;;4897:167;;:::o;2127:108:85:-;-1:-1:-1;;;;;2214:14:85;2188:7;2214:14;;;:7;:14;;;;;;;2127:108::o;2061:33:20:-;;;:::o;652:308:17:-;761:12;;826:18;;;;;;;;;;;;-1:-1:-1;;;826:18:17;;;;-1:-1:-1;;;;;761:12:17;;;;814:10;791:33;;783:62;;;;-1:-1:-1;;;783:62:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;783:62:17;;;;;;;;;;;;;;;;;-1:-1:-1;855:12:17;:28;;-1:-1:-1;;;;;;855:28:17;-1:-1:-1;;;;;855:28:17;;;;;;;;;898:55;;;;;;;;;;;;;;;;;;;;;;;;;;;652:308;;:::o;2203:26:20:-;;;:::o;1003:168:17:-;1056:12;;1084:18;;;;;;;;;;;;-1:-1:-1;;;1084:18:17;;;;;-1:-1:-1;;;;;1056:12:17;1072:10;1056:26;1048:55;;;;-1:-1:-1;;;1048:55:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1048:55:17;;;;;;;;;;;;;;;;;;1113:21;1129:4;1113:15;:21::i;:::-;1149:15;;;;;;;1003:168::o;2487:430:65:-;2859:50;;;2876:22;2859:50;;;;;;;;-1:-1:-1;;;;;;2859:50:65;;;;;;;;;;;;;;;;;;;;;;;;2849:61;;;;;;2487:430::o;35241:768:15:-;35501:14;35517:26;35555:55;35591:8;:15;35608:1;35555:35;:55::i;:::-;35621:135;35634:6;35642;35650:9;35661:8;35671:15;35688:25;35715:8;35725:11;35738:17;35621:12;:135::i;1776:80:51:-;1843:6;1776:80;:::o;1879:79:48:-;1945:6;1879:79;:::o;2332:85:84:-;2403:7;2396:14;;;;;;;;;;;;;-1:-1:-1;;2396:14:84;;;;;;;;;;;;;;;;;;;;;;;;;;2371:13;;2396:14;;2403:7;;2396:14;;;2403:7;2396:14;;;;;;;;;;;;;;;;;;;;;;;;9459:98:15;9536:14;;9459:98;:::o;5685:3541:20:-;5881:7;2970:18:75;:16;:18::i;:::-;5856:7:20::1;:14;;;3861:68:15;3892:10;:8;:10::i;3861:68::-;3939:55;3958:11;:9;:11::i;3939:55::-;5935:15:20::2;::::0;::::2;::::0;5900:20:::2;::::0;5954:7:::2;-1:-1:-1::0;;;;;5935:26:20;;::::2;::::0;::::2;;:57:::0;::::2;;;-1:-1:-1::0;5965:16:20::2;::::0;::::2;::::0;5985:7:::2;-1:-1:-1::0;;;;;5965:27:20;;::::2;::::0;::::2;;5935:57;5931:309;;;-1:-1:-1::0;6026:4:20::2;5931:309;;;6051:15;::::0;::::2;::::0;6070:7:::2;-1:-1:-1::0;;;;;6051:26:20;;::::2;::::0;::::2;;:57:::0;::::2;;;-1:-1:-1::0;6081:16:20::2;::::0;::::2;::::0;6101:7:::2;-1:-1:-1::0;;;;;6081:27:20;;::::2;::::0;::::2;;6051:57;6047:193;;;-1:-1:-1::0;6142:5:20::2;6047:193;;;6178:51;891:3:21;6178:7:20;:51::i;:::-;6250:28;6281:31;6296:15;6281:14;:31::i;:::-;6250:62;;6322:29;6354:32;6370:15;6369:16;6354:14;:32::i;:::-;6322:64;;6457:46;6466:14;6482:20;6457:8;:46::i;:::-;6440:63;;6531:48;6540:15;6557:21;6531:8;:48::i;:::-;6513:66;;6777:25;6805:73;6829:14;6845:15;6862;6805:23;:73::i;:::-;6777:101;;6890:37;6929:51:::0;6984:23:::2;:21;:23::i;:::-;6889:118;;;;7017:37;;:::i;:::-;7079:23;7104:13:::0;7121:12:::2;:40;7162:8;7172:10;7184:17;7121:81;;;;;;;;;;;;;;;;;:::i;:::-;;::::0;::::2;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7078:124;;;;7416:69;;;;;;;;7460:6;7456:1;:10;7437:16;:29;7416:69;;;;7468:16;7416:69;;::::0;7404:81:::2;;7628:109;7642:7;:23;;;7667:8;7677:28;:16;:26;:28::i;:::-;7707:10;7719:17;7628:13;:109::i;:::-;-1:-1:-1::0;7778:24:20::2;::::0;-1:-1:-1;7762:12:20;;:40:::2;::::0;::::2;;;;;;;7758:1462;;;8021:17;8041:44;8062:22;:20;:22::i;:::-;8041:14;::::0;::::2;::::0;;:20:::2;:44::i;:::-;8021:64;;8116:61;8125:29;8144:9;8125:7;:14;;;:18;;:29;;;;:::i;:::-;8156:20;8116:8;:61::i;:::-;8099:14;::::0;::::2;:78:::0;8192:17:::2;8212:92;8099:7:::0;8236:8;8246:15;8263:10;8275:17;8294:9;8212:14:::2;:92::i;:::-;8192:112;;8324:42;8335:8;8345:9;8356;8324:42;;;;;;;;:::i;:::-;;;;;;;;8460:48;8475:9;8486:21;8460:14;:48::i;:::-;8453:55;;;;;;;;;;;;;7758:1462;8556:47;8565:7;:14;;;8581:21;8556:8;:47::i;:::-;8539:14;::::0;::::2;:64:::0;8618:16:::2;8637:93;8539:7:::0;8662:8;8672:15;8689:10;8701:17;8720:9;8637:15:::2;:93::i;:::-;8618:112;;8750:41;8761:8;8771:9;8782:8;8750:41;;;;;;;;:::i;:::-;;;;;;;;8887:44;8900:8;8910:20;8887:12;:44::i;:::-;8876:55;;9158:51;9173:35;:22;:20;:22::i;:::-;:33;:35::i;:::-;9158:8:::0;;:14:::2;:51::i;:::-;9151:58;;;;;;;;;;4004:1:15;2998::75::1;5685:3541:20::0;;;;;:::o;3438:429:48:-;3523:4;3539:24;3566:30;3576:10;3588:7;3566:9;:30::i;:::-;3539:57;;3621:16;3611:6;:26;3607:232;;3653:32;3662:10;3674:7;3683:1;3653:8;:32::i;:::-;3607:232;;;3772:56;3781:10;3793:7;3821:6;3802:16;:25;3772:8;:56::i;:::-;-1:-1:-1;3856:4:48;;3438:429;-1:-1:-1;;;3438:429:48:o;3657:170:84:-;3743:4;3759:40;3769:10;3781:9;3792:6;3759:9;:40::i;1862:101:51:-;1910:11;1940:16;:14;:16::i;350:27:17:-;;;-1:-1:-1;;;;;350:27:17;;:::o;4145:172:57:-;4215:7;4241:14;:30;4272:8;4282;4292:17;:15;:17::i;:::-;4241:69;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3022:103::-;899:4:56;3022:103:57;:::o;1779:36:20:-;;;:::o;9635:450:15:-;9688:7;9710:25;9741:10;:8;:10::i;:::-;-1:-1:-1;;;;;9741:24:15;;9766:11;:9;:11::i;:::-;9741:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9741:37:15;;;;;;;;;;;;:::i;:::-;9707:71;;;;9909:23;9923:8;9909:13;:23::i;:::-;9943:34;9980:20;:18;:20::i;:::-;9943:57;;10017:61;10050:17;10069:8;10017:32;:61::i;:::-;10010:68;;;;9635:450;:::o;2171:26:20:-;;;:::o;1900:32::-;;;:::o;2267:28::-;;;:::o;1313:753:85:-;1575:60;1603:8;1584:15;:27;;5606:3:66;1575:8:85;:60::i;:::-;-1:-1:-1;;;;;1662:14:85;;;1646:13;1662:14;;;:7;:14;;;;;;;;;1717:68;;1728:16;1717:68;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1717:68:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;1707:79;;;;;;;;;1812:28;1707:79;1812:16;:28::i;:::-;1797:43;;1851:14;1868:24;1878:4;1884:1;1887;1890;1868:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1868:24:85;;-1:-1:-1;;1868:24:85;;;-1:-1:-1;1902:79:85;;-1:-1:-1;;;;;;1912:20:85;;;;;;1911:43;;-1:-1:-1;;;;;;1938:15:85;;;;;;;1911:43;10474:3:66;1902:8:85;:79::i;:::-;-1:-1:-1;;;;;1992:14:85;;;;;;:7;:14;;;;;-1:-1:-1;2009:9:85;;1992:26;;2028:31;1992:14;2044:7;2053:5;2028:8;:31::i;:::-;1313:753;;;;;;;;;;;:::o;13513:2437:15:-;13821:26;13849:38;13790:6;3861:68;3892:10;:8;:10::i;3861:68::-;3939:55;3958:11;:9;:11::i;3939:55::-;2970:18:75::1;:16;:18::i;:::-;13992:20:15::2;14026:13;:11;:13::i;:::-;14022:1744;;14088:54;14106:6;14114;14122:9;14133:8;14088:17;:54::i;:::-;14060:82:::0;-1:-1:-1;14060:82:15;-1:-1:-1;14437:58:15::2;2379:3;14446:28:::0;::::2;;5338:3:66;14437:8:15;:58::i;:::-;14509:41;14533:1;2379:3;14509:15;:41::i;:::-;14564:55;14580:9;2379:3;14591:12;:27;14564:15;:55::i;:::-;14706:28;14724:9;14706:17;:28::i;:::-;14848:16;::::0;;14862:1:::2;14848:16:::0;;;;;::::2;::::0;;;;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;;::::0;-1:-1:-1;14848:16:15::2;14824:40;;14022:1744;;;14895:23;14909:8;14895:13;:23::i;:::-;14995:56;15009:15;15026:8;15035:1;15026:11;;;;;;;;;;;;;;15039:8;15048:1;15039:11;;;;;;;;;;;;;;14995:13;:56::i;:::-;15117:228;15146:6;15170;15194:9;15221:8;15247:15;15280:25;15323:8;15117:11;:228::i;:::-;15066:279:::0;;-1:-1:-1;15066:279:15;-1:-1:-1;15066:279:15;-1:-1:-1;15459:40:15::2;15475:9:::0;15066:279;15459:15:::2;:40::i;:::-;15586:28;15604:9;15586:17;:28::i;:::-;15713:42;15733:21;15713:19;:42::i;:::-;15917:26;:24;:26::i;:::-;2998:1:75;13513:2437:15::0;;;;;;;;;;;:::o;2235:26:20:-;;;:::o;2260:254:48:-;2341:7;2383:10;:8;:10::i;:::-;-1:-1:-1;;;;;2364:30:48;;;;;;2360:148;;;-1:-1:-1;;;2410:18:48;;2360:148;2466:31;2482:5;2489:7;2466:15;:31::i;:::-;2459:38;;;;2021:34:20;;;:::o;8873:117:15:-;8928:16;8963:20;:18;:20::i;4029:110:57:-;4124:8;4029:110;:::o;1135:274:72:-;1345:5;1369:33;1345:5;1369:19;:33::i;:::-;1135:274;;:::o;3962:704:18:-;4032:85;4047:6;:8;;;4042:1;:13;;:32;;;;;1031:4;4059:6;:8;;;:15;;4042:32;1019:3:21;4032:9:18;:85::i;:::-;4127;4142:6;:8;;;4137:1;:13;;:32;;;;;1031:4;4154:6;:8;;;:15;;1019:3:21;4127:9:18;:85::i;:::-;4243:27;;;;;;;;4251:8;;;;4243:27;;4261:8;;;;4243:27;;;;4223:17;4297:18;4243:27;;4297:10;:18::i;:::-;4280:35;-1:-1:-1;4341:194:18;4364:36;:47;-1:-1:-1;4364:47:18;;;:98;;-1:-1:-1;4426:36:18;4415:47;;;4364:98;1087:3:21;4341:9:18;:194::i;:::-;4546:113;4561:6;:13;;;4556:1;:18;;:58;;;;;1518:4;4578:6;:13;;;:36;;4556:58;1327:3:21;4546:9:18;:113::i;:::-;3962:704;;;:::o;4808:172:63:-;4892:7;4918:55;:4;4934:14;2092:2;4918:15;:55::i;5083:194::-;5178:7;5204:66;:4;5222:18;2155:2;5204:17;:66::i;948:166:79:-;1006:7;1025:37;1039:1;1034;:6;;4370:1:66;1025:8:79;:37::i;:::-;-1:-1:-1;1084:5:79;;;948:166::o;3094:280:76:-;3209:7;2126:10;3276:17;;3274:20;3258:36;;3287:6;3342:5;:13;;3354:1;3342:13;;;3350:1;3342:13;3334:22;;:32;;3312:55;;3094:280;-1:-1:-1;;;;3094:280:76:o;6887:269::-;-1:-1:-1;;;;;7074:18:76;;7072:21;7056:37;;;;7133:15;;7111:38;;6887:269::o;2480:222:46:-;2543:6;2578:5;;;2599:6;;;:26;;;2624:1;2619;2609:7;:11;;;;;;:16;2599:26;2593:71;;2628:36;2637:5;4467:1:66;2628:8:46;:36::i;:::-;1348:4;2682:13;;;;-1:-1:-1;;;2480:222:46:o;1647:266::-;1703:6;1805:5;;;1826:6;;;;:23;;1848:1;1844;:5;1826:23;;;1840:1;1835;:6;;1826:23;1820:68;;1852:36;1861:5;4322:1:66;1852:8:46;:36::i;9345:213:84:-;-1:-1:-1;;;;;9468:18:84;;;;;;;-1:-1:-1;9468:18:84;;;;;;;;:27;;;;;;;;;;;;;:36;;;9519:32;;;;;;;;;;;;;;;;;9345:213;;;:::o;2300:181:65:-;2355:16;2374:20;-1:-1:-1;;;;;;2386:7:65;;;2374:11;:20::i;:::-;2355:39;;2404:70;2413:33;2425:8;2435:10;2413:11;:33::i;:::-;8353:3:66;2404:8:65;:70::i;3793:358:75:-;3849:6;3845:232;;;3871:81;3898:24;:22;:24::i;:::-;3880:15;:42;8455:3:66;3871:8:75;:81::i;:::-;3845:232;;;3983:83;4010:25;:23;:25::i;:::-;3992:15;:43;9885:3:66;3983:8:75;:83::i;:::-;4087:7;:16;;-1:-1:-1;;4087:16:75;;;;;;;;;;4118:26;;;;;;;;;;;;;;;;;3793:358;:::o;4544:237::-;4591:4;4737:25;:23;:25::i;:::-;4719:15;:43;:55;;;-1:-1:-1;;4767:7:75;;;;4766:8;;4544:237::o;4894:108::-;4976:19;4894:108;:::o;5008:110::-;5091:20;5008:110;:::o;34473:115:15:-;34532:7;34558:23;:9;;:21;:23::i;866:101:66:-;935:9;930:34;;946:18;954:9;946:7;:18::i;7068:559:84:-;7195:71;-1:-1:-1;;;;;7204:20:84;;;;8770:3:66;7195:8:84;:71::i;:::-;7276:72;-1:-1:-1;;;;;7285:23:84;;;;8838:3:66;7276:8:84;:72::i;:::-;7359:47;7380:6;7388:9;7399:6;7359:20;:47::i;:::-;-1:-1:-1;;;;;7437:17:84;;:9;:17;;;;;;;;;;;:68;;7459:6;9316:3:66;7437:21:84;:68::i;:::-;-1:-1:-1;;;;;7417:17:84;;;:9;:17;;;;;;;;;;;:88;;;;7538:20;;;;;;;:32;;7563:6;7538:24;:32::i;:::-;-1:-1:-1;;;;;7515:20:84;;;:9;:20;;;;;;;;;;;;:55;;;;7585:35;;;;;;;7515:20;;7585:35;;;;;;;;;;;;;7068:559;;;:::o;4220:98:75:-;4272:39;4281:14;:12;:14::i;:::-;8397:3:66;4272:8:75;:39::i;8557:158:15:-;8629:9;;:35;;8656:7;8629:26;:35::i;:::-;8617:9;:47;8679:29;;;;;;8700:7;;8679:29;:::i;34106:361::-;34180:9;;34203:24;34180:9;34203:22;:24::i;:::-;34199:262;;;34254:68;34279:42;34306:14;;34279:26;:42::i;:::-;34254:8;;:24;:68::i;:::-;34243:79;;34347:69;34374:41;34401:13;:11;:13::i;:::-;34374:26;:41::i;:::-;34347:8;;:26;:69::i;:::-;34430:9;:20;-1:-1:-1;34106:361:15:o;7270:786:59:-;7534:7;7992:40;:10;7534:7;7992:21;:40::i;:::-;7923:54;:15;2605:2;7923:27;:54::i;:::-;7852:56;:16;2668:2;7852:28;:56::i;:::-;7784:53;:14;2730:3;7784:26;:53::i;:::-;7714:55;:15;2794:3;7714:27;:55::i;:::-;7644;:15;2858:3;7644:27;:55::i;:::-;7572:57;:16;2923:3;7572:28;:57::i;:::-;:127;:197;:265;:336;:405;:460;7553:479;;7270:786;;;;;;;;;;:::o;5583:129::-;5641:7;5667:38;:6;5641:7;5667:19;:38::i;2386:188:83:-;2447:7;2494:10;2506:12;2520:15;2537:13;:11;:13::i;:::-;2483:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2560:4;2483:83;;;;;;;;;;;;;;;;;;;;;;;;2473:94;;;;;;2386:188;-1:-1:-1;2386:188:83:o;7279:397:15:-;7355:87;2487:4;7364:17;:45;;5289:3:66;7355:8:15;:87::i;:::-;7452;2560:4;7461:17;:45;;5228:3:66;7452:8:15;:87::i;:::-;7562:9;;:49;;7593:17;7562:30;:49::i;:::-;7550:9;:61;7626:43;;;;;;7651:17;;7626:43;:::i;915:167:93:-;973:7;1004:5;;;1019:37;1028:6;;;;973:7;1019:8;:37::i;2239:130:63:-;2298:6;2323:39;:4;2298:6;2323:16;:39::i;2453:135::-;2514:6;2539:42;:4;1902:2;2539:16;:42::i;2691:168::-;2767:7;2793:59;:4;1978:2;2793:17;:59::i;2942:130::-;3000:7;3026:39;:4;2034:2;3026:17;:39::i;3145:129::-;3205:4;3228:39;:4;2092:2;3228:15;:39::i;3341:143::-;3405:7;3431:46;:4;2155:2;3431:17;:46::i;810:131:72:-;888:46;902:1;897;:6;5002:3:66;888:8:72;:46::i;17764:3206:20:-;18052:19;18085:27;18126:38;18344:37;18383:51;18438:23;:21;:23::i;:::-;18343:118;;;;18668:14;:12;:14::i;:::-;18664:2127;;;19036:72;;-1:-1:-1;;;19036:72:20;;19004:29;;19036:12;;:31;;:72;;19068:8;;19078:10;;19090:17;;19036:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19004:104;;19251:94;19265:15;19282:8;19292:21;19315:10;19327:17;19251:13;:94::i;:::-;19360:38;19376:21;19360:15;:38::i;:::-;19441:27;19449:8;19459;19441:7;:27::i;:::-;19413:55;;-1:-1:-1;19413:55:20;-1:-1:-1;19943:95:20;19981:21;19413:55;20017:13;:11;:13::i;:::-;20032:5;19943:37;:95::i;:::-;19926:14;:112;;;20058:57;;;;;;20077:21;;19926:112;20058:57;:::i;:::-;;;;;;;;18664:2127;;;;20374:27;20382:8;20392;20374:7;:27::i;:::-;-1:-1:-1;;20746:14:20;:34;20346:55;;-1:-1:-1;20346:55:20;-1:-1:-1;18664:2127:20;20946:16;;;20960:1;20946:16;;;;;;;;20921:11;;20934:10;;20946:16;20960:1;20946:16;;;;;;;;;;-1:-1:-1;20946:16:20;20913:50;;;;;;;;17764:3206;;;;;;;;;;;:::o;41571:215:15:-;41663:46;41676:7;41684:1;41676:10;;;;;;;;;;;;;;41688:20;41703:4;41688:14;:20::i;:::-;41663:12;:46::i;:::-;41650:7;41658:1;41650:10;;;;;;;;;;;;;:59;;;;;41732:47;41745:7;41753:1;41745:10;;;;;;;;;;;;;;41757:21;41772:5;41757:14;:21::i;41732:47::-;41719:7;41727:1;41719:10;;;;;;;;;;;;;:60;;;;;41571:215;:::o;43038:6537::-;43701:10;43723:4;43701:27;43697:5872;;44015:28;;43997:12;;44023:4;;44015:28;;43997:12;;44034:8;;44015:28;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;43996:47;;;44261:7;44290:1;44285:3176;;;;47609:9;44285:3176;44741:4;44738:1;44735;44720:26;44790:1;44784:8;-1:-1:-1;;;;;;44780:81:15;-1:-1:-1;;;45004:77:15;;44998:2;;45133:16;45130:1;45127;45112:38;45185:16;45182:1;45175:27;44998:2;;46524;46518:4;46515:1;46500:27;46709:2;46703:4;46696:16;47117:2;47099:16;47095:25;47089:4;47083;47068:53;47439:2;47421:16;47417:25;47414:1;47407:36;44127:3523;47680:23;47694:8;47680:13;:23::i;:::-;47719:17;47738:29;47773:224;47798:6;47822;47846:9;47873:8;47899:15;47932:25;47975:8;47773:7;:224;;:::i;:::-;47718:279;;;;;48012:29;48028:12;48012:15;:29;;:::i;:::-;48522:19;;-1:-1:-1;;48909:23:15;;48949:24;;;49195:66;-1:-1:-1;;49177:16:15;;49170:92;-1:-1:-1;48518:28:15;-1:-1:-1;;49288:16:15;;49541:2;49531:13;;49288:16;49517:28;7503:106:57;7561:7;7587:15;;;:8;:15;;;;;;;7503:106::o;8128:679:59:-;8220:19;8253:22;8289:18;8321:21;8356:19;8389:22;8425:18;8483:25;8501:6;8483:17;:25::i;:::-;8468:40;;8536:24;8553:6;8536:16;:24::i;:::-;8518:42;;8584:24;8601:6;8584:16;:24::i;:::-;8570:38;;8635:23;8651:6;8635:15;:23::i;:::-;8618:40;;8683:25;8701:6;8683:17;:25::i;:::-;8668:40;;8736:24;8753:6;8736:16;:24::i;:::-;8718:42;;8783:17;8793:6;8783:9;:17::i;:::-;8770:30;;8128:679;;;;;;;;;:::o;1793:180:79:-;1851:7;1882:5;;;1897:51;1906:6;;;:20;;;1925:1;1920;1916;:5;;;;;;:10;1906:20;4467:1:66;1897:8:79;:51::i;3855:400:44:-;3917:7;3940:6;3936:74;;3962:37;3971:5;4516:1:66;3962:8:44;:37::i;:::-;4024:6;4020:45;;-1:-1:-1;4053:1:44;4046:8;;4020:45;1305:4;4095:7;;;;:1;:7;:1;4118:13;;;;;:20;4112:106;;4155:36;4164:5;4564:1:66;4155:8:44;:36::i;:::-;4247:1;4235:9;:13;;;;;;;3855:400;-1:-1:-1;;;;3855:400:44:o;6747:251:57:-;6920:71;;-1:-1:-1;;;6920:71:57;;6895:6;;6920:14;;-1:-1:-1;;6920:71:57;;6954:8;;6964;;6974:11;;6987:3;;6920:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6913:78;6747:251;-1:-1:-1;;;;6747:251:57:o;40819:201:15:-;40905:42;40914:7;40922:1;40914:10;;;;;;;;;;;;;;40926:20;40941:4;40926:14;:20::i;:::-;40905:8;:42::i;:::-;40892:7;40900:1;40892:10;;;;;;;;;;;;;:55;;;;;40970:43;40979:7;40987:1;40979:10;;;;;;;;;;;;;;40991:21;41006:5;40991:14;:21::i;4016:104:48:-;4092:21;4098:6;4106;4092:5;:21::i;4444:447:20:-;4500:33;;:::i;:::-;4535:35;;:::i;:::-;4695:13;4630;;;;4582:127;;;;4685:8;4620;;;;4582:127;;;;4675:8;4610;;;;4582:127;;;;4662:11;4597;;;;4582:127;;;;4648:12;4582:127;;4720:10;;4748:9;;;;4812;4761:11;;;4719:103;4801:9;4719:103;;4789:10;4734:12;;;4719:103;;;;4777:10;4719:103;;4879:4;4853:5;;;4832:52;4875:2;4848:3;;;4832:52;4871:2;4843:3;;;4832:52;;;;4867:2;4838:3;;;4832:52;4863:2;4833:3;;;4832:52;4583:6;;4444:447::o;13379:2199::-;13676:7;13697:16;13727;14056:37;14095:51;14150:23;:21;:23::i;:::-;14055:118;;;;14183:29;14215:12;:31;14247:8;14257:10;14269:17;14215:72;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14183:104;;14422:94;14436:15;14453:8;14463:21;14486:10;14498:17;14422:13;:94::i;:::-;14527:38;14543:21;14527:15;:38::i;:::-;14577:20;14599:26;14629:27;14637:8;14647;14629:7;:27::i;:::-;14671:10;:21;14576:80;;-1:-1:-1;14576:80:20;-1:-1:-1;14671:21:20;;14667:113;;;14708:61;14719:12;14733:20;14743:9;14733;:20::i;:::-;14755:13;:11;:13::i;:::-;14708:10;:61::i;:::-;15230:95;15268:21;15291:12;15305:13;:11;:13::i;:::-;15320:4;15230:37;:95::i;:::-;15213:14;:112;;;15341:57;;;;;;15360:21;;15213:112;15341:57;:::i;:::-;;;;;;;;15554:16;;;15568:1;15554:16;;;;;;;;15529:12;;15543:9;;15554:16;15568:1;15554:16;;;;;;;;;;-1:-1:-1;15554:16:20;15521:50;;;;;;;;;;;13379:2199;;;;;;;;;;;:::o;42329:209:15:-;42419:44;42430:7;42438:1;42430:10;;;;;;;;;;;;;;42442:20;42457:4;42442:14;:20::i;:::-;42419:10;:44::i;:::-;42406:7;42414:1;42406:10;;;;;;;;;;;;;:57;;;;;42486:45;42497:7;42505:1;42497:10;;;;;;;;;;;;;;42509:21;42524:5;42509:14;:21::i;1074:3172:66:-;-1:-1:-1;;;3588:3:66;3581:79;;;3799:66;3793:4;3786:80;3941:1;3935:4;3928:15;2210:2;2243:18;;;2336;;;2383;;;2215:4;2379:29;;;3057:2;3053:17;2195:18;;;;2288;;;;2284:29;;;;3040:1;3036:14;3025:26;;;;3021:50;;;;2999:73;;2994:3;2990:83;4008:4;4001:26;4234:3;;4224:14;40191:135:15;40251:7;40277:6;:42;;40304:15;40277:42;;;-1:-1:-1;40286:15:15;;40191:135;-1:-1:-1;40191:135:15:o;40488:144::-;40568:7;40594:31;40603:6;40611:13;40594:8;:31::i;22525:456:20:-;22730:16;;;22744:1;22730:16;;;22682:25;22730:16;;;;;22682:25;22730:16;;;;;;;;;;-1:-1:-1;22730:16:20;22719:27;;22760:15;22756:219;;;22805:14;22791:8;22800:1;22791:11;;;;;;;;;;;;;:28;;;;;22847:15;22833:8;22842:1;22833:11;;;;;;;;;;;;;:29;;;;;22756:219;;;22907:15;22893:8;22902:1;22893:11;;;;;;;;;;;;;:29;;;;;22950:14;22936:8;22945:1;22936:11;;;;;;;;;;;;;:28;;;;;22525:456;;;;;:::o;3282:168:128:-;3338:7;3374:1;3365:5;:10;;3357:55;;;;;-1:-1:-1;;;3357:55:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3437:5:128;3282:168::o;23325:1876:20:-;23595:9;;23618:24;23595:9;23618:22;:24::i;:::-;:58;;;;;23661:15;23646:12;:30;23618:58;23614:1581;;;23692:17;23712:12;:27;23740:8;23750:10;23762:17;23781:20;:9;:18;:20::i;:::-;23712:90;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23692:110;;23817:19;23839:47;23876:9;23839:36;:47::i;:::-;23817:69;;24221:28;24252:83;24298:9;24309:25;:8;:23;:25::i;:::-;24252:45;:83::i;:::-;24221:114;;24350:26;24379:22;:8;:20;:22::i;:::-;24350:51;;24415:43;24461:40;:8;:38;:40::i;:::-;24415:86;;24515:26;24544:254;24579:35;24632:18;24668:12;24698:21;24761:23;:8;:21;:23::i;:::-;24544:17;:254::i;:::-;24515:283;;24839:18;24817;:40;24813:372;;24940:43;:8;24964:18;24940:23;:43::i;:::-;24929:54;-1:-1:-1;25012:58:20;24929:54;25054:15;25012:41;:58::i;:::-;25001:69;;25100:8;25088:9;:20;;;;25132:38;25151:18;25132:38;;;;;;:::i;:::-;;;;;;;;24813:372;23614:1581;;;;;;;23325:1876;;;;;;:::o;2718:615:44:-;2778:7;2815:5;;;2836:6;;;:26;;;2861:1;2856;2846:7;:11;;;;;;:16;2836:26;2830:96;;2879:36;2888:5;4467:1:66;2879:8:44;:36::i;:::-;2940:12;2936:51;;2975:1;2968:8;;;;;2936:51;1305:4;-1:-1:-1;;3303:11:44;;3302:19;;3325:1;3301:25;3294:32;;;2718:615;;;;:::o;1958:277::-;2016:7;2119:1;2114;:6;;2108:76;;2137:36;2146:5;4370:1:66;2137:8:44;:36::i;9232:521:20:-;9668:18;;;;9630:116;;-1:-1:-1;;;9630:116:20;;9544:7;;9630:12;;:27;;:116;;9658:8;;9668:18;9688:15;;9705:10;;9717:17;;9736:9;;9630:116;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;41224:154:15:-;41310:7;41336:35;41349:6;41357:13;41336:12;:35::i;9759:522:20:-;10196:18;;;;10158:116;;-1:-1:-1;;;10158:116:20;;10072:7;;10158:12;;:27;;:116;;10186:8;;10196:18;10216:15;;10233:10;;10245:17;;10264:9;;10158:116;;;:::i;41988:150:15:-;42072:7;42098:33;42109:6;42117:13;42098:10;:33::i;9831:112:44:-;9885:7;1305:4;9912:1;:7;9911:25;;9935:1;9911:25;;;-1:-1:-1;1305:4:44;9924:7;;9831:112::o;4460:722::-;4520:7;4543:6;4539:74;;4565:37;4574:5;4516:1:66;4565:8:44;:37::i;:::-;4627:6;4623:45;;-1:-1:-1;4656:1:44;4649:8;;4623:45;1305:4;4698:7;;;;:1;:7;:1;4721:13;;;;;:20;4715:121;;4758:51;1305:4;4779:1;4767:9;:13;;;;;;:20;4564:1:66;4758:8:44;:51::i;:::-;5169:1;5164;5152:9;:13;5151:19;;;;42544:488:15;42602:11;42999:10;:8;:10::i;:::-;-1:-1:-1;;;;;42999:24:15;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;8996:298::-;9122:16;;;9136:1;9122:16;;;9057;9122;;;;;9057;9085:34;;9122:16;9136:1;9122:16;;;;;;;;;;-1:-1:-1;9122:16:15;9085:53;;9171:24;9190:4;9171:18;:24::i;:::-;9148:17;9166:1;9148:20;;;;;;;;;;;;;:47;;;;;9228:25;9247:5;9228:18;:25::i;:::-;9205:17;9223:1;9205:20;;;;;;;;;;;;;;;;;:48;9270:17;-1:-1:-1;8996:298:15;:::o;3149:1048:61:-;893:4:77;3288:17:61;3982:152;4006:17;:24;4002:1;:28;3982:152;;;4063:60;4081:41;4101:17;4119:1;4101:20;;;;;;;;;;;;;;4081:8;4090:1;4081:11;;;;;;;;;;;;;;:19;;:41;;;;:::i;:::-;4063:9;;:17;:60::i;:::-;4051:72;-1:-1:-1;4032:3:61;;3982:152;;;;4144:46;4165:1;4153:9;:13;6315:3:66;4144:8:61;:46::i;3199:183:83:-;3276:7;3341:20;:18;:20::i;:::-;3363:10;3312:62;;;;;;-1:-1:-1;;;3312:62:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3302:73;;;;;;3295:80;;3199:183;;;:::o;11093:1149:20:-;11235:7;11244:16;11272:30;11305:19;:8;:17;:19::i;:::-;11272:52;-1:-1:-1;11334:70:20;11351:30;11343:4;:38;;;;;;;;;5443:3:66;11334:8:20;:70::i;:::-;11415:26;11444:27;:8;:25;:27::i;:::-;11415:56;;11481;11517:9;:16;11535:1;11481:35;:56::i;:::-;11547:24;11561:9;11547:13;:24::i;:::-;11583:37;11622:51;11677:23;:21;:23::i;:::-;11582:118;;;;11710:26;11739:12;:31;11771:9;11782:10;11794:17;11739:73;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11710:102;;11828:47;11856:18;11828:47;;;;;;:::i;:::-;;;;;;;;12092:20;12115:31;12124:18;12144:1;12115:8;:31::i;:::-;12157:14;:35;;;;-1:-1:-1;12157:35:20;12225:9;;-1:-1:-1;11093:1149:20;;-1:-1:-1;;;;;;;;11093:1149:20:o;3900:110:48:-;3979:24;3985:9;3996:6;3979:5;:24::i;3885:149:84:-;-1:-1:-1;;;;;4000:18:84;;;3974:7;4000:18;;;-1:-1:-1;4000:18:84;;;;;;;;:27;;;;;;;;;;;;;3885:149::o;1415:374:72:-;1511:1;1496:5;:12;:16;1492:53;;;1528:7;;1492:53;1555:16;1574:5;1580:1;1574:8;;;;;;;;;;;;;;1555:27;;1597:9;1609:1;1597:13;;1592:191;1616:5;:12;1612:1;:16;1592:191;;;1649:15;1667:5;1673:1;1667:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;1689:51:72;-1:-1:-1;;;;;1698:18:72;;;;;;;4890:3:66;1689:8:72;:51::i;:::-;1765:7;-1:-1:-1;1630:3:72;;1592:191;;256:103:43;326:9;321:35;;337:19;346:9;337:8;:19::i;6334:164:18:-;6415:10;6443:48;6469:21;6485:2;:4;;;6469:2;:4;;;:15;;:21;;;;:::i;:::-;6459:4;;6443;;:21;;:15;:21::i;:::-;:25;;:48::i;1969:544:51:-;2057:4;1663:42;2078:10;:8;:10::i;:::-;-1:-1:-1;;;;;2078:29:51;;;;;2077:63;;;2112:28;2131:8;2112:18;:28::i;:::-;2073:434;;;2272:10;:8;:10::i;:::-;-1:-1:-1;;;;;2258:24:51;:10;:24;;-1:-1:-1;2251:31:51;;2073:434;2435:16;:14;:16::i;:::-;:61;;;-1:-1:-1;;;2435:61:51;;;;;;;;-1:-1:-1;;;;;2435:61:51;;;;;;;2490:4;2435:61;;;;;;:27;;;;;;;:61;;;;;;;;;;;;;;;:27;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2435:61:51;;-1:-1:-1;2428:68:51;;1765:176:93;1842:7;1861:27;1875:1;1870;:6;;1878:9;1861:8;:27::i;:::-;-1:-1:-1;;1910:5:93;;;1765:176::o;2009:340:73:-;2068:6;2086:9;2098:28;2119:5;2098:13;:28::i;:::-;2086:40;;2187:18;2214:1;2209:2;:6;:78;;1324:6;2254:2;:33;2209:78;;;1324:6;2218:2;:33;2209:78;1259:4;2305:37;;;;-1:-1:-1;;;;2009:340:73:o;3594:171:63:-;3678:7;3704:54;:4;3721:13;3678:7;3704:16;:54::i;3878:180::-;3966:7;3992:59;:4;4009:15;1902:2;3992:16;:59::i;8603:131:76:-;8711:15;;8603:131::o;9370:237::-;2545:11;9563:25;;;;9562:37;;;9370:237::o;8941:::-;2386:11;9134:25;;;;9133:37;;;8941:237::o;11062:142::-;11171:14;2439:11;11163:34;;11062:142::o;3388:427:83:-;3790:9;;3765:44::o;12135:487:76:-;12209:6;12257:14;;;2386:11;12249:34;2846:11;12558:19;;:57;;12610:5;12558:57;;;-1:-1:-1;;12581:25:76;;;-1:-1:-1;;;12135:487:76:o;10534:142::-;10643:14;2280:11;10635:34;;10534:142::o;9730:143::-;9835:14;2126:10;9827:33;;;9826:40;;9730:143::o;11590:142::-;11699:14;-1:-1:-1;;;;;11691:34:76;;11590:142::o;26235:583:20:-;26528:16;26546:20;26568;26590:19;26613:98;26652:14;;26680:21;26613:25;:98::i;:::-;26527:184;;;;;;;;26749:62;26761:8;26771:12;26785;26799:11;26749;:62::i;:::-;26235:583;;;;;:::o;20976:592::-;21066:19;21087:27;21126:30;21159:19;:8;:17;:19::i;:::-;21126:52;-1:-1:-1;21341:53:20;21333:4;:61;;;;;;;;;21329:233;;;21438:47;21466:8;21476;21438:27;:47::i;:::-;21410:75;;-1:-1:-1;21410:75:20;-1:-1:-1;21329:233:20;;;21516:35;7850:3:66;21516:7:20;:35::i;:::-;20976:592;;;;;;:::o;11477:743:45:-;11663:21;11732:13;11728:486;;;11835:10;11848:57;11888:16;11848:33;:10;11865:15;11848:16;:33::i;:::-;:39;;:57::i;:::-;11835:70;-1:-1:-1;11935:18:45;:10;11835:70;11935:14;:18::i;:::-;11919:34;;11728:486;;;;12081:10;12094:61;12138:16;12094:35;:10;12113:15;12094:18;:35::i;:61::-;12081:74;-1:-1:-1;12185:18:45;:10;12081:74;12185:14;:18::i;:::-;12169:34;11477:743;-1:-1:-1;;;;;;11477:743:45:o;2157:148:79:-;2219:7;2238:38;2247:6;;;4516:1:66;2238:8:79;:38::i;:::-;2297:1;2293;:5;;;;;;;2157:148;-1:-1:-1;;;2157:148:79:o;5816:144:59:-;5881:6;5906:47;:6;2923:3;5906:18;:47::i;6061:142::-;6125:6;6150:46;:6;2858:3;6150:18;:46::i;6306:142::-;6370:6;6395:46;:6;2794:3;6395:18;:46::i;6548:140::-;6611:6;6636:45;:6;2730:3;6636:18;:45::i;6791:143::-;6856:6;6881:46;:6;2668:2;6881:18;:46::i;7034:141::-;7098:6;7123:45;:6;2605:2;7123:18;:45::i;8512:410:84:-;8587:68;-1:-1:-1;;;;;8596:21:84;;;;8968:3:66;8587:8:84;:68::i;:::-;8666:49;8687:7;8704:1;8708:6;8666:20;:49::i;:::-;-1:-1:-1;;;;;8747:18:84;;:9;:18;;;;;;;;;;;:67;;8770:6;9382:3:66;8747:22:84;:67::i;:::-;-1:-1:-1;;;;;8726:18:84;;:9;:18;;;;;;;;;;:88;8839:12;;:24;;8856:6;8839:16;:24::i;:::-;8824:12;:39;8878:37;;;;;;;;8904:1;;-1:-1:-1;;;;;8878:37:84;;;;;;;;;;;;8512:410;;:::o;15584:581:20:-;15674:20;15696:26;15734:30;15767:19;:8;:17;:19::i;:::-;15734:52;-1:-1:-1;15931:57:20;15923:4;:65;;;;;;;;;15919:240;;;16032:50;16063:8;16073;16032:30;:50::i;15919:240::-;16113:35;6263:3:66;16113:7:20;:35::i;2012:362:14:-;2152:36;;;;;;;;2178:10;2152:36;;;;;;;;;;;-1:-1:-1;;;;;2152:36:14;;;;;;;-1:-1:-1;;;2152:36:14;;;-1:-1:-1;;;;;2152:36:14;;;;;;;;;2206:29;:12;2223:11;2206:16;:29::i;:::-;:53;;2261:17;;;;;;;;;;;;;;;;;2198:81;;;;;-1:-1:-1;;;2198:81:14;;;;;;;;:::i;:::-;-1:-1:-1;2332:16:14;;;;-1:-1:-1;;;;;2297:51:14;:31;:12;2314:13;2297:16;:31::i;:::-;:51;;2350:16;;;;;;;;;;;;;;;;;2289:78;;;;;-1:-1:-1;;;2289:78:14;;;;;;;;:::i;2311:232:79:-;2371:7;2390:38;2399:6;;;4516:1:66;2390:8:79;:38::i;:::-;2443:6;2439:98;;-1:-1:-1;2472:1:79;2465:8;;2439:98;2525:1;2520;2516;:5;2515:11;;;;;;2511:1;:15;2504:22;;;;6362:178:128;6418:6;-1:-1:-1;;;6444:14:128;;6436:67;;;;-1:-1:-1;;;6436:67:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1445:138:19;1514:6;1539:37;1566:9;1539:26;:37::i;3659:590::-;3763:6;3934:19;3956:37;3983:9;3956:26;:37::i;:::-;4210:32;;;;;3659:590;-1:-1:-1;;;3659:590:19:o;5786:955:57:-;5999:7;6119:14;6136:88;6167:12;6181:11;6194:12;6208:15;6136:23;6147:11;6136:10;:23::i;:::-;:30;:88;;;:30;:88::i;:::-;6119:105;-1:-1:-1;2237:9:57;6481:15;:47;;;:71;;;6576:44;;6609:11;6576:44;;;6588:18;:11;:16;:18::i;:::-;6675:21;;;;:8;:21;;;;;:30;;;;-1:-1:-1;6675:21:57;5786:955;-1:-1:-1;;;;;;5786:955:57:o;4534:169:63:-;4617:7;4643:53;:4;4661:12;2034:2;4643:17;:53::i;4197:217::-;4303:7;4329:78;:4;4347:17;1978:2;4329:17;:78::i;9300:153:15:-;9372:7;9398:6;:48;;9428:18;9398:48;;;-1:-1:-1;9407:18:15;;9300:153;-1:-1:-1;9300:153:15:o;3760:312:77:-;3822:7;3841:11;3855:20;3870:1;3873;3855:14;:20::i;:::-;3841:34;;3885:16;3904:42;3908:34;3914:3;975:5;3908;:34::i;:::-;3944:1;3904:3;:42::i;:::-;3885:61;;3967:8;3961:3;:14;3957:109;;;3998:1;3991:8;;;;;;3957:109;4037:18;4041:3;4046:8;4037:3;:18::i;:::-;4030:25;;;;;;1647:209;1709:7;1746:5;;;1761:57;1770:6;;;:26;;;1795:1;1790;1780:7;:11;;;;1761:57;893:4;1836:7;:13;;867:156:64;927:25;982:4;971:45;;;;;;;;;;;;;;;-1:-1:-1;971:45:64;;867:156;-1:-1:-1;;867:156:64:o;1205:185::-;1273:26;1338:4;1327:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1327:56:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1327:56:64;;;;;;-1:-1:-1;1311:72:64;;1205:185;-1:-1:-1;;;;;;1205:185:64:o;7898:294:84:-;7973:49;8002:1;8006:7;8015:6;7973:20;:49::i;:::-;8048:12;;:24;;8065:6;8048:16;:24::i;:::-;8033:12;:39;-1:-1:-1;;;;;8103:18:84;;:9;:18;;;;;;;;;;;:30;;8126:6;8103:22;:30::i;:::-;-1:-1:-1;;;;;8082:18:84;;:9;:18;;;;;;;;;;;:51;;;;8148:37;;;;;;;8082:18;;:9;;8148:37;;;;;;;;;;7898:294;;:::o;793:128:43:-;841:29;850:9;-1:-1:-1;;;841:8:43;:29::i;7682:279:15:-;7768:4;7816:51;-1:-1:-1;;;7816:11:15;:51::i;:::-;7804:8;:63;7803:151;;;-1:-1:-1;7897:56:15;-1:-1:-1;;;7897:11:15;:56::i;:::-;7885:68;;;;7682:279;-1:-1:-1;7682:279:15:o;13692:345:78:-;13737:6;13838:37;13851:1;13847;:5;4838:3:66;13838:8:78;:37::i;:::-;2964:13;13889:21;-1:-1:-1;13889:46:78;;;;-1:-1:-1;3019:13:78;13914:21;;13889:46;13885:146;;;1935:4;13958:9;13965:1;13958:6;:9::i;:::-;:18;;;;;;13951:25;;;;13885:146;14014:6;14018:1;14014:3;:6::i;:::-;14007:13;;;;7398:373:76;2386:11;7727:25;;;7726:37;;7583:18;;;7581:21;7565:37;;7704:60;7398:373;;;;;:::o;27731:914:20:-;27879:7;27900;27921;27942;27975:27;28004:30;28036:20;28058:19;28081:18;:16;:18::i;:::-;27974:125;;;;;;;;28195:19;28218:1;28195:24;28191:95;;;28243:1;;-1:-1:-1;28243:1:20;;-1:-1:-1;28249:12:20;;-1:-1:-1;28263:11:20;-1:-1:-1;28235:40:20;;-1:-1:-1;;28235:40:20;28191:95;28330:16;28348:20;28372:197;28416:17;28447:16;28477:13;:11;:13::i;:::-;28504:19;28537:22;28372:30;:197::i;:::-;28329:240;;-1:-1:-1;28329:240:20;-1:-1:-1;28612:12:20;;-1:-1:-1;28626:11:20;;-1:-1:-1;;;;;27731:914:20;;;;;;;;:::o;28724:434::-;28933:12;;28929:82;;28961:39;28977:12;28991:8;28961:15;:39::i;:::-;29067:16;;29063:89;;29099:42;29115:11;29128:12;29099:15;:42::i;21574:928::-;21725:7;21734:16;22177:19;22199:33;:8;:31;:33::i;:::-;22177:55;;22343:27;22373:80;22416:8;22426:11;22439:13;:11;:13::i;:::-;22373:42;:80::i;:::-;22471:11;;;;-1:-1:-1;21574:928:20;;-1:-1:-1;;;;21574:928:20:o;1675:277:44:-;1733:7;1837:5;;;1858:6;;;;1852:76;;1881:36;1890:5;4322:1:66;1881:8:44;:36::i;2241:247::-;2303:7;2340:5;;;2361:6;;;:26;;;2386:1;2381;2371:7;:11;;;;;;:16;2361:26;2355:96;;2404:36;2413:5;4467:1:66;2404:8:44;:36::i;12743:488:76:-;12817:6;12865:14;;;2545:11;12857:34;2901:11;13167:19;;:57;;13219:5;13167:57;;;-1:-1:-1;;13190:25:76;;;-1:-1:-1;;;12743:488:76:o;1353:121:93:-;1411:7;1437:30;1441:1;1444;4370::66;1437:3:93;:30::i;16171:528:20:-;16325:7;16334:16;16366:20;16389:36;:8;:34;:36::i;:::-;16366:59;;16536:26;16565:84;16611:8;16621:12;16635:13;:11;:13::i;:::-;16565:45;:84::i;3387:1033:59:-;3588:7;3810:14;3853:17;3863:6;3853:9;:17::i;:::-;3834:16;:36;3810:61;;3881:22;3952:7;3933:16;:26;3906:24;3923:6;3906:16;:24::i;:::-;:53;3881:78;;3969:21;4037:7;4019:15;:25;3993:23;4009:6;3993:15;:23::i;:::-;:51;3969:75;;4054:22;4125:7;4106:16;:26;4079:24;4096:6;4079:16;:24::i;:::-;:53;4054:78;;4162:251;4184:16;4218:15;4251;4284:14;4316:16;4350:15;4383:16;4162:4;:251::i;:::-;4143:270;3387:1033;-1:-1:-1;;;;;;;;;;3387:1033:59:o;1205:98:56:-;1257:7;1283:13;1287:5;1294:1;1283:3;:13::i;4752:269:76:-;2280:11;4939:18;;4937:21;4921:37;;;;4998:15;;4976:38;;4752:269::o;5795:::-;2439:11;5982:18;;5980:21;5964:37;;;;6041:15;;6019:38;;5795:269::o;4865:2192:78:-;4923:7;4946:6;4942:131;;-1:-1:-1;1935:4:78;5040:22;;4942:131;5087:6;5083:45;;-1:-1:-1;5116:1:78;5109:8;;5083:45;5498:44;-1:-1:-1;;;5507:10:78;;4615:1:66;5498:8:78;:44::i;:::-;5577:1;5933:57;3078:24;5942:23;;4666:1:66;5933:8:78;:57::i;:::-;6025:1;6000:15;2964:13;6071:28;-1:-1:-1;6071:60:78;;;;-1:-1:-1;3019:13:78;6103:28;;6071:60;6067:684;;;6147:14;6164:16;6171:8;6164:6;:16::i;:::-;6147:33;-1:-1:-1;1935:4:78;6631:16;;;6630:29;;6629:40;6618:8;1935:4;6598:7;:16;6597:29;:72;6581:89;;6067:684;;;;6732:8;6716:13;6720:8;6716:3;:13::i;:::-;:24;6701:39;;6067:684;1935:4;6760:22;;6856:150;-1:-1:-1;;;;6878:36:78;;;:76;;;2720:6;6918:12;:36;;6878:76;4723:1:66;6856:8:78;:150::i;:::-;7032:17;7036:12;7032:3;:17::i;1862:617:77:-;1922:7;1959:5;;;1974:57;1983:6;;;:26;;;2008:1;2003;1993:7;:11;;;;1974:57;2046:12;2042:431;;2081:1;2074:8;;;;;2042:431;893:4;-1:-1:-1;;2439:11:77;;2438:19;2461:1;2437:25;2430:32;;;;;1028:3379:43;-1:-1:-1;;;1091:18:43;3742:79;;;3960:66;3954:4;3947:80;4102:1;4096:4;4089:15;2230:2;2263:18;;;2308;;;2235:4;2304:29;;;3106:1;3197:14;2215:18;;;;3186:26;;;;2356:18;;;;2403;;;2399:29;;3218:2;3214:17;3182:50;3096:4;3102:18;;;;;;3092:29;3088:2;3084:38;3161:72;;;;3156:3;3152:82;4169:4;4162:26;1120:14;;;;;4395:3;;4385:14;19376:1714:78;1935:4;19646:11;19424:6;;-1:-1:-1;20056:10:78;;;;-1:-1:-1;;20031:10:78;;20030:21;20056:10;20029:38;;;;21082:1;20475;-1:-1:-1;20029:38:78;;;;20097:5;;;20096:16;;;20421:15;;;20420:26;;;20469:7;;;20456:20;;;20548:1;20494:15;;;20493:26;;;20542:7;;;20529:20;20621:1;20567:15;;;20566:26;;;20615:7;;;20602:20;20694:1;20640:15;;;20639:26;;;20688:7;;;20675:20;20767:2;20713:15;;;20712:26;;;20761:8;;;20748:21;20841:2;20787:15;;;20786:26;;;20835:8;;;20822:21;20915:2;20861:15;;;;20860:26;;;;20909:8;;;;20896:21;;;;21070:13;;;-1:-1:-1;;;19376:1714:78:o;14151:4959::-;14196:6;1935:4;14218:1;:10;14214:382;;;14558:26;14582:1;-1:-1:-1;14582:1:78;14562:21;;;;;14558:3;:26::i;:::-;14557:27;;14549:36;;;;14214:382;15921:10;15954:11;15949:16;;15945:114;;3214:56;15981:7;;;-1:-1:-1;3158:21:78;16039:9;15945:114;16078:11;16073:16;;16069:114;;3377:28;16105:7;;;-1:-1:-1;3322:20:78;16163:9;16069:114;16321:3;16334:8;;;;16314:10;3543:34;16469:7;;16465:82;;3543:34;2125:4;16497:10;;16496:17;;-1:-1:-1;3486:22:78;16527:9;16465:82;3672:27;16561:1;:7;16557:82;;3672:27;2125:4;16589:10;;16588:17;;-1:-1:-1;3615:22:78;16619:9;16557:82;3793:24;16653:1;:7;16649:82;;3793:24;2125:4;16681:10;;16680:17;;-1:-1:-1;3737:21:78;16711:9;16649:82;3911:22;16745:1;:7;16741:82;;3911:22;2125:4;16773:10;;16772:17;;-1:-1:-1;3855:21:78;16803:9;16741:82;4027:21;16837:1;:7;16833:82;;4027:21;2125:4;16865:10;;16864:17;;-1:-1:-1;3971:21:78;16895:9;16833:82;4142:21;16929:1;:7;16925:82;;4142:21;2125:4;16957:10;;;16956:17;;16987:9;16925:82;4257:21;17021:1;:7;17017:82;;4257:21;2125:4;17049:10;;17048:17;;-1:-1:-1;4201:20:78;17079:9;17017:82;4372:21;17113:1;:7;17109:82;;4372:21;2125:4;17141:10;;17140:17;;-1:-1:-1;4316:20:78;17171:9;17109:82;4489:21;17205:1;:8;17201:85;;4489:21;2125:4;17234:10;;17233:18;;-1:-1:-1;4432:20:78;17265:10;17201:85;4606:21;17300:1;:8;17296:85;;4606:21;2125:4;17329:10;;17328:18;;-1:-1:-1;4550:19:78;17360:10;17296:85;17883:8;2125:4;17921:1;:10;2125:4;;17896:1;:10;17895:21;17894:38;;;;;;;-1:-1:-1;17942:16:78;2125:4;17962:5;;;17961:16;;-1:-1:-1;18071:1:78;;2125:4;18286:15;;;18285:26;;-1:-1:-1;18340:1:78;18285:26;18334:7;18321:20;2125:4;18359:15;;;18358:26;;-1:-1:-1;18413:1:78;18358:26;18407:7;18394:20;2125:4;18432:15;;;18431:26;;-1:-1:-1;18486:1:78;18431:26;18480:7;18467:20;2125:4;18505:15;;;18504:26;;-1:-1:-1;18559:1:78;18504:26;18553:7;18540:20;2125:4;18578:15;;;18577:26;;-1:-1:-1;18632:2:78;18577:26;18626:8;18613:21;18806:1;18793:14;19100:3;19081:15;;;19080:23;;14151:4959;-1:-1:-1;;;;;;;14151:4959:78:o;29237:497:20:-;29441:10;;:61;;-1:-1:-1;;;29441:61:20;;29325:7;;;;;;;;-1:-1:-1;;;;;29441:10:20;;;;-1:-1:-1;;29441:61:20;;-1:-1:-1;;;;29441:61:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29516:10;;:64;;-1:-1:-1;;;29516:64:20;;-1:-1:-1;;;;;29516:10:20;;;;-1:-1:-1;;29516:64:20;;29535:44;;29516:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29594:10;;:55;;-1:-1:-1;;;29594:55:20;;-1:-1:-1;;;;;29594:10:20;;;;-1:-1:-1;;29594:55:20;;-1:-1:-1;;;;29594:55:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29663:10;;:54;;-1:-1:-1;;;29663:54:20;;-1:-1:-1;;;;;29663:10:20;;;;-1:-1:-1;;29663:54:20;;-1:-1:-1;;;;29663:54:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29420:307;;;;;;;;29237:497;;;;:::o;4717:2410:45:-;4953:7;4962;5696:17;5676:16;:37;5672:443;;-1:-1:-1;6099:1:45;;-1:-1:-1;6099:1:45;6091:13;;5672:443;6567:17;6587:96;6663:19;6588:65;6613:39;:16;6634:17;6613:20;:39::i;:::-;6588:16;;:24;:65::i;:::-;6587:75;;:96::i;:::-;6567:116;-1:-1:-1;6693:21:45;6717:68;6745:39;:16;6766:17;6745:20;:39::i;:::-;6717:19;;:27;:68::i;:::-;6693:92;-1:-1:-1;6795:19:45;6817:35;:16;6693:92;6817:20;:35::i;:::-;6795:57;-1:-1:-1;6862:14:45;6879:30;:9;6795:57;6879:17;:30::i;:::-;6862:47;-1:-1:-1;6968:16:45;6987:38;:22;6862:47;6987:30;:38::i;:::-;6968:57;-1:-1:-1;7035:20:45;7058;:6;6968:57;7058:10;:20::i;:::-;7097:8;;-1:-1:-1;7035:43:45;;-1:-1:-1;;;;;;4717:2410:45;;;;;;;;;:::o;2343:184:64:-;2417:19;2477:4;2466:54;;;;;;;;;;;;;;;-1:-1:-1;2466:54:64;;;;2343:184;-1:-1:-1;;2343:184:64:o;2942:1444:45:-;4195:15;;3094:27;;-1:-1:-1;;;;;4181:30:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4181:30:45;;4168:43;;4226:9;4221:131;4245:8;:15;4241:1;:19;4221:131;;;4297:44;4332:8;4297:26;4317:5;4297:8;4306:1;4297:11;;;;;;;;;;;;;;:19;;:26;;;;:::i;:44::-;4281:10;4292:1;4281:13;;;;;;;;;;;;;;;;;:60;4262:3;;4221:131;;1673:1175;2662:15;;1829:26;;-1:-1:-1;;;;;2648:30:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2648:30:45;;2636:42;;2693:9;2688:127;2712:8;:15;2708:1;:19;2688:127;;;2763:41;2795:8;2763:25;2781:6;2763:8;2772:1;2763:11;;;;;;;;;;;;;;:17;;:25;;;;:::i;:41::-;2748:9;2758:1;2748:12;;;;;;;;;;;;;;;;;:56;2729:3;;2688:127;;1418:123:56;1512:14;1511:23;;;1418:123::o;7271:5379:78:-;7317:6;7335:89;-1:-1:-1;;7344:25:78;;;;;:54;;;2720:6;7373:1;:25;;7344:54;4775:1:66;7335:8:78;:89::i;:::-;7443:1;7439;:5;7435:353;;;7769:7;7774:1;7773:2;;7769:3;:7::i;:::-;-1:-1:-1;7749:27:78;;;;7435:353;9089:14;3158:21;9117:1;:7;9113:220;;-1:-1:-1;;;9140:7:78;;;;3214:56;9113:220;;;3322:20;9194:1;:7;9190:143;;-1:-1:-1;;;9217:7:78;;;;3377:28;9190:143;;;-1:-1:-1;9291:1:78;9190:143;9488:3;9483:8;;;;;2125:4;3486:22;9742:7;;9738:92;;-1:-1:-1;;9765:7:78;;;;;2125:4;3543:34;9797:12;;;9796:23;9738:92;3615:22;9843:1;:7;9839:92;;-1:-1:-1;;9866:7:78;;;;;2125:4;3672:27;9898:12;;;9897:23;9839:92;3737:21;9944:1;:7;9940:92;;-1:-1:-1;;9967:7:78;;;;;2125:4;3793:24;9999:12;;;9998:23;9940:92;3855:21;10045:1;:7;10041:92;;-1:-1:-1;;10068:7:78;;;;;2125:4;3911:22;10100:12;;;10099:23;10041:92;3971:21;10146:1;:7;10142:92;;-1:-1:-1;;10169:7:78;;;;;2125:4;4027:21;10201:12;;;10200:23;10142:92;4086:21;10247:1;:7;10243:92;;-1:-1:-1;;10270:7:78;;;;;4086:21;4142;10302:12;;;10301:23;10243:92;4201:20;10348:1;:7;10344:92;;-1:-1:-1;;10371:7:78;;;;;2125:4;4257:21;10403:12;;;10402:23;10344:92;4316:20;10449:1;:7;10445:92;;-1:-1:-1;;10472:7:78;;;;;2125:4;4372:21;10504:12;;;10503:23;10445:92;2125:4;11069:17;;;;;;11354:1;;11332:8;;;11331:19;11330:25;11365:17;;;;11330:25;-1:-1:-1;11424:1:78;2125:4;11402:8;;;11401:19;11400:25;11435:17;;;;11400:25;-1:-1:-1;11494:1:78;2125:4;11472:8;;;11471:19;11470:25;11505:17;;;;11470:25;-1:-1:-1;11564:1:78;2125:4;11542:8;;;11541:19;11540:25;11575:17;;;;11540:25;-1:-1:-1;11634:1:78;2125:4;11612:8;;;11611:19;11610:25;11645:17;;;;11610:25;-1:-1:-1;11704:1:78;2125:4;11682:8;;;11681:19;11680:25;11715:17;;;;11680:25;-1:-1:-1;11774:1:78;2125:4;11752:8;;;11751:19;11750:25;11785:17;;;;11750:25;-1:-1:-1;11844:1:78;2125:4;11822:8;;;11821:19;11820:25;11855:17;;;;11820:25;-1:-1:-1;11914:2:78;2125:4;11892:8;;;11891:19;11890:26;11926:17;;;;11890:26;-1:-1:-1;11985:2:78;2125:4;11963:8;;;11962:19;11961:26;11997:17;;;;11961:26;-1:-1:-1;12056:2:78;2125:4;12034:8;;;12033:19;12032:26;12068:17;;;;12032:26;-1:-1:-1;12640:3:78;2125:4;12596:19;;;12595:30;12594:42;;12593:50;;7271:5379;-1:-1:-1;;;;;;7271:5379:78:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;14:138:129:-;84:20;;113:33;84:20;113:33;:::i;157:699::-;;281:3;274:4;266:6;262:17;258:27;248:2;;303:5;296;289:20;248:2;336:6;330:13;362:4;386:62;401:46;444:2;401:46;:::i;:::-;386:62;:::i;:::-;482:15;;;513:12;;;;545:15;;;591:11;;;579:24;;575:33;;572:42;-1:-1:-1;569:2:129;;;631:5;624;617:20;569:2;657:5;671:156;685:2;682:1;679:9;671:156;;;742:10;;730:23;;773:12;;;;805;;;;703:1;696:9;671:156;;;-1:-1:-1;845:5:129;;238:618;-1:-1:-1;;;;;;;238:618:129:o;861:162::-;928:20;;984:13;;977:21;967:32;;957:2;;1013:1;1010;1003:12;1028:542;;1125:3;1118:4;1110:6;1106:17;1102:27;1092:2;;1147:5;1140;1133:20;1092:2;1174:20;;-1:-1:-1;;;;;1206:26:129;;1203:2;;;1235:9;1203:2;1270:54;1318:4;-1:-1:-1;;1312:2:129;1293:13;;1289:27;1285:38;1270:54;:::i;:::-;1349:2;1340:7;1333:19;1395:3;1388:4;1383:2;1375:6;1371:15;1367:26;1364:35;1361:2;;;1416:5;1409;1402:20;1361:2;1485;1478:4;1470:6;1466:17;1459:4;1450:7;1446:18;1433:55;1508:16;;;1526:4;1504:27;1497:42;;;;1512:7;1082:488;-1:-1:-1;;1082:488:129:o;1575:152::-;1652:20;;1701:1;1691:12;;1681:2;;1717:1;1714;1707:12;1732:152;1809:20;;1858:1;1848:12;;1838:2;;1874:1;1871;1864:12;1889:259;;2001:2;1989:9;1980:7;1976:23;1972:32;1969:2;;;2022:6;2014;2007:22;1969:2;2066:9;2053:23;2085:33;2112:5;2085:33;:::i;2153:263::-;;2276:2;2264:9;2255:7;2251:23;2247:32;2244:2;;;2297:6;2289;2282:22;2244:2;2334:9;2328:16;2353:33;2380:5;2353:33;:::i;2421:402::-;;;2550:2;2538:9;2529:7;2525:23;2521:32;2518:2;;;2571:6;2563;2556:22;2518:2;2615:9;2602:23;2634:33;2661:5;2634:33;:::i;:::-;2686:5;-1:-1:-1;2743:2:129;2728:18;;2715:32;2756:35;2715:32;2756:35;:::i;:::-;2810:7;2800:17;;;2508:315;;;;;:::o;2828:470::-;;;;2974:2;2962:9;2953:7;2949:23;2945:32;2942:2;;;2995:6;2987;2980:22;2942:2;3039:9;3026:23;3058:33;3085:5;3058:33;:::i;:::-;3110:5;-1:-1:-1;3167:2:129;3152:18;;3139:32;3180:35;3139:32;3180:35;:::i;:::-;2932:366;;3234:7;;-1:-1:-1;;;3288:2:129;3273:18;;;;3260:32;;2932:366::o;3303:853::-;;;;;;;;3515:3;3503:9;3494:7;3490:23;3486:33;3483:2;;;3537:6;3529;3522:22;3483:2;3581:9;3568:23;3600:33;3627:5;3600:33;:::i;:::-;3652:5;-1:-1:-1;3709:2:129;3694:18;;3681:32;3722:35;3681:32;3722:35;:::i;:::-;3776:7;-1:-1:-1;3830:2:129;3815:18;;3802:32;;-1:-1:-1;3881:2:129;3866:18;;3853:32;;-1:-1:-1;3937:3:129;3922:19;;3909:33;3986:4;3973:18;;3961:31;;3951:2;;4011:6;4003;3996:22;3951:2;3473:683;;;;-1:-1:-1;3473:683:129;;;;4039:7;4093:3;4078:19;;4065:33;;-1:-1:-1;4145:3:129;4130:19;;;4117:33;;3473:683;-1:-1:-1;;3473:683:129:o;4161:327::-;;;4290:2;4278:9;4269:7;4265:23;4261:32;4258:2;;;4311:6;4303;4296:22;4258:2;4355:9;4342:23;4374:33;4401:5;4374:33;:::i;:::-;4426:5;4478:2;4463:18;;;;4450:32;;-1:-1:-1;;;4248:240:129:o;4493:1363::-;;;;4716:2;4704:9;4695:7;4691:23;4687:32;4684:2;;;4737:6;4729;4722:22;4684:2;4769:16;;-1:-1:-1;;;;;4834:14:129;;;4831:2;;;4866:6;4858;4851:22;4831:2;4909:6;4898:9;4894:22;4884:32;;4954:7;4947:4;4943:2;4939:13;4935:27;4925:2;;4981:6;4973;4966:22;4925:2;5015;5009:9;5037:4;5061:62;5076:46;5119:2;5076:46;:::i;5061:62::-;5157:15;;;5188:12;;;;5220:11;;;5258;;;5250:20;;5246:29;;5243:42;-1:-1:-1;5240:2:129;;;5303:6;5295;5288:22;5240:2;5330:6;5321:15;;5345:233;5359:2;5356:1;5353:9;5345:233;;;5423:3;5417:10;5440:33;5467:5;5440:33;:::i;:::-;5486:18;;5377:1;5370:9;;;;;5524:12;;;;5556;;5345:233;;;-1:-1:-1;5633:18:129;;;5627:25;5597:5;;-1:-1:-1;5627:25:129;;-1:-1:-1;;;5664:16:129;;;5661:2;;;5698:6;5690;5683:22;5661:2;;5726:80;5798:7;5787:8;5776:9;5772:24;5726:80;:::i;:::-;5716:90;;;5846:2;5835:9;5831:18;5825:25;5815:35;;4674:1182;;;;;:::o;5861:1411::-;;6017:2;6060;6048:9;6039:7;6035:23;6031:32;6028:2;;;6081:6;6073;6066:22;6028:2;6113:23;;-1:-1:-1;;;;;6185:14:129;;;6182:2;;;6217:6;6209;6202:22;6182:2;6260:6;6249:9;6245:22;6235:32;;6305:7;6298:4;6294:2;6290:13;6286:27;6276:2;;6332:6;6324;6317:22;6276:2;6373;6360:16;6396:62;6411:46;6454:2;6411:46;:::i;6396:62::-;6492:15;;;6523:12;;;;6555:11;;;6585:4;6616:11;;;6608:20;;6604:29;;6601:42;-1:-1:-1;6598:2:129;;;6661:6;6653;6646:22;6598:2;6688:6;6679:15;;6703:539;6717:2;6714:1;6711:9;6703:539;;;6788:2;6782:3;6773:7;6769:17;6765:26;6762:2;;;6809:6;6801;6794:22;6762:2;6851;6845:9;6897:2;6889:6;6885:15;6954:6;6942:10;6939:22;6934:2;6922:10;6919:18;6916:46;6913:2;;;6965:9;6913:2;6989:22;;7039:32;7067:3;7039:32;:::i;:::-;7024:48;;7122:12;;;7109:26;7092:15;;;7085:51;7149:19;;6735:1;6728:9;;;;;7188:12;;;;7220;;;;6703:539;;;-1:-1:-1;7261:5:129;;5997:1275;-1:-1:-1;;;;;;;;;5997:1275:129:o;7277:1496::-;;7429:2;7472;7460:9;7451:7;7447:23;7443:32;7440:2;;;7493:6;7485;7478:22;7440:2;7525:23;;-1:-1:-1;;;;;7597:14:129;;;7594:2;;;7629:6;7621;7614:22;7594:2;7672:6;7661:9;7657:22;7647:32;;7717:7;7710:4;7706:2;7702:13;7698:27;7688:2;;7744:6;7736;7729:22;7688:2;7785;7772:16;7808:62;7823:46;7866:2;7823:46;:::i;7808:62::-;7904:15;;;7935:12;;;;7967:11;;;7997:4;8028:11;;;8020:20;;8016:29;;8013:42;-1:-1:-1;8010:2:129;;;8073:6;8065;8058:22;8010:2;8100:6;8091:15;;8115:628;8129:2;8126:1;8123:9;8115:628;;;8200:2;8194:3;8185:7;8181:17;8177:26;8174:2;;;8221:6;8213;8206:22;8174:2;8253;8288;8282:9;8334:2;8326:6;8322:15;8391:6;8379:10;8376:22;8371:2;8359:10;8356:18;8353:46;8350:2;;;8402:9;8350:2;8426:22;;8476:32;8504:3;8476:32;:::i;:::-;8461:48;;8559:12;;;8546:26;8529:15;;;8522:51;8623:12;;;8610:26;8593:15;;;8586:51;;;;8650:19;;8147:1;8140:9;;;;;8689:12;;;;8721;;;;8115:628;;8778:192;;8887:2;8875:9;8866:7;8862:23;8858:32;8855:2;;;8908:6;8900;8893:22;8855:2;8936:28;8954:9;8936:28;:::i;8975:1669::-;;;;;;;;9223:3;9211:9;9202:7;9198:23;9194:33;9191:2;;;9245:6;9237;9230:22;9191:2;9286:9;9273:23;9263:33;;9315:2;9367;9356:9;9352:18;9339:32;9380:33;9407:5;9380:33;:::i;:::-;9432:5;-1:-1:-1;9489:2:129;9474:18;;9461:32;9502:35;9461:32;9502:35;:::i;:::-;9556:7;-1:-1:-1;9614:2:129;9599:18;;9586:32;-1:-1:-1;;;;;9667:14:129;;;9664:2;;;9699:6;9691;9684:22;9664:2;9742:6;9731:9;9727:22;9717:32;;9787:7;9780:4;9776:2;9772:13;9768:27;9758:2;;9814:6;9806;9799:22;9758:2;9855;9842:16;9878:62;9893:46;9936:2;9893:46;:::i;9878:62::-;9962:3;9986:2;9981:3;9974:15;10014:2;10009:3;10005:12;9998:19;;10045:2;10041;10037:11;10094:7;10089:2;10083;10079;10075:11;10071:2;10067:20;10063:29;10060:42;10057:2;;;10120:6;10112;10105:22;10057:2;10147:6;10138:15;;10162:163;10176:2;10173:1;10170:9;10162:163;;;10233:17;;10221:30;;10194:1;10187:9;;;;;10271:12;;;;10303;;10162:163;;;-1:-1:-1;10344:5:129;-1:-1:-1;;;10396:3:129;10381:19;;10368:33;;-1:-1:-1;10448:3:129;10433:19;;10420:33;;-1:-1:-1;10506:3:129;10491:19;;10478:33;;-1:-1:-1;10523:16:129;;;10520:2;;;10557:6;10549;10542:22;10520:2;;;10585:53;10630:7;10619:8;10608:9;10604:24;10585:53;:::i;:::-;10575:63;;;9181:1463;;;;;;;;;;:::o;10649:306::-;;10760:2;10748:9;10739:7;10735:23;10731:32;10728:2;;;10781:6;10773;10766:22;10728:2;10812:23;;-1:-1:-1;;;;;;10864:32:129;;10854:43;;10844:2;;10916:6;10908;10901:22;11249:219;;11375:2;11363:9;11354:7;11350:23;11346:32;11343:2;;;11396:6;11388;11381:22;11343:2;11424:38;11452:9;11424:38;:::i;11473:193::-;;11595:2;11583:9;11574:7;11570:23;11566:32;11563:2;;;11616:6;11608;11601:22;11563:2;-1:-1:-1;11644:16:129;;11553:113;-1:-1:-1;11553:113:129:o;11671:253::-;;;11809:2;11797:9;11788:7;11784:23;11780:32;11777:2;;;11830:6;11822;11815:22;11777:2;-1:-1:-1;;11858:16:129;;11914:2;11899:18;;;11893:25;11858:16;;11893:25;;-1:-1:-1;11767:157:129:o;11929:847::-;;12069:2;12057:9;12048:7;12044:23;12040:32;12037:2;;;12090:6;12082;12075:22;12037:2;12128;12122:9;12170:2;12158:15;;-1:-1:-1;;;;;12188:34:129;;12224:22;;;12185:62;12182:2;;;12250:9;12182:2;12277;12270:22;12316:28;12334:9;12316:28;:::i;:::-;12301:44;;12395:2;12380:18;;12367:32;-1:-1:-1;;;;;12428:44:129;;12418:55;;12408:2;;12492:6;12484;12477:22;12408:2;12529;12517:15;;12510:30;12592:2;12577:18;;12564:32;-1:-1:-1;;;;;12627:48:129;;12615:61;;12605:2;;12695:6;12687;12680:22;12605:2;12732;12720:15;;12713:32;12724:6;12027:749;-1:-1:-1;;;12027:749:129:o;12781:1351::-;;;;12957:2;12945:9;12936:7;12932:23;12928:32;12925:2;;;12978:6;12970;12963:22;12925:2;13010:23;;-1:-1:-1;;;;;13082:14:129;;;13079:2;;;13114:6;13106;13099:22;13079:2;13157:6;13146:9;13142:22;13132:32;;13183:6;13223:2;13218;13209:7;13205:16;13201:25;13198:2;;;13244:6;13236;13229:22;13198:2;13275:18;13290:2;13275:18;:::i;:::-;13262:31;;13316;13344:2;13316:31;:::i;:::-;13309:5;13302:46;13380:33;13409:2;13405;13401:11;13380:33;:::i;:::-;13375:2;13368:5;13364:14;13357:57;13446:33;13475:2;13471;13467:11;13446:33;:::i;:::-;13441:2;13434:5;13430:14;13423:57;13533:2;13529;13525:11;13512:25;13507:2;13500:5;13496:14;13489:49;13592:3;13588:2;13584:12;13571:26;13565:3;13558:5;13554:15;13547:51;13652:3;13648:2;13644:12;13631:26;13625:3;13618:5;13614:15;13607:51;13691:34;13720:3;13716:2;13712:12;13691:34;:::i;:::-;13685:3;13678:5;13674:15;13667:59;13759:34;13788:3;13784:2;13780:12;13759:34;:::i;:::-;13753:3;13746:5;13742:15;13735:59;13813:3;13862:2;13858;13854:11;13841:25;13891:2;13881:8;13878:16;13875:2;;;13912:6;13904;13897:22;13875:2;13953:46;13991:7;13980:8;13976:2;13972:17;13953:46;:::i;:::-;13937:14;;;13930:70;;;;-1:-1:-1;13941:5:129;14071:2;14056:18;;14043:32;;-1:-1:-1;14122:2:129;14107:18;;;14094:32;;12915:1217;-1:-1:-1;;;;;12915:1217:129:o;14137:190::-;;14249:2;14237:9;14228:7;14224:23;14220:32;14217:2;;;14270:6;14262;14255:22;14217:2;-1:-1:-1;14298:23:129;;14207:120;-1:-1:-1;14207:120:129:o;14531:258::-;;;14660:2;14648:9;14639:7;14635:23;14631:32;14628:2;;;14681:6;14673;14666:22;14628:2;-1:-1:-1;;14709:23:129;;;14779:2;14764:18;;;14751:32;;-1:-1:-1;14618:171:129:o;14794:443::-;;14891:5;14885:12;14918:6;14913:3;14906:19;14944:4;14973:2;14968:3;14964:12;14957:19;;15010:2;15003:5;14999:14;15031:3;15043:169;15057:6;15054:1;15051:13;15043:169;;;15118:13;;15106:26;;15152:12;;;;15187:15;;;;15079:1;15072:9;15043:169;;;-1:-1:-1;15228:3:129;;14861:376;-1:-1:-1;;;;;14861:376:129:o;15242:133::-;15325:1;15318:5;15315:12;15305:2;;15331:9;15305:2;15351:18;;15295:80::o;15380:524::-;15450:47;15493:3;15485:5;15479:12;15450:47;:::i;:::-;15543:4;15536:5;15532:16;15526:23;15558:58;15610:4;15605:3;15601:14;15587:12;15558:58;:::i;:::-;;15665:4;15658:5;15654:16;15648:23;15641:4;15636:3;15632:14;15625:47;15721:4;15714:5;15710:16;15704:23;15697:4;15692:3;15688:14;15681:47;15777:4;15770:5;15766:16;15760:23;15753:4;15748:3;15744:14;15737:47;15833:4;15826:5;15822:16;15816:23;15809:4;15804:3;15800:14;15793:47;15891:4;15884:5;15880:16;15874:23;15865:6;15860:3;15856:16;15849:49;15440:464;;:::o;15909:318::-;15990:5;15984:12;15979:3;15972:25;16046:4;16039:5;16035:16;16029:23;16022:4;16017:3;16013:14;16006:47;16102:4;16095:5;16091:16;16085:23;16078:4;16073:3;16069:14;16062:47;16158:4;16151:5;16147:16;16141:23;16134:4;16129:3;16125:14;16118:47;16214:4;16207:5;16203:16;16197:23;16190:4;16185:3;16181:14;16174:47;15962:265;;:::o;16232:151::-;16308:12;;16296:25;;16370:4;16359:16;;;16353:23;16337:14;;16330:47;16286:97::o;16388:273::-;;16571:6;16563;16558:3;16545:33;16597:16;;16622:15;;;16597:16;16535:126;-1:-1:-1;16535:126:129:o;16666:203::-;-1:-1:-1;;;;;16830:32:129;;;;16812:51;;16800:2;16785:18;;16767:102::o;16874:633::-;17043:2;17095:21;;;17165:13;;17068:18;;;17187:22;;;16874:633;;17043:2;17266:15;;;;17240:2;17225:18;;;16874:633;17312:169;17326:6;17323:1;17320:13;17312:169;;;17387:13;;17375:26;;17456:15;;;;17421:12;;;;17348:1;17341:9;17312:169;;;-1:-1:-1;17498:3:129;;17023:484;-1:-1:-1;;;;;;17023:484:129:o;17512:267::-;;17691:2;17680:9;17673:21;17711:62;17769:2;17758:9;17754:18;17746:6;17711:62;:::i;17784:477::-;;18041:2;18030:9;18023:21;18067:62;18125:2;18114:9;18110:18;18102:6;18067:62;:::i;:::-;18177:9;18169:6;18165:22;18160:2;18149:9;18145:18;18138:50;18205;18248:6;18240;18205:50;:::i;:::-;18197:58;18013:248;-1:-1:-1;;;;;18013:248:129:o;18266:599::-;;18611:3;18641:2;18630:9;18623:21;18661:62;18719:2;18708:9;18704:18;18696:6;18661:62;:::i;:::-;18653:70;;;18732:55;18783:2;18772:9;18768:18;18760:6;18732:55;:::i;:::-;18796:63;18854:3;18843:9;18839:19;18831:6;18796:63;:::i;18870:669::-;;19241:3;19271:2;19260:9;19253:21;19291:62;19349:2;19338:9;19334:18;19326:6;19291:62;:::i;:::-;19283:70;;;19362:55;19413:2;19402:9;19398:18;19390:6;19362:55;:::i;:::-;19426:63;19484:3;19473:9;19469:19;19461:6;19426:63;:::i;:::-;19526:6;19520:3;19509:9;19505:19;19498:35;19221:318;;;;;;;:::o;19544:483::-;;19829:3;19818:9;19811:22;19850:63;19908:3;19897:9;19893:19;19885:6;19850:63;:::i;:::-;19842:71;;19922:56;19974:2;19963:9;19959:18;19951:6;19922:56;:::i;:::-;20014:6;20009:2;19998:9;19994:18;19987:34;19801:226;;;;;;:::o;20032:895::-;;20505:3;20535:2;20524:9;20517:21;20555:62;20613:2;20602:9;20598:18;20590:6;20555:62;:::i;:::-;20547:70;;;20653:6;20648:2;20637:9;20633:18;20626:34;20710:6;20703:14;20696:22;20691:2;20680:9;20676:18;20669:50;20728:55;20779:2;20768:9;20764:18;20756:6;20728:55;:::i;:::-;20792:63;20850:3;20839:9;20835:19;20827:6;20792:63;:::i;:::-;20864:57;20916:3;20905:9;20901:19;20893:6;20864:57;:::i;20932:187::-;21097:14;;21090:22;21072:41;;21060:2;21045:18;;21027:92::o;21124:329::-;21345:14;;21338:22;21320:41;;21392:2;21377:18;;21370:34;;;;21435:2;21420:18;;21413:34;21308:2;21293:18;;21275:178::o;21458:177::-;21604:25;;;21592:2;21577:18;;21559:76::o;22502:595::-;22805:25;;;22861:2;22846:18;;22839:34;;;;22904:2;22889:18;;22882:34;;;;22947:2;22932:18;;22925:34;;;;22990:3;22975:19;;22968:35;23034:3;23019:19;;23012:35;23078:3;23063:19;;23056:35;22792:3;22777:19;;22759:338::o;23102:541::-;23379:25;;;23435:2;23420:18;;23413:34;;;;23478:2;23463:18;;23456:34;;;;23521:2;23506:18;;23499:34;23577:14;23570:22;23564:3;23549:19;;23542:51;23624:3;23609:19;;23602:35;23366:3;23351:19;;23333:310::o;23648:385::-;23895:25;;;23883:2;23868:18;;23929:55;23980:2;23965:18;;23957:6;23929:55;:::i;:::-;24020:6;24015:2;24004:9;24000:18;23993:34;23850:183;;;;;;:::o;24038:457::-;24314:25;;;24301:3;24286:19;;24348:55;24399:2;24384:18;;24376:6;24348:55;:::i;:::-;24434:2;24419:18;;24412:34;;;;24477:2;24462:18;24455:34;24268:227;;-1:-1:-1;;24268:227:129:o;24500:574::-;;24797:3;24786:9;24782:19;24774:27;;24828:6;24817:9;24810:25;24844:62;24902:2;24891:9;24887:18;24878:6;24872:13;24844:62;:::i;:::-;24960:2;24948:15;;24942:22;24937:2;24922:18;;;24915:50;;;;25007:15;;;25001:22;24996:2;24981:18;;24974:50;25055:3;25040:19;25033:35;24764:310;;-1:-1:-1;24764:310:129:o;25079:603::-;;25220:2;25249;25238:9;25231:21;25281:6;25275:13;25324:6;25319:2;25308:9;25304:18;25297:34;25349:4;25362:140;25376:6;25373:1;25370:13;25362:140;;;25471:14;;;25467:23;;25461:30;25437:17;;;25456:2;25433:26;25426:66;25391:10;;25362:140;;;25520:6;25517:1;25514:13;25511:2;;;25590:4;25585:2;25576:6;25565:9;25561:22;25557:31;25550:45;25511:2;-1:-1:-1;25666:2:129;25645:15;-1:-1:-1;;25641:29:129;25626:45;;;;25673:2;25622:54;;25200:482;-1:-1:-1;;;25200:482:129:o;25687:462::-;25921:13;;25914:21;25907:29;25889:48;;25997:4;25985:17;;;25979:24;-1:-1:-1;;;;;25975:63:129;25953:20;;;25946:93;26099:4;26087:17;;;26081:24;-1:-1:-1;;;;;26077:65:129;26055:20;;;26048:95;;;;25877:2;25862:18;;25844:305::o;26154:452::-;26370:13;;26439:4;26424:20;;26417:28;26410:36;26392:55;;-1:-1:-1;;;;;26493:1:129;26489:17;;;26485:56;26478:4;26463:20;;26456:86;26584:3;26580:19;26573:4;26558:20;;26551:49;26341:2;26326:18;;26308:298::o;26611:844::-;26883:3;26868:19;;26896:46;26872:9;26924:6;26896:46;:::i;:::-;26951:64;27010:3;26999:9;26995:19;26986:6;26980:13;26951:64;:::i;:::-;27062:4;27054:6;27050:17;27044:24;27077:63;27135:3;27124:9;27120:19;27106:12;27077:63;:::i;:::-;;27195:4;27187:6;27183:17;27177:24;27171:3;27160:9;27156:19;27149:53;27257:4;27249:6;27245:17;27239:24;27233:3;27222:9;27218:19;27211:53;27319:4;27311:6;27307:17;27301:24;27295:3;27284:9;27280:19;27273:53;27381:3;27373:6;27369:16;27363:23;27357:3;27346:9;27342:19;27335:52;27442:4;27434:6;27430:17;27424:24;27418:3;27407:9;27403:19;27396:53;26850:605;;;;;:::o;27642:338::-;;27849:6;27838:9;27831:25;27892:2;27887;27876:9;27872:18;27865:30;27912:62;27970:2;27959:9;27955:18;27947:6;27912:62;:::i;27985:248::-;28159:25;;;28215:2;28200:18;;28193:34;28147:2;28132:18;;28114:119::o;28238:184::-;28410:4;28398:17;;;;28380:36;;28368:2;28353:18;;28335:87::o;28427:242::-;28497:2;28491:9;28527:17;;;28595:22;;;-1:-1:-1;;;;;28559:34:129;;28556:62;28553:2;;;28621:9;28553:2;28648;28641:22;28471:198;;-1:-1:-1;28471:198:129:o;28674:180::-;;-1:-1:-1;;;;;28759:30:129;;28756:2;;;28792:9;28756:2;-1:-1:-1;28843:4:129;28824:17;;;28820:28;;28746:108::o;28859:133::-;-1:-1:-1;;;;;28936:31:129;;28926:42;;28916:2;;28982:1;28979;28972:12", "language": "Solidity", "natspec": {"kind": "dev", "methods": {"DOMAIN_SEPARATOR()": {"details": "See {IERC20Permit-DOMAIN_SEPARATOR}."}, "_paramsAlpha()": {"notice": "Parameters of the ECLP pool"}, "allowance(address,address)": {"details": "Override to grant the Vault infinite allowance, causing for Pool Tokens to not require approval. This is sound as the Vault already provides authorization mechanisms when initiation token transfers, which this contract inherits."}, "approve(address,uint256)": {"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."}, "balanceOf(address)": {"details": "See {IERC20-balanceOf}."}, "changePauseManager(address)": {"notice": "Changes the account that is allowed to pause a pool."}, "decimals()": {"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."}, "decreaseAllowance(address,uint256)": {"details": "Override to allow decreasing allowance by more than the current amount (setting it to zero)"}, "dirtyUninitializedOracleSamples(uint256,uint256)": {"details": "Manually dirty oracle sample storage slots with dummy data, to reduce the gas cost of the future swaps that will initialize them. This function is only useful before the oracle has been fully initialized. `endIndex` is non-inclusive."}, "enableOracle()": {"details": "Balancer Governance can always enable the Oracle, even if it was originally not enabled. This allows for Pools that unexpectedly drive much more volume and liquidity than expected to serve as Price Oracles. Note that the Oracle can only be enabled - it can never be disabled."}, "getActionId(bytes4)": {"details": "Returns the action identifier associated with the external function described by `selector`."}, "getInvariant()": {"details": "Returns the current value of the invariant."}, "getLargestSafeQueryWindow()": {"details": "Returns largest time window that can be safely queried, where 'safely' means the Oracle is guaranteed to be able to produce a result and not revert. If a query has a non-zero `ago` value, then `secs + ago` (the oldest point in time) must be smaller than this value for 'safe' queries."}, "getLatest(uint8)": {"details": "Returns latest sample of `variable`. Prices are represented as 18 decimal fixed point values."}, "getPastAccumulators((uint8,uint256)[])": {"details": "Returns the accumulators corresponding to each of `queries`."}, "getPausedState()": {"details": "Returns the current contract pause status, as well as the end times of the Pause Window and Buffer Period."}, "getRate()": {"details": "This function returns the appreciation of one BPT relative to the underlying tokens. This starts at 1 when the pool is created and grows over time"}, "getSample(uint256)": {"details": "Returns the raw data of the sample at `index`."}, "getTimeWeightedAverage((uint8,uint256,uint256)[])": {"details": "Returns the time average weighted price corresponding to each of `queries`. Prices are represented as 18 decimal fixed point values."}, "getTotalSamples()": {"details": "Returns the total number of samples."}, "increaseAllowance(address,uint256)": {"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."}, "name()": {"details": "Returns the name of the token."}, "nonces(address)": {"details": "See {IERC20Permit-nonces}."}, "onExitPool(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Called by the Vault when a user calls `IVault.exitPool` to remove liquidity from this Pool. Returns how many tokens the Vault should deduct from the Pool's balances, as well as the amount of protocol fees the Pool owes to the Vault. The Vault will then take tokens from the Pool's balances and send them to `recipient`, as well as collect the reported amount in protocol fees, which the Pool should calculate based on `protocolSwapFeePercentage`. Protocol fees are charged on exit events to guarantee that users exiting the Pool have paid their share. `sender` is the account performing the exit (typically the pool shareholder), and `recipient` is the account to which the Vault will send the proceeds. `balances` contains the total token balances for each token the Pool registered in the Vault, in the same order that `IVault.getPoolTokens` would return. `lastChangeBlock` is the last block in which *any* of the Pool's registered tokens last changed its total balance. `userData` contains any pool-specific instructions needed to perform the calculations, such as the type of exit (e.g., proportional given an amount of pool shares, single-asset, multi-asset, etc.) Contracts implementing this function should check that the caller is indeed the Vault before performing any state-changing operations, such as burning pool shares."}, "onJoinPool(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Called by the Vault when a user calls `IVault.joinPool` to add liquidity to this Pool. Returns how many of each registered token the user should provide, as well as the amount of protocol fees the Pool owes to the Vault. The Vault will then take tokens from `sender` and add them to the Pool's balances, as well as collect the reported amount in protocol fees, which the pool should calculate based on `protocolSwapFeePercentage`. Protocol fees are reported and charged on join events so that the Pool is free of debt whenever new users join. `sender` is the account performing the join (from which tokens will be withdrawn), and `recipient` is the account designated to receive any benefits (typically pool shares). `balances` contains the total balances for each token the Pool registered in the Vault, in the same order that `IVault.getPoolTokens` would return. `lastChangeBlock` is the last block in which *any* of the Pool's registered tokens last changed its total balance. `userData` contains any pool-specific instructions needed to perform the calculations, such as the type of join (e.g., proportional given an amount of pool shares, single-asset, multi-asset, etc.) Contracts implementing this function should check that the caller is indeed the Vault before performing any state-changing operations, such as minting pool shares."}, "onSwap((uint8,address,address,uint256,bytes32,uint256,address,address,bytes),uint256,uint256)": {"details": "Returns the current value of the invariant."}, "pause()": {"notice": "Pauses the pool. Can only be called by the pause manager."}, "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {"details": "See {IERC20Permit-permit}."}, "queryExit(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Returns the amount of BPT that would be burned from `sender` if the `onExitPool` hook were called by the Vault with the same arguments, along with the number of tokens `recipient` would receive. This function is not meant to be called directly, but rather from a helper contract that fetches current Vault data, such as the protocol swap fee percentage and Pool balances. Like `IVault.queryBatchSwap`, this function is not view due to internal implementation details: the caller must explicitly use eth_call instead of eth_sendTransaction."}, "queryJoin(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Returns the amount of BPT that would be granted to `recipient` if the `onJoinPool` hook were called by the Vault with the same arguments, along with the number of tokens `sender` would have to supply. This function is not meant to be called directly, but rather from a helper contract that fetches current Vault data, such as the protocol swap fee percentage and Pool balances. Like `IVault.queryBatchSwap`, this function is not view due to internal implementation details: the caller must explicitly use eth_call instead of eth_sendTransaction."}, "symbol()": {"details": "Returns the symbol of the token, usually a shorter version of the name."}, "totalSupply()": {"details": "See {IERC20-totalSupply}."}, "transfer(address,uint256)": {"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."}, "transferFrom(address,address,uint256)": {"details": "Override to allow for 'infinite allowance' and let the token owner use `transferFrom` with no self-allowance"}, "unpause()": {"notice": "Unpauses the pool. Can only be called by the pause manager."}}, "version": 1}, "offset": [1388, 29833], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3DB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x74F3B009 GT PUSH2 0x20A JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xC4FEA7C9 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xDC09F3AA GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xDC09F3AA EQ PUSH2 0x799 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x7A1 JUMPI DUP1 PUSH4 0xDDB387C9 EQ PUSH2 0x7B4 JUMPI DUP1 PUSH4 0xF89F27ED EQ PUSH2 0x7BC JUMPI DUP1 PUSH4 0xFFD088EB EQ PUSH2 0x7C4 JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0xC4FEA7C9 EQ PUSH2 0x763 JUMPI DUP1 PUSH4 0xCE482387 EQ PUSH2 0x76B JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x773 JUMPI DUP1 PUSH4 0xD5C096C4 EQ PUSH2 0x786 JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0xB48B5B40 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0xB48B5B40 EQ PUSH2 0x743 JUMPI DUP1 PUSH4 0xBCC43692 EQ PUSH2 0x74B JUMPI DUP1 PUSH4 0xC0FF1A15 EQ PUSH2 0x753 JUMPI DUP1 PUSH4 0xC2C3BD6A EQ PUSH2 0x75B JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x70D JUMPI DUP1 PUSH4 0xAAABADC5 EQ PUSH2 0x720 JUMPI DUP1 PUSH4 0xABD13AFE EQ PUSH2 0x728 JUMPI DUP1 PUSH4 0xB10BE739 EQ PUSH2 0x730 JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0x851C1BB3 GT PUSH2 0x19D JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x16C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x6D7 JUMPI DUP1 PUSH4 0x9B02CDDE EQ PUSH2 0x6DF JUMPI DUP1 PUSH4 0x9D2C110C EQ PUSH2 0x6E7 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x6FA JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0x851C1BB3 EQ PUSH2 0x6A1 JUMPI DUP1 PUSH4 0x87EC6817 EQ PUSH2 0x6B4 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x6C7 JUMPI DUP1 PUSH4 0x8D928AF8 EQ PUSH2 0x6CF JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0x7EF355CD GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x7EF355CD EQ PUSH2 0x676 JUMPI DUP1 PUSH4 0x8002DF18 EQ PUSH2 0x67E JUMPI DUP1 PUSH4 0x8143EB76 EQ PUSH2 0x691 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x699 JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0x74F3B009 EQ PUSH2 0x619 JUMPI DUP1 PUSH4 0x76E54A46 EQ PUSH2 0x63A JUMPI DUP1 PUSH4 0x7BE219A2 EQ PUSH2 0x64D JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x663 JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0x38FFF2D0 GT PUSH2 0x2FA JUMPI DUP1 PUSH4 0x591A137F GT PUSH2 0x28D JUMPI DUP1 PUSH4 0x679AEFCE GT PUSH2 0x25C JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x5D6 JUMPI DUP1 PUSH4 0x6B843239 EQ PUSH2 0x5DE JUMPI DUP1 PUSH4 0x6D785A87 EQ PUSH2 0x5FE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x606 JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0x591A137F EQ PUSH2 0x57F JUMPI DUP1 PUSH4 0x6028BFD4 EQ PUSH2 0x587 JUMPI DUP1 PUSH4 0x60D1507C EQ PUSH2 0x5A8 JUMPI DUP1 PUSH4 0x66E9DDF4 EQ PUSH2 0x5CE JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0x44BBDB55 GT PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x44BBDB55 EQ PUSH2 0x540 JUMPI DUP1 PUSH4 0x4A6B0B15 EQ PUSH2 0x555 JUMPI DUP1 PUSH4 0x55C67628 EQ PUSH2 0x56F JUMPI DUP1 PUSH4 0x58ECBCC3 EQ PUSH2 0x577 JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0x38FFF2D0 EQ PUSH2 0x508 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x510 JUMPI DUP1 PUSH4 0x3AEAE0D3 EQ PUSH2 0x523 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x538 JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0x1DCCD830 GT PUSH2 0x372 JUMPI DUP1 PUSH4 0x313CE567 GT PUSH2 0x341 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x4C5 JUMPI DUP1 PUSH4 0x3331BC36 EQ PUSH2 0x4DA JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x4ED JUMPI DUP1 PUSH4 0x38E9922E EQ PUSH2 0x4F5 JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0x1DCCD830 EQ PUSH2 0x482 JUMPI DUP1 PUSH4 0x2024CF41 EQ PUSH2 0x4A2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x4AA JUMPI DUP1 PUSH4 0x292C914A EQ PUSH2 0x4BD JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0x16C38B3C GT PUSH2 0x3AE JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0x1C0DE051 EQ PUSH2 0x463 JUMPI DUP1 PUSH4 0x1D86BB99 EQ PUSH2 0x47A JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x3E0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0xE608B30 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x1469ED6C EQ PUSH2 0x433 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3E8 PUSH2 0x7CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x5D61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x411 PUSH2 0x40C CALLDATASIZE PUSH1 0x4 PUSH2 0x5415 JUMP JUMPDEST PUSH2 0x862 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x5C5A JUMP JUMPDEST PUSH2 0x431 PUSH2 0x42C CALLDATASIZE PUSH1 0x4 PUSH2 0x52F0 JUMP JUMPDEST PUSH2 0x879 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x43B PUSH2 0x92A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x5C7D JUMP JUMPDEST PUSH2 0x431 PUSH2 0x456 CALLDATASIZE PUSH1 0x4 PUSH2 0x56A5 JUMP JUMPDEST PUSH2 0x94E JUMP JUMPDEST PUSH2 0x43B PUSH2 0x962 JUMP JUMPDEST PUSH2 0x46B PUSH2 0x968 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5C65 JUMP JUMPDEST PUSH2 0x43B PUSH2 0x991 JUMP JUMPDEST PUSH2 0x495 PUSH2 0x490 CALLDATASIZE PUSH1 0x4 PUSH2 0x55D9 JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x5B29 JUMP JUMPDEST PUSH2 0x43B PUSH2 0xAD8 JUMP JUMPDEST PUSH2 0x411 PUSH2 0x4B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x5360 JUMP JUMPDEST PUSH2 0xAFC JUMP JUMPDEST PUSH2 0x431 PUSH2 0xB72 JUMP JUMPDEST PUSH2 0x4CD PUSH2 0xBA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x5EA9 JUMP JUMPDEST PUSH2 0x431 PUSH2 0x4E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x59C4 JUMP JUMPDEST PUSH2 0xBAF JUMP JUMPDEST PUSH2 0x43B PUSH2 0xC27 JUMP JUMPDEST PUSH2 0x431 PUSH2 0x503 CALLDATASIZE PUSH1 0x4 PUSH2 0x59AC JUMP JUMPDEST PUSH2 0xC36 JUMP JUMPDEST PUSH2 0x43B PUSH2 0xC4F JUMP JUMPDEST PUSH2 0x411 PUSH2 0x51E CALLDATASIZE PUSH1 0x4 PUSH2 0x5415 JUMP JUMPDEST PUSH2 0xC73 JUMP JUMPDEST PUSH2 0x52B PUSH2 0xCAE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x5DB4 JUMP JUMPDEST PUSH2 0x431 PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0x548 PUSH2 0xDEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x5AD1 JUMP JUMPDEST PUSH2 0x55D PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F5 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5CB6 JUMP JUMPDEST PUSH2 0x43B PUSH2 0xE58 JUMP JUMPDEST PUSH2 0x43B PUSH2 0xE65 JUMP JUMPDEST PUSH2 0x43B PUSH2 0xE89 JUMP JUMPDEST PUSH2 0x59A PUSH2 0x595 CALLDATASIZE PUSH1 0x4 PUSH2 0x56BF JUMP JUMPDEST PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F5 SWAP3 SWAP2 SWAP1 PUSH2 0x5E82 JUMP JUMPDEST PUSH2 0x5BB PUSH2 0x5B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x59AC JUMP JUMPDEST PUSH2 0xEDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F5 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5C86 JUMP JUMPDEST PUSH2 0x43B PUSH2 0xF27 JUMP JUMPDEST PUSH2 0x43B PUSH2 0xF4B JUMP JUMPDEST PUSH2 0x5F1 PUSH2 0x5EC CALLDATASIZE PUSH1 0x4 PUSH2 0x550B JUMP JUMPDEST PUSH2 0xF70 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x5AE5 JUMP JUMPDEST PUSH2 0x548 PUSH2 0x1026 JUMP JUMPDEST PUSH2 0x43B PUSH2 0x614 CALLDATASIZE PUSH1 0x4 PUSH2 0x52F0 JUMP JUMPDEST PUSH2 0x1035 JUMP JUMPDEST PUSH2 0x62C PUSH2 0x627 CALLDATASIZE PUSH1 0x4 PUSH2 0x56BF JUMP JUMPDEST PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F5 SWAP3 SWAP2 SWAP1 PUSH2 0x5B3C JUMP JUMPDEST PUSH2 0x431 PUSH2 0x648 CALLDATASIZE PUSH1 0x4 PUSH2 0x5838 JUMP JUMPDEST PUSH2 0x10F9 JUMP JUMPDEST PUSH2 0x655 PUSH2 0x1220 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F5 SWAP3 SWAP2 SWAP1 PUSH2 0x5E14 JUMP JUMPDEST PUSH2 0x43B PUSH2 0x671 CALLDATASIZE PUSH1 0x4 PUSH2 0x52F0 JUMP JUMPDEST PUSH2 0x1240 JUMP JUMPDEST PUSH2 0x43B PUSH2 0x125B JUMP JUMPDEST PUSH2 0x431 PUSH2 0x68C CALLDATASIZE PUSH1 0x4 PUSH2 0x52F0 JUMP JUMPDEST PUSH2 0x127F JUMP JUMPDEST PUSH2 0x43B PUSH2 0x1365 JUMP JUMPDEST PUSH2 0x431 PUSH2 0x1389 JUMP JUMPDEST PUSH2 0x43B PUSH2 0x6AF CALLDATASIZE PUSH1 0x4 PUSH2 0x57BB JUMP JUMPDEST PUSH2 0x1441 JUMP JUMPDEST PUSH2 0x59A PUSH2 0x6C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x56BF JUMP JUMPDEST PUSH2 0x149A JUMP JUMPDEST PUSH2 0x548 PUSH2 0x14BF JUMP JUMPDEST PUSH2 0x548 PUSH2 0x14E3 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x1507 JUMP JUMPDEST PUSH2 0x43B PUSH2 0x1568 JUMP JUMPDEST PUSH2 0x43B PUSH2 0x6F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x58B6 JUMP JUMPDEST PUSH2 0x156E JUMP JUMPDEST PUSH2 0x411 PUSH2 0x708 CALLDATASIZE PUSH1 0x4 PUSH2 0x5415 JUMP JUMPDEST PUSH2 0x1923 JUMP JUMPDEST PUSH2 0x411 PUSH2 0x71B CALLDATASIZE PUSH1 0x4 PUSH2 0x5415 JUMP JUMPDEST PUSH2 0x1961 JUMP JUMPDEST PUSH2 0x548 PUSH2 0x196E JUMP JUMPDEST PUSH2 0x548 PUSH2 0x1978 JUMP JUMPDEST PUSH2 0x43B PUSH2 0x73E CALLDATASIZE PUSH1 0x4 PUSH2 0x57E3 JUMP JUMPDEST PUSH2 0x1987 JUMP JUMPDEST PUSH2 0x43B PUSH2 0x1A1C JUMP JUMPDEST PUSH2 0x43B PUSH2 0x1A22 JUMP JUMPDEST PUSH2 0x43B PUSH2 0x1A46 JUMP JUMPDEST PUSH2 0x43B PUSH2 0x1B01 JUMP JUMPDEST PUSH2 0x43B PUSH2 0x1B25 JUMP JUMPDEST PUSH2 0x43B PUSH2 0x1B49 JUMP JUMPDEST PUSH2 0x431 PUSH2 0x781 CALLDATASIZE PUSH1 0x4 PUSH2 0x53A0 JUMP JUMPDEST PUSH2 0x1B6D JUMP JUMPDEST PUSH2 0x62C PUSH2 0x794 CALLDATASIZE PUSH1 0x4 PUSH2 0x56BF JUMP JUMPDEST PUSH2 0x1CDD JUMP JUMPDEST PUSH2 0x43B PUSH2 0x1DFD JUMP JUMPDEST PUSH2 0x43B PUSH2 0x7AF CALLDATASIZE PUSH1 0x4 PUSH2 0x5328 JUMP JUMPDEST PUSH2 0x1E21 JUMP JUMPDEST PUSH2 0x43B PUSH2 0x1E5E JUMP JUMPDEST PUSH2 0x495 PUSH2 0x1E82 JUMP JUMPDEST PUSH2 0x43B PUSH2 0x1E8C JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x858 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x82D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x858 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x83B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86F CALLER DUP5 DUP5 PUSH2 0x2051 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x1B9BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CA SWAP2 SWAP1 PUSH2 0x5D61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xB8FD9AFC34C38FCD13B9A3B7646482EB1FDDCEFB40AF2C70609972816EBA3208 SWAP1 PUSH2 0x91F SWAP1 DUP4 SWAP1 PUSH2 0x5AD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x956 PUSH2 0x20B3 JUMP JUMPDEST PUSH2 0x95F DUP2 PUSH2 0x20E1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x975 PUSH2 0x215D JUMP JUMPDEST ISZERO SWAP3 POP PUSH2 0x980 PUSH2 0x217A JUMP JUMPDEST SWAP2 POP PUSH2 0x98A PUSH2 0x219E JUMP JUMPDEST SWAP1 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x9CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9F8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH2 0xA05 PUSH2 0x21C2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xAD1 JUMPI PUSH20 0x0 PUSH4 0x79EAEF82 PUSH1 0x8 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xA3B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA62 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5D28 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0xA8E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAB2 SWAP2 SWAP1 PUSH2 0x57FD JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xABE JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0xA0A JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB09 DUP6 CALLER PUSH2 0x1E21 JUMP JUMPDEST SWAP1 POP PUSH2 0xB2D CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND EQ DUP1 PUSH2 0xB25 JUMPI POP DUP4 DUP3 LT ISZERO JUMPDEST PUSH2 0x19E PUSH2 0x21CF JUMP JUMPDEST PUSH2 0xB38 DUP6 DUP6 DUP6 PUSH2 0x21DD JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ DUP1 ISZERO SWAP1 PUSH2 0xB53 JUMPI POP PUSH1 0x0 NOT DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0xB65 JUMPI PUSH2 0xB65 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x2051 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB7A PUSH2 0x22C5 JUMP JUMPDEST PUSH2 0xB82 PUSH2 0x20B3 JUMP JUMPDEST PUSH2 0xB8C PUSH1 0x1 PUSH2 0x22D8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB96 PUSH2 0x962 JUMP JUMPDEST GT ISZERO PUSH2 0xBA4 JUMPI PUSH2 0xBA4 PUSH2 0x2318 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xBCA DUP2 DUP4 LT DUP1 ISZERO PUSH2 0xBC3 JUMPI POP PUSH2 0x400 DUP3 GT ISZERO JUMPDEST PUSH1 0x64 PUSH2 0x21CF JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBDF PUSH1 0x1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x2360 JUMP JUMPDEST SWAP1 POP DUP3 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xC21 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC03 SWAP1 PUSH2 0x23C2 JUMP JUMPDEST PUSH2 0xC19 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE JUMPDEST PUSH1 0x1 ADD PUSH2 0xBE3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC31 PUSH2 0x23CE JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC3E PUSH2 0x20B3 JUMP JUMPDEST PUSH2 0xC46 PUSH2 0x22C5 JUMP JUMPDEST PUSH2 0x95F DUP2 PUSH2 0x248C JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x86F SWAP2 DUP6 SWAP1 PUSH2 0xCA9 SWAP1 DUP7 PUSH2 0x24F5 JUMP JUMPDEST PUSH2 0x2051 JUMP JUMPDEST PUSH2 0xCB6 PUSH2 0x511E JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0xB SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP3 MSTORE PUSH2 0x100 DUP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x3737BA103830BAB9B29036B0B730B3B2B9 PUSH1 0x79 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDB8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD7D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD65 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xDAA JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0xDC3 PUSH1 0x0 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x215385C8BFC731925EC8068D7BAA50F6B6F34417CC7804F7273DC2C0B3DB2790 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x9 SLOAD SWAP1 POP PUSH2 0xE16 DUP2 PUSH2 0x2507 JUMP JUMPDEST SWAP7 POP PUSH2 0xE21 DUP2 PUSH2 0x2513 JUMP JUMPDEST SWAP6 POP PUSH2 0xE2C DUP2 PUSH2 0x2520 JUMP JUMPDEST SWAP5 POP PUSH2 0xE37 DUP2 PUSH2 0x252D JUMP JUMPDEST SWAP4 POP PUSH2 0xE42 DUP2 PUSH2 0x253A JUMP JUMPDEST SWAP3 POP PUSH2 0xE4D DUP2 PUSH2 0x2547 JUMP JUMPDEST SWAP2 POP POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC31 PUSH1 0x9 SLOAD PUSH2 0x2547 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0xEBD DUP7 MLOAD PUSH1 0x2 PUSH2 0x2554 JUMP JUMPDEST PUSH2 0xED2 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x2561 PUSH2 0x26DC PUSH2 0x275A JUMP JUMPDEST SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xEF9 PUSH2 0x400 DUP10 LT PUSH2 0x13B PUSH2 0x21CF JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF04 DUP10 PUSH2 0x286D JUMP JUMPDEST SWAP1 POP PUSH2 0xF0F DUP2 PUSH2 0x287F JUMP JUMPDEST SWAP6 SWAP16 SWAP5 SWAP15 POP SWAP3 SWAP13 POP SWAP1 SWAP11 POP SWAP9 POP SWAP7 POP SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC31 PUSH2 0xF58 PUSH2 0x962 JUMP JUMPDEST PUSH2 0xF6A PUSH2 0xF63 PUSH2 0x1A46 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x28E2 JUMP JUMPDEST SWAP1 PUSH2 0x2906 JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0xF89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFB3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH2 0xFC0 PUSH2 0x21C2 JUMP JUMPDEST SWAP1 POP PUSH2 0xFCA PUSH2 0x513E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x101E JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xFE2 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP PUSH2 0xFFF DUP3 PUSH1 0x0 ADD MLOAD DUP5 DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x2960 JUMP JUMPDEST DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x100B JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0xFCD JUMP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP9 PUSH2 0x107E PUSH2 0x1063 PUSH2 0x14E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH1 0xCD PUSH2 0x21CF JUMP JUMPDEST PUSH2 0x1093 PUSH2 0x1089 PUSH2 0xC4F JUMP JUMPDEST DUP3 EQ PUSH2 0x1F4 PUSH2 0x21CF JUMP JUMPDEST PUSH2 0x109C DUP8 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x10B0 DUP14 DUP14 DUP14 DUP14 DUP14 DUP14 DUP14 PUSH2 0x2561 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x10C0 DUP13 DUP5 PUSH2 0x2A5B JUMP JUMPDEST PUSH2 0x10C9 DUP3 PUSH2 0x26DC JUMP JUMPDEST PUSH2 0x10D2 DUP2 PUSH2 0x26DC JUMP JUMPDEST PUSH2 0x10DA PUSH2 0x215D JUMP JUMPDEST ISZERO PUSH2 0x10E7 JUMPI PUSH2 0x10E7 PUSH2 0x2318 JUMP JUMPDEST SWAP1 SWAP13 SWAP1 SWAP12 POP SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x1B9BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x114A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CA SWAP2 SWAP1 PUSH2 0x5D61 JUMP JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH16 0x1C1BDBDB081A5CC81D5B98D85C1C1959 PUSH1 0x82 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x1196 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CA SWAP2 SWAP1 PUSH2 0x5D61 JUMP JUMPDEST POP DUP1 MLOAD PUSH1 0xB DUP1 SLOAD PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP1 DUP7 ADD MLOAD PUSH1 0xFF NOT SWAP1 SWAP4 AND SWAP5 ISZERO ISZERO SWAP5 SWAP1 SWAP5 OR PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL OR PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x80 SHL SWAP2 SWAP1 SWAP3 AND MUL OR DUP2 SSTORE SWAP1 MLOAD PUSH32 0x2ABF5970D7BC1A2B36EAAE52DD2CC353EDB0337C7284EF8A01973081B4E04424 SWAP2 PUSH2 0x91F SWAP2 PUSH2 0x5DE9 JUMP JUMPDEST PUSH2 0x1228 PUSH2 0x5155 JUMP JUMPDEST PUSH2 0x1230 PUSH2 0x5184 JUMP JUMPDEST PUSH2 0x1238 PUSH2 0x2A65 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x3737BA103830BAB9B29036B0B730B3B2B9 PUSH1 0x79 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLER DUP3 EQ PUSH2 0x1304 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0xD7D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD65 JUMP JUMPDEST POP PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 DUP5 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD PUSH32 0x1FFCCD1FA96F4FB3415DF8048A0FD107344E262D2D246C85105E2A3F8F3E8198 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x3737BA103830BAB9B29036B0B730B3B2B9 PUSH1 0x79 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x140B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0xD7D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD65 JUMP JUMPDEST POP PUSH2 0x1416 PUSH1 0x1 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x681EACE576127D0553B224436A09801FB47D042942CBFF59D7D4FF04D8FA03D7 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x0 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP5 AND DUP3 DUP5 ADD MSTORE DUP3 MLOAD PUSH1 0x24 DUP2 DUP5 SUB ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x14AA DUP7 MLOAD PUSH1 0x2 PUSH2 0x2554 JUMP JUMPDEST PUSH2 0xED2 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x2C9B PUSH2 0x2E17 PUSH2 0x275A JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x858 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x82D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x858 JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1578 PUSH2 0x22C5 JUMP JUMPDEST DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0x1588 PUSH2 0x1063 PUSH2 0x14E3 JUMP JUMPDEST PUSH2 0x1593 PUSH2 0x1089 PUSH2 0xC4F JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x160F JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST ISZERO PUSH2 0x161C JUMPI POP PUSH1 0x1 PUSH2 0x16AD JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x1696 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST ISZERO PUSH2 0x16A3 JUMPI POP PUSH1 0x0 PUSH2 0x16AD JUMP JUMPDEST PUSH2 0x16AD PUSH1 0x79 PUSH2 0x2E79 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16B8 DUP3 PUSH2 0x2ECC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x16C6 DUP4 ISZERO PUSH2 0x2ECC JUMP JUMPDEST SWAP1 POP PUSH2 0x16D2 DUP8 DUP4 PUSH2 0x2F20 JUMP JUMPDEST SWAP7 POP PUSH2 0x16DE DUP7 DUP3 PUSH2 0x2F20 JUMP JUMPDEST SWAP6 POP PUSH1 0x0 PUSH2 0x16ED DUP9 DUP9 DUP7 PUSH2 0x2F2C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x16FA PUSH2 0x2A65 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1706 PUSH2 0x51CD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0x0 PUSH4 0x78ACE857 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1744 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5B6A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x175B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x176F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1793 SWAP2 SWAP1 PUSH2 0x5815 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0x2 MUL DUP5 ADD DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP3 POP PUSH2 0x17CC DUP15 PUSH1 0xA0 ADD MLOAD DUP8 PUSH2 0x17C5 DUP6 PUSH2 0x2FC6 JUMP JUMPDEST DUP9 DUP9 PUSH2 0x3021 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP DUP13 MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x17DE JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x188A JUMPI PUSH1 0x0 PUSH2 0x17FC PUSH2 0x17F1 PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x60 DUP16 ADD MLOAD SWAP1 PUSH2 0x3199 JUMP JUMPDEST SWAP1 POP PUSH2 0x181E PUSH2 0x1818 DUP3 DUP16 PUSH1 0x60 ADD MLOAD PUSH2 0x31EE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP9 PUSH2 0x2F20 JUMP JUMPDEST PUSH1 0x60 DUP15 ADD MSTORE PUSH1 0x0 PUSH2 0x1833 DUP15 DUP8 DUP12 DUP9 DUP9 DUP9 PUSH2 0x3204 JUMP JUMPDEST SWAP1 POP PUSH32 0x4E1D56F7310A8C32B2267F756B19BA65019B4890068CE114A25009ABE54DE5BA DUP7 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1868 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5BDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x187A DUP2 DUP9 PUSH2 0x329C JUMP JUMPDEST SWAP11 POP POP POP POP POP POP POP POP POP POP PUSH2 0x191B JUMP JUMPDEST PUSH2 0x1898 DUP13 PUSH1 0x60 ADD MLOAD DUP7 PUSH2 0x2F20 JUMP JUMPDEST PUSH1 0x60 DUP14 ADD MSTORE PUSH1 0x0 PUSH2 0x18AD DUP14 DUP7 DUP11 DUP8 DUP8 DUP8 PUSH2 0x32A8 JUMP JUMPDEST SWAP1 POP PUSH32 0x4E1D56F7310A8C32B2267F756B19BA65019B4890068CE114A25009ABE54DE5BA DUP6 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x18E2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5BDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x18F4 DUP2 DUP9 PUSH2 0x32F0 JUMP JUMPDEST SWAP1 POP PUSH2 0x1910 PUSH2 0x1909 PUSH2 0x1904 PUSH2 0xE58 JUMP JUMPDEST PUSH2 0x32FC JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x3322 JUMP JUMPDEST SWAP10 POP POP POP POP POP POP POP POP POP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1930 CALLER DUP6 PUSH2 0x1E21 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 LT PUSH2 0x194A JUMPI PUSH2 0x1945 CALLER DUP6 PUSH1 0x0 PUSH2 0x2051 JUMP JUMPDEST PUSH2 0x1957 JUMP JUMPDEST PUSH2 0x1957 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x2051 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86F CALLER DUP5 DUP5 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC31 PUSH2 0x3388 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0x397BEE0 PUSH1 0x8 DUP5 PUSH2 0x19AE PUSH2 0x21C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19CC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5CE0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x19F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x873 SWAP2 SWAP1 PUSH2 0x57FD JUMP JUMPDEST PUSH2 0x400 SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A51 PUSH2 0x14E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF94D4668 PUSH2 0x1A67 PUSH2 0xC4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A83 SWAP2 SWAP1 PUSH2 0x5C7D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AAF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1AD7 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x5440 JUMP JUMPDEST POP SWAP2 POP POP PUSH2 0x1AE4 DUP2 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AEE PUSH2 0x3402 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AFA DUP2 DUP4 PUSH2 0x3471 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1B7B DUP5 TIMESTAMP GT ISZERO PUSH1 0xD1 PUSH2 0x21CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD PUSH32 0x0 DUP2 DUP6 ADD MSTORE DUP1 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP5 DUP12 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD DUP11 SWAP1 MSTORE PUSH1 0xA0 DUP5 ADD DUP6 SWAP1 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP11 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 SWAP1 SWAP5 ADD SWAP1 MSTORE DUP3 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP1 PUSH2 0x1C07 DUP3 PUSH2 0x34E3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C65 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP PUSH2 0x1CA7 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1C9F JUMPI POP DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1F8 PUSH2 0x21CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP6 ADD SWAP1 SSTORE PUSH2 0x1CD0 DUP12 DUP12 DUP12 PUSH2 0x2051 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP9 PUSH2 0x1CEC PUSH2 0x1063 PUSH2 0x14E3 JUMP JUMPDEST PUSH2 0x1CF7 PUSH2 0x1089 PUSH2 0xC4F JUMP JUMPDEST PUSH2 0x1CFF PUSH2 0x22C5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D09 PUSH2 0x962 JUMP JUMPDEST PUSH2 0x1D79 JUMPI PUSH2 0x1D19 DUP12 DUP12 DUP12 DUP9 PUSH2 0x352F JUMP JUMPDEST SWAP5 POP SWAP1 POP PUSH2 0x1D2E PUSH3 0xF4240 DUP3 LT ISZERO PUSH1 0xCC PUSH2 0x21CF JUMP JUMPDEST PUSH2 0x1D3C PUSH1 0x0 PUSH3 0xF4240 PUSH2 0x3674 JUMP JUMPDEST PUSH2 0x1D4B DUP10 PUSH3 0xF4240 DUP4 SUB PUSH2 0x3674 JUMP JUMPDEST PUSH2 0x1D54 DUP5 PUSH2 0x2E17 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE SWAP1 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP3 POP PUSH2 0x1DE7 JUMP JUMPDEST PUSH2 0x1D82 DUP9 PUSH2 0x29F9 JUMP JUMPDEST PUSH2 0x1DB5 DUP8 DUP10 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1D93 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP11 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1DA8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1F79 JUMP JUMPDEST PUSH2 0x1DC4 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH2 0x2C9B JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP SWAP1 POP PUSH2 0x1DD5 DUP10 DUP3 PUSH2 0x3674 JUMP JUMPDEST PUSH2 0x1DDE DUP5 PUSH2 0x2E17 JUMP JUMPDEST PUSH2 0x1DE7 DUP4 PUSH2 0x26DC JUMP JUMPDEST PUSH2 0x1DEF PUSH2 0x2318 JUMP JUMPDEST POP POP SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E2B PUSH2 0x14E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1E4D JUMPI POP PUSH1 0x0 NOT PUSH2 0x873 JUMP JUMPDEST PUSH2 0x1E57 DUP4 DUP4 PUSH2 0x367E JUMP JUMPDEST SWAP1 POP PUSH2 0x873 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC31 PUSH2 0x3402 JUMP JUMPDEST PUSH3 0x1DE20 SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x1E9D DUP2 PUSH2 0x36A9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1ECD DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0x0 SGT ISZERO DUP1 ISZERO PUSH2 0x1EC5 JUMPI POP PUSH8 0xDE0B6B3A7640000 DUP3 PUSH1 0x60 ADD MLOAD SGT ISZERO JUMPDEST PUSH2 0x163 PUSH2 0x3722 JUMP JUMPDEST PUSH2 0x1EF8 DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x0 SGT ISZERO DUP1 ISZERO PUSH2 0x1EC5 JUMPI POP PUSH8 0xDE0B6B3A7640000 DUP3 PUSH1 0x40 ADD MLOAD SGT ISZERO PUSH2 0x163 PUSH2 0x3722 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x60 DUP4 ADD MLOAD DUP2 MSTORE SWAP1 DUP3 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1F1D DUP3 DUP1 PUSH2 0x3730 JUMP JUMPDEST SWAP1 POP PUSH2 0x1F4A PUSH8 0xDE0B6B3A763FC18 DUP3 SLT DUP1 ISZERO SWAP1 PUSH2 0x1F42 JUMPI POP PUSH8 0xDE0B6B3A76403E8 DUP3 SGT ISZERO JUMPDEST PUSH2 0x164 PUSH2 0x3722 JUMP JUMPDEST PUSH2 0x1F79 DUP4 PUSH1 0x80 ADD MLOAD PUSH1 0x0 SGT ISZERO DUP1 ISZERO PUSH2 0x1F71 JUMPI POP PUSH11 0x52B7D2DCC80CD2E4000000 DUP5 PUSH1 0x80 ADD MLOAD SGT ISZERO JUMPDEST PUSH2 0x168 PUSH2 0x3722 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6B DUP4 DUP4 PUSH1 0x55 PUSH2 0x1FB0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6B DUP4 DUP4 PUSH1 0x56 PUSH2 0x1FD7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FAA DUP4 DUP4 GT ISZERO PUSH1 0x1 PUSH2 0x21CF JUMP JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 SHL NOT DUP5 AND DUP3 DUP5 PUSH2 0x1FC6 JUMPI PUSH1 0x0 PUSH2 0x1FC9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND SWAP1 SHL OR SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 SHL NOT SWAP3 SWAP1 SWAP3 AND SWAP2 SHL OR SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL DUP4 ISZERO DUP1 PUSH2 0x2006 JUMPI POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x2003 JUMPI INVALID JUMPDEST SDIV EQ JUMPDEST PUSH2 0x2016 JUMPI PUSH2 0x2016 PUSH1 0x0 PUSH1 0x3 PUSH2 0x21CF JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 SDIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP2 DUP4 SLT ISZERO PUSH2 0x203D JUMPI DUP4 DUP2 SLT PUSH2 0x2042 JUMP JUMPDEST DUP4 DUP2 SLT ISZERO JUMPDEST PUSH2 0xB6B JUMPI PUSH2 0xB6B PUSH1 0x0 DUP1 PUSH2 0x21CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20CA PUSH1 0x0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x1441 JUMP JUMPDEST SWAP1 POP PUSH2 0x95F PUSH2 0x20D9 DUP3 CALLER PUSH2 0x3763 JUMP JUMPDEST PUSH2 0x191 PUSH2 0x21CF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2101 JUMPI PUSH2 0x20FC PUSH2 0x20F2 PUSH2 0x217A JUMP JUMPDEST TIMESTAMP LT PUSH2 0x193 PUSH2 0x21CF JUMP JUMPDEST PUSH2 0x2116 JUMP JUMPDEST PUSH2 0x2116 PUSH2 0x210C PUSH2 0x219E JUMP JUMPDEST TIMESTAMP LT PUSH2 0x1A9 PUSH2 0x21CF JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH32 0x9E3A5E37224532DEA67B89FACE185703738A228A6E8A23DEE546960180D3BE64 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2167 PUSH2 0x219E JUMP JUMPDEST TIMESTAMP GT DUP1 PUSH2 0xC31 JUMPI POP POP PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC31 PUSH1 0x9 SLOAD PUSH2 0x252D JUMP JUMPDEST DUP2 PUSH2 0x1E9D JUMPI PUSH2 0x1E9D DUP2 PUSH2 0x2E79 JUMP JUMPDEST PUSH2 0x21F4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO ISZERO PUSH2 0x198 PUSH2 0x21CF JUMP JUMPDEST PUSH2 0x220B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x199 PUSH2 0x21CF JUMP JUMPDEST PUSH2 0x2216 DUP4 DUP4 DUP4 PUSH2 0x1F79 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x223C SWAP1 DUP3 PUSH2 0x1A0 PUSH2 0x3865 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x226B SWAP1 DUP3 PUSH2 0x24F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xBA4 PUSH2 0x22D0 PUSH2 0x215D JUMP JUMPDEST PUSH2 0x192 PUSH2 0x21CF JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x22E5 SWAP1 DUP3 PUSH2 0x1F7E JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD PUSH32 0x3E350B41E86A8E10F804ADE6D35340D620BE35569CC75AC943E8BB14AB80EAD1 SWAP1 PUSH2 0x91F SWAP1 DUP4 SWAP1 PUSH2 0x5C5A JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x2324 DUP2 PUSH2 0x253A JUMP JUMPDEST ISZERO PUSH2 0x95F JUMPI PUSH2 0x233E PUSH2 0x2337 PUSH1 0xA SLOAD PUSH2 0x387B JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x38BB JUMP JUMPDEST SWAP1 POP PUSH2 0x235A PUSH2 0x2353 PUSH2 0x234E PUSH2 0x962 JUMP JUMPDEST PUSH2 0x387B JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x38C8 JUMP JUMPDEST PUSH1 0x9 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x236C DUP3 DUP3 PUSH2 0x38D6 JUMP JUMPDEST PUSH2 0x2377 DUP5 PUSH1 0x1F PUSH2 0x38DA JUMP JUMPDEST PUSH2 0x2382 DUP7 PUSH1 0x54 PUSH2 0x38EB JUMP JUMPDEST PUSH2 0x238D DUP9 PUSH1 0x6A PUSH2 0x38DA JUMP JUMPDEST PUSH2 0x2398 DUP11 PUSH1 0x9F PUSH2 0x38EB JUMP JUMPDEST PUSH2 0x23A3 DUP13 PUSH1 0xB5 PUSH2 0x38DA JUMP JUMPDEST PUSH2 0x23AE DUP15 PUSH1 0xEA PUSH2 0x38EB JUMP JUMPDEST OR OR OR OR OR OR SWAP1 POP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x873 DUP3 DUP3 PUSH2 0x38F8 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x243B PUSH2 0x3902 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x249F PUSH5 0xE8D4A51000 DUP3 LT ISZERO PUSH1 0xCB PUSH2 0x21CF JUMP JUMPDEST PUSH2 0x24B5 PUSH8 0x16345785D8A0000 DUP3 GT ISZERO PUSH1 0xCA PUSH2 0x21CF JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x24C2 SWAP1 DUP3 PUSH2 0x1F8C JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD PUSH32 0xA9BA3FFE0B6C366B81232CAAB38605A0699AD5398D6CCE76F91EE809E322DAFC SWAP1 PUSH2 0x91F SWAP1 DUP4 SWAP1 PUSH2 0x5C7D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH2 0xB6B DUP5 DUP3 LT ISZERO DUP4 PUSH2 0x21CF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x873 DUP3 DUP3 PUSH2 0x3906 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x873 DUP3 PUSH1 0x16 PUSH2 0x3906 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x873 DUP3 PUSH1 0x2C PUSH2 0x38F8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x873 DUP3 PUSH1 0x4B PUSH2 0x392D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x873 DUP3 PUSH1 0x55 PUSH2 0x3935 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x873 DUP3 PUSH1 0x56 PUSH2 0x393F JUMP JUMPDEST PUSH2 0x1E9D DUP2 DUP4 EQ PUSH1 0x67 PUSH2 0x21CF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH2 0x2571 PUSH2 0x2A65 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x257D PUSH2 0x215D JUMP JUMPDEST ISZERO PUSH2 0x268F JUMPI PUSH1 0x40 MLOAD PUSH4 0x6C1E5431 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0xD83CA862 SWAP1 PUSH2 0x25C0 SWAP1 DUP14 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x5B6A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x25D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x25EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2610 SWAP2 SWAP1 PUSH2 0x57FD JUMP JUMPDEST SWAP1 POP PUSH2 0x261F DUP10 DUP12 DUP4 DUP7 DUP7 PUSH2 0x3021 JUMP JUMPDEST PUSH2 0x2628 DUP2 PUSH2 0x394C JUMP JUMPDEST PUSH2 0x2632 DUP11 DUP9 PUSH2 0x3979 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH2 0x264B DUP2 DUP8 PUSH2 0x2644 PUSH2 0x962 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39C5 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xE1D39CAF039C7DC6F364B1E29D1E67C4E330003A43F4991D50CF3E8840D95EAC SWAP2 PUSH2 0x2681 SWAP2 DUP5 SWAP2 SWAP1 PUSH2 0x5E9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0x26A5 JUMP JUMPDEST PUSH2 0x2699 DUP10 DUP8 PUSH2 0x3979 JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0xA SSTORE SWAP1 SWAP6 POP SWAP4 POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE DUP8 SWAP3 DUP8 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP5 POP SWAP5 POP SWAP5 POP POP POP SWAP8 POP SWAP8 POP SWAP8 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2703 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x26EC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x26FE PUSH1 0x1 PUSH2 0x2ECC JUMP JUMPDEST PUSH2 0x3A1D JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2710 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x273E DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x272C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x26FE PUSH1 0x0 PUSH2 0x2ECC JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x274B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x2818 JUMPI PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD PUSH2 0x277E SWAP3 SWAP2 SWAP1 PUSH2 0x5AC1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x27BB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x27C0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x27CF JUMPI INVALID JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x43ADBAFB PUSH1 0xE0 SHL DUP2 EQ PUSH2 0x27FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x4 PUSH1 0x0 RETURNDATACOPY PUSH1 0x40 PUSH1 0x20 MSTORE PUSH1 0x24 RETURNDATASIZE SUB PUSH1 0x24 PUSH1 0x40 RETURNDATACOPY PUSH1 0x1C RETURNDATASIZE ADD PUSH1 0x0 RETURN JUMPDEST PUSH2 0x2821 DUP7 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2837 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2849 DUP2 DUP5 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1F NOT DUP3 ADD DUP4 SWAP1 MSTORE PUSH4 0x43ADBAFB PUSH1 0x3F NOT DUP4 ADD MSTORE PUSH1 0x20 MUL PUSH1 0x23 NOT DUP3 ADD PUSH1 0x44 DUP3 ADD DUP2 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2893 DUP9 PUSH2 0x3A3D JUMP JUMPDEST SWAP7 POP PUSH2 0x289E DUP9 PUSH2 0x3A4A JUMP JUMPDEST SWAP6 POP PUSH2 0x28A9 DUP9 PUSH2 0x3A57 JUMP JUMPDEST SWAP5 POP PUSH2 0x28B4 DUP9 PUSH2 0x3A64 JUMP JUMPDEST SWAP4 POP PUSH2 0x28BF DUP9 PUSH2 0x3A71 JUMP JUMPDEST SWAP3 POP PUSH2 0x28CA DUP9 PUSH2 0x3A7E JUMP JUMPDEST SWAP2 POP PUSH2 0x28D5 DUP9 PUSH2 0x23C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP1 SWAP3 SWAP5 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL PUSH2 0xB6B DUP5 ISZERO DUP1 PUSH2 0x28FF JUMPI POP DUP4 DUP6 DUP4 DUP2 PUSH2 0x28FC JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH1 0x3 PUSH2 0x21CF JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2919 JUMPI PUSH2 0x2919 PUSH1 0x0 PUSH1 0x4 PUSH2 0x21CF JUMP JUMPDEST DUP3 PUSH2 0x2926 JUMPI POP PUSH1 0x0 PUSH2 0x873 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 DUP2 MUL SWAP1 DUP5 DUP3 DUP2 PUSH2 0x293C JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x294E JUMPI PUSH2 0x294E PUSH1 0x0 PUSH1 0x5 PUSH2 0x21CF JUMP JUMPDEST DUP3 DUP2 DUP2 PUSH2 0x2957 JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x34171A85 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0x34171A85 SWAP1 PUSH2 0x29A1 SWAP1 PUSH1 0x8 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x5D02 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x29B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x29CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x29F1 SWAP2 SWAP1 PUSH2 0x57FD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2A20 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2A09 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2A1B PUSH1 0x1 PUSH2 0x2ECC JUMP JUMPDEST PUSH2 0x28E2 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2A2D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x273E DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2A49 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2A1B PUSH1 0x0 PUSH2 0x2ECC JUMP JUMPDEST PUSH2 0x1E9D DUP3 DUP3 PUSH2 0x3A8B JUMP JUMPDEST PUSH2 0x2A6D PUSH2 0x5155 JUMP JUMPDEST PUSH2 0x2A75 PUSH2 0x5184 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x80 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x40 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 DUP7 MSTORE DUP5 MLOAD DUP6 DUP3 ADD MLOAD PUSH32 0x0 DUP2 DUP5 ADD MSTORE PUSH32 0x0 SWAP1 MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 SWAP1 MSTORE PUSH32 0x0 PUSH1 0xC0 DUP6 ADD MSTORE PUSH32 0x0 PUSH1 0xA0 DUP6 ADD MSTORE PUSH32 0x0 SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x0 SWAP1 DUP4 ADD MSTORE PUSH32 0x0 SWAP1 DUP3 ADD MSTORE SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH2 0x2CAB PUSH2 0x2A65 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH20 0x0 PUSH4 0xD83CA862 DUP12 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CEC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5B6A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2D18 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D3C SWAP2 SWAP1 PUSH2 0x57FD JUMP JUMPDEST SWAP1 POP PUSH2 0x2D4B DUP10 DUP12 DUP4 DUP7 DUP7 PUSH2 0x3021 JUMP JUMPDEST PUSH2 0x2D54 DUP2 PUSH2 0x394C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2D61 DUP13 DUP11 PUSH2 0x3B42 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x2D8B JUMPI PUSH2 0x2D8B DUP3 PUSH2 0x2D7E DUP16 PUSH2 0x1035 JUMP JUMPDEST PUSH2 0x2D86 PUSH2 0x962 JUMP JUMPDEST PUSH2 0x3B7C JUMP JUMPDEST PUSH2 0x2D9F DUP4 DUP4 PUSH2 0x2D98 PUSH2 0x962 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x39C5 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xE1D39CAF039C7DC6F364B1E29D1E67C4E330003A43F4991D50CF3E8840D95EAC SWAP2 PUSH2 0x2DD5 SWAP2 DUP7 SWAP2 SWAP1 PUSH2 0x5E9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE DUP5 SWAP3 DUP5 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP8 POP SWAP8 POP SWAP8 POP POP POP POP POP POP SWAP8 POP SWAP8 POP SWAP8 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2E3E DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2E27 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2E39 PUSH1 0x1 PUSH2 0x2ECC JUMP JUMPDEST PUSH2 0x3C8E JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2E4B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x273E DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2E67 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2E39 PUSH1 0x0 PUSH2 0x2ECC JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH7 0x42414C23000030 PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD SWAP1 SWAP5 ADD PUSH1 0x10 SHL SWAP4 SWAP1 SWAP4 ADD ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2EF9 JUMPI PUSH32 0x0 PUSH2 0x873 JUMP JUMPDEST POP PUSH32 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6B DUP4 DUP4 PUSH2 0x28E2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP2 ISZERO PUSH2 0x2F8B JUMPI DUP4 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2F60 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP3 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2F7A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0xB6B JUMP JUMPDEST DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2F99 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2FB3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0x301D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C7565206D75737420626520706F736974697665 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x302D DUP2 PUSH2 0x253A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3038 JUMPI POP DUP6 NUMBER GT JUMPDEST ISZERO PUSH2 0x3191 JUMPI PUSH1 0x0 PUSH20 0x0 PUSH4 0xB0A208A7 DUP8 DUP7 DUP7 PUSH2 0x3065 DUP11 PUSH2 0x3CC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3084 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5B9B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x309C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x30B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x30D4 SWAP2 SWAP1 PUSH2 0x57FD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x30E1 DUP3 PUSH2 0x3D05 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x30F7 DUP8 PUSH2 0x30F2 DUP7 PUSH2 0x2513 JUMP JUMPDEST PUSH2 0x3D10 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3104 DUP6 PUSH2 0x252D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3111 DUP7 PUSH2 0x2520 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x312A DUP3 DUP5 DUP8 DUP8 PUSH2 0x3125 DUP13 PUSH2 0x2507 JUMP JUMPDEST PUSH2 0x3D27 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 EQ PUSH2 0x318A JUMPI PUSH2 0x313D DUP8 DUP3 PUSH2 0x3D7E JUMP JUMPDEST SWAP7 POP PUSH2 0x3149 DUP8 TIMESTAMP PUSH2 0x3D8C JUMP JUMPDEST SWAP7 POP DUP7 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH32 0x12ADE7B7DD29C5E3DF1E883F0A092467D851B06C52F3C4484A443D40B9CD6601 DUP2 PUSH1 0x40 MLOAD PUSH2 0x3181 SWAP2 SWAP1 PUSH2 0x5C7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL DUP4 ISZERO DUP1 PUSH2 0x31B3 JUMPI POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x31B0 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0x31C3 JUMPI PUSH2 0x31C3 PUSH1 0x0 PUSH1 0x3 PUSH2 0x21CF JUMP JUMPDEST DUP1 PUSH2 0x31D2 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x873 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH1 0x0 NOT DUP3 ADD JUMPDEST DIV PUSH1 0x1 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1FAA JUMPI PUSH2 0x1FAA PUSH1 0x0 PUSH1 0x1 PUSH2 0x21CF JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x30FFA11B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH20 0x0 SWAP2 PUSH4 0x61FF4236 SWAP2 PUSH2 0x324C SWAP2 DUP11 SWAP2 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x5C0C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x3278 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x23B7 SWAP2 SWAP1 PUSH2 0x57FD JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6B DUP4 DUP4 PUSH2 0x3A1D JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x3B18CE7B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH20 0x0 SWAP2 PUSH4 0xEC6339EC SWAP2 PUSH2 0x324C SWAP2 DUP11 SWAP2 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x5C0C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6B DUP4 DUP4 PUSH2 0x3C8E JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 LT PUSH2 0x3314 JUMPI PUSH1 0x0 PUSH2 0x873 JUMP JUMPDEST POP PUSH8 0xDE0B6B3A7640000 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x3335 JUMPI PUSH2 0x3335 PUSH1 0x0 PUSH1 0x4 PUSH2 0x21CF JUMP JUMPDEST DUP3 PUSH2 0x3342 JUMPI POP PUSH1 0x0 PUSH2 0x873 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 DUP2 MUL SWAP1 DUP5 DUP3 DUP2 PUSH2 0x3358 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x337C JUMPI PUSH2 0x337C PUSH8 0xDE0B6B3A7640000 DUP6 DUP4 DUP2 PUSH2 0x3373 JUMPI INVALID JUMPDEST DIV EQ PUSH1 0x5 PUSH2 0x21CF JUMP JUMPDEST DUP3 PUSH1 0x1 DUP3 SUB DUP2 PUSH2 0x31E1 JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH2 0x3392 PUSH2 0x14E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAAABADC5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x33CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x33DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC31 SWAP2 SWAP1 PUSH2 0x530C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH2 0x3431 PUSH1 0x1 PUSH2 0x3D9A JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x343E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x3454 PUSH1 0x0 PUSH2 0x3D9A JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x3461 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x34D3 JUMPI PUSH2 0x34C9 PUSH2 0x34C2 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3498 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x34AC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3DEE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x3E3D JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x347D JUMP JUMPDEST POP PUSH2 0x873 PUSH1 0x0 DUP3 GT PUSH2 0x137 PUSH2 0x21CF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34ED PUSH2 0x23CE JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x353E DUP5 PUSH2 0x3E66 JUMP JUMPDEST SWAP1 POP PUSH2 0x3559 PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3551 JUMPI INVALID JUMPDEST EQ PUSH1 0xCE PUSH2 0x21CF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3564 DUP6 PUSH2 0x3E85 JUMP JUMPDEST SWAP1 POP PUSH2 0x3572 DUP2 MLOAD PUSH1 0x2 PUSH2 0x2554 JUMP JUMPDEST PUSH2 0x357B DUP2 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3586 PUSH2 0x2A65 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH20 0x0 PUSH4 0xD83CA862 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35C7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5B6A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x35DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x35F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3617 SWAP2 SWAP1 PUSH2 0x57FD JUMP JUMPDEST SWAP1 POP PUSH32 0xAF65F1A72BF4F8BC48E8153858E1F7B307CE39C88361A677C0A79C2A1AE571EF DUP2 PUSH1 0x40 MLOAD PUSH2 0x3648 SWAP2 SWAP1 PUSH2 0x5C7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 PUSH2 0x365D DUP3 PUSH1 0x2 PUSH2 0x28E2 JUMP JUMPDEST PUSH1 0xA SWAP3 SWAP1 SWAP3 SSTORE POP SWAP11 SWAP3 SWAP10 POP SWAP2 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1E9D DUP3 DUP3 PUSH2 0x3F39 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD LT ISZERO PUSH2 0x36B8 JUMPI PUSH2 0x95F JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x36C7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1F79 JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x36EF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x3718 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH1 0x65 PUSH2 0x21CF JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x36D8 JUMP JUMPDEST DUP2 PUSH2 0x1E9D JUMPI PUSH2 0x1E9D DUP2 PUSH2 0x3FCE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6B PUSH2 0x3750 DUP4 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x20 ADD MLOAD PUSH2 0x1FEC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 MLOAD DUP6 MLOAD PUSH2 0x375D SWAP2 PUSH2 0x1FEC JUMP JUMPDEST SWAP1 PUSH2 0x2028 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xBA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1B PUSH2 0x3782 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x379D JUMPI POP PUSH2 0x379D DUP4 PUSH2 0x3FDE JUMP JUMPDEST ISZERO PUSH2 0x37C5 JUMPI PUSH2 0x37AA PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP PUSH2 0x873 JUMP JUMPDEST PUSH2 0x37CD PUSH2 0x3388 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9BE2A884 DUP5 DUP5 ADDRESS PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3832 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3846 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x385C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x873 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3874 DUP5 DUP5 GT ISZERO DUP4 PUSH2 0x21CF JUMP JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3887 DUP4 PUSH2 0x4010 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 SGT PUSH2 0x38A0 JUMPI PUSH6 0x2D79883D2000 DUP3 SUB PUSH2 0x38AA JUMP JUMPDEST PUSH6 0x2D79883D2000 DUP3 ADD JUMPDEST PUSH6 0x5AF3107A4000 SWAP1 SDIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6B DUP4 DUP4 DUP4 PUSH2 0x4074 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6B DUP4 DUP4 PUSH1 0x16 PUSH2 0x4074 JUMP JUMPDEST SHL SWAP1 JUMP JUMPDEST PUSH7 0x1FFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND SWAP1 SHL SWAP1 JUMP JUMPDEST PUSH3 0x3FFFFF SWAP2 SWAP1 SWAP2 AND SWAP1 SHL SWAP1 JUMP JUMPDEST SHR PUSH4 0x7FFFFFFF AND SWAP1 JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR PUSH3 0x3FFFFF AND PUSH3 0x1FFFFF DUP2 SGT PUSH2 0x3920 JUMPI DUP1 PUSH2 0x29F1 JUMP JUMPDEST PUSH3 0x3FFFFF NOT OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST SHR PUSH2 0x3FF AND SWAP1 JUMP JUMPDEST SHR PUSH1 0x1 SWAP1 DUP2 AND EQ SWAP1 JUMP JUMPDEST SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x395E PUSH1 0xA SLOAD DUP7 PUSH2 0x408B JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH2 0x3972 DUP5 DUP5 DUP5 DUP5 PUSH2 0x40F4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x3988 DUP5 PUSH2 0x3E66 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3998 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x39B2 JUMPI PUSH2 0x39A8 DUP6 DUP6 PUSH2 0x4114 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH2 0x39BD JUMP JUMPDEST PUSH2 0x39BD PUSH2 0x150 PUSH2 0x2E79 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO PUSH2 0x39F7 JUMPI PUSH1 0x0 PUSH2 0x39E3 DUP5 PUSH2 0x39DD DUP9 DUP9 PUSH2 0x3199 JUMP JUMPDEST SWAP1 PUSH2 0x3322 JUMP JUMPDEST SWAP1 POP PUSH2 0x39EF DUP7 DUP3 PUSH2 0x4146 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x29F1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A07 DUP5 PUSH2 0xF6A DUP9 DUP9 PUSH2 0x415E JUMP JUMPDEST SWAP1 POP PUSH2 0x3A13 DUP7 DUP3 PUSH2 0x31EE JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A2C DUP3 ISZERO ISZERO PUSH1 0x4 PUSH2 0x21CF JUMP JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x3A35 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x873 DUP3 PUSH1 0xEA PUSH2 0x3906 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x873 DUP3 PUSH1 0xB5 PUSH2 0x4188 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x873 DUP3 PUSH1 0x9F PUSH2 0x3906 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x873 DUP3 PUSH1 0x6A PUSH2 0x4188 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x873 DUP3 PUSH1 0x54 PUSH2 0x3906 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x873 DUP3 PUSH1 0x1F PUSH2 0x4188 JUMP JUMPDEST PUSH2 0x3AA2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x19B PUSH2 0x21CF JUMP JUMPDEST PUSH2 0x3AAE DUP3 PUSH1 0x0 DUP4 PUSH2 0x1F79 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3AD4 SWAP1 DUP3 PUSH2 0x1A1 PUSH2 0x3865 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x3AFA SWAP1 DUP3 PUSH2 0x41BB JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x3B51 DUP5 PUSH2 0x3E66 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3B61 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x3B71 JUMPI PUSH2 0x39A8 DUP6 DUP6 PUSH2 0x41C9 JUMP JUMPDEST PUSH2 0x39BD PUSH2 0x136 PUSH2 0x2E79 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0xB SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP3 MSTORE PUSH2 0x100 DUP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB AND PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x3BC9 DUP6 DUP6 PUSH2 0x4146 JUMP JUMPDEST GT ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6F7665722061646472657373206C697175696469747920636170000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x3C1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CA SWAP2 SWAP1 PUSH2 0x5D61 JUMP JUMPDEST POP PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x3C38 DUP6 DUP5 PUSH2 0x4146 JUMP JUMPDEST GT ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6F76657220676C6F62616C206C69717569646974792063617000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x3972 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CA SWAP2 SWAP1 PUSH2 0x5D61 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C9D DUP3 ISZERO ISZERO PUSH1 0x4 PUSH2 0x21CF JUMP JUMPDEST DUP3 PUSH2 0x3CAA JUMPI POP PUSH1 0x0 PUSH2 0x873 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP5 SUB DUP2 PUSH2 0x3CB6 JUMPI INVALID JUMPDEST DIV PUSH1 0x1 ADD SWAP1 POP PUSH2 0x873 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xFF SHL DUP3 LT PUSH2 0x301D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5F0D PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x873 DUP3 PUSH2 0x387B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3D1C DUP5 PUSH2 0x387B JUMP JUMPDEST SWAP3 SWAP1 SWAP3 SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3D43 DUP6 DUP6 DUP6 TIMESTAMP PUSH2 0x3D3A DUP12 PUSH2 0x286D JUMP JUMPDEST SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x41EE JUMP JUMPDEST SWAP1 POP PUSH1 0x78 TIMESTAMP DUP9 SWAP1 SUB LT ISZERO DUP1 PUSH2 0x3D58 JUMPI DUP7 PUSH2 0x3D61 JUMP JUMPDEST PUSH2 0x3D61 DUP8 PUSH2 0x424E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6B DUP4 DUP4 PUSH1 0x4B PUSH2 0x425B JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6B DUP4 DUP4 PUSH1 0x2C PUSH2 0x426B JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x3DC7 JUMPI PUSH32 0x0 PUSH2 0x873 JUMP JUMPDEST POP PUSH32 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3DFB DUP5 DUP5 PUSH2 0x427D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3E15 PUSH2 0x3E0E DUP4 PUSH2 0x2710 PUSH2 0x437E JUMP JUMPDEST PUSH1 0x1 PUSH2 0x24F5 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0x3E2A JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x873 JUMP JUMPDEST PUSH2 0x3E34 DUP3 DUP3 PUSH2 0x1F9A JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x873 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL PUSH2 0x3E57 DUP5 ISZERO DUP1 PUSH2 0x28FF JUMPI POP DUP4 DUP6 DUP4 DUP2 PUSH2 0x28FC JUMPI INVALID JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x2957 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3E7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3E9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP3 SWAP5 SWAP3 SWAP4 DUP4 ADD SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x3EC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x3ED8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x3EF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3F22 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3F0A JUMP JUMPDEST POP POP POP POP SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 MSTORE POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3F45 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1F79 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x3F52 SWAP1 DUP3 PUSH2 0x24F5 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3F78 SWAP1 DUP3 PUSH2 0x24F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x95F DUP2 PUSH3 0x23ACA9 PUSH1 0xE9 SHL PUSH2 0x43C1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FF0 PUSH4 0x1C74C917 PUSH1 0xE1 SHL PUSH2 0x1441 JUMP JUMPDEST DUP3 EQ DUP1 PUSH2 0x873 JUMPI POP PUSH2 0x4008 PUSH4 0x50DD6ED9 PUSH1 0xE0 SHL PUSH2 0x1441 JUMP JUMPDEST SWAP1 SWAP2 EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4020 PUSH1 0x0 DUP4 SGT PUSH1 0x64 PUSH2 0x21CF JUMP JUMPDEST PUSH8 0xC7D713B49DA0000 DUP3 SGT DUP1 ISZERO PUSH2 0x403E JUMPI POP PUSH8 0xF43FC2C04EE0000 DUP3 SLT JUMPDEST ISZERO PUSH2 0x4064 JUMPI PUSH8 0xDE0B6B3A7640000 PUSH2 0x4055 DUP4 PUSH2 0x4422 JUMP JUMPDEST DUP2 PUSH2 0x405C JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH2 0x104F JUMP JUMPDEST PUSH2 0x406D DUP3 PUSH2 0x4540 JUMP JUMPDEST SWAP1 POP PUSH2 0x104F JUMP JUMPDEST PUSH3 0x3FFFFF DUP3 DUP2 AND DUP3 SHL SWAP1 DUP3 SHL NOT DUP5 AND OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x409F PUSH2 0x48DF JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP DUP4 PUSH1 0x0 EQ ISZERO PUSH2 0x40C4 JUMPI PUSH1 0x0 SWAP8 POP DUP8 SWAP7 POP SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x40EB SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x40DB DUP13 DUP13 PUSH2 0x40D4 PUSH2 0x962 JUMP JUMPDEST DUP10 DUP10 PUSH2 0x4B4E JUMP JUMPDEST SWAP1 SWAP11 POP SWAP9 POP SWAP3 SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP JUMPDEST SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST DUP4 ISZERO PUSH2 0x4104 JUMPI PUSH2 0x4104 DUP3 DUP6 PUSH2 0x3674 JUMP JUMPDEST DUP3 ISZERO PUSH2 0xC21 JUMPI PUSH2 0xC21 DUP2 DUP5 PUSH2 0x3674 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x4123 DUP5 PUSH2 0x4BE9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4139 DUP7 DUP4 PUSH2 0x4134 PUSH2 0x962 JUMP JUMPDEST PUSH2 0x4C0B JUMP JUMPDEST SWAP2 SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xB6B JUMPI PUSH2 0xB6B PUSH1 0x0 DUP1 PUSH2 0x21CF JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL DUP4 ISZERO DUP1 PUSH2 0x4178 JUMPI POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x4175 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0x3E57 JUMPI PUSH2 0x3E57 PUSH1 0x0 PUSH1 0x3 PUSH2 0x21CF JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR PUSH7 0x1FFFFFFFFFFFFF AND PUSH7 0xFFFFFFFFFFFFF DUP2 SGT PUSH2 0x41AA JUMPI DUP1 PUSH2 0x29F1 JUMP JUMPDEST PUSH7 0x1FFFFFFFFFFFFF NOT OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6B DUP4 DUP4 PUSH1 0x1 PUSH2 0x3865 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x41D8 DUP5 PUSH2 0x4BE9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4139 DUP7 DUP4 PUSH2 0x41E9 PUSH2 0x962 JUMP JUMPDEST PUSH2 0x4CA6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x41FA DUP8 PUSH2 0x23C2 JUMP JUMPDEST DUP4 SUB SWAP1 POP PUSH1 0x0 DUP2 DUP8 MUL PUSH2 0x420C DUP10 PUSH2 0x3A4A JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP3 DUP8 MUL PUSH2 0x421D DUP11 PUSH2 0x3A64 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP4 DUP8 MUL PUSH2 0x422E DUP12 PUSH2 0x3A7E JUMP JUMPDEST ADD SWAP1 POP PUSH2 0x4240 DUP10 DUP5 DUP11 DUP6 DUP12 DUP7 DUP13 PUSH2 0x2360 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x873 DUP3 PUSH1 0x1 PUSH2 0x4D41 JUMP JUMPDEST PUSH2 0x3FF DUP2 SHL NOT SWAP3 SWAP1 SWAP3 AND SWAP2 SHL OR SWAP1 JUMP JUMPDEST PUSH4 0x7FFFFFFF DUP2 SHL NOT SWAP3 SWAP1 SWAP3 AND SWAP2 SHL OR SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x4293 JUMPI POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x873 JUMP JUMPDEST DUP3 PUSH2 0x42A0 JUMPI POP PUSH1 0x0 PUSH2 0x873 JUMP JUMPDEST PUSH2 0x42B1 PUSH1 0x1 PUSH1 0xFF SHL DUP5 LT PUSH1 0x6 PUSH2 0x21CF JUMP JUMPDEST DUP3 PUSH2 0x42D7 PUSH24 0xBCE5086492111AEA88F4BB1CA6BCF584181EA8059F76532 DUP5 LT PUSH1 0x7 PUSH2 0x21CF JUMP JUMPDEST DUP3 PUSH1 0x0 PUSH8 0xC7D713B49DA0000 DUP4 SGT DUP1 ISZERO PUSH2 0x42F8 JUMPI POP PUSH8 0xF43FC2C04EE0000 DUP4 SLT JUMPDEST ISZERO PUSH2 0x432F JUMPI PUSH1 0x0 PUSH2 0x4308 DUP5 PUSH2 0x4422 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP1 DUP3 SMOD DUP5 MUL SDIV DUP4 PUSH8 0xDE0B6B3A7640000 DUP4 SDIV MUL ADD SWAP2 POP POP PUSH2 0x433D JUMP JUMPDEST DUP2 PUSH2 0x4339 DUP5 PUSH2 0x4540 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 SDIV PUSH2 0x4375 PUSH9 0x238FD42C5CF03FFFF NOT DUP3 SLT DUP1 ISZERO SWAP1 PUSH2 0x436E JUMPI POP PUSH9 0x70C1CC73B00C80000 DUP3 SGT ISZERO JUMPDEST PUSH1 0x8 PUSH2 0x21CF JUMP JUMPDEST PUSH2 0x3A13 DUP2 PUSH2 0x4D49 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL PUSH2 0x4398 DUP5 ISZERO DUP1 PUSH2 0x28FF JUMPI POP DUP4 DUP6 DUP4 DUP2 PUSH2 0x28FC JUMPI INVALID JUMPDEST DUP1 PUSH2 0x43A7 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x873 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH1 0x0 NOT DUP3 ADD DIV PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x873 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 MUL PUSH1 0x0 DUP1 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP1 DUP5 ADD SWAP1 PUSH15 0xC097CE7BC90715B34B9F0FFFFFFFFF NOT DUP6 ADD MUL DUP2 PUSH2 0x445D JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x0 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 DUP1 MUL SDIV SWAP1 POP DUP2 DUP1 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP2 DUP5 MUL SDIV SWAP2 POP PUSH1 0x3 DUP3 SDIV ADD PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x5 DUP3 SDIV ADD PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x7 DUP3 SDIV ADD PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x9 DUP3 SDIV ADD PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0xB DUP3 SDIV ADD PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0xD DUP3 SDIV ADD PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0xF DUP3 PUSH1 0x2 SWAP2 SWAP1 SDIV SWAP2 SWAP1 SWAP2 ADD MUL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 SLT ISZERO PUSH2 0x457C JUMPI PUSH2 0x4572 DUP3 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP2 PUSH2 0x456C JUMPI INVALID JUMPDEST SDIV PUSH2 0x4540 JUMP JUMPDEST PUSH1 0x0 SUB SWAP1 POP PUSH2 0x104F JUMP JUMPDEST PUSH1 0x0 PUSH31 0x1600EF3172E58D2E933EC884FDE10064C63B5372D805E203C0000000000000 DUP4 SLT PUSH2 0x45CD JUMPI PUSH24 0x195E54C5DD42177F53A27172FA9EC630262827000000000 DUP4 SDIV SWAP3 POP PUSH9 0x6F05B59D3B2000000 ADD JUMPDEST PUSH20 0x11798004D755D3C8BC8E03204CF44619E000000 DUP4 SLT PUSH2 0x4605 JUMPI PUSH12 0x1425982CF597CD205CEF7380 DUP4 SDIV SWAP3 POP PUSH9 0x3782DACE9D9000000 ADD JUMPDEST PUSH1 0x64 SWAP3 DUP4 MUL SWAP3 MUL PUSH15 0x1855144814A7FF805980FF0084000 DUP4 SLT PUSH2 0x464D JUMPI PUSH15 0x1855144814A7FF805980FF0084000 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0xAD78EBC5AC62000000 ADD JUMPDEST PUSH12 0x2DF0AB5A80A22C61AB5A700 DUP4 SLT PUSH2 0x4688 JUMPI PUSH12 0x2DF0AB5A80A22C61AB5A700 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x56BC75E2D631000000 ADD JUMPDEST PUSH10 0x3F1FCE3DA636EA5CF850 DUP4 SLT PUSH2 0x46BF JUMPI PUSH10 0x3F1FCE3DA636EA5CF850 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x2B5E3AF16B18800000 ADD JUMPDEST PUSH10 0x127FA27722CC06CC5E2 DUP4 SLT PUSH2 0x46F6 JUMPI PUSH10 0x127FA27722CC06CC5E2 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x15AF1D78B58C400000 ADD JUMPDEST PUSH9 0x280E60114EDB805D03 DUP4 SLT PUSH2 0x472B JUMPI PUSH9 0x280E60114EDB805D03 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0xAD78EBC5AC6200000 ADD JUMPDEST PUSH9 0xEBC5FB41746121110 DUP4 SLT PUSH2 0x4756 JUMPI PUSH9 0xEBC5FB41746121110 PUSH9 0x56BC75E2D63100000 SWAP4 DUP5 MUL SDIV SWAP3 ADD JUMPDEST PUSH9 0x8F00F760A4B2DB55D DUP4 SLT PUSH2 0x478B JUMPI PUSH9 0x8F00F760A4B2DB55D PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x2B5E3AF16B1880000 ADD JUMPDEST PUSH9 0x6F5F1775788937937 DUP4 SLT PUSH2 0x47C0 JUMPI PUSH9 0x6F5F1775788937937 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x15AF1D78B58C40000 ADD JUMPDEST PUSH9 0x6248F33704B286603 DUP4 SLT PUSH2 0x47F4 JUMPI PUSH9 0x6248F33704B286603 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH8 0xAD78EBC5AC620000 ADD JUMPDEST PUSH9 0x5C548670B9510E7AC DUP4 SLT PUSH2 0x4828 JUMPI PUSH9 0x5C548670B9510E7AC PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH8 0x56BC75E2D6310000 ADD JUMPDEST PUSH1 0x0 PUSH9 0x56BC75E2D63100000 DUP5 ADD PUSH9 0x56BC75E2D63100000 DUP1 DUP7 SUB MUL DUP2 PUSH2 0x484B JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x0 PUSH9 0x56BC75E2D63100000 DUP3 DUP1 MUL SDIV SWAP1 POP DUP2 DUP1 PUSH9 0x56BC75E2D63100000 DUP2 DUP5 MUL SDIV SWAP2 POP PUSH1 0x3 DUP3 SDIV ADD PUSH9 0x56BC75E2D63100000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x5 DUP3 SDIV ADD PUSH9 0x56BC75E2D63100000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x7 DUP3 SDIV ADD PUSH9 0x56BC75E2D63100000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x9 DUP3 SDIV ADD PUSH9 0x56BC75E2D63100000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0xB DUP3 SDIV ADD PUSH1 0x2 MUL PUSH1 0x64 DUP6 DUP3 ADD SDIV SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0xBD02D0F5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xBD02D0F5 SWAP1 PUSH2 0x4931 SWAP1 PUSH22 0x50524F544F434F4C5F535741505F4645455F50455243 PUSH1 0x50 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0x5C7D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4949 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x495D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4981 SWAP2 SWAP1 PUSH2 0x57FD JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0xBD02D0F5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xBD02D0F5 SWAP1 PUSH2 0x49D1 SWAP1 PUSH32 0x50524F544F434F4C5F4645455F4759524F5F504F5254494F4E00000000000000 SWAP1 PUSH1 0x4 ADD PUSH2 0x5C7D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x49E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x49FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A21 SWAP2 SWAP1 PUSH2 0x57FD JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0x21F8A721 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x21F8A721 SWAP1 PUSH2 0x4A61 SWAP1 PUSH13 0x4759524F5F5452454153555259 PUSH1 0x98 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0x5C7D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4A79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4A8D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4AB1 SWAP2 SWAP1 PUSH2 0x530C JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0x21F8A721 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x21F8A721 SWAP1 PUSH2 0x4AF0 SWAP1 PUSH12 0x42414C5F5452454153555259 PUSH1 0xA0 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0x5C7D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4B08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4B1C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4B40 SWAP2 SWAP1 PUSH2 0x530C JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 DUP7 GT PUSH2 0x4B63 JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x4BDF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B83 DUP6 PUSH2 0x4B7D PUSH2 0x4B76 DUP11 DUP13 PUSH2 0x31EE JUMP JUMPDEST DUP10 SWAP1 PUSH2 0x415E JUMP JUMPDEST SWAP1 PUSH2 0x415E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4B9B PUSH2 0x4B94 DUP10 DUP12 PUSH2 0x31EE JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x415E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4BA9 DUP10 DUP4 PUSH2 0x31EE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4BB7 DUP5 DUP4 PUSH2 0x2906 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4BC5 DUP9 DUP4 PUSH2 0x415E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4BD3 DUP4 DUP4 PUSH2 0x31EE JUMP JUMPDEST SWAP2 SWAP8 POP SWAP1 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4C00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 ADD MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x4C24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4C4E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x191B JUMPI PUSH2 0x4C87 DUP4 PUSH2 0xF6A DUP7 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x4C71 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x415E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4C93 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x4C54 JUMP JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x4CBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4CE9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x191B JUMPI PUSH2 0x4D22 DUP4 PUSH2 0x39DD DUP7 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x4D0C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3199 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4D2E JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x4CEF JUMP JUMPDEST ADD PUSH2 0x3FF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D78 PUSH9 0x238FD42C5CF03FFFF NOT DUP4 SLT ISZERO DUP1 ISZERO PUSH2 0x4D71 JUMPI POP PUSH9 0x70C1CC73B00C80000 DUP4 SGT ISZERO JUMPDEST PUSH1 0x9 PUSH2 0x21CF JUMP JUMPDEST PUSH1 0x0 DUP3 SLT ISZERO PUSH2 0x4DA3 JUMPI PUSH2 0x4D8D DUP3 PUSH1 0x0 SUB PUSH2 0x4D49 JUMP JUMPDEST PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP2 PUSH2 0x405C JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH9 0x6F05B59D3B2000000 DUP4 SLT PUSH2 0x4DE3 JUMPI POP PUSH9 0x6F05B59D3B1FFFFFF NOT SWAP1 SWAP2 ADD SWAP1 PUSH24 0x195E54C5DD42177F53A27172FA9EC630262827000000000 PUSH2 0x4E19 JUMP JUMPDEST PUSH9 0x3782DACE9D9000000 DUP4 SLT PUSH2 0x4E15 JUMPI POP PUSH9 0x3782DACE9D8FFFFFF NOT SWAP1 SWAP2 ADD SWAP1 PUSH12 0x1425982CF597CD205CEF7380 PUSH2 0x4E19 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST PUSH1 0x64 SWAP3 SWAP1 SWAP3 MUL SWAP2 PUSH9 0x56BC75E2D63100000 PUSH9 0xAD78EBC5AC62000000 DUP5 SLT PUSH2 0x4E69 JUMPI PUSH9 0xAD78EBC5AC61FFFFFF NOT SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH15 0x1855144814A7FF805980FF0084000 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x56BC75E2D631000000 DUP5 SLT PUSH2 0x4EA5 JUMPI PUSH9 0x56BC75E2D630FFFFFF NOT SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH12 0x2DF0AB5A80A22C61AB5A700 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x2B5E3AF16B18800000 DUP5 SLT PUSH2 0x4EDF JUMPI PUSH9 0x2B5E3AF16B187FFFFF NOT SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH10 0x3F1FCE3DA636EA5CF850 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x15AF1D78B58C400000 DUP5 SLT PUSH2 0x4F19 JUMPI PUSH9 0x15AF1D78B58C3FFFFF NOT SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH10 0x127FA27722CC06CC5E2 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0xAD78EBC5AC6200000 DUP5 SLT PUSH2 0x4F52 JUMPI PUSH9 0xAD78EBC5AC61FFFFF NOT SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH9 0x280E60114EDB805D03 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x56BC75E2D63100000 DUP5 SLT PUSH2 0x4F8B JUMPI PUSH9 0x56BC75E2D630FFFFF NOT SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH9 0xEBC5FB41746121110 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x2B5E3AF16B1880000 DUP5 SLT PUSH2 0x4FC4 JUMPI PUSH9 0x2B5E3AF16B187FFFF NOT SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH9 0x8F00F760A4B2DB55D DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x15AF1D78B58C40000 DUP5 SLT PUSH2 0x4FFD JUMPI PUSH9 0x15AF1D78B58C3FFFF NOT SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH9 0x6F5F1775788937937 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x56BC75E2D63100000 DUP5 DUP2 ADD SWAP1 DUP6 SWAP1 PUSH1 0x2 SWAP1 DUP3 DUP1 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x3 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x4 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x5 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x6 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x7 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x8 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x9 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0xA PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0xB PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0xC PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x64 PUSH9 0x56BC75E2D63100000 DUP5 DUP5 MUL SDIV DUP6 MUL SDIV SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x5197 PUSH2 0x51CD JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x51A4 PUSH2 0x51CD JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x104F DUP2 PUSH2 0x5EF7 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5202 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x5217 PUSH2 0x5212 DUP4 PUSH2 0x5EDA JUMP JUMPDEST PUSH2 0x5EB7 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP2 DUP2 ADD SWAP1 DUP6 DUP4 ADD DUP4 DUP6 MUL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0x5233 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x5251 JUMPI DUP2 MLOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x5235 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x104F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x527E JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x5291 JUMPI INVALID JUMPDEST PUSH2 0x52A4 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x5EB7 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x52B8 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0x104F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x104F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5301 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB6B DUP2 PUSH2 0x5EF7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x531D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xB6B DUP2 PUSH2 0x5EF7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x533A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x5345 DUP2 PUSH2 0x5EF7 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x5355 DUP2 PUSH2 0x5EF7 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5374 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x537F DUP2 PUSH2 0x5EF7 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x538F DUP2 PUSH2 0x5EF7 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x53BA JUMPI DUP5 DUP6 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x53C5 DUP2 PUSH2 0x5EF7 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x53D5 DUP2 PUSH2 0x5EF7 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x53F8 JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5427 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x5432 DUP2 PUSH2 0x5EF7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5454 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x546A JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x547D JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x548D PUSH2 0x5212 DUP4 PUSH2 0x5EDA JUMP JUMPDEST DUP3 DUP2 MSTORE DUP2 DUP2 ADD SWAP1 DUP6 DUP4 ADD DUP4 DUP6 MUL DUP8 ADD DUP5 ADD DUP13 LT ISZERO PUSH2 0x54A9 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x54D4 JUMPI DUP1 MLOAD PUSH2 0x54C0 DUP2 PUSH2 0x5EF7 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x54AD JUMP JUMPDEST POP SWAP2 DUP10 ADD MLOAD SWAP2 SWAP8 POP SWAP1 SWAP4 POP POP POP DUP1 DUP3 GT ISZERO PUSH2 0x54ED JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x54FA DUP7 DUP3 DUP8 ADD PUSH2 0x51F2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x551D JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x5533 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5546 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5554 PUSH2 0x5212 DUP3 PUSH2 0x5EDA JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 DUP2 ADD SWAP1 DUP5 DUP7 ADD PUSH1 0x40 DUP1 DUP6 MUL DUP8 ADD DUP9 ADD DUP12 LT ISZERO PUSH2 0x5572 JUMPI DUP9 DUP10 REVERT JUMPDEST DUP9 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x55CA JUMPI DUP1 DUP3 DUP13 SUB SLT ISZERO PUSH2 0x558C JUMPI DUP9 DUP10 REVERT JUMPDEST DUP1 MLOAD DUP2 DUP2 ADD DUP2 DUP2 LT DUP9 DUP3 GT OR ISZERO PUSH2 0x559F JUMPI INVALID JUMPDEST DUP3 MSTORE PUSH2 0x55AA DUP4 PUSH2 0x52E1 JUMP JUMPDEST DUP2 MSTORE DUP3 DUP10 ADD CALLDATALOAD DUP10 DUP3 ADD MSTORE DUP5 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP3 DUP8 ADD SWAP3 SWAP1 DUP2 ADD SWAP1 PUSH2 0x5576 JUMP JUMPDEST POP SWAP1 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x55EB JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x5601 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5614 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5622 PUSH2 0x5212 DUP3 PUSH2 0x5EDA JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 DUP2 ADD SWAP1 DUP5 DUP7 ADD PUSH1 0x60 DUP1 DUP6 MUL DUP8 ADD DUP9 ADD DUP12 LT ISZERO PUSH2 0x5640 JUMPI DUP9 DUP10 REVERT JUMPDEST DUP9 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x55CA JUMPI DUP1 DUP3 DUP13 SUB SLT ISZERO PUSH2 0x565A JUMPI DUP9 DUP10 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 ADD DUP2 DUP2 LT DUP10 DUP3 GT OR ISZERO PUSH2 0x566F JUMPI INVALID JUMPDEST DUP3 MSTORE PUSH2 0x567A DUP5 PUSH2 0x52E1 JUMP JUMPDEST DUP2 MSTORE DUP4 DUP11 ADD CALLDATALOAD DUP11 DUP3 ADD MSTORE DUP2 DUP5 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP5 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP3 DUP8 ADD SWAP3 SWAP1 DUP2 ADD SWAP1 PUSH2 0x5644 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x56B6 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xB6B DUP3 PUSH2 0x525E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x56D9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP8 CALLDATALOAD SWAP7 POP PUSH1 0x20 DUP1 DUP10 ADD CALLDATALOAD PUSH2 0x56EC DUP2 PUSH2 0x5EF7 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x56FC DUP2 PUSH2 0x5EF7 JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x5717 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP12 ADD SWAP2 POP DUP12 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x572A JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5738 PUSH2 0x5212 DUP3 PUSH2 0x5EDA JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP6 DUP3 ADD SWAP2 POP DUP6 DUP6 ADD DUP16 DUP8 DUP9 DUP7 MUL DUP9 ADD ADD GT ISZERO PUSH2 0x5756 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x5778 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x575A JUMP JUMPDEST POP SWAP9 POP POP POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP6 POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 DUP12 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x579E JUMPI DUP4 DUP5 REVERT JUMPDEST POP POP PUSH2 0x57AC DUP11 DUP3 DUP12 ADD PUSH2 0x526E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x57CC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xB6B JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x57F4 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xB6B DUP3 PUSH2 0x52E1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x580E JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5827 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5849 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH2 0x5865 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE PUSH2 0x5871 DUP4 PUSH2 0x525E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x588C JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x58AA JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x58CA JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x58E0 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP PUSH2 0x120 DUP1 DUP4 DUP10 SUB SLT ISZERO PUSH2 0x58F6 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x58FF DUP2 PUSH2 0x5EB7 JUMP JUMPDEST SWAP1 POP PUSH2 0x590A DUP4 PUSH2 0x52D2 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x5918 PUSH1 0x20 DUP5 ADD PUSH2 0x51E7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x5929 PUSH1 0x40 DUP5 ADD PUSH2 0x51E7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x5958 PUSH1 0xC0 DUP5 ADD PUSH2 0x51E7 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x5969 PUSH1 0xE0 DUP5 ADD PUSH2 0x51E7 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD CALLDATALOAD DUP4 DUP2 GT ISZERO PUSH2 0x5981 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH2 0x598D DUP11 DUP3 DUP8 ADD PUSH2 0x526E JUMP JUMPDEST SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP8 PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP8 POP PUSH1 0x40 SWAP1 SWAP7 ADD CALLDATALOAD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x59BD JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x59D6 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5A14 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x59F8 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x5A29 JUMPI INVALID JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x5A38 DUP3 DUP3 MLOAD PUSH2 0x5AB2 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH2 0x5A4A PUSH1 0x40 DUP5 ADD DUP3 PUSH2 0x5AB2 JUMP JUMPDEST POP PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH2 0x100 DUP4 ADD MSTORE POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP4 CALLDATACOPY SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5B1D JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x5B01 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xB6B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x59E5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0x5B4F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x59E5 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x5B61 DUP2 DUP6 PUSH2 0x59E5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E0 DUP1 DUP4 MSTORE PUSH2 0x5B7E DUP2 DUP5 ADD DUP8 PUSH2 0x59E5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5B8E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x5A82 JUMP JUMPDEST PUSH2 0x29F1 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x5A2D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x200 DUP1 DUP4 MSTORE PUSH2 0x5BAF DUP2 DUP5 ADD DUP9 PUSH2 0x59E5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5BBF PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x5A82 JUMP JUMPDEST PUSH2 0x5BCC PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x5A2D JUMP JUMPDEST DUP3 PUSH2 0x1E0 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 MSTORE PUSH2 0x5BEF PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x59E5 JUMP JUMPDEST SWAP1 POP PUSH2 0x5BFE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x5AB2 JUMP JUMPDEST DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x260 DUP1 DUP4 MSTORE PUSH2 0x5C20 DUP2 DUP5 ADD DUP11 PUSH2 0x59E5 JUMP JUMPDEST SWAP2 POP POP DUP7 PUSH1 0x20 DUP4 ADD MSTORE DUP6 ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x5C3E PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x5A82 JUMP JUMPDEST PUSH2 0x5C4C PUSH2 0x100 DUP4 ADD DUP6 PUSH2 0x5A2D JUMP JUMPDEST PUSH2 0x23B7 PUSH2 0x220 DUP4 ADD DUP5 PUSH2 0x5AB2 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x40 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x60 DUP2 ADD PUSH2 0x5CF4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x5A1F JUMP JUMPDEST DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x80 DUP2 ADD PUSH2 0x5D16 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x5A1F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP DUP5 DUP3 MSTORE PUSH2 0x5D41 PUSH1 0x20 DUP4 ADD DUP6 MLOAD PUSH2 0x5A1F JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5D8D JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x5D71 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x5D9E JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 SWAP2 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP3 MSTORE PUSH1 0x8 DUP2 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x80 SHR PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1C0 DUP2 ADD PUSH2 0x5E23 DUP3 DUP6 PUSH2 0x5A82 JUMP JUMPDEST PUSH2 0x5E31 PUSH1 0xA0 DUP4 ADD DUP5 MLOAD PUSH2 0x5AB2 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x5E43 PUSH1 0xE0 DUP5 ADD DUP3 PUSH2 0x5AB2 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x140 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x160 DUP4 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x180 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x1A0 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x29F1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x59E5 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x5ED2 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x5EED JUMPI INVALID JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x95F JUMPI PUSH1 0x0 DUP1 REVERT INVALID MSTORE8 PUSH2 0x6665 NUMBER PUSH2 0x7374 GASPRICE KECCAK256 PUSH23 0x616C756520646F65736E27742066697420696E20616E20 PUSH10 0x6E74323536A264697066 PUSH20 0x582212206DF1C08E7C48068FDC68021E16EA0458 BLOCKHASH DELEGATECALL 0xD1 0xF 0xE7 SWAP11 BYTE CALLDATALOAD 0x4C SWAP9 SWAP15 PUSH26 0x174715E664736F6C634300070600330000000000000000000000 ", "sha1": "68c22576bbadeb9db381199ba083edc13568cc45", "source": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity 0.7.6;\npragma experimental ABIEncoderV2;\n\n// import \"@balancer-labs/v2-solidity-utils/contracts/math/FixedPoint.sol\";\nimport \"../../libraries/GyroFixedPoint.sol\";\n\nimport \"@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol\";\nimport \"@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol\";\n\nimport \"../../libraries/GyroConfigKeys.sol\";\nimport \"../../libraries/GyroErrors.sol\";\nimport \"../../interfaces/IGyroConfig.sol\";\nimport \"../../libraries/GyroPoolMath.sol\";\n\nimport \"../ExtensibleWeightedPool2Tokens.sol\";\nimport \"./GyroECLPMath.sol\";\nimport \"./GyroECLPOracleMath.sol\";\nimport \"../CappedLiquidity.sol\";\nimport \"../LocallyPausable.sol\";\n\ncontract GyroECLPPool is ExtensibleWeightedPool2Tokens, CappedLiquidity, LocallyPausable {\n    using GyroFixedPoint for uint256;\n    using WeightedPoolUserDataHelpers for bytes;\n    using WeightedPool2TokensMiscData for bytes32;\n    using SafeCast for int256;\n    using SafeCast for uint256;\n\n    uint256 private constant _MINIMUM_BPT = 1e6;\n\n    /// @notice Parameters of the ECLP pool\n    int256 public immutable _paramsAlpha;\n    int256 public immutable _paramsBeta;\n    int256 public immutable _paramsC;\n    int256 public immutable _paramsS;\n    int256 public immutable _paramsLambda;\n    int256 public immutable _tauAlphaX;\n    int256 public immutable _tauAlphaY;\n    int256 public immutable _tauBetaX;\n    int256 public immutable _tauBetaY;\n    int256 public immutable _u;\n    int256 public immutable _v;\n    int256 public immutable _w;\n    int256 public immutable _z;\n    int256 public immutable _dSq;\n\n    IGyroConfig public gyroConfig;\n\n    struct GyroParams {\n        NewPoolParams baseParams;\n        GyroECLPMath.Params eclpParams;\n        GyroECLPMath.DerivedParams derivedEclpParams;\n        address capManager;\n        CapParams capParams;\n        address pauseManager;\n    }\n\n    event ECLPParamsValidated(bool paramsValidated);\n    event ECLPDerivedParamsValidated(bool derivedParamsValidated);\n\n    event InvariantAterInitializeJoin(uint256 invariantAfterJoin);\n    event InvariantOldAndNew(uint256 oldInvariant, uint256 newInvariant);\n\n    event SwapParams(uint256[] balances, GyroECLPMath.Vector2 invariant, uint256 amount);\n\n    event OracleIndexUpdated(uint256 oracleUpdatedIndex);\n\n    constructor(GyroParams memory params, address configAddress)\n        ExtensibleWeightedPool2Tokens(params.baseParams)\n        CappedLiquidity(params.capManager, params.capParams)\n        LocallyPausable(params.pauseManager)\n    {\n        _grequire(configAddress != address(0x0), GyroECLPPoolErrors.ADDRESS_IS_ZERO_ADDRESS);\n\n        GyroECLPMath.validateParams(params.eclpParams);\n        emit ECLPParamsValidated(true);\n\n        GyroECLPMath.validateDerivedParamsLimits(params.eclpParams, params.derivedEclpParams);\n        emit ECLPDerivedParamsValidated(true);\n\n        (_paramsAlpha, _paramsBeta, _paramsC, _paramsS, _paramsLambda) = (\n            params.eclpParams.alpha,\n            params.eclpParams.beta,\n            params.eclpParams.c,\n            params.eclpParams.s,\n            params.eclpParams.lambda\n        );\n\n        (_tauAlphaX, _tauAlphaY, _tauBetaX, _tauBetaY, _u, _v, _w, _z, _dSq) = (\n            params.derivedEclpParams.tauAlpha.x,\n            params.derivedEclpParams.tauAlpha.y,\n            params.derivedEclpParams.tauBeta.x,\n            params.derivedEclpParams.tauBeta.y,\n            params.derivedEclpParams.u,\n            params.derivedEclpParams.v,\n            params.derivedEclpParams.w,\n            params.derivedEclpParams.z,\n            params.derivedEclpParams.dSq\n        );\n\n        gyroConfig = IGyroConfig(configAddress);\n    }\n\n    /** @dev reconstructs ECLP params structs from immutable arrays */\n    function reconstructECLPParams() internal view returns (GyroECLPMath.Params memory params, GyroECLPMath.DerivedParams memory d) {\n        (params.alpha, params.beta, params.c, params.s, params.lambda) = (_paramsAlpha, _paramsBeta, _paramsC, _paramsS, _paramsLambda);\n        (d.tauAlpha.x, d.tauAlpha.y, d.tauBeta.x, d.tauBeta.y) = (_tauAlphaX, _tauAlphaY, _tauBetaX, _tauBetaY);\n        (d.u, d.v, d.w, d.z, d.dSq) = (_u, _v, _w, _z, _dSq);\n    }\n\n    function getECLPParams() external view returns (GyroECLPMath.Params memory params, GyroECLPMath.DerivedParams memory d) {\n        return reconstructECLPParams();\n    }\n\n    /**\n     * @dev Returns the current value of the invariant.\n     */\n    // TODO WIP killing this routine to pipe DerivedParams through differently.\n    //    function getInvariant() public view override returns (int256) {\n    //        (, uint256[] memory balances, ) = getVault().getPoolTokens(getPoolId());\n    //\n    //        // Since the Pool hooks always work with upscaled balances, we manually\n    //        // upscale here for consistency\n    //        _upscaleArray(balances);\n    //\n    //        return GyroECLPMath.calculateInvariant(balances, eclpParams, derived);\n    //    }\n\n    // Swap Hooks\n\n    function onSwap(\n        SwapRequest memory request,\n        uint256 balanceTokenIn,\n        uint256 balanceTokenOut\n    ) public virtual override whenNotPaused onlyVault(request.poolId) returns (uint256) {\n        bool tokenInIsToken0;\n\n        if (request.tokenIn == _token0 && request.tokenOut == _token1) {\n            tokenInIsToken0 = true;\n        } else if (request.tokenIn == _token1 && request.tokenOut == _token0) {\n            tokenInIsToken0 = false;\n        } else {\n            _revert(GyroECLPPoolErrors.TOKEN_IN_IS_NOT_TOKEN_0);\n        }\n\n        uint256 scalingFactorTokenIn = _scalingFactor(tokenInIsToken0);\n        uint256 scalingFactorTokenOut = _scalingFactor(!tokenInIsToken0);\n\n        // All token amounts are upscaled.\n        balanceTokenIn = _upscale(balanceTokenIn, scalingFactorTokenIn);\n        balanceTokenOut = _upscale(balanceTokenOut, scalingFactorTokenOut);\n\n        // We \"undo\" the pre-processing that the caller of onSwap() did: In contrast to other pools, we don't exploit\n        // symmetry here, and we identify the two tokens explicitly.\n        uint256[] memory balances = _balancesFromTokenInOut(balanceTokenIn, balanceTokenOut, tokenInIsToken0);\n\n        (GyroECLPMath.Params memory eclpParams, GyroECLPMath.DerivedParams memory derivedECLPParams) = reconstructECLPParams();\n        GyroECLPMath.Vector2 memory invariant;\n        {\n            (int256 currentInvariant, int256 invErr) = GyroECLPMath.calculateInvariantWithError(balances, eclpParams, derivedECLPParams);\n            // invariant = overestimate in x-component, underestimate in y-component\n            // No overflow in `+` due to constraints to the different values enforced in GyroECLPMath.\n            invariant = GyroECLPMath.Vector2(currentInvariant + 2 * invErr, currentInvariant);\n\n            // Update price oracle with the pre-swap balances. Vs other pools, we need to do this after invariant is calculated\n            _updateOracle(request.lastChangeBlock, balances, currentInvariant.toUint256(), eclpParams, derivedECLPParams);\n        }\n\n        if (request.kind == IVault.SwapKind.GIVEN_IN) {\n            // Fees are subtracted before scaling, to reduce the complexity of the rounding direction analysis.\n            // This is amount - fee amount, so we round up (favoring a higher fee amount).\n            uint256 feeAmount = request.amount.mulUp(getSwapFeePercentage());\n            request.amount = _upscale(request.amount.sub(feeAmount), scalingFactorTokenIn);\n\n            uint256 amountOut = _onSwapGivenIn(request, balances, tokenInIsToken0, eclpParams, derivedECLPParams, invariant);\n\n            emit SwapParams(balances, invariant, amountOut);\n\n            // amountOut tokens are exiting the Pool, so we round down.\n            return _downscaleDown(amountOut, scalingFactorTokenOut);\n        } else {\n            request.amount = _upscale(request.amount, scalingFactorTokenOut);\n\n            uint256 amountIn = _onSwapGivenOut(request, balances, tokenInIsToken0, eclpParams, derivedECLPParams, invariant);\n\n            emit SwapParams(balances, invariant, amountIn);\n\n            // amountIn tokens are entering the Pool, so we round up.\n            amountIn = _downscaleUp(amountIn, scalingFactorTokenIn);\n\n            // Fees are added after scaling happens, to reduce the complexity of the rounding direction analysis.\n            // This is amount + fee amount, so we round up (favoring a higher fee amount).\n            return amountIn.divUp(getSwapFeePercentage().complement());\n        }\n    }\n\n    function _onSwapGivenIn(\n        SwapRequest memory swapRequest,\n        uint256[] memory balances,\n        bool tokenInIsToken0,\n        GyroECLPMath.Params memory eclpParams,\n        GyroECLPMath.DerivedParams memory derivedECLPParams,\n        GyroECLPMath.Vector2 memory invariant\n    ) private pure returns (uint256) {\n        // Swaps are disabled while the contract is paused.\n        return GyroECLPMath.calcOutGivenIn(balances, swapRequest.amount, tokenInIsToken0, eclpParams, derivedECLPParams, invariant);\n    }\n\n    function _onSwapGivenOut(\n        SwapRequest memory swapRequest,\n        uint256[] memory balances,\n        bool tokenInIsToken0,\n        GyroECLPMath.Params memory eclpParams,\n        GyroECLPMath.DerivedParams memory derivedECLPParams,\n        GyroECLPMath.Vector2 memory invariant\n    ) private pure returns (uint256) {\n        // Swaps are disabled while the contract is paused.\n        return GyroECLPMath.calcInGivenOut(balances, swapRequest.amount, tokenInIsToken0, eclpParams, derivedECLPParams, invariant);\n    }\n\n    /**\n     * @dev Called when the Pool is joined for the first time; that is, when the BPT total supply is zero.\n     *\n     * Returns the amount of BPT to mint, and the token amounts the Pool will receive in return.\n     *\n     * Minted BPT will be sent to `recipient`, except for _MINIMUM_BPT, which will be deducted from this amount and sent\n     * to the zero address instead. This will cause that BPT to remain forever locked there, preventing total BTP from\n     * ever dropping below that value, and ensuring `_onInitializePool` can only be called once in the entire Pool's\n     * lifetime.\n     *\n     * The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n     * be downscaled (rounding up) before being returned to the Vault.\n     */\n    function _onInitializePool(\n        bytes32,\n        address,\n        address,\n        bytes memory userData\n    ) internal override returns (uint256, uint256[] memory) {\n        BaseWeightedPool.JoinKind kind = userData.joinKind();\n        _require(kind == BaseWeightedPool.JoinKind.INIT, Errors.UNINITIALIZED);\n\n        uint256[] memory amountsIn = userData.initialAmountsIn();\n        InputHelpers.ensureInputLengthMatch(amountsIn.length, 2);\n        _upscaleArray(amountsIn);\n\n        (GyroECLPMath.Params memory eclpParams, GyroECLPMath.DerivedParams memory derivedECLPParams) = reconstructECLPParams();\n        uint256 invariantAfterJoin = GyroECLPMath.calculateInvariant(amountsIn, eclpParams, derivedECLPParams);\n\n        emit InvariantAterInitializeJoin(invariantAfterJoin);\n\n        // Set the initial BPT to the value of the invariant times the number of tokens. This makes BPT supply more\n        // consistent in Pools with similar compositions but different number of tokens.\n\n        uint256 bptAmountOut = Math.mul(invariantAfterJoin, 2);\n\n        _lastInvariant = invariantAfterJoin;\n\n        return (bptAmountOut, amountsIn);\n    }\n\n    /**\n     * @dev Called whenever the Pool is joined after the first initialization join (see `_onInitializePool`).\n     *\n     * Returns the amount of BPT to mint, the token amounts that the Pool will receive in return, and the number of\n     * tokens to pay in protocol swap fees.\n     *\n     * Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n     * performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n     *\n     * Minted BPT will be sent to `recipient`.\n     *\n     * The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n     * be downscaled (rounding up) before being returned to the Vault.\n     *\n     * Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onJoinPool`). These\n     * amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n     *\n     * protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way\n     */\n    function _onJoinPool(\n        bytes32,\n        address,\n        address recipient,\n        uint256[] memory balances,\n        uint256 lastChangeBlock,\n        uint256, //protocolSwapFeePercentage,\n        bytes memory userData\n    )\n        internal\n        override\n        returns (\n            uint256,\n            uint256[] memory,\n            uint256[] memory\n        )\n    {\n        // Due protocol swap fee amounts are computed by measuring the growth of the invariant between the previous join\n        // or exit event and now - the invariant's growth is due exclusively to swap fees. This avoids spending gas\n        // computing them on each individual swap\n        (GyroECLPMath.Params memory eclpParams, GyroECLPMath.DerivedParams memory derivedECLPParams) = reconstructECLPParams();\n        uint256 invariantBeforeAction = GyroECLPMath.calculateInvariant(balances, eclpParams, derivedECLPParams);\n\n        // Update price oracle with the pre-exit balances. Vs other pools, we need to do this after invariant is calculated\n        _updateOracle(lastChangeBlock, balances, invariantBeforeAction, eclpParams, derivedECLPParams);\n\n        _distributeFees(invariantBeforeAction);\n\n        (uint256 bptAmountOut, uint256[] memory amountsIn) = _doJoin(balances, userData);\n\n        if (_capParams.capEnabled) {\n            _ensureCap(bptAmountOut, balanceOf(recipient), totalSupply());\n        }\n\n        // Since we pay fees in BPT, they have not changed the invariant and 'invariantBeforeAction' is still consistent with\n        // 'balances'. Therefore, we can use a simplified method to update the invariant that does not require a full\n        // re-computation.\n        // Note: Should this be changed in the future, we also need to reduce the invariant proportionally by the total\n        // protocol fee factor.\n        _lastInvariant = GyroPoolMath.liquidityInvariantUpdate(invariantBeforeAction, bptAmountOut, totalSupply(), true);\n\n        emit InvariantOldAndNew(invariantBeforeAction, _lastInvariant);\n\n        // returns a new uint256[](2) b/c Balancer vault is expecting a fee array, but fees paid in BPT instead\n        return (bptAmountOut, amountsIn, new uint256[](2));\n    }\n\n    function _doJoin(uint256[] memory balances, bytes memory userData) internal view returns (uint256 bptAmountOut, uint256[] memory amountsIn) {\n        BaseWeightedPool.JoinKind kind = userData.joinKind();\n\n        // We do NOT currently support unbalanced update, i.e., EXACT_TOKENS_IN_FOR_BPT_OUT or TOKEN_IN_FOR_EXACT_BPT_OUT\n        if (kind == BaseWeightedPool.JoinKind.ALL_TOKENS_IN_FOR_EXACT_BPT_OUT) {\n            (bptAmountOut, amountsIn) = _joinAllTokensInForExactBPTOut(balances, userData);\n        } else {\n            _revert(Errors.UNHANDLED_JOIN_KIND);\n        }\n    }\n\n    function _joinAllTokensInForExactBPTOut(uint256[] memory balances, bytes memory userData)\n        internal\n        view\n        override\n        returns (uint256, uint256[] memory)\n    {\n        uint256 bptAmountOut = userData.allTokensInForExactBptOut();\n        // Note that there is no maximum amountsIn parameter: this is handled by `IVault.joinPool`.\n\n        uint256[] memory amountsIn = GyroPoolMath._calcAllTokensInGivenExactBptOut(balances, bptAmountOut, totalSupply());\n\n        return (bptAmountOut, amountsIn);\n    }\n\n    /**\n     * @dev Called whenever the Pool is exited.\n     *\n     * Returns the amount of BPT to burn, the token amounts for each Pool token that the Pool will grant in return, and\n     * the number of tokens to pay in protocol swap fees.\n     *\n     * Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n     * performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n     *\n     * BPT will be burnt from `sender`.\n     *\n     * The Pool will grant tokens to `recipient`. These amounts are considered upscaled and will be downscaled\n     * (rounding down) before being returned to the Vault.\n     *\n     * Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onExitPool`). These\n     * amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n     *\n     * protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way\n     */\n    function _onExitPool(\n        bytes32,\n        address,\n        address,\n        uint256[] memory balances,\n        uint256 lastChangeBlock,\n        uint256, // protocolSwapFeePercentage,\n        bytes memory userData\n    )\n        internal\n        override\n        returns (\n            uint256 bptAmountIn,\n            uint256[] memory amountsOut,\n            uint256[] memory dueProtocolFeeAmounts\n        )\n    {\n        // Exits are not completely disabled while the contract is paused: proportional exits (exact BPT in for tokens\n        // out) remain functional.\n        (GyroECLPMath.Params memory eclpParams, GyroECLPMath.DerivedParams memory derivedECLPParams) = reconstructECLPParams();\n\n        // Note: If the contract is paused, swap protocol fee amounts are not charged and the oracle is not updated\n        // to avoid extra calculations and reduce the potential for errors.\n        if (_isNotPaused()) {\n            // Due protocol swap fee amounts are computed by measuring the growth of the invariant between the previous\n            // join or exit event and now - the invariant's growth is due exclusively to swap fees. This avoids\n            // spending gas calculating the fees on each individual swap.\n            uint256 invariantBeforeAction = GyroECLPMath.calculateInvariant(balances, eclpParams, derivedECLPParams);\n\n            // Update price oracle with the pre-exit balances. Vs other pools, we need to do this after invariant is calculated\n            _updateOracle(lastChangeBlock, balances, invariantBeforeAction, eclpParams, derivedECLPParams);\n\n            _distributeFees(invariantBeforeAction);\n\n            (bptAmountIn, amountsOut) = _doExit(balances, userData);\n\n            // Since we pay fees in BPT, they have not changed the invariant and 'invariantBeforeAction' is still consistent with\n            // 'balances'. Therefore, we can use a simplified method to update the invariant that does not require a full\n            // re-computation.\n            // Note: Should this be changed in the future, we also need to reduce the invariant proportionally by the total\n            // protocol fee factor.\n            _lastInvariant = GyroPoolMath.liquidityInvariantUpdate(invariantBeforeAction, bptAmountIn, totalSupply(), false);\n\n            emit InvariantOldAndNew(invariantBeforeAction, _lastInvariant);\n        } else {\n            // Note: If the contract is paused, swap protocol fee amounts are not charged and the oracle is not updated\n            // to avoid extra calculations and reduce the potential for errors.\n            (bptAmountIn, amountsOut) = _doExit(balances, userData);\n\n            // Invalidate _lastInvariant. We do not compute the invariant to make sure the pool is not locking\n            // up b/c numerical limits might be violated. Instead, we set the invariant such that any following\n            // (non-paused) join/exit will ignore and recompute it. (see GyroPoolMath._calcProtocolFees())\n            _lastInvariant = type(uint256).max;\n        }\n\n        // returns a new uint256[](2) b/c Balancer vault is expecting a fee array, but fees paid in BPT instead\n        return (bptAmountIn, amountsOut, new uint256[](2));\n    }\n\n    function _doExit(uint256[] memory balances, bytes memory userData) internal view returns (uint256 bptAmountIn, uint256[] memory amountsOut) {\n        BaseWeightedPool.ExitKind kind = userData.exitKind();\n\n        // We do NOT support unbalanced exit at the moment, i.e., EXACT_BPT_IN_FOR_ONE_TOKEN_OUT or\n        // BPT_IN_FOR_EXACT_TOKENS_OUT.\n        if (kind == BaseWeightedPool.ExitKind.EXACT_BPT_IN_FOR_TOKENS_OUT) {\n            (bptAmountIn, amountsOut) = _exitExactBPTInForTokensOut(balances, userData);\n        } else {\n            _revert(Errors.UNHANDLED_EXIT_KIND);\n        }\n    }\n\n    function _exitExactBPTInForTokensOut(uint256[] memory balances, bytes memory userData)\n        internal\n        view\n        override\n        returns (uint256, uint256[] memory)\n    {\n        // This exit function is the only one that is not disabled if the contract is paused: it remains unrestricted\n        // in an attempt to provide users with a mechanism to retrieve their tokens in case of an emergency.\n        // This particular exit function is the only one that remains available because it is the simplest one, and\n        // therefore the one with the lowest likelihood of errors.\n\n        uint256 bptAmountIn = userData.exactBptInForTokensOut();\n        // Note that there is no minimum amountOut parameter: this is handled by `IVault.exitPool`.\n\n        uint256[] memory amountsOut = GyroPoolMath._calcTokensOutGivenExactBptIn(balances, bptAmountIn, totalSupply());\n        return (bptAmountIn, amountsOut);\n    }\n\n    // Helpers.\n\n    function _balancesFromTokenInOut(\n        uint256 balanceTokenIn,\n        uint256 balanceTokenOut,\n        bool tokenInIsToken0\n    ) internal pure returns (uint256[] memory balances) {\n        balances = new uint256[](2);\n        if (tokenInIsToken0) {\n            balances[0] = balanceTokenIn;\n            balances[1] = balanceTokenOut;\n        } else {\n            balances[0] = balanceTokenOut;\n            balances[1] = balanceTokenIn;\n        }\n    }\n\n    /**\n     * @dev Updates the Price Oracle based on the Pool's current state (balances, BPT supply and invariant). Must be\n     * called on *all* state-changing functions with the balances *before* the state change happens, and with\n     * `lastChangeBlock` as the number of the block in which any of the balances last changed.\n     */\n    function _updateOracle(\n        uint256 lastChangeBlock,\n        uint256[] memory balances,\n        uint256 invariant,\n        GyroECLPMath.Params memory eclpParams,\n        GyroECLPMath.DerivedParams memory derivedECLPParams\n    ) internal {\n        bytes32 miscData = _miscData;\n        if (miscData.oracleEnabled() && block.number > lastChangeBlock) {\n            uint256 spotPrice = GyroECLPMath.calculatePrice(balances, eclpParams, derivedECLPParams, invariant.toInt256());\n\n            int256 logSpotPrice = GyroECLPOracleMath._calcLogSpotPrice(spotPrice);\n\n            // // can optionally log BPT spot price using this code. Instead, we log L/S\n            // int256 logBPTPrice = GyroECLPOracleMath._calcLogBPTPrice(\n            //     balances[0],\n            //     balances[1],\n            //     spotPrice,\n            //     miscData.logTotalSupply()\n            // );\n\n            int256 logInvariantDivSupply = GyroECLPOracleMath._calcLogInvariantDivSupply(invariant, miscData.logTotalSupply());\n\n            uint256 oracleCurrentIndex = miscData.oracleIndex();\n            uint256 oracleCurrentSampleInitialTimestamp = miscData.oracleSampleCreationTimestamp();\n            uint256 oracleUpdatedIndex = _processPriceData(\n                oracleCurrentSampleInitialTimestamp,\n                oracleCurrentIndex,\n                logSpotPrice,\n                logInvariantDivSupply, // replaces logBPTPrice\n                miscData.logInvariant()\n            );\n\n            if (oracleCurrentIndex != oracleUpdatedIndex) {\n                // solhint-disable not-rely-on-time\n                miscData = miscData.setOracleIndex(oracleUpdatedIndex);\n                miscData = miscData.setOracleSampleCreationTimestamp(block.timestamp);\n                _miscData = miscData;\n\n                emit OracleIndexUpdated(oracleUpdatedIndex);\n            }\n        }\n    }\n\n    // Override unused inherited function\n    // this intentionally does not revert so that it will be bypassed on onJoinPool inherited from ExtensibleWeightedPool2Tokens\n    // the above overloading implementation of _updateOracle takes different arguments and processes the oracle update in a different place\n    // Note: this is identical to the handling in Gyro2CLPPool.sol\n    function _updateOracle(\n        uint256,\n        uint256,\n        uint256\n    ) internal pure override {\n        // solhint-disable-previous-line no-empty-blocks\n        // Do nothing.\n    }\n\n    // Fee helpers. These are exactly the same as in the Gyro2CLPPool.\n    // TODO prob about time to make a base class.\n\n    /**\n     * Note: This function is identical to that used in Gyro2CLPPool.sol\n     * @dev Computes and distributes fees between the Balancer and the Gyro treasury\n     * The fees are computed and distributed in BPT rather than using the\n     * Balancer regular distribution mechanism which would pay these in underlying\n     */\n\n    function _distributeFees(uint256 invariantBeforeAction) internal {\n        // calculate Protocol fees in BPT\n        // lastInvariant is the invariant logged at the end of the last liquidity update\n        // protocol fees are calculated on swap fees earned between liquidity updates\n        (uint256 gyroFees, uint256 balancerFees, address gyroTreasury, address balTreasury) = _getDueProtocolFeeAmounts(\n            _lastInvariant,\n            invariantBeforeAction\n        );\n\n        // Pay fees in BPT\n        _payFeesBpt(gyroFees, balancerFees, gyroTreasury, balTreasury);\n    }\n\n    /**\n     * Note: This function is identical to that used in Gyro2CLPPool.sol\n     * @dev this function overrides inherited function to make sure it is never used\n     */\n    function _getDueProtocolFeeAmounts(\n        uint256[] memory, // balances,\n        uint256[] memory, // normalizedWeights,\n        uint256, // previousInvariant,\n        uint256, // currentInvariant,\n        uint256 // protocolSwapFeePercentage\n    ) internal pure override returns (uint256[] memory) {\n        revert(\"Not implemented\");\n    }\n\n    /**\n     * @dev\n     * Note: This function is identical to that used in Gyro2CLPPool.sol.\n     * Calculates protocol fee amounts in BPT terms.\n     * protocolSwapFeePercentage is not used here b/c we take parameters from GyroConfig instead.\n     * Returns: BPT due to Gyro, BPT due to Balancer, receiving address for Gyro fees, receiving address for Balancer\n     * fees.\n     */\n    function _getDueProtocolFeeAmounts(uint256 previousInvariant, uint256 currentInvariant)\n        internal\n        view\n        returns (\n            uint256,\n            uint256,\n            address,\n            address\n        )\n    {\n        (uint256 protocolSwapFeePerc, uint256 protocolFeeGyroPortion, address gyroTreasury, address balTreasury) = _getFeesMetadata();\n\n        // Early return if the protocol swap fee percentage is zero, saving gas.\n        if (protocolSwapFeePerc == 0) {\n            return (0, 0, gyroTreasury, balTreasury);\n        }\n\n        // Calculate fees in BPT\n        (uint256 gyroFees, uint256 balancerFees) = GyroPoolMath._calcProtocolFees(\n            previousInvariant,\n            currentInvariant,\n            totalSupply(),\n            protocolSwapFeePerc,\n            protocolFeeGyroPortion\n        );\n\n        return (gyroFees, balancerFees, gyroTreasury, balTreasury);\n    }\n\n    // Note: This function is identical to that used in Gyro2CLPPool.sol\n    function _payFeesBpt(\n        uint256 gyroFees,\n        uint256 balancerFees,\n        address gyroTreasury,\n        address balTreasury\n    ) internal {\n        // Pay fees in BPT to gyro treasury\n        if (gyroFees > 0) {\n            _mintPoolTokens(gyroTreasury, gyroFees);\n        }\n        // Pay fees in BPT to bal treasury\n        if (balancerFees > 0) {\n            _mintPoolTokens(balTreasury, balancerFees);\n        }\n    }\n\n    // Note: This function is identical to that used in Gyro2CLPPool.sol\n    function _getFeesMetadata()\n        internal\n        view\n        returns (\n            uint256,\n            uint256,\n            address,\n            address\n        )\n    {\n        return (\n            gyroConfig.getUint(GyroConfigKeys.PROTOCOL_SWAP_FEE_PERC_KEY),\n            gyroConfig.getUint(GyroConfigKeys.PROTOCOL_FEE_GYRO_PORTION_KEY),\n            gyroConfig.getAddress(GyroConfigKeys.GYRO_TREASURY_KEY),\n            gyroConfig.getAddress(GyroConfigKeys.BAL_TREASURY_KEY)\n        );\n    }\n\n    function _setPausedState(bool paused) internal override {\n        _setPaused(paused);\n    }\n}\n", "sourceMap": "1388:28445:20:-:0;;;873:95:85;820:148;;2925:4:15;2878:51;;;;2935;;3251:1;3201:51;;2997:1370:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3200:19;;;;;3139:17;;;;;3158:16;;;;;3096:17;;5089:26:15;;;;5117:27;;;;4975:11;;;;;4988:13;;;;;5003:12;;2020:280:83;;;;;;;;;;;-1:-1:-1;;;2020:280:83;;;;5047:12:15;;;;4935:10;1929:46:65;;;1749:14:51;;;;-1:-1:-1;;;;;;1749:14:51;;;;2002:13:84;;3200:19:20;;3139:17;;3158:16;;3096:17;;5089:26:15;;5117:27;;4975:11;;4988:13;4975:11;;;;;;4988:13;;2002::84;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2025:17:84;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2052:9:84;:14;;2064:2;-1:-1:-1;;2052:14:84;;;;;;-1:-1:-1;2100:22:83;;;;;;;2085:37;;2150:25;;;;;2132:43;;-1:-1:-1;2198:95:83;2052:14:84;2185:108:83;1852:14:48::2;::::0;-1:-1:-1;;;;;;1852:14:48;::::2;::::0;-1:-1:-1;2458:93:75;;-1:-1:-1;2164:7:75;2467:49;;;8518:3:66;2458:8:75;:93::i;:::-;2561:96;2232:7;2570:51;;;8582:3:66;2561:8:75;:96::i;:::-;2697:15;:37;;;;2745:40;;;;2818:41;2795:64;;5185:15:15::4;::::0;;5198:1:::4;5185:15:::0;;;;;::::4;::::0;;2668:26:75;;5185:15:15::4;::::0;::::4;::::0;;::::4;::::0;::::4;;::::0;-1:-1:-1;5185:15:15::4;5160:40;;5222:6;:13;;;5210:6;5217:1;5210:9;;;;;;;;-1:-1:-1::0;;;;;5210:25:15;;::::4;:9;::::0;;::::4;::::0;;;;;;;:25;5257:13:::4;::::0;::::4;::::0;5245:9;;:6;;-1:-1:-1;;5245:9:15;::::4;;;;;-1:-1:-1::0;;;;;5245:25:15;;::::4;:9;::::0;;::::4;::::0;;;;;;:25;5435:40:::4;::::0;5468:6;;5435:32:::4;;::::0;::::4;;:40:::0;::::4;:::i;:::-;5504:20;::::0;::::4;::::0;5486:39:::4;::::0;:17:::4;:39::i;:::-;5557:24;::::0;::::4;::::0;5535:47:::4;::::0;:21:::4;:47::i;:::-;5610:12:::0;;:62:::4;::::0;-1:-1:-1;;;5610:62:15;;5593:14:::4;::::0;-1:-1:-1;;;;;5610:25:15::4;::::0;-1:-1:-1;;5610:62:15::4;::::0;5636:35:::4;::::0;5610:62:::4;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5736:12:::0;;5780:16:::4;::::0;;5794:1:::4;5780:16:::0;;;;;::::4;::::0;;5593:79;;-1:-1:-1;;;;;;5736:27:15;;::::4;::::0;::::4;::::0;5593:79;;5772:6;;5794:1;5780:16:::4;::::0;::::4;::::0;;::::4;::::0;::::4;;::::0;-1:-1:-1;5780:16:15::4;5736:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;::::0;::::4;;;;;-1:-1:-1::0;;;5897:16:15::4;::::0;;;-1:-1:-1;5934:13:15::4;::::0;;::::4;::::0;;5924:23;;-1:-1:-1;;;;;;5924:23:15;;;::::4;::::0;5967:13:::4;::::0;::::4;::::0;5957:23;;;;;;::::4;::::0;6031:13;6009:36:::4;::::0;:21:::4;:36::i;:::-;5991:54;::::0;6095:13:::4;::::0;::::4;::::0;6073:36:::4;::::0;:21:::4;:36::i;:::-;6055:54;::::0;-1:-1:-1;;1085:15:14;;;;;;;;;;;;-1:-1:-1;;;1085:15:14;;;;;-1:-1:-1;;;;;;1058:25:14;;1050:51;;;;-1:-1:-1;;;1050:51:14;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;1111:10:14;:24;;-1:-1:-1;;;;;;1111:24:14;-1:-1:-1;;;;;1111:24:14;;;;;;1169:17;;1145:10;:41;;1223:20;;;;1276:16;;;;;-1:-1:-1;;1145:41:14;;;;;;;;;;-1:-1:-1;;1196:47:14;-1:-1:-1;;;;;;1196:47:14;;;;;;;;;;;-1:-1:-1;;;;;1253:39:14;;;-1:-1:-1;;;1253:39:14;;;;;;;;501:63:17;;511:27;;;;4475:3:43;501:9:17;:63::i;:::-;574:12;:28;;-1:-1:-1;;;;;;574:28:17;-1:-1:-1;;;;;574:28:17;;;;;;3235:84:20::3;::::0;3245:29;::::3;::::0;::::3;830:3:21;3235:9:20;:84::i;:::-;3330:46;3358:6;:17;;;3330:27;;;;;:46;;:::i;:::-;3391:25;3411:4;3391:25;;;;;;:::i;:::-;;;;;;;;3468:17;::::0;::::3;::::0;3487:24:::3;::::0;;::::3;::::0;3427:85;;-1:-1:-1;;;3427:85:20;;:12:::3;::::0;-1:-1:-1;;3427:85:20::3;::::0;::::3;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;3527:32;3554:4;3527:32;;;;;;:::i;:::-;;;;;;;;3649:17;::::0;;::::3;::::0;:23;;3686:22;;::::3;::::0;3722:19:::3;::::0;;::::3;::::0;3755::::3;::::0;;::::3;::::0;3788:24:::3;::::0;;::::3;::::0;3570:252:::3;::::0;::::3;::::0;::::3;::::0;;;;::::3;::::0;;;;::::3;::::0;;;;3918:24;;::::3;::::0;:33;;:35;;3967;;::::3;::::0;4016:32;;::::3;::::0;:34;;4064;::::3;::::0;4112:26;;::::3;::::0;4152;;::::3;::::0;4192;;::::3;::::0;4232::::3;::::0;::::3;::::0;4272:28:::3;::::0;;::::3;::::0;3833:477:::3;::::0;::::3;::::0;;;;::::3;::::0;;;;::::3;::::0;;;;::::3;::::0;;;;::::3;::::0;::::3;::::0;;;;::::3;::::0;;;;::::3;::::0;;;;4321:10:::3;:39:::0;;-1:-1:-1;;;;;;4321:39:20::3;-1:-1:-1::0;;;;;4321:39:20;;::::3;::::0;;;::::3;::::0;;1388:28445;;866:101:66;935:9;930:34;;946:18;954:9;946:7;:18::i;:::-;866:101;;:::o;1135:274:72:-;1345:5;1369:33;1345:5;1369:19;:33::i;8557:158:15:-;8629:35;8656:7;8629:9;;:26;;;;;;:35;;;;:::i;:::-;8617:9;:47;8679:29;;;;;;8700:7;;8679:29;:::i;:::-;;;;;;;;8557:158;:::o;7279:397::-;7355:87;2487:4;7364:45;;;5289:3:66;7355:8:15;:87::i;:::-;7452;2560:4;7461:45;;;5228:3:66;7452:8:15;:87::i;:::-;7562:49;7593:17;7562:9;;:30;;;;;;:49;;;;:::i;:::-;7550:9;:61;7626:43;;;;;;7651:17;;7626:43;:::i;39636:399::-;39703:7;39802:21;39840:5;-1:-1:-1;;;;;39826:30:15;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;39802:56;;;;39933:26;39962:27;39971:2;39975:13;39962:8;;;;;:27;;:::i;:::-;40006:2;:22;;-1:-1:-1;;;39636:399:15;;;;:::o;256:103:43:-;326:9;321:35;;337:19;346:9;337:8;:19::i;3962:704:18:-;4032:85;4047:6;:8;;;4042:1;:13;;:32;;;;;1031:4;4059:6;:8;;;:15;;4042:32;1019:3:21;4032:9:18;:85::i;:::-;4127;4142:6;:8;;;4137:1;:13;;:32;;;;;1031:4;4154:6;:8;;;:15;;1019:3:21;4127:9:18;:85::i;:::-;4243:27;;;;;;;;4251:8;;;;4243:27;;4261:8;;;;4243:27;;;;4223:17;4297:18;4243:27;;4297:10;:18::i;:::-;4280:35;-1:-1:-1;4341:194:18;4364:36;:47;-1:-1:-1;4364:47:18;;;:98;;-1:-1:-1;4426:36:18;4415:47;;;4364:98;1087:3:21;4341:9:18;:194::i;:::-;4546:113;4561:6;:13;;;4556:1;:18;;:58;;;;;1518:4;4578:6;:13;;;:36;;4556:58;1327:3:21;4546:9:18;:113::i;:::-;3962:704;;;:::o;1074:3172:66:-;-1:-1:-1;;;3588:3:66;3581:79;;;3799:66;3793:4;3786:80;3941:1;3935:4;3928:15;2210:2;2243:18;;;2336;;;2383;;;2215:4;2379:29;;;3057:2;3053:17;2195:18;;;;2288;;;;2284:29;;;;3040:1;3036:14;3025:26;;;;3021:50;;;;2999:73;;2994:3;2990:83;4008:4;4001:26;4234:3;;4224:14;1415:374:72;1511:1;1496:5;:12;:16;1492:53;;;1528:7;;1492:53;1555:16;1574:5;1580:1;1574:8;;;;;;;;;;;;;;1555:27;;1597:9;1609:1;1597:13;;1592:191;1616:5;:12;1612:1;:16;1592:191;;;1649:15;1667:5;1673:1;1667:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;1689:51:72;-1:-1:-1;;;;;1698:18:72;;;;;;;4890:3:66;1689:8:72;:51::i;:::-;1765:7;-1:-1:-1;1630:3:72;;1592:191;;1415:374;;:::o;4808:172:63:-;4892:7;4918:55;4934:14;2092:2;4918:4;:15;;;;;;:55;;;;;:::i;:::-;4911:62;4808:172;-1:-1:-1;;;4808:172:63:o;5083:194::-;5178:7;5204:66;5222:18;2155:2;5204:4;:17;;;;;;:66;;;;;:::i;948:166:79:-;1006:7;1025:37;1034:6;;;;4370:1:66;1025:8:79;:37::i;:::-;-1:-1:-1;1084:5:79;;;948:166::o;793:128:43:-;841:29;850:9;-1:-1:-1;;;841:8:43;:29::i;6334:164:18:-;6415:10;6443:48;6469:21;6485:2;:4;;;6469:2;:4;;;:15;;;;;;:21;;;;:::i;:::-;6459:4;;6443;;:21;;:15;;;;;;;:21;;:::i;:::-;:25;;;;;;:48;;;;:::i;3094:280:76:-;3209:7;2126:10;3276:17;;3274:20;3258:36;;3287:6;3342:5;:13;;3354:1;3342:13;;;3350:1;3342:13;3334:22;;:32;;3312:55;;3094:280;-1:-1:-1;;;;3094:280:76:o;6887:269::-;-1:-1:-1;7074:18:76;;7072:21;7056:37;;;;7133:15;;7111:38;;6887:269::o;1028:3379:43:-;-1:-1:-1;;;1091:18:43;3742:79;;;3960:66;3954:4;3947:80;4102:1;4096:4;4089:15;2230:2;2263:18;;;2308;;;2235:4;2304:29;;;3106:1;3197:14;2215:18;;;;3186:26;;;;2356:18;;;;2403;;;2399:29;;3218:2;3214:17;3182:50;3096:4;3102:18;;;;;;3092:29;3088:2;3084:38;3161:72;;;;3156:3;3152:82;4169:4;4162:26;1120:14;;;;;4395:3;;4385:14;2480:222:46;2543:6;2578:5;;;2599:6;;;:26;;;2624:1;2619;2609:7;:11;;;;;;:16;2599:26;2593:71;;2628:36;2637:5;4467:1:66;2628:8:46;:36::i;:::-;1348:4;2682:13;;;;-1:-1:-1;;;2480:222:46:o;1647:266::-;1703:6;1805:5;;;1826:6;;;;:23;;1848:1;1844;:5;1826:23;;;1840:1;1835;:6;;1826:23;1820:68;;1852:36;1861:5;;1852:8;:36::i;1388:28445:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1388:28445:20;;;-1:-1:-1;1388:28445:20;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:179:129;95:13;;-1:-1:-1;;;;;137:31:129;;127:42;;117:2;;183:1;180;173:12;198:166;276:13;;325;;318:21;308:32;;298:2;;354:1;351;344:12;369:505;;478:3;471:4;463:6;459:17;455:27;445:2;;500:5;493;486:20;445:2;527:13;;-1:-1:-1;552:26:129;;549:2;;;581:9;549:2;616:54;664:4;-1:-1:-1;;658:2:129;639:13;;635:27;631:38;616:54;:::i;:::-;695:2;686:7;679:19;741:3;734:4;729:2;721:6;717:15;713:26;710:35;707:2;;;762:5;755;748:20;707:2;779:64;840:2;833:4;824:7;820:18;813:4;805:6;801:17;779:64;:::i;:::-;861:7;435:439;-1:-1:-1;;;;435:439:129:o;879:783::-;;997:4;985:9;980:3;976:19;972:30;969:2;;;1019:5;1012;1005:20;969:2;1056;1050:9;1098:4;1086:17;;1154:22;;;-1:-1:-1;1118:34:129;;1115:62;1112:2;;;1180:9;1112:2;1207;1200:22;1240:6;-1:-1:-1;1240:6:129;1270:39;1299:9;1270:39;:::i;:::-;1255:55;;1355:2;1340:18;;1334:25;-1:-1:-1;;;;;1390:33:129;;1378:46;;1368:2;;1438:1;1435;1428:12;1368:2;1470;1458:15;;1451:32;1528:2;1513:18;;1507:25;-1:-1:-1;;;;;1563:33:129;;1551:46;;1541:2;;1611:1;1608;1601:12;1541:2;1643;1631:15;;;;1624:32;959:703;;-1:-1:-1;;959:703:129:o;1667:865::-;;1789:6;1777:9;1772:3;1768:19;1764:32;1761:2;;;1813:5;1806;1799:20;1761:2;1850;1844:9;1892:4;1880:17;;1948:22;;;-1:-1:-1;1912:34:129;;1909:62;1906:2;;;1974:9;1906:2;2001;1994:22;2034:6;-1:-1:-1;2034:6:129;2064:55;2115:3;2104:9;2064:55;:::i;:::-;2056:6;2049:71;2155:64;2215:3;2210:2;2199:9;2195:18;2155:64;:::i;:::-;2148:4;2140:6;2136:17;2129:91;2274:3;2263:9;2259:19;2253:26;2248:2;2240:6;2236:15;2229:51;2336:3;2325:9;2321:19;2315:26;2308:4;2300:6;2296:17;2289:53;2397:3;2386:9;2382:19;2376:26;2370:3;2362:6;2358:16;2351:52;2458:4;2447:9;2443:20;2437:27;2431:3;2423:6;2419:16;2412:53;2520:3;2509:9;2505:19;2499:26;2493:3;2485:6;2481:16;2474:52;;1751:781;;;;:::o;2537:1251::-;;2641:6;2684:2;2672:9;2667:3;2663:19;2659:28;2656:2;;;2704:5;2697;2690:20;2656:2;2730:18;2745:2;2730:18;:::i;:::-;2721:27;;;2771:42;2803:9;2771:42;:::i;:::-;2757:57;;2858:2;2843:18;;2837:25;-1:-1:-1;2911:14:129;;;2908:2;;;2938:1;2935;2928:12;2908:2;2974:59;3029:3;3020:6;3009:9;3005:22;2974:59;:::i;:::-;2969:2;2962:5;2958:14;2951:83;3080:2;3069:9;3065:18;3059:25;3043:41;;3109:2;3099:8;3096:16;3093:2;;;3125:1;3122;3115:12;3093:2;;3161:61;3218:3;3207:8;3196:9;3192:24;3161:61;:::i;:::-;3156:2;3149:5;3145:14;3138:85;;3255:51;3302:2;3291:9;3287:18;3255:51;:::i;:::-;3250:2;3243:5;3239:14;3232:75;3340:52;3387:3;3376:9;3372:19;3340:52;:::i;:::-;3334:3;3327:5;3323:15;3316:77;3447:3;3436:9;3432:19;3426:26;3420:3;3413:5;3409:15;3402:51;3507:3;3496:9;3492:19;3486:26;3480:3;3473:5;3469:15;3462:51;3567:3;3556:9;3552:19;3546:26;3540:3;3533:5;3529:15;3522:51;3592:3;3627:48;3671:2;3660:9;3656:18;3627:48;:::i;:::-;3611:14;;;3604:72;3695:3;3730:51;3762:18;;;3730:51;:::i;:::-;3714:14;;;3707:75;3718:5;2621:1167;-1:-1:-1;;2621:1167:129:o;3793:649::-;;3908:4;3896:9;3891:3;3887:19;3883:30;3880:2;;;3930:5;3923;3916:20;3880:2;3967;3961:9;4009:4;3997:17;;4065:22;;;-1:-1:-1;4029:34:129;;4026:62;4023:2;;;4091:9;4023:2;4122:10;4118:2;4111:22;;4151:6;4142:15;;4187:9;4181:16;4173:6;4166:32;4252:2;4241:9;4237:18;4231:25;4226:2;4218:6;4214:15;4207:50;4311:2;4300:9;4296:18;4290:25;4285:2;4277:6;4273:15;4266:50;4370:2;4359:9;4355:18;4349:25;4344:2;4336:6;4332:15;4325:50;4430:3;4419:9;4415:19;4409:26;4403:3;4395:6;4391:16;4384:52;;3870:572;;;;:::o;4447:475::-;;4563:4;4551:9;4546:3;4542:19;4538:30;4535:2;;;4585:5;4578;4571:20;4535:2;4622:4;4616:11;;;4654:17;;4722:22;;;-1:-1:-1;4686:34:129;;4683:62;4680:2;;;4748:9;4680:2;4775:4;4768:24;4840:16;;4825:32;;4911:2;4896:18;;;4890:25;4873:15;;;4866:50;;;;-1:-1:-1;4810:6:129;4525:397;-1:-1:-1;4525:397:129:o;4927:194::-;;5050:2;5038:9;5029:7;5025:23;5021:32;5018:2;;;5071:6;5063;5056:22;5018:2;-1:-1:-1;5099:16:129;;5008:113;-1:-1:-1;5008:113:129:o;5126:1219::-;;;5295:2;5283:9;5274:7;5270:23;5266:32;5263:2;;;5316:6;5308;5301:22;5263:2;5348:16;;-1:-1:-1;5413:14:129;;;5410:2;;;5445:6;5437;5430:22;5410:2;5473:22;;;;5529:6;5511:16;;;5507:29;5504:2;;;5554:6;5546;5539:22;5504:2;5585:20;5600:4;5585:20;:::i;:::-;5636:2;5630:9;5664:2;5654:8;5651:16;5648:2;;;5685:6;5677;5670:22;5648:2;5717:73;5782:7;5771:8;5767:2;5763:17;5717:73;:::i;:::-;5710:5;5703:88;;5823:60;5875:7;5870:2;5866;5862:11;5823:60;:::i;:::-;5818:2;5811:5;5807:14;5800:84;5916:69;5977:7;5970:4;5966:2;5962:13;5916:69;:::i;:::-;5911:2;5904:5;5900:14;5893:93;6020:45;6060:3;6056:2;6052:12;6020:45;:::i;:::-;6013:4;6006:5;6002:16;5995:71;6100:64;6156:7;6150:3;6146:2;6142:12;6100:64;:::i;:::-;6093:4;6086:5;6082:16;6075:90;6199:45;6239:3;6235:2;6231:12;6199:45;:::i;:::-;6192:4;6181:16;;6174:71;6185:5;-1:-1:-1;6288:51:129;;-1:-1:-1;;6335:2:129;6320:18;;6288:51;:::i;:::-;6278:61;;5253:1092;;;;;:::o;6350:293::-;;6471:2;6459:9;6450:7;6446:23;6442:32;6439:2;;;6492:6;6484;6477:22;6439:2;6529:9;6523:16;6579:4;6572:5;6568:16;6561:5;6558:27;6548:2;;6604:6;6596;6589:22;6648:151;6724:12;;6712:25;;6786:4;6775:16;;;6769:23;6753:14;;6746:47;6702:97::o;6804:187::-;6969:14;;6962:22;6944:41;;6932:2;6917:18;;6899:92::o;6996:1296::-;;7308:2;7297:9;7293:18;7338:6;7327:9;7320:25;7364:2;7402;7397;7386:9;7382:18;7375:30;7425:6;7460;7454:13;7491:6;7483;7476:22;7529:3;7518:9;7514:19;7507:26;;7568:2;7560:6;7556:15;7542:29;;7589:4;7602:195;7616:6;7613:1;7610:13;7602:195;;;7681:13;;-1:-1:-1;;;;;7677:39:129;7665:52;;7772:15;;;;7737:12;;;;-1:-1:-1;7631:9:129;7602:195;;;-1:-1:-1;;7833:19:129;;;7828:2;7813:18;;7806:47;7903:13;;7925:21;;;7964:12;;;;-1:-1:-1;8001:15:129;;;;8036:4;8049:215;8065:8;8060:3;8057:17;8049:215;;;8138:15;;-1:-1:-1;;;;;8134:41:129;8120:56;;8198:14;;;;8237:17;;;;-1:-1:-1;8084:11:129;8049:215;;;-1:-1:-1;8281:5:129;;7269:1023;-1:-1:-1;;;;;;;;7269:1023:129:o;8297:246::-;8453:2;8438:18;;8486:1;8475:13;;8465:2;;8492:9;8465:2;8512:25;;;8420:123;:::o;8548:383::-;;8697:2;8686:9;8679:21;8729:6;8723:13;8772:6;8767:2;8756:9;8752:18;8745:34;8788:66;8847:6;8842:2;8831:9;8827:18;8822:2;8814:6;8810:15;8788:66;:::i;:::-;8915:2;8894:15;-1:-1:-1;;8890:29:129;8875:45;;;;8922:2;8871:54;;8669:262;-1:-1:-1;;8669:262:129:o;8936:1090::-;;9216:3;9205:9;9201:19;9193:27;;9253:6;9247:13;9236:9;9229:32;9317:4;9309:6;9305:17;9299:24;9292:4;9281:9;9277:20;9270:54;9380:4;9372:6;9368:17;9362:24;9355:4;9344:9;9340:20;9333:54;9443:4;9435:6;9431:17;9425:24;9418:4;9407:9;9403:20;9396:54;9506:4;9498:6;9494:17;9488:24;9481:4;9470:9;9466:20;9459:54;9522:64;9581:3;9570:9;9566:19;9557:6;9551:13;9522:64;:::i;:::-;9633:4;9625:6;9621:17;9615:24;9648:63;9706:3;9695:9;9691:19;9677:12;9648:63;:::i;:::-;;9766:4;9758:6;9754:17;9748:24;9742:3;9731:9;9727:19;9720:53;9828:4;9820:6;9816:17;9810:24;9804:3;9793:9;9789:19;9782:53;9890:4;9882:6;9878:17;9872:24;9866:3;9855:9;9851:19;9844:53;9952:3;9944:6;9940:16;9934:23;9928:3;9917:9;9913:19;9906:52;10013:4;10005:6;10001:17;9995:24;9989:3;9978:9;9974:19;9967:53;9183:843;;;;;:::o;10031:177::-;10177:25;;;10165:2;10150:18;;10132:76::o;10213:242::-;10283:2;10277:9;10313:17;;;10381:22;;;-1:-1:-1;10345:34:129;;10342:62;10339:2;;;10407:9;10339:2;10434;10427:22;10257:198;;-1:-1:-1;10257:198:129:o;10460:258::-;10532:1;10542:113;10556:6;10553:1;10550:13;10542:113;;;10632:11;;;10626:18;10613:11;;;10606:39;10578:2;10571:10;10542:113;;;10673:6;10670:1;10667:13;10664:2;;;10708:1;10699:6;10694:3;10690:16;10683:27;10664:2;;10513:205;;;:::o;:::-;1388:28445:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/eclp/GyroECLPPool.sol", "type": "contract", "deployment": {"address": "0xE0711573a96806182C01Ef6C349948edc6635b04", "chainid": "5", "blockHeight": 7933588}}