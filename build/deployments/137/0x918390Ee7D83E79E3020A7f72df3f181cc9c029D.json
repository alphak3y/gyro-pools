{"abi": [{"inputs": [{"components": [{"components": [{"internalType": "contract IVault", "name": "vault", "type": "address"}, {"internalType": "string", "name": "name", "type": "string"}, {"internalType": "string", "name": "symbol", "type": "string"}, {"internalType": "contract IERC20", "name": "token0", "type": "address"}, {"internalType": "contract IERC20", "name": "token1", "type": "address"}, {"internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}, {"internalType": "uint256", "name": "pauseWindowDuration", "type": "uint256"}, {"internalType": "uint256", "name": "bufferPeriodDuration", "type": "uint256"}, {"internalType": "address", "name": "owner", "type": "address"}], "internalType": "struct ExtensibleWeightedPool2Tokens.NewPoolParams", "name": "baseParams", "type": "tuple"}, {"internalType": "uint256", "name": "sqrtAlpha", "type": "uint256"}, {"internalType": "uint256", "name": "sqrtBeta", "type": "uint256"}, {"internalType": "address", "name": "capManager", "type": "address"}, {"components": [{"internalType": "bool", "name": "capEnabled", "type": "bool"}, {"internalType": "uint120", "name": "perAddressCap", "type": "uint120"}, {"internalType": "uint128", "name": "globalCap", "type": "uint128"}], "internalType": "struct ICappedLiquidity.CapParams", "name": "capParams", "type": "tuple"}, {"internalType": "address", "name": "pauseManager", "type": "address"}], "internalType": "struct Gyro2CLPPool.GyroParams", "name": "params", "type": "tuple"}, {"internalType": "address", "name": "configAddress", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "owner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "spender", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Approval", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "capManager", "type": "address"}], "name": "CapManagerUpdated", "type": "event"}, {"anonymous": false, "inputs": [{"components": [{"internalType": "bool", "name": "capEnabled", "type": "bool"}, {"internalType": "uint120", "name": "perAddressCap", "type": "uint120"}, {"internalType": "uint128", "name": "globalCap", "type": "uint128"}], "indexed": false, "internalType": "struct ICappedLiquidity.CapParams", "name": "params", "type": "tuple"}], "name": "CapParamsUpdated", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "oldPauseManager", "type": "address"}, {"indexed": false, "internalType": "address", "name": "newPauseManager", "type": "address"}], "name": "PauseManagerChanged", "type": "event"}, {"anonymous": false, "inputs": [], "name": "PausedLocally", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bool", "name": "paused", "type": "bool"}], "name": "PausedStateChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}], "name": "SwapFeePercentageChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "from", "type": "address"}, {"indexed": true, "internalType": "address", "name": "to", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Transfer", "type": "event"}, {"anonymous": false, "inputs": [], "name": "UnpausedLocally", "type": "event"}, {"inputs": [], "name": "DOMAIN_SEPARATOR", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "spender", "type": "address"}], "name": "allowance", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "approve", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "balanceOf", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "balanceTokenIn", "type": "uint256"}, {"internalType": "uint256", "name": "balanceTokenOut", "type": "uint256"}, {"internalType": "bool", "name": "tokenInIsToken0", "type": "bool"}], "name": "calculateCurrentValues", "outputs": [{"internalType": "uint256", "name": "currentInvariant", "type": "uint256"}, {"internalType": "uint256", "name": "virtualParamIn", "type": "uint256"}, {"internalType": "uint256", "name": "virtualParamOut", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "capManager", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "capParams", "outputs": [{"components": [{"internalType": "bool", "name": "capEnabled", "type": "bool"}, {"internalType": "uint120", "name": "perAddressCap", "type": "uint120"}, {"internalType": "uint128", "name": "globalCap", "type": "uint128"}], "internalType": "struct ICappedLiquidity.CapParams", "name": "", "type": "tuple"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_pauseManager", "type": "address"}], "name": "changePauseManager", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "decimals", "outputs": [{"internalType": "uint8", "name": "", "type": "uint8"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "decreaseAllowance", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes4", "name": "selector", "type": "bytes4"}], "name": "getActionId", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getActualSupply", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getAuthorizer", "outputs": [{"internalType": "contract IAuthorizer", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getInvariant", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getInvariantDivActualSupply", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getLastInvariant", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getMiscData", "outputs": [{"internalType": "int256", "name": "logInvariant", "type": "int256"}, {"internalType": "int256", "name": "logTotalSupply", "type": "int256"}, {"internalType": "uint256", "name": "oracleSampleCreationTimestamp", "type": "uint256"}, {"internalType": "uint256", "name": "oracleIndex", "type": "uint256"}, {"internalType": "bool", "name": "oracleEnabled", "type": "bool"}, {"internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getNormalizedWeights", "outputs": [{"internalType": "uint256[]", "name": "", "type": "uint256[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getOwner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getPausedState", "outputs": [{"internalType": "bool", "name": "paused", "type": "bool"}, {"internalType": "uint256", "name": "pauseWindowEndTime", "type": "uint256"}, {"internalType": "uint256", "name": "bufferPeriodEndTime", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getPoolId", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getPrice", "outputs": [{"internalType": "uint256", "name": "spotPrice", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getRate", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getSqrtParameters", "outputs": [{"internalType": "uint256[2]", "name": "", "type": "uint256[2]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getSwapFeePercentage", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getVault", "outputs": [{"internalType": "contract IVault", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getVirtualParameters", "outputs": [{"internalType": "uint256[]", "name": "virtualParams", "type": "uint256[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "gyroConfig", "outputs": [{"internalType": "contract IGyroConfig", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "addedValue", "type": "uint256"}], "name": "increaseAllowance", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "name", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}], "name": "nonces", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "onExitPool", "outputs": [{"internalType": "uint256[]", "name": "", "type": "uint256[]"}, {"internalType": "uint256[]", "name": "", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "onJoinPool", "outputs": [{"internalType": "uint256[]", "name": "amountsIn", "type": "uint256[]"}, {"internalType": "uint256[]", "name": "dueProtocolFeeAmounts", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"components": [{"internalType": "enum IVault.SwapKind", "name": "kind", "type": "uint8"}, {"internalType": "contract IERC20", "name": "tokenIn", "type": "address"}, {"internalType": "contract IERC20", "name": "tokenOut", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}, {"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "address", "name": "from", "type": "address"}, {"internalType": "address", "name": "to", "type": "address"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "internalType": "struct IPoolSwapStructs.SwapRequest", "name": "request", "type": "tuple"}, {"internalType": "uint256", "name": "balanceTokenIn", "type": "uint256"}, {"internalType": "uint256", "name": "balanceTokenOut", "type": "uint256"}], "name": "onSwap", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "pause", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "pauseManager", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "value", "type": "uint256"}, {"internalType": "uint256", "name": "deadline", "type": "uint256"}, {"internalType": "uint8", "name": "v", "type": "uint8"}, {"internalType": "bytes32", "name": "r", "type": "bytes32"}, {"internalType": "bytes32", "name": "s", "type": "bytes32"}], "name": "permit", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "queryExit", "outputs": [{"internalType": "uint256", "name": "bptIn", "type": "uint256"}, {"internalType": "uint256[]", "name": "amountsOut", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "queryJoin", "outputs": [{"internalType": "uint256", "name": "bptOut", "type": "uint256"}, {"internalType": "uint256[]", "name": "amountsIn", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_capManager", "type": "address"}], "name": "setCapManager", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"components": [{"internalType": "bool", "name": "capEnabled", "type": "bool"}, {"internalType": "uint120", "name": "perAddressCap", "type": "uint120"}, {"internalType": "uint128", "name": "globalCap", "type": "uint128"}], "internalType": "struct ICappedLiquidity.CapParams", "name": "params", "type": "tuple"}], "name": "setCapParams", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bool", "name": "paused", "type": "bool"}], "name": "setPaused", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}], "name": "setSwapFeePercentage", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "symbol", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "totalSupply", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transfer", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transferFrom", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "unpause", "outputs": [], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"1": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-pool-utils/contracts/BalancerPoolToken.sol", "10": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol", "11": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/Authentication.sol", "12": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol", "15": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol", "16": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/ISignaturesValidator.sol", "17": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol", "18": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/InputHelpers.sol", "20": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/WordCodec.sol", "21": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/math/FixedPoint.sol", "22": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/math/LogExpMath.sol", "23": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/math/Math.sol", "24": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/misc/IWETH.sol", "25": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/EIP712.sol", "26": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ERC20.sol", "27": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ERC20Permit.sol", "28": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol", "29": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20Permit.sol", "30": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/SafeMath.sol", "31": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IAsset.sol", "32": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IAuthorizer.sol", "33": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IBasePool.sol", "34": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IFlashLoanRecipient.sol", "35": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IMinimalSwapInfoPool.sol", "36": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IPoolSwapStructs.sol", "37": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IProtocolFeesCollector.sol", "38": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IVault.sol", "39": "contracts/2clp/Gyro2CLPMath.sol", "4": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-pool-utils/contracts/BasePoolAuthorization.sol", "40": "contracts/2clp/Gyro2CLPPool.sol", "41": "contracts/2clp/Gyro2CLPPoolErrors.sol", "43": "contracts/CappedLiquidity.sol", "44": "contracts/ExtensibleWeightedPool2Tokens.sol", "45": "contracts/LocallyPausable.sol", "46": "contracts/TemporarilyPausable.sol", "47": "interfaces/ICappedLiquidity.sol", "49": "interfaces/IGyroConfig.sol", "50": "interfaces/ILocallyPausable.sol", "51": "libraries/GyroConfigHelpers.sol", "52": "libraries/GyroConfigKeys.sol", "53": "libraries/GyroErrors.sol", "54": "libraries/GyroFixedPoint.sol", "55": "libraries/GyroPoolMath.sol", "8": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedMath.sol", "9": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol"}, "ast": {"absolutePath": "contracts/2clp/Gyro2CLPPool.sol", "exportedSymbols": {"Authentication": [16522], "BalancerPoolToken": [11141], "BasePool": [12321], "BasePoolAuthorization": [12414], "BaseWeightedPool": [10517], "CappedLiquidity": [3966], "EIP712": [16693], "ERC20": [14057], "ERC20Permit": [16299], "Errors": [8418], "ExtensibleWeightedPool2Tokens": [6175], "FixedPoint": [16146], "Gyro2CLPMath": [3771], "Gyro2CLPPool": [2341], "Gyro2CLPPoolErrors": [3780], "GyroConfigHelpers": [6459], "GyroConfigKeys": [6474], "GyroErrors": [6547], "GyroFixedPoint": [7207], "GyroPoolMath": [7995], "IAsset": [2796], "IAssetManager": [16381], "IAuthentication": [10929], "IAuthorizer": [2811], "IBasePool": [16445], "ICappedLiquidity": [2375], "IERC20": [2792], "IERC20Permit": [16729], "IFlashLoanRecipient": [2830], "IGyroConfig": [6353], "ILocallyPausable": [2439], "IMinimalSwapInfoPool": [14076], "IPoolSwapStructs": [16754], "IProtocolFeesCollector": [2895], "ISignaturesValidator": [2680], "ITemporarilyPausable": [2699], "IVault": [781], "IWETH": [2714], "InputHelpers": [10629], "LocallyPausable": [6285], "LogCompression": [13579], "LogExpMath": [15532], "Math": [10918], "SafeMath": [16600], "TemporarilyPausable": [14234], "WeightedMath": [13512], "WeightedPool2TokensMiscData": [3110], "WeightedPoolUserDataHelpers": [3320], "WordCodec": [9292], "_grequire": [6492, 6511], "_grevert": [6523, 6543], "_require": [8013], "_revert": [8021]}, "id": 2342, "license": "LicenseRef-Gyro-1.0", "nodeType": "SourceUnit", "nodes": [{"id": 783, "literals": ["solidity", "0.7", ".6"], "nodeType": "PragmaDirective", "src": "178:22:40"}, {"id": 784, "literals": ["experimental", "ABIEncoderV2"], "nodeType": "PragmaDirective", "src": "201:33:40"}, {"absolutePath": "libraries/GyroFixedPoint.sol", "file": "../../libraries/GyroFixedPoint.sol", "id": 785, "nodeType": "ImportDirective", "scope": 2342, "sourceUnit": 7208, "src": "312:44:40", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol", "file": "@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol", "id": 786, "nodeType": "ImportDirective", "scope": 2342, "sourceUnit": 3321, "src": "358:83:40", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol", "file": "@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol", "id": 787, "nodeType": "ImportDirective", "scope": 2342, "sourceUnit": 3111, "src": "442:83:40", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/GyroConfigKeys.sol", "file": "../../libraries/GyroConfigKeys.sol", "id": 788, "nodeType": "ImportDirective", "scope": 2342, "sourceUnit": 6475, "src": "527:44:40", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/GyroConfigHelpers.sol", "file": "../../libraries/GyroConfigHelpers.sol", "id": 789, "nodeType": "ImportDirective", "scope": 2342, "sourceUnit": 6460, "src": "572:47:40", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/IGyroConfig.sol", "file": "../../interfaces/IGyroConfig.sol", "id": 790, "nodeType": "ImportDirective", "scope": 2342, "sourceUnit": 6354, "src": "620:42:40", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/GyroPoolMath.sol", "file": "../../libraries/GyroPoolMath.sol", "id": 791, "nodeType": "ImportDirective", "scope": 2342, "sourceUnit": 7996, "src": "663:42:40", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/GyroErrors.sol", "file": "../../libraries/GyroErrors.sol", "id": 792, "nodeType": "ImportDirective", "scope": 2342, "sourceUnit": 6548, "src": "706:40:40", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/CappedLiquidity.sol", "file": "../CappedLiquidity.sol", "id": 793, "nodeType": "ImportDirective", "scope": 2342, "sourceUnit": 3967, "src": "748:32:40", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/LocallyPausable.sol", "file": "../LocallyPausable.sol", "id": 794, "nodeType": "ImportDirective", "scope": 2342, "sourceUnit": 6286, "src": "781:32:40", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/ExtensibleWeightedPool2Tokens.sol", "file": "../ExtensibleWeightedPool2Tokens.sol", "id": 795, "nodeType": "ImportDirective", "scope": 2342, "sourceUnit": 6176, "src": "814:46:40", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/2clp/Gyro2CLPPoolErrors.sol", "file": "./Gyro2CLPPoolErrors.sol", "id": 796, "nodeType": "ImportDirective", "scope": 2342, "sourceUnit": 3781, "src": "861:34:40", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/2clp/Gyro2CLPMath.sol", "file": "./Gyro2CLPMath.sol", "id": 797, "nodeType": "ImportDirective", "scope": 2342, "sourceUnit": 3772, "src": "896:28:40", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 798, "name": "ExtensibleWeightedPool2Tokens", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 6175, "src": "951:29:40", "typeDescriptions": {"typeIdentifier": "t_contract$_ExtensibleWeightedPool2Tokens_$6175", "typeString": "contract ExtensibleWeightedPool2Tokens"}}, "id": 799, "nodeType": "InheritanceSpecifier", "src": "951:29:40"}, {"baseName": {"id": 800, "name": "CappedLiquidity", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 3966, "src": "982:15:40", "typeDescriptions": {"typeIdentifier": "t_contract$_CappedLiquidity_$3966", "typeString": "contract CappedLiquidity"}}, "id": 801, "nodeType": "InheritanceSpecifier", "src": "982:15:40"}, {"baseName": {"id": 802, "name": "LocallyPausable", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 6285, "src": "999:15:40", "typeDescriptions": {"typeIdentifier": "t_contract$_LocallyPausable_$6285", "typeString": "contract LocallyPausable"}}, "id": 803, "nodeType": "InheritanceSpecifier", "src": "999:15:40"}], "contractDependencies": [2375, 2439, 2699, 2792, 3966, 6175, 6285, 10929, 11141, 12414, 14057, 14076, 14234, 16299, 16445, 16522, 16693, 16729, 16754], "contractKind": "contract", "fullyImplemented": true, "id": 2341, "linearizedBaseContracts": [2341, 6285, 2439, 3966, 2375, 6175, 14234, 2699, 11141, 16299, 16693, 16729, 14057, 2792, 12414, 16522, 10929, 14076, 16445, 16754], "name": "Gyro2CLPPool", "nodeType": "ContractDefinition", "nodes": [{"id": 806, "libraryName": {"id": 804, "name": "GyroFixedPoint", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 7207, "src": "1027:14:40", "typeDescriptions": {"typeIdentifier": "t_contract$_GyroFixedPoint_$7207", "typeString": "library GyroFixedPoint"}}, "nodeType": "UsingForDirective", "src": "1021:33:40", "typeName": {"id": 805, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1046:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"id": 809, "libraryName": {"id": 807, "name": "WeightedPoolUserDataHelpers", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 3320, "src": "1065:27:40", "typeDescriptions": {"typeIdentifier": "t_contract$_WeightedPoolUserDataHelpers_$3320", "typeString": "library WeightedPoolUserDataHelpers"}}, "nodeType": "UsingForDirective", "src": "1059:44:40", "typeName": {"id": 808, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "1097:5:40", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}}, {"id": 812, "libraryName": {"id": 810, "name": "WeightedPool2TokensMiscData", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 3110, "src": "1114:27:40", "typeDescriptions": {"typeIdentifier": "t_contract$_WeightedPool2TokensMiscData_$3110", "typeString": "library WeightedPool2TokensMiscData"}}, "nodeType": "UsingForDirective", "src": "1108:46:40", "typeName": {"id": 811, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1146:7:40", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}}, {"id": 815, "libraryName": {"id": 813, "name": "GyroConfigHelpers", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 6459, "src": "1165:17:40", "typeDescriptions": {"typeIdentifier": "t_contract$_GyroConfigHelpers_$6459", "typeString": "library GyroConfigHelpers"}}, "nodeType": "UsingForDirective", "src": "1159:40:40", "typeName": {"id": 814, "name": "IGyroConfig", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 6353, "src": "1187:11:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$6353", "typeString": "contract IGyroConfig"}}}, {"constant": false, "id": 817, "mutability": "immutable", "name": "_sqrtAlpha", "nodeType": "VariableDeclaration", "scope": 2341, "src": "1205:36:40", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 816, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1205:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "private"}, {"constant": false, "id": 819, "mutability": "immutable", "name": "_sqrtBeta", "nodeType": "VariableDeclaration", "scope": 2341, "src": "1247:35:40", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 818, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1247:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "private"}, {"constant": true, "id": 822, "mutability": "constant", "name": "POOL_TYPE", "nodeType": "VariableDeclaration", "scope": 2341, "src": "1288:43:40", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 820, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1288:7:40", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "value": {"hexValue": "32434c50", "id": 821, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1325:6:40", "typeDescriptions": {"typeIdentifier": "t_stringliteral_f13da975dadd2d1dfd6300b29fd16ddc6a1a61dbb1ed059936f32a9ab1f35339", "typeString": "literal_string \"2CLP\""}, "value": "2CLP"}, "visibility": "private"}, {"constant": false, "functionSelector": "44bbdb55", "id": 824, "mutability": "mutable", "name": "gyroConfig", "nodeType": "VariableDeclaration", "scope": 2341, "src": "1338:29:40", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$6353", "typeString": "contract IGyroConfig"}, "typeName": {"id": 823, "name": "IGyroConfig", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 6353, "src": "1338:11:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$6353", "typeString": "contract IGyroConfig"}}, "visibility": "public"}, {"canonicalName": "Gyro2CLPPool.GyroParams", "id": 837, "members": [{"constant": false, "id": 826, "mutability": "mutable", "name": "baseParams", "nodeType": "VariableDeclaration", "scope": 837, "src": "1402:24:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$4082_storage_ptr", "typeString": "struct ExtensibleWeightedPool2Tokens.NewPoolParams"}, "typeName": {"id": 825, "name": "NewPoolParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 4082, "src": "1402:13:40", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$4082_storage_ptr", "typeString": "struct ExtensibleWeightedPool2Tokens.NewPoolParams"}}, "visibility": "internal"}, {"constant": false, "id": 828, "mutability": "mutable", "name": "sqrtAlpha", "nodeType": "VariableDeclaration", "scope": 837, "src": "1436:17:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 827, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1436:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 830, "mutability": "mutable", "name": "sqrtBeta", "nodeType": "VariableDeclaration", "scope": 837, "src": "1496:16:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 829, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1496:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 832, "mutability": "mutable", "name": "capManager", "nodeType": "VariableDeclaration", "scope": 837, "src": "1589:18:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 831, "name": "address", "nodeType": "ElementaryTypeName", "src": "1589:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 834, "mutability": "mutable", "name": "capParams", "nodeType": "VariableDeclaration", "scope": 837, "src": "1617:19:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_CapParams_$2359_storage_ptr", "typeString": "struct ICappedLiquidity.CapParams"}, "typeName": {"id": 833, "name": "CapParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 2359, "src": "1617:9:40", "typeDescriptions": {"typeIdentifier": "t_struct$_CapParams_$2359_storage_ptr", "typeString": "struct ICappedLiquidity.CapParams"}}, "visibility": "internal"}, {"constant": false, "id": 836, "mutability": "mutable", "name": "pauseManager", "nodeType": "VariableDeclaration", "scope": 837, "src": "1646:20:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 835, "name": "address", "nodeType": "ElementaryTypeName", "src": "1646:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "name": "GyroParams", "nodeType": "StructDefinition", "scope": 2341, "src": "1374:299:40", "visibility": "public"}, {"body": {"id": 895, "nodeType": "Block", "src": "1907:299:40", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 863, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 859, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 839, "src": "1927:6:40", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$837_memory_ptr", "typeString": "struct Gyro2CLPPool.GyroParams memory"}}, "id": 860, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "sqrtAlpha", "nodeType": "MemberAccess", "referencedDeclaration": 828, "src": "1927:16:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 861, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 839, "src": "1946:6:40", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$837_memory_ptr", "typeString": "struct Gyro2CLPPool.GyroParams memory"}}, "id": 862, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "sqrtBeta", "nodeType": "MemberAccess", "referencedDeclaration": 830, "src": "1946:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1927:34:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 864, "name": "Gyro2CLPPoolErrors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3780, "src": "1963:18:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPPoolErrors_$3780_$", "typeString": "type(library Gyro2CLPPoolErrors)"}}, "id": 865, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "SQRT_PARAMS_WRONG", "nodeType": "MemberAccess", "referencedDeclaration": 3776, "src": "1963:36:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 858, "name": "_grequire", "nodeType": "Identifier", "overloadedDeclarations": [6492, 6511], "referencedDeclaration": 6492, "src": "1917:9:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 866, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1917:83:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 867, "nodeType": "ExpressionStatement", "src": "1917:83:40"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 874, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 869, "name": "configAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 841, "src": "2020:13:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 872, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2045:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 871, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2037:7:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 870, "name": "address", "nodeType": "ElementaryTypeName", "src": "2037:7:40", "typeDescriptions": {}}}, "id": 873, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2037:10:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "2020:27:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 875, "name": "GyroErrors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6547, "src": "2049:10:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroErrors_$6547_$", "typeString": "type(library GyroErrors)"}}, "id": 876, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ZERO_ADDRESS", "nodeType": "MemberAccess", "referencedDeclaration": 6546, "src": "2049:23:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 868, "name": "_grequire", "nodeType": "Identifier", "overloadedDeclarations": [6492, 6511], "referencedDeclaration": 6492, "src": "2010:9:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 877, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2010:63:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 878, "nodeType": "ExpressionStatement", "src": "2010:63:40"}, {"expression": {"id": 882, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 879, "name": "_sqrtAlpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 817, "src": "2083:10:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 880, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 839, "src": "2096:6:40", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$837_memory_ptr", "typeString": "struct Gyro2CLPPool.GyroParams memory"}}, "id": 881, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "sqrtAlpha", "nodeType": "MemberAccess", "referencedDeclaration": 828, "src": "2096:16:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2083:29:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 883, "nodeType": "ExpressionStatement", "src": "2083:29:40"}, {"expression": {"id": 887, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 884, "name": "_sqrtBeta", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 819, "src": "2122:9:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 885, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 839, "src": "2134:6:40", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$837_memory_ptr", "typeString": "struct Gyro2CLPPool.GyroParams memory"}}, "id": 886, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "sqrtBeta", "nodeType": "MemberAccess", "referencedDeclaration": 830, "src": "2134:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2122:27:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 888, "nodeType": "ExpressionStatement", "src": "2122:27:40"}, {"expression": {"id": 893, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 889, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 824, "src": "2160:10:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$6353", "typeString": "contract IGyroConfig"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 891, "name": "configAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 841, "src": "2185:13:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 890, "name": "IGyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6353, "src": "2173:11:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IGyroConfig_$6353_$", "typeString": "type(contract IGyroConfig)"}}, "id": 892, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2173:26:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$6353", "typeString": "contract IGyroConfig"}}, "src": "2160:39:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$6353", "typeString": "contract IGyroConfig"}}, "id": 894, "nodeType": "ExpressionStatement", "src": "2160:39:40"}]}, "id": 896, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"expression": {"id": 844, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 839, "src": "1778:6:40", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$837_memory_ptr", "typeString": "struct Gyro2CLPPool.GyroParams memory"}}, "id": 845, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "baseParams", "nodeType": "MemberAccess", "referencedDeclaration": 826, "src": "1778:17:40", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$4082_memory_ptr", "typeString": "struct ExtensibleWeightedPool2Tokens.NewPoolParams memory"}}], "id": 846, "modifierName": {"id": 843, "name": "ExtensibleWeightedPool2Tokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6175, "src": "1748:29:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ExtensibleWeightedPool2Tokens_$6175_$", "typeString": "type(contract ExtensibleWeightedPool2Tokens)"}}, "nodeType": "ModifierInvocation", "src": "1748:48:40"}, {"arguments": [{"expression": {"id": 848, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 839, "src": "1821:6:40", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$837_memory_ptr", "typeString": "struct Gyro2CLPPool.GyroParams memory"}}, "id": 849, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "capManager", "nodeType": "MemberAccess", "referencedDeclaration": 832, "src": "1821:17:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 850, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 839, "src": "1840:6:40", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$837_memory_ptr", "typeString": "struct Gyro2CLPPool.GyroParams memory"}}, "id": 851, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "capParams", "nodeType": "MemberAccess", "referencedDeclaration": 834, "src": "1840:16:40", "typeDescriptions": {"typeIdentifier": "t_struct$_CapParams_$2359_memory_ptr", "typeString": "struct ICappedLiquidity.CapParams memory"}}], "id": 852, "modifierName": {"id": 847, "name": "CappedLiquidity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3966, "src": "1805:15:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_CappedLiquidity_$3966_$", "typeString": "type(contract CappedLiquidity)"}}, "nodeType": "ModifierInvocation", "src": "1805:52:40"}, {"arguments": [{"expression": {"id": 854, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 839, "src": "1882:6:40", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$837_memory_ptr", "typeString": "struct Gyro2CLPPool.GyroParams memory"}}, "id": 855, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "pauseManager", "nodeType": "MemberAccess", "referencedDeclaration": 836, "src": "1882:19:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 856, "modifierName": {"id": 853, "name": "LocallyPausable", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6285, "src": "1866:15:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_LocallyPausable_$6285_$", "typeString": "type(contract LocallyPausable)"}}, "nodeType": "ModifierInvocation", "src": "1866:36:40"}], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 842, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 839, "mutability": "mutable", "name": "params", "nodeType": "VariableDeclaration", "scope": 896, "src": "1691:24:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$837_memory_ptr", "typeString": "struct Gyro2CLPPool.GyroParams"}, "typeName": {"id": 838, "name": "GyroParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 837, "src": "1691:10:40", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$837_storage_ptr", "typeString": "struct Gyro2CLPPool.GyroParams"}}, "visibility": "internal"}, {"constant": false, "id": 841, "mutability": "mutable", "name": "configAddress", "nodeType": "VariableDeclaration", "scope": 896, "src": "1717:21:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 840, "name": "address", "nodeType": "ElementaryTypeName", "src": "1717:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1690:49:40"}, "returnParameters": {"id": 857, "nodeType": "ParameterList", "parameters": [], "src": "1907:0:40"}, "scope": 2341, "src": "1679:527:40", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 907, "nodeType": "Block", "src": "2394:41:40", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 904, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [934, 947], "referencedDeclaration": 934, "src": "2411:15:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function () view returns (uint256[2] memory)"}}, "id": 905, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2411:17:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "functionReturnParameters": 903, "id": 906, "nodeType": "Return", "src": "2404:24:40"}]}, "documentation": {"id": 897, "nodeType": "StructuredDocumentation", "src": "2212:106:40", "text": "@dev Returns sqrtAlpha and sqrtBeta (square roots of lower and upper price bounds of p_x respectively)"}, "functionSelector": "707dcd1e", "id": 908, "implemented": true, "kind": "function", "modifiers": [], "name": "getSqrtParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 898, "nodeType": "ParameterList", "parameters": [], "src": "2349:2:40"}, "returnParameters": {"id": 903, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 902, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 908, "src": "2375:17:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 899, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2375:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 901, "length": {"hexValue": "32", "id": 900, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2383:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "2375:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "src": "2374:19:40"}, "scope": 2341, "src": "2323:112:40", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 933, "nodeType": "Block", "src": "2536:150:40", "statements": [{"expression": {"id": 921, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 915, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 913, "src": "2546:17:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 917, "indexExpression": {"hexValue": "30", "id": 916, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2564:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "2546:20:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "74727565", "id": 919, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "2585:4:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 918, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [934, 947], "referencedDeclaration": 947, "src": "2569:15:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 920, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2569:21:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2546:44:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 922, "nodeType": "ExpressionStatement", "src": "2546:44:40"}, {"expression": {"id": 929, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 923, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 913, "src": "2600:17:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 925, "indexExpression": {"hexValue": "31", "id": 924, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2618:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "2600:20:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "66616c7365", "id": 927, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "2639:5:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 926, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [934, 947], "referencedDeclaration": 947, "src": "2623:15:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 928, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2623:22:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2600:45:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 930, "nodeType": "ExpressionStatement", "src": "2600:45:40"}, {"expression": {"id": 931, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 913, "src": "2662:17:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "functionReturnParameters": 914, "id": 932, "nodeType": "Return", "src": "2655:24:40"}]}, "id": 934, "implemented": true, "kind": "function", "modifiers": [], "name": "_sqrtParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 909, "nodeType": "ParameterList", "parameters": [], "src": "2465:2:40"}, "returnParameters": {"id": 914, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 913, "mutability": "mutable", "name": "virtualParameters", "nodeType": "VariableDeclaration", "scope": 934, "src": "2499:35:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 910, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2499:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 912, "length": {"hexValue": "32", "id": 911, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2507:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "2499:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "src": "2498:37:40"}, "scope": 2341, "src": "2441:245:40", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"body": {"id": 946, "nodeType": "Block", "src": "2774:59:40", "statements": [{"expression": {"condition": {"id": 941, "name": "parameter0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 936, "src": "2791:10:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 943, "name": "_sqrtBeta", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 819, "src": "2817:9:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 944, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "2791:35:40", "trueExpression": {"id": 942, "name": "_sqrtAlpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 817, "src": "2804:10:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 940, "id": 945, "nodeType": "Return", "src": "2784:42:40"}]}, "id": 947, "implemented": true, "kind": "function", "modifiers": [], "name": "_sqrtParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 937, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 936, "mutability": "mutable", "name": "parameter0", "nodeType": "VariableDeclaration", "scope": 947, "src": "2717:15:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 935, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2717:4:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "2716:17:40"}, "returnParameters": {"id": 940, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 939, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 947, "src": "2765:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 938, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2765:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2764:9:40"}, "scope": 2341, "src": "2692:141:40", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"body": {"id": 982, "nodeType": "Block", "src": "3319:479:40", "statements": [{"assignments": [958, 960, null, null], "declarations": [{"constant": false, "id": 958, "mutability": "mutable", "name": "cash", "nodeType": "VariableDeclaration", "scope": 982, "src": "3547:12:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 957, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3547:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 960, "mutability": "mutable", "name": "managed", "nodeType": "VariableDeclaration", "scope": 982, "src": "3561:15:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 959, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3561:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, null, null], "id": 968, "initialValue": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 964, "name": "getPoolId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4212, "src": "3612:9:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$", "typeString": "function () view returns (bytes32)"}}, "id": 965, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3612:11:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 966, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 950, "src": "3625:5:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$2792", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_contract$_IERC20_$2792", "typeString": "contract IERC20"}], "expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 961, "name": "getVault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10970, "src": "3584:8:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IVault_$781_$", "typeString": "function () view returns (contract IVault)"}}, "id": 962, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3584:10:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IVault_$781", "typeString": "contract IVault"}}, "id": 963, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getPoolTokenInfo", "nodeType": "MemberAccess", "referencedDeclaration": 523, "src": "3584:27:40", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$_t_contract$_IERC20_$2792_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$", "typeString": "function (bytes32,contract IERC20) view external returns (uint256,uint256,uint256,address)"}}, "id": 967, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3584:47:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$", "typeString": "tuple(uint256,uint256,uint256,address)"}}, "nodeType": "VariableDeclarationStatement", "src": "3546:85:40"}, {"expression": {"id": 973, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 969, "name": "balance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 955, "src": "3641:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 972, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 970, "name": "cash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 958, "src": "3651:4:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 971, "name": "managed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 960, "src": "3658:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3651:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3641:24:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 974, "nodeType": "ExpressionStatement", "src": "3641:24:40"}, {"expression": {"id": 980, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 975, "name": "balance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 955, "src": "3751:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 978, "name": "scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 952, "src": "3777:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 976, "name": "balance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 955, "src": "3761:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 977, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mulDown", "nodeType": "MemberAccess", "referencedDeclaration": 6665, "src": "3761:15:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 979, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3761:30:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3751:40:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 981, "nodeType": "ExpressionStatement", "src": "3751:40:40"}]}, "documentation": {"id": 948, "nodeType": "StructuredDocumentation", "src": "2839:366:40", "text": "@dev Reads the balance of a token from the balancer vault and returns the scaled amount. Smaller storage access\n compared to getVault().getPoolTokens().\n Copied from the 3CLP *except* that for the 2CLP, the scalingFactor is interpreted as a regular integer, not a\n FixedPoint number. This is an inconsistency between the base contracts."}, "id": 983, "implemented": true, "kind": "function", "modifiers": [], "name": "_getScaledTokenBalance", "nodeType": "FunctionDefinition", "parameters": {"id": 953, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 950, "mutability": "mutable", "name": "token", "nodeType": "VariableDeclaration", "scope": 983, "src": "3242:12:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$2792", "typeString": "contract IERC20"}, "typeName": {"id": 949, "name": "IERC20", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 2792, "src": "3242:6:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$2792", "typeString": "contract IERC20"}}, "visibility": "internal"}, {"constant": false, "id": 952, "mutability": "mutable", "name": "scalingFactor", "nodeType": "VariableDeclaration", "scope": 983, "src": "3256:21:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 951, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3256:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3241:37:40"}, "returnParameters": {"id": 956, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 955, "mutability": "mutable", "name": "balance", "nodeType": "VariableDeclaration", "scope": 983, "src": "3302:15:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 954, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3302:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3301:17:40"}, "scope": 2341, "src": "3210:588:40", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 1022, "nodeType": "Block", "src": "4051:446:40", "statements": [{"expression": {"id": 996, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 990, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 988, "src": "4283:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "32", "id": 994, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4308:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 993, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "4294:13:40", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 991, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4298:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 992, "nodeType": "ArrayTypeName", "src": "4298:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 995, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4294:16:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "src": "4283:27:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 997, "nodeType": "ExpressionStatement", "src": "4283:27:40"}, {"expression": {"id": 1007, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 998, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 988, "src": "4320:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1000, "indexExpression": {"hexValue": "30", "id": 999, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4329:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "4320:11:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1002, "name": "_token0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4016, "src": "4357:7:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$2792", "typeString": "contract IERC20"}}, {"arguments": [{"hexValue": "74727565", "id": 1004, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "4381:4:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 1003, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5904, "src": "4366:14:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 1005, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4366:20:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$2792", "typeString": "contract IERC20"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1001, "name": "_getScaledTokenBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 983, "src": "4334:22:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$2792_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (contract IERC20,uint256) view returns (uint256)"}}, "id": 1006, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4334:53:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4320:67:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1008, "nodeType": "ExpressionStatement", "src": "4320:67:40"}, {"expression": {"id": 1018, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 1009, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 988, "src": "4397:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1011, "indexExpression": {"hexValue": "31", "id": 1010, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4406:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "4397:11:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1013, "name": "_token1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4018, "src": "4434:7:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$2792", "typeString": "contract IERC20"}}, {"arguments": [{"hexValue": "66616c7365", "id": 1015, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "4458:5:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 1014, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5904, "src": "4443:14:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 1016, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4443:21:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$2792", "typeString": "contract IERC20"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1012, "name": "_getScaledTokenBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 983, "src": "4411:22:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$2792_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (contract IERC20,uint256) view returns (uint256)"}}, "id": 1017, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4411:54:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4397:68:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1019, "nodeType": "ExpressionStatement", "src": "4397:68:40"}, {"expression": {"id": 1020, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 988, "src": "4482:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "functionReturnParameters": 989, "id": 1021, "nodeType": "Return", "src": "4475:15:40"}]}, "documentation": {"id": 984, "nodeType": "StructuredDocumentation", "src": "3804:165:40", "text": "@dev Get all balances in the pool, scaled by the appropriate scaling factors, in a relatively gas-efficient way.\n Essentially copied from the 3CLP."}, "id": 1023, "implemented": true, "kind": "function", "modifiers": [], "name": "_getAllBalances", "nodeType": "FunctionDefinition", "parameters": {"id": 985, "nodeType": "ParameterList", "parameters": [], "src": "3998:2:40"}, "returnParameters": {"id": 989, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 988, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 1023, "src": "4024:25:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 986, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4024:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 987, "nodeType": "ArrayTypeName", "src": "4024:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "4023:27:40"}, "scope": 2341, "src": "3974:523:40", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 1064, "nodeType": "Block", "src": "4692:330:40", "statements": [{"assignments": [1034], "declarations": [{"constant": false, "id": 1034, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 1064, "src": "4702:25:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1032, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4702:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1033, "nodeType": "ArrayTypeName", "src": "4702:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 1037, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 1035, "name": "_getAllBalances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1023, "src": "4730:15:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function () view returns (uint256[] memory)"}}, "id": 1036, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4730:17:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "4702:45:40"}, {"expression": {"id": 1044, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1038, "name": "virtualParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1028, "src": "4877:13:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "32", "id": 1042, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4907:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 1041, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "4893:13:40", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 1039, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4897:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1040, "nodeType": "ArrayTypeName", "src": "4897:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 1043, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4893:16:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "src": "4877:32:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1045, "nodeType": "ExpressionStatement", "src": "4877:32:40"}, {"expression": {"id": 1062, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [null, {"baseExpression": {"id": 1046, "name": "virtualParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1028, "src": "4922:13:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1048, "indexExpression": {"hexValue": "30", "id": 1047, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4936:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "4922:16:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1049, "name": "virtualParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1028, "src": "4940:13:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1051, "indexExpression": {"hexValue": "31", "id": 1050, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4954:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "4940:16:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 1052, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "4919:38:40", "typeDescriptions": {"typeIdentifier": "t_tuple$__$_t_uint256_$_t_uint256_$", "typeString": "tuple(,uint256,uint256)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"baseExpression": {"id": 1054, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1034, "src": "4984:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1056, "indexExpression": {"hexValue": "30", "id": 1055, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4993:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4984:11:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1057, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1034, "src": "4997:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1059, "indexExpression": {"hexValue": "31", "id": 1058, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5006:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4997:11:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "74727565", "id": 1060, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "5010:4:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 1053, "name": "_calculateCurrentValues", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1580, "src": "4960:23:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256,bool) view returns (uint256,uint256,uint256)"}}, "id": 1061, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4960:55:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256,uint256)"}}, "src": "4919:96:40", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1063, "nodeType": "ExpressionStatement", "src": "4919:96:40"}]}, "documentation": {"id": 1024, "nodeType": "StructuredDocumentation", "src": "4503:97:40", "text": "@dev Returns virtual offsets a and b for reserves x and y respectively, as in (x+a)*(y+b)=L^2"}, "functionSelector": "8dd9f89d", "id": 1065, "implemented": true, "kind": "function", "modifiers": [], "name": "getVirtualParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 1025, "nodeType": "ParameterList", "parameters": [], "src": "4634:2:40"}, "returnParameters": {"id": 1029, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1028, "mutability": "mutable", "name": "virtualParams", "nodeType": "VariableDeclaration", "scope": 1065, "src": "4660:30:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1026, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4660:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1027, "nodeType": "ArrayTypeName", "src": "4660:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "4659:32:40"}, "scope": 2341, "src": "4605:417:40", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 1104, "nodeType": "Block", "src": "5212:208:40", "statements": [{"expression": {"id": 1088, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 1078, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1076, "src": "5222:17:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1080, "indexExpression": {"hexValue": "30", "id": 1079, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5240:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "5222:20:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "74727565", "id": 1082, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "5264:4:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, {"baseExpression": {"id": 1083, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1069, "src": "5270:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1085, "indexExpression": {"hexValue": "31", "id": 1084, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5281:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5270:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1086, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1071, "src": "5285:9:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1081, "name": "_virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1132, "src": "5245:18:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (bool,uint256,uint256) view returns (uint256)"}}, "id": 1087, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5245:50:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5222:73:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1089, "nodeType": "ExpressionStatement", "src": "5222:73:40"}, {"expression": {"id": 1100, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 1090, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1076, "src": "5305:17:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1092, "indexExpression": {"hexValue": "31", "id": 1091, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5323:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "5305:20:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "66616c7365", "id": 1094, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "5347:5:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, {"baseExpression": {"id": 1095, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1069, "src": "5354:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1097, "indexExpression": {"hexValue": "30", "id": 1096, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5365:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5354:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1098, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1071, "src": "5369:9:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1093, "name": "_virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1132, "src": "5328:18:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (bool,uint256,uint256) view returns (uint256)"}}, "id": 1099, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5328:51:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5305:74:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1101, "nodeType": "ExpressionStatement", "src": "5305:74:40"}, {"expression": {"id": 1102, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1076, "src": "5396:17:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "functionReturnParameters": 1077, "id": 1103, "nodeType": "Return", "src": "5389:24:40"}]}, "id": 1105, "implemented": true, "kind": "function", "modifiers": [], "name": "_getVirtualParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 1072, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1069, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 1105, "src": "5059:28:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 1066, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5059:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1068, "length": {"hexValue": "32", "id": 1067, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5067:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "5059:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}, {"constant": false, "id": 1071, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 1105, "src": "5089:17:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1070, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5089:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5058:49:40"}, "returnParameters": {"id": 1077, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1076, "mutability": "mutable", "name": "virtualParameters", "nodeType": "VariableDeclaration", "scope": 1105, "src": "5171:35:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 1073, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5171:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1075, "length": {"hexValue": "32", "id": 1074, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5179:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "5171:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "src": "5170:37:40"}, "scope": 2341, "src": "5028:392:40", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"body": {"id": 1131, "nodeType": "Block", "src": "5579:212:40", "statements": [{"expression": {"condition": {"id": 1116, "name": "parameter0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1107, "src": "5608:10:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"components": [{"arguments": [{"id": 1125, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1111, "src": "5762:9:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1126, "name": "sqrtParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1109, "src": "5773:9:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1123, "name": "Gyro2CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3771, "src": "5721:12:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPMath_$3771_$", "typeString": "type(library Gyro2CLPMath)"}}, "id": 1124, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateVirtualParameter1", "nodeType": "MemberAccess", "referencedDeclaration": 3742, "src": "5721:40:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1127, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5721:62:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 1128, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "5720:64:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1129, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "5608:176:40", "trueExpression": {"components": [{"arguments": [{"id": 1119, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1111, "src": "5679:9:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1120, "name": "sqrtParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1109, "src": "5690:9:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1117, "name": "Gyro2CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3771, "src": "5638:12:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPMath_$3771_$", "typeString": "type(library Gyro2CLPMath)"}}, "id": 1118, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateVirtualParameter0", "nodeType": "MemberAccess", "referencedDeclaration": 3726, "src": "5638:40:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1121, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5638:62:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 1122, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "5637:64:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 1115, "id": 1130, "nodeType": "Return", "src": "5589:195:40"}]}, "id": 1132, "implemented": true, "kind": "function", "modifiers": [], "name": "_virtualParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 1112, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1107, "mutability": "mutable", "name": "parameter0", "nodeType": "VariableDeclaration", "scope": 1132, "src": "5463:15:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1106, "name": "bool", "nodeType": "ElementaryTypeName", "src": "5463:4:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 1109, "mutability": "mutable", "name": "sqrtParam", "nodeType": "VariableDeclaration", "scope": 1132, "src": "5488:17:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1108, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5488:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1111, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 1132, "src": "5515:17:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1110, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5515:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5453:85:40"}, "returnParameters": {"id": 1115, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1114, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1132, "src": "5570:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1113, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5570:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5569:9:40"}, "scope": 2341, "src": "5426:365:40", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"baseFunctions": [4469], "body": {"id": 1167, "nodeType": "Block", "src": "5932:210:40", "statements": [{"assignments": [1143], "declarations": [{"constant": false, "id": 1143, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 1167, "src": "5942:25:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1141, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5942:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1142, "nodeType": "ArrayTypeName", "src": "5942:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 1146, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 1144, "name": "_getAllBalances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1023, "src": "5970:15:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function () view returns (uint256[] memory)"}}, "id": 1145, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5970:17:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "5942:45:40"}, {"assignments": [1152], "declarations": [{"constant": false, "id": 1152, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 1167, "src": "5997:28:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 1150, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5997:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1151, "length": {"hexValue": "32", "id": 1149, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6005:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "5997:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 1155, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 1153, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [934, 947], "referencedDeclaration": 934, "src": "6028:15:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function () view returns (uint256[2] memory)"}}, "id": 1154, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6028:17:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "5997:48:40"}, {"expression": {"arguments": [{"id": 1158, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1143, "src": "6096:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"baseExpression": {"id": 1159, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1152, "src": "6106:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1161, "indexExpression": {"hexValue": "30", "id": 1160, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6117:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6106:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1162, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1152, "src": "6121:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1164, "indexExpression": {"hexValue": "31", "id": 1163, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6132:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6121:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1156, "name": "Gyro2CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3771, "src": "6063:12:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPMath_$3771_$", "typeString": "type(library Gyro2CLPMath)"}}, "id": 1157, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 3366, "src": "6063:32:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256)"}}, "id": 1165, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6063:72:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 1138, "id": 1166, "nodeType": "Return", "src": "6056:79:40"}]}, "documentation": {"id": 1133, "nodeType": "StructuredDocumentation", "src": "5797:67:40", "text": " @dev Returns the current value of the invariant."}, "functionSelector": "c0ff1a15", "id": 1168, "implemented": true, "kind": "function", "modifiers": [], "name": "getInvariant", "nodeType": "FunctionDefinition", "overrides": {"id": 1135, "nodeType": "OverrideSpecifier", "overrides": [], "src": "5905:8:40"}, "parameters": {"id": 1134, "nodeType": "ParameterList", "parameters": [], "src": "5890:2:40"}, "returnParameters": {"id": 1138, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1137, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1168, "src": "5923:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1136, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5923:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5922:9:40"}, "scope": 2341, "src": "5869:273:40", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 1192, "nodeType": "Block", "src": "6312:111:40", "statements": [{"expression": {"arguments": [{"baseExpression": {"id": 1182, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1171, "src": "6361:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1184, "indexExpression": {"hexValue": "30", "id": 1183, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6370:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6361:11:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1185, "name": "virtualParam0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1173, "src": "6374:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1186, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1171, "src": "6389:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1188, "indexExpression": {"hexValue": "31", "id": 1187, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6398:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6389:11:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1189, "name": "virtualParam1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1175, "src": "6402:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1180, "name": "Gyro2CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3771, "src": "6329:12:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPMath_$3771_$", "typeString": "type(library Gyro2CLPMath)"}}, "id": 1181, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcSpotPriceAinB", "nodeType": "MemberAccess", "referencedDeclaration": 3770, "src": "6329:31:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 1190, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6329:87:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 1179, "id": 1191, "nodeType": "Return", "src": "6322:94:40"}]}, "id": 1193, "implemented": true, "kind": "function", "modifiers": [], "name": "_getPrice", "nodeType": "FunctionDefinition", "parameters": {"id": 1176, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1171, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 1193, "src": "6176:25:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1169, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6176:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1170, "nodeType": "ArrayTypeName", "src": "6176:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1173, "mutability": "mutable", "name": "virtualParam0", "nodeType": "VariableDeclaration", "scope": 1193, "src": "6211:21:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1172, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6211:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1175, "mutability": "mutable", "name": "virtualParam1", "nodeType": "VariableDeclaration", "scope": 1193, "src": "6242:21:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1174, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6242:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6166:103:40"}, "returnParameters": {"id": 1179, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1178, "mutability": "mutable", "name": "spotPrice", "nodeType": "VariableDeclaration", "scope": 1193, "src": "6293:17:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1177, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6293:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6292:19:40"}, "scope": 2341, "src": "6148:275:40", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 1229, "nodeType": "Block", "src": "6580:261:40", "statements": [{"assignments": [1203], "declarations": [{"constant": false, "id": 1203, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 1229, "src": "6590:25:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1201, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6590:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1202, "nodeType": "ArrayTypeName", "src": "6590:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 1206, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 1204, "name": "_getAllBalances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1023, "src": "6618:15:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function () view returns (uint256[] memory)"}}, "id": 1205, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6618:17:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "6590:45:40"}, {"assignments": [1208, 1210, 1212], "declarations": [{"constant": false, "id": 1208, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 1229, "src": "6646:17:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1207, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6646:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1210, "mutability": "mutable", "name": "virtualParam0", "nodeType": "VariableDeclaration", "scope": 1229, "src": "6665:21:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1209, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6665:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1212, "mutability": "mutable", "name": "virtualParam1", "nodeType": "VariableDeclaration", "scope": 1229, "src": "6688:21:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1211, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6688:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1222, "initialValue": {"arguments": [{"baseExpression": {"id": 1214, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1203, "src": "6737:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1216, "indexExpression": {"hexValue": "30", "id": 1215, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6746:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6737:11:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1217, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1203, "src": "6750:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1219, "indexExpression": {"hexValue": "31", "id": 1218, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6759:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6750:11:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "74727565", "id": 1220, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "6763:4:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 1213, "name": "_calculateCurrentValues", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1580, "src": "6713:23:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256,bool) view returns (uint256,uint256,uint256)"}}, "id": 1221, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6713:55:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "6645:123:40"}, {"expression": {"arguments": [{"id": 1224, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1203, "src": "6795:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 1225, "name": "virtualParam0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1210, "src": "6805:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1226, "name": "virtualParam1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1212, "src": "6820:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1223, "name": "_getPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1193, "src": "6785:9:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256)"}}, "id": 1227, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6785:49:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 1198, "id": 1228, "nodeType": "Return", "src": "6778:56:40"}]}, "documentation": {"id": 1194, "nodeType": "StructuredDocumentation", "src": "6429:84:40", "text": "@dev Returns the current spot price of token0 quoted in units of token1."}, "functionSelector": "98d5fdca", "id": 1230, "implemented": true, "kind": "function", "modifiers": [], "name": "getPrice", "nodeType": "FunctionDefinition", "parameters": {"id": 1195, "nodeType": "ParameterList", "parameters": [], "src": "6535:2:40"}, "returnParameters": {"id": 1198, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1197, "mutability": "mutable", "name": "spotPrice", "nodeType": "VariableDeclaration", "scope": 1230, "src": "6561:17:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1196, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6561:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6560:19:40"}, "scope": 2341, "src": "6518:323:40", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"baseFunctions": [4616], "body": {"id": 1375, "nodeType": "Block", "src": "7071:2137:40", "statements": [{"assignments": [1249], "declarations": [{"constant": false, "id": 1249, "mutability": "mutable", "name": "tokenInIsToken0", "nodeType": "VariableDeclaration", "scope": 1375, "src": "7081:20:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1248, "name": "bool", "nodeType": "ElementaryTypeName", "src": "7081:4:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "id": 1254, "initialValue": {"commonType": {"typeIdentifier": "t_contract$_IERC20_$2792", "typeString": "contract IERC20"}, "id": 1253, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 1250, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1232, "src": "7104:7:40", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$16753_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 1251, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenIn", "nodeType": "MemberAccess", "referencedDeclaration": 16738, "src": "7104:15:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$2792", "typeString": "contract IERC20"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 1252, "name": "_token0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4016, "src": "7123:7:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$2792", "typeString": "contract IERC20"}}, "src": "7104:26:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "VariableDeclarationStatement", "src": "7081:49:40"}, {"assignments": [1256], "declarations": [{"constant": false, "id": 1256, "mutability": "mutable", "name": "scalingFactorTokenIn", "nodeType": "VariableDeclaration", "scope": 1375, "src": "7141:28:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1255, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7141:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1260, "initialValue": {"arguments": [{"id": 1258, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1249, "src": "7187:15:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 1257, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5904, "src": "7172:14:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 1259, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7172:31:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "7141:62:40"}, {"assignments": [1262], "declarations": [{"constant": false, "id": 1262, "mutability": "mutable", "name": "scalingFactorTokenOut", "nodeType": "VariableDeclaration", "scope": 1375, "src": "7213:29:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1261, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7213:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1267, "initialValue": {"arguments": [{"id": 1265, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "7260:16:40", "subExpression": {"id": 1264, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1249, "src": "7261:15:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 1263, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5904, "src": "7245:14:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 1266, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7245:32:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "7213:64:40"}, {"expression": {"id": 1273, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1268, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1234, "src": "7331:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1270, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1234, "src": "7357:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1271, "name": "scalingFactorTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1256, "src": "7373:20:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1269, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5921, "src": "7348:8:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1272, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7348:46:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7331:63:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1274, "nodeType": "ExpressionStatement", "src": "7331:63:40"}, {"expression": {"id": 1280, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1275, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1236, "src": "7404:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1277, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1236, "src": "7431:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1278, "name": "scalingFactorTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1262, "src": "7448:21:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1276, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5921, "src": "7422:8:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1279, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7422:48:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7404:66:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1281, "nodeType": "ExpressionStatement", "src": "7404:66:40"}, {"assignments": [1283, 1285, 1287], "declarations": [{"constant": false, "id": 1283, "mutability": "mutable", "name": "currentInvariant", "nodeType": "VariableDeclaration", "scope": 1375, "src": "7560:24:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1282, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7560:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1285, "mutability": "mutable", "name": "virtualParamIn", "nodeType": "VariableDeclaration", "scope": 1375, "src": "7586:22:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1284, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7586:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1287, "mutability": "mutable", "name": "virtualParamOut", "nodeType": "VariableDeclaration", "scope": 1375, "src": "7610:23:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1286, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7610:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1293, "initialValue": {"arguments": [{"id": 1289, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1234, "src": "7674:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1290, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1236, "src": "7702:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1291, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1249, "src": "7731:15:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 1288, "name": "_calculateCurrentValues", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1580, "src": "7637:23:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256,bool) view returns (uint256,uint256,uint256)"}}, "id": 1292, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7637:119:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "7559:197:40"}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_SwapKind_$605", "typeString": "enum IVault.SwapKind"}, "id": 1299, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 1294, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1232, "src": "7771:7:40", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$16753_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 1295, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kind", "nodeType": "MemberAccess", "referencedDeclaration": 16736, "src": "7771:12:40", "typeDescriptions": {"typeIdentifier": "t_enum$_SwapKind_$605", "typeString": "enum IVault.SwapKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 1296, "name": "IVault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 781, "src": "7787:6:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IVault_$781_$", "typeString": "type(contract IVault)"}}, "id": 1297, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "SwapKind", "nodeType": "MemberAccess", "referencedDeclaration": 605, "src": "7787:15:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_SwapKind_$605_$", "typeString": "type(enum IVault.SwapKind)"}}, "id": 1298, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "GIVEN_IN", "nodeType": "MemberAccess", "src": "7787:24:40", "typeDescriptions": {"typeIdentifier": "t_enum$_SwapKind_$605", "typeString": "enum IVault.SwapKind"}}, "src": "7771:40:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 1373, "nodeType": "Block", "src": "8571:631:40", "statements": [{"expression": {"id": 1346, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 1338, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1232, "src": "8585:7:40", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$16753_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 1340, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 16742, "src": "8585:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 1342, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1232, "src": "8611:7:40", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$16753_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 1343, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 16742, "src": "8611:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1344, "name": "scalingFactorTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1262, "src": "8627:21:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1341, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5921, "src": "8602:8:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1345, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8602:47:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8585:64:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1347, "nodeType": "ExpressionStatement", "src": "8585:64:40"}, {"assignments": [1349], "declarations": [{"constant": false, "id": 1349, "mutability": "mutable", "name": "amountIn", "nodeType": "VariableDeclaration", "scope": 1373, "src": "8664:16:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1348, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8664:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1357, "initialValue": {"arguments": [{"id": 1351, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1232, "src": "8699:7:40", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$16753_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, {"id": 1352, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1234, "src": "8708:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1353, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1236, "src": "8724:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1354, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1285, "src": "8741:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1355, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1287, "src": "8757:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_SwapRequest_$16753_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1350, "name": "_onSwapGivenOut", "nodeType": "Identifier", "overloadedDeclarations": [1430], "referencedDeclaration": 1430, "src": "8683:15:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_SwapRequest_$16753_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (struct IPoolSwapStructs.SwapRequest memory,uint256,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 1356, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8683:90:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "8664:109:40"}, {"expression": {"id": 1363, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1358, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1349, "src": "8858:8:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1360, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1349, "src": "8882:8:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1361, "name": "scalingFactorTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1256, "src": "8892:20:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1359, "name": "_downscaleUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6027, "src": "8869:12:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1362, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8869:44:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8858:55:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1364, "nodeType": "ExpressionStatement", "src": "8858:55:40"}, {"expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 1367, "name": "getSwapFeePercentage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4279, "src": "9155:20:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1368, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9155:22:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1369, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "complement", "nodeType": "MemberAccess", "referencedDeclaration": 7206, "src": "9155:33:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256) pure returns (uint256)"}}, "id": 1370, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9155:35:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1365, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1349, "src": "9140:8:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1366, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "divUp", "nodeType": "MemberAccess", "referencedDeclaration": 6912, "src": "9140:14:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1371, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9140:51:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 1247, "id": 1372, "nodeType": "Return", "src": "9133:58:40"}]}, "id": 1374, "nodeType": "IfStatement", "src": "7767:1435:40", "trueBody": {"id": 1337, "nodeType": "Block", "src": "7813:752:40", "statements": [{"assignments": [1301], "declarations": [{"constant": false, "id": 1301, "mutability": "mutable", "name": "feeAmount", "nodeType": "VariableDeclaration", "scope": 1337, "src": "8030:17:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1300, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8030:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1308, "initialValue": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 1305, "name": "getSwapFeePercentage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4279, "src": "8071:20:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1306, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8071:22:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"id": 1302, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1232, "src": "8050:7:40", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$16753_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 1303, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 16742, "src": "8050:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1304, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mulUp", "nodeType": "MemberAccess", "referencedDeclaration": 6735, "src": "8050:20:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1307, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8050:44:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "8030:64:40"}, {"expression": {"id": 1320, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 1309, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1232, "src": "8210:7:40", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$16753_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 1311, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 16742, "src": "8210:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [{"id": 1316, "name": "feeAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1301, "src": "8255:9:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"id": 1313, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1232, "src": "8236:7:40", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$16753_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 1314, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 16742, "src": "8236:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1315, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 6626, "src": "8236:18:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1317, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8236:29:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1318, "name": "scalingFactorTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1256, "src": "8267:20:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1312, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5921, "src": "8227:8:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1319, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8227:61:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8210:78:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1321, "nodeType": "ExpressionStatement", "src": "8210:78:40"}, {"assignments": [1323], "declarations": [{"constant": false, "id": 1323, "mutability": "mutable", "name": "amountOut", "nodeType": "VariableDeclaration", "scope": 1337, "src": "8303:17:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1322, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8303:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1331, "initialValue": {"arguments": [{"id": 1325, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1232, "src": "8338:7:40", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$16753_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, {"id": 1326, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1234, "src": "8347:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1327, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1236, "src": "8363:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1328, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1285, "src": "8380:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1329, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1287, "src": "8396:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_SwapRequest_$16753_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1324, "name": "_onSwapGivenIn", "nodeType": "Identifier", "overloadedDeclarations": [1403], "referencedDeclaration": 1403, "src": "8323:14:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_SwapRequest_$16753_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (struct IPoolSwapStructs.SwapRequest memory,uint256,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 1330, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8323:89:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "8303:109:40"}, {"expression": {"arguments": [{"id": 1333, "name": "amountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1323, "src": "8521:9:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1334, "name": "scalingFactorTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1262, "src": "8532:21:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1332, "name": "_downscaleDown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5974, "src": "8506:14:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1335, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8506:48:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 1247, "id": 1336, "nodeType": "Return", "src": "8499:55:40"}]}}]}, "functionSelector": "9d2c110c", "id": 1376, "implemented": true, "kind": "function", "modifiers": [{"id": 1240, "modifierName": {"id": 1239, "name": "whenNotPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14122, "src": "7013:13:40", "typeDescriptions": {"typeIdentifier": "t_modifier$__$", "typeString": "modifier ()"}}, "nodeType": "ModifierInvocation", "src": "7013:13:40"}, {"arguments": [{"expression": {"id": 1242, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1232, "src": "7037:7:40", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$16753_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 1243, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "poolId", "nodeType": "MemberAccess", "referencedDeclaration": 16744, "src": "7037:14:40", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "id": 1244, "modifierName": {"id": 1241, "name": "onlyVault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4063, "src": "7027:9:40", "typeDescriptions": {"typeIdentifier": "t_modifier$_t_bytes32_$", "typeString": "modifier (bytes32)"}}, "nodeType": "ModifierInvocation", "src": "7027:25:40"}], "name": "onSwap", "nodeType": "FunctionDefinition", "overrides": {"id": 1238, "nodeType": "OverrideSpecifier", "overrides": [], "src": "7004:8:40"}, "parameters": {"id": 1237, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1232, "mutability": "mutable", "name": "request", "nodeType": "VariableDeclaration", "scope": 1376, "src": "6891:26:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$16753_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 1231, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 16753, "src": "6891:11:40", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$16753_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 1234, "mutability": "mutable", "name": "balanceTokenIn", "nodeType": "VariableDeclaration", "scope": 1376, "src": "6927:22:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1233, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6927:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1236, "mutability": "mutable", "name": "balanceTokenOut", "nodeType": "VariableDeclaration", "scope": 1376, "src": "6959:23:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1235, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6959:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6881:107:40"}, "returnParameters": {"id": 1247, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1246, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1376, "src": "7062:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1245, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7062:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7061:9:40"}, "scope": 2341, "src": "6866:2342:40", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"baseFunctions": [4642], "body": {"id": 1402, "nodeType": "Block", "src": "9523:216:40", "statements": [{"expression": {"arguments": [{"id": 1394, "name": "currentBalanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1380, "src": "9633:21:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1395, "name": "currentBalanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1382, "src": "9656:22:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 1396, "name": "swapRequest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1378, "src": "9680:11:40", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$16753_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 1397, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 16742, "src": "9680:18:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1398, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1384, "src": "9700:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1399, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1386, "src": "9716:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1392, "name": "Gyro2CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3771, "src": "9604:12:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPMath_$3771_$", "typeString": "type(library Gyro2CLPMath)"}}, "id": 1393, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcOutGivenIn", "nodeType": "MemberAccess", "referencedDeclaration": 3641, "src": "9604:28:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 1400, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9604:128:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 1391, "id": 1401, "nodeType": "Return", "src": "9597:135:40"}]}, "id": 1403, "implemented": true, "kind": "function", "modifiers": [], "name": "_onSwapGivenIn", "nodeType": "FunctionDefinition", "overrides": {"id": 1388, "nodeType": "OverrideSpecifier", "overrides": [], "src": "9496:8:40"}, "parameters": {"id": 1387, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1378, "mutability": "mutable", "name": "swapRequest", "nodeType": "VariableDeclaration", "scope": 1403, "src": "9301:30:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$16753_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 1377, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 16753, "src": "9301:11:40", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$16753_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 1380, "mutability": "mutable", "name": "currentBalanceTokenIn", "nodeType": "VariableDeclaration", "scope": 1403, "src": "9341:29:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1379, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9341:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1382, "mutability": "mutable", "name": "currentBalanceTokenOut", "nodeType": "VariableDeclaration", "scope": 1403, "src": "9380:30:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1381, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9380:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1384, "mutability": "mutable", "name": "virtualParamIn", "nodeType": "VariableDeclaration", "scope": 1403, "src": "9420:22:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1383, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9420:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1386, "mutability": "mutable", "name": "virtualParamOut", "nodeType": "VariableDeclaration", "scope": 1403, "src": "9452:23:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1385, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9452:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "9291:190:40"}, "returnParameters": {"id": 1391, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1390, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1403, "src": "9514:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1389, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9514:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "9513:9:40"}, "scope": 2341, "src": "9268:471:40", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"baseFunctions": [4668], "body": {"id": 1429, "nodeType": "Block", "src": "10001:216:40", "statements": [{"expression": {"arguments": [{"id": 1421, "name": "currentBalanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1407, "src": "10111:21:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1422, "name": "currentBalanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1409, "src": "10134:22:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 1423, "name": "swapRequest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1405, "src": "10158:11:40", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$16753_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 1424, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 16742, "src": "10158:18:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1425, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1411, "src": "10178:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1426, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1413, "src": "10194:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1419, "name": "Gyro2CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3771, "src": "10082:12:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPMath_$3771_$", "typeString": "type(library Gyro2CLPMath)"}}, "id": 1420, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcInGivenOut", "nodeType": "MemberAccess", "referencedDeclaration": 3710, "src": "10082:28:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 1427, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10082:128:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 1418, "id": 1428, "nodeType": "Return", "src": "10075:135:40"}]}, "id": 1430, "implemented": true, "kind": "function", "modifiers": [], "name": "_onSwapGivenOut", "nodeType": "FunctionDefinition", "overrides": {"id": 1415, "nodeType": "OverrideSpecifier", "overrides": [], "src": "9974:8:40"}, "parameters": {"id": 1414, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1405, "mutability": "mutable", "name": "swapRequest", "nodeType": "VariableDeclaration", "scope": 1430, "src": "9779:30:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$16753_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 1404, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 16753, "src": "9779:11:40", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$16753_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 1407, "mutability": "mutable", "name": "currentBalanceTokenIn", "nodeType": "VariableDeclaration", "scope": 1430, "src": "9819:29:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1406, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9819:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1409, "mutability": "mutable", "name": "currentBalanceTokenOut", "nodeType": "VariableDeclaration", "scope": 1430, "src": "9858:30:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1408, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9858:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1411, "mutability": "mutable", "name": "virtualParamIn", "nodeType": "VariableDeclaration", "scope": 1430, "src": "9898:22:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1410, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9898:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1413, "mutability": "mutable", "name": "virtualParamOut", "nodeType": "VariableDeclaration", "scope": 1430, "src": "9930:23:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1412, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9930:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "9769:190:40"}, "returnParameters": {"id": 1418, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1417, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1430, "src": "9992:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1416, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9992:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "9991:9:40"}, "scope": 2341, "src": "9745:472:40", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 1479, "nodeType": "Block", "src": "10598:392:40", "statements": [{"assignments": [1447], "declarations": [{"constant": false, "id": 1447, "mutability": "mutable", "name": "scalingFactorTokenIn", "nodeType": "VariableDeclaration", "scope": 1479, "src": "10608:28:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1446, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10608:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1451, "initialValue": {"arguments": [{"id": 1449, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1437, "src": "10654:15:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 1448, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5904, "src": "10639:14:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 1450, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10639:31:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "10608:62:40"}, {"assignments": [1453], "declarations": [{"constant": false, "id": 1453, "mutability": "mutable", "name": "scalingFactorTokenOut", "nodeType": "VariableDeclaration", "scope": 1479, "src": "10680:29:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1452, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10680:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1458, "initialValue": {"arguments": [{"id": 1456, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "10727:16:40", "subExpression": {"id": 1455, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1437, "src": "10728:15:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 1454, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5904, "src": "10712:14:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 1457, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10712:32:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "10680:64:40"}, {"expression": {"id": 1464, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1459, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1433, "src": "10754:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1461, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1433, "src": "10780:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1462, "name": "scalingFactorTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1447, "src": "10796:20:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1460, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5921, "src": "10771:8:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1463, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10771:46:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10754:63:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1465, "nodeType": "ExpressionStatement", "src": "10754:63:40"}, {"expression": {"id": 1471, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1466, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1435, "src": "10827:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1468, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1435, "src": "10854:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1469, "name": "scalingFactorTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1453, "src": "10871:21:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1467, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5921, "src": "10845:8:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1470, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10845:48:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10827:66:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1472, "nodeType": "ExpressionStatement", "src": "10827:66:40"}, {"expression": {"arguments": [{"id": 1474, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1433, "src": "10934:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1475, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1435, "src": "10950:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1476, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1437, "src": "10967:15:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 1473, "name": "_calculateCurrentValues", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1580, "src": "10910:23:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256,bool) view returns (uint256,uint256,uint256)"}}, "id": 1477, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10910:73:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256,uint256)"}}, "functionReturnParameters": 1445, "id": 1478, "nodeType": "Return", "src": "10903:80:40"}]}, "documentation": {"id": 1431, "nodeType": "StructuredDocumentation", "src": "10223:39:40", "text": "@dev invariant and virtual offsets."}, "functionSelector": "3c4dd5bb", "id": 1480, "implemented": true, "kind": "function", "modifiers": [], "name": "calculateCurrentValues", "nodeType": "FunctionDefinition", "parameters": {"id": 1438, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1433, "mutability": "mutable", "name": "balanceTokenIn", "nodeType": "VariableDeclaration", "scope": 1480, "src": "10308:22:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1432, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10308:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1435, "mutability": "mutable", "name": "balanceTokenOut", "nodeType": "VariableDeclaration", "scope": 1480, "src": "10354:23:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1434, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10354:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1437, "mutability": "mutable", "name": "tokenInIsToken0", "nodeType": "VariableDeclaration", "scope": 1480, "src": "10401:20:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1436, "name": "bool", "nodeType": "ElementaryTypeName", "src": "10401:4:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "10298:129:40"}, "returnParameters": {"id": 1445, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1440, "mutability": "mutable", "name": "currentInvariant", "nodeType": "VariableDeclaration", "scope": 1480, "src": "10486:24:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1439, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10486:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1442, "mutability": "mutable", "name": "virtualParamIn", "nodeType": "VariableDeclaration", "scope": 1480, "src": "10524:22:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1441, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10524:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1444, "mutability": "mutable", "name": "virtualParamOut", "nodeType": "VariableDeclaration", "scope": 1480, "src": "10560:23:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1443, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10560:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "10472:121:40"}, "scope": 2341, "src": "10267:723:40", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 1579, "nodeType": "Block", "src": "11322:623:40", "statements": [{"assignments": [1499], "declarations": [{"constant": false, "id": 1499, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 1579, "src": "11332:25:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1497, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11332:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1498, "nodeType": "ArrayTypeName", "src": "11332:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 1505, "initialValue": {"arguments": [{"hexValue": "32", "id": 1503, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11374:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 1502, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "11360:13:40", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 1500, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11364:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1501, "nodeType": "ArrayTypeName", "src": "11364:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 1504, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11360:16:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "11332:44:40"}, {"expression": {"id": 1513, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 1506, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1499, "src": "11386:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1508, "indexExpression": {"hexValue": "30", "id": 1507, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11395:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "11386:11:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"id": 1509, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1486, "src": "11400:15:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 1511, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1484, "src": "11435:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1512, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "11400:50:40", "trueExpression": {"id": 1510, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1482, "src": "11418:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11386:64:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1514, "nodeType": "ExpressionStatement", "src": "11386:64:40"}, {"expression": {"id": 1522, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 1515, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1499, "src": "11460:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1517, "indexExpression": {"hexValue": "31", "id": 1516, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11469:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "11460:11:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"id": 1518, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1486, "src": "11474:15:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 1520, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1482, "src": "11510:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1521, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "11474:50:40", "trueExpression": {"id": 1519, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1484, "src": "11492:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11460:64:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1523, "nodeType": "ExpressionStatement", "src": "11460:64:40"}, {"assignments": [1529], "declarations": [{"constant": false, "id": 1529, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 1579, "src": "11535:28:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 1527, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11535:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1528, "length": {"hexValue": "32", "id": 1526, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11543:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "11535:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 1532, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 1530, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [934, 947], "referencedDeclaration": 934, "src": "11566:15:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function () view returns (uint256[2] memory)"}}, "id": 1531, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11566:17:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "11535:48:40"}, {"expression": {"id": 1544, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1533, "name": "currentInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1489, "src": "11594:16:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1536, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1499, "src": "11646:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"baseExpression": {"id": 1537, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1529, "src": "11656:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1539, "indexExpression": {"hexValue": "30", "id": 1538, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11667:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "11656:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1540, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1529, "src": "11671:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1542, "indexExpression": {"hexValue": "31", "id": 1541, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11682:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "11671:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1534, "name": "Gyro2CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3771, "src": "11613:12:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPMath_$3771_$", "typeString": "type(library Gyro2CLPMath)"}}, "id": 1535, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 3366, "src": "11613:32:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256)"}}, "id": 1543, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11613:72:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11594:91:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1545, "nodeType": "ExpressionStatement", "src": "11594:91:40"}, {"assignments": [1551], "declarations": [{"constant": false, "id": 1551, "mutability": "mutable", "name": "virtualParam", "nodeType": "VariableDeclaration", "scope": 1579, "src": "11696:30:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 1549, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11696:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1550, "length": {"hexValue": "32", "id": 1548, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11704:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "11696:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 1556, "initialValue": {"arguments": [{"id": 1553, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1529, "src": "11751:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, {"id": 1554, "name": "currentInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1489, "src": "11763:16:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1552, "name": "_getVirtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1105, "src": "11729:21:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function (uint256[2] memory,uint256) view returns (uint256[2] memory)"}}, "id": 1555, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11729:51:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "11696:84:40"}, {"expression": {"id": 1566, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1557, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1491, "src": "11791:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"id": 1558, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1486, "src": "11808:15:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"baseExpression": {"id": 1562, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1551, "src": "11844:12:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1564, "indexExpression": {"hexValue": "31", "id": 1563, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11857:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "11844:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1565, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "11808:51:40", "trueExpression": {"baseExpression": {"id": 1559, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1551, "src": "11826:12:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1561, "indexExpression": {"hexValue": "30", "id": 1560, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11839:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "11826:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11791:68:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1567, "nodeType": "ExpressionStatement", "src": "11791:68:40"}, {"expression": {"id": 1577, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1568, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1493, "src": "11869:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"id": 1569, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1486, "src": "11887:15:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"baseExpression": {"id": 1573, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1551, "src": "11923:12:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1575, "indexExpression": {"hexValue": "30", "id": 1574, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11936:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "11923:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1576, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "11887:51:40", "trueExpression": {"baseExpression": {"id": 1570, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1551, "src": "11905:12:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1572, "indexExpression": {"hexValue": "31", "id": 1571, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11918:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "11905:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11869:69:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1578, "nodeType": "ExpressionStatement", "src": "11869:69:40"}]}, "id": 1580, "implemented": true, "kind": "function", "modifiers": [], "name": "_calculateCurrentValues", "nodeType": "FunctionDefinition", "parameters": {"id": 1487, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1482, "mutability": "mutable", "name": "balanceTokenIn", "nodeType": "VariableDeclaration", "scope": 1580, "src": "11038:22:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1481, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11038:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1484, "mutability": "mutable", "name": "balanceTokenOut", "nodeType": "VariableDeclaration", "scope": 1580, "src": "11080:23:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1483, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11080:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1486, "mutability": "mutable", "name": "tokenInIsToken0", "nodeType": "VariableDeclaration", "scope": 1580, "src": "11123:20:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1485, "name": "bool", "nodeType": "ElementaryTypeName", "src": "11123:4:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "11028:121:40"}, "returnParameters": {"id": 1494, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1489, "mutability": "mutable", "name": "currentInvariant", "nodeType": "VariableDeclaration", "scope": 1580, "src": "11210:24:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1488, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11210:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1491, "mutability": "mutable", "name": "virtualParamIn", "nodeType": "VariableDeclaration", "scope": 1580, "src": "11248:22:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1490, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11248:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1493, "mutability": "mutable", "name": "virtualParamOut", "nodeType": "VariableDeclaration", "scope": 1580, "src": "11284:23:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1492, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11284:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "11196:121:40"}, "scope": 2341, "src": "10996:949:40", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [4876], "body": {"id": 1684, "nodeType": "Block", "src": "12926:998:40", "statements": [{"assignments": [1601], "declarations": [{"constant": false, "id": 1601, "mutability": "mutable", "name": "kind", "nodeType": "VariableDeclaration", "scope": 1684, "src": "12936:30:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$9316", "typeString": "enum BaseWeightedPool.JoinKind"}, "typeName": {"id": 1600, "name": "BaseWeightedPool.JoinKind", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9316, "src": "12936:25:40", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$9316", "typeString": "enum BaseWeightedPool.JoinKind"}}, "visibility": "internal"}], "id": 1605, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1602, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1589, "src": "12969:8:40", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 1603, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "joinKind", "nodeType": "MemberAccess", "referencedDeclaration": 3130, "src": "12969:17:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_enum$_JoinKind_$9316_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (enum BaseWeightedPool.JoinKind)"}}, "id": 1604, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12969:19:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$9316", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "VariableDeclarationStatement", "src": "12936:52:40"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_JoinKind_$9316", "typeString": "enum BaseWeightedPool.JoinKind"}, "id": 1611, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1607, "name": "kind", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1601, "src": "13007:4:40", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$9316", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 1608, "name": "BaseWeightedPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10517, "src": "13015:16:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BaseWeightedPool_$10517_$", "typeString": "type(contract BaseWeightedPool)"}}, "id": 1609, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "JoinKind", "nodeType": "MemberAccess", "referencedDeclaration": 9316, "src": "13015:25:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_JoinKind_$9316_$", "typeString": "type(enum BaseWeightedPool.JoinKind)"}}, "id": 1610, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "INIT", "nodeType": "MemberAccess", "src": "13015:30:40", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$9316", "typeString": "enum BaseWeightedPool.JoinKind"}}, "src": "13007:38:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 1612, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8418, "src": "13047:6:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$8418_$", "typeString": "type(library Errors)"}}, "id": 1613, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNINITIALIZED", "nodeType": "MemberAccess", "referencedDeclaration": 8087, "src": "13047:20:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1606, "name": "_require", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8013, "src": "12998:8:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 1614, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12998:70:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1615, "nodeType": "ExpressionStatement", "src": "12998:70:40"}, {"assignments": [1620], "declarations": [{"constant": false, "id": 1620, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 1684, "src": "13079:26:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1618, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13079:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1619, "nodeType": "ArrayTypeName", "src": "13079:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 1624, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1621, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1589, "src": "13108:8:40", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 1622, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "initialAmountsIn", "nodeType": "MemberAccess", "referencedDeclaration": 3169, "src": "13108:25:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (uint256[] memory)"}}, "id": 1623, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13108:27:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "13079:56:40"}, {"expression": {"arguments": [{"expression": {"id": 1628, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1620, "src": "13181:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1629, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "13181:16:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "32", "id": 1630, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13199:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "expression": {"id": 1625, "name": "InputHelpers", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10629, "src": "13145:12:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_InputHelpers_$10629_$", "typeString": "type(library InputHelpers)"}}, "id": 1627, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ensureInputLengthMatch", "nodeType": "MemberAccess", "referencedDeclaration": 10537, "src": "13145:35:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256) pure"}}, "id": 1631, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13145:56:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1632, "nodeType": "ExpressionStatement", "src": "13145:56:40"}, {"expression": {"arguments": [{"id": 1634, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1620, "src": "13225:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}], "id": 1633, "name": "_upscaleArray", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5957, "src": "13211:13:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$", "typeString": "function (uint256[] memory) view"}}, "id": 1635, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13211:24:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1636, "nodeType": "ExpressionStatement", "src": "13211:24:40"}, {"assignments": [1638, 1640, 1642], "declarations": [{"constant": false, "id": 1638, "mutability": "mutable", "name": "invariantAfterJoin", "nodeType": "VariableDeclaration", "scope": 1684, "src": "13247:26:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1637, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13247:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1640, "mutability": "mutable", "name": "virtualParam0", "nodeType": "VariableDeclaration", "scope": 1684, "src": "13275:21:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1639, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13275:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1642, "mutability": "mutable", "name": "virtualParam1", "nodeType": "VariableDeclaration", "scope": 1684, "src": "13298:21:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1641, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13298:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1652, "initialValue": {"arguments": [{"baseExpression": {"id": 1644, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1620, "src": "13347:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1646, "indexExpression": {"hexValue": "30", "id": 1645, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13357:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "13347:12:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1647, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1620, "src": "13361:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1649, "indexExpression": {"hexValue": "31", "id": 1648, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13371:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "13361:12:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "74727565", "id": 1650, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "13375:4:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 1643, "name": "_calculateCurrentValues", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1580, "src": "13323:23:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256,bool) view returns (uint256,uint256,uint256)"}}, "id": 1651, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13323:57:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "13246:134:40"}, {"assignments": [1654], "declarations": [{"constant": false, "id": 1654, "mutability": "mutable", "name": "spotPrice", "nodeType": "VariableDeclaration", "scope": 1684, "src": "13670:17:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1653, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13670:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1660, "initialValue": {"arguments": [{"id": 1656, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1620, "src": "13700:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 1657, "name": "virtualParam0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1640, "src": "13711:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1658, "name": "virtualParam1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1642, "src": "13726:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1655, "name": "_getPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1193, "src": "13690:9:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256)"}}, "id": 1659, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13690:50:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "13670:70:40"}, {"assignments": [1662], "declarations": [{"constant": false, "id": 1662, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 1684, "src": "13750:20:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1661, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13750:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1675, "initialValue": {"arguments": [{"arguments": [{"id": 1669, "name": "spotPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1654, "src": "13803:9:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"baseExpression": {"id": 1665, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1620, "src": "13782:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1667, "indexExpression": {"hexValue": "30", "id": 1666, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13792:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "13782:12:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1668, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mulDown", "nodeType": "MemberAccess", "referencedDeclaration": 6665, "src": "13782:20:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1670, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13782:31:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1671, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1620, "src": "13815:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1673, "indexExpression": {"hexValue": "31", "id": 1672, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13825:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "13815:12:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1663, "name": "Math", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10918, "src": "13773:4:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Math_$10918_$", "typeString": "type(library Math)"}}, "id": 1664, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 10660, "src": "13773:8:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1674, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13773:55:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "13750:78:40"}, {"expression": {"id": 1678, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1676, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4012, "src": "13839:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 1677, "name": "invariantAfterJoin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1638, "src": "13856:18:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "13839:35:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1679, "nodeType": "ExpressionStatement", "src": "13839:35:40"}, {"expression": {"components": [{"id": 1680, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1662, "src": "13893:12:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1681, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1620, "src": "13907:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1682, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "13892:25:40", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "functionReturnParameters": 1597, "id": 1683, "nodeType": "Return", "src": "13885:32:40"}]}, "documentation": {"id": 1581, "nodeType": "StructuredDocumentation", "src": "11951:801:40", "text": " @dev Called when the Pool is joined for the first time; that is, when the BPT total supply is zero.\n Returns the amount of BPT to mint, and the token amounts the Pool will receive in return.\n Minted BPT will be sent to `recipient`, except for _MINIMUM_BPT, which will be deducted from this amount and sent\n to the zero address instead. This will cause that BPT to remain forever locked there, preventing total BPT from\n ever dropping below that value, and ensuring `_onInitializePool` can only be called once in the entire Pool's\n lifetime.\n The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n be downscaled (rounding up) before being returned to the Vault."}, "id": 1685, "implemented": true, "kind": "function", "modifiers": [], "name": "_onInitializePool", "nodeType": "FunctionDefinition", "overrides": {"id": 1591, "nodeType": "OverrideSpecifier", "overrides": [], "src": "12881:8:40"}, "parameters": {"id": 1590, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1583, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1685, "src": "12793:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 1582, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "12793:7:40", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 1585, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1685, "src": "12810:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1584, "name": "address", "nodeType": "ElementaryTypeName", "src": "12810:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1587, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1685, "src": "12827:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1586, "name": "address", "nodeType": "ElementaryTypeName", "src": "12827:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1589, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 1685, "src": "12844:21:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1588, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "12844:5:40", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "12783:88:40"}, "returnParameters": {"id": 1597, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1593, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1685, "src": "12899:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1592, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12899:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1596, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1685, "src": "12908:16:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1594, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12908:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1595, "nodeType": "ArrayTypeName", "src": "12908:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "12898:27:40"}, "scope": 2341, "src": "12757:1167:40", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [4971], "body": {"id": 1793, "nodeType": "Block", "src": "15447:1614:40", "statements": [{"assignments": [1718], "declarations": [{"constant": false, "id": 1718, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 1793, "src": "15516:28:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 1716, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15516:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1717, "length": {"hexValue": "32", "id": 1715, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15524:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "15516:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 1721, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 1719, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [934, 947], "referencedDeclaration": 934, "src": "15547:15:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function () view returns (uint256[2] memory)"}}, "id": 1720, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15547:17:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "15516:48:40"}, {"assignments": [1723], "declarations": [{"constant": false, "id": 1723, "mutability": "mutable", "name": "invariantBeforeAction", "nodeType": "VariableDeclaration", "scope": 1793, "src": "15868:29:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1722, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15868:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1734, "initialValue": {"arguments": [{"id": 1726, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1695, "src": "15933:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"baseExpression": {"id": 1727, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1718, "src": "15943:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1729, "indexExpression": {"hexValue": "30", "id": 1728, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15954:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "15943:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1730, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1718, "src": "15958:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1732, "indexExpression": {"hexValue": "31", "id": 1731, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15969:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "15958:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1724, "name": "Gyro2CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3771, "src": "15900:12:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPMath_$3771_$", "typeString": "type(library Gyro2CLPMath)"}}, "id": 1725, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 3366, "src": "15900:32:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256)"}}, "id": 1733, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15900:72:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "15868:104:40"}, {"assignments": [1740], "declarations": [{"constant": false, "id": 1740, "mutability": "mutable", "name": "virtualParam", "nodeType": "VariableDeclaration", "scope": 1793, "src": "15982:30:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 1738, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15982:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1739, "length": {"hexValue": "32", "id": 1737, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15990:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "15982:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 1745, "initialValue": {"arguments": [{"id": 1742, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1718, "src": "16037:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, {"id": 1743, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1723, "src": "16049:21:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1741, "name": "_getVirtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1105, "src": "16015:21:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function (uint256[2] memory,uint256) view returns (uint256[2] memory)"}}, "id": 1744, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16015:56:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "15982:89:40"}, {"expression": {"arguments": [{"id": 1747, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1723, "src": "16098:21:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1746, "name": "_distributeFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2102, "src": "16082:15:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 1748, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16082:38:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1749, "nodeType": "ExpressionStatement", "src": "16082:38:40"}, {"assignments": [1751, 1754], "declarations": [{"constant": false, "id": 1751, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 1793, "src": "16132:20:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1750, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16132:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1754, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 1793, "src": "16154:26:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1752, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16154:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1753, "nodeType": "ArrayTypeName", "src": "16154:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 1759, "initialValue": {"arguments": [{"id": 1756, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1695, "src": "16192:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 1757, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1701, "src": "16202:8:40", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 1755, "name": "_doJoin", "nodeType": "Identifier", "overloadedDeclarations": [1838, 5040], "referencedDeclaration": 1838, "src": "16184:7:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 1758, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16184:27:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "16131:80:40"}, {"condition": {"expression": {"id": 1760, "name": "_capParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3806, "src": "16226:10:40", "typeDescriptions": {"typeIdentifier": "t_struct$_CapParams_$2359_storage", "typeString": "struct ICappedLiquidity.CapParams storage ref"}}, "id": 1761, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "capEnabled", "nodeType": "MemberAccess", "referencedDeclaration": 2354, "src": "16226:21:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1772, "nodeType": "IfStatement", "src": "16222:113:40", "trueBody": {"id": 1771, "nodeType": "Block", "src": "16249:86:40", "statements": [{"expression": {"arguments": [{"id": 1763, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1751, "src": "16274:12:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"id": 1765, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1692, "src": "16298:9:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 1764, "name": "balanceOf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13680, "src": "16288:9:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view returns (uint256)"}}, "id": 1766, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16288:20:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 1767, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13666, "src": "16310:11:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1768, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16310:13:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1762, "name": "_ensureCap", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3965, "src": "16263:10:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256,uint256) view"}}, "id": 1769, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16263:61:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1770, "nodeType": "ExpressionStatement", "src": "16263:61:40"}]}}, {"expression": {"id": 1782, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1773, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4012, "src": "16769:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1776, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1723, "src": "16824:21:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1777, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1751, "src": "16847:12:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 1778, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13666, "src": "16861:11:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1779, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16861:13:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "74727565", "id": 1780, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "16876:4:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "expression": {"id": 1774, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7995, "src": "16786:12:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$7995_$", "typeString": "type(library GyroPoolMath)"}}, "id": 1775, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "liquidityInvariantUpdate", "nodeType": "MemberAccess", "referencedDeclaration": 7914, "src": "16786:37:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,bool) pure returns (uint256)"}}, "id": 1781, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16786:95:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "16769:112:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1783, "nodeType": "ExpressionStatement", "src": "16769:112:40"}, {"expression": {"components": [{"id": 1784, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1751, "src": "17012:12:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1785, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1754, "src": "17026:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"arguments": [{"hexValue": "32", "id": 1789, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "17051:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 1788, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "17037:13:40", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 1786, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17041:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1787, "nodeType": "ArrayTypeName", "src": "17041:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 1790, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17037:16:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1791, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "17011:43:40", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory,uint256[] memory)"}}, "functionReturnParameters": 1712, "id": 1792, "nodeType": "Return", "src": "17004:50:40"}]}, "documentation": {"id": 1686, "nodeType": "StructuredDocumentation", "src": "13930:1133:40", "text": " @dev Called whenever the Pool is joined after the first initialization join (see `_onInitializePool`).\n Returns the amount of BPT to mint, the token amounts that the Pool will receive in return, and the number of\n tokens to pay in protocol swap fees.\n Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n Minted BPT will be sent to `recipient`.\n The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n be downscaled (rounding up) before being returned to the Vault.\n Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onJoinPool`). These\n amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way"}, "id": 1794, "implemented": true, "kind": "function", "modifiers": [], "name": "_onJoinPool", "nodeType": "FunctionDefinition", "overrides": {"id": 1703, "nodeType": "OverrideSpecifier", "overrides": [], "src": "15326:8:40"}, "parameters": {"id": 1702, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1688, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1794, "src": "15098:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 1687, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "15098:7:40", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 1690, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1794, "src": "15115:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1689, "name": "address", "nodeType": "ElementaryTypeName", "src": "15115:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1692, "mutability": "mutable", "name": "recipient", "nodeType": "VariableDeclaration", "scope": 1794, "src": "15132:17:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1691, "name": "address", "nodeType": "ElementaryTypeName", "src": "15132:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1695, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 1794, "src": "15159:25:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1693, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15159:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1694, "nodeType": "ArrayTypeName", "src": "15159:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1697, "mutability": "mutable", "name": "lastChangeBlock", "nodeType": "VariableDeclaration", "scope": 1794, "src": "15194:23:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1696, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15194:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1699, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1794, "src": "15227:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1698, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15227:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1701, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 1794, "src": "15273:21:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1700, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "15273:5:40", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "15088:212:40"}, "returnParameters": {"id": 1712, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1705, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1794, "src": "15365:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1704, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15365:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1708, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1794, "src": "15386:16:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1706, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15386:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1707, "nodeType": "ArrayTypeName", "src": "15386:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1711, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1794, "src": "15416:16:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1709, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15416:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1710, "nodeType": "ArrayTypeName", "src": "15416:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "15351:91:40"}, "scope": 2341, "src": "15068:1993:40", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 1837, "nodeType": "Block", "src": "17207:441:40", "statements": [{"assignments": [1810], "declarations": [{"constant": false, "id": 1810, "mutability": "mutable", "name": "kind", "nodeType": "VariableDeclaration", "scope": 1837, "src": "17217:30:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$9316", "typeString": "enum BaseWeightedPool.JoinKind"}, "typeName": {"id": 1809, "name": "BaseWeightedPool.JoinKind", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9316, "src": "17217:25:40", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$9316", "typeString": "enum BaseWeightedPool.JoinKind"}}, "visibility": "internal"}], "id": 1814, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1811, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1799, "src": "17250:8:40", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 1812, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "joinKind", "nodeType": "MemberAccess", "referencedDeclaration": 3130, "src": "17250:17:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_enum$_JoinKind_$9316_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (enum BaseWeightedPool.JoinKind)"}}, "id": 1813, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17250:19:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$9316", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "VariableDeclarationStatement", "src": "17217:52:40"}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_JoinKind_$9316", "typeString": "enum BaseWeightedPool.JoinKind"}, "id": 1819, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1815, "name": "kind", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1810, "src": "17406:4:40", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$9316", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 1816, "name": "BaseWeightedPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10517, "src": "17414:16:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BaseWeightedPool_$10517_$", "typeString": "type(contract BaseWeightedPool)"}}, "id": 1817, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "JoinKind", "nodeType": "MemberAccess", "referencedDeclaration": 9316, "src": "17414:25:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_JoinKind_$9316_$", "typeString": "type(enum BaseWeightedPool.JoinKind)"}}, "id": 1818, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "ALL_TOKENS_IN_FOR_EXACT_BPT_OUT", "nodeType": "MemberAccess", "src": "17414:57:40", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$9316", "typeString": "enum BaseWeightedPool.JoinKind"}}, "src": "17406:65:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 1835, "nodeType": "Block", "src": "17582:60:40", "statements": [{"expression": {"arguments": [{"expression": {"id": 1831, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8418, "src": "17604:6:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$8418_$", "typeString": "type(library Errors)"}}, "id": 1832, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNHANDLED_JOIN_KIND", "nodeType": "MemberAccess", "referencedDeclaration": 8132, "src": "17604:26:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1830, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8021, "src": "17596:7:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$", "typeString": "function (uint256) pure"}}, "id": 1833, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17596:35:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1834, "nodeType": "ExpressionStatement", "src": "17596:35:40"}]}, "id": 1836, "nodeType": "IfStatement", "src": "17402:240:40", "trueBody": {"id": 1829, "nodeType": "Block", "src": "17473:103:40", "statements": [{"expression": {"id": 1827, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 1820, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1802, "src": "17488:12:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1821, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1805, "src": "17502:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1822, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "17487:25:40", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1824, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1797, "src": "17546:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 1825, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1799, "src": "17556:8:40", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 1823, "name": "_joinAllTokensInForExactBPTOut", "nodeType": "Identifier", "overloadedDeclarations": [1876], "referencedDeclaration": 1876, "src": "17515:30:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 1826, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17515:50:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "17487:78:40", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1828, "nodeType": "ExpressionStatement", "src": "17487:78:40"}]}}]}, "id": 1838, "implemented": true, "kind": "function", "modifiers": [], "name": "_doJoin", "nodeType": "FunctionDefinition", "parameters": {"id": 1800, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1797, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 1838, "src": "17084:25:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1795, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17084:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1796, "nodeType": "ArrayTypeName", "src": "17084:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1799, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 1838, "src": "17111:21:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1798, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "17111:5:40", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "17083:50:40"}, "returnParameters": {"id": 1806, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1802, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 1838, "src": "17157:20:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1801, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17157:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1805, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 1838, "src": "17179:26:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1803, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17179:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1804, "nodeType": "ArrayTypeName", "src": "17179:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "17156:50:40"}, "scope": 2341, "src": "17067:581:40", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [5210], "body": {"id": 1875, "nodeType": "Block", "src": "17839:343:40", "statements": [{"assignments": [1853], "declarations": [{"constant": false, "id": 1853, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 1875, "src": "17849:20:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1852, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17849:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1857, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1854, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1843, "src": "17872:8:40", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 1855, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "allTokensInForExactBptOut", "nodeType": "MemberAccess", "referencedDeclaration": 3244, "src": "17872:34:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (uint256)"}}, "id": 1856, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17872:36:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "17849:59:40"}, {"assignments": [1862], "declarations": [{"constant": false, "id": 1862, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 1875, "src": "18019:26:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1860, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18019:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1861, "nodeType": "ArrayTypeName", "src": "18019:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 1870, "initialValue": {"arguments": [{"id": 1865, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1841, "src": "18094:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 1866, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1853, "src": "18104:12:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 1867, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13666, "src": "18118:11:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1868, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18118:13:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1863, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7995, "src": "18048:12:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$7995_$", "typeString": "type(library GyroPoolMath)"}}, "id": 1864, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcAllTokensInGivenExactBptOut", "nodeType": "MemberAccess", "referencedDeclaration": 7294, "src": "18048:45:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256[] memory)"}}, "id": 1869, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18048:84:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "18019:113:40"}, {"expression": {"components": [{"id": 1871, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1853, "src": "18151:12:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1872, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1862, "src": "18165:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1873, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "18150:25:40", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "functionReturnParameters": 1851, "id": 1874, "nodeType": "Return", "src": "18143:32:40"}]}, "id": 1876, "implemented": true, "kind": "function", "modifiers": [], "name": "_joinAllTokensInForExactBPTOut", "nodeType": "FunctionDefinition", "overrides": {"id": 1845, "nodeType": "OverrideSpecifier", "overrides": [], "src": "17782:8:40"}, "parameters": {"id": 1844, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1841, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 1876, "src": "17694:25:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1839, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17694:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1840, "nodeType": "ArrayTypeName", "src": "17694:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1843, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 1876, "src": "17721:21:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1842, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "17721:5:40", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "17693:50:40"}, "returnParameters": {"id": 1851, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1847, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1876, "src": "17808:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1846, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17808:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1850, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1876, "src": "17817:16:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1848, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17817:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1849, "nodeType": "ArrayTypeName", "src": "17817:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "17807:27:40"}, "scope": 2341, "src": "17654:528:40", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [5382], "body": {"id": 1992, "nodeType": "Block", "src": "19662:2255:40", "statements": [{"assignments": [1909], "declarations": [{"constant": false, "id": 1909, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 1992, "src": "19827:28:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 1907, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19827:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1908, "length": {"hexValue": "32", "id": 1906, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "19835:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "19827:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 1912, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 1910, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [934, 947], "referencedDeclaration": 934, "src": "19858:15:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function () view returns (uint256[2] memory)"}}, "id": 1911, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19858:17:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "19827:48:40"}, {"condition": {"arguments": [], "expression": {"argumentTypes": [], "id": 1913, "name": "_isNotPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14217, "src": "19890:12:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$", "typeString": "function () view returns (bool)"}}, "id": 1914, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19890:14:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 1981, "nodeType": "Block", "src": "21143:595:40", "statements": [{"expression": {"id": 1971, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 1964, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1896, "src": "21328:11:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1965, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1899, "src": "21341:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1966, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "21327:25:40", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1968, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1886, "src": "21363:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 1969, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1892, "src": "21373:8:40", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 1967, "name": "_doExit", "nodeType": "Identifier", "overloadedDeclarations": [2037, 5451], "referencedDeclaration": 2037, "src": "21355:7:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 1970, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21355:27:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "21327:55:40", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1972, "nodeType": "ExpressionStatement", "src": "21327:55:40"}, {"expression": {"id": 1979, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1973, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4012, "src": "21693:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"arguments": [{"id": 1976, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "21715:7:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 1975, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21715:7:40", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}], "id": 1974, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "21710:4:40", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 1977, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21710:13:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint256", "typeString": "type(uint256)"}}, "id": 1978, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "21710:17:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "21693:34:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1980, "nodeType": "ExpressionStatement", "src": "21693:34:40"}]}, "id": 1982, "nodeType": "IfStatement", "src": "19886:1852:40", "trueBody": {"id": 1963, "nodeType": "Block", "src": "19906:1231:40", "statements": [{"assignments": [1916], "declarations": [{"constant": false, "id": 1916, "mutability": "mutable", "name": "invariantBeforeAction", "nodeType": "VariableDeclaration", "scope": 1963, "src": "20226:29:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1915, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20226:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1927, "initialValue": {"arguments": [{"id": 1919, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1886, "src": "20291:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"baseExpression": {"id": 1920, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1909, "src": "20301:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1922, "indexExpression": {"hexValue": "30", "id": 1921, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20312:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "20301:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1923, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1909, "src": "20316:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1925, "indexExpression": {"hexValue": "31", "id": 1924, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20327:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "20316:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1917, "name": "Gyro2CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3771, "src": "20258:12:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPMath_$3771_$", "typeString": "type(library Gyro2CLPMath)"}}, "id": 1918, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 3366, "src": "20258:32:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256)"}}, "id": 1926, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20258:72:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "20226:104:40"}, {"assignments": [1933], "declarations": [{"constant": false, "id": 1933, "mutability": "mutable", "name": "virtualParam", "nodeType": "VariableDeclaration", "scope": 1963, "src": "20344:30:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 1931, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20344:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1932, "length": {"hexValue": "32", "id": 1930, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20352:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "20344:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 1938, "initialValue": {"arguments": [{"id": 1935, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1909, "src": "20399:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, {"id": 1936, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1916, "src": "20411:21:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1934, "name": "_getVirtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1105, "src": "20377:21:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function (uint256[2] memory,uint256) view returns (uint256[2] memory)"}}, "id": 1937, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20377:56:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "20344:89:40"}, {"expression": {"arguments": [{"id": 1940, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1916, "src": "20464:21:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1939, "name": "_distributeFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2102, "src": "20448:15:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 1941, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20448:38:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1942, "nodeType": "ExpressionStatement", "src": "20448:38:40"}, {"expression": {"id": 1950, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 1943, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1896, "src": "20502:11:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1944, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1899, "src": "20515:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1945, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "20501:25:40", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1947, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1886, "src": "20537:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 1948, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1892, "src": "20547:8:40", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 1946, "name": "_doExit", "nodeType": "Identifier", "overloadedDeclarations": [2037, 5451], "referencedDeclaration": 2037, "src": "20529:7:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 1949, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20529:27:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "20501:55:40", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1951, "nodeType": "ExpressionStatement", "src": "20501:55:40"}, {"expression": {"id": 1961, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1952, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4012, "src": "21014:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1955, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1916, "src": "21069:21:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1956, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1896, "src": "21092:11:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 1957, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13666, "src": "21105:11:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1958, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21105:13:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "66616c7365", "id": 1959, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "21120:5:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "expression": {"id": 1953, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7995, "src": "21031:12:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$7995_$", "typeString": "type(library GyroPoolMath)"}}, "id": 1954, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "liquidityInvariantUpdate", "nodeType": "MemberAccess", "referencedDeclaration": 7914, "src": "21031:37:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,bool) pure returns (uint256)"}}, "id": 1960, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21031:95:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "21014:112:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1962, "nodeType": "ExpressionStatement", "src": "21014:112:40"}]}}, {"expression": {"components": [{"id": 1983, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1896, "src": "21868:11:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1984, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1899, "src": "21881:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"arguments": [{"hexValue": "32", "id": 1988, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "21907:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 1987, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "21893:13:40", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 1985, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21897:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1986, "nodeType": "ArrayTypeName", "src": "21897:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 1989, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21893:16:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1990, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "21867:43:40", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory,uint256[] memory)"}}, "functionReturnParameters": 1903, "id": 1991, "nodeType": "Return", "src": "21860:50:40"}]}, "documentation": {"id": 1877, "nodeType": "StructuredDocumentation", "src": "18188:1054:40", "text": " @dev Called whenever the Pool is exited.\n Returns the amount of BPT to burn, the token amounts for each Pool token that the Pool will grant in return, and\n the number of tokens to pay in protocol swap fees.\n Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n BPT will be burnt from `sender`.\n The Pool will grant tokens to `recipient`. These amounts are considered upscaled and will be downscaled\n (rounding down) before being returned to the Vault.\n Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onExitPool`). These\n amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way"}, "id": 1993, "implemented": true, "kind": "function", "modifiers": [], "name": "_onExitPool", "nodeType": "FunctionDefinition", "overrides": {"id": 1894, "nodeType": "OverrideSpecifier", "overrides": [], "src": "19496:8:40"}, "parameters": {"id": 1893, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1879, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1993, "src": "19277:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 1878, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "19277:7:40", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 1881, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1993, "src": "19294:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1880, "name": "address", "nodeType": "ElementaryTypeName", "src": "19294:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1883, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1993, "src": "19311:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1882, "name": "address", "nodeType": "ElementaryTypeName", "src": "19311:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1886, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 1993, "src": "19328:25:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1884, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19328:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1885, "nodeType": "ArrayTypeName", "src": "19328:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1888, "mutability": "mutable", "name": "lastChangeBlock", "nodeType": "VariableDeclaration", "scope": 1993, "src": "19363:23:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1887, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19363:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1890, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1993, "src": "19396:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1889, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19396:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1892, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 1993, "src": "19443:21:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1891, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "19443:5:40", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "19267:203:40"}, "returnParameters": {"id": 1903, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1896, "mutability": "mutable", "name": "bptAmountIn", "nodeType": "VariableDeclaration", "scope": 1993, "src": "19535:19:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1895, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19535:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1899, "mutability": "mutable", "name": "amountsOut", "nodeType": "VariableDeclaration", "scope": 1993, "src": "19568:27:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1897, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19568:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1898, "nodeType": "ArrayTypeName", "src": "19568:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1902, "mutability": "mutable", "name": "dueProtocolFeeAmounts", "nodeType": "VariableDeclaration", "scope": 1993, "src": "19609:38:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1900, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19609:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1901, "nodeType": "ArrayTypeName", "src": "19609:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "19521:136:40"}, "scope": 2341, "src": "19247:2670:40", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 2036, "nodeType": "Block", "src": "22063:452:40", "statements": [{"assignments": [2009], "declarations": [{"constant": false, "id": 2009, "mutability": "mutable", "name": "kind", "nodeType": "VariableDeclaration", "scope": 2036, "src": "22073:30:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$9321", "typeString": "enum BaseWeightedPool.ExitKind"}, "typeName": {"id": 2008, "name": "BaseWeightedPool.ExitKind", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9321, "src": "22073:25:40", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$9321", "typeString": "enum BaseWeightedPool.ExitKind"}}, "visibility": "internal"}], "id": 2013, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 2010, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1998, "src": "22106:8:40", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 2011, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "exitKind", "nodeType": "MemberAccess", "referencedDeclaration": 3146, "src": "22106:17:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_enum$_ExitKind_$9321_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (enum BaseWeightedPool.ExitKind)"}}, "id": 2012, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22106:19:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$9321", "typeString": "enum BaseWeightedPool.ExitKind"}}, "nodeType": "VariableDeclarationStatement", "src": "22073:52:40"}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_ExitKind_$9321", "typeString": "enum BaseWeightedPool.ExitKind"}, "id": 2018, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2014, "name": "kind", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2009, "src": "22280:4:40", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$9321", "typeString": "enum BaseWeightedPool.ExitKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 2015, "name": "BaseWeightedPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10517, "src": "22288:16:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BaseWeightedPool_$10517_$", "typeString": "type(contract BaseWeightedPool)"}}, "id": 2016, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ExitKind", "nodeType": "MemberAccess", "referencedDeclaration": 9321, "src": "22288:25:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_ExitKind_$9321_$", "typeString": "type(enum BaseWeightedPool.ExitKind)"}}, "id": 2017, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "EXACT_BPT_IN_FOR_TOKENS_OUT", "nodeType": "MemberAccess", "src": "22288:53:40", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$9321", "typeString": "enum BaseWeightedPool.ExitKind"}}, "src": "22280:61:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 2034, "nodeType": "Block", "src": "22449:60:40", "statements": [{"expression": {"arguments": [{"expression": {"id": 2030, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8418, "src": "22471:6:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$8418_$", "typeString": "type(library Errors)"}}, "id": 2031, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNHANDLED_EXIT_KIND", "nodeType": "MemberAccess", "referencedDeclaration": 8210, "src": "22471:26:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2029, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8021, "src": "22463:7:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$", "typeString": "function (uint256) pure"}}, "id": 2032, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22463:35:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2033, "nodeType": "ExpressionStatement", "src": "22463:35:40"}]}, "id": 2035, "nodeType": "IfStatement", "src": "22276:233:40", "trueBody": {"id": 2028, "nodeType": "Block", "src": "22343:100:40", "statements": [{"expression": {"id": 2026, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 2019, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2001, "src": "22358:11:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 2020, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2004, "src": "22371:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 2021, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "22357:25:40", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 2023, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1996, "src": "22413:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 2024, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1998, "src": "22423:8:40", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 2022, "name": "_exitExactBPTInForTokensOut", "nodeType": "Identifier", "overloadedDeclarations": [2075], "referencedDeclaration": 2075, "src": "22385:27:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 2025, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22385:47:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "22357:75:40", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2027, "nodeType": "ExpressionStatement", "src": "22357:75:40"}]}}]}, "id": 2037, "implemented": true, "kind": "function", "modifiers": [], "name": "_doExit", "nodeType": "FunctionDefinition", "parameters": {"id": 1999, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1996, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 2037, "src": "21940:25:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1994, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21940:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1995, "nodeType": "ArrayTypeName", "src": "21940:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1998, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 2037, "src": "21967:21:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1997, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "21967:5:40", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "21939:50:40"}, "returnParameters": {"id": 2005, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2001, "mutability": "mutable", "name": "bptAmountIn", "nodeType": "VariableDeclaration", "scope": 2037, "src": "22013:19:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2000, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22013:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 2004, "mutability": "mutable", "name": "amountsOut", "nodeType": "VariableDeclaration", "scope": 2037, "src": "22034:27:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 2002, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22034:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2003, "nodeType": "ArrayTypeName", "src": "22034:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "22012:50:40"}, "scope": 2341, "src": "21923:592:40", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [5558], "body": {"id": 2074, "nodeType": "Block", "src": "22703:746:40", "statements": [{"assignments": [2052], "declarations": [{"constant": false, "id": 2052, "mutability": "mutable", "name": "bptAmountIn", "nodeType": "VariableDeclaration", "scope": 2074, "src": "23124:19:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2051, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23124:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2056, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 2053, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2042, "src": "23146:8:40", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 2054, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "exactBptInForTokensOut", "nodeType": "MemberAccess", "referencedDeclaration": 3291, "src": "23146:31:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (uint256)"}}, "id": 2055, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23146:33:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "23124:55:40"}, {"assignments": [2061], "declarations": [{"constant": false, "id": 2061, "mutability": "mutable", "name": "amountsOut", "nodeType": "VariableDeclaration", "scope": 2074, "src": "23290:27:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 2059, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23290:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2060, "nodeType": "ArrayTypeName", "src": "23290:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 2069, "initialValue": {"arguments": [{"id": 2064, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2040, "src": "23363:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 2065, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2052, "src": "23373:11:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 2066, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13666, "src": "23386:11:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 2067, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23386:13:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 2062, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7995, "src": "23320:12:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$7995_$", "typeString": "type(library GyroPoolMath)"}}, "id": 2063, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcTokensOutGivenExactBptIn", "nodeType": "MemberAccess", "referencedDeclaration": 7346, "src": "23320:42:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256[] memory)"}}, "id": 2068, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23320:80:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "23290:110:40"}, {"expression": {"components": [{"id": 2070, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2052, "src": "23418:11:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 2071, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2061, "src": "23431:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 2072, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "23417:25:40", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "functionReturnParameters": 2050, "id": 2073, "nodeType": "Return", "src": "23410:32:40"}]}, "id": 2075, "implemented": true, "kind": "function", "modifiers": [], "name": "_exitExactBPTInForTokensOut", "nodeType": "FunctionDefinition", "overrides": {"id": 2044, "nodeType": "OverrideSpecifier", "overrides": [], "src": "22646:8:40"}, "parameters": {"id": 2043, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2040, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 2075, "src": "22558:25:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 2038, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22558:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2039, "nodeType": "ArrayTypeName", "src": "22558:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 2042, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 2075, "src": "22585:21:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 2041, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "22585:5:40", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "22557:50:40"}, "returnParameters": {"id": 2050, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2046, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 2075, "src": "22672:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2045, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22672:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 2049, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 2075, "src": "22681:16:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 2047, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22681:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2048, "nodeType": "ArrayTypeName", "src": "22681:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "22671:27:40"}, "scope": 2341, "src": "22521:928:40", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 2101, "nodeType": "Block", "src": "23795:518:40", "statements": [{"assignments": [2082, 2084, 2086, 2088], "declarations": [{"constant": false, "id": 2082, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 2101, "src": "24023:16:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2081, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24023:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 2084, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 2101, "src": "24041:20:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2083, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24041:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 2086, "mutability": "mutable", "name": "gyroTreasury", "nodeType": "VariableDeclaration", "scope": 2101, "src": "24063:20:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2085, "name": "address", "nodeType": "ElementaryTypeName", "src": "24063:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 2088, "mutability": "mutable", "name": "balTreasury", "nodeType": "VariableDeclaration", "scope": 2101, "src": "24085:19:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2087, "name": "address", "nodeType": "ElementaryTypeName", "src": "24085:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 2093, "initialValue": {"arguments": [{"id": 2090, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4012, "src": "24147:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 2091, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2078, "src": "24175:21:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2089, "name": "_getDueProtocolFeeAmounts", "nodeType": "Identifier", "overloadedDeclarations": [2127, 2186], "referencedDeclaration": 2186, "src": "24108:25:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "function (uint256,uint256) view returns (uint256,uint256,address,address)"}}, "id": 2092, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24108:98:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "nodeType": "VariableDeclarationStatement", "src": "24022:184:40"}, {"expression": {"arguments": [{"id": 2095, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2082, "src": "24256:8:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 2096, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2084, "src": "24266:12:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 2097, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2086, "src": "24280:12:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2098, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2088, "src": "24294:11:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 2094, "name": "_payFeesBpt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2218, "src": "24244:11:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$", "typeString": "function (uint256,uint256,address,address)"}}, "id": 2099, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24244:62:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2100, "nodeType": "ExpressionStatement", "src": "24244:62:40"}]}, "documentation": {"id": 2076, "nodeType": "StructuredDocumentation", "src": "23471:253:40", "text": " @dev Computes and distributes fees between the Balancer and the Gyro treasury\n The fees are computed and distributed in BPT rather than using the\n Balancer regular distribution mechanism which would pay these in underlying"}, "id": 2102, "implemented": true, "kind": "function", "modifiers": [], "name": "_distributeFees", "nodeType": "FunctionDefinition", "parameters": {"id": 2079, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2078, "mutability": "mutable", "name": "invariantBeforeAction", "nodeType": "VariableDeclaration", "scope": 2102, "src": "23755:29:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2077, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23755:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "23754:31:40"}, "returnParameters": {"id": 2080, "nodeType": "ParameterList", "parameters": [], "src": "23795:0:40"}, "scope": 2341, "src": "23730:583:40", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [5790], "body": {"id": 2126, "nodeType": "Block", "src": "24721:42:40", "statements": [{"expression": {"arguments": [{"hexValue": "4e6f7420696d706c656d656e746564", "id": 2123, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "24738:17:40", "typeDescriptions": {"typeIdentifier": "t_stringliteral_9f5474d7a5849b3f79e8aee7ea2c60bcd36a60a08b4fa41f97e2fccf1c4df98b", "typeString": "literal_string \"Not implemented\""}, "value": "Not implemented"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_9f5474d7a5849b3f79e8aee7ea2c60bcd36a60a08b4fa41f97e2fccf1c4df98b", "typeString": "literal_string \"Not implemented\""}], "id": 2122, "name": "revert", "nodeType": "Identifier", "overloadedDeclarations": [-19, -19], "referencedDeclaration": -19, "src": "24731:6:40", "typeDescriptions": {"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory) pure"}}, "id": 2124, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24731:25:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2125, "nodeType": "ExpressionStatement", "src": "24731:25:40"}]}, "documentation": {"id": 2103, "nodeType": "StructuredDocumentation", "src": "24319:96:40", "text": " @dev this function overrides inherited function to make sure it is never used"}, "id": 2127, "implemented": true, "kind": "function", "modifiers": [], "name": "_getDueProtocolFeeAmounts", "nodeType": "FunctionDefinition", "overrides": {"id": 2117, "nodeType": "OverrideSpecifier", "overrides": [], "src": "24685:8:40"}, "parameters": {"id": 2116, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2106, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 2127, "src": "24464:16:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 2104, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24464:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2105, "nodeType": "ArrayTypeName", "src": "24464:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 2109, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 2127, "src": "24503:16:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 2107, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24503:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2108, "nodeType": "ArrayTypeName", "src": "24503:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 2111, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 2127, "src": "24551:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2110, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24551:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 2113, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 2127, "src": "24590:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2112, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24590:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 2115, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 2127, "src": "24628:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2114, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24628:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "24454:216:40"}, "returnParameters": {"id": 2121, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2120, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 2127, "src": "24703:16:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 2118, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24703:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2119, "nodeType": "ArrayTypeName", "src": "24703:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "24702:18:40"}, "scope": 2341, "src": "24420:343:40", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 2185, "nodeType": "Block", "src": "25305:681:40", "statements": [{"assignments": [2144, 2146, 2148, 2150], "declarations": [{"constant": false, "id": 2144, "mutability": "mutable", "name": "protocolSwapFeePerc", "nodeType": "VariableDeclaration", "scope": 2185, "src": "25316:27:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2143, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25316:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 2146, "mutability": "mutable", "name": "protocolFeeGyroPortion", "nodeType": "VariableDeclaration", "scope": 2185, "src": "25345:30:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2145, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25345:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 2148, "mutability": "mutable", "name": "gyroTreasury", "nodeType": "VariableDeclaration", "scope": 2185, "src": "25377:20:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2147, "name": "address", "nodeType": "ElementaryTypeName", "src": "25377:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 2150, "mutability": "mutable", "name": "balTreasury", "nodeType": "VariableDeclaration", "scope": 2185, "src": "25399:19:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2149, "name": "address", "nodeType": "ElementaryTypeName", "src": "25399:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 2153, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 2151, "name": "_getFeesMetadata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2258, "src": "25422:16:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "function () view returns (uint256,uint256,address,address)"}}, "id": 2152, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25422:18:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "nodeType": "VariableDeclarationStatement", "src": "25315:125:40"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2156, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2154, "name": "protocolSwapFeePerc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2144, "src": "25536:19:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 2155, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "25559:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "25536:24:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 2164, "nodeType": "IfStatement", "src": "25532:95:40", "trueBody": {"id": 2163, "nodeType": "Block", "src": "25562:65:40", "statements": [{"expression": {"components": [{"hexValue": "30", "id": 2157, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "25584:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"hexValue": "30", "id": 2158, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "25587:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"id": 2159, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2148, "src": "25590:12:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2160, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2150, "src": "25604:11:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 2161, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "25583:33:40", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_address_$_t_address_$", "typeString": "tuple(int_const 0,int_const 0,address,address)"}}, "functionReturnParameters": 2142, "id": 2162, "nodeType": "Return", "src": "25576:40:40"}]}}, {"assignments": [2166, 2168], "declarations": [{"constant": false, "id": 2166, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 2185, "src": "25671:16:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2165, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25671:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 2168, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 2185, "src": "25689:20:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2167, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25689:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2178, "initialValue": {"arguments": [{"id": 2171, "name": "previousInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2130, "src": "25757:17:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 2172, "name": "currentInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2132, "src": "25788:16:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 2173, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13666, "src": "25818:11:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 2174, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25818:13:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 2175, "name": "protocolSwapFeePerc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2144, "src": "25845:19:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 2176, "name": "protocolFeeGyroPortion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2146, "src": "25878:22:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 2169, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7995, "src": "25713:12:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$7995_$", "typeString": "type(library GyroPoolMath)"}}, "id": 2170, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcProtocolFees", "nodeType": "MemberAccess", "referencedDeclaration": 7430, "src": "25713:30:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,uint256,uint256) pure returns (uint256,uint256)"}}, "id": 2177, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25713:197:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "25670:240:40"}, {"expression": {"components": [{"id": 2179, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2166, "src": "25929:8:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 2180, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2168, "src": "25939:12:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 2181, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2148, "src": "25953:12:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2182, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2150, "src": "25967:11:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 2183, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "25928:51:40", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "functionReturnParameters": 2142, "id": 2184, "nodeType": "Return", "src": "25921:58:40"}]}, "documentation": {"id": 2128, "nodeType": "StructuredDocumentation", "src": "24769:298:40", "text": " @dev Calculates protocol fee amounts in BPT terms.\n protocolSwapFeePercentage is not used here b/c we take parameters from GyroConfig instead.\n Returns: BPT due to Gyro, BPT due to Balancer, receiving address for Gyro fees, receiving address for Balancer\n fees."}, "id": 2186, "implemented": true, "kind": "function", "modifiers": [], "name": "_getDueProtocolFeeAmounts", "nodeType": "FunctionDefinition", "parameters": {"id": 2133, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2130, "mutability": "mutable", "name": "previousInvariant", "nodeType": "VariableDeclaration", "scope": 2186, "src": "25107:25:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2129, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25107:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 2132, "mutability": "mutable", "name": "currentInvariant", "nodeType": "VariableDeclaration", "scope": 2186, "src": "25134:24:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2131, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25134:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "25106:53:40"}, "returnParameters": {"id": 2142, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2135, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 2186, "src": "25220:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2134, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25220:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 2137, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 2186, "src": "25241:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2136, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25241:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 2139, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 2186, "src": "25262:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2138, "name": "address", "nodeType": "ElementaryTypeName", "src": "25262:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 2141, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 2186, "src": "25283:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2140, "name": "address", "nodeType": "ElementaryTypeName", "src": "25283:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "25206:94:40"}, "scope": 2341, "src": "25072:914:40", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 2217, "nodeType": "Block", "src": "26143:283:40", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2199, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2197, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2188, "src": "26201:8:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 2198, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "26212:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "26201:12:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 2206, "nodeType": "IfStatement", "src": "26197:82:40", "trueBody": {"id": 2205, "nodeType": "Block", "src": "26215:64:40", "statements": [{"expression": {"arguments": [{"id": 2201, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2192, "src": "26245:12:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2202, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2188, "src": "26259:8:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2200, "name": "_mintPoolTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11127, "src": "26229:15:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 2203, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26229:39:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2204, "nodeType": "ExpressionStatement", "src": "26229:39:40"}]}}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2209, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2207, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2190, "src": "26335:12:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 2208, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "26350:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "26335:16:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 2216, "nodeType": "IfStatement", "src": "26331:89:40", "trueBody": {"id": 2215, "nodeType": "Block", "src": "26353:67:40", "statements": [{"expression": {"arguments": [{"id": 2211, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2194, "src": "26383:11:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2212, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2190, "src": "26396:12:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2210, "name": "_mintPoolTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11127, "src": "26367:15:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 2213, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26367:42:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2214, "nodeType": "ExpressionStatement", "src": "26367:42:40"}]}}]}, "id": 2218, "implemented": true, "kind": "function", "modifiers": [], "name": "_payFeesBpt", "nodeType": "FunctionDefinition", "parameters": {"id": 2195, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2188, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 2218, "src": "26022:16:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2187, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26022:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 2190, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 2218, "src": "26048:20:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2189, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26048:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 2192, "mutability": "mutable", "name": "gyroTreasury", "nodeType": "VariableDeclaration", "scope": 2218, "src": "26078:20:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2191, "name": "address", "nodeType": "ElementaryTypeName", "src": "26078:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 2194, "mutability": "mutable", "name": "balTreasury", "nodeType": "VariableDeclaration", "scope": 2218, "src": "26108:19:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2193, "name": "address", "nodeType": "ElementaryTypeName", "src": "26108:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "26012:121:40"}, "returnParameters": {"id": 2196, "nodeType": "ParameterList", "parameters": [], "src": "26143:0:40"}, "scope": 2341, "src": "25992:434:40", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 2257, "nodeType": "Block", "src": "26605:326:40", "statements": [{"expression": {"components": [{"arguments": [{"arguments": [{"id": 2233, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "26677:4:40", "typeDescriptions": {"typeIdentifier": "t_contract$_Gyro2CLPPool_$2341", "typeString": "contract Gyro2CLPPool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_Gyro2CLPPool_$2341", "typeString": "contract Gyro2CLPPool"}], "id": 2232, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "26669:7:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 2231, "name": "address", "nodeType": "ElementaryTypeName", "src": "26669:7:40", "typeDescriptions": {}}}, "id": 2234, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26669:13:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2235, "name": "POOL_TYPE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 822, "src": "26684:9:40", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 2229, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 824, "src": "26636:10:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$6353", "typeString": "contract IGyroConfig"}}, "id": 2230, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getSwapFeePercForPool", "nodeType": "MemberAccess", "referencedDeclaration": 6377, "src": "26636:32:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IGyroConfig_$6353_$_t_address_$_t_bytes32_$returns$_t_uint256_$bound_to$_t_contract$_IGyroConfig_$6353_$", "typeString": "function (contract IGyroConfig,address,bytes32) view returns (uint256)"}}, "id": 2236, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26636:58:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"arguments": [{"id": 2241, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "26760:4:40", "typeDescriptions": {"typeIdentifier": "t_contract$_Gyro2CLPPool_$2341", "typeString": "contract Gyro2CLPPool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_Gyro2CLPPool_$2341", "typeString": "contract Gyro2CLPPool"}], "id": 2240, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "26752:7:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 2239, "name": "address", "nodeType": "ElementaryTypeName", "src": "26752:7:40", "typeDescriptions": {}}}, "id": 2242, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26752:13:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2243, "name": "POOL_TYPE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 822, "src": "26767:9:40", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 2237, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 824, "src": "26708:10:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$6353", "typeString": "contract IGyroConfig"}}, "id": 2238, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getProtocolFeeGyroPortionForPool", "nodeType": "MemberAccess", "referencedDeclaration": 6397, "src": "26708:43:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IGyroConfig_$6353_$_t_address_$_t_bytes32_$returns$_t_uint256_$bound_to$_t_contract$_IGyroConfig_$6353_$", "typeString": "function (contract IGyroConfig,address,bytes32) view returns (uint256)"}}, "id": 2244, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26708:69:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"expression": {"id": 2247, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6474, "src": "26813:14:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$6474_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 2248, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "GYRO_TREASURY_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 6470, "src": "26813:32:40", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 2245, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 824, "src": "26791:10:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$6353", "typeString": "contract IGyroConfig"}}, "id": 2246, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getAddress", "nodeType": "MemberAccess", "referencedDeclaration": 6328, "src": "26791:21:40", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$", "typeString": "function (bytes32) view external returns (address)"}}, "id": 2249, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26791:55:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"expression": {"id": 2252, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6474, "src": "26882:14:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$6474_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 2253, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "BAL_TREASURY_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 6473, "src": "26882:31:40", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 2250, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 824, "src": "26860:10:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$6353", "typeString": "contract IGyroConfig"}}, "id": 2251, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getAddress", "nodeType": "MemberAccess", "referencedDeclaration": 6328, "src": "26860:21:40", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$", "typeString": "function (bytes32) view external returns (address)"}}, "id": 2254, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26860:54:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 2255, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "26622:302:40", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "functionReturnParameters": 2228, "id": 2256, "nodeType": "Return", "src": "26615:309:40"}]}, "id": 2258, "implemented": true, "kind": "function", "modifiers": [], "name": "_getFeesMetadata", "nodeType": "FunctionDefinition", "parameters": {"id": 2219, "nodeType": "ParameterList", "parameters": [], "src": "26457:2:40"}, "returnParameters": {"id": 2228, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2221, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 2258, "src": "26520:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2220, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26520:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 2223, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 2258, "src": "26541:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2222, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26541:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 2225, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 2258, "src": "26562:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2224, "name": "address", "nodeType": "ElementaryTypeName", "src": "26562:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 2227, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 2258, "src": "26583:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2226, "name": "address", "nodeType": "ElementaryTypeName", "src": "26583:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "26506:94:40"}, "scope": 2341, "src": "26432:499:40", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 2287, "nodeType": "Block", "src": "27548:216:40", "statements": [{"assignments": [2265], "declarations": [{"constant": false, "id": 2265, "mutability": "mutable", "name": "supply", "nodeType": "VariableDeclaration", "scope": 2287, "src": "27558:14:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2264, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27558:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2268, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 2266, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13666, "src": "27575:11:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 2267, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27575:13:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "27558:30:40"}, {"assignments": [2270, 2272, null, null], "declarations": [{"constant": false, "id": 2270, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 2287, "src": "27599:16:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2269, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27599:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 2272, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 2287, "src": "27617:20:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2271, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27617:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, null, null], "id": 2278, "initialValue": {"arguments": [{"id": 2274, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4012, "src": "27671:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 2275, "name": "getInvariant", "nodeType": "Identifier", "overloadedDeclarations": [1168], "referencedDeclaration": 1168, "src": "27687:12:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 2276, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27687:14:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2273, "name": "_getDueProtocolFeeAmounts", "nodeType": "Identifier", "overloadedDeclarations": [2127, 2186], "referencedDeclaration": 2186, "src": "27645:25:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "function (uint256,uint256) view returns (uint256,uint256,address,address)"}}, "id": 2277, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27645:57:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "nodeType": "VariableDeclarationStatement", "src": "27598:104:40"}, {"expression": {"arguments": [{"id": 2284, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2272, "src": "27744:12:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 2281, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2270, "src": "27730:8:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 2279, "name": "supply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2265, "src": "27719:6:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2280, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 6595, "src": "27719:10:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 2282, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27719:20:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2283, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 6595, "src": "27719:24:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 2285, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27719:38:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 2263, "id": 2286, "nodeType": "Return", "src": "27712:45:40"}]}, "documentation": {"id": 2259, "nodeType": "StructuredDocumentation", "src": "26937:547:40", "text": "@notice Effective BPT supply.\n  This is the same as `totalSupply()` but also accounts for the fact that the pool owes\n  protocol fees to the pool in the form of unminted LP shares created on the next join/exit,\n  diluting LPers. Thus, this is the totalSupply() that the next join/exit operation will see.\n  Equivalent to the respective function in, e.g., WeightedPool, see:\n  https://github.com/balancer/balancer-v2-monorepo/blob/master/pkg/pool-weighted/contracts/WeightedPool.sol#L325-L344"}, "functionSelector": "876f303b", "id": 2288, "implemented": true, "kind": "function", "modifiers": [], "name": "getActualSupply", "nodeType": "FunctionDefinition", "parameters": {"id": 2260, "nodeType": "ParameterList", "parameters": [], "src": "27513:2:40"}, "returnParameters": {"id": 2263, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2262, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 2288, "src": "27539:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2261, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27539:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "27538:9:40"}, "scope": 2341, "src": "27489:275:40", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 2328, "nodeType": "Block", "src": "27940:319:40", "statements": [{"assignments": [2295], "declarations": [{"constant": false, "id": 2295, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 2328, "src": "27950:17:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2294, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27950:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2298, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 2296, "name": "getInvariant", "nodeType": "Identifier", "overloadedDeclarations": [1168], "referencedDeclaration": 1168, "src": "27970:12:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 2297, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27970:14:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "27950:34:40"}, {"assignments": [2300], "declarations": [{"constant": false, "id": 2300, "mutability": "mutable", "name": "supply", "nodeType": "VariableDeclaration", "scope": 2328, "src": "27994:14:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2299, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27994:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2303, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 2301, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13666, "src": "28011:11:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 2302, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28011:13:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "27994:30:40"}, {"assignments": [2305, 2307, null, null], "declarations": [{"constant": false, "id": 2305, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 2328, "src": "28035:16:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2304, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28035:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 2307, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 2328, "src": "28053:20:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2306, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28053:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, null, null], "id": 2312, "initialValue": {"arguments": [{"id": 2309, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4012, "src": "28107:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 2310, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2295, "src": "28123:9:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2308, "name": "_getDueProtocolFeeAmounts", "nodeType": "Identifier", "overloadedDeclarations": [2127, 2186], "referencedDeclaration": 2186, "src": "28081:25:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "function (uint256,uint256) view returns (uint256,uint256,address,address)"}}, "id": 2311, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28081:52:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "nodeType": "VariableDeclarationStatement", "src": "28034:99:40"}, {"assignments": [2314], "declarations": [{"constant": false, "id": 2314, "mutability": "mutable", "name": "actualSupply", "nodeType": "VariableDeclaration", "scope": 2328, "src": "28143:20:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2313, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28143:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2322, "initialValue": {"arguments": [{"id": 2320, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2307, "src": "28191:12:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 2317, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2305, "src": "28177:8:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 2315, "name": "supply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2300, "src": "28166:6:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2316, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 6595, "src": "28166:10:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 2318, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28166:20:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2319, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 6595, "src": "28166:24:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 2321, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28166:38:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "28143:61:40"}, {"expression": {"arguments": [{"id": 2325, "name": "actualSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2314, "src": "28239:12:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 2323, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2295, "src": "28221:9:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2324, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "divDown", "nodeType": "MemberAccess", "referencedDeclaration": 6821, "src": "28221:17:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 2326, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28221:31:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 2293, "id": 2327, "nodeType": "Return", "src": "28214:38:40"}]}, "documentation": {"id": 2289, "nodeType": "StructuredDocumentation", "src": "27770:94:40", "text": "@notice Equivalent to but more efficient than `getInvariant().divDown(getActualSupply())`."}, "functionSelector": "623a2e75", "id": 2329, "implemented": true, "kind": "function", "modifiers": [], "name": "getInvariantDivActualSupply", "nodeType": "FunctionDefinition", "parameters": {"id": 2290, "nodeType": "ParameterList", "parameters": [], "src": "27905:2:40"}, "returnParameters": {"id": 2293, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2292, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 2329, "src": "27931:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2291, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27931:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "27930:9:40"}, "scope": 2341, "src": "27869:390:40", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"baseFunctions": [6284], "body": {"id": 2339, "nodeType": "Block", "src": "28321:35:40", "statements": [{"expression": {"arguments": [{"id": 2336, "name": "paused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2331, "src": "28342:6:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 2335, "name": "_setPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14189, "src": "28331:10:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$", "typeString": "function (bool)"}}, "id": 2337, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28331:18:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2338, "nodeType": "ExpressionStatement", "src": "28331:18:40"}]}, "id": 2340, "implemented": true, "kind": "function", "modifiers": [], "name": "_setPausedState", "nodeType": "FunctionDefinition", "overrides": {"id": 2333, "nodeType": "OverrideSpecifier", "overrides": [], "src": "28312:8:40"}, "parameters": {"id": 2332, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2331, "mutability": "mutable", "name": "paused", "nodeType": "VariableDeclaration", "scope": 2340, "src": "28290:11:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 2330, "name": "bool", "nodeType": "ElementaryTypeName", "src": "28290:4:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "28289:13:40"}, "returnParameters": {"id": 2334, "nodeType": "ParameterList", "parameters": [], "src": "28321:0:40"}, "scope": 2341, "src": "28265:91:40", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}], "scope": 2342, "src": "926:27432:40"}], "src": "178:28181:40"}, "bytecode": "6102e06040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9610120526706f05b59d3b20000610200819052610220526000610240523480156200005057600080fd5b50604051620051bf380380620051bf833981016040819052620000739162000ae6565b8160a001518260600151836080015184600001518060c001518160e001518260200151836040015184600001518280604051806040016040528060018152602001603160f81b81525085858a6101000151336001600160a01b031660001b806080818152505050806001600160a01b031660a0816001600160a01b031660601b815250505081600390805190602001906200011092919062000828565b5080516200012690600490602084019062000828565b505060058054601260ff1990911617905550815160209283012060c052805191012060e052507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61010052606090811b6001600160601b031916610140524294909401610160819052909201610180525050604080516002808252928101909152600091816020016020820280368337019050509050816060015181600081518110620001cf57fe5b60200260200101906001600160a01b031690816001600160a01b0316815250508160800151816001815181106200020257fe5b60200260200101906001600160a01b031690816001600160a01b03168152505062000238816200051960201b620015f41760201c565b60a0820151620002489062000529565b81516040516309b2760f60e01b81526000916001600160a01b0316906309b2760f906200027b9060029060040162000c85565b602060405180830381600087803b1580156200029657600080fd5b505af1158015620002ab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002d1919062000acd565b83516040805160028082526060820183529394506001600160a01b03909216926366a9c7d2928592879290602083019080368337019050506040518463ffffffff1660e01b8152600401620003299392919062000beb565b600060405180830381600087803b1580156200034457600080fd5b505af115801562000359573d6000803e3d6000fd5b5050506101a082905250606080840180516001600160601b031990831b81166101c052608086015190921b9091166101e052516200039790620005b2565b610260526080830151620003ab90620005b2565b61028052505060408051808201909152600e81526d1b9bdd08185d5d1a1bdc9a5e995960921b602082015290506001600160a01b0383166200040b5760405162461bcd60e51b815260040162000402919062000c9a565b60405180910390fd5b50600b80546001600160a01b0319166001600160a01b039384161790558051600a8054602084015160409094015160ff1990911692151592909217610100600160801b0319166101006001600160781b0390941693909302929092176001600160801b03908116600160801b9190921602179055620004909082161515606962000660565b600c80546001600160a01b0319166001600160a01b039290921691909117905560408201516020830151620004c9911161015e62000660565b620004e16001600160a01b0382161515606962000660565b60208201516102a0526040909101516102c052600d80546001600160a01b0319166001600160a01b0390921691909117905562000d2f565b80620005258162000671565b5050565b6200053e64e8d4a5100082101560cb620006fe565b6200055667016345785d8a000082111560ca620006fe565b62000572816008546200070f60201b620016021790919060201c565b6008556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc90620005a790839062000ccf565b60405180910390a150565b600080826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015620005ef57600080fd5b505afa15801562000604573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200062a919062000bc8565b60ff1690506000620006496012836200073560201b620016171760201c565b600a0a670de0b6b3a764000002925050505b919050565b81620005255762000525816200074d565b6002815110156200068257620006fb565b6000816000815181106200069257fe5b602002602001015190506000600190505b8251811015620006f8576000838281518110620006bc57fe5b60200260200101519050620006ed816001600160a01b0316846001600160a01b0316106065620006fe60201b60201c565b9150600101620006a3565b50505b50565b81620005255762000525816200075f565b60006200072e82605685620007b260201b6200162d179092919060201c565b9392505050565b600062000747838311156001620006fe565b50900390565b620006fb816223aca960e91b620007c7565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6001600160401b03811b1992909216911b1790565b62461bcd60e51b600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fd5b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620008605760008555620008ab565b82601f106200087b57805160ff1916838001178555620008ab565b82800160010185558215620008ab579182015b82811115620008ab5782518255916020019190600101906200088e565b50620008b9929150620008bd565b5090565b5b80821115620008b95760008155600101620008be565b80516001600160a01b03811681146200065b57600080fd5b600082601f830112620008fd578081fd5b81516001600160401b038111156200091157fe5b62000926601f8201601f191660200162000cd8565b8181528460208386010111156200093b578283fd5b6200094e82602083016020870162000cfc565b949350505050565b60006060828403121562000968578081fd5b604051606081016001600160401b03811182821017156200098557fe5b8060405250809150825180151581146200099e57600080fd5b815260208301516001600160781b0381168114620009bb57600080fd5b602082015260408301516001600160801b0381168114620009db57600080fd5b6040919091015292915050565b6000610120808385031215620009fc578182fd5b62000a078162000cd8565b91505062000a1582620008d4565b815260208201516001600160401b038082111562000a3257600080fd5b62000a4085838601620008ec565b6020840152604084015191508082111562000a5a57600080fd5b5062000a6984828501620008ec565b60408301525062000a7d60608301620008d4565b606082015262000a9060808301620008d4565b608082015260a082015160a082015260c082015160c082015260e082015160e082015261010062000ac3818401620008d4565b9082015292915050565b60006020828403121562000adf578081fd5b5051919050565b6000806040838503121562000af9578081fd5b82516001600160401b038082111562000b10578283fd5b90840190610100828703121562000b25578283fd5b60405160c08101818110838211171562000b3b57fe5b60405282518281111562000b4d578485fd5b62000b5b88828601620009e8565b825250602083015160208201526040830151604082015262000b8060608401620008d4565b606082015262000b94876080850162000956565b608082015262000ba760e08401620008d4565b60a0820152935062000bbf91505060208401620008d4565b90509250929050565b60006020828403121562000bda578081fd5b815160ff811681146200072e578182fd5b60006060820185835260206060818501528186518084526080860191508288019350845b8181101562000c365784516001600160a01b03168352938301939183019160010162000c0f565b505084810360408601528551808252908201925081860190845b8181101562000c775782516001600160a01b03168552938301939183019160010162000c50565b509298975050505050505050565b602081016003831062000c9457fe5b91905290565b600060208252825180602084015262000cbb81604085016020870162000cfc565b601f01601f19169190910160400192915050565b90815260200190565b6040518181016001600160401b038111828210171562000cf457fe5b604052919050565b60005b8381101562000d1957818101518382015260200162000cff565b8381111562000d29576000848401525b50505050565b60805160a05160601c60c05160e05161010051610120516101405160601c61016051610180516101a0516101c05160601c6101e05160601c61020051610220516102405161026051610280516102a0516102c0516143b862000e0760003980612ac4525080612aeb525080611a01525080611a27525050806131d95250806132005250806120fc52508061115c52806120b052508061081352508061179252508061176e525080610fbf5250806113875250806118ae5250806118f05250806118cf525080610f9b525080610ee052506143b86000f3fe608060405234801561001057600080fd5b50600436106102a05760003560e01c806374f3b0091161016757806398d5fdca116100ce578063abd13afe11610087578063abd13afe1461057a578063c0ff1a1514610582578063d505accf1461058a578063d5c096c41461059d578063dd62ed3e146105b0578063f89f27ed146105c3576102a0565b806398d5fdca146105295780639b02cdde146105315780639d2c110c14610539578063a457c2d71461054c578063a9059cbb1461055f578063aaabadc514610572576102a0565b8063876f303b11610120578063876f303b146104e157806387ec6817146104e9578063893d20e8146104fc5780638d928af8146105045780638dd9f89d1461050c57806395d89b4114610521576102a0565b806374f3b0091461046c57806376e54a461461048d5780637ecebe00146104a05780638002df18146104b35780638456cb59146104c6578063851c1bb3146104ce576102a0565b80633aeae0d31161020b5780636028bfd4116101c45780636028bfd41461040b578063623a2e751461042c578063679aefce146104345780636d785a871461043c578063707dcd1e1461044457806370a0823114610459576102a0565b80633aeae0d3146103955780633c4dd5bb146103aa5780633f4ba83a146103cc57806344bbdb55146103d45780634a6b0b15146103e957806355c6762814610403576102a0565b806323b872dd1161025d57806323b872dd14610337578063313ce5671461034a5780633644e5151461035f57806338e9922e1461036757806338fff2d01461037a5780633950935114610382576102a0565b806306fdde03146102a5578063095ea7b3146102c35780630e608b30146102e357806316c38b3c146102f857806318160ddd1461030b5780631c0de05114610320575b600080fd5b6102ad6105cb565b6040516102ba9190614259565b60405180910390f35b6102d66102d1366004613dae565b610661565b6040516102ba91906141ec565b6102f66102f1366004613c89565b610678565b005b6102f6610306366004613dd9565b610729565b61031361073d565b6040516102ba919061420f565b610328610743565b6040516102ba939291906141f7565b6102d6610345366004613cf9565b61076c565b6103526107e0565b6040516102ba919061433b565b6103136107e9565b6102f6610375366004614099565b6107f8565b610313610811565b6102d6610390366004613dae565b610835565b61039d610870565b6040516102ba91906142ac565b6103bd6103b83660046140b1565b6108bb565b6040516102ba93929190614325565b6102f661090e565b6103dc610a03565b6040516102ba919061416f565b6103f1610a12565b6040516102ba9695949392919061422f565b610313610a6d565b61041e610419366004613df3565b610a7a565b6040516102ba92919061430c565b610313610aab565b610313610b07565b6103dc610b2c565b61044c610b3b565b6040516102ba9190614183565b610313610467366004613c89565b610b4b565b61047f61047a366004613df3565b610b6a565b6040516102ba9291906141c7565b6102f661049b366004613f23565b610bfa565b6103136104ae366004613c89565b610d21565b6102f66104c1366004613c89565b610d3c565b6102f6610e22565b6103136104dc366004613efb565b610eda565b610313610f33565b61041e6104f7366004613df3565b610f74565b6103dc610f99565b6103dc610fbd565b610514610fe1565b6040516102ba91906141b4565b6102ad61107b565b6103136110dc565b61031361112d565b610313610547366004613fa2565b611133565b6102d661055a366004613dae565b6112b9565b6102d661056d366004613dae565b6112f7565b6103dc611304565b6103dc61130e565b61031361131d565b6102f6610598366004613d39565b611358565b61047f6105ab366004613df3565b6114c8565b6103136105be366004613cc1565b6115ad565b6105146115ea565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106575780601f1061062c57610100808354040283529160200191610657565b820191906000526020600020905b81548152906001019060200180831161063a57829003601f168201915b5050505050905090565b600061066e338484611643565b5060015b92915050565b600b5460408051808201909152600e81526d1b9bdd08185d5d1a1bdc9a5e995960921b6020820152906001600160a01b031633146106d25760405162461bcd60e51b81526004016106c99190614259565b60405180910390fd5b50600b80546001600160a01b0319166001600160a01b0383161790556040517fb8fd9afc34c38fcd13b9a3b7646482eb1fddcefb40af2c70609972816eba32089061071e90839061416f565b60405180910390a150565b6107316116a5565b61073a816116d3565b50565b60025490565b600080600061075061174f565b15925061075b61176c565b9150610765611790565b9050909192565b60008061077985336115ad565b905061079d336001600160a01b03871614806107955750838210155b61019e6117b4565b6107a88585856117c2565b336001600160a01b038616148015906107c357506000198114155b156107d5576107d58533858403611643565b506001949350505050565b60055460ff1690565b60006107f36118aa565b905090565b6108006116a5565b610808611968565b61073a8161197d565b7f000000000000000000000000000000000000000000000000000000000000000090565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161066e91859061086b90866119e6565b611643565b610878613bbc565b5060408051606081018252600a5460ff81161515825261010081046001600160781b03166020830152600160801b90046001600160801b03169181019190915290565b6000806000806108ca856119f8565b905060006108d886156119f8565b90506108e48883611a4c565b97506108f08782611a4c565b96506108fd888888611a58565b945094509450505093509350939050565b600c546040805180820190915260118152703737ba103830bab9b29036b0b730b3b2b960791b6020820152906001600160a01b031633146109cd5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561099257818101518382015260200161097a565b50505050905090810190601f1680156109bf5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506109d86000610731565b6040517f215385c8bfc731925ec8068d7baa50f6b6f34417cc7804f7273dc2c0b3db279090600090a1565b600d546001600160a01b031681565b60008060008060008060006008549050610a2b81611b27565b9650610a3681611b33565b9550610a4181611b40565b9450610a4c81611b4d565b9350610a5781611b5a565b9250610a6281611b67565b915050909192939495565b60006107f3600854611b67565b60006060610a8a86516002611b74565b610a9f89898989898989611b81611c48611cc6565b97509795505050505050565b600080610ab661131d565b90506000610ac261073d565b9050600080610ad360095485611dd9565b50919350915060009050610af182610aeb8686611e42565b90611e42565b9050610afd8582611e5a565b9550505050505090565b60006107f3610b1461073d565b610b26610b1f61131d565b6002611eb4565b90611e5a565b600b546001600160a01b031681565b610b43613bdc565b6107f3611ed8565b6001600160a01b0381166000908152602081905260409020545b919050565b60608088610b94610b79610fbd565b6001600160a01b0316336001600160a01b03161460cd6117b4565b610ba9610b9f610811565b82146101f46117b4565b610bb287611efe565b6000806000610bc68d8d8d8d8d8d8d611b81565b925092509250610bd68c84611f60565b610bdf82611c48565b610be881611c48565b909c909b509950505050505050505050565b600b5460408051808201909152600e81526d1b9bdd08185d5d1a1bdc9a5e995960921b6020820152906001600160a01b03163314610c4b5760405162461bcd60e51b81526004016106c99190614259565b50600a5460408051808201909152601081526f1c1bdbdb081a5cc81d5b98d85c1c195960821b60208201529060ff16610c975760405162461bcd60e51b81526004016106c99190614259565b508051600a8054602084015160408086015160ff19909316941515949094176fffffffffffffffffffffffffffffff0019166101006001600160781b0390921691909102176001600160801b03908116600160801b919092160217815590517f2abf5970d7bc1a2b36eaae52dd2cc353edb0337c7284ef8a01973081b4e044249161071e916142e1565b6001600160a01b031660009081526006602052604090205490565b600c546040805180820190915260118152703737ba103830bab9b29036b0b730b3b2b960791b60208201526001600160a01b0390911690338214610dc15760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561099257818101518382015260200161097a565b50600c80546001600160a01b0319166001600160a01b03848116918217909255604080519284168352602083019190915280517f1ffccd1fa96f4fb3415df8048a0fd107344e262d2d246c85105e2a3f8f3e81989281900390910190a15050565b600c546040805180820190915260118152703737ba103830bab9b29036b0b730b3b2b960791b6020820152906001600160a01b03163314610ea45760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561099257818101518382015260200161097a565b50610eaf6001610731565b6040517f681eace576127d0553b224436a09801fb47d042942cbff59d7d4ff04d8fa03d790600090a1565b604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091526001600160e01b03198416828401528251602481840301815260449092019092528051910120919050565b600080610f3e61073d565b9050600080610f56600954610f5161131d565b611dd9565b509193509150610f6c905081610aeb8585611e42565b935050505090565b60006060610f8486516002611b74565b610a9f89898989898989611f6a612029611cc6565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b60606000610fed61208b565b60408051600280825260608201835292935091906020830190803683370190505091506110448160008151811061102057fe5b60200260200101518260018151811061103557fe5b60200260200101516001611a58565b9091508360008151811061105457fe5b602002602001018460018151811061106857fe5b6020908102919091010191909152525090565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106575780601f1061062c57610100808354040283529160200191610657565b6000806110e761208b565b90506000806000611113846000815181106110fe57fe5b60200260200101518560018151811061103557fe5b925092509250611124848383612141565b94505050505090565b60095490565b600061113d611968565b836080015161114d610b79610fbd565b611158610b9f610811565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031686602001516001600160a01b031614905060006111a0826119f8565b905060006111ae83156119f8565b90506111ba8783611a4c565b96506111c68682611a4c565b955060008060006111d88a8a88611a58565b9194509250905060008b5160018111156111ee57fe5b141561125d57600061120c611201610a6d565b60608e01519061217f565b905061122e611228828e606001516121d490919063ffffffff16565b87611a4c565b60608d015260006112428d8d8d87876121ea565b905061124e8187612209565b995050505050505050506112b1565b61126b8b6060015185611a4c565b60608c0152600061127f8c8c8c8686612215565b905061128b8187612228565b90506112a76112a061129b610a6d565b612234565b829061225a565b9850505050505050505b509392505050565b6000806112c633856115ad565b90508083106112e0576112db33856000611643565b6112ed565b6112ed3385858403611643565b5060019392505050565b600061066e3384846117c2565b60006107f36122c0565b600c546001600160a01b031681565b60008061132861208b565b90506000611334611ed8565b9050611351828260005b60200201518360015b602002015161233a565b9250505090565b6113668442111560d16117b4565b6001600160a01b0380881660008181526006602090815260408083205481517f00000000000000000000000000000000000000000000000000000000000000008185015280830195909552948b166060850152608084018a905260a0840185905260c08085018a90528151808603909101815260e090940190528251920191909120906113f28261236d565b9050600060018288888860405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015611450573d6000803e3d6000fd5b5050604051601f190151915061149290506001600160a01b0382161580159061148a57508b6001600160a01b0316826001600160a01b0316145b6101f86117b4565b6001600160a01b038b1660009081526006602052604090206001850190556114bb8b8b8b611643565b5050505050505050505050565b606080886114d7610b79610fbd565b6114e2610b9f610811565b6114ea611968565b60006114f461073d565b611564576115048b8b8b886123b9565b94509050611519620f424082101560cc6117b4565b6115276000620f424061248e565b61153689620f4240830361248e565b61153f84612029565b604080516002808252606082018352909160208301908036833701905050925061159f565b61156d88611efe565b61157c8b8b8b8b8b8b8b611f6a565b9095509350905061158d898261248e565b61159684612029565b61159f83611c48565b505097509795505050505050565b60006115b7610fbd565b6001600160a01b0316826001600160a01b031614156115d95750600019610672565b6115e38383612498565b9050610672565b60606107f36124c3565b806115fe81612532565b5050565b60006116108383605661162d565b9392505050565b60006116278383111560016117b4565b50900390565b67ffffffffffffffff811b1992909216911b1790565b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b60006116bc6000356001600160e01b031916610eda565b905061073a6116cb82336125b0565b6101916117b4565b80156116f3576116ee6116e461176c565b42106101936117b4565b611708565b6117086116fe611790565b42106101a96117b4565b6007805482151560ff19909116811790915560408051918252517f9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be649181900360200190a150565b6000611759611790565b4211806107f357505060075460ff161590565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b816115fe576115fe816126b2565b6117d96001600160a01b03841615156101986117b4565b6117f06001600160a01b03831615156101996117b4565b6117fb8383836125ab565b6001600160a01b03831660009081526020819052604090205461182190826101a0612705565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461185090826119e6565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000061191761271b565b3060405160200180868152602001858152602001848152602001838152602001826001600160a01b031681526020019550505050505060405160208183030381529060405280519060200120905090565b61197b61197361174f565b6101926117b4565b565b61199064e8d4a5100082101560cb6117b4565b6119a667016345785d8a000082111560ca6117b4565b6008546119b39082611602565b6008556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc9061071e90839061420f565b600082820161161084821015836117b4565b600081611a25577f0000000000000000000000000000000000000000000000000000000000000000610672565b7f000000000000000000000000000000000000000000000000000000000000000092915050565b6000611610838361271f565b60408051600280825260608201835260009283928392839260208301908036833701905050905084611a8a5785611a8c565b865b81600081518110611a9957fe5b60200260200101818152505084611ab05786611ab2565b855b81600181518110611abf57fe5b6020026020010181815250506000611ad5611ed8565b9050611ae38282600061133e565b94506000611af18287612758565b905086611b02576020810151611b05565b80515b945086611b13578051611b19565b60208101515b935050505093509350939050565b6000610672828261278c565b600061067282601661278c565b600061067282602c6127b3565b600061067282604b6127bd565b60006106728260556127c5565b60006106728260566127cf565b6115fe81831460676117b4565b60006060806000611b90611ed8565b9050611b9a61174f565b15611bfc576000611bb58983835b6020020151846001611347565b90506000611bc38383612758565b9050611bce826127dd565b611bd88a8861280a565b9096509450611bf18287611bea61073d565b6000612856565b60095550611c129050565b611c06888661280a565b60001960095590945092505b60408051600280825260608201835286928692919060208301908036833701905050935093509350509750975097945050505050565b611c6f81600081518110611c5857fe5b6020026020010151611c6a60016119f8565b611e5a565b81600081518110611c7c57fe5b602002602001018181525050611caa81600181518110611c9857fe5b6020026020010151611c6a60006119f8565b81600181518110611cb757fe5b60200260200101818152505050565b333014611d84576000306001600160a01b0316600036604051611cea92919061415f565b6000604051808303816000865af19150503d8060008114611d27576040519150601f19603f3d011682016040523d82523d6000602084013e611d2c565b606091505b505090508060008114611d3b57fe5b60046000803e6000516001600160e01b0319166343adbafb60e01b8114611d66573d6000803e3d6000fd5b506020600460003e604060205260243d03602460403e601c3d016000f35b611d8d86611efe565b600080611da38b8b8b8b8b8b8b8b63ffffffff16565b5091509150611db5818463ffffffff16565b8051601f1982018390526343adbafb603f1983015260200260231982016044820181fd5b600080600080600080600080611ded6128ae565b93509350935093508360001415611e1257600097508796509094509250611e39915050565b600080611e298c8c611e2261073d565b8989612a20565b909a509850929650909450505050505b92959194509250565b600082820183811015611610576116106000806117b4565b600081611e6d57611e6d600060046117b4565b82611e7a57506000610672565b670de0b6b3a764000083810290848281611e9057fe5b0414611ea257611ea2600060056117b4565b828181611eab57fe5b04949350505050565b6000828202611610841580611ed1575083858381611ece57fe5b04145b60036117b4565b611ee0613bdc565b611eea6001612abb565b8152611ef66000612abb565b602082015290565b611f2581600081518110611f0e57fe5b6020026020010151611f2060016119f8565b61271f565b81600081518110611f3257fe5b602002602001018181525050611caa81600181518110611f4e57fe5b6020026020010151611f2060006119f8565b6115fe8282612b0f565b60006060806000611f79611ed8565b90506000611f88898383611ba8565b90506000611f968383612758565b9050611fa1826127dd565b600080611fae8c8a612bc6565b600a54919350915060ff1615611fd857611fd882611fcb8f610b4b565b611fd361073d565b612c00565b611fec8483611fe561073d565b6001612856565b6009556040805160028082526060820183528492849291906020830190803683370190505097509750975050505050509750975097945050505050565b6120508160008151811061203957fe5b602002602001015161204b60016119f8565b61225a565b8160008151811061205d57fe5b602002602001018181525050611caa8160018151811061207957fe5b602002602001015161204b60006119f8565b60408051600280825260608083018452926020830190803683370190505090506120de7f00000000000000000000000000000000000000000000000000000000000000006120d960016119f8565b612d12565b816000815181106120eb57fe5b6020026020010181815250506121257f00000000000000000000000000000000000000000000000000000000000000006120d960006119f8565b8160018151811061213257fe5b60200260200101818152505090565b60006121778460008151811061215357fe5b6020026020010151848660018151811061216957fe5b602002602001015185612db9565b949350505050565b600082820283158061219957508284828161219657fe5b04145b6121a9576121a9600060036117b4565b806121b8576000915050610672565b670de0b6b3a764000060001982015b0460010191505092915050565b60008282111561162757611627600060016117b4565b60006121fd858588606001518686612dd2565b90505b95945050505050565b60006116108383611e5a565b60006121fd858588606001518686612e3c565b6000611610838361225a565b6000670de0b6b3a7640000821061224c576000610672565b50670de0b6b3a76400000390565b60008161226d5761226d600060046117b4565b8261227a57506000610672565b670de0b6b3a76400008381029084828161229057fe5b04146122b4576122b4670de0b6b3a76400008583816122ab57fe5b041460056117b4565b8260018203816121c757fe5b60006122ca610fbd565b6001600160a01b031663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b15801561230257600080fd5b505afa158015612316573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f39190613ca5565b600080600080600061234d888888612e9c565b935093509350935061236184848484612ff4565b98975050505050505050565b60006123776118aa565b82604051602001808061190160f01b81525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b6000606060006123c884613068565b90506123e360008260038111156123db57fe5b1460ce6117b4565b60006123ee85613087565b90506123fc81516002611b74565b61240581611efe565b600080600061241a846000815181106110fe57fe5b925092509250600061242d858484612141565b9050600061247561245b838860008151811061244557fe5b602002602001015161271f90919063ffffffff16565b8760018151811061246857fe5b60200260200101516119e6565b60099590955550929b939a509298505050505050505050565b6115fe828261313b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b604080516002808252606080830184529260009291906020830190803683370190505090506124f260016131d0565b816000815181106124ff57fe5b60200260200101818152505061251560006131d0565b8160018151811061252257fe5b6020908102919091010152905090565b6002815110156125415761073a565b60008160008151811061255057fe5b602002602001015190506000600190505b82518110156125ab57600083828151811061257857fe5b602002602001015190506125a1816001600160a01b0316846001600160a01b03161060656117b4565b9150600101612561565b505050565b600073ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b6125cf610f99565b6001600160a01b0316141580156125ea57506125ea83613224565b15612612576125f7610f99565b6001600160a01b0316336001600160a01b0316149050610672565b61261a6122c0565b6001600160a01b0316639be2a8848484306040518463ffffffff1660e01b815260040180848152602001836001600160a01b03168152602001826001600160a01b03168152602001935050505060206040518083038186803b15801561267f57600080fd5b505afa158015612693573d6000803e3d6000fd5b505050506040513d60208110156126a957600080fd5b50519050610672565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b600061271484841115836117b4565b5050900390565b4690565b600082820283158061273957508284828161273657fe5b04145b61274957612749600060036117b4565b670de0b6b3a764000081611eab565b612760613bdc565b612773600184815b602002015184613256565b815261278160008481612768565b602082015292915050565b600082821c623fffff16621fffff81136127a65780612177565b623fffff19179392505050565b1c637fffffff1690565b1c6103ff1690565b1c60019081161490565b1c67ffffffffffffffff1690565b6000806000806127ef60095486611dd9565b935093509350935061280384848484613276565b5050505050565b60006060600061281984613068565b9050600181600381111561282957fe5b141561284357612839858561329c565b909350915061284e565b61284e6101506126b2565b509250929050565b600081156128885760006128748461286e888861217f565b9061225a565b90506128808682611e42565b915050612177565b600061289884610b26888861271f565b90506128a486826121d4565b9695505050505050565b600d546000908190819081906128d5906001600160a01b03163063032434c560e41b6132ce565b600d546128f3906001600160a01b03163063032434c560e41b6132f5565b600d546040516321f8a72160e01b81526001600160a01b03909116906321f8a72190612933906c4759524f5f545245415355525960981b9060040161420f565b60206040518083038186803b15801561294b57600080fd5b505afa15801561295f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129839190613ca5565b600d546040516321f8a72160e01b81526001600160a01b03909116906321f8a721906129c2906b42414c5f545245415355525960a01b9060040161420f565b60206040518083038186803b1580156129da57600080fd5b505afa1580156129ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a129190613ca5565b935093509350935090919293565b600080868611612a3557506000905080612ab1565b6000612a5585612a4f612a488a8c6121d4565b899061271f565b9061271f565b90506000612a6d612a66898b6121d4565b879061271f565b90506000612a7b89836121d4565b90506000612a898483611e5a565b90506000612a97888361271f565b90506000612aa583836121d4565b91975090955050505050505b9550959350505050565b600081612ae8577f0000000000000000000000000000000000000000000000000000000000000000610672565b507f0000000000000000000000000000000000000000000000000000000000000000919050565b612b266001600160a01b038316151561019b6117b4565b612b32826000836125ab565b6001600160a01b038216600090815260208190526040902054612b5890826101a1612705565b6001600160a01b038316600090815260208190526040902055600254612b7e9082613323565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b600060606000612bd584613068565b90506003816003811115612be557fe5b1415612bf5576128398585613331565b61284e6101366126b2565b60408051606081018252600a5460ff81161515825261010081046001600160781b031660208301819052600160801b9091046001600160801b03169282019290925290612c4d8585611e42565b11156040518060400160405280601a81526020017f6f7665722061646472657373206c69717569646974792063617000000000000081525090612ca35760405162461bcd60e51b81526004016106c99190614259565b5060408101516001600160801b0316612cbc8584611e42565b11156040518060400160405280601981526020017f6f76657220676c6f62616c206c69717569646974792063617000000000000000815250906128035760405162461bcd60e51b81526004016106c99190614259565b6000806000612d1f610fbd565b6001600160a01b031663b05f8e48612d35610811565b876040518363ffffffff1660e01b8152600401612d53929190614218565b60806040518083038186803b158015612d6b57600080fd5b505afa158015612d7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612da391906140e5565b505081810194509092509050612200838561271f565b6000612200612dc88686611e42565b61286e8585611e42565b600080612df1612dea85670de0b6b3a764000261217f565b8890611e42565b90506000612e0a612dea85670de0b6b3a763ffff61271f565b9050612e23612e198388611e42565b610b26838961271f565b9250505084811115612200576122006000610165613356565b600084841115612e5357612e536000610165613356565b6000612e6a612dea85670de0b6b3a764000261217f565b90506000612e83612dea85670de0b6b3a763ffff61271f565b9050612361612e9282886121d4565b61286e848961217f565b6000808080612ebd612eae8787611e5a565b670de0b6b3a7640000906121d4565b93506000612ee88689600181518110612ed257fe5b6020026020010151611e5a90919063ffffffff16565b90506000612efd888a60008151811061244557fe5b9050612f098282611e42565b9450612f3089600181518110612f1b57fe5b60200260200101518a60008151811061244557fe5b92505050612f6186612a4f88612a4f8b600081518110612f4c57fe5b60200260200101518c60008151811061244557fe5b91506000612fa186610b2689612a4f670de0b6b3a7640000600202612a4f8e600181518110612f8c57fe5b60200260200101518f60008151811061244557fe5b90506000612fd7612fb2888061217f565b610b268b600181518110612fc257fe5b60200260200101518c60018151811061244557fe5b9050612fe781610aeb8685611e42565b9350505093509350935093565b60008061300986671bc16d674ec8000061217f565b9050600061302387612a4f86673782dace9d90000061271f565b905060006130318683611e42565b90506000613040826005613364565b9050600061304e8983611e42565b905061305a8186611e5a565b9a9950505050505050505050565b600081806020019051602081101561307f57600080fd5b505192915050565b606081806020019051604081101561309e57600080fd5b8151602083018051604051929492938301929190846401000000008211156130c557600080fd5b9083019060208201858111156130da57600080fd5b82518660208202830111640100000000821117156130f757600080fd5b82525081516020918201928201910280838360005b8381101561312457818101518382015260200161310c565b505050509190910160405250929695505050505050565b613147600083836125ab565b60025461315490826119e6565b6002556001600160a01b03821660009081526020819052604090205461317a90826119e6565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000816131fd577f0000000000000000000000000000000000000000000000000000000000000000610672565b507f0000000000000000000000000000000000000000000000000000000000000000919050565b6000613236631c74c91760e11b610eda565b821480610672575061324e6350dd6ed960e01b610eda565b909114919050565b60008361326c576132678284611a4c565b612177565b6121778284612209565b831561328657613286828561248e565b821561329657613296818461248e565b50505050565b6000606060006132ab846134f2565b905060006132c186836132bc61073d565b613514565b9196919550909350505050565b6000612177847550524f544f434f4c5f535741505f4645455f5045524360501b848661359a565b6000612177847f50524f544f434f4c5f4645455f4759524f5f504f5254494f4e00000000000000848661359a565b600061161083836001612705565b600060606000613340846134f2565b905060006132c1868361335161073d565b613847565b816115fe576115fe816138e3565b60008261337357506000610672565b600061337e846138f3565b9050600281670de0b6b3a764000086028161339557fe5b0482018161339f57fe5b049050600281670de0b6b3a76400008602816133b757fe5b048201816133c157fe5b049050600281670de0b6b3a76400008602816133d957fe5b048201816133e357fe5b049050600281670de0b6b3a76400008602816133fb57fe5b0482018161340557fe5b049050600281670de0b6b3a764000086028161341d57fe5b0482018161342757fe5b049050600281670de0b6b3a764000086028161343f57fe5b0482018161344957fe5b049050600281670de0b6b3a764000086028161346157fe5b0482018161346b57fe5b049050600061347a828061271f565b9050613490613489838661217f565b8690611e42565b81111580156134b257506134ae6134a7838661217f565b86906121d4565b8110155b6112b1576040805162461bcd60e51b815260206004820152600c60248201526b17dcdc5c9d0811905253115160a21b604482015290519081900360640190fd5b600081806020019051604081101561350957600080fd5b506020015192915050565b6060835167ffffffffffffffff8111801561352e57600080fd5b50604051908082528060200260200182016040528015613558578160200160208202803683370190505b50905060005b84518110156112b15761357b83610b268688858151811061244557fe5b82828151811061358757fe5b602090810291909101015260010161355e565b6040805160208082018690526001600160a01b03808516838501528351808403850181526060840180865281519184019190912063696eb37560e01b909152606484018190529351600094939189169263696eb3759260848082019391829003018186803b15801561360b57600080fd5b505afa15801561361f573d6000803e3d6000fd5b505050506040513d602081101561363557600080fd5b5051156136b557856001600160a01b031663bd02d0f5826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561368057600080fd5b505afa158015613694573d6000803e3d6000fd5b505050506040513d60208110156136aa57600080fd5b505191506121779050565b6040805160208082018890528183018790528251808303840181526060830180855281519183019190912063696eb37560e01b9091526064830181905292516001600160a01b038a169263696eb375926084808301939192829003018186803b15801561372157600080fd5b505afa158015613735573d6000803e3d6000fd5b505050506040513d602081101561374b57600080fd5b5051156137cc57866001600160a01b031663bd02d0f5826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561379657600080fd5b505afa1580156137aa573d6000803e3d6000fd5b505050506040513d60208110156137c057600080fd5b50519250612177915050565b866001600160a01b031663bd02d0f5876040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561381057600080fd5b505afa158015613824573d6000803e3d6000fd5b505050506040513d602081101561383a57600080fd5b5051979650505050505050565b6060835167ffffffffffffffff8111801561386157600080fd5b5060405190808252806020026020018201604052801561388b578160200160208202803683370190505b50905060005b84518110156112b1576138c48361286e868885815181106138ae57fe5b602002602001015161217f90919063ffffffff16565b8282815181106138d057fe5b6020908102919091010152600101613891565b61073a816223aca960e91b613ac5565b6000670de0b6b3a7640000821061392057670de0b6b3a7640000613918818404613b26565b1b9050610b65565b600a8211613933575063bc7c871c610b65565b6064821161394757506402540be400610b65565b6103e8821161395c575064075cdd4719610b65565b6127108211613971575064174876e800610b65565b620186a0821161398757506449a0a4c700610b65565b620f4240821161399d575064e8d4a51000610b65565b6298968082116139b457506502e0466fc608610b65565b6305f5e10082116139cc57506509184e72a000610b65565b633b9aca0082116139e45750651cc2c05dbc53610b65565b6402540be40082116139fd5750655af3107a4000610b65565b64174876e8008211613a17575066011f9b83a95b45610b65565b64e8d4a510008211613a31575066038d7ea4c68000610b65565b6509184e72a0008211613a4c5750660b3c13249d90bb610b65565b655af3107a40008211613a675750662386f26fc10000610b65565b66038d7ea4c680008211613a835750667058bf6e27a751610b65565b662386f26fc100008211613aa0575067016345785d8a0000610b65565b67016345785d8a00008211613abe5750670463777a4d8c892d610b65565b5080610b65565b62461bcd60e51b600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fd5b6000600160801b8210613b3e5760809190911c906040015b680100000000000000008210613b595760409190911c906020015b6401000000008210613b705760209190911c906010015b620100008210613b855760109190911c906008015b6101008210613b995760089190911c906004015b60108210613bac5760049190911c906002015b60048210610b6557600101919050565b604080516060810182526000808252602082018190529181019190915290565b60405180604001604052806002906020820280368337509192915050565b8035610b658161436d565b80358015158114610b6557600080fd5b600082601f830112613c25578081fd5b813567ffffffffffffffff811115613c3957fe5b613c4c601f8201601f1916602001614349565b818152846020838601011115613c60578283fd5b816020850160208301379081016020019190915292915050565b803560028110610b6557600080fd5b600060208284031215613c9a578081fd5b81356116108161436d565b600060208284031215613cb6578081fd5b81516116108161436d565b60008060408385031215613cd3578081fd5b8235613cde8161436d565b91506020830135613cee8161436d565b809150509250929050565b600080600060608486031215613d0d578081fd5b8335613d188161436d565b92506020840135613d288161436d565b929592945050506040919091013590565b600080600080600080600060e0888a031215613d53578283fd5b8735613d5e8161436d565b96506020880135613d6e8161436d565b95506040880135945060608801359350608088013560ff81168114613d91578384fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215613dc0578182fd5b8235613dcb8161436d565b946020939093013593505050565b600060208284031215613dea578081fd5b61161082613c05565b600080600080600080600060e0888a031215613e0d578081fd5b87359650602080890135613e208161436d565b96506040890135613e308161436d565b9550606089013567ffffffffffffffff80821115613e4c578384fd5b818b0191508b601f830112613e5f578384fd5b813581811115613e6b57fe5b613e788485830201614349565b8082825285820191508585018f878886028801011115613e96578788fd5b8795505b83861015613eb8578035835260019590950194918601918601613e9a565b509850505060808b0135955060a08b0135945060c08b0135925080831115613ede578384fd5b5050613eec8a828b01613c15565b91505092959891949750929550565b600060208284031215613f0c578081fd5b81356001600160e01b031981168114611610578182fd5b600060608284031215613f34578081fd5b6040516060810181811067ffffffffffffffff82111715613f5157fe5b604052613f5d83613c05565b815260208301356001600160781b0381168114613f78578283fd5b602082015260408301356001600160801b0381168114613f96578283fd5b60408201529392505050565b600080600060608486031215613fb6578081fd5b833567ffffffffffffffff80821115613fcd578283fd5b8186019150610120808389031215613fe3578384fd5b613fec81614349565b9050613ff783613c7a565b815261400560208401613bfa565b602082015261401660408401613bfa565b6040820152606083013560608201526080830135608082015260a083013560a082015261404560c08401613bfa565b60c082015261405660e08401613bfa565b60e0820152610100808401358381111561406e578586fd5b61407a8a828701613c15565b9183019190915250976020870135975060409096013595945050505050565b6000602082840312156140aa578081fd5b5035919050565b6000806000606084860312156140c5578081fd5b83359250602084013591506140dc60408501613c05565b90509250925092565b600080600080608085870312156140fa578182fd5b845193506020850151925060408501519150606085015161411a8161436d565b939692955090935050565b6000815180845260208085019450808401835b8381101561415457815187529582019590820190600101614138565b509495945050505050565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b60408101818360005b60028110156141ab57815183526020928301929091019060010161418c565b50505092915050565b6000602082526116106020830184614125565b6000604082526141da6040830185614125565b82810360208401526122008185614125565b901515815260200190565b92151583526020830191909152604082015260600190565b90815260200190565b9182526001600160a01b0316602082015260400190565b9586526020860194909452604085019290925260608401521515608083015260a082015260c00190565b6000602080835283518082850152825b8181101561428557858101830151858201604001528201614269565b818111156142965783604083870101525b50601f01601f1916929092016040019392505050565b8151151581526020808301516001600160781b0316908201526040918201516001600160801b03169181019190915260600190565b905460ff811615158252600881901c6001600160781b0316602083015260801c604082015260600190565b6000838252604060208301526121776040830184614125565b9283526020830191909152604082015260600190565b60ff91909116815260200190565b60405181810167ffffffffffffffff8111828210171561436557fe5b604052919050565b6001600160a01b038116811461073a57600080fdfea2646970667358221220be0c442d0fe25fc0fc1a982d83b0eb75bb31050eb8a81b36f1b06a0b5ac56c4964736f6c63430007060033", "bytecodeSha1": "097be57c70810ac902d0a2b05fc86fa6b56902b7", "compiler": {"evm_version": "berlin", "optimizer": {"enabled": true, "runs": 200}, "version": "0.7.6+commit.7338295f"}, "contractName": "Gyro2CLPPool", "coverageMap": {"branches": {"1": {"BalancerPoolToken.allowance": {"333": [2364, 2394, false]}, "BalancerPoolToken.decreaseAllowance": {"332": [3611, 3637, false]}, "BalancerPoolToken.transferFrom": {"330": [3030, 3050, false], "331": [3054, 3085, false]}}, "10": {}, "11": {}, "12": {}, "15": {}, "16": {}, "17": {}, "18": {"InputHelpers.ensureArrayIsSorted": {"380": [1496, 1512, false]}}, "20": {"WordCodec.decodeInt22": {"385": [12558, 12577, true]}}, "21": {}, "22": {}, "23": {}, "24": {}, "25": {}, "26": {}, "27": {}, "28": {}, "29": {}, "30": {}, "31": {}, "32": {}, "33": {}, "34": {}, "35": {}, "36": {}, "37": {}, "38": {}, "39": {}, "4": {"BasePoolAuthorization._canPerform": {"334": [2112, 2140, false]}}, "40": {"Gyro2CLPPool._calculateCurrentValues": {"317": [11400, 11415, true], "318": [11474, 11489, true], "319": [11808, 11823, true], "320": [11887, 11902, true]}, "Gyro2CLPPool._doExit": {"324": [22280, 22341, false]}, "Gyro2CLPPool._doJoin": {"326": [17406, 17471, false]}, "Gyro2CLPPool._getDueProtocolFeeAmounts": {"322": [25536, 25560, false]}, "Gyro2CLPPool._onExitPool": {"321": [19890, 19904, false]}, "Gyro2CLPPool._onJoinPool": {"323": [16226, 16247, false]}, "Gyro2CLPPool._payFeesBpt": {"328": [26201, 26213, false], "329": [26335, 26351, false]}, "Gyro2CLPPool._sqrtParameters": {"325": [2791, 2801, true]}, "Gyro2CLPPool._virtualParameters": {"327": [5608, 5618, true]}, "Gyro2CLPPool.onSwap": {"316": [7771, 7811, false]}}, "41": {}, "43": {"CappedLiquidity._ensureCap": {"338": [2338, 2391, true]}, "CappedLiquidity.setCapManager": {"335": [1508, 1532, true]}, "CappedLiquidity.setCapParams": {"336": [1836, 1860, true], "337": [1896, 1917, true]}}, "44": {"ExtensibleWeightedPool2Tokens._normalizedWeights": {"341": [8037, 8043, true]}, "ExtensibleWeightedPool2Tokens._queryAction": {"340": [39010, 39037, false]}, "ExtensibleWeightedPool2Tokens._scalingFactor": {"339": [35484, 35490, true]}}, "45": {"LocallyPausable.changePauseManager": {"382": [929, 962, true]}, "LocallyPausable.pause": {"383": [1194, 1220, true]}, "LocallyPausable.unpause": {"381": [1407, 1433, true]}}, "46": {"TemporarilyPausable._setPaused": {"384": [3601, 3607, false]}}, "47": {}, "49": {}, "50": {}, "51": {"GyroConfigHelpers._getPoolSetting": {"342": [1203, 1237, false], "343": [1400, 1430, false]}}, "52": {}, "53": {}, "54": {"GyroFixedPoint.divDown": {"344": [3430, 3436, false], "345": [3514, 3520, false]}, "GyroFixedPoint.divUp": {"349": [4033, 4039, false], "350": [4117, 4123, false]}, "GyroFixedPoint.mulUp": {"346": [2326, 2332, true], "347": [2336, 2352, false], "348": [2430, 2442, false]}}, "55": {"GyroPoolMath._calcProtocolFees": {"352": [5166, 5203, false]}, "GyroPoolMath._intLog2Halved": {"374": [10051, 10064, false], "375": [10134, 10146, false], "376": [10215, 10227, false], "377": [10296, 10308, false], "378": [10376, 10387, false], "379": [10454, 10465, false]}, "GyroPoolMath._makeInitialGuess": {"356": [8415, 8442, false], "357": [8572, 8583, false], "358": [8656, 8668, false], "359": [8731, 8743, false], "360": [8816, 8828, false], "361": [8891, 8903, false], "362": [8976, 8988, false], "363": [9051, 9063, false], "364": [9136, 9148, false], "365": [9211, 9223, false], "366": [9295, 9308, false], "367": [9371, 9384, false], "368": [9456, 9469, false], "369": [9532, 9545, false], "370": [9617, 9630, false], "371": [9693, 9706, false], "372": [9778, 9791, false], "373": [9854, 9867, false]}, "GyroPoolMath._sqrt": {"353": [6821, 6831, false], "354": [7590, 7639, false], "355": [7643, 7692, true]}, "GyroPoolMath.liquidityInvariantUpdate": {"351": [11222, 11235, false]}}, "8": {}, "9": {}}, "statements": {"1": {"BalancerPoolToken._burnPoolTokens": {"164": [4092, 4113]}, "BalancerPoolToken._mintPoolTokens": {"196": [3979, 4003]}, "BalancerPoolToken.allowance": {"97": [2410, 2428], "98": [2459, 2497]}, "BalancerPoolToken.decreaseAllowance": {"76": [3653, 3685], "77": [3772, 3828], "78": [3849, 3860]}, "BalancerPoolToken.getVault": {"63": [1938, 1951]}, "BalancerPoolToken.transferFrom": {"11": [2867, 2968], "12": [2979, 3015], "13": [3218, 3273], "14": [3294, 3305]}}, "10": {"WeightedPoolUserDataHelpers.exactBptInForTokensOut": {"273": [2448, 2520]}, "WeightedPoolUserDataHelpers.initialAmountsIn": {"249": [1311, 1383]}, "WeightedPoolUserDataHelpers.joinKind": {"248": [964, 1016]}}, "11": {"Authentication._authenticateCaller": {"106": [2404, 2474]}, "Authentication.getActionId": {"58": [2842, 2910]}}, "12": {"_require": {"114": [946, 964]}}, "15": {}, "16": {}, "17": {}, "18": {"InputHelpers.ensureArrayIsSorted": {"100": [1369, 1402], "201": [1528, 1535], "202": [1689, 1740], "203": [1754, 1772], "204": [1630, 1633]}, "InputHelpers.ensureInputLengthMatch": {"141": [888, 934]}}, "20": {"WordCodec.decodeBool": {"215": [9819, 9866]}, "WordCodec.decodeInt22": {"212": [12551, 12615]}, "WordCodec.decodeUint10": {"214": [10628, 10669]}, "WordCodec.decodeUint31": {"213": [11156, 11197]}, "WordCodec.decodeUint64": {"216": [11684, 11725]}, "WordCodec.insertUint64": {"103": [7104, 7149]}}, "21": {}, "22": {}, "23": {"Math.mul": {"159": [1897, 1948]}, "Math.sub": {"102": [1025, 1062]}}, "24": {}, "25": {"EIP712._domainSeparatorV4": {"121": [2466, 2567]}, "EIP712._hashTypedDataV4": {"190": [3295, 3375]}}, "26": {"ERC20._approve": {"104": [9468, 9504], "105": [9514, 9551]}, "ERC20._burn": {"226": [8587, 8655], "227": [8666, 8715], "228": [8726, 8814], "229": [8824, 8863], "230": [8873, 8915]}, "ERC20._mint": {"250": [7973, 8022], "251": [8033, 8072], "252": [8082, 8133], "253": [8143, 8185]}, "ERC20._transfer": {"115": [7195, 7266], "116": [7276, 7348], "117": [7359, 7406], "118": [7417, 7505], "119": [7515, 7570], "120": [7580, 7620]}, "ERC20.allowance": {"197": [3993, 4027]}, "ERC20.approve": {"1": [4271, 4308], "2": [4318, 4329]}, "ERC20.balanceOf": {"39": [3422, 3447]}, "ERC20.decimals": {"15": [3098, 3114]}, "ERC20.increaseAllowance": {"19": [5688, 5767]}, "ERC20.name": {"0": [2200, 2212]}, "ERC20.symbol": {"66": [2396, 2410]}, "ERC20.totalSupply": {"7": [3253, 3272]}, "ERC20.transfer": {"79": [3759, 3799]}}, "27": {"ERC20Permit.DOMAIN_SEPARATOR": {"16": [2438, 2465]}, "ERC20Permit.nonces": {"51": [2207, 2228]}, "ERC20Permit.permit": {"82": [1575, 1635], "83": [1902, 1981], "84": [1992, 2018], "85": [2028, 2059]}}, "28": {}, "29": {}, "30": {"SafeMath.add": {"127": [1019, 1056]}, "SafeMath.sub": {"207": [1861, 1888], "262": [1430, 1467]}}, "31": {}, "32": {}, "33": {}, "34": {}, "35": {}, "36": {}, "37": {}, "38": {}, "39": {"Gyro2CLPMath._calcInGivenOut": {"240": [10700, 10758], "241": [11142, 11215]}, "Gyro2CLPMath._calcOutGivenIn": {"238": [8449, 8525], "239": [8626, 8684]}, "Gyro2CLPMath._calcSpotPriceAinB": {"237": [12251, 12332]}, "Gyro2CLPMath._calculateInvariant": {"189": [2508, 2554]}, "Gyro2CLPMath._calculateQuadratic": {"247": [5169, 5211]}, "Gyro2CLPMath._calculateQuadraticTerms": {"242": [3110, 3165], "243": [3300, 3323], "244": [3337, 3374], "245": [3567, 3649], "246": [3880, 3917]}}, "4": {"BasePoolAuthorization._canPerform": {"205": [2251, 2282], "206": [2428, 2496]}, "BasePoolAuthorization.getAuthorizer": {"80": [1933, 1956]}, "BasePoolAuthorization.getOwner": {"62": [1836, 1849]}}, "40": {"Gyro2CLPPool._calculateCurrentValues": {"130": [11386, 11450], "131": [11460, 11524], "132": [11594, 11685], "133": [11791, 11859], "134": [11869, 11938]}, "Gyro2CLPPool._distributeFees": {"217": [24244, 24306]}, "Gyro2CLPPool._doExit": {"218": [22357, 22432], "219": [22463, 22498]}, "Gyro2CLPPool._doJoin": {"231": [17487, 17565], "232": [17596, 17631]}, "Gyro2CLPPool._exitExactBPTInForTokensOut": {"259": [23410, 23442]}, "Gyro2CLPPool._getAllBalances": {"171": [4283, 4310], "172": [4320, 4387], "173": [4397, 4465]}, "Gyro2CLPPool._getDueProtocolFeeAmounts": {"152": [25576, 25616], "153": [25921, 25979]}, "Gyro2CLPPool._getFeesMetadata": {"222": [26615, 26924]}, "Gyro2CLPPool._getPrice": {"174": [6322, 6416]}, "Gyro2CLPPool._getScaledTokenBalance": {"235": [3641, 3665], "236": [3751, 3791]}, "Gyro2CLPPool._getVirtualParameters": {"210": [5222, 5295], "211": [5305, 5379]}, "Gyro2CLPPool._onExitPool": {"142": [20448, 20486], "143": [20501, 20556], "144": [21014, 21126], "145": [21327, 21382], "146": [21693, 21727], "147": [21860, 21910]}, "Gyro2CLPPool._onInitializePool": {"191": [12998, 13068], "192": [13145, 13201], "193": [13211, 13235], "194": [13839, 13874], "195": [13885, 13917]}, "Gyro2CLPPool._onJoinPool": {"165": [16082, 16120], "166": [16263, 16324], "167": [16769, 16881], "168": [17004, 17054]}, "Gyro2CLPPool._onSwapGivenIn": {"179": [9597, 9732]}, "Gyro2CLPPool._onSwapGivenOut": {"181": [10075, 10210]}, "Gyro2CLPPool._payFeesBpt": {"257": [26229, 26268], "258": [26367, 26409]}, "Gyro2CLPPool._sqrtParameters": {"160": [2546, 2590], "161": [2600, 2645], "225": [2784, 2826]}, "Gyro2CLPPool._virtualParameters": {"256": [5589, 5784]}, "Gyro2CLPPool.calculateCurrentValues": {"21": [10754, 10817], "22": [10827, 10893], "23": [10903, 10983]}, "Gyro2CLPPool.getActualSupply": {"59": [27712, 27757]}, "Gyro2CLPPool.getInvariant": {"81": [6056, 6135]}, "Gyro2CLPPool.getInvariantDivActualSupply": {"36": [28214, 28252]}, "Gyro2CLPPool.getPrice": {"67": [6778, 6834]}, "Gyro2CLPPool.getSqrtParameters": {"38": [2404, 2428]}, "Gyro2CLPPool.getVirtualParameters": {"64": [4877, 4909], "65": [4919, 5015]}, "Gyro2CLPPool.onSwap": {"69": [7331, 7394], "70": [7404, 7470], "71": [8210, 8288], "72": [8499, 8554], "73": [8585, 8649], "74": [8858, 8913], "75": [9133, 9191]}}, "41": {}, "43": {"CappedLiquidity._ensureCap": {"233": [2330, 2411], "234": [2421, 2499]}, "CappedLiquidity.capParams": {"20": [1723, 1740]}, "CappedLiquidity.setCapManager": {"3": [1500, 1550], "4": [1560, 1584], "5": [1594, 1629]}, "CappedLiquidity.setCapParams": {"45": [1828, 1878], "46": [1888, 1929], "47": [1940, 1981], "48": [1991, 2038], "49": [2048, 2087], "50": [2098, 2131]}}, "44": {"ExtensibleWeightedPool2Tokens._downscaleDown": {"180": [36578, 36630]}, "ExtensibleWeightedPool2Tokens._downscaleDownArray": {"148": [36909, 36978], "149": [36988, 37058]}, "ExtensibleWeightedPool2Tokens._downscaleUp": {"182": [37370, 37420]}, "ExtensibleWeightedPool2Tokens._downscaleUpArray": {"169": [37695, 37762], "170": [37772, 37840]}, "ExtensibleWeightedPool2Tokens._getAuthorizer": {"188": [38301, 38334]}, "ExtensibleWeightedPool2Tokens._isOwnerOnlyAction": {"255": [7177, 7347]}, "ExtensibleWeightedPool2Tokens._normalizedWeights": {"198": [7787, 7834], "199": [7844, 7892], "200": [7902, 7926], "254": [8030, 8085]}, "ExtensibleWeightedPool2Tokens._queryAction": {"150": [42989, 43012], "151": [43321, 43350]}, "ExtensibleWeightedPool2Tokens._scalingFactor": {"128": [35477, 35526]}, "ExtensibleWeightedPool2Tokens._setSwapFeePercentage": {"123": [6748, 6835], "124": [6845, 6932], "125": [6943, 7004], "126": [7014, 7062]}, "ExtensibleWeightedPool2Tokens._upscale": {"129": [35794, 35846]}, "ExtensibleWeightedPool2Tokens._upscaleArray": {"162": [36113, 36182], "163": [36192, 36262]}, "ExtensibleWeightedPool2Tokens.getLastInvariant": {"68": [8168, 8189]}, "ExtensibleWeightedPool2Tokens.getMiscData": {"27": [5993, 6031], "28": [6041, 6083], "29": [6093, 6165], "30": [6175, 6211], "31": [6221, 6261], "32": [6271, 6319]}, "ExtensibleWeightedPool2Tokens.getNormalizedWeights": {"99": [7595, 7622]}, "ExtensibleWeightedPool2Tokens.getPoolId": {"18": [5415, 5429]}, "ExtensibleWeightedPool2Tokens.getRate": {"37": [34387, 34444]}, "ExtensibleWeightedPool2Tokens.getSwapFeePercentage": {"33": [6404, 6440]}, "ExtensibleWeightedPool2Tokens.onExitPool": {"40": [21882, 21905], "41": [22311, 22347], "42": [22459, 22490], "43": [22500, 22542], "44": [22553, 22595]}, "ExtensibleWeightedPool2Tokens.onJoinPool": {"86": [12442, 12524], "87": [12819, 12877], "88": [12891, 12932], "89": [12946, 13001], "90": [13088, 13116], "91": [13206, 13246], "92": [13277, 13300], "93": [13315, 13594], "94": [13708, 13748], "95": [13835, 13863], "96": [13962, 14004]}, "ExtensibleWeightedPool2Tokens.queryExit": {"34": [31945, 32000], "35": [32011, 32148]}, "ExtensibleWeightedPool2Tokens.queryJoin": {"60": [30554, 30609], "61": [30620, 30755]}, "ExtensibleWeightedPool2Tokens.setPaused": {"6": [7481, 7499]}, "ExtensibleWeightedPool2Tokens.setSwapFeePercentage": {"17": [6619, 6659]}}, "45": {"LocallyPausable.changePauseManager": {"52": [921, 983], "53": [993, 1021], "54": [1031, 1091]}, "LocallyPausable.pause": {"55": [1186, 1241], "56": [1251, 1272], "57": [1282, 1302]}, "LocallyPausable.unpause": {"24": [1399, 1454], "25": [1464, 1486], "26": [1496, 1518]}}, "46": {"TemporarilyPausable._ensureNotPaused": {"122": [4024, 4063]}, "TemporarilyPausable._getBufferPeriodEndTime": {"113": [4836, 4863]}, "TemporarilyPausable._getPauseWindowEndTime": {"112": [4721, 4747]}, "TemporarilyPausable._isNotPaused": {"111": [4464, 4526]}, "TemporarilyPausable._setPaused": {"107": [3623, 3704], "108": [3735, 3818], "109": [3839, 3855], "110": [3865, 3896]}, "TemporarilyPausable.getPausedState": {"8": [3126, 3150], "9": [3160, 3205], "10": [3215, 3262]}}, "47": {}, "49": {}, "50": {}, "51": {"GyroConfigHelpers._getPoolSetting": {"277": [1253, 1295], "278": [1446, 1484], "279": [1505, 1541]}, "GyroConfigHelpers.getProtocolFeeGyroPortionForPool": {"261": [623, 726]}, "GyroConfigHelpers.getSwapFeePercForPool": {"260": [333, 433]}}, "52": {}, "53": {"_grequire": {"263": [469, 488]}, "_grevert": {"283": [973, 1002]}}, "54": {"GyroFixedPoint.add": {"154": [1371, 1407]}, "GyroFixedPoint.complement": {"183": [9394, 9426]}, "GyroFixedPoint.divDown": {"155": [3452, 3489], "156": [3536, 3544], "157": [3645, 3681], "158": [3718, 3738]}, "GyroFixedPoint.divUp": {"184": [4055, 4092], "185": [4139, 4147], "186": [4248, 4299], "187": [4633, 4665]}, "GyroFixedPoint.mulDown": {"208": [1894, 1930], "209": [1951, 1971]}, "GyroFixedPoint.mulUp": {"175": [2369, 2405], "176": [2458, 2466], "177": [2784, 2816]}, "GyroFixedPoint.sub": {"178": [1627, 1663]}}, "55": {"GyroPoolMath._calcAllTokensInGivenExactBptOut": {"280": [2126, 2168], "281": [2238, 2294], "282": [2219, 2222]}, "GyroPoolMath._calcProtocolFees": {"223": [5581, 5594], "224": [6579, 6610]}, "GyroPoolMath._calcTokensOutGivenExactBptIn": {"274": [3658, 3701], "275": [3771, 3831], "276": [3752, 3755]}, "GyroPoolMath._intLog2Halved": {"303": [10080, 10089], "304": [10103, 10110], "305": [10162, 10170], "306": [10184, 10191], "307": [10243, 10251], "308": [10265, 10272], "309": [10324, 10332], "310": [10346, 10352], "311": [10403, 10410], "312": [10424, 10430], "313": [10481, 10488], "314": [10502, 10508], "315": [10580, 10586]}, "GyroPoolMath._makeInitialGuess": {"284": [8458, 8537], "285": [8603, 8624], "286": [8688, 8699], "287": [8763, 8784], "288": [8848, 8859], "289": [8923, 8944], "290": [9008, 9019], "291": [9083, 9104], "292": [9168, 9179], "293": [9243, 9263], "294": [9328, 9339], "295": [9404, 9424], "296": [9489, 9500], "297": [9565, 9585], "298": [9650, 9661], "299": [9726, 9746], "300": [9811, 9822], "301": [9887, 9907], "302": [9935, 9947]}, "GyroPoolMath._sqrt": {"264": [6847, 6855], "265": [6951, 7011], "266": [7021, 7081], "267": [7091, 7151], "268": [7161, 7221], "269": [7231, 7291], "270": [7301, 7361], "271": [7371, 7431], "272": [7582, 7709]}, "GyroPoolMath.liquidityInvariantUpdate": {"220": [11409, 11443], "221": [11659, 11693]}}, "8": {}, "9": {"WeightedPool2TokensMiscData.logInvariant": {"135": [2316, 2362]}, "WeightedPool2TokensMiscData.logTotalSupply": {"136": [2532, 2581]}, "WeightedPool2TokensMiscData.oracleEnabled": {"139": [3221, 3267]}, "WeightedPool2TokensMiscData.oracleIndex": {"138": [3019, 3065]}, "WeightedPool2TokensMiscData.oracleSampleCreationTimestamp": {"137": [2786, 2852]}, "WeightedPool2TokensMiscData.setSwapFeePercentage": {"101": [5197, 5270]}, "WeightedPool2TokensMiscData.swapFeePercentage": {"140": [3424, 3477]}}}}, "dependencies": ["node_modules/@balancer-labs/Authentication", "node_modules/@balancer-labs/BalancerPoolToken", "node_modules/@balancer-labs/BasePoolAuthorization", "CappedLiquidity", "node_modules/@balancer-labs/EIP712", "node_modules/@balancer-labs/ERC20", "node_modules/@balancer-labs/ERC20Permit", "node_modules/@balancer-labs/Errors", "ExtensibleWeightedPool2Tokens", "node_modules/@balancer-labs/FixedPoint", "Gyro2CLPMath", "Gyro2CLPPoolErrors", "GyroConfigHelpers", "GyroConfigKeys", "GyroErrors", "GyroFixedPoint", "GyroPoolMath", "node_modules/@balancer-labs/IAsset", "node_modules/@balancer-labs/IAuthentication", "node_modules/@balancer-labs/IAuthorizer", "node_modules/@balancer-labs/IBasePool", "ICappedLiquidity", "node_modules/@balancer-labs/IERC20", "node_modules/@balancer-labs/IERC20Permit", "node_modules/@balancer-labs/IFlashLoanRecipient", "IGyroConfig", "ILocallyPausable", "node_modules/@balancer-labs/IMinimalSwapInfoPool", "node_modules/@balancer-labs/IPoolSwapStructs", "node_modules/@balancer-labs/IProtocolFeesCollector", "node_modules/@balancer-labs/ISignaturesValidator", "node_modules/@balancer-labs/ITemporarilyPausable", "node_modules/@balancer-labs/IVault", "node_modules/@balancer-labs/IWETH", "node_modules/@balancer-labs/InputHelpers", "LocallyPausable", "node_modules/@balancer-labs/LogExpMath", "node_modules/@balancer-labs/Math", "node_modules/@balancer-labs/SafeMath", "TemporarilyPausable", "node_modules/@balancer-labs/WeightedMath", "node_modules/@balancer-labs/WeightedPool2TokensMiscData", "node_modules/@balancer-labs/WeightedPoolUserDataHelpers", "node_modules/@balancer-labs/WordCodec"], "deployedBytecode": "608060405234801561001057600080fd5b50600436106102a05760003560e01c806374f3b0091161016757806398d5fdca116100ce578063abd13afe11610087578063abd13afe1461057a578063c0ff1a1514610582578063d505accf1461058a578063d5c096c41461059d578063dd62ed3e146105b0578063f89f27ed146105c3576102a0565b806398d5fdca146105295780639b02cdde146105315780639d2c110c14610539578063a457c2d71461054c578063a9059cbb1461055f578063aaabadc514610572576102a0565b8063876f303b11610120578063876f303b146104e157806387ec6817146104e9578063893d20e8146104fc5780638d928af8146105045780638dd9f89d1461050c57806395d89b4114610521576102a0565b806374f3b0091461046c57806376e54a461461048d5780637ecebe00146104a05780638002df18146104b35780638456cb59146104c6578063851c1bb3146104ce576102a0565b80633aeae0d31161020b5780636028bfd4116101c45780636028bfd41461040b578063623a2e751461042c578063679aefce146104345780636d785a871461043c578063707dcd1e1461044457806370a0823114610459576102a0565b80633aeae0d3146103955780633c4dd5bb146103aa5780633f4ba83a146103cc57806344bbdb55146103d45780634a6b0b15146103e957806355c6762814610403576102a0565b806323b872dd1161025d57806323b872dd14610337578063313ce5671461034a5780633644e5151461035f57806338e9922e1461036757806338fff2d01461037a5780633950935114610382576102a0565b806306fdde03146102a5578063095ea7b3146102c35780630e608b30146102e357806316c38b3c146102f857806318160ddd1461030b5780631c0de05114610320575b600080fd5b6102ad6105cb565b6040516102ba9190614259565b60405180910390f35b6102d66102d1366004613dae565b610661565b6040516102ba91906141ec565b6102f66102f1366004613c89565b610678565b005b6102f6610306366004613dd9565b610729565b61031361073d565b6040516102ba919061420f565b610328610743565b6040516102ba939291906141f7565b6102d6610345366004613cf9565b61076c565b6103526107e0565b6040516102ba919061433b565b6103136107e9565b6102f6610375366004614099565b6107f8565b610313610811565b6102d6610390366004613dae565b610835565b61039d610870565b6040516102ba91906142ac565b6103bd6103b83660046140b1565b6108bb565b6040516102ba93929190614325565b6102f661090e565b6103dc610a03565b6040516102ba919061416f565b6103f1610a12565b6040516102ba9695949392919061422f565b610313610a6d565b61041e610419366004613df3565b610a7a565b6040516102ba92919061430c565b610313610aab565b610313610b07565b6103dc610b2c565b61044c610b3b565b6040516102ba9190614183565b610313610467366004613c89565b610b4b565b61047f61047a366004613df3565b610b6a565b6040516102ba9291906141c7565b6102f661049b366004613f23565b610bfa565b6103136104ae366004613c89565b610d21565b6102f66104c1366004613c89565b610d3c565b6102f6610e22565b6103136104dc366004613efb565b610eda565b610313610f33565b61041e6104f7366004613df3565b610f74565b6103dc610f99565b6103dc610fbd565b610514610fe1565b6040516102ba91906141b4565b6102ad61107b565b6103136110dc565b61031361112d565b610313610547366004613fa2565b611133565b6102d661055a366004613dae565b6112b9565b6102d661056d366004613dae565b6112f7565b6103dc611304565b6103dc61130e565b61031361131d565b6102f6610598366004613d39565b611358565b61047f6105ab366004613df3565b6114c8565b6103136105be366004613cc1565b6115ad565b6105146115ea565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106575780601f1061062c57610100808354040283529160200191610657565b820191906000526020600020905b81548152906001019060200180831161063a57829003601f168201915b5050505050905090565b600061066e338484611643565b5060015b92915050565b600b5460408051808201909152600e81526d1b9bdd08185d5d1a1bdc9a5e995960921b6020820152906001600160a01b031633146106d25760405162461bcd60e51b81526004016106c99190614259565b60405180910390fd5b50600b80546001600160a01b0319166001600160a01b0383161790556040517fb8fd9afc34c38fcd13b9a3b7646482eb1fddcefb40af2c70609972816eba32089061071e90839061416f565b60405180910390a150565b6107316116a5565b61073a816116d3565b50565b60025490565b600080600061075061174f565b15925061075b61176c565b9150610765611790565b9050909192565b60008061077985336115ad565b905061079d336001600160a01b03871614806107955750838210155b61019e6117b4565b6107a88585856117c2565b336001600160a01b038616148015906107c357506000198114155b156107d5576107d58533858403611643565b506001949350505050565b60055460ff1690565b60006107f36118aa565b905090565b6108006116a5565b610808611968565b61073a8161197d565b7f000000000000000000000000000000000000000000000000000000000000000090565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161066e91859061086b90866119e6565b611643565b610878613bbc565b5060408051606081018252600a5460ff81161515825261010081046001600160781b03166020830152600160801b90046001600160801b03169181019190915290565b6000806000806108ca856119f8565b905060006108d886156119f8565b90506108e48883611a4c565b97506108f08782611a4c565b96506108fd888888611a58565b945094509450505093509350939050565b600c546040805180820190915260118152703737ba103830bab9b29036b0b730b3b2b960791b6020820152906001600160a01b031633146109cd5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561099257818101518382015260200161097a565b50505050905090810190601f1680156109bf5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506109d86000610731565b6040517f215385c8bfc731925ec8068d7baa50f6b6f34417cc7804f7273dc2c0b3db279090600090a1565b600d546001600160a01b031681565b60008060008060008060006008549050610a2b81611b27565b9650610a3681611b33565b9550610a4181611b40565b9450610a4c81611b4d565b9350610a5781611b5a565b9250610a6281611b67565b915050909192939495565b60006107f3600854611b67565b60006060610a8a86516002611b74565b610a9f89898989898989611b81611c48611cc6565b97509795505050505050565b600080610ab661131d565b90506000610ac261073d565b9050600080610ad360095485611dd9565b50919350915060009050610af182610aeb8686611e42565b90611e42565b9050610afd8582611e5a565b9550505050505090565b60006107f3610b1461073d565b610b26610b1f61131d565b6002611eb4565b90611e5a565b600b546001600160a01b031681565b610b43613bdc565b6107f3611ed8565b6001600160a01b0381166000908152602081905260409020545b919050565b60608088610b94610b79610fbd565b6001600160a01b0316336001600160a01b03161460cd6117b4565b610ba9610b9f610811565b82146101f46117b4565b610bb287611efe565b6000806000610bc68d8d8d8d8d8d8d611b81565b925092509250610bd68c84611f60565b610bdf82611c48565b610be881611c48565b909c909b509950505050505050505050565b600b5460408051808201909152600e81526d1b9bdd08185d5d1a1bdc9a5e995960921b6020820152906001600160a01b03163314610c4b5760405162461bcd60e51b81526004016106c99190614259565b50600a5460408051808201909152601081526f1c1bdbdb081a5cc81d5b98d85c1c195960821b60208201529060ff16610c975760405162461bcd60e51b81526004016106c99190614259565b508051600a8054602084015160408086015160ff19909316941515949094176fffffffffffffffffffffffffffffff0019166101006001600160781b0390921691909102176001600160801b03908116600160801b919092160217815590517f2abf5970d7bc1a2b36eaae52dd2cc353edb0337c7284ef8a01973081b4e044249161071e916142e1565b6001600160a01b031660009081526006602052604090205490565b600c546040805180820190915260118152703737ba103830bab9b29036b0b730b3b2b960791b60208201526001600160a01b0390911690338214610dc15760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561099257818101518382015260200161097a565b50600c80546001600160a01b0319166001600160a01b03848116918217909255604080519284168352602083019190915280517f1ffccd1fa96f4fb3415df8048a0fd107344e262d2d246c85105e2a3f8f3e81989281900390910190a15050565b600c546040805180820190915260118152703737ba103830bab9b29036b0b730b3b2b960791b6020820152906001600160a01b03163314610ea45760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561099257818101518382015260200161097a565b50610eaf6001610731565b6040517f681eace576127d0553b224436a09801fb47d042942cbff59d7d4ff04d8fa03d790600090a1565b604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091526001600160e01b03198416828401528251602481840301815260449092019092528051910120919050565b600080610f3e61073d565b9050600080610f56600954610f5161131d565b611dd9565b509193509150610f6c905081610aeb8585611e42565b935050505090565b60006060610f8486516002611b74565b610a9f89898989898989611f6a612029611cc6565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b60606000610fed61208b565b60408051600280825260608201835292935091906020830190803683370190505091506110448160008151811061102057fe5b60200260200101518260018151811061103557fe5b60200260200101516001611a58565b9091508360008151811061105457fe5b602002602001018460018151811061106857fe5b6020908102919091010191909152525090565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106575780601f1061062c57610100808354040283529160200191610657565b6000806110e761208b565b90506000806000611113846000815181106110fe57fe5b60200260200101518560018151811061103557fe5b925092509250611124848383612141565b94505050505090565b60095490565b600061113d611968565b836080015161114d610b79610fbd565b611158610b9f610811565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031686602001516001600160a01b031614905060006111a0826119f8565b905060006111ae83156119f8565b90506111ba8783611a4c565b96506111c68682611a4c565b955060008060006111d88a8a88611a58565b9194509250905060008b5160018111156111ee57fe5b141561125d57600061120c611201610a6d565b60608e01519061217f565b905061122e611228828e606001516121d490919063ffffffff16565b87611a4c565b60608d015260006112428d8d8d87876121ea565b905061124e8187612209565b995050505050505050506112b1565b61126b8b6060015185611a4c565b60608c0152600061127f8c8c8c8686612215565b905061128b8187612228565b90506112a76112a061129b610a6d565b612234565b829061225a565b9850505050505050505b509392505050565b6000806112c633856115ad565b90508083106112e0576112db33856000611643565b6112ed565b6112ed3385858403611643565b5060019392505050565b600061066e3384846117c2565b60006107f36122c0565b600c546001600160a01b031681565b60008061132861208b565b90506000611334611ed8565b9050611351828260005b60200201518360015b602002015161233a565b9250505090565b6113668442111560d16117b4565b6001600160a01b0380881660008181526006602090815260408083205481517f00000000000000000000000000000000000000000000000000000000000000008185015280830195909552948b166060850152608084018a905260a0840185905260c08085018a90528151808603909101815260e090940190528251920191909120906113f28261236d565b9050600060018288888860405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015611450573d6000803e3d6000fd5b5050604051601f190151915061149290506001600160a01b0382161580159061148a57508b6001600160a01b0316826001600160a01b0316145b6101f86117b4565b6001600160a01b038b1660009081526006602052604090206001850190556114bb8b8b8b611643565b5050505050505050505050565b606080886114d7610b79610fbd565b6114e2610b9f610811565b6114ea611968565b60006114f461073d565b611564576115048b8b8b886123b9565b94509050611519620f424082101560cc6117b4565b6115276000620f424061248e565b61153689620f4240830361248e565b61153f84612029565b604080516002808252606082018352909160208301908036833701905050925061159f565b61156d88611efe565b61157c8b8b8b8b8b8b8b611f6a565b9095509350905061158d898261248e565b61159684612029565b61159f83611c48565b505097509795505050505050565b60006115b7610fbd565b6001600160a01b0316826001600160a01b031614156115d95750600019610672565b6115e38383612498565b9050610672565b60606107f36124c3565b806115fe81612532565b5050565b60006116108383605661162d565b9392505050565b60006116278383111560016117b4565b50900390565b67ffffffffffffffff811b1992909216911b1790565b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b60006116bc6000356001600160e01b031916610eda565b905061073a6116cb82336125b0565b6101916117b4565b80156116f3576116ee6116e461176c565b42106101936117b4565b611708565b6117086116fe611790565b42106101a96117b4565b6007805482151560ff19909116811790915560408051918252517f9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be649181900360200190a150565b6000611759611790565b4211806107f357505060075460ff161590565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b816115fe576115fe816126b2565b6117d96001600160a01b03841615156101986117b4565b6117f06001600160a01b03831615156101996117b4565b6117fb8383836125ab565b6001600160a01b03831660009081526020819052604090205461182190826101a0612705565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461185090826119e6565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000061191761271b565b3060405160200180868152602001858152602001848152602001838152602001826001600160a01b031681526020019550505050505060405160208183030381529060405280519060200120905090565b61197b61197361174f565b6101926117b4565b565b61199064e8d4a5100082101560cb6117b4565b6119a667016345785d8a000082111560ca6117b4565b6008546119b39082611602565b6008556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc9061071e90839061420f565b600082820161161084821015836117b4565b600081611a25577f0000000000000000000000000000000000000000000000000000000000000000610672565b7f000000000000000000000000000000000000000000000000000000000000000092915050565b6000611610838361271f565b60408051600280825260608201835260009283928392839260208301908036833701905050905084611a8a5785611a8c565b865b81600081518110611a9957fe5b60200260200101818152505084611ab05786611ab2565b855b81600181518110611abf57fe5b6020026020010181815250506000611ad5611ed8565b9050611ae38282600061133e565b94506000611af18287612758565b905086611b02576020810151611b05565b80515b945086611b13578051611b19565b60208101515b935050505093509350939050565b6000610672828261278c565b600061067282601661278c565b600061067282602c6127b3565b600061067282604b6127bd565b60006106728260556127c5565b60006106728260566127cf565b6115fe81831460676117b4565b60006060806000611b90611ed8565b9050611b9a61174f565b15611bfc576000611bb58983835b6020020151846001611347565b90506000611bc38383612758565b9050611bce826127dd565b611bd88a8861280a565b9096509450611bf18287611bea61073d565b6000612856565b60095550611c129050565b611c06888661280a565b60001960095590945092505b60408051600280825260608201835286928692919060208301908036833701905050935093509350509750975097945050505050565b611c6f81600081518110611c5857fe5b6020026020010151611c6a60016119f8565b611e5a565b81600081518110611c7c57fe5b602002602001018181525050611caa81600181518110611c9857fe5b6020026020010151611c6a60006119f8565b81600181518110611cb757fe5b60200260200101818152505050565b333014611d84576000306001600160a01b0316600036604051611cea92919061415f565b6000604051808303816000865af19150503d8060008114611d27576040519150601f19603f3d011682016040523d82523d6000602084013e611d2c565b606091505b505090508060008114611d3b57fe5b60046000803e6000516001600160e01b0319166343adbafb60e01b8114611d66573d6000803e3d6000fd5b506020600460003e604060205260243d03602460403e601c3d016000f35b611d8d86611efe565b600080611da38b8b8b8b8b8b8b8b63ffffffff16565b5091509150611db5818463ffffffff16565b8051601f1982018390526343adbafb603f1983015260200260231982016044820181fd5b600080600080600080600080611ded6128ae565b93509350935093508360001415611e1257600097508796509094509250611e39915050565b600080611e298c8c611e2261073d565b8989612a20565b909a509850929650909450505050505b92959194509250565b600082820183811015611610576116106000806117b4565b600081611e6d57611e6d600060046117b4565b82611e7a57506000610672565b670de0b6b3a764000083810290848281611e9057fe5b0414611ea257611ea2600060056117b4565b828181611eab57fe5b04949350505050565b6000828202611610841580611ed1575083858381611ece57fe5b04145b60036117b4565b611ee0613bdc565b611eea6001612abb565b8152611ef66000612abb565b602082015290565b611f2581600081518110611f0e57fe5b6020026020010151611f2060016119f8565b61271f565b81600081518110611f3257fe5b602002602001018181525050611caa81600181518110611f4e57fe5b6020026020010151611f2060006119f8565b6115fe8282612b0f565b60006060806000611f79611ed8565b90506000611f88898383611ba8565b90506000611f968383612758565b9050611fa1826127dd565b600080611fae8c8a612bc6565b600a54919350915060ff1615611fd857611fd882611fcb8f610b4b565b611fd361073d565b612c00565b611fec8483611fe561073d565b6001612856565b6009556040805160028082526060820183528492849291906020830190803683370190505097509750975050505050509750975097945050505050565b6120508160008151811061203957fe5b602002602001015161204b60016119f8565b61225a565b8160008151811061205d57fe5b602002602001018181525050611caa8160018151811061207957fe5b602002602001015161204b60006119f8565b60408051600280825260608083018452926020830190803683370190505090506120de7f00000000000000000000000000000000000000000000000000000000000000006120d960016119f8565b612d12565b816000815181106120eb57fe5b6020026020010181815250506121257f00000000000000000000000000000000000000000000000000000000000000006120d960006119f8565b8160018151811061213257fe5b60200260200101818152505090565b60006121778460008151811061215357fe5b6020026020010151848660018151811061216957fe5b602002602001015185612db9565b949350505050565b600082820283158061219957508284828161219657fe5b04145b6121a9576121a9600060036117b4565b806121b8576000915050610672565b670de0b6b3a764000060001982015b0460010191505092915050565b60008282111561162757611627600060016117b4565b60006121fd858588606001518686612dd2565b90505b95945050505050565b60006116108383611e5a565b60006121fd858588606001518686612e3c565b6000611610838361225a565b6000670de0b6b3a7640000821061224c576000610672565b50670de0b6b3a76400000390565b60008161226d5761226d600060046117b4565b8261227a57506000610672565b670de0b6b3a76400008381029084828161229057fe5b04146122b4576122b4670de0b6b3a76400008583816122ab57fe5b041460056117b4565b8260018203816121c757fe5b60006122ca610fbd565b6001600160a01b031663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b15801561230257600080fd5b505afa158015612316573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f39190613ca5565b600080600080600061234d888888612e9c565b935093509350935061236184848484612ff4565b98975050505050505050565b60006123776118aa565b82604051602001808061190160f01b81525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b6000606060006123c884613068565b90506123e360008260038111156123db57fe5b1460ce6117b4565b60006123ee85613087565b90506123fc81516002611b74565b61240581611efe565b600080600061241a846000815181106110fe57fe5b925092509250600061242d858484612141565b9050600061247561245b838860008151811061244557fe5b602002602001015161271f90919063ffffffff16565b8760018151811061246857fe5b60200260200101516119e6565b60099590955550929b939a509298505050505050505050565b6115fe828261313b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b604080516002808252606080830184529260009291906020830190803683370190505090506124f260016131d0565b816000815181106124ff57fe5b60200260200101818152505061251560006131d0565b8160018151811061252257fe5b6020908102919091010152905090565b6002815110156125415761073a565b60008160008151811061255057fe5b602002602001015190506000600190505b82518110156125ab57600083828151811061257857fe5b602002602001015190506125a1816001600160a01b0316846001600160a01b03161060656117b4565b9150600101612561565b505050565b600073ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b6125cf610f99565b6001600160a01b0316141580156125ea57506125ea83613224565b15612612576125f7610f99565b6001600160a01b0316336001600160a01b0316149050610672565b61261a6122c0565b6001600160a01b0316639be2a8848484306040518463ffffffff1660e01b815260040180848152602001836001600160a01b03168152602001826001600160a01b03168152602001935050505060206040518083038186803b15801561267f57600080fd5b505afa158015612693573d6000803e3d6000fd5b505050506040513d60208110156126a957600080fd5b50519050610672565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b600061271484841115836117b4565b5050900390565b4690565b600082820283158061273957508284828161273657fe5b04145b61274957612749600060036117b4565b670de0b6b3a764000081611eab565b612760613bdc565b612773600184815b602002015184613256565b815261278160008481612768565b602082015292915050565b600082821c623fffff16621fffff81136127a65780612177565b623fffff19179392505050565b1c637fffffff1690565b1c6103ff1690565b1c60019081161490565b1c67ffffffffffffffff1690565b6000806000806127ef60095486611dd9565b935093509350935061280384848484613276565b5050505050565b60006060600061281984613068565b9050600181600381111561282957fe5b141561284357612839858561329c565b909350915061284e565b61284e6101506126b2565b509250929050565b600081156128885760006128748461286e888861217f565b9061225a565b90506128808682611e42565b915050612177565b600061289884610b26888861271f565b90506128a486826121d4565b9695505050505050565b600d546000908190819081906128d5906001600160a01b03163063032434c560e41b6132ce565b600d546128f3906001600160a01b03163063032434c560e41b6132f5565b600d546040516321f8a72160e01b81526001600160a01b03909116906321f8a72190612933906c4759524f5f545245415355525960981b9060040161420f565b60206040518083038186803b15801561294b57600080fd5b505afa15801561295f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129839190613ca5565b600d546040516321f8a72160e01b81526001600160a01b03909116906321f8a721906129c2906b42414c5f545245415355525960a01b9060040161420f565b60206040518083038186803b1580156129da57600080fd5b505afa1580156129ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a129190613ca5565b935093509350935090919293565b600080868611612a3557506000905080612ab1565b6000612a5585612a4f612a488a8c6121d4565b899061271f565b9061271f565b90506000612a6d612a66898b6121d4565b879061271f565b90506000612a7b89836121d4565b90506000612a898483611e5a565b90506000612a97888361271f565b90506000612aa583836121d4565b91975090955050505050505b9550959350505050565b600081612ae8577f0000000000000000000000000000000000000000000000000000000000000000610672565b507f0000000000000000000000000000000000000000000000000000000000000000919050565b612b266001600160a01b038316151561019b6117b4565b612b32826000836125ab565b6001600160a01b038216600090815260208190526040902054612b5890826101a1612705565b6001600160a01b038316600090815260208190526040902055600254612b7e9082613323565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b600060606000612bd584613068565b90506003816003811115612be557fe5b1415612bf5576128398585613331565b61284e6101366126b2565b60408051606081018252600a5460ff81161515825261010081046001600160781b031660208301819052600160801b9091046001600160801b03169282019290925290612c4d8585611e42565b11156040518060400160405280601a81526020017f6f7665722061646472657373206c69717569646974792063617000000000000081525090612ca35760405162461bcd60e51b81526004016106c99190614259565b5060408101516001600160801b0316612cbc8584611e42565b11156040518060400160405280601981526020017f6f76657220676c6f62616c206c69717569646974792063617000000000000000815250906128035760405162461bcd60e51b81526004016106c99190614259565b6000806000612d1f610fbd565b6001600160a01b031663b05f8e48612d35610811565b876040518363ffffffff1660e01b8152600401612d53929190614218565b60806040518083038186803b158015612d6b57600080fd5b505afa158015612d7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612da391906140e5565b505081810194509092509050612200838561271f565b6000612200612dc88686611e42565b61286e8585611e42565b600080612df1612dea85670de0b6b3a764000261217f565b8890611e42565b90506000612e0a612dea85670de0b6b3a763ffff61271f565b9050612e23612e198388611e42565b610b26838961271f565b9250505084811115612200576122006000610165613356565b600084841115612e5357612e536000610165613356565b6000612e6a612dea85670de0b6b3a764000261217f565b90506000612e83612dea85670de0b6b3a763ffff61271f565b9050612361612e9282886121d4565b61286e848961217f565b6000808080612ebd612eae8787611e5a565b670de0b6b3a7640000906121d4565b93506000612ee88689600181518110612ed257fe5b6020026020010151611e5a90919063ffffffff16565b90506000612efd888a60008151811061244557fe5b9050612f098282611e42565b9450612f3089600181518110612f1b57fe5b60200260200101518a60008151811061244557fe5b92505050612f6186612a4f88612a4f8b600081518110612f4c57fe5b60200260200101518c60008151811061244557fe5b91506000612fa186610b2689612a4f670de0b6b3a7640000600202612a4f8e600181518110612f8c57fe5b60200260200101518f60008151811061244557fe5b90506000612fd7612fb2888061217f565b610b268b600181518110612fc257fe5b60200260200101518c60018151811061244557fe5b9050612fe781610aeb8685611e42565b9350505093509350935093565b60008061300986671bc16d674ec8000061217f565b9050600061302387612a4f86673782dace9d90000061271f565b905060006130318683611e42565b90506000613040826005613364565b9050600061304e8983611e42565b905061305a8186611e5a565b9a9950505050505050505050565b600081806020019051602081101561307f57600080fd5b505192915050565b606081806020019051604081101561309e57600080fd5b8151602083018051604051929492938301929190846401000000008211156130c557600080fd5b9083019060208201858111156130da57600080fd5b82518660208202830111640100000000821117156130f757600080fd5b82525081516020918201928201910280838360005b8381101561312457818101518382015260200161310c565b505050509190910160405250929695505050505050565b613147600083836125ab565b60025461315490826119e6565b6002556001600160a01b03821660009081526020819052604090205461317a90826119e6565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000816131fd577f0000000000000000000000000000000000000000000000000000000000000000610672565b507f0000000000000000000000000000000000000000000000000000000000000000919050565b6000613236631c74c91760e11b610eda565b821480610672575061324e6350dd6ed960e01b610eda565b909114919050565b60008361326c576132678284611a4c565b612177565b6121778284612209565b831561328657613286828561248e565b821561329657613296818461248e565b50505050565b6000606060006132ab846134f2565b905060006132c186836132bc61073d565b613514565b9196919550909350505050565b6000612177847550524f544f434f4c5f535741505f4645455f5045524360501b848661359a565b6000612177847f50524f544f434f4c5f4645455f4759524f5f504f5254494f4e00000000000000848661359a565b600061161083836001612705565b600060606000613340846134f2565b905060006132c1868361335161073d565b613847565b816115fe576115fe816138e3565b60008261337357506000610672565b600061337e846138f3565b9050600281670de0b6b3a764000086028161339557fe5b0482018161339f57fe5b049050600281670de0b6b3a76400008602816133b757fe5b048201816133c157fe5b049050600281670de0b6b3a76400008602816133d957fe5b048201816133e357fe5b049050600281670de0b6b3a76400008602816133fb57fe5b0482018161340557fe5b049050600281670de0b6b3a764000086028161341d57fe5b0482018161342757fe5b049050600281670de0b6b3a764000086028161343f57fe5b0482018161344957fe5b049050600281670de0b6b3a764000086028161346157fe5b0482018161346b57fe5b049050600061347a828061271f565b9050613490613489838661217f565b8690611e42565b81111580156134b257506134ae6134a7838661217f565b86906121d4565b8110155b6112b1576040805162461bcd60e51b815260206004820152600c60248201526b17dcdc5c9d0811905253115160a21b604482015290519081900360640190fd5b600081806020019051604081101561350957600080fd5b506020015192915050565b6060835167ffffffffffffffff8111801561352e57600080fd5b50604051908082528060200260200182016040528015613558578160200160208202803683370190505b50905060005b84518110156112b15761357b83610b268688858151811061244557fe5b82828151811061358757fe5b602090810291909101015260010161355e565b6040805160208082018690526001600160a01b03808516838501528351808403850181526060840180865281519184019190912063696eb37560e01b909152606484018190529351600094939189169263696eb3759260848082019391829003018186803b15801561360b57600080fd5b505afa15801561361f573d6000803e3d6000fd5b505050506040513d602081101561363557600080fd5b5051156136b557856001600160a01b031663bd02d0f5826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561368057600080fd5b505afa158015613694573d6000803e3d6000fd5b505050506040513d60208110156136aa57600080fd5b505191506121779050565b6040805160208082018890528183018790528251808303840181526060830180855281519183019190912063696eb37560e01b9091526064830181905292516001600160a01b038a169263696eb375926084808301939192829003018186803b15801561372157600080fd5b505afa158015613735573d6000803e3d6000fd5b505050506040513d602081101561374b57600080fd5b5051156137cc57866001600160a01b031663bd02d0f5826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561379657600080fd5b505afa1580156137aa573d6000803e3d6000fd5b505050506040513d60208110156137c057600080fd5b50519250612177915050565b866001600160a01b031663bd02d0f5876040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561381057600080fd5b505afa158015613824573d6000803e3d6000fd5b505050506040513d602081101561383a57600080fd5b5051979650505050505050565b6060835167ffffffffffffffff8111801561386157600080fd5b5060405190808252806020026020018201604052801561388b578160200160208202803683370190505b50905060005b84518110156112b1576138c48361286e868885815181106138ae57fe5b602002602001015161217f90919063ffffffff16565b8282815181106138d057fe5b6020908102919091010152600101613891565b61073a816223aca960e91b613ac5565b6000670de0b6b3a7640000821061392057670de0b6b3a7640000613918818404613b26565b1b9050610b65565b600a8211613933575063bc7c871c610b65565b6064821161394757506402540be400610b65565b6103e8821161395c575064075cdd4719610b65565b6127108211613971575064174876e800610b65565b620186a0821161398757506449a0a4c700610b65565b620f4240821161399d575064e8d4a51000610b65565b6298968082116139b457506502e0466fc608610b65565b6305f5e10082116139cc57506509184e72a000610b65565b633b9aca0082116139e45750651cc2c05dbc53610b65565b6402540be40082116139fd5750655af3107a4000610b65565b64174876e8008211613a17575066011f9b83a95b45610b65565b64e8d4a510008211613a31575066038d7ea4c68000610b65565b6509184e72a0008211613a4c5750660b3c13249d90bb610b65565b655af3107a40008211613a675750662386f26fc10000610b65565b66038d7ea4c680008211613a835750667058bf6e27a751610b65565b662386f26fc100008211613aa0575067016345785d8a0000610b65565b67016345785d8a00008211613abe5750670463777a4d8c892d610b65565b5080610b65565b62461bcd60e51b600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fd5b6000600160801b8210613b3e5760809190911c906040015b680100000000000000008210613b595760409190911c906020015b6401000000008210613b705760209190911c906010015b620100008210613b855760109190911c906008015b6101008210613b995760089190911c906004015b60108210613bac5760049190911c906002015b60048210610b6557600101919050565b604080516060810182526000808252602082018190529181019190915290565b60405180604001604052806002906020820280368337509192915050565b8035610b658161436d565b80358015158114610b6557600080fd5b600082601f830112613c25578081fd5b813567ffffffffffffffff811115613c3957fe5b613c4c601f8201601f1916602001614349565b818152846020838601011115613c60578283fd5b816020850160208301379081016020019190915292915050565b803560028110610b6557600080fd5b600060208284031215613c9a578081fd5b81356116108161436d565b600060208284031215613cb6578081fd5b81516116108161436d565b60008060408385031215613cd3578081fd5b8235613cde8161436d565b91506020830135613cee8161436d565b809150509250929050565b600080600060608486031215613d0d578081fd5b8335613d188161436d565b92506020840135613d288161436d565b929592945050506040919091013590565b600080600080600080600060e0888a031215613d53578283fd5b8735613d5e8161436d565b96506020880135613d6e8161436d565b95506040880135945060608801359350608088013560ff81168114613d91578384fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215613dc0578182fd5b8235613dcb8161436d565b946020939093013593505050565b600060208284031215613dea578081fd5b61161082613c05565b600080600080600080600060e0888a031215613e0d578081fd5b87359650602080890135613e208161436d565b96506040890135613e308161436d565b9550606089013567ffffffffffffffff80821115613e4c578384fd5b818b0191508b601f830112613e5f578384fd5b813581811115613e6b57fe5b613e788485830201614349565b8082825285820191508585018f878886028801011115613e96578788fd5b8795505b83861015613eb8578035835260019590950194918601918601613e9a565b509850505060808b0135955060a08b0135945060c08b0135925080831115613ede578384fd5b5050613eec8a828b01613c15565b91505092959891949750929550565b600060208284031215613f0c578081fd5b81356001600160e01b031981168114611610578182fd5b600060608284031215613f34578081fd5b6040516060810181811067ffffffffffffffff82111715613f5157fe5b604052613f5d83613c05565b815260208301356001600160781b0381168114613f78578283fd5b602082015260408301356001600160801b0381168114613f96578283fd5b60408201529392505050565b600080600060608486031215613fb6578081fd5b833567ffffffffffffffff80821115613fcd578283fd5b8186019150610120808389031215613fe3578384fd5b613fec81614349565b9050613ff783613c7a565b815261400560208401613bfa565b602082015261401660408401613bfa565b6040820152606083013560608201526080830135608082015260a083013560a082015261404560c08401613bfa565b60c082015261405660e08401613bfa565b60e0820152610100808401358381111561406e578586fd5b61407a8a828701613c15565b9183019190915250976020870135975060409096013595945050505050565b6000602082840312156140aa578081fd5b5035919050565b6000806000606084860312156140c5578081fd5b83359250602084013591506140dc60408501613c05565b90509250925092565b600080600080608085870312156140fa578182fd5b845193506020850151925060408501519150606085015161411a8161436d565b939692955090935050565b6000815180845260208085019450808401835b8381101561415457815187529582019590820190600101614138565b509495945050505050565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b60408101818360005b60028110156141ab57815183526020928301929091019060010161418c565b50505092915050565b6000602082526116106020830184614125565b6000604082526141da6040830185614125565b82810360208401526122008185614125565b901515815260200190565b92151583526020830191909152604082015260600190565b90815260200190565b9182526001600160a01b0316602082015260400190565b9586526020860194909452604085019290925260608401521515608083015260a082015260c00190565b6000602080835283518082850152825b8181101561428557858101830151858201604001528201614269565b818111156142965783604083870101525b50601f01601f1916929092016040019392505050565b8151151581526020808301516001600160781b0316908201526040918201516001600160801b03169181019190915260600190565b905460ff811615158252600881901c6001600160781b0316602083015260801c604082015260600190565b6000838252604060208301526121776040830184614125565b9283526020830191909152604082015260600190565b60ff91909116815260200190565b60405181810167ffffffffffffffff8111828210171561436557fe5b604052919050565b6001600160a01b038116811461073a57600080fdfea2646970667358221220be0c442d0fe25fc0fc1a982d83b0eb75bb31050eb8a81b36f1b06a0b5ac56c4964736f6c63430007060033", "deployedSourceMap": "926:27432:40:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2138:81:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4172:164;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1437:199:43:-;;;;;;:::i;:::-;;:::i;:::-;;7417:89:44;;;;;;:::i;:::-;;:::i;3181:98:26:-;;;:::i;:::-;;;;;;;:::i;2906:363:46:-;;;:::i;:::-;;;;;;;;;:::i;2657:655:1:-;;;;;;:::i;:::-;;:::i;3040:81:26:-;;;:::i;:::-;;;;;;;:::i;2359:113:27:-;;;:::i;6510:156:44:-;;;;;;:::i;:::-;;:::i;5345:91::-;;;:::i;5584:211:26:-;;;;;;:::i;:::-;;:::i;1642:105:43:-;;;:::i;:::-;;;;;;;:::i;10267:723:40:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;1352:173:45:-;;;:::i;1338:29:40:-;;;:::i;:::-;;;;;;;:::i;5638:688:44:-;;;:::i;:::-;;;;;;;;;;;;:::i;6332:115::-;;;:::i;31631:770::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;27869:390:40:-;;;:::i;34240:211:44:-;;;:::i;1073:34:43:-;;;:::i;2323:112:40:-;;;:::i;:::-;;;;;;;:::i;3337:117:26:-;;;;;;:::i;:::-;;:::i;21542:1060:44:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1753:385:43:-;;;;;;:::i;:::-;;:::i;2127:108:27:-;;;;;;:::i;:::-;;:::i;790:308:45:-;;;;;;:::i;:::-;;:::i;1141:168::-;;;:::i;2487:430:11:-;;;;;;:::i;:::-;;:::i;27489:275:40:-;;;:::i;30240:768:44:-;;;;;;:::i;:::-;;:::i;1776:80:4:-;;;:::i;1879:79:1:-;;;:::i;4605:417:40:-;;;:::i;:::-;;;;;;;:::i;2332:85:26:-;;;:::i;6518:323:40:-;;;:::i;8098:98:44:-;;;:::i;6866:2342:40:-;;;;;;:::i;:::-;;:::i;3438:429:1:-;;;;;;:::i;:::-;;:::i;3657:170:26:-;;;;;;:::i;:::-;;:::i;1862:101:4:-;;;:::i;488:27:45:-;;;:::i;5869:273:40:-;;;:::i;1313:753:27:-;;;;;;:::i;:::-;;:::i;11895:2126:44:-;;;;;;:::i;:::-;;:::i;2260:254:1:-;;;;;;:::i;:::-;;:::i;7512:117:44:-;;;:::i;2138:81:26:-;2207:5;2200:12;;;;;;;;;;;;;-1:-1:-1;;2200:12:26;;;;;;;;;;;;;;;;;;;;;;;;;;2175:13;;2200:12;;2207:5;;2200:12;;;2207:5;2200:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2138:81;:::o;4172:164::-;4255:4;4271:37;4280:10;4292:7;4301:6;4271:8;:37::i;:::-;-1:-1:-1;4325:4:26;4172:164;;;;;:::o;1437:199:43:-;1522:10;;1534:15;;;;;;;;;;;;-1:-1:-1;;;1534:15:43;;;;;-1:-1:-1;;;;;1522:10:43;1508;:24;1500:50;;;;-1:-1:-1;;;1500:50:43;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;1560:10:43;:24;;-1:-1:-1;;;;;;1560:24:43;-1:-1:-1;;;;;1560:24:43;;;;;1599:30;;;;;;1560:24;;1599:30;:::i;:::-;;;;;;;;1437:199;:::o;7417:89:44:-;2156:21:11;:19;:21::i;:::-;7481:18:44::1;7492:6;7481:10;:18::i;:::-;7417:89:::0;:::o;3181:98:26:-;3260:12;;3181:98;:::o;2906:363:46:-;3009:11;3034:26;3074:27;3136:14;:12;:14::i;:::-;3135:15;3126:24;;3181;:22;:24::i;:::-;3160:45;;3237:25;:23;:25::i;:::-;3215:47;;2906:363;;;:::o;2657:655:1:-;2785:4;2801:24;2828:29;2838:6;2846:10;2828:9;:29::i;:::-;2801:56;-1:-1:-1;2867:101:1;-1:-1:-1;;;;;2876:20:1;;:10;:20;;:50;;;2920:6;2900:16;:26;;2876:50;9174:3:12;2867:8:1;:101::i;:::-;2979:36;2989:6;2997:9;3008:6;2979:9;:36::i;:::-;-1:-1:-1;;;;;3030:20:1;;:10;:20;;;;:55;;-1:-1:-1;;;3054:31:1;;;3030:55;3026:258;;;3218:55;3227:6;3235:10;3266:6;3247:16;:25;3218:8;:55::i;:::-;-1:-1:-1;3301:4:1;;2657:655;-1:-1:-1;;;;2657:655:1:o;3040:81:26:-;3105:9;;;;3040:81;:::o;2359:113:27:-;2419:7;2445:20;:18;:20::i;:::-;2438:27;;2359:113;:::o;6510:156:44:-;2156:21:11;:19;:21::i;:::-;2722:18:46::1;:16;:18::i;:::-;6619:40:44::2;6641:17;6619:21;:40::i;5345:91::-:0;5422:7;5345:91;:::o;5584:211:26:-;5697:10;5672:4;5718:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;5718:32:26;;;;;;;;;;5672:4;;5688:79;;5718:32;;:48;;5755:10;5718:36;:48::i;:::-;5688:8;:79::i;1642:105:43:-;1695:16;;:::i;:::-;-1:-1:-1;1723:17:43;;;;;;;;1730:10;1723:17;;;;;;;;;;;-1:-1:-1;;;;;1723:17:43;;;;;-1:-1:-1;;;1723:17:43;;-1:-1:-1;;;;;1723:17:43;;;;;;;;;1642:105::o;10267:723:40:-;10486:24;10524:22;10560:23;10608:28;10639:31;10654:15;10639:14;:31::i;:::-;10608:62;;10680:29;10712:32;10728:15;10727:16;10712:14;:32::i;:::-;10680:64;;10771:46;10780:14;10796:20;10771:8;:46::i;:::-;10754:63;;10845:48;10854:15;10871:21;10845:8;:48::i;:::-;10827:66;;10910:73;10934:14;10950:15;10967;10910:23;:73::i;:::-;10903:80;;;;;;;;10267:723;;;;;;;:::o;1352:173:45:-;1407:12;;1435:18;;;;;;;;;;;;-1:-1:-1;;;1435:18:45;;;;;-1:-1:-1;;;;;1407:12:45;1423:10;1407:26;1399:55;;;;-1:-1:-1;;;1399:55:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1464:22;1480:5;1464:15;:22::i;:::-;1501:17;;;;;;;1352:173::o;1338:29:40:-;;;-1:-1:-1;;;;;1338:29:40;;:::o;5638:688:44:-;5721:19;5754:21;5789:37;5840:19;5873:18;5905:25;5955:16;5974:9;;5955:28;;6008:23;:8;:21;:23::i;:::-;5993:38;;6058:25;:8;:23;:25::i;:::-;6041:42;;6125:40;:8;:38;:40::i;:::-;6093:72;;6189:22;:8;:20;:22::i;:::-;6175:36;;6237:24;:8;:22;:24::i;:::-;6221:40;;6291:28;:8;:26;:28::i;:::-;6271:48;;5638:688;;;;;;;:::o;6332:115::-;6385:7;6411:29;:9;;:27;:29::i;31631:770::-;31891:13;31906:27;31945:55;31981:8;:15;31998:1;31945:35;:55::i;:::-;32011:137;32024:6;32032;32040:9;32051:8;32061:15;32078:25;32105:8;32115:11;32128:19;32011:12;:137::i;:::-;31631:770;;;;;;;;;;:::o;27869:390:40:-;27931:7;27950:17;27970:14;:12;:14::i;:::-;27950:34;;27994:14;28011:13;:11;:13::i;:::-;27994:30;;28035:16;28053:20;28081:52;28107:14;;28123:9;28081:25;:52::i;:::-;-1:-1:-1;28034:99:40;;-1:-1:-1;28034:99:40;-1:-1:-1;28143:20:40;;-1:-1:-1;28166:38:40;28034:99;28166:20;:6;28034:99;28166:10;:20::i;:::-;:24;;:38::i;:::-;28143:61;-1:-1:-1;28221:31:40;:9;28143:61;28221:17;:31::i;:::-;28214:38;;;;;;;27869:390;:::o;34240:211:44:-;34280:7;34394:50;34430:13;:11;:13::i;:::-;34394:27;34403:14;:12;:14::i;:::-;34419:1;34394:8;:27::i;:::-;:35;;:50::i;1073:34:43:-;;;-1:-1:-1;;;;;1073:34:43;;:::o;2323:112:40:-;2375:17;;:::i;:::-;2411;:15;:17::i;3337:117:26:-;-1:-1:-1;;;;;3429:18:26;;3403:7;3429:18;;;;;;;;;;;3337:117;;;;:::o;21542:1060:44:-;21836:16;21854;21819:6;3135:68;3166:10;:8;:10::i;:::-;-1:-1:-1;;;;;3144:33:44;:10;:33;5392:3:12;3135:8:44;:68::i;:::-;3213:55;3232:11;:9;:11::i;:::-;3222:6;:21;10241:3:12;3213:8:44;:55::i;:::-;21882:23:::1;21896:8;21882:13;:23::i;:::-;21917:19;21938:27:::0;21967:38:::1;22009:196;22034:6;22054;22074:9;22097:8;22119:15;22148:25;22187:8;22009:11;:196::i;:::-;21916:289;;;;;;22311:36;22327:6;22335:11;22311:15;:36::i;:::-;22459:31;22479:10;22459:19;:31::i;:::-;22500:42;22520:21;22500:19;:42::i;:::-;22561:10:::0;;;;-1:-1:-1;21542:1060:44;-1:-1:-1;;;;;;;;;;21542:1060:44:o;1753:385:43:-;1850:10;;1862:15;;;;;;;;;;;;-1:-1:-1;;;1862:15:43;;;;;-1:-1:-1;;;;;1850:10:43;1836;:24;1828:50;;;;-1:-1:-1;;;1828:50:43;;;;;;;;:::i;:::-;-1:-1:-1;1896:10:43;:21;1919:9;;;;;;;;;;;;-1:-1:-1;;;1919:9:43;;;;;1896:21;;1888:41;;;;-1:-1:-1;;;1888:41:43;;;;;;;;:::i;:::-;-1:-1:-1;1964:17:43;;1940:10;:41;;2018:20;;;;2071:16;;;;;-1:-1:-1;;1940:41:43;;;;;;;;;;-1:-1:-1;;1991:47:43;1940:41;-1:-1:-1;;;;;1991:47:43;;;;;;;;-1:-1:-1;;;;;2048:39:43;;;-1:-1:-1;;;2048:39:43;;;;;;;;2103:28;;;;;;;:::i;2127:108:27:-;-1:-1:-1;;;;;2214:14:27;2188:7;2214:14;;;:7;:14;;;;;;;2127:108::o;790:308:45:-;899:12;;964:18;;;;;;;;;;;;-1:-1:-1;;;964:18:45;;;;-1:-1:-1;;;;;899:12:45;;;;952:10;929:33;;921:62;;;;-1:-1:-1;;;921:62:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;921:62:45;;;;;;;;;;;;;;;;;-1:-1:-1;993:12:45;:28;;-1:-1:-1;;;;;;993:28:45;-1:-1:-1;;;;;993:28:45;;;;;;;;;1036:55;;;;;;;;;;;;;;;;;;;;;;;;;;;790:308;;:::o;1141:168::-;1194:12;;1222:18;;;;;;;;;;;;-1:-1:-1;;;1222:18:45;;;;;-1:-1:-1;;;;;1194:12:45;1210:10;1194:26;1186:55;;;;-1:-1:-1;;;1186:55:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1186:55:45;;;;;;;;;;;;;;;;;;1251:21;1267:4;1251:15;:21::i;:::-;1287:15;;;;;;;1141:168::o;2487:430:11:-;2859:50;;;2876:22;2859:50;;;;;;;;-1:-1:-1;;;;;;2859:50:11;;;;;;;;;;;;;;;;;;;;;;;;2849:61;;;;;;2487:430::o;27489:275:40:-;27539:7;27558:14;27575:13;:11;:13::i;:::-;27558:30;;27599:16;27617:20;27645:57;27671:14;;27687;:12;:14::i;:::-;27645:25;:57::i;:::-;-1:-1:-1;27598:104:40;;-1:-1:-1;27598:104:40;-1:-1:-1;27719:38:40;;-1:-1:-1;27598:104:40;27719:20;:6;27598:104;27719:10;:20::i;:38::-;27712:45;;;;;27489:275;:::o;30240:768:44:-;30500:14;30516:26;30554:55;30590:8;:15;30607:1;30554:35;:55::i;:::-;30620:135;30633:6;30641;30649:9;30660:8;30670:15;30687:25;30714:8;30724:11;30737:17;30620:12;:135::i;1776:80:4:-;1843:6;1776:80;:::o;1879:79:1:-;1945:6;1879:79;:::o;4605:417:40:-;4660:30;4702:25;4730:17;:15;:17::i;:::-;4893:16;;;4907:1;4893:16;;;;;;;;4702:45;;-1:-1:-1;4893:16:40;4907:1;4893:16;;;;;;;;;;-1:-1:-1;4893:16:40;4877:32;;4960:55;4984:8;4993:1;4984:11;;;;;;;;;;;;;;4997:8;5006:1;4997:11;;;;;;;;;;;;;;5010:4;4960:23;:55::i;:::-;4919:96;;;4922:13;4936:1;4922:16;;;;;;;;;;;;;4940:13;4954:1;4940:16;;;;;;;;;;;;;;;;;4919:96;;;;;-1:-1:-1;4605:417:40;:::o;2332:85:26:-;2403:7;2396:14;;;;;;;;;;;;;-1:-1:-1;;2396:14:26;;;;;;;;;;;;;;;;;;;;;;;;;;2371:13;;2396:14;;2403:7;;2396:14;;;2403:7;2396:14;;;;;;;;;;;;;;;;;;;;;;;;6518:323:40;6561:17;6590:25;6618:17;:15;:17::i;:::-;6590:45;;6646:17;6665:21;6688;6713:55;6737:8;6746:1;6737:11;;;;;;;;;;;;;;6750:8;6759:1;6750:11;;;;;;;6713:55;6645:123;;;;;;6785:49;6795:8;6805:13;6820;6785:9;:49::i;:::-;6778:56;;;;;;6518:323;:::o;8098:98:44:-;8175:14;;8098:98;:::o;6866:2342:40:-;7062:7;2722:18:46;:16;:18::i;:::-;7037:7:40::1;:14;;;3135:68:44;3166:10;:8;:10::i;3135:68::-;3213:55;3232:11;:9;:11::i;3213:55::-;7104:15:40::2;::::0;::::2;::::0;7123:7:::2;-1:-1:-1::0;;;;;7104:26:40;;::::2;::::0;::::2;;7081:20;7172:31;7104:26:::0;7172:14:::2;:31::i;:::-;7141:62;;7213:29;7245:32;7261:15;7260:16;7245:14;:32::i;:::-;7213:64;;7348:46;7357:14;7373:20;7348:8;:46::i;:::-;7331:63;;7422:48;7431:15;7448:21;7422:8;:48::i;:::-;7404:66;;7560:24;7586:22:::0;7610:23:::2;7637:119;7674:14;7702:15;7731;7637:23;:119::i;:::-;7559:197:::0;;-1:-1:-1;7559:197:40;-1:-1:-1;7559:197:40;-1:-1:-1;7787:24:40::2;7771:12:::0;;:40:::2;::::0;::::2;;;;;;;7767:1435;;;8030:17;8050:44;8071:22;:20;:22::i;:::-;8050:14;::::0;::::2;::::0;;:20:::2;:44::i;:::-;8030:64;;8227:61;8236:29;8255:9;8236:7;:14;;;:18;;:29;;;;:::i;:::-;8267:20;8227:8;:61::i;:::-;8210:14;::::0;::::2;:78:::0;8303:17:::2;8323:89;8210:7:::0;8347:14;8363:15;8380:14;8396:15;8323:14:::2;:89::i;:::-;8303:109;;8506:48;8521:9;8532:21;8506:14;:48::i;:::-;8499:55;;;;;;;;;;;;7767:1435;8602:47;8611:7;:14;;;8627:21;8602:8;:47::i;:::-;8585:14;::::0;::::2;:64:::0;8664:16:::2;8683:90;8585:7:::0;8708:14;8724:15;8741:14;8757:15;8683::::2;:90::i;:::-;8664:109;;8869:44;8882:8;8892:20;8869:12;:44::i;:::-;8858:55;;9140:51;9155:35;:22;:20;:22::i;:::-;:33;:35::i;:::-;9140:8:::0;;:14:::2;:51::i;:::-;9133:58;;;;;;;;;3278:1:44;2750::46::1;6866:2342:40::0;;;;;:::o;3438:429:1:-;3523:4;3539:24;3566:30;3576:10;3588:7;3566:9;:30::i;:::-;3539:57;;3621:16;3611:6;:26;3607:232;;3653:32;3662:10;3674:7;3683:1;3653:8;:32::i;:::-;3607:232;;;3772:56;3781:10;3793:7;3821:6;3802:16;:25;3772:8;:56::i;:::-;-1:-1:-1;3856:4:1;;3438:429;-1:-1:-1;;;3438:429:1:o;3657:170:26:-;3743:4;3759:40;3769:10;3781:9;3792:6;3759:9;:40::i;1862:101:4:-;1910:11;1940:16;:14;:16::i;488:27:45:-;;;-1:-1:-1;;;;;488:27:45;;:::o;5869:273:40:-;5923:7;5942:25;5970:17;:15;:17::i;:::-;5942:45;;5997:28;6028:17;:15;:17::i;:::-;5997:48;-1:-1:-1;6063:72:40;6096:8;5997:48;6117:1;6106:13;;;;;6121:10;6132:1;6121:13;;;;;6063:32;:72::i;:::-;6056:79;;;;5869:273;:::o;1313:753:27:-;1575:60;1603:8;1584:15;:27;;5606:3:12;1575:8:27;:60::i;:::-;-1:-1:-1;;;;;1662:14:27;;;1646:13;1662:14;;;:7;:14;;;;;;;;;1717:68;;1728:16;1717:68;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1717:68:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;1707:79;;;;;;;;;1812:28;1707:79;1812:16;:28::i;:::-;1797:43;;1851:14;1868:24;1878:4;1884:1;1887;1890;1868:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1868:24:27;;-1:-1:-1;;1868:24:27;;;-1:-1:-1;1902:79:27;;-1:-1:-1;;;;;;1912:20:27;;;;;;1911:43;;-1:-1:-1;;;;;;1938:15:27;;;;;;;1911:43;10474:3:12;1902:8:27;:79::i;:::-;-1:-1:-1;;;;;1992:14:27;;;;;;:7;:14;;;;;-1:-1:-1;2009:9:27;;1992:26;;2028:31;1992:14;2044:7;2053:5;2028:8;:31::i;:::-;1313:753;;;;;;;;;;;:::o;11895:2126:44:-;12203:26;12231:38;12172:6;3135:68;3166:10;:8;:10::i;3135:68::-;3213:55;3232:11;:9;:11::i;3213:55::-;2722:18:46::1;:16;:18::i;:::-;12374:20:44::2;12408:13;:11;:13::i;:::-;12404:1611;;12470:54;12488:6;12496;12504:9;12515:8;12470:17;:54::i;:::-;12442:82:::0;-1:-1:-1;12442:82:44;-1:-1:-1;12819:58:44::2;1614:3;12828:28:::0;::::2;;5338:3:12;12819:8:44;:58::i;:::-;12891:41;12915:1;1614:3;12891:15;:41::i;:::-;12946:55;12962:9;1614:3;12973:12;:27;12946:15;:55::i;:::-;13088:28;13106:9;13088:17;:28::i;:::-;13230:16;::::0;;13244:1:::2;13230:16:::0;;;;;::::2;::::0;;;;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;;::::0;-1:-1:-1;13230:16:44::2;13206:40;;12404:1611;;;13277:23;13291:8;13277:13;:23::i;:::-;13366:228;13395:6;13419;13443:9;13470:8;13496:15;13529:25;13572:8;13366:11;:228::i;:::-;13315:279:::0;;-1:-1:-1;13315:279:44;-1:-1:-1;13315:279:44;-1:-1:-1;13708:40:44::2;13724:9:::0;13315:279;13708:15:::2;:40::i;:::-;13835:28;13853:9;13835:17;:28::i;:::-;13962:42;13982:21;13962:19;:42::i;:::-;2750:1:46;11895:2126:44::0;;;;;;;;;;;:::o;2260:254:1:-;2341:7;2383:10;:8;:10::i;:::-;-1:-1:-1;;;;;2364:30:1;;;;;;2360:148;;;-1:-1:-1;;;2410:18:1;;2360:148;2466:31;2482:5;2489:7;2466:15;:31::i;:::-;2459:38;;;;7512:117:44;7567:16;7602:20;:18;:20::i;1135:274:18:-;1345:5;1369:33;1345:5;1369:19;:33::i;:::-;1135:274;;:::o;5083:194:9:-;5178:7;5204:66;:4;5222:18;2155:2;5204:17;:66::i;:::-;5197:73;5083:194;-1:-1:-1;;;5083:194:9:o;948:166:23:-;1006:7;1025:37;1039:1;1034;:6;;4370:1:12;1025:8:23;:37::i;:::-;-1:-1:-1;1084:5:23;;;948:166::o;6887:269:20:-;2598:11;7074:18;;7072:21;7056:37;;;;7133:15;;7111:38;;6887:269::o;9345:213:26:-;-1:-1:-1;;;;;9468:18:26;;;;;;;-1:-1:-1;9468:18:26;;;;;;;;:27;;;;;;;;;;;;;:36;;;9519:32;;;;;;;;;;;;;;;;;9345:213;;;:::o;2300:181:11:-;2355:16;2374:20;-1:-1:-1;;;;;;2386:7:11;;;2374:11;:20::i;:::-;2355:39;;2404:70;2413:33;2425:8;2435:10;2413:11;:33::i;:::-;8353:3:12;2404:8:11;:70::i;3545:358:46:-;3601:6;3597:232;;;3623:81;3650:24;:22;:24::i;:::-;3632:15;:42;8455:3:12;3623:8:46;:81::i;:::-;3597:232;;;3735:83;3762:25;:23;:25::i;:::-;3744:15;:43;9885:3:12;3735:8:46;:83::i;:::-;3839:7;:16;;-1:-1:-1;;3839:16:46;;;;;;;;;;3870:26;;;;;;;;;;;;;;;;;3545:358;:::o;4296:237::-;4343:4;4489:25;:23;:25::i;:::-;4471:15;:43;:55;;;-1:-1:-1;;4519:7:46;;;;4518:8;;4296:237::o;4646:108::-;4728:19;4646:108;:::o;4760:110::-;4843:20;4760:110;:::o;866:101:12:-;935:9;930:34;;946:18;954:9;946:7;:18::i;7068:559:26:-;7195:71;-1:-1:-1;;;;;7204:20:26;;;;8770:3:12;7195:8:26;:71::i;:::-;7276:72;-1:-1:-1;;;;;7285:23:26;;;;8838:3:12;7276:8:26;:72::i;:::-;7359:47;7380:6;7388:9;7399:6;7359:20;:47::i;:::-;-1:-1:-1;;;;;7437:17:26;;:9;:17;;;;;;;;;;;:68;;7459:6;9316:3:12;7437:21:26;:68::i;:::-;-1:-1:-1;;;;;7417:17:26;;;:9;:17;;;;;;;;;;;:88;;;;7538:20;;;;;;;:32;;7563:6;7538:24;:32::i;:::-;-1:-1:-1;;;;;7515:20:26;;;:9;:20;;;;;;;;;;;;:55;;;;7585:35;;;;;;;7515:20;;7585:35;;;;;;;;;;;;;7068:559;;;:::o;2386:188:25:-;2447:7;2494:10;2506:12;2520:15;2537:13;:11;:13::i;:::-;2483:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2560:4;2483:83;;;;;;;;;;;;;;;;;;;;;;;;2473:94;;;;;;2386:188;-1:-1:-1;2386:188:25:o;3972:98:46:-;4024:39;4033:14;:12;:14::i;:::-;8397:3:12;4024:8:46;:39::i;:::-;3972:98::o;6672:397:44:-;6748:87;1722:4;6757:17;:45;;5289:3:12;6748:8:44;:87::i;:::-;6845;1795:4;6854:17;:45;;5228:3:12;6845:8:44;:87::i;:::-;6955:9;;:49;;6986:17;6955:30;:49::i;:::-;6943:9;:61;7019:43;;;;;;7044:17;;7019:43;:::i;915:167:30:-;973:7;1004:5;;;1019:37;1028:6;;;;973:7;1019:8;:37::i;35390:143:44:-;35458:7;35484:6;:42;;35511:15;35484:42;;;35493:15;35477:49;35390:143;-1:-1:-1;;35390:143:44:o;35695:158::-;35775:7;35801:45;35824:6;35832:13;35801:22;:45::i;10996:949:40:-;11360:16;;;11374:1;11360:16;;;;;;;;11210:24;;;;;;;;11360:16;;;;;;;;;;-1:-1:-1;11360:16:40;11332:44;;11400:15;:50;;11435:15;11400:50;;;11418:14;11400:50;11386:8;11395:1;11386:11;;;;;;;;;;;;;:64;;;;;11474:15;:50;;11510:14;11474:50;;;11492:15;11474:50;11460:8;11469:1;11460:11;;;;;;;;;;;;;:64;;;;;11535:28;11566:17;:15;:17::i;:::-;11535:48;-1:-1:-1;11613:72:40;11646:8;11535:48;11667:1;11656:13;;11613:72;11594:91;;11696:30;11729:51;11751:10;11763:16;11729:21;:51::i;:::-;11696:84;;11808:15;:51;;11844:15;;;;11808:51;;;11826:15;;11808:51;11791:68;;11887:15;:51;;11923:15;;11887:51;;;11905:15;;;;11887:51;11869:69;;10996:949;;;;;;;;;;:::o;2239:130:9:-;2298:6;2323:39;:4;2298:6;2323:16;:39::i;2453:135::-;2514:6;2539:42;:4;1902:2;2539:16;:42::i;2691:168::-;2767:7;2793:59;:4;1978:2;2793:17;:59::i;2942:130::-;3000:7;3026:39;:4;2034:2;3026:17;:39::i;3145:129::-;3205:4;3228:39;:4;2092:2;3228:15;:39::i;3341:143::-;3405:7;3431:46;:4;2155:2;3431:17;:46::i;810:131:18:-;888:46;902:1;897;:6;5002:3:12;888:8:18;:46::i;19247:2670:40:-;19535:19;19568:27;19609:38;19827:28;19858:17;:15;:17::i;:::-;19827:48;;19890:14;:12;:14::i;:::-;19886:1852;;;20226:29;20258:72;20291:8;20301:10;20226:29;20301:13;;;;;20316:10;20327:1;20316:13;;20258:72;20226:104;;20344:30;20377:56;20399:10;20411:21;20377;:56::i;:::-;20344:89;;20448:38;20464:21;20448:15;:38::i;:::-;20529:27;20537:8;20547;20529:7;:27::i;:::-;20501:55;;-1:-1:-1;20501:55:40;-1:-1:-1;21031:95:40;21069:21;20501:55;21105:13;:11;:13::i;:::-;21120:5;21031:37;:95::i;:::-;21014:14;:112;-1:-1:-1;19886:1852:40;;-1:-1:-1;19886:1852:40;;21355:27;21363:8;21373;21355:7;:27::i;:::-;-1:-1:-1;;21693:14:40;:34;21327:55;;-1:-1:-1;21327:55:40;-1:-1:-1;19886:1852:40;21893:16;;;21907:1;21893:16;;;;;;;;21868:11;;21881:10;;21893:16;21907:1;21893:16;;;;;;;;;;-1:-1:-1;21893:16:40;21860:50;;;;;;;19247:2670;;;;;;;;;;;:::o;36830:235:44:-;36922:56;36945:7;36953:1;36945:10;;;;;;;;;;;;;;36957:20;36972:4;36957:14;:20::i;:::-;36922:22;:56::i;:::-;36909:7;36917:1;36909:10;;;;;;;;;;;;;:69;;;;;37001:57;37024:7;37032:1;37024:10;;;;;;;;;;;;;;37036:21;37051:5;37036:14;:21::i;37001:57::-;36988:7;36996:1;36988:10;;;;;;;;;;;;;:70;;;;;36830:235;:::o;38347:6537::-;39010:10;39032:4;39010:27;39006:5872;;39324:28;;39306:12;;39332:4;;39324:28;;39306:12;;39343:8;;39324:28;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39305:47;;;39570:7;39599:1;39594:3176;;;;42918:9;39594:3176;40050:4;40047:1;40044;40029:26;40099:1;40093:8;-1:-1:-1;;;;;;40089:81:44;-1:-1:-1;;;40313:77:44;;40307:2;;40442:16;40439:1;40436;40421:38;40494:16;40491:1;40484:27;40307:2;;41833;41827:4;41824:1;41809:27;42018:2;42012:4;42005:16;42426:2;42408:16;42404:25;42398:4;42392;42377:53;42748:2;42730:16;42726:25;42723:1;42716:36;39436:3523;42989:23;43003:8;42989:13;:23::i;:::-;43028:17;43047:29;43082:224;43107:6;43131;43155:9;43182:8;43208:15;43241:25;43284:8;43082:7;:224;;:::i;:::-;43027:279;;;;;43321:29;43337:12;43321:15;:29;;:::i;:::-;43831:19;;-1:-1:-1;;44218:23:44;;44258:24;;;44504:66;-1:-1:-1;;44486:16:44;;44479:92;-1:-1:-1;43827:28:44;-1:-1:-1;;44597:16:44;;44850:2;44840:13;;44597:16;44826:28;25072:914:40;25220:7;25241;25262;25283;25316:27;25345:30;25377:20;25399:19;25422:18;:16;:18::i;:::-;25315:125;;;;;;;;25536:19;25559:1;25536:24;25532:95;;;25584:1;;-1:-1:-1;25584:1:40;;-1:-1:-1;25590:12:40;;-1:-1:-1;25604:11:40;-1:-1:-1;25576:40:40;;-1:-1:-1;;25576:40:40;25532:95;25671:16;25689:20;25713:197;25757:17;25788:16;25818:13;:11;:13::i;:::-;25845:19;25878:22;25713:30;:197::i;:::-;25670:240;;-1:-1:-1;25670:240:40;-1:-1:-1;25953:12:40;;-1:-1:-1;25967:11:40;;-1:-1:-1;;;;;25072:914:40;;;;;;;;:::o;1165:277:54:-;1223:7;1327:5;;;1348:6;;;;1342:76;;1371:36;1380:5;4322:1:12;1371:8:54;:36::i;3345:400::-;3407:7;3430:6;3426:74;;3452:37;3461:5;4516:1:12;3452:8:54;:37::i;:::-;3514:6;3510:45;;-1:-1:-1;3543:1:54;3536:8;;3510:45;795:4;3585:7;;;;:1;:7;:1;3608:13;;;;;:20;3602:106;;3645:36;3654:5;4564:1:12;3645:8:54;:36::i;:::-;3737:1;3725:9;:13;;;;;;;3345:400;-1:-1:-1;;;;3345:400:54:o;1793:180:23:-;1851:7;1882:5;;;1897:51;1906:6;;;:20;;;1925:1;1920;1916;:5;;;;;;:10;1906:20;4467:1:12;1897:8:23;:51::i;2441:245:40:-;2499:35;;:::i;:::-;2569:21;2585:4;2569:15;:21::i;:::-;2546:44;;2623:22;2564:1;2623:15;:22::i;:::-;2600:20;;;:45;:17;2441:245::o;36040:229:44:-;36126:56;36149:7;36157:1;36149:10;;;;;;;;;;;;;;36161:20;36176:4;36161:14;:20::i;:::-;36126:22;:56::i;:::-;36113:7;36121:1;36113:10;;;;;;;;;;;;;:69;;;;;36205:57;36228:7;36236:1;36228:10;;;;;;;;;;;;;;36240:21;36255:5;36240:14;:21::i;4016:104:1:-;4092:21;4098:6;4106;4092:5;:21::i;15068:1993:40:-;15365:7;15386:16;15416;15516:28;15547:17;:15;:17::i;:::-;15516:48;-1:-1:-1;15868:29:40;15900:72;15933:8;15516:48;15868:29;15943:13;;15900:72;15868:104;;15982:30;16015:56;16037:10;16049:21;16015;:56::i;:::-;15982:89;;16082:38;16098:21;16082:15;:38::i;:::-;16132:20;16154:26;16184:27;16192:8;16202;16184:7;:27::i;:::-;16226:10;:21;16131:80;;-1:-1:-1;16131:80:40;-1:-1:-1;16226:21:40;;16222:113;;;16263:61;16274:12;16288:20;16298:9;16288;:20::i;:::-;16310:13;:11;:13::i;:::-;16263:10;:61::i;:::-;16786:95;16824:21;16847:12;16861:13;:11;:13::i;:::-;16876:4;16786:37;:95::i;:::-;16769:14;:112;17037:16;;;17051:1;17037:16;;;;;;;;17012:12;;17026:9;;17037:16;17051:1;17037:16;;;;;;;;;;-1:-1:-1;17037:16:40;17004:50;;;;;;;;;;;15068:1993;;;;;;;;;;;:::o;37618:229:44:-;37708:54;37729:7;37737:1;37729:10;;;;;;;;;;;;;;37741:20;37756:4;37741:14;:20::i;:::-;37708;:54::i;:::-;37695:7;37703:1;37695:10;;;;;;;;;;;;;:67;;;;;37785:55;37806:7;37814:1;37806:10;;;;;;;;;;;;;;37818:21;37833:5;37818:14;:21::i;3974:523:40:-;4294:16;;;4308:1;4294:16;;;4024:25;4294:16;;;;;4024:25;4294:16;;;;;;;;;;-1:-1:-1;4294:16:40;4283:27;;4334:53;4357:7;4366:20;4381:4;4366:14;:20::i;:::-;4334:22;:53::i;:::-;4320:8;4329:1;4320:11;;;;;;;;;;;;;:67;;;;;4411:54;4434:7;4443:21;4458:5;4443:14;:21::i;4411:54::-;4397:8;4406:1;4397:11;;;;;;;;;;;;;:68;;;;;3974:523;:::o;6148:275::-;6293:17;6329:87;6361:8;6370:1;6361:11;;;;;;;;;;;;;;6374:13;6389:8;6398:1;6389:11;;;;;;;;;;;;;;6402:13;6329:31;:87::i;:::-;6322:94;6148:275;-1:-1:-1;;;;6148:275:40:o;2208:615:54:-;2268:7;2305:5;;;2326:6;;;:26;;;2351:1;2346;2336:7;:11;;;;;;:16;2326:26;2320:96;;2369:36;2378:5;4467:1:12;2369:8:54;:36::i;:::-;2430:12;2426:51;;2465:1;2458:8;;;;;2426:51;795:4;-1:-1:-1;;2793:11:54;;2792:19;;2815:1;2791:25;2784:32;;;2208:615;;;;:::o;1448:277::-;1506:7;1609:1;1604;:6;;1598:76;;1627:36;1636:5;4370:1:12;1627:8:54;:36::i;9268:471:40:-;9514:7;9604:128;9633:21;9656:22;9680:11;:18;;;9700:14;9716:15;9604:28;:128::i;:::-;9597:135;;9268:471;;;;;;;;:::o;36473:164:44:-;36559:7;36585:45;36608:6;36616:13;36585:22;:45::i;9745:472:40:-;9992:7;10082:128;10111:21;10134:22;10158:11;:18;;;10178:14;10194:15;10082:28;:128::i;37267:160:44:-;37351:7;37377:43;37398:6;37406:13;37377:20;:43::i;9321:112:54:-;9375:7;795:4;9402:1;:7;9401:25;;9425:1;9401:25;;;-1:-1:-1;795:4:54;9414:7;;9321:112::o;3950:722::-;4010:7;4033:6;4029:74;;4055:37;4064:5;4516:1:12;4055:8:54;:37::i;:::-;4117:6;4113:45;;-1:-1:-1;4146:1:54;4139:8;;4113:45;795:4;4188:7;;;;:1;:7;:1;4211:13;;;;;:20;4205:121;;4248:51;795:4;4269:1;4257:9;:13;;;;;;:20;4564:1:12;4248:8:54;:51::i;:::-;4659:1;4654;4642:9;:13;4641:19;;;;37853:488:44;37911:11;38308:10;:8;:10::i;:::-;-1:-1:-1;;;;;38308:24:44;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1320:1241:39:-;1466:7;2389:9;2400:10;2412:15;2429:10;2443:55;2468:8;2478:9;2489:8;2443:24;:55::i;:::-;2388:110;;;;;;;;2515:39;2535:1;2538:2;2542:7;2551:2;2515:19;:39::i;:::-;2508:46;1320:1241;-1:-1:-1;;;;;;;;1320:1241:39:o;3199:183:25:-;3276:7;3341:20;:18;:20::i;:::-;3363:10;3312:62;;;;;;-1:-1:-1;;;3312:62:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3302:73;;;;;;3295:80;;3199:183;;;:::o;12757:1167:40:-;12899:7;12908:16;12936:30;12969:19;:8;:17;:19::i;:::-;12936:52;-1:-1:-1;12998:70:40;13015:30;13007:4;:38;;;;;;;;;5443:3:12;12998:8:40;:70::i;:::-;13079:26;13108:27;:8;:25;:27::i;:::-;13079:56;;13145;13181:9;:16;13199:1;13145:35;:56::i;:::-;13211:24;13225:9;13211:13;:24::i;:::-;13247:26;13275:21;13298;13323:57;13347:9;13357:1;13347:12;;;;;;;13323:57;13246:134;;;;;;13670:17;13690:50;13700:9;13711:13;13726;13690:9;:50::i;:::-;13670:70;;13750:20;13773:55;13782:31;13803:9;13782;13792:1;13782:12;;;;;;;;;;;;;;:20;;:31;;;;:::i;:::-;13815:9;13825:1;13815:12;;;;;;;;;;;;;;13773:8;:55::i;:::-;13839:14;:35;;;;-1:-1:-1;13839:35:40;;13907:9;;-1:-1:-1;12757:1167:40;;-1:-1:-1;;;;;;;;;12757:1167:40:o;3900:110:1:-;3979:24;3985:9;3996:6;3979:5;:24::i;3885:149:26:-;-1:-1:-1;;;;;4000:18:26;;;3974:7;4000:18;;;-1:-1:-1;4000:18:26;;;;;;;;:27;;;;;;;;;;;;;3885:149::o;7635:298:44:-;7761:16;;;7775:1;7761:16;;;7696;7761;;;;;7696;7724:34;;7761:16;7775:1;7761:16;;;;;;;;;;-1:-1:-1;7761:16:44;7724:53;;7810:24;7829:4;7810:18;:24::i;:::-;7787:17;7805:1;7787:20;;;;;;;;;;;;;:47;;;;;7867:25;7886:5;7867:18;:25::i;:::-;7844:17;7862:1;7844:20;;;;;;;;;;;;;;;;;:48;7909:17;-1:-1:-1;7635:298:44;:::o;1415:374:18:-;1511:1;1496:5;:12;:16;1492:53;;;1528:7;;1492:53;1555:16;1574:5;1580:1;1574:8;;;;;;;;;;;;;;1555:27;;1597:9;1609:1;1597:13;;1592:191;1616:5;:12;1612:1;:16;1592:191;;;1649:15;1667:5;1673:1;1667:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;1689:51:18;-1:-1:-1;;;;;1698:18:18;;;;;;;4890:3:12;1689:8:18;:51::i;:::-;1765:7;-1:-1:-1;1630:3:18;;1592:191;;;;1415:374;;:::o;1969:544:4:-;2057:4;1663:42;2078:10;:8;:10::i;:::-;-1:-1:-1;;;;;2078:29:4;;;;;2077:63;;;2112:28;2131:8;2112:18;:28::i;:::-;2073:434;;;2272:10;:8;:10::i;:::-;-1:-1:-1;;;;;2258:24:4;:10;:24;;-1:-1:-1;2251:31:4;;2073:434;2435:16;:14;:16::i;:::-;:61;;;-1:-1:-1;;;2435:61:4;;;;;;;;-1:-1:-1;;;;;2435:61:4;;;;;;;2490:4;2435:61;;;;;;:27;;;;;;;:61;;;;;;;;;;;;;;;:27;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2435:61:4;;-1:-1:-1;2428:68:4;;1074:3172:12;-1:-1:-1;;;3588:3:12;3581:79;;;3799:66;3793:4;3786:80;3941:1;3935:4;3928:15;2210:2;2243:18;;;2336;;;2383;;;2215:4;2379:29;;;3057:2;3053:17;2195:18;;;;2288;;;;2284:29;;;;3040:1;3036:14;3025:26;;;;3021:50;;;;2999:73;;2994:3;2990:83;4008:4;4001:26;4234:3;;4224:14;1765:176:30;1842:7;1861:27;1875:1;1870;:6;;1878:9;1861:8;:27::i;:::-;-1:-1:-1;;1910:5:30;;;1765:176::o;3388:427:25:-;3790:9;;3765:44::o;1731:247:54:-;1793:7;1830:5;;;1851:6;;;:26;;;1876:1;1871;1861:7;:11;;;;;;:16;1851:26;1845:96;;1894:36;1903:5;4467:1:12;1894:8:54;:36::i;:::-;795:4;1958:7;:13;;5028:392:40;5171:35;;:::i;:::-;5245:50;5264:4;5270:10;5264:4;5270:13;;;;;5285:9;5245:18;:50::i;:::-;5222:73;;5328:51;5240:1;5354:10;5240:1;5354:13;;5328:51;5305:20;;;:74;:17;5028:392;-1:-1:-1;;5028:392:40:o;12135:487:20:-;12209:6;12257:14;;;2386:11;12249:34;2846:11;12558:19;;:57;;12610:5;12558:57;;;-1:-1:-1;;12581:25:20;;;-1:-1:-1;;;12135:487:20:o;11062:142::-;11171:14;2439:11;11163:34;;11062:142::o;10534:::-;10643:14;2280:11;10635:34;;10534:142::o;9730:143::-;9835:14;2126:10;9827:33;;;9826:40;;9730:143::o;11590:142::-;11699:14;2598:11;11691:34;;11590:142::o;23730:583:40:-;24023:16;24041:20;24063;24085:19;24108:98;24147:14;;24175:21;24108:25;:98::i;:::-;24022:184;;;;;;;;24244:62;24256:8;24266:12;24280;24294:11;24244;:62::i;:::-;23730:583;;;;;:::o;21923:592::-;22013:19;22034:27;22073:30;22106:19;:8;:17;:19::i;:::-;22073:52;-1:-1:-1;22288:53:40;22280:4;:61;;;;;;;;;22276:233;;;22385:47;22413:8;22423;22385:27;:47::i;:::-;22357:75;;-1:-1:-1;22357:75:40;-1:-1:-1;22276:233:40;;;22463:35;7850:3:12;22463:7:40;:35::i;:::-;21923:592;;;;;;:::o;10967:743:55:-;11153:21;11222:13;11218:486;;;11325:10;11338:57;11378:16;11338:33;:10;11355:15;11338:16;:33::i;:::-;:39;;:57::i;:::-;11325:70;-1:-1:-1;11425:18:55;:10;11325:70;11425:14;:18::i;:::-;11409:34;;11218:486;;;;11571:10;11584:61;11628:16;11584:35;:10;11603:15;11584:18;:35::i;:61::-;11571:74;-1:-1:-1;11675:18:55;:10;11571:74;11675:14;:18::i;:::-;11659:34;10967:743;-1:-1:-1;;;;;;10967:743:55:o;26432:499:40:-;26636:10;;26520:7;;;;;;;;26636:58;;-1:-1:-1;;;;;26636:10:40;26677:4;-1:-1:-1;;;26636:32:40;:58::i;:::-;26708:10;;:69;;-1:-1:-1;;;;;26708:10:40;26760:4;-1:-1:-1;;;26708:43:40;:69::i;:::-;26791:10;;:55;;-1:-1:-1;;;26791:55:40;;-1:-1:-1;;;;;26791:10:40;;;;-1:-1:-1;;26791:55:40;;-1:-1:-1;;;;26791:55:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26860:10;;:54;;-1:-1:-1;;;26860:54:40;;-1:-1:-1;;;;;26860:10:40;;;;-1:-1:-1;;26860:54:40;;-1:-1:-1;;;;26860:54:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26615:309;;;;;;;;26432:499;;;;:::o;4207:2410:55:-;4443:7;4452;5186:17;5166:16;:37;5162:443;;-1:-1:-1;5589:1:55;;-1:-1:-1;5589:1:55;5581:13;;5162:443;6057:17;6077:96;6153:19;6078:65;6103:39;:16;6124:17;6103:20;:39::i;:::-;6078:16;;:24;:65::i;:::-;6077:75;;:96::i;:::-;6057:116;-1:-1:-1;6183:21:55;6207:68;6235:39;:16;6256:17;6235:20;:39::i;:::-;6207:19;;:27;:68::i;:::-;6183:92;-1:-1:-1;6285:19:55;6307:35;:16;6183:92;6307:20;:35::i;:::-;6285:57;-1:-1:-1;6352:14:55;6369:30;:9;6285:57;6369:17;:30::i;:::-;6352:47;-1:-1:-1;6458:16:55;6477:38;:22;6352:47;6477:30;:38::i;:::-;6458:57;-1:-1:-1;6525:20:55;6548;:6;6458:57;6548:10;:20::i;:::-;6587:8;;-1:-1:-1;6525:43:55;;-1:-1:-1;;;;;;4207:2410:55;;;;;;;;;:::o;2692:141:40:-;2765:7;2791:10;:35;;2817:9;2791:35;;;-1:-1:-1;2804:10:40;;2692:141;-1:-1:-1;2692:141:40:o;8512:410:26:-;8587:68;-1:-1:-1;;;;;8596:21:26;;;;8968:3:12;8587:8:26;:68::i;:::-;8666:49;8687:7;8704:1;8708:6;8666:20;:49::i;:::-;-1:-1:-1;;;;;8747:18:26;;:9;:18;;;;;;;;;;;:67;;8770:6;9382:3:12;8747:22:26;:67::i;:::-;-1:-1:-1;;;;;8726:18:26;;:9;:18;;;;;;;;;;:88;8839:12;;:24;;8856:6;8839:16;:24::i;:::-;8824:12;:39;8878:37;;;;;;;;8904:1;;-1:-1:-1;;;;;8878:37:26;;;;;;;;;;;;8512:410;;:::o;17067:581:40:-;17157:20;17179:26;17217:30;17250:19;:8;:17;:19::i;:::-;17217:52;-1:-1:-1;17414:57:40;17406:4;:65;;;;;;;;;17402:240;;;17515:50;17546:8;17556;17515:30;:50::i;17402:240::-;17596:35;6263:3:12;17596:7:40;:35::i;2144:362:43:-;2284:36;;;;;;;;2310:10;2284:36;;;;;;;;;;;-1:-1:-1;;;;;2284:36:43;;;;;;;-1:-1:-1;;;2284:36:43;;;-1:-1:-1;;;;;2284:36:43;;;;;;;;;2338:29;:12;2355:11;2338:16;:29::i;:::-;:53;;2393:17;;;;;;;;;;;;;;;;;2330:81;;;;;-1:-1:-1;;;2330:81:43;;;;;;;;:::i;:::-;-1:-1:-1;2464:16:43;;;;-1:-1:-1;;;;;2429:51:43;:31;:12;2446:13;2429:16;:31::i;:::-;:51;;2482:16;;;;;;;;;;;;;;;;;2421:78;;;;;-1:-1:-1;;;2421:78:43;;;;;;;;:::i;3210:588:40:-;3302:15;3547:12;3561:15;3584:10;:8;:10::i;:::-;-1:-1:-1;;;;;3584:27:40;;3612:11;:9;:11::i;:::-;3625:5;3584:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;3651:14:40;;;;-1:-1:-1;3546:85:40;;-1:-1:-1;3546:85:40;-1:-1:-1;3761:30:40;3651:14;3777:13;3761:15;:30::i;12053:286:39:-;12232:7;12258:74;12299:31;:8;12312:17;12299:12;:31::i;:::-;12259;:8;12272:17;12259:12;:31::i;6309:2382::-;6511:17;;8273:60;8287:45;:15;8309:22;8287:21;:45::i;:::-;8273:9;;:13;:60::i;:::-;8252:81;-1:-1:-1;8347:20:39;8370:64;8385:48;:16;8410:22;8385:24;:48::i;8370:64::-;8347:87;-1:-1:-1;8461:64:39;8500:24;:10;8515:8;8500:14;:24::i;:::-;8461:30;:12;8482:8;8461:20;:30::i;:64::-;8449:76;;6309:2382;;8613:10;8600:9;:23;;8594:90;;8626:58;8636:5;372:3:41;8626:9:39;:58::i;8879:2353::-;9082:16;10687:10;10674:9;:23;;10668:90;;10700:58;10710:5;372:3:41;10700:9:39;:58::i;:::-;10945:18;10966:60;10980:45;:15;11002:22;10980:21;:45::i;10966:60::-;10945:81;-1:-1:-1;11040:20:39;11063:64;11078:48;:16;11103:22;11078:24;:48::i;11063:64::-;11040:87;-1:-1:-1;11153:62:39;11187:27;11040:87;11204:9;11187:16;:27::i;:::-;11153;:10;11170:9;11153:16;:27::i;2797:1127::-;2985:9;;;;3114:51;3137:27;:9;3155:8;3137:17;:27::i;:::-;795:4:54;;3114:22:39;:51::i;:::-;3110:55;;3179:14;3196:29;3216:8;3196;3205:1;3196:11;;;;;;;;;;;;;;:19;;:29;;;;:::i;:::-;3179:46;;3239:14;3256:30;3276:9;3256:8;3265:1;3256:11;;;;;;;:30;3239:47;-1:-1:-1;3305:18:39;:6;3239:47;3305:10;:18::i;:::-;3300:23;;3342:32;3362:8;3371:1;3362:11;;;;;;;;;;;;;;3342:8;3351:1;3342:11;;;;;;;:32;3337:37;;2797:1127;;3577:72;3639:9;3577:53;3620:9;3578:32;3598:8;3607:1;3598:11;;;;;;;;;;;;;;3578:8;3587:1;3578:11;;;;;;;3577:72;3567:82;;3659:12;3674:103;3768:8;3674:85;3749:9;3674:66;795:4:54;3717:1:39;:22;3675:32;3695:8;3704:1;3695:11;;;;;;;;;;;;;;3675:8;3684:1;3675:11;;;;;;;3674:103;3659:118;-1:-1:-1;3787:12:39;3802:68;3845:24;3860:8;;3845:14;:24::i;:::-;3803:32;3823:8;3832:1;3823:11;;;;;;;;;;;;;;3803:8;3812:1;3803:11;;;;;;;3802:68;3787:83;-1:-1:-1;3890:27:39;3787:83;3890:17;:7;3902:4;3890:11;:17::i;:27::-;3880:37;;2797:1127;;;;;;;;;:::o;4426:792::-;4624:17;;4675:31;:1;4683:22;4675:7;:31::i;:::-;4653:53;-1:-1:-1;4775:15:39;4793:47;4838:1;4794:34;:2;4805:22;4794:10;:34::i;4793:47::-;4775:65;-1:-1:-1;4936:16:39;4955:20;:7;4775:65;4955:11;:20::i;:::-;4936:39;;4985:17;5005:31;5024:8;5034:1;5005:18;:31::i;:::-;4985:51;-1:-1:-1;5122:17:39;5142;:2;4985:51;5142:6;:17::i;:::-;5122:37;-1:-1:-1;5181:30:39;5122:37;5199:11;5181:17;:30::i;:::-;5169:42;4426:792;-1:-1:-1;;;;;;;;;;4426:792:39:o;867:156:10:-;927:25;982:4;971:45;;;;;;;;;;;;;;;-1:-1:-1;971:45:10;;867:156;-1:-1:-1;;867:156:10:o;1205:185::-;1273:26;1338:4;1327:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1327:56:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1327:56:10;;;;;;-1:-1:-1;1311:72:10;;1205:185;-1:-1:-1;;;;;;1205:185:10:o;7898:294:26:-;7973:49;8002:1;8006:7;8015:6;7973:20;:49::i;:::-;8048:12;;:24;;8065:6;8048:16;:24::i;:::-;8033:12;:39;-1:-1:-1;;;;;8103:18:26;;:9;:18;;;;;;;;;;;:30;;8126:6;8103:22;:30::i;:::-;-1:-1:-1;;;;;8082:18:26;;:9;:18;;;;;;;;;;;:51;;;;8148:37;;;;;;;8082:18;;:9;;8148:37;;;;;;;;;;7898:294;;:::o;7939:153:44:-;8011:7;8037:6;:48;;8067:18;8037:48;;;-1:-1:-1;8046:18:44;;7939:153;-1:-1:-1;7939:153:44:o;7075:279::-;7161:4;7209:51;-1:-1:-1;;;7209:11:44;:51::i;:::-;7197:8;:63;7196:151;;;-1:-1:-1;7290:56:44;-1:-1:-1;;;7290:11:44;:56::i;:::-;7278:68;;;;7075:279;-1:-1:-1;7075:279:44:o;5426:365:40:-;5570:7;5608:10;:176;;5721:62;5762:9;5773;5721:40;:62::i;:::-;5608:176;;;5638:62;5679:9;5690;5638:40;:62::i;25992:434::-;26201:12;;26197:82;;26229:39;26245:12;26259:8;26229:15;:39::i;:::-;26335:16;;26331:89;;26367:42;26383:11;26396:12;26367:15;:42::i;:::-;25992:434;;;;:::o;22521:928::-;22672:7;22681:16;23124:19;23146:33;:8;:31;:33::i;:::-;23124:55;;23290:27;23320:80;23363:8;23373:11;23386:13;:11;:13::i;:::-;23320:42;:80::i;:::-;23418:11;;;;-1:-1:-1;22521:928:40;;-1:-1:-1;;;;22521:928:40:o;167:273:51:-;314:7;340:93;356:10;-1:-1:-1;;;411:8:51;421:11;340:15;:93::i;446:287::-;604:7;630:96;646:10;658:44;704:8;714:11;630:15;:96::i;1353:121:30:-;1411:7;1437:30;1441:1;1444;4370::12;1437:3:30;:30::i;17654:528:40:-;17808:7;17817:16;17849:20;17872:36;:8;:34;:36::i;:::-;17849:59;;18019:26;18048:84;18094:8;18104:12;18118:13;:11;:13::i;:::-;18048:45;:84::i;388:103:53:-;458:9;453:35;;469:19;478:9;469:8;:19::i;6726:1013:55:-;6798:7;6821:10;6817:49;;-1:-1:-1;6854:1:55;6847:8;;6817:49;6876:13;6892:24;6910:5;6892:17;:24::i;:::-;6876:40;;7010:1;7000:5;795:4:54;6970:5:55;:26;6969:36;;;;;;6960:5;:46;6959:52;;;;;;6951:60;;7080:1;7070:5;795:4:54;7040:5:55;:26;7039:36;;;;;;7030:5;:46;7029:52;;;;;;7021:60;;7150:1;7140:5;795:4:54;7110:5:55;:26;7109:36;;;;;;7100:5;:46;7099:52;;;;;;7091:60;;7220:1;7210:5;795:4:54;7180:5:55;:26;7179:36;;;;;;7170:5;:46;7169:52;;;;;;7161:60;;7290:1;7280:5;795:4:54;7250:5:55;:26;7249:36;;;;;;7240:5;:46;7239:52;;;;;;7231:60;;7360:1;7350:5;795:4:54;7320:5:55;:26;7319:36;;;;;;7310:5;:46;7309:52;;;;;;7301:60;;7430:1;7420:5;795:4:54;7390:5:55;:26;7389:36;;;;;;7380:5;:46;7379:52;;;;;;;-1:-1:-1;7529:20:55;7552;7379:52;;7552:13;:20::i;:::-;7529:43;-1:-1:-1;7606:33:55;7616:22;:5;7628:9;7616:11;:22::i;:::-;7606:5;;:9;:33::i;:::-;7590:12;:49;;:102;;;;-1:-1:-1;7659:33:55;7669:22;:5;7681:9;7669:11;:22::i;:::-;7659:5;;:9;:33::i;:::-;7643:12;:49;;7590:102;7582:127;;;;;-1:-1:-1;;;7582:127:55;;;;;;;;;;;;-1:-1:-1;;;7582:127:55;;;;;;;;;;;;;;2343:184:10;2417:19;2477:4;2466:54;;;;;;;;;;;;;;;-1:-1:-1;2466:54:10;;;;2343:184;-1:-1:-1;;2343:184:10:o;2432:1444:55:-;2584:27;3685:8;:15;3671:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3671:30:55;;3658:43;;3716:9;3711:131;3735:8;:15;3731:1;:19;3711:131;;;3787:44;3822:8;3787:26;3807:5;3787:8;3796:1;3787:11;;;;;;;:44;3771:10;3782:1;3771:13;;;;;;;;;;;;;;;;;:60;3752:3;;3711:131;;739:809:51;962:34;;;;;;;;;;-1:-1:-1;;;;;962:34:51;;;;;;;;;;;;;;;;;;;;;;952:45;;;;;;;;;-1:-1:-1;;;1203:34:51;;;;;;;;;;;-1:-1:-1;;952:45:51;1203:17;;;;-1:-1:-1;;1203:34:51;;;;;;;;;;;:17;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1203:34:51;1199:107;;;1260:35;;;-1:-1:-1;;;1260:35:51;;;;;;;;;;-1:-1:-1;;;;;1260:18:51;;;;;:35;;;;;;;;;;;;;;:18;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1260:35:51;;-1:-1:-1;1253:42:51;;-1:-1:-1;1253:42:51;1199:107;1348:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1338:48;;;;;;;;;-1:-1:-1;;;1400:30:51;;;;;;;;;;;-1:-1:-1;;;;;1400:17:51;;;-1:-1:-1;;1400:30:51;;;;;1348:37;;1400:30;;;;;:17;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1400:30:51;1396:99;;;1453:31;;;-1:-1:-1;;;1453:31:51;;;;;;;;;;-1:-1:-1;;;;;1453:18:51;;;;;:31;;;;;;;;;;;;;;:18;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1453:31:51;;-1:-1:-1;1446:38:51;;-1:-1:-1;;1446:38:51;1396:99;1512:29;;;-1:-1:-1;;;1512:29:51;;;;;;;;;;-1:-1:-1;;;;;1512:18:51;;;;;:29;;;;;;;;;;;;;;:18;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1512:29:51;;739:809;-1:-1:-1;;;;;;;739:809:51:o;1163:1175:55:-;1319:26;2152:8;:15;2138:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2138:30:55;;2126:42;;2183:9;2178:127;2202:8;:15;2198:1;:19;2178:127;;;2253:41;2285:8;2253:25;2271:6;2253:8;2262:1;2253:11;;;;;;;;;;;;;;:17;;:25;;;;:::i;:41::-;2238:9;2248:1;2238:12;;;;;;;;;;;;;;;;;:56;2219:3;;2178:127;;925:128:53;973:29;982:9;-1:-1:-1;;;973:8:53;:29::i;8327:1637:55:-;8392:7;795:4:54;8415:5:55;:27;8411:1547;;795:4:54;8472:42:55;795:4:54;8487:5:55;:26;8472:14;:42::i;:::-;8465:72;;-1:-1:-1;8458:79:55;;8411:1547;8581:2;8572:5;:11;8568:71;;-1:-1:-1;1058:10:55;8603:21;;8568:71;8665:3;8656:5;:12;8652:62;;-1:-1:-1;8695:4:55;8688:11;;8652:62;8740:3;8731:5;:12;8727:72;;-1:-1:-1;999:11:55;8763:21;;8727:72;8825:3;8816:5;:12;8812:62;;-1:-1:-1;8855:4:55;8848:11;;8812:62;8900:3;8891:5;:12;8887:72;;-1:-1:-1;939:12:55;8923:21;;8887:72;8985:3;8976:5;:12;8972:62;;-1:-1:-1;9015:4:55;9008:11;;8972:62;9060:3;9051:5;:12;9047:72;;-1:-1:-1;878:13:55;9083:21;;9047:72;9145:3;9136:5;:12;9132:62;;-1:-1:-1;9175:4:55;9168:11;;9132:62;9220:3;9211:5;:12;9207:71;;-1:-1:-1;816:14:55;9243:20;;9207:71;9304:4;9295:5;:13;9291:63;;-1:-1:-1;9335:4:55;9328:11;;9291:63;9380:4;9371:5;:13;9367:72;;-1:-1:-1;754:15:55;9404:20;;9367:72;9465:4;9456:5;:13;9452:63;;-1:-1:-1;9496:4:55;9489:11;;9452:63;9541:4;9532:5;:13;9528:72;;-1:-1:-1;691:16:55;9565:20;;9528:72;9626:4;9617:5;:13;9613:63;;-1:-1:-1;9657:4:55;9650:11;;9613:63;9702:4;9693:5;:13;9689:72;;-1:-1:-1;627:17:55;9726:20;;9689:72;9787:4;9778:5;:13;9774:63;;-1:-1:-1;9818:4:55;9811:11;;9774:63;9863:4;9854:5;:13;9850:72;;-1:-1:-1;562:18:55;9887:20;;9850:72;-1:-1:-1;9942:5:55;9935:12;;1160:3379:53;-1:-1:-1;;;1223:18:53;3874:79;;;4092:66;4086:4;4079:80;4234:1;4228:4;4221:15;2362:2;2395:18;;;2440;;;2367:4;2436:29;;;3238:1;3329:14;2347:18;;;;3318:26;;;;2488:18;;;;2535;;;2531:29;;3350:2;3346:17;3314:50;3228:4;3234:18;;;;;;3224:29;3220:2;3216:38;3293:72;;;;3288:3;3284:82;4301:4;4294:26;1252:14;;;;;4527:3;;4517:14;9970:633:55;10026:9;-1:-1:-1;;;10051:13:55;;10047:74;;10086:3;10080:9;;;;;10108:2;10103:7;10047:74;10139:7;10134:1;:12;10130:72;;10168:2;10162:8;;;;;10189:2;10184:7;10130:72;10220:7;10215:1;:12;10211:72;;10249:2;10243:8;;;;;10270:2;10265:7;10211:72;10301:7;10296:1;:12;10292:71;;10330:2;10324:8;;;;;10351:1;10346:6;10292:71;10381:6;10376:1;:11;10372:69;;10409:1;10403:7;;;;;10429:1;10424:6;10372:69;10459:6;10454:1;:11;10450:69;;10487:1;10481:7;;;;;10507:1;10502:6;10450:69;10537:6;10532:1;:11;10528:69;;10585:1;10580:6;;9970:633;-1:-1:-1;9970:633:55:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:138:56:-;84:20;;113:33;84:20;113:33;:::i;157:162::-;224:20;;280:13;;273:21;263:32;;253:2;;309:1;306;299:12;324:542;;421:3;414:4;406:6;402:17;398:27;388:2;;443:5;436;429:20;388:2;483:6;470:20;509:18;505:2;502:26;499:2;;;531:9;499:2;566:54;614:4;-1:-1:-1;;608:2:56;589:13;;585:27;581:38;566:54;:::i;:::-;645:2;636:7;629:19;691:3;684:4;679:2;671:6;667:15;663:26;660:35;657:2;;;712:5;705;698:20;657:2;781;774:4;766:6;762:17;755:4;746:7;742:18;729:55;804:16;;;822:4;800:27;793:42;;;;808:7;378:488;-1:-1:-1;;378:488:56:o;871:152::-;948:20;;997:1;987:12;;977:2;;1013:1;1010;1003:12;1028:259;;1140:2;1128:9;1119:7;1115:23;1111:32;1108:2;;;1161:6;1153;1146:22;1108:2;1205:9;1192:23;1224:33;1251:5;1224:33;:::i;1292:263::-;;1415:2;1403:9;1394:7;1390:23;1386:32;1383:2;;;1436:6;1428;1421:22;1383:2;1473:9;1467:16;1492:33;1519:5;1492:33;:::i;1560:402::-;;;1689:2;1677:9;1668:7;1664:23;1660:32;1657:2;;;1710:6;1702;1695:22;1657:2;1754:9;1741:23;1773:33;1800:5;1773:33;:::i;:::-;1825:5;-1:-1:-1;1882:2:56;1867:18;;1854:32;1895:35;1854:32;1895:35;:::i;:::-;1949:7;1939:17;;;1647:315;;;;;:::o;1967:470::-;;;;2113:2;2101:9;2092:7;2088:23;2084:32;2081:2;;;2134:6;2126;2119:22;2081:2;2178:9;2165:23;2197:33;2224:5;2197:33;:::i;:::-;2249:5;-1:-1:-1;2306:2:56;2291:18;;2278:32;2319:35;2278:32;2319:35;:::i;:::-;2071:366;;2373:7;;-1:-1:-1;;;2427:2:56;2412:18;;;;2399:32;;2071:366::o;2442:853::-;;;;;;;;2654:3;2642:9;2633:7;2629:23;2625:33;2622:2;;;2676:6;2668;2661:22;2622:2;2720:9;2707:23;2739:33;2766:5;2739:33;:::i;:::-;2791:5;-1:-1:-1;2848:2:56;2833:18;;2820:32;2861:35;2820:32;2861:35;:::i;:::-;2915:7;-1:-1:-1;2969:2:56;2954:18;;2941:32;;-1:-1:-1;3020:2:56;3005:18;;2992:32;;-1:-1:-1;3076:3:56;3061:19;;3048:33;3125:4;3112:18;;3100:31;;3090:2;;3150:6;3142;3135:22;3090:2;2612:683;;;;-1:-1:-1;2612:683:56;;;;3178:7;3232:3;3217:19;;3204:33;;-1:-1:-1;3284:3:56;3269:19;;;3256:33;;2612:683;-1:-1:-1;;2612:683:56:o;3300:327::-;;;3429:2;3417:9;3408:7;3404:23;3400:32;3397:2;;;3450:6;3442;3435:22;3397:2;3494:9;3481:23;3513:33;3540:5;3513:33;:::i;:::-;3565:5;3617:2;3602:18;;;;3589:32;;-1:-1:-1;;;3387:240:56:o;3632:192::-;;3741:2;3729:9;3720:7;3716:23;3712:32;3709:2;;;3762:6;3754;3747:22;3709:2;3790:28;3808:9;3790:28;:::i;3829:1679::-;;;;;;;;4077:3;4065:9;4056:7;4052:23;4048:33;4045:2;;;4099:6;4091;4084:22;4045:2;4140:9;4127:23;4117:33;;4169:2;4221;4210:9;4206:18;4193:32;4234:33;4261:5;4234:33;:::i;:::-;4286:5;-1:-1:-1;4343:2:56;4328:18;;4315:32;4356:35;4315:32;4356:35;:::i;:::-;4410:7;-1:-1:-1;4468:2:56;4453:18;;4440:32;4491:18;4521:14;;;4518:2;;;4553:6;4545;4538:22;4518:2;4596:6;4585:9;4581:22;4571:32;;4641:7;4634:4;4630:2;4626:13;4622:27;4612:2;;4668:6;4660;4653:22;4612:2;4709;4696:16;4731:2;4727;4724:10;4721:2;;;4737:9;4721:2;4768:36;4800:2;4795;4791;4787:11;4783:20;4768:36;:::i;:::-;4826:3;4850:2;4845:3;4838:15;4878:2;4873:3;4869:12;4862:19;;4909:2;4905;4901:11;4958:7;4953:2;4947;4943;4939:11;4935:2;4931:20;4927:29;4924:42;4921:2;;;4984:6;4976;4969:22;4921:2;5011:6;5002:15;;5026:163;5040:2;5037:1;5034:9;5026:163;;;5097:17;;5085:30;;5058:1;5051:9;;;;;5135:12;;;;5167;;5026:163;;;-1:-1:-1;5208:5:56;-1:-1:-1;;;5260:3:56;5245:19;;5232:33;;-1:-1:-1;5312:3:56;5297:19;;5284:33;;-1:-1:-1;5370:3:56;5355:19;;5342:33;;-1:-1:-1;5387:16:56;;;5384:2;;;5421:6;5413;5406:22;5384:2;;;5449:53;5494:7;5483:8;5472:9;5468:24;5449:53;:::i;:::-;5439:63;;;4035:1473;;;;;;;;;;:::o;5513:306::-;;5624:2;5612:9;5603:7;5599:23;5595:32;5592:2;;;5645:6;5637;5630:22;5592:2;5676:23;;-1:-1:-1;;;;;;5728:32:56;;5718:43;;5708:2;;5780:6;5772;5765:22;6112:846;;6251:2;6239:9;6230:7;6226:23;6222:32;6219:2;;;6272:6;6264;6257:22;6219:2;6310;6304:9;6352:2;6344:6;6340:15;6421:6;6409:10;6406:22;6385:18;6373:10;6370:34;6367:62;6364:2;;;6432:9;6364:2;6459;6452:22;6498:28;6516:9;6498:28;:::i;:::-;6483:44;;6577:2;6562:18;;6549:32;-1:-1:-1;;;;;6610:44:56;;6600:55;;6590:2;;6674:6;6666;6659:22;6590:2;6711;6699:15;;6692:30;6774:2;6759:18;;6746:32;-1:-1:-1;;;;;6809:48:56;;6797:61;;6787:2;;6877:6;6869;6862:22;6787:2;6914;6902:15;;6895:32;6906:6;6209:749;-1:-1:-1;;;6209:749:56:o;6963:1351::-;;;;7139:2;7127:9;7118:7;7114:23;7110:32;7107:2;;;7160:6;7152;7145:22;7107:2;7205:9;7192:23;7234:18;7275:2;7267:6;7264:14;7261:2;;;7296:6;7288;7281:22;7261:2;7339:6;7328:9;7324:22;7314:32;;7365:6;7405:2;7400;7391:7;7387:16;7383:25;7380:2;;;7426:6;7418;7411:22;7380:2;7457:18;7472:2;7457:18;:::i;:::-;7444:31;;7498;7526:2;7498:31;:::i;:::-;7491:5;7484:46;7562:33;7591:2;7587;7583:11;7562:33;:::i;:::-;7557:2;7550:5;7546:14;7539:57;7628:33;7657:2;7653;7649:11;7628:33;:::i;:::-;7623:2;7616:5;7612:14;7605:57;7715:2;7711;7707:11;7694:25;7689:2;7682:5;7678:14;7671:49;7774:3;7770:2;7766:12;7753:26;7747:3;7740:5;7736:15;7729:51;7834:3;7830:2;7826:12;7813:26;7807:3;7800:5;7796:15;7789:51;7873:34;7902:3;7898:2;7894:12;7873:34;:::i;:::-;7867:3;7860:5;7856:15;7849:59;7941:34;7970:3;7966:2;7962:12;7941:34;:::i;:::-;7935:3;7928:5;7924:15;7917:59;7995:3;8044:2;8040;8036:11;8023:25;8073:2;8063:8;8060:16;8057:2;;;8094:6;8086;8079:22;8057:2;8135:46;8173:7;8162:8;8158:2;8154:17;8135:46;:::i;:::-;8119:14;;;8112:70;;;;-1:-1:-1;8123:5:56;8253:2;8238:18;;8225:32;;-1:-1:-1;8304:2:56;8289:18;;;8276:32;;7097:1217;-1:-1:-1;;;;;7097:1217:56:o;8319:190::-;;8431:2;8419:9;8410:7;8406:23;8402:32;8399:2;;;8452:6;8444;8437:22;8399:2;-1:-1:-1;8480:23:56;;8389:120;-1:-1:-1;8389:120:56:o;8514:328::-;;;;8657:2;8645:9;8636:7;8632:23;8628:32;8625:2;;;8678:6;8670;8663:22;8625:2;8719:9;8706:23;8696:33;;8776:2;8765:9;8761:18;8748:32;8738:42;;8799:37;8832:2;8821:9;8817:18;8799:37;:::i;:::-;8789:47;;8615:227;;;;;:::o;8847:447::-;;;;;9021:3;9009:9;9000:7;8996:23;8992:33;8989:2;;;9043:6;9035;9028:22;8989:2;9077:9;9071:16;9061:26;;9127:2;9116:9;9112:18;9106:25;9096:35;;9171:2;9160:9;9156:18;9150:25;9140:35;;9218:2;9207:9;9203:18;9197:25;9231:33;9258:5;9231:33;:::i;:::-;8979:315;;;;-1:-1:-1;8979:315:56;;-1:-1:-1;;8979:315:56:o;9299:443::-;;9396:5;9390:12;9423:6;9418:3;9411:19;9449:4;9478:2;9473:3;9469:12;9462:19;;9515:2;9508:5;9504:14;9536:3;9548:169;9562:6;9559:1;9556:13;9548:169;;;9623:13;;9611:26;;9657:12;;;;9692:15;;;;9584:1;9577:9;9548:169;;;-1:-1:-1;9733:3:56;;9366:376;-1:-1:-1;;;;;9366:376:56:o;9747:273::-;;9930:6;9922;9917:3;9904:33;9956:16;;9981:15;;;9956:16;9894:126;-1:-1:-1;9894:126:56:o;10025:203::-;-1:-1:-1;;;;;10189:32:56;;;;10171:51;;10159:2;10144:18;;10126:102::o;10233:494::-;10413:2;10398:18;;10402:9;10493:6;10233:494;10527:194;10541:4;10538:1;10535:11;10527:194;;;10600:13;;10588:26;;10637:4;10661:12;;;;10696:15;;;;10561:1;10554:9;10527:194;;;10531:3;;;10380:347;;;;:::o;10732:267::-;;10911:2;10900:9;10893:21;10931:62;10989:2;10978:9;10974:18;10966:6;10931:62;:::i;11004:477::-;;11261:2;11250:9;11243:21;11287:62;11345:2;11334:9;11330:18;11322:6;11287:62;:::i;:::-;11397:9;11389:6;11385:22;11380:2;11369:9;11365:18;11358:50;11425;11468:6;11460;11425:50;:::i;11486:187::-;11651:14;;11644:22;11626:41;;11614:2;11599:18;;11581:92::o;11678:329::-;11899:14;;11892:22;11874:41;;11946:2;11931:18;;11924:34;;;;11989:2;11974:18;;11967:34;11862:2;11847:18;;11829:178::o;12012:177::-;12158:25;;;12146:2;12131:18;;12113:76::o;12194:289::-;12383:25;;;-1:-1:-1;;;;;12444:32:56;12439:2;12424:18;;12417:60;12371:2;12356:18;;12338:145::o;13166:541::-;13443:25;;;13499:2;13484:18;;13477:34;;;;13542:2;13527:18;;13520:34;;;;13585:2;13570:18;;13563:34;13641:14;13634:22;13628:3;13613:19;;13606:51;13688:3;13673:19;;13666:35;13430:3;13415:19;;13397:310::o;13712:603::-;;13853:2;13882;13871:9;13864:21;13914:6;13908:13;13957:6;13952:2;13941:9;13937:18;13930:34;13982:4;13995:140;14009:6;14006:1;14003:13;13995:140;;;14104:14;;;14100:23;;14094:30;14070:17;;;14089:2;14066:26;14059:66;14024:10;;13995:140;;;14153:6;14150:1;14147:13;14144:2;;;14223:4;14218:2;14209:6;14198:9;14194:22;14190:31;14183:45;14144:2;-1:-1:-1;14299:2:56;14278:15;-1:-1:-1;;14274:29:56;14259:45;;;;14306:2;14255:54;;13833:482;-1:-1:-1;;;13833:482:56:o;14320:460::-;14552:13;;14545:21;14538:29;14520:48;;14628:4;14616:17;;;14610:24;-1:-1:-1;;;;;14606:63:56;14584:20;;;14577:93;14730:4;14718:17;;;14712:24;-1:-1:-1;;;;;14708:65:56;14686:20;;;14679:95;;;;14508:2;14493:18;;14475:305::o;14785:450::-;14999:13;;15068:4;15053:20;;15046:28;15039:36;15021:55;;-1:-1:-1;;;;;15122:1:56;15118:17;;;15114:56;15107:4;15092:20;;15085:86;15213:3;15209:19;15202:4;15187:20;;15180:49;14970:2;14955:18;;14937:298::o;15422:338::-;;15629:6;15618:9;15611:25;15672:2;15667;15656:9;15652:18;15645:30;15692:62;15750:2;15739:9;15735:18;15727:6;15692:62;:::i;15765:319::-;15967:25;;;16023:2;16008:18;;16001:34;;;;16066:2;16051:18;;16044:34;15955:2;15940:18;;15922:162::o;16089:184::-;16261:4;16249:17;;;;16231:36;;16219:2;16204:18;;16186:87::o;16278:242::-;16348:2;16342:9;16378:17;;;16425:18;16410:34;;16446:22;;;16407:62;16404:2;;;16472:9;16404:2;16499;16492:22;16322:198;;-1:-1:-1;16322:198:56:o;16525:133::-;-1:-1:-1;;;;;16602:31:56;;16592:42;;16582:2;;16648:1;16645;16638:12", "language": "Solidity", "natspec": {"kind": "dev", "methods": {"DOMAIN_SEPARATOR()": {"details": "See {IERC20Permit-DOMAIN_SEPARATOR}."}, "allowance(address,address)": {"details": "Override to grant the Vault infinite allowance, causing for Pool Tokens to not require approval. This is sound as the Vault already provides authorization mechanisms when initiation token transfers, which this contract inherits."}, "approve(address,uint256)": {"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."}, "balanceOf(address)": {"details": "See {IERC20-balanceOf}."}, "calculateCurrentValues(uint256,uint256,bool)": {"details": "invariant and virtual offsets."}, "changePauseManager(address)": {"notice": "Changes the account that is allowed to pause a pool."}, "decimals()": {"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."}, "decreaseAllowance(address,uint256)": {"details": "Override to allow decreasing allowance by more than the current amount (setting it to zero)"}, "getActionId(bytes4)": {"details": "Returns the action identifier associated with the external function described by `selector`."}, "getActualSupply()": {"notice": "Effective BPT supply.  This is the same as `totalSupply()` but also accounts for the fact that the pool owes  protocol fees to the pool in the form of unminted LP shares created on the next join/exit,  diluting LPers. Thus, this is the totalSupply() that the next join/exit operation will see.  Equivalent to the respective function in, e.g., WeightedPool, see:  https://github.com/balancer/balancer-v2-monorepo/blob/master/pkg/pool-weighted/contracts/WeightedPool.sol#L325-L344"}, "getInvariant()": {"details": "Returns the current value of the invariant."}, "getInvariantDivActualSupply()": {"notice": "Equivalent to but more efficient than `getInvariant().divDown(getActualSupply())`."}, "getMiscData()": {"details": "Only `swapFeePercentage` is non-trivial; everything else is 0/false because the oracle is not used. These variables are returned to keep the call signature compatible."}, "getPausedState()": {"details": "Returns the current contract pause status, as well as the end times of the Pause Window and Buffer Period."}, "getPrice()": {"details": "Returns the current spot price of token0 quoted in units of token1."}, "getRate()": {"details": "This function returns the appreciation of one BPT relative to the underlying tokens. This starts at 1 when the pool is created and grows over time"}, "getSqrtParameters()": {"details": "Returns sqrtAlpha and sqrtBeta (square roots of lower and upper price bounds of p_x respectively)"}, "getVirtualParameters()": {"details": "Returns virtual offsets a and b for reserves x and y respectively, as in (x+a)*(y+b)=L^2"}, "increaseAllowance(address,uint256)": {"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."}, "name()": {"details": "Returns the name of the token."}, "nonces(address)": {"details": "See {IERC20Permit-nonces}."}, "onExitPool(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Called by the Vault when a user calls `IVault.exitPool` to remove liquidity from this Pool. Returns how many tokens the Vault should deduct from the Pool's balances, as well as the amount of protocol fees the Pool owes to the Vault. The Vault will then take tokens from the Pool's balances and send them to `recipient`, as well as collect the reported amount in protocol fees, which the Pool should calculate based on `protocolSwapFeePercentage`. Protocol fees are charged on exit events to guarantee that users exiting the Pool have paid their share. `sender` is the account performing the exit (typically the pool shareholder), and `recipient` is the account to which the Vault will send the proceeds. `balances` contains the total token balances for each token the Pool registered in the Vault, in the same order that `IVault.getPoolTokens` would return. `lastChangeBlock` is the last block in which *any* of the Pool's registered tokens last changed its total balance. `userData` contains any pool-specific instructions needed to perform the calculations, such as the type of exit (e.g., proportional given an amount of pool shares, single-asset, multi-asset, etc.) Contracts implementing this function should check that the caller is indeed the Vault before performing any state-changing operations, such as burning pool shares."}, "onJoinPool(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Called by the Vault when a user calls `IVault.joinPool` to add liquidity to this Pool. Returns how many of each registered token the user should provide, as well as the amount of protocol fees the Pool owes to the Vault. The Vault will then take tokens from `sender` and add them to the Pool's balances, as well as collect the reported amount in protocol fees, which the pool should calculate based on `protocolSwapFeePercentage`. Protocol fees are reported and charged on join events so that the Pool is free of debt whenever new users join. `sender` is the account performing the join (from which tokens will be withdrawn), and `recipient` is the account designated to receive any benefits (typically pool shares). `balances` contains the total balances for each token the Pool registered in the Vault, in the same order that `IVault.getPoolTokens` would return. `lastChangeBlock` is the last block in which *any* of the Pool's registered tokens last changed its total balance. `userData` contains any pool-specific instructions needed to perform the calculations, such as the type of join (e.g., proportional given an amount of pool shares, single-asset, multi-asset, etc.) Contracts implementing this function should check that the caller is indeed the Vault before performing any state-changing operations, such as minting pool shares."}, "pause()": {"notice": "Pauses the pool. Can only be called by the pause manager."}, "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {"details": "See {IERC20Permit-permit}."}, "queryExit(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Returns the amount of BPT that would be burned from `sender` if the `onExitPool` hook were called by the Vault with the same arguments, along with the number of tokens `recipient` would receive. This function is not meant to be called directly, but rather from a helper contract that fetches current Vault data, such as the protocol swap fee percentage and Pool balances. Like `IVault.queryBatchSwap`, this function is not view due to internal implementation details: the caller must explicitly use eth_call instead of eth_sendTransaction."}, "queryJoin(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Returns the amount of BPT that would be granted to `recipient` if the `onJoinPool` hook were called by the Vault with the same arguments, along with the number of tokens `sender` would have to supply. This function is not meant to be called directly, but rather from a helper contract that fetches current Vault data, such as the protocol swap fee percentage and Pool balances. Like `IVault.queryBatchSwap`, this function is not view due to internal implementation details: the caller must explicitly use eth_call instead of eth_sendTransaction."}, "symbol()": {"details": "Returns the symbol of the token, usually a shorter version of the name."}, "totalSupply()": {"details": "See {IERC20-totalSupply}."}, "transfer(address,uint256)": {"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."}, "transferFrom(address,address,uint256)": {"details": "Override to allow for 'infinite allowance' and let the token owner use `transferFrom` with no self-allowance"}, "unpause()": {"notice": "Unpauses the pool. Can only be called by the pause manager."}}, "version": 1}, "offset": [926, 28358], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2A0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x74F3B009 GT PUSH2 0x167 JUMPI DUP1 PUSH4 0x98D5FDCA GT PUSH2 0xCE JUMPI DUP1 PUSH4 0xABD13AFE GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xABD13AFE EQ PUSH2 0x57A JUMPI DUP1 PUSH4 0xC0FF1A15 EQ PUSH2 0x582 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x58A JUMPI DUP1 PUSH4 0xD5C096C4 EQ PUSH2 0x59D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5B0 JUMPI DUP1 PUSH4 0xF89F27ED EQ PUSH2 0x5C3 JUMPI PUSH2 0x2A0 JUMP JUMPDEST DUP1 PUSH4 0x98D5FDCA EQ PUSH2 0x529 JUMPI DUP1 PUSH4 0x9B02CDDE EQ PUSH2 0x531 JUMPI DUP1 PUSH4 0x9D2C110C EQ PUSH2 0x539 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x54C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x55F JUMPI DUP1 PUSH4 0xAAABADC5 EQ PUSH2 0x572 JUMPI PUSH2 0x2A0 JUMP JUMPDEST DUP1 PUSH4 0x876F303B GT PUSH2 0x120 JUMPI DUP1 PUSH4 0x876F303B EQ PUSH2 0x4E1 JUMPI DUP1 PUSH4 0x87EC6817 EQ PUSH2 0x4E9 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x4FC JUMPI DUP1 PUSH4 0x8D928AF8 EQ PUSH2 0x504 JUMPI DUP1 PUSH4 0x8DD9F89D EQ PUSH2 0x50C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x521 JUMPI PUSH2 0x2A0 JUMP JUMPDEST DUP1 PUSH4 0x74F3B009 EQ PUSH2 0x46C JUMPI DUP1 PUSH4 0x76E54A46 EQ PUSH2 0x48D JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x4A0 JUMPI DUP1 PUSH4 0x8002DF18 EQ PUSH2 0x4B3 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0x851C1BB3 EQ PUSH2 0x4CE JUMPI PUSH2 0x2A0 JUMP JUMPDEST DUP1 PUSH4 0x3AEAE0D3 GT PUSH2 0x20B JUMPI DUP1 PUSH4 0x6028BFD4 GT PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x6028BFD4 EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0x623A2E75 EQ PUSH2 0x42C JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0x6D785A87 EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x707DCD1E EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x459 JUMPI PUSH2 0x2A0 JUMP JUMPDEST DUP1 PUSH4 0x3AEAE0D3 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x3C4DD5BB EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0x44BBDB55 EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0x4A6B0B15 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0x55C67628 EQ PUSH2 0x403 JUMPI PUSH2 0x2A0 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x25D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0x38E9922E EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0x38FFF2D0 EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x382 JUMPI PUSH2 0x2A0 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0xE608B30 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x1C0DE051 EQ PUSH2 0x320 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2AD PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x4259 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D6 PUSH2 0x2D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DAE JUMP JUMPDEST PUSH2 0x661 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x41EC JUMP JUMPDEST PUSH2 0x2F6 PUSH2 0x2F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C89 JUMP JUMPDEST PUSH2 0x678 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F6 PUSH2 0x306 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DD9 JUMP JUMPDEST PUSH2 0x729 JUMP JUMPDEST PUSH2 0x313 PUSH2 0x73D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x420F JUMP JUMPDEST PUSH2 0x328 PUSH2 0x743 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x41F7 JUMP JUMPDEST PUSH2 0x2D6 PUSH2 0x345 CALLDATASIZE PUSH1 0x4 PUSH2 0x3CF9 JUMP JUMPDEST PUSH2 0x76C JUMP JUMPDEST PUSH2 0x352 PUSH2 0x7E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x433B JUMP JUMPDEST PUSH2 0x313 PUSH2 0x7E9 JUMP JUMPDEST PUSH2 0x2F6 PUSH2 0x375 CALLDATASIZE PUSH1 0x4 PUSH2 0x4099 JUMP JUMPDEST PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x313 PUSH2 0x811 JUMP JUMPDEST PUSH2 0x2D6 PUSH2 0x390 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DAE JUMP JUMPDEST PUSH2 0x835 JUMP JUMPDEST PUSH2 0x39D PUSH2 0x870 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x42AC JUMP JUMPDEST PUSH2 0x3BD PUSH2 0x3B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x40B1 JUMP JUMPDEST PUSH2 0x8BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4325 JUMP JUMPDEST PUSH2 0x2F6 PUSH2 0x90E JUMP JUMPDEST PUSH2 0x3DC PUSH2 0xA03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x416F JUMP JUMPDEST PUSH2 0x3F1 PUSH2 0xA12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x422F JUMP JUMPDEST PUSH2 0x313 PUSH2 0xA6D JUMP JUMPDEST PUSH2 0x41E PUSH2 0x419 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DF3 JUMP JUMPDEST PUSH2 0xA7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP3 SWAP2 SWAP1 PUSH2 0x430C JUMP JUMPDEST PUSH2 0x313 PUSH2 0xAAB JUMP JUMPDEST PUSH2 0x313 PUSH2 0xB07 JUMP JUMPDEST PUSH2 0x3DC PUSH2 0xB2C JUMP JUMPDEST PUSH2 0x44C PUSH2 0xB3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x4183 JUMP JUMPDEST PUSH2 0x313 PUSH2 0x467 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C89 JUMP JUMPDEST PUSH2 0xB4B JUMP JUMPDEST PUSH2 0x47F PUSH2 0x47A CALLDATASIZE PUSH1 0x4 PUSH2 0x3DF3 JUMP JUMPDEST PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP3 SWAP2 SWAP1 PUSH2 0x41C7 JUMP JUMPDEST PUSH2 0x2F6 PUSH2 0x49B CALLDATASIZE PUSH1 0x4 PUSH2 0x3F23 JUMP JUMPDEST PUSH2 0xBFA JUMP JUMPDEST PUSH2 0x313 PUSH2 0x4AE CALLDATASIZE PUSH1 0x4 PUSH2 0x3C89 JUMP JUMPDEST PUSH2 0xD21 JUMP JUMPDEST PUSH2 0x2F6 PUSH2 0x4C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C89 JUMP JUMPDEST PUSH2 0xD3C JUMP JUMPDEST PUSH2 0x2F6 PUSH2 0xE22 JUMP JUMPDEST PUSH2 0x313 PUSH2 0x4DC CALLDATASIZE PUSH1 0x4 PUSH2 0x3EFB JUMP JUMPDEST PUSH2 0xEDA JUMP JUMPDEST PUSH2 0x313 PUSH2 0xF33 JUMP JUMPDEST PUSH2 0x41E PUSH2 0x4F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DF3 JUMP JUMPDEST PUSH2 0xF74 JUMP JUMPDEST PUSH2 0x3DC PUSH2 0xF99 JUMP JUMPDEST PUSH2 0x3DC PUSH2 0xFBD JUMP JUMPDEST PUSH2 0x514 PUSH2 0xFE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x41B4 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x107B JUMP JUMPDEST PUSH2 0x313 PUSH2 0x10DC JUMP JUMPDEST PUSH2 0x313 PUSH2 0x112D JUMP JUMPDEST PUSH2 0x313 PUSH2 0x547 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FA2 JUMP JUMPDEST PUSH2 0x1133 JUMP JUMPDEST PUSH2 0x2D6 PUSH2 0x55A CALLDATASIZE PUSH1 0x4 PUSH2 0x3DAE JUMP JUMPDEST PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x2D6 PUSH2 0x56D CALLDATASIZE PUSH1 0x4 PUSH2 0x3DAE JUMP JUMPDEST PUSH2 0x12F7 JUMP JUMPDEST PUSH2 0x3DC PUSH2 0x1304 JUMP JUMPDEST PUSH2 0x3DC PUSH2 0x130E JUMP JUMPDEST PUSH2 0x313 PUSH2 0x131D JUMP JUMPDEST PUSH2 0x2F6 PUSH2 0x598 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D39 JUMP JUMPDEST PUSH2 0x1358 JUMP JUMPDEST PUSH2 0x47F PUSH2 0x5AB CALLDATASIZE PUSH1 0x4 PUSH2 0x3DF3 JUMP JUMPDEST PUSH2 0x14C8 JUMP JUMPDEST PUSH2 0x313 PUSH2 0x5BE CALLDATASIZE PUSH1 0x4 PUSH2 0x3CC1 JUMP JUMPDEST PUSH2 0x15AD JUMP JUMPDEST PUSH2 0x514 PUSH2 0x15EA JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x657 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x62C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x657 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x63A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x66E CALLER DUP5 DUP5 PUSH2 0x1643 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x1B9BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C9 SWAP2 SWAP1 PUSH2 0x4259 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xB8FD9AFC34C38FCD13B9A3B7646482EB1FDDCEFB40AF2C70609972816EBA3208 SWAP1 PUSH2 0x71E SWAP1 DUP4 SWAP1 PUSH2 0x416F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x731 PUSH2 0x16A5 JUMP JUMPDEST PUSH2 0x73A DUP2 PUSH2 0x16D3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x750 PUSH2 0x174F JUMP JUMPDEST ISZERO SWAP3 POP PUSH2 0x75B PUSH2 0x176C JUMP JUMPDEST SWAP2 POP PUSH2 0x765 PUSH2 0x1790 JUMP JUMPDEST SWAP1 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x779 DUP6 CALLER PUSH2 0x15AD JUMP JUMPDEST SWAP1 POP PUSH2 0x79D CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND EQ DUP1 PUSH2 0x795 JUMPI POP DUP4 DUP3 LT ISZERO JUMPDEST PUSH2 0x19E PUSH2 0x17B4 JUMP JUMPDEST PUSH2 0x7A8 DUP6 DUP6 DUP6 PUSH2 0x17C2 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x7C3 JUMPI POP PUSH1 0x0 NOT DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x7D5 JUMPI PUSH2 0x7D5 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x1643 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F3 PUSH2 0x18AA JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x800 PUSH2 0x16A5 JUMP JUMPDEST PUSH2 0x808 PUSH2 0x1968 JUMP JUMPDEST PUSH2 0x73A DUP2 PUSH2 0x197D JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x66E SWAP2 DUP6 SWAP1 PUSH2 0x86B SWAP1 DUP7 PUSH2 0x19E6 JUMP JUMPDEST PUSH2 0x1643 JUMP JUMPDEST PUSH2 0x878 PUSH2 0x3BBC JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0xA SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP3 MSTORE PUSH2 0x100 DUP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x8CA DUP6 PUSH2 0x19F8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8D8 DUP7 ISZERO PUSH2 0x19F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x8E4 DUP9 DUP4 PUSH2 0x1A4C JUMP JUMPDEST SWAP8 POP PUSH2 0x8F0 DUP8 DUP3 PUSH2 0x1A4C JUMP JUMPDEST SWAP7 POP PUSH2 0x8FD DUP9 DUP9 DUP9 PUSH2 0x1A58 JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP POP POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x3737BA103830BAB9B29036B0B730B3B2B9 PUSH1 0x79 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x992 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x97A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x9BF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x9D8 PUSH1 0x0 PUSH2 0x731 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x215385C8BFC731925EC8068D7BAA50F6B6F34417CC7804F7273DC2C0B3DB2790 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x8 SLOAD SWAP1 POP PUSH2 0xA2B DUP2 PUSH2 0x1B27 JUMP JUMPDEST SWAP7 POP PUSH2 0xA36 DUP2 PUSH2 0x1B33 JUMP JUMPDEST SWAP6 POP PUSH2 0xA41 DUP2 PUSH2 0x1B40 JUMP JUMPDEST SWAP5 POP PUSH2 0xA4C DUP2 PUSH2 0x1B4D JUMP JUMPDEST SWAP4 POP PUSH2 0xA57 DUP2 PUSH2 0x1B5A JUMP JUMPDEST SWAP3 POP PUSH2 0xA62 DUP2 PUSH2 0x1B67 JUMP JUMPDEST SWAP2 POP POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F3 PUSH1 0x8 SLOAD PUSH2 0x1B67 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0xA8A DUP7 MLOAD PUSH1 0x2 PUSH2 0x1B74 JUMP JUMPDEST PUSH2 0xA9F DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x1B81 PUSH2 0x1C48 PUSH2 0x1CC6 JUMP JUMPDEST SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAB6 PUSH2 0x131D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xAC2 PUSH2 0x73D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0xAD3 PUSH1 0x9 SLOAD DUP6 PUSH2 0x1DD9 JUMP JUMPDEST POP SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x0 SWAP1 POP PUSH2 0xAF1 DUP3 PUSH2 0xAEB DUP7 DUP7 PUSH2 0x1E42 JUMP JUMPDEST SWAP1 PUSH2 0x1E42 JUMP JUMPDEST SWAP1 POP PUSH2 0xAFD DUP6 DUP3 PUSH2 0x1E5A JUMP JUMPDEST SWAP6 POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F3 PUSH2 0xB14 PUSH2 0x73D JUMP JUMPDEST PUSH2 0xB26 PUSH2 0xB1F PUSH2 0x131D JUMP JUMPDEST PUSH1 0x2 PUSH2 0x1EB4 JUMP JUMPDEST SWAP1 PUSH2 0x1E5A JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xB43 PUSH2 0x3BDC JUMP JUMPDEST PUSH2 0x7F3 PUSH2 0x1ED8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP9 PUSH2 0xB94 PUSH2 0xB79 PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH1 0xCD PUSH2 0x17B4 JUMP JUMPDEST PUSH2 0xBA9 PUSH2 0xB9F PUSH2 0x811 JUMP JUMPDEST DUP3 EQ PUSH2 0x1F4 PUSH2 0x17B4 JUMP JUMPDEST PUSH2 0xBB2 DUP8 PUSH2 0x1EFE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xBC6 DUP14 DUP14 DUP14 DUP14 DUP14 DUP14 DUP14 PUSH2 0x1B81 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xBD6 DUP13 DUP5 PUSH2 0x1F60 JUMP JUMPDEST PUSH2 0xBDF DUP3 PUSH2 0x1C48 JUMP JUMPDEST PUSH2 0xBE8 DUP2 PUSH2 0x1C48 JUMP JUMPDEST SWAP1 SWAP13 SWAP1 SWAP12 POP SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x1B9BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC4B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C9 SWAP2 SWAP1 PUSH2 0x4259 JUMP JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH16 0x1C1BDBDB081A5CC81D5B98D85C1C1959 PUSH1 0x82 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0xC97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C9 SWAP2 SWAP1 PUSH2 0x4259 JUMP JUMPDEST POP DUP1 MLOAD PUSH1 0xA DUP1 SLOAD PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP1 DUP7 ADD MLOAD PUSH1 0xFF NOT SWAP1 SWAP4 AND SWAP5 ISZERO ISZERO SWAP5 SWAP1 SWAP5 OR PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL OR PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x80 SHL SWAP2 SWAP1 SWAP3 AND MUL OR DUP2 SSTORE SWAP1 MLOAD PUSH32 0x2ABF5970D7BC1A2B36EAAE52DD2CC353EDB0337C7284EF8A01973081B4E04424 SWAP2 PUSH2 0x71E SWAP2 PUSH2 0x42E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x3737BA103830BAB9B29036B0B730B3B2B9 PUSH1 0x79 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLER DUP3 EQ PUSH2 0xDC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x992 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x97A JUMP JUMPDEST POP PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 DUP5 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD PUSH32 0x1FFCCD1FA96F4FB3415DF8048A0FD107344E262D2D246C85105E2A3F8F3E8198 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x3737BA103830BAB9B29036B0B730B3B2B9 PUSH1 0x79 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x992 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x97A JUMP JUMPDEST POP PUSH2 0xEAF PUSH1 0x1 PUSH2 0x731 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x681EACE576127D0553B224436A09801FB47D042942CBFF59D7D4FF04D8FA03D7 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x0 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP5 AND DUP3 DUP5 ADD MSTORE DUP3 MLOAD PUSH1 0x24 DUP2 DUP5 SUB ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xF3E PUSH2 0x73D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0xF56 PUSH1 0x9 SLOAD PUSH2 0xF51 PUSH2 0x131D JUMP JUMPDEST PUSH2 0x1DD9 JUMP JUMPDEST POP SWAP2 SWAP4 POP SWAP2 POP PUSH2 0xF6C SWAP1 POP DUP2 PUSH2 0xAEB DUP6 DUP6 PUSH2 0x1E42 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0xF84 DUP7 MLOAD PUSH1 0x2 PUSH2 0x1B74 JUMP JUMPDEST PUSH2 0xA9F DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x1F6A PUSH2 0x2029 PUSH2 0x1CC6 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xFED PUSH2 0x208B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE SWAP3 SWAP4 POP SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP2 POP PUSH2 0x1044 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1020 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1035 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH2 0x1A58 JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1054 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP5 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1068 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD SWAP2 SWAP1 SWAP2 MSTORE MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x657 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x62C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x657 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x10E7 PUSH2 0x208B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1113 DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x10FE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1035 JUMPI INVALID JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1124 DUP5 DUP4 DUP4 PUSH2 0x2141 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x113D PUSH2 0x1968 JUMP JUMPDEST DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0x114D PUSH2 0xB79 PUSH2 0xFBD JUMP JUMPDEST PUSH2 0x1158 PUSH2 0xB9F PUSH2 0x811 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP PUSH1 0x0 PUSH2 0x11A0 DUP3 PUSH2 0x19F8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x11AE DUP4 ISZERO PUSH2 0x19F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x11BA DUP8 DUP4 PUSH2 0x1A4C JUMP JUMPDEST SWAP7 POP PUSH2 0x11C6 DUP7 DUP3 PUSH2 0x1A4C JUMP JUMPDEST SWAP6 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x11D8 DUP11 DUP11 DUP9 PUSH2 0x1A58 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH1 0x0 DUP12 MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x11EE JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x125D JUMPI PUSH1 0x0 PUSH2 0x120C PUSH2 0x1201 PUSH2 0xA6D JUMP JUMPDEST PUSH1 0x60 DUP15 ADD MLOAD SWAP1 PUSH2 0x217F JUMP JUMPDEST SWAP1 POP PUSH2 0x122E PUSH2 0x1228 DUP3 DUP15 PUSH1 0x60 ADD MLOAD PUSH2 0x21D4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH2 0x1A4C JUMP JUMPDEST PUSH1 0x60 DUP14 ADD MSTORE PUSH1 0x0 PUSH2 0x1242 DUP14 DUP14 DUP14 DUP8 DUP8 PUSH2 0x21EA JUMP JUMPDEST SWAP1 POP PUSH2 0x124E DUP2 DUP8 PUSH2 0x2209 JUMP JUMPDEST SWAP10 POP POP POP POP POP POP POP POP POP PUSH2 0x12B1 JUMP JUMPDEST PUSH2 0x126B DUP12 PUSH1 0x60 ADD MLOAD DUP6 PUSH2 0x1A4C JUMP JUMPDEST PUSH1 0x60 DUP13 ADD MSTORE PUSH1 0x0 PUSH2 0x127F DUP13 DUP13 DUP13 DUP7 DUP7 PUSH2 0x2215 JUMP JUMPDEST SWAP1 POP PUSH2 0x128B DUP2 DUP8 PUSH2 0x2228 JUMP JUMPDEST SWAP1 POP PUSH2 0x12A7 PUSH2 0x12A0 PUSH2 0x129B PUSH2 0xA6D JUMP JUMPDEST PUSH2 0x2234 JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x225A JUMP JUMPDEST SWAP9 POP POP POP POP POP POP POP POP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x12C6 CALLER DUP6 PUSH2 0x15AD JUMP JUMPDEST SWAP1 POP DUP1 DUP4 LT PUSH2 0x12E0 JUMPI PUSH2 0x12DB CALLER DUP6 PUSH1 0x0 PUSH2 0x1643 JUMP JUMPDEST PUSH2 0x12ED JUMP JUMPDEST PUSH2 0x12ED CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x1643 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x66E CALLER DUP5 DUP5 PUSH2 0x17C2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F3 PUSH2 0x22C0 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1328 PUSH2 0x208B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1334 PUSH2 0x1ED8 JUMP JUMPDEST SWAP1 POP PUSH2 0x1351 DUP3 DUP3 PUSH1 0x0 JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH1 0x1 JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x233A JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1366 DUP5 TIMESTAMP GT ISZERO PUSH1 0xD1 PUSH2 0x17B4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD PUSH32 0x0 DUP2 DUP6 ADD MSTORE DUP1 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP5 DUP12 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD DUP11 SWAP1 MSTORE PUSH1 0xA0 DUP5 ADD DUP6 SWAP1 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP11 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 SWAP1 SWAP5 ADD SWAP1 MSTORE DUP3 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP1 PUSH2 0x13F2 DUP3 PUSH2 0x236D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1450 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP PUSH2 0x1492 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x148A JUMPI POP DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1F8 PUSH2 0x17B4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP6 ADD SWAP1 SSTORE PUSH2 0x14BB DUP12 DUP12 DUP12 PUSH2 0x1643 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP9 PUSH2 0x14D7 PUSH2 0xB79 PUSH2 0xFBD JUMP JUMPDEST PUSH2 0x14E2 PUSH2 0xB9F PUSH2 0x811 JUMP JUMPDEST PUSH2 0x14EA PUSH2 0x1968 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F4 PUSH2 0x73D JUMP JUMPDEST PUSH2 0x1564 JUMPI PUSH2 0x1504 DUP12 DUP12 DUP12 DUP9 PUSH2 0x23B9 JUMP JUMPDEST SWAP5 POP SWAP1 POP PUSH2 0x1519 PUSH3 0xF4240 DUP3 LT ISZERO PUSH1 0xCC PUSH2 0x17B4 JUMP JUMPDEST PUSH2 0x1527 PUSH1 0x0 PUSH3 0xF4240 PUSH2 0x248E JUMP JUMPDEST PUSH2 0x1536 DUP10 PUSH3 0xF4240 DUP4 SUB PUSH2 0x248E JUMP JUMPDEST PUSH2 0x153F DUP5 PUSH2 0x2029 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE SWAP1 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP3 POP PUSH2 0x159F JUMP JUMPDEST PUSH2 0x156D DUP9 PUSH2 0x1EFE JUMP JUMPDEST PUSH2 0x157C DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH2 0x1F6A JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP SWAP1 POP PUSH2 0x158D DUP10 DUP3 PUSH2 0x248E JUMP JUMPDEST PUSH2 0x1596 DUP5 PUSH2 0x2029 JUMP JUMPDEST PUSH2 0x159F DUP4 PUSH2 0x1C48 JUMP JUMPDEST POP POP SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B7 PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x15D9 JUMPI POP PUSH1 0x0 NOT PUSH2 0x672 JUMP JUMPDEST PUSH2 0x15E3 DUP4 DUP4 PUSH2 0x2498 JUMP JUMPDEST SWAP1 POP PUSH2 0x672 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x7F3 PUSH2 0x24C3 JUMP JUMPDEST DUP1 PUSH2 0x15FE DUP2 PUSH2 0x2532 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1610 DUP4 DUP4 PUSH1 0x56 PUSH2 0x162D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1627 DUP4 DUP4 GT ISZERO PUSH1 0x1 PUSH2 0x17B4 JUMP JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 SHL NOT SWAP3 SWAP1 SWAP3 AND SWAP2 SHL OR SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16BC PUSH1 0x0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0xEDA JUMP JUMPDEST SWAP1 POP PUSH2 0x73A PUSH2 0x16CB DUP3 CALLER PUSH2 0x25B0 JUMP JUMPDEST PUSH2 0x191 PUSH2 0x17B4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x16F3 JUMPI PUSH2 0x16EE PUSH2 0x16E4 PUSH2 0x176C JUMP JUMPDEST TIMESTAMP LT PUSH2 0x193 PUSH2 0x17B4 JUMP JUMPDEST PUSH2 0x1708 JUMP JUMPDEST PUSH2 0x1708 PUSH2 0x16FE PUSH2 0x1790 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x1A9 PUSH2 0x17B4 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH32 0x9E3A5E37224532DEA67B89FACE185703738A228A6E8A23DEE546960180D3BE64 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1759 PUSH2 0x1790 JUMP JUMPDEST TIMESTAMP GT DUP1 PUSH2 0x7F3 JUMPI POP POP PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST DUP2 PUSH2 0x15FE JUMPI PUSH2 0x15FE DUP2 PUSH2 0x26B2 JUMP JUMPDEST PUSH2 0x17D9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO ISZERO PUSH2 0x198 PUSH2 0x17B4 JUMP JUMPDEST PUSH2 0x17F0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x199 PUSH2 0x17B4 JUMP JUMPDEST PUSH2 0x17FB DUP4 DUP4 DUP4 PUSH2 0x25AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1821 SWAP1 DUP3 PUSH2 0x1A0 PUSH2 0x2705 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1850 SWAP1 DUP3 PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x1917 PUSH2 0x271B JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x197B PUSH2 0x1973 PUSH2 0x174F JUMP JUMPDEST PUSH2 0x192 PUSH2 0x17B4 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1990 PUSH5 0xE8D4A51000 DUP3 LT ISZERO PUSH1 0xCB PUSH2 0x17B4 JUMP JUMPDEST PUSH2 0x19A6 PUSH8 0x16345785D8A0000 DUP3 GT ISZERO PUSH1 0xCA PUSH2 0x17B4 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x19B3 SWAP1 DUP3 PUSH2 0x1602 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x40 MLOAD PUSH32 0xA9BA3FFE0B6C366B81232CAAB38605A0699AD5398D6CCE76F91EE809E322DAFC SWAP1 PUSH2 0x71E SWAP1 DUP4 SWAP1 PUSH2 0x420F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH2 0x1610 DUP5 DUP3 LT ISZERO DUP4 PUSH2 0x17B4 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1A25 JUMPI PUSH32 0x0 PUSH2 0x672 JUMP JUMPDEST PUSH32 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1610 DUP4 DUP4 PUSH2 0x271F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP5 PUSH2 0x1A8A JUMPI DUP6 PUSH2 0x1A8C JUMP JUMPDEST DUP7 JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1A99 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP5 PUSH2 0x1AB0 JUMPI DUP7 PUSH2 0x1AB2 JUMP JUMPDEST DUP6 JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1ABF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 PUSH2 0x1AD5 PUSH2 0x1ED8 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AE3 DUP3 DUP3 PUSH1 0x0 PUSH2 0x133E JUMP JUMPDEST SWAP5 POP PUSH1 0x0 PUSH2 0x1AF1 DUP3 DUP8 PUSH2 0x2758 JUMP JUMPDEST SWAP1 POP DUP7 PUSH2 0x1B02 JUMPI PUSH1 0x20 DUP2 ADD MLOAD PUSH2 0x1B05 JUMP JUMPDEST DUP1 MLOAD JUMPDEST SWAP5 POP DUP7 PUSH2 0x1B13 JUMPI DUP1 MLOAD PUSH2 0x1B19 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD JUMPDEST SWAP4 POP POP POP POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x672 DUP3 DUP3 PUSH2 0x278C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x672 DUP3 PUSH1 0x16 PUSH2 0x278C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x672 DUP3 PUSH1 0x2C PUSH2 0x27B3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x672 DUP3 PUSH1 0x4B PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x672 DUP3 PUSH1 0x55 PUSH2 0x27C5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x672 DUP3 PUSH1 0x56 PUSH2 0x27CF JUMP JUMPDEST PUSH2 0x15FE DUP2 DUP4 EQ PUSH1 0x67 PUSH2 0x17B4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 PUSH2 0x1B90 PUSH2 0x1ED8 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B9A PUSH2 0x174F JUMP JUMPDEST ISZERO PUSH2 0x1BFC JUMPI PUSH1 0x0 PUSH2 0x1BB5 DUP10 DUP4 DUP4 JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH1 0x1 PUSH2 0x1347 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1BC3 DUP4 DUP4 PUSH2 0x2758 JUMP JUMPDEST SWAP1 POP PUSH2 0x1BCE DUP3 PUSH2 0x27DD JUMP JUMPDEST PUSH2 0x1BD8 DUP11 DUP9 PUSH2 0x280A JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH2 0x1BF1 DUP3 DUP8 PUSH2 0x1BEA PUSH2 0x73D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0x9 SSTORE POP PUSH2 0x1C12 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C06 DUP9 DUP7 PUSH2 0x280A JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0x9 SSTORE SWAP1 SWAP5 POP SWAP3 POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE DUP7 SWAP3 DUP7 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP8 POP SWAP8 POP SWAP8 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1C6F DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1C58 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1C6A PUSH1 0x1 PUSH2 0x19F8 JUMP JUMPDEST PUSH2 0x1E5A JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1C7C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x1CAA DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1C98 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1C6A PUSH1 0x0 PUSH2 0x19F8 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1CB7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x1D84 JUMPI PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD PUSH2 0x1CEA SWAP3 SWAP2 SWAP1 PUSH2 0x415F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D27 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D2C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D3B JUMPI INVALID JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x43ADBAFB PUSH1 0xE0 SHL DUP2 EQ PUSH2 0x1D66 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x4 PUSH1 0x0 RETURNDATACOPY PUSH1 0x40 PUSH1 0x20 MSTORE PUSH1 0x24 RETURNDATASIZE SUB PUSH1 0x24 PUSH1 0x40 RETURNDATACOPY PUSH1 0x1C RETURNDATASIZE ADD PUSH1 0x0 RETURN JUMPDEST PUSH2 0x1D8D DUP7 PUSH2 0x1EFE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1DA3 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1DB5 DUP2 DUP5 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1F NOT DUP3 ADD DUP4 SWAP1 MSTORE PUSH4 0x43ADBAFB PUSH1 0x3F NOT DUP4 ADD MSTORE PUSH1 0x20 MUL PUSH1 0x23 NOT DUP3 ADD PUSH1 0x44 DUP3 ADD DUP2 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1DED PUSH2 0x28AE JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP DUP4 PUSH1 0x0 EQ ISZERO PUSH2 0x1E12 JUMPI PUSH1 0x0 SWAP8 POP DUP8 SWAP7 POP SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x1E39 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1E29 DUP13 DUP13 PUSH2 0x1E22 PUSH2 0x73D JUMP JUMPDEST DUP10 DUP10 PUSH2 0x2A20 JUMP JUMPDEST SWAP1 SWAP11 POP SWAP9 POP SWAP3 SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP JUMPDEST SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1610 JUMPI PUSH2 0x1610 PUSH1 0x0 DUP1 PUSH2 0x17B4 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1E6D JUMPI PUSH2 0x1E6D PUSH1 0x0 PUSH1 0x4 PUSH2 0x17B4 JUMP JUMPDEST DUP3 PUSH2 0x1E7A JUMPI POP PUSH1 0x0 PUSH2 0x672 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 DUP2 MUL SWAP1 DUP5 DUP3 DUP2 PUSH2 0x1E90 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1EA2 JUMPI PUSH2 0x1EA2 PUSH1 0x0 PUSH1 0x5 PUSH2 0x17B4 JUMP JUMPDEST DUP3 DUP2 DUP2 PUSH2 0x1EAB JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL PUSH2 0x1610 DUP5 ISZERO DUP1 PUSH2 0x1ED1 JUMPI POP DUP4 DUP6 DUP4 DUP2 PUSH2 0x1ECE JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH1 0x3 PUSH2 0x17B4 JUMP JUMPDEST PUSH2 0x1EE0 PUSH2 0x3BDC JUMP JUMPDEST PUSH2 0x1EEA PUSH1 0x1 PUSH2 0x2ABB JUMP JUMPDEST DUP2 MSTORE PUSH2 0x1EF6 PUSH1 0x0 PUSH2 0x2ABB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x1F25 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1F0E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1F20 PUSH1 0x1 PUSH2 0x19F8 JUMP JUMPDEST PUSH2 0x271F JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1F32 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x1CAA DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1F4E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1F20 PUSH1 0x0 PUSH2 0x19F8 JUMP JUMPDEST PUSH2 0x15FE DUP3 DUP3 PUSH2 0x2B0F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 PUSH2 0x1F79 PUSH2 0x1ED8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1F88 DUP10 DUP4 DUP4 PUSH2 0x1BA8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1F96 DUP4 DUP4 PUSH2 0x2758 JUMP JUMPDEST SWAP1 POP PUSH2 0x1FA1 DUP3 PUSH2 0x27DD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1FAE DUP13 DUP11 PUSH2 0x2BC6 JUMP JUMPDEST PUSH1 0xA SLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x1FD8 JUMPI PUSH2 0x1FD8 DUP3 PUSH2 0x1FCB DUP16 PUSH2 0xB4B JUMP JUMPDEST PUSH2 0x1FD3 PUSH2 0x73D JUMP JUMPDEST PUSH2 0x2C00 JUMP JUMPDEST PUSH2 0x1FEC DUP5 DUP4 PUSH2 0x1FE5 PUSH2 0x73D JUMP JUMPDEST PUSH1 0x1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE DUP5 SWAP3 DUP5 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP8 POP SWAP8 POP SWAP8 POP POP POP POP POP POP SWAP8 POP SWAP8 POP SWAP8 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2050 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2039 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x204B PUSH1 0x1 PUSH2 0x19F8 JUMP JUMPDEST PUSH2 0x225A JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x205D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x1CAA DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2079 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x204B PUSH1 0x0 PUSH2 0x19F8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH2 0x20DE PUSH32 0x0 PUSH2 0x20D9 PUSH1 0x1 PUSH2 0x19F8 JUMP JUMPDEST PUSH2 0x2D12 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x20EB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2125 PUSH32 0x0 PUSH2 0x20D9 PUSH1 0x0 PUSH2 0x19F8 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2132 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2177 DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2153 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2169 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH2 0x2DB9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL DUP4 ISZERO DUP1 PUSH2 0x2199 JUMPI POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x2196 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0x21A9 JUMPI PUSH2 0x21A9 PUSH1 0x0 PUSH1 0x3 PUSH2 0x17B4 JUMP JUMPDEST DUP1 PUSH2 0x21B8 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x672 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH1 0x0 NOT DUP3 ADD JUMPDEST DIV PUSH1 0x1 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1627 JUMPI PUSH2 0x1627 PUSH1 0x0 PUSH1 0x1 PUSH2 0x17B4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21FD DUP6 DUP6 DUP9 PUSH1 0x60 ADD MLOAD DUP7 DUP7 PUSH2 0x2DD2 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1610 DUP4 DUP4 PUSH2 0x1E5A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21FD DUP6 DUP6 DUP9 PUSH1 0x60 ADD MLOAD DUP7 DUP7 PUSH2 0x2E3C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1610 DUP4 DUP4 PUSH2 0x225A JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 LT PUSH2 0x224C JUMPI PUSH1 0x0 PUSH2 0x672 JUMP JUMPDEST POP PUSH8 0xDE0B6B3A7640000 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x226D JUMPI PUSH2 0x226D PUSH1 0x0 PUSH1 0x4 PUSH2 0x17B4 JUMP JUMPDEST DUP3 PUSH2 0x227A JUMPI POP PUSH1 0x0 PUSH2 0x672 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 DUP2 MUL SWAP1 DUP5 DUP3 DUP2 PUSH2 0x2290 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x22B4 JUMPI PUSH2 0x22B4 PUSH8 0xDE0B6B3A7640000 DUP6 DUP4 DUP2 PUSH2 0x22AB JUMPI INVALID JUMPDEST DIV EQ PUSH1 0x5 PUSH2 0x17B4 JUMP JUMPDEST DUP3 PUSH1 0x1 DUP3 SUB DUP2 PUSH2 0x21C7 JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH2 0x22CA PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAAABADC5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2316 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7F3 SWAP2 SWAP1 PUSH2 0x3CA5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x234D DUP9 DUP9 DUP9 PUSH2 0x2E9C JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH2 0x2361 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2FF4 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2377 PUSH2 0x18AA JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x23C8 DUP5 PUSH2 0x3068 JUMP JUMPDEST SWAP1 POP PUSH2 0x23E3 PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x23DB JUMPI INVALID JUMPDEST EQ PUSH1 0xCE PUSH2 0x17B4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23EE DUP6 PUSH2 0x3087 JUMP JUMPDEST SWAP1 POP PUSH2 0x23FC DUP2 MLOAD PUSH1 0x2 PUSH2 0x1B74 JUMP JUMPDEST PUSH2 0x2405 DUP2 PUSH2 0x1EFE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x241A DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x10FE JUMPI INVALID JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 PUSH2 0x242D DUP6 DUP5 DUP5 PUSH2 0x2141 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2475 PUSH2 0x245B DUP4 DUP9 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2445 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x271F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2468 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x9 SWAP6 SWAP1 SWAP6 SSTORE POP SWAP3 SWAP12 SWAP4 SWAP11 POP SWAP3 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x15FE DUP3 DUP3 PUSH2 0x313B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH2 0x24F2 PUSH1 0x1 PUSH2 0x31D0 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x24FF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2515 PUSH1 0x0 PUSH2 0x31D0 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2522 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD LT ISZERO PUSH2 0x2541 JUMPI PUSH2 0x73A JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2550 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x25AB JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2578 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x25A1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH1 0x65 PUSH2 0x17B4 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x2561 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xBA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1B PUSH2 0x25CF PUSH2 0xF99 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x25EA JUMPI POP PUSH2 0x25EA DUP4 PUSH2 0x3224 JUMP JUMPDEST ISZERO PUSH2 0x2612 JUMPI PUSH2 0x25F7 PUSH2 0xF99 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP PUSH2 0x672 JUMP JUMPDEST PUSH2 0x261A PUSH2 0x22C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9BE2A884 DUP5 DUP5 ADDRESS PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x267F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2693 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x26A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x672 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH7 0x42414C23000030 PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD SWAP1 SWAP5 ADD PUSH1 0x10 SHL SWAP4 SWAP1 SWAP4 ADD ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2714 DUP5 DUP5 GT ISZERO DUP4 PUSH2 0x17B4 JUMP JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL DUP4 ISZERO DUP1 PUSH2 0x2739 JUMPI POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x2736 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0x2749 JUMPI PUSH2 0x2749 PUSH1 0x0 PUSH1 0x3 PUSH2 0x17B4 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x1EAB JUMP JUMPDEST PUSH2 0x2760 PUSH2 0x3BDC JUMP JUMPDEST PUSH2 0x2773 PUSH1 0x1 DUP5 DUP2 JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH2 0x3256 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x2781 PUSH1 0x0 DUP5 DUP2 PUSH2 0x2768 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR PUSH3 0x3FFFFF AND PUSH3 0x1FFFFF DUP2 SGT PUSH2 0x27A6 JUMPI DUP1 PUSH2 0x2177 JUMP JUMPDEST PUSH3 0x3FFFFF NOT OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST SHR PUSH4 0x7FFFFFFF AND SWAP1 JUMP JUMPDEST SHR PUSH2 0x3FF AND SWAP1 JUMP JUMPDEST SHR PUSH1 0x1 SWAP1 DUP2 AND EQ SWAP1 JUMP JUMPDEST SHR PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x27EF PUSH1 0x9 SLOAD DUP7 PUSH2 0x1DD9 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH2 0x2803 DUP5 DUP5 DUP5 DUP5 PUSH2 0x3276 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x2819 DUP5 PUSH2 0x3068 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2829 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x2843 JUMPI PUSH2 0x2839 DUP6 DUP6 PUSH2 0x329C JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH2 0x284E JUMP JUMPDEST PUSH2 0x284E PUSH2 0x150 PUSH2 0x26B2 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO PUSH2 0x2888 JUMPI PUSH1 0x0 PUSH2 0x2874 DUP5 PUSH2 0x286E DUP9 DUP9 PUSH2 0x217F JUMP JUMPDEST SWAP1 PUSH2 0x225A JUMP JUMPDEST SWAP1 POP PUSH2 0x2880 DUP7 DUP3 PUSH2 0x1E42 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2177 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2898 DUP5 PUSH2 0xB26 DUP9 DUP9 PUSH2 0x271F JUMP JUMPDEST SWAP1 POP PUSH2 0x28A4 DUP7 DUP3 PUSH2 0x21D4 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH2 0x28D5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS PUSH4 0x32434C5 PUSH1 0xE4 SHL PUSH2 0x32CE JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x28F3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS PUSH4 0x32434C5 PUSH1 0xE4 SHL PUSH2 0x32F5 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x21F8A721 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x21F8A721 SWAP1 PUSH2 0x2933 SWAP1 PUSH13 0x4759524F5F5452454153555259 PUSH1 0x98 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0x420F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x294B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x295F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2983 SWAP2 SWAP1 PUSH2 0x3CA5 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x21F8A721 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x21F8A721 SWAP1 PUSH2 0x29C2 SWAP1 PUSH12 0x42414C5F5452454153555259 PUSH1 0xA0 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0x420F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x29DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A12 SWAP2 SWAP1 PUSH2 0x3CA5 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 DUP7 GT PUSH2 0x2A35 JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x2AB1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A55 DUP6 PUSH2 0x2A4F PUSH2 0x2A48 DUP11 DUP13 PUSH2 0x21D4 JUMP JUMPDEST DUP10 SWAP1 PUSH2 0x271F JUMP JUMPDEST SWAP1 PUSH2 0x271F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2A6D PUSH2 0x2A66 DUP10 DUP12 PUSH2 0x21D4 JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x271F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2A7B DUP10 DUP4 PUSH2 0x21D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2A89 DUP5 DUP4 PUSH2 0x1E5A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2A97 DUP9 DUP4 PUSH2 0x271F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2AA5 DUP4 DUP4 PUSH2 0x21D4 JUMP JUMPDEST SWAP2 SWAP8 POP SWAP1 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2AE8 JUMPI PUSH32 0x0 PUSH2 0x672 JUMP JUMPDEST POP PUSH32 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B26 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x19B PUSH2 0x17B4 JUMP JUMPDEST PUSH2 0x2B32 DUP3 PUSH1 0x0 DUP4 PUSH2 0x25AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2B58 SWAP1 DUP3 PUSH2 0x1A1 PUSH2 0x2705 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x2B7E SWAP1 DUP3 PUSH2 0x3323 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x2BD5 DUP5 PUSH2 0x3068 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2BE5 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x2BF5 JUMPI PUSH2 0x2839 DUP6 DUP6 PUSH2 0x3331 JUMP JUMPDEST PUSH2 0x284E PUSH2 0x136 PUSH2 0x26B2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0xA SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP3 MSTORE PUSH2 0x100 DUP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB AND PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x2C4D DUP6 DUP6 PUSH2 0x1E42 JUMP JUMPDEST GT ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6F7665722061646472657373206C697175696469747920636170000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x2CA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C9 SWAP2 SWAP1 PUSH2 0x4259 JUMP JUMPDEST POP PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x2CBC DUP6 DUP5 PUSH2 0x1E42 JUMP JUMPDEST GT ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6F76657220676C6F62616C206C69717569646974792063617000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x2803 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C9 SWAP2 SWAP1 PUSH2 0x4259 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2D1F PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB05F8E48 PUSH2 0x2D35 PUSH2 0x811 JUMP JUMPDEST DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D53 SWAP3 SWAP2 SWAP1 PUSH2 0x4218 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D7F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DA3 SWAP2 SWAP1 PUSH2 0x40E5 JUMP JUMPDEST POP POP DUP2 DUP2 ADD SWAP5 POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x2200 DUP4 DUP6 PUSH2 0x271F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2200 PUSH2 0x2DC8 DUP7 DUP7 PUSH2 0x1E42 JUMP JUMPDEST PUSH2 0x286E DUP6 DUP6 PUSH2 0x1E42 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2DF1 PUSH2 0x2DEA DUP6 PUSH8 0xDE0B6B3A7640002 PUSH2 0x217F JUMP JUMPDEST DUP9 SWAP1 PUSH2 0x1E42 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2E0A PUSH2 0x2DEA DUP6 PUSH8 0xDE0B6B3A763FFFF PUSH2 0x271F JUMP JUMPDEST SWAP1 POP PUSH2 0x2E23 PUSH2 0x2E19 DUP4 DUP9 PUSH2 0x1E42 JUMP JUMPDEST PUSH2 0xB26 DUP4 DUP10 PUSH2 0x271F JUMP JUMPDEST SWAP3 POP POP POP DUP5 DUP2 GT ISZERO PUSH2 0x2200 JUMPI PUSH2 0x2200 PUSH1 0x0 PUSH2 0x165 PUSH2 0x3356 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 GT ISZERO PUSH2 0x2E53 JUMPI PUSH2 0x2E53 PUSH1 0x0 PUSH2 0x165 PUSH2 0x3356 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E6A PUSH2 0x2DEA DUP6 PUSH8 0xDE0B6B3A7640002 PUSH2 0x217F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2E83 PUSH2 0x2DEA DUP6 PUSH8 0xDE0B6B3A763FFFF PUSH2 0x271F JUMP JUMPDEST SWAP1 POP PUSH2 0x2361 PUSH2 0x2E92 DUP3 DUP9 PUSH2 0x21D4 JUMP JUMPDEST PUSH2 0x286E DUP5 DUP10 PUSH2 0x217F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x2EBD PUSH2 0x2EAE DUP8 DUP8 PUSH2 0x1E5A JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x21D4 JUMP JUMPDEST SWAP4 POP PUSH1 0x0 PUSH2 0x2EE8 DUP7 DUP10 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2ED2 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1E5A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2EFD DUP9 DUP11 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2445 JUMPI INVALID JUMPDEST SWAP1 POP PUSH2 0x2F09 DUP3 DUP3 PUSH2 0x1E42 JUMP JUMPDEST SWAP5 POP PUSH2 0x2F30 DUP10 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2F1B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP11 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2445 JUMPI INVALID JUMPDEST SWAP3 POP POP POP PUSH2 0x2F61 DUP7 PUSH2 0x2A4F DUP9 PUSH2 0x2A4F DUP12 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2F4C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP13 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2445 JUMPI INVALID JUMPDEST SWAP2 POP PUSH1 0x0 PUSH2 0x2FA1 DUP7 PUSH2 0xB26 DUP10 PUSH2 0x2A4F PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 MUL PUSH2 0x2A4F DUP15 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2F8C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP16 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2445 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2FD7 PUSH2 0x2FB2 DUP9 DUP1 PUSH2 0x217F JUMP JUMPDEST PUSH2 0xB26 DUP12 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2FC2 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP13 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2445 JUMPI INVALID JUMPDEST SWAP1 POP PUSH2 0x2FE7 DUP2 PUSH2 0xAEB DUP7 DUP6 PUSH2 0x1E42 JUMP JUMPDEST SWAP4 POP POP POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3009 DUP7 PUSH8 0x1BC16D674EC80000 PUSH2 0x217F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3023 DUP8 PUSH2 0x2A4F DUP7 PUSH8 0x3782DACE9D900000 PUSH2 0x271F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3031 DUP7 DUP4 PUSH2 0x1E42 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3040 DUP3 PUSH1 0x5 PUSH2 0x3364 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x304E DUP10 DUP4 PUSH2 0x1E42 JUMP JUMPDEST SWAP1 POP PUSH2 0x305A DUP2 DUP7 PUSH2 0x1E5A JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x307F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x309E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP3 SWAP5 SWAP3 SWAP4 DUP4 ADD SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x30C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x30DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x30F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3124 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x310C JUMP JUMPDEST POP POP POP POP SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 MSTORE POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3147 PUSH1 0x0 DUP4 DUP4 PUSH2 0x25AB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x3154 SWAP1 DUP3 PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x317A SWAP1 DUP3 PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x31FD JUMPI PUSH32 0x0 PUSH2 0x672 JUMP JUMPDEST POP PUSH32 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3236 PUSH4 0x1C74C917 PUSH1 0xE1 SHL PUSH2 0xEDA JUMP JUMPDEST DUP3 EQ DUP1 PUSH2 0x672 JUMPI POP PUSH2 0x324E PUSH4 0x50DD6ED9 PUSH1 0xE0 SHL PUSH2 0xEDA JUMP JUMPDEST SWAP1 SWAP2 EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x326C JUMPI PUSH2 0x3267 DUP3 DUP5 PUSH2 0x1A4C JUMP JUMPDEST PUSH2 0x2177 JUMP JUMPDEST PUSH2 0x2177 DUP3 DUP5 PUSH2 0x2209 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x3286 JUMPI PUSH2 0x3286 DUP3 DUP6 PUSH2 0x248E JUMP JUMPDEST DUP3 ISZERO PUSH2 0x3296 JUMPI PUSH2 0x3296 DUP2 DUP5 PUSH2 0x248E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x32AB DUP5 PUSH2 0x34F2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x32C1 DUP7 DUP4 PUSH2 0x32BC PUSH2 0x73D JUMP JUMPDEST PUSH2 0x3514 JUMP JUMPDEST SWAP2 SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2177 DUP5 PUSH22 0x50524F544F434F4C5F535741505F4645455F50455243 PUSH1 0x50 SHL DUP5 DUP7 PUSH2 0x359A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2177 DUP5 PUSH32 0x50524F544F434F4C5F4645455F4759524F5F504F5254494F4E00000000000000 DUP5 DUP7 PUSH2 0x359A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1610 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2705 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x3340 DUP5 PUSH2 0x34F2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x32C1 DUP7 DUP4 PUSH2 0x3351 PUSH2 0x73D JUMP JUMPDEST PUSH2 0x3847 JUMP JUMPDEST DUP2 PUSH2 0x15FE JUMPI PUSH2 0x15FE DUP2 PUSH2 0x38E3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3373 JUMPI POP PUSH1 0x0 PUSH2 0x672 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x337E DUP5 PUSH2 0x38F3 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x3395 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x339F JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x33B7 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x33C1 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x33D9 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x33E3 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x33FB JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x3405 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x341D JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x3427 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x343F JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x3449 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x3461 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x346B JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH2 0x347A DUP3 DUP1 PUSH2 0x271F JUMP JUMPDEST SWAP1 POP PUSH2 0x3490 PUSH2 0x3489 DUP4 DUP7 PUSH2 0x217F JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x1E42 JUMP JUMPDEST DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x34B2 JUMPI POP PUSH2 0x34AE PUSH2 0x34A7 DUP4 DUP7 PUSH2 0x217F JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x21D4 JUMP JUMPDEST DUP2 LT ISZERO JUMPDEST PUSH2 0x12B1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x17DCDC5C9D08119052531151 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 ADD MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x352E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3558 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x12B1 JUMPI PUSH2 0x357B DUP4 PUSH2 0xB26 DUP7 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x2445 JUMPI INVALID JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3587 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x355E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND DUP4 DUP6 ADD MSTORE DUP4 MLOAD DUP1 DUP5 SUB DUP6 ADD DUP2 MSTORE PUSH1 0x60 DUP5 ADD DUP1 DUP7 MSTORE DUP2 MLOAD SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH4 0x696EB375 PUSH1 0xE0 SHL SWAP1 SWAP2 MSTORE PUSH1 0x64 DUP5 ADD DUP2 SWAP1 MSTORE SWAP4 MLOAD PUSH1 0x0 SWAP5 SWAP4 SWAP2 DUP10 AND SWAP3 PUSH4 0x696EB375 SWAP3 PUSH1 0x84 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x360B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x361F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3635 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO PUSH2 0x36B5 JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBD02D0F5 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3680 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3694 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x36AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 POP PUSH2 0x2177 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP9 SWAP1 MSTORE DUP2 DUP4 ADD DUP8 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 DUP4 ADD DUP1 DUP6 MSTORE DUP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH4 0x696EB375 PUSH1 0xE0 SHL SWAP1 SWAP2 MSTORE PUSH1 0x64 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP3 PUSH4 0x696EB375 SWAP3 PUSH1 0x84 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3721 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3735 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x374B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO PUSH2 0x37CC JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBD02D0F5 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3796 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x37AA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x37C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 POP PUSH2 0x2177 SWAP2 POP POP JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBD02D0F5 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3810 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3824 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x383A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x3861 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x388B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x12B1 JUMPI PUSH2 0x38C4 DUP4 PUSH2 0x286E DUP7 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x38AE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x217F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x38D0 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x3891 JUMP JUMPDEST PUSH2 0x73A DUP2 PUSH3 0x23ACA9 PUSH1 0xE9 SHL PUSH2 0x3AC5 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 LT PUSH2 0x3920 JUMPI PUSH8 0xDE0B6B3A7640000 PUSH2 0x3918 DUP2 DUP5 DIV PUSH2 0x3B26 JUMP JUMPDEST SHL SWAP1 POP PUSH2 0xB65 JUMP JUMPDEST PUSH1 0xA DUP3 GT PUSH2 0x3933 JUMPI POP PUSH4 0xBC7C871C PUSH2 0xB65 JUMP JUMPDEST PUSH1 0x64 DUP3 GT PUSH2 0x3947 JUMPI POP PUSH5 0x2540BE400 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x3E8 DUP3 GT PUSH2 0x395C JUMPI POP PUSH5 0x75CDD4719 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x2710 DUP3 GT PUSH2 0x3971 JUMPI POP PUSH5 0x174876E800 PUSH2 0xB65 JUMP JUMPDEST PUSH3 0x186A0 DUP3 GT PUSH2 0x3987 JUMPI POP PUSH5 0x49A0A4C700 PUSH2 0xB65 JUMP JUMPDEST PUSH3 0xF4240 DUP3 GT PUSH2 0x399D JUMPI POP PUSH5 0xE8D4A51000 PUSH2 0xB65 JUMP JUMPDEST PUSH3 0x989680 DUP3 GT PUSH2 0x39B4 JUMPI POP PUSH6 0x2E0466FC608 PUSH2 0xB65 JUMP JUMPDEST PUSH4 0x5F5E100 DUP3 GT PUSH2 0x39CC JUMPI POP PUSH6 0x9184E72A000 PUSH2 0xB65 JUMP JUMPDEST PUSH4 0x3B9ACA00 DUP3 GT PUSH2 0x39E4 JUMPI POP PUSH6 0x1CC2C05DBC53 PUSH2 0xB65 JUMP JUMPDEST PUSH5 0x2540BE400 DUP3 GT PUSH2 0x39FD JUMPI POP PUSH6 0x5AF3107A4000 PUSH2 0xB65 JUMP JUMPDEST PUSH5 0x174876E800 DUP3 GT PUSH2 0x3A17 JUMPI POP PUSH7 0x11F9B83A95B45 PUSH2 0xB65 JUMP JUMPDEST PUSH5 0xE8D4A51000 DUP3 GT PUSH2 0x3A31 JUMPI POP PUSH7 0x38D7EA4C68000 PUSH2 0xB65 JUMP JUMPDEST PUSH6 0x9184E72A000 DUP3 GT PUSH2 0x3A4C JUMPI POP PUSH7 0xB3C13249D90BB PUSH2 0xB65 JUMP JUMPDEST PUSH6 0x5AF3107A4000 DUP3 GT PUSH2 0x3A67 JUMPI POP PUSH7 0x2386F26FC10000 PUSH2 0xB65 JUMP JUMPDEST PUSH7 0x38D7EA4C68000 DUP3 GT PUSH2 0x3A83 JUMPI POP PUSH7 0x7058BF6E27A751 PUSH2 0xB65 JUMP JUMPDEST PUSH7 0x2386F26FC10000 DUP3 GT PUSH2 0x3AA0 JUMPI POP PUSH8 0x16345785D8A0000 PUSH2 0xB65 JUMP JUMPDEST PUSH8 0x16345785D8A0000 DUP3 GT PUSH2 0x3ABE JUMPI POP PUSH8 0x463777A4D8C892D PUSH2 0xB65 JUMP JUMPDEST POP DUP1 PUSH2 0xB65 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x80 SHL DUP3 LT PUSH2 0x3B3E JUMPI PUSH1 0x80 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x40 ADD JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0x3B59 JUMPI PUSH1 0x40 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0x3B70 JUMPI PUSH1 0x20 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x10 ADD JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0x3B85 JUMPI PUSH1 0x10 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x8 ADD JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x3B99 JUMPI PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x4 ADD JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x3BAC JUMPI PUSH1 0x4 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x2 ADD JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0xB65 JUMPI PUSH1 0x1 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xB65 DUP2 PUSH2 0x436D JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3C25 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C39 JUMPI INVALID JUMPDEST PUSH2 0x3C4C PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x4349 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x3C60 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0xB65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3C9A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1610 DUP2 PUSH2 0x436D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3CB6 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1610 DUP2 PUSH2 0x436D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3CD3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3CDE DUP2 PUSH2 0x436D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3CEE DUP2 PUSH2 0x436D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3D0D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x3D18 DUP2 PUSH2 0x436D JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x3D28 DUP2 PUSH2 0x436D JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3D53 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x3D5E DUP2 PUSH2 0x436D JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x3D6E DUP2 PUSH2 0x436D JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x3D91 JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3DC0 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3DCB DUP2 PUSH2 0x436D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3DEA JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1610 DUP3 PUSH2 0x3C05 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3E0D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP8 CALLDATALOAD SWAP7 POP PUSH1 0x20 DUP1 DUP10 ADD CALLDATALOAD PUSH2 0x3E20 DUP2 PUSH2 0x436D JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x3E30 DUP2 PUSH2 0x436D JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3E4C JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP12 ADD SWAP2 POP DUP12 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3E5F JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x3E6B JUMPI INVALID JUMPDEST PUSH2 0x3E78 DUP5 DUP6 DUP4 MUL ADD PUSH2 0x4349 JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP6 DUP3 ADD SWAP2 POP DUP6 DUP6 ADD DUP16 DUP8 DUP9 DUP7 MUL DUP9 ADD ADD GT ISZERO PUSH2 0x3E96 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x3EB8 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x3E9A JUMP JUMPDEST POP SWAP9 POP POP POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP6 POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 DUP12 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x3EDE JUMPI DUP4 DUP5 REVERT JUMPDEST POP POP PUSH2 0x3EEC DUP11 DUP3 DUP12 ADD PUSH2 0x3C15 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F0C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1610 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F34 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3F51 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE PUSH2 0x3F5D DUP4 PUSH2 0x3C05 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3F78 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3F96 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3FB6 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3FCD JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP PUSH2 0x120 DUP1 DUP4 DUP10 SUB SLT ISZERO PUSH2 0x3FE3 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x3FEC DUP2 PUSH2 0x4349 JUMP JUMPDEST SWAP1 POP PUSH2 0x3FF7 DUP4 PUSH2 0x3C7A JUMP JUMPDEST DUP2 MSTORE PUSH2 0x4005 PUSH1 0x20 DUP5 ADD PUSH2 0x3BFA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x4016 PUSH1 0x40 DUP5 ADD PUSH2 0x3BFA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x4045 PUSH1 0xC0 DUP5 ADD PUSH2 0x3BFA JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x4056 PUSH1 0xE0 DUP5 ADD PUSH2 0x3BFA JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD CALLDATALOAD DUP4 DUP2 GT ISZERO PUSH2 0x406E JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH2 0x407A DUP11 DUP3 DUP8 ADD PUSH2 0x3C15 JUMP JUMPDEST SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP8 PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP8 POP PUSH1 0x40 SWAP1 SWAP7 ADD CALLDATALOAD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40AA JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x40C5 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x40DC PUSH1 0x40 DUP6 ADD PUSH2 0x3C05 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x40FA JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 MLOAD SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP6 ADD MLOAD PUSH2 0x411A DUP2 PUSH2 0x436D JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4154 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4138 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP4 CALLDATACOPY SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD DUP2 DUP4 PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x41AB JUMPI DUP2 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x418C JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x1610 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4125 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0x41DA PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x4125 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2200 DUP2 DUP6 PUSH2 0x4125 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4285 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x4269 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x4296 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 SWAP2 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP3 MSTORE PUSH1 0x8 DUP2 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x80 SHR PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2177 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4125 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4365 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x73A JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xC DIFFICULTY 0x2D 0xF 0xE2 0x5F 0xC0 0xFC BYTE SWAP9 0x2D DUP4 0xB0 0xEB PUSH22 0xBB31050EB8A81B36F1B06A0B5AC56C4964736F6C6343 STOP SMOD MOD STOP CALLER ", "sha1": "79b4ba688ea34e34c8d6d5acf317c8211473f1b8", "source": "// SPDX-License-Identifier: LicenseRef-Gyro-1.0\n// for information on licensing please see the README in the GitHub repository <https://github.com/gyrostable/concentrated-lps>.\n\npragma solidity 0.7.6;\npragma experimental ABIEncoderV2;\n\n// import \"@balancer-labs/v2-solidity-utils/contracts/math/FixedPoint.sol\";\nimport \"../../libraries/GyroFixedPoint.sol\";\n\nimport \"@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol\";\nimport \"@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol\";\n\nimport \"../../libraries/GyroConfigKeys.sol\";\nimport \"../../libraries/GyroConfigHelpers.sol\";\nimport \"../../interfaces/IGyroConfig.sol\";\nimport \"../../libraries/GyroPoolMath.sol\";\nimport \"../../libraries/GyroErrors.sol\";\n\nimport \"../CappedLiquidity.sol\";\nimport \"../LocallyPausable.sol\";\nimport \"../ExtensibleWeightedPool2Tokens.sol\";\nimport \"./Gyro2CLPPoolErrors.sol\";\nimport \"./Gyro2CLPMath.sol\";\n\ncontract Gyro2CLPPool is ExtensibleWeightedPool2Tokens, CappedLiquidity, LocallyPausable {\n    using GyroFixedPoint for uint256;\n    using WeightedPoolUserDataHelpers for bytes;\n    using WeightedPool2TokensMiscData for bytes32;\n    using GyroConfigHelpers for IGyroConfig;\n\n    uint256 private immutable _sqrtAlpha;\n    uint256 private immutable _sqrtBeta;\n    bytes32 private constant POOL_TYPE = \"2CLP\";\n\n    IGyroConfig public gyroConfig;\n\n    struct GyroParams {\n        NewPoolParams baseParams;\n        uint256 sqrtAlpha; // A: Should already be upscaled\n        uint256 sqrtBeta; // A: Should already be upscaled. Could be passed as an array[](2)\n        address capManager;\n        CapParams capParams;\n        address pauseManager;\n    }\n\n    constructor(GyroParams memory params, address configAddress)\n        ExtensibleWeightedPool2Tokens(params.baseParams)\n        CappedLiquidity(params.capManager, params.capParams)\n        LocallyPausable(params.pauseManager)\n    {\n        _grequire(params.sqrtAlpha < params.sqrtBeta, Gyro2CLPPoolErrors.SQRT_PARAMS_WRONG);\n        _grequire(configAddress != address(0), GyroErrors.ZERO_ADDRESS);\n        _sqrtAlpha = params.sqrtAlpha;\n        _sqrtBeta = params.sqrtBeta;\n\n        gyroConfig = IGyroConfig(configAddress);\n    }\n\n    /// @dev Returns sqrtAlpha and sqrtBeta (square roots of lower and upper price bounds of p_x respectively)\n    function getSqrtParameters() external view returns (uint256[2] memory) {\n        return _sqrtParameters();\n    }\n\n    function _sqrtParameters() internal view virtual returns (uint256[2] memory virtualParameters) {\n        virtualParameters[0] = _sqrtParameters(true);\n        virtualParameters[1] = _sqrtParameters(false);\n        return virtualParameters;\n    }\n\n    function _sqrtParameters(bool parameter0) internal view virtual returns (uint256) {\n        return parameter0 ? _sqrtAlpha : _sqrtBeta;\n    }\n\n    /** @dev Reads the balance of a token from the balancer vault and returns the scaled amount. Smaller storage access\n     * compared to getVault().getPoolTokens().\n     * Copied from the 3CLP *except* that for the 2CLP, the scalingFactor is interpreted as a regular integer, not a\n     * FixedPoint number. This is an inconsistency between the base contracts.\n     */\n    function _getScaledTokenBalance(IERC20 token, uint256 scalingFactor) internal view returns (uint256 balance) {\n        // Signature of getPoolTokenInfo(): (pool id, token) -> (cash, managed, lastChangeBlock, assetManager)\n        // and total amount = cash + managed. See balancer repo, PoolTokens.sol and BalanceAllocation.sol\n        (uint256 cash, uint256 managed, , ) = getVault().getPoolTokenInfo(getPoolId(), token);\n        balance = cash + managed; // can't overflow, see BalanceAllocation.sol::total() in the Balancer repo.\n        balance = balance.mulDown(scalingFactor);\n    }\n\n    /** @dev Get all balances in the pool, scaled by the appropriate scaling factors, in a relatively gas-efficient way.\n     * Essentially copied from the 3CLP.\n     */\n    function _getAllBalances() internal view returns (uint256[] memory balances) {\n        // The below is more gas-efficient than the following line because the token slots don't have to be read in the\n        // vault.\n        // (, uint256[] memory balances, ) = getVault().getPoolTokens(getPoolId());\n        balances = new uint256[](2);\n        balances[0] = _getScaledTokenBalance(_token0, _scalingFactor(true));\n        balances[1] = _getScaledTokenBalance(_token1, _scalingFactor(false));\n        return balances;\n    }\n\n    /// @dev Returns virtual offsets a and b for reserves x and y respectively, as in (x+a)*(y+b)=L^2\n    function getVirtualParameters() external view returns (uint256[] memory virtualParams) {\n        uint256[] memory balances = _getAllBalances();\n        // _calculateCurrentValues() is defined in terms of an in/out pair, but we just map this to the 0/1 (x/y) pair.\n        virtualParams = new uint256[](2);\n        (, virtualParams[0], virtualParams[1]) = _calculateCurrentValues(balances[0], balances[1], true);\n    }\n\n    function _getVirtualParameters(uint256[2] memory sqrtParams, uint256 invariant)\n        internal\n        view\n        virtual\n        returns (uint256[2] memory virtualParameters)\n    {\n        virtualParameters[0] = _virtualParameters(true, sqrtParams[1], invariant);\n        virtualParameters[1] = _virtualParameters(false, sqrtParams[0], invariant);\n        return virtualParameters;\n    }\n\n    function _virtualParameters(\n        bool parameter0,\n        uint256 sqrtParam,\n        uint256 invariant\n    ) internal view virtual returns (uint256) {\n        return\n            parameter0\n                ? (Gyro2CLPMath._calculateVirtualParameter0(invariant, sqrtParam))\n                : (Gyro2CLPMath._calculateVirtualParameter1(invariant, sqrtParam));\n    }\n\n    /**\n     * @dev Returns the current value of the invariant.\n     */\n    function getInvariant() public view override returns (uint256) {\n        uint256[] memory balances = _getAllBalances();\n        uint256[2] memory sqrtParams = _sqrtParameters();\n\n        return Gyro2CLPMath._calculateInvariant(balances, sqrtParams[0], sqrtParams[1]);\n    }\n\n    function _getPrice(\n        uint256[] memory balances,\n        uint256 virtualParam0,\n        uint256 virtualParam1\n    ) internal pure returns (uint256 spotPrice) {\n        return Gyro2CLPMath._calcSpotPriceAinB(balances[0], virtualParam0, balances[1], virtualParam1);\n    }\n\n    /** @dev Returns the current spot price of token0 quoted in units of token1.\n     */\n    function getPrice() external view returns (uint256 spotPrice) {\n        uint256[] memory balances = _getAllBalances();\n        (uint256 invariant, uint256 virtualParam0, uint256 virtualParam1) = _calculateCurrentValues(balances[0], balances[1], true);\n        return _getPrice(balances, virtualParam0, virtualParam1);\n    }\n\n    // Swap Hooks\n\n    function onSwap(\n        SwapRequest memory request,\n        uint256 balanceTokenIn,\n        uint256 balanceTokenOut\n    ) public virtual override whenNotPaused onlyVault(request.poolId) returns (uint256) {\n        bool tokenInIsToken0 = request.tokenIn == _token0;\n\n        uint256 scalingFactorTokenIn = _scalingFactor(tokenInIsToken0);\n        uint256 scalingFactorTokenOut = _scalingFactor(!tokenInIsToken0);\n\n        // All token amounts are upscaled.\n        balanceTokenIn = _upscale(balanceTokenIn, scalingFactorTokenIn);\n        balanceTokenOut = _upscale(balanceTokenOut, scalingFactorTokenOut);\n\n        // All the calculations in one function to avoid Error Stack Too Deep\n        (uint256 currentInvariant, uint256 virtualParamIn, uint256 virtualParamOut) = _calculateCurrentValues(\n            balanceTokenIn,\n            balanceTokenOut,\n            tokenInIsToken0\n        );\n\n        if (request.kind == IVault.SwapKind.GIVEN_IN) {\n            // Fees are subtracted before scaling, to reduce the complexity of the rounding direction analysis.\n            // This is amount - fee amount, so we round up (favoring a higher fee amount).\n            uint256 feeAmount = request.amount.mulUp(getSwapFeePercentage());\n            // subtract fee and upscale so request.amount is appropriate for the following pool math.\n            request.amount = _upscale(request.amount.sub(feeAmount), scalingFactorTokenIn);\n\n            uint256 amountOut = _onSwapGivenIn(request, balanceTokenIn, balanceTokenOut, virtualParamIn, virtualParamOut);\n\n            // amountOut tokens are exiting the Pool, so we round down.\n            return _downscaleDown(amountOut, scalingFactorTokenOut);\n        } else {\n            request.amount = _upscale(request.amount, scalingFactorTokenOut);\n\n            uint256 amountIn = _onSwapGivenOut(request, balanceTokenIn, balanceTokenOut, virtualParamIn, virtualParamOut);\n\n            // amountIn tokens are entering the Pool, so we round up.\n            amountIn = _downscaleUp(amountIn, scalingFactorTokenIn);\n\n            // Fees are added after scaling happens, to reduce the complexity of the rounding direction analysis.\n            // This is amount + fee amount, so we round up (favoring a higher fee amount).\n            return amountIn.divUp(getSwapFeePercentage().complement());\n        }\n    }\n\n    // We assume all amounts to be upscaled correctly\n    function _onSwapGivenIn(\n        SwapRequest memory swapRequest,\n        uint256 currentBalanceTokenIn,\n        uint256 currentBalanceTokenOut,\n        uint256 virtualParamIn,\n        uint256 virtualParamOut\n    ) internal pure override returns (uint256) {\n        // NB: Swaps are disabled while the contract is paused.\n        return Gyro2CLPMath._calcOutGivenIn(currentBalanceTokenIn, currentBalanceTokenOut, swapRequest.amount, virtualParamIn, virtualParamOut);\n    }\n\n    function _onSwapGivenOut(\n        SwapRequest memory swapRequest,\n        uint256 currentBalanceTokenIn,\n        uint256 currentBalanceTokenOut,\n        uint256 virtualParamIn,\n        uint256 virtualParamOut\n    ) internal pure override returns (uint256) {\n        // NB: Swaps are disabled while the contract is paused.\n        return Gyro2CLPMath._calcInGivenOut(currentBalanceTokenIn, currentBalanceTokenOut, swapRequest.amount, virtualParamIn, virtualParamOut);\n    }\n\n    /// @dev invariant and virtual offsets.\n    function calculateCurrentValues(\n        uint256 balanceTokenIn, // not scaled\n        uint256 balanceTokenOut, // not scaled\n        bool tokenInIsToken0\n    )\n        public\n        view\n        returns (\n            uint256 currentInvariant,\n            uint256 virtualParamIn,\n            uint256 virtualParamOut\n        )\n    {\n        uint256 scalingFactorTokenIn = _scalingFactor(tokenInIsToken0);\n        uint256 scalingFactorTokenOut = _scalingFactor(!tokenInIsToken0);\n        balanceTokenIn = _upscale(balanceTokenIn, scalingFactorTokenIn);\n        balanceTokenOut = _upscale(balanceTokenOut, scalingFactorTokenOut);\n        return _calculateCurrentValues(balanceTokenIn, balanceTokenOut, tokenInIsToken0);\n    }\n\n    function _calculateCurrentValues(\n        uint256 balanceTokenIn, // scaled\n        uint256 balanceTokenOut, // scaled\n        bool tokenInIsToken0\n    )\n        internal\n        view\n        returns (\n            uint256 currentInvariant,\n            uint256 virtualParamIn,\n            uint256 virtualParamOut\n        )\n    {\n        uint256[] memory balances = new uint256[](2);\n        balances[0] = tokenInIsToken0 ? balanceTokenIn : balanceTokenOut;\n        balances[1] = tokenInIsToken0 ? balanceTokenOut : balanceTokenIn;\n\n        uint256[2] memory sqrtParams = _sqrtParameters();\n\n        currentInvariant = Gyro2CLPMath._calculateInvariant(balances, sqrtParams[0], sqrtParams[1]);\n\n        uint256[2] memory virtualParam = _getVirtualParameters(sqrtParams, currentInvariant);\n\n        virtualParamIn = tokenInIsToken0 ? virtualParam[0] : virtualParam[1];\n        virtualParamOut = tokenInIsToken0 ? virtualParam[1] : virtualParam[0];\n    }\n\n    /**\n     * @dev Called when the Pool is joined for the first time; that is, when the BPT total supply is zero.\n     *\n     * Returns the amount of BPT to mint, and the token amounts the Pool will receive in return.\n     *\n     * Minted BPT will be sent to `recipient`, except for _MINIMUM_BPT, which will be deducted from this amount and sent\n     * to the zero address instead. This will cause that BPT to remain forever locked there, preventing total BPT from\n     * ever dropping below that value, and ensuring `_onInitializePool` can only be called once in the entire Pool's\n     * lifetime.\n     *\n     * The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n     * be downscaled (rounding up) before being returned to the Vault.\n     */\n    function _onInitializePool(\n        bytes32,\n        address,\n        address,\n        bytes memory userData\n    ) internal override returns (uint256, uint256[] memory) {\n        BaseWeightedPool.JoinKind kind = userData.joinKind();\n        _require(kind == BaseWeightedPool.JoinKind.INIT, Errors.UNINITIALIZED);\n\n        uint256[] memory amountsIn = userData.initialAmountsIn();\n        InputHelpers.ensureInputLengthMatch(amountsIn.length, 2);\n        _upscaleArray(amountsIn);\n\n        (uint256 invariantAfterJoin, uint256 virtualParam0, uint256 virtualParam1) = _calculateCurrentValues(amountsIn[0], amountsIn[1], true);\n\n        /* We initialize the number of BPT tokens such that one BPT token corresponds to one unit of token1 at the initialized pool price. This makes BPT tokens comparable across pools with different parameters. Note that the invariant does *not* have this property!\n         */\n        uint256 spotPrice = _getPrice(amountsIn, virtualParam0, virtualParam1);\n        uint256 bptAmountOut = Math.add(amountsIn[0].mulDown(spotPrice), amountsIn[1]);\n\n        _lastInvariant = invariantAfterJoin;\n\n        return (bptAmountOut, amountsIn);\n    }\n\n    /**\n     * @dev Called whenever the Pool is joined after the first initialization join (see `_onInitializePool`).\n     *\n     * Returns the amount of BPT to mint, the token amounts that the Pool will receive in return, and the number of\n     * tokens to pay in protocol swap fees.\n     *\n     * Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n     * performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n     *\n     * Minted BPT will be sent to `recipient`.\n     *\n     * The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n     * be downscaled (rounding up) before being returned to the Vault.\n     *\n     * Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onJoinPool`). These\n     * amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n     *\n     * protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way\n     *\n     */\n    function _onJoinPool(\n        bytes32,\n        address,\n        address recipient,\n        uint256[] memory balances,\n        uint256 lastChangeBlock,\n        uint256, //protocolSwapFeePercentage,\n        bytes memory userData\n    )\n        internal\n        override\n        returns (\n            uint256,\n            uint256[] memory,\n            uint256[] memory\n        )\n    {\n        // NB Joins are disabled when the pool is paused.\n\n        uint256[2] memory sqrtParams = _sqrtParameters();\n\n        // Due protocol swap fee amounts are computed by measuring the growth of the invariant between the previous\n        // join or exit event and now - the invariant's growth is due exclusively to swap fees. This avoids\n        // spending gas accounting for fees on each individual swap.\n        uint256 invariantBeforeAction = Gyro2CLPMath._calculateInvariant(balances, sqrtParams[0], sqrtParams[1]);\n        uint256[2] memory virtualParam = _getVirtualParameters(sqrtParams, invariantBeforeAction);\n\n        _distributeFees(invariantBeforeAction);\n\n        (uint256 bptAmountOut, uint256[] memory amountsIn) = _doJoin(balances, userData);\n\n        if (_capParams.capEnabled) {\n            _ensureCap(bptAmountOut, balanceOf(recipient), totalSupply());\n        }\n\n        // Since we pay fees in BPT, they have not changed the invariant and 'invariantBeforeAction' is still consistent\n        // with  'balances'. Therefore, we can use a simplified method to update the invariant that does not require a\n        // full re-computation.\n        // Note: Should this be changed in the future, we also need to reduce the invariant proportionally by the total\n        // protocol fee factor.\n        _lastInvariant = GyroPoolMath.liquidityInvariantUpdate(invariantBeforeAction, bptAmountOut, totalSupply(), true);\n\n        // returns a new uint256[](2) b/c Balancer vault is expecting a fee array, but fees paid in BPT instead\n        return (bptAmountOut, amountsIn, new uint256[](2));\n    }\n\n    function _doJoin(uint256[] memory balances, bytes memory userData) internal view returns (uint256 bptAmountOut, uint256[] memory amountsIn) {\n        BaseWeightedPool.JoinKind kind = userData.joinKind();\n\n        // We do NOT currently support unbalanced update, i.e., EXACT_TOKENS_IN_FOR_BPT_OUT or TOKEN_IN_FOR_EXACT_BPT_OUT\n        if (kind == BaseWeightedPool.JoinKind.ALL_TOKENS_IN_FOR_EXACT_BPT_OUT) {\n            (bptAmountOut, amountsIn) = _joinAllTokensInForExactBPTOut(balances, userData);\n        } else {\n            _revert(Errors.UNHANDLED_JOIN_KIND);\n        }\n    }\n\n    function _joinAllTokensInForExactBPTOut(uint256[] memory balances, bytes memory userData)\n        internal\n        view\n        override\n        returns (uint256, uint256[] memory)\n    {\n        uint256 bptAmountOut = userData.allTokensInForExactBptOut();\n        // Note that there is no maximum amountsIn parameter: this is handled by `IVault.joinPool`.\n\n        uint256[] memory amountsIn = GyroPoolMath._calcAllTokensInGivenExactBptOut(balances, bptAmountOut, totalSupply());\n\n        return (bptAmountOut, amountsIn);\n    }\n\n    /**\n     * @dev Called whenever the Pool is exited.\n     *\n     * Returns the amount of BPT to burn, the token amounts for each Pool token that the Pool will grant in return, and\n     * the number of tokens to pay in protocol swap fees.\n     *\n     * Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n     * performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n     *\n     * BPT will be burnt from `sender`.\n     *\n     * The Pool will grant tokens to `recipient`. These amounts are considered upscaled and will be downscaled\n     * (rounding down) before being returned to the Vault.\n     *\n     * Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onExitPool`). These\n     * amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n     *\n     * protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way\n     */\n    function _onExitPool(\n        bytes32,\n        address,\n        address,\n        uint256[] memory balances,\n        uint256 lastChangeBlock,\n        uint256, // protocolSwapFeePercentage,\n        bytes memory userData\n    )\n        internal\n        override\n        returns (\n            uint256 bptAmountIn,\n            uint256[] memory amountsOut,\n            uint256[] memory dueProtocolFeeAmounts\n        )\n    {\n        // Exits are not completely disabled while the contract is paused: proportional exits (exact BPT in for tokens\n        // out) remain functional.\n\n        uint256[2] memory sqrtParams = _sqrtParameters();\n\n        if (_isNotPaused()) {\n            // Due protocol swap fee amounts are computed by measuring the growth of the invariant between the previous\n            // join or exit event and now - the invariant's growth is due exclusively to swap fees. This avoids\n            // spending gas calculating the fees on each individual swap.\n            uint256 invariantBeforeAction = Gyro2CLPMath._calculateInvariant(balances, sqrtParams[0], sqrtParams[1]);\n            uint256[2] memory virtualParam = _getVirtualParameters(sqrtParams, invariantBeforeAction);\n\n            _distributeFees(invariantBeforeAction);\n\n            (bptAmountIn, amountsOut) = _doExit(balances, userData);\n\n            // Since we pay fees in BPT, they have not changed the invariant and 'invariantBeforeAction' is still\n            // consistent with 'balances'. Therefore, we can use a simplified method to update the invariant that does\n            // not require a full re-computation.\n            // Note: Should this be changed in the future, we also need to reduce the invariant proportionally by the\n            // total protocol fee factor.\n            _lastInvariant = GyroPoolMath.liquidityInvariantUpdate(invariantBeforeAction, bptAmountIn, totalSupply(), false);\n        } else {\n            // Note: If the contract is paused, swap protocol fee amounts are not charged\n            // to avoid extra calculations and reduce the potential for errors.\n            (bptAmountIn, amountsOut) = _doExit(balances, userData);\n\n            // Invalidate _lastInvariant. We do not compute the invariant to reduce the potential for errors or lockup.\n            // Instead, we set the invariant such that any following (non-paused) join/exit will ignore and recompute\n            // it. (see GyroPoolMath._calcProtocolFees())\n            _lastInvariant = type(uint256).max;\n        }\n\n        // returns a new uint256[](2) b/c Balancer vault is expecting a fee array, but fees paid in BPT instead\n        return (bptAmountIn, amountsOut, new uint256[](2));\n    }\n\n    function _doExit(uint256[] memory balances, bytes memory userData) internal view returns (uint256 bptAmountIn, uint256[] memory amountsOut) {\n        BaseWeightedPool.ExitKind kind = userData.exitKind();\n\n        // We do NOT support unbalanced exit at the moment, i.e., EXACT_BPT_IN_FOR_ONE_TOKEN_OUT or\n        // BPT_IN_FOR_EXACT_TOKENS_OUT.\n        if (kind == BaseWeightedPool.ExitKind.EXACT_BPT_IN_FOR_TOKENS_OUT) {\n            (bptAmountIn, amountsOut) = _exitExactBPTInForTokensOut(balances, userData);\n        } else {\n            _revert(Errors.UNHANDLED_EXIT_KIND);\n        }\n    }\n\n    function _exitExactBPTInForTokensOut(uint256[] memory balances, bytes memory userData)\n        internal\n        view\n        override\n        returns (uint256, uint256[] memory)\n    {\n        // This exit function is the only one that is not disabled if the contract is paused: it remains unrestricted\n        // in an attempt to provide users with a mechanism to retrieve their tokens in case of an emergency.\n        // This particular exit function is the only one that remains available because it is the simplest one, and\n        // therefore the one with the lowest likelihood of errors.\n\n        uint256 bptAmountIn = userData.exactBptInForTokensOut();\n        // Note that there is no minimum amountOut parameter: this is handled by `IVault.exitPool`.\n\n        uint256[] memory amountsOut = GyroPoolMath._calcTokensOutGivenExactBptIn(balances, bptAmountIn, totalSupply());\n        return (bptAmountIn, amountsOut);\n    }\n\n    // Helpers\n\n    /**\n     * @dev Computes and distributes fees between the Balancer and the Gyro treasury\n     * The fees are computed and distributed in BPT rather than using the\n     * Balancer regular distribution mechanism which would pay these in underlying\n     */\n\n    function _distributeFees(uint256 invariantBeforeAction) internal {\n        // calculate Protocol fees in BPT\n        // lastInvariant is the invariant logged at the end of the last liquidity update\n        // protocol fees are calculated on swap fees earned between liquidity updates\n        (uint256 gyroFees, uint256 balancerFees, address gyroTreasury, address balTreasury) = _getDueProtocolFeeAmounts(\n            _lastInvariant,\n            invariantBeforeAction\n        );\n\n        // Pay fees in BPT\n        _payFeesBpt(gyroFees, balancerFees, gyroTreasury, balTreasury);\n    }\n\n    /**\n     * @dev this function overrides inherited function to make sure it is never used\n     */\n    function _getDueProtocolFeeAmounts(\n        uint256[] memory, // balances,\n        uint256[] memory, // normalizedWeights,\n        uint256, // previousInvariant,\n        uint256, // currentInvariant,\n        uint256 // protocolSwapFeePercentage\n    ) internal pure override returns (uint256[] memory) {\n        revert(\"Not implemented\");\n    }\n\n    /**\n     * @dev Calculates protocol fee amounts in BPT terms.\n     * protocolSwapFeePercentage is not used here b/c we take parameters from GyroConfig instead.\n     * Returns: BPT due to Gyro, BPT due to Balancer, receiving address for Gyro fees, receiving address for Balancer\n     * fees.\n     */\n    function _getDueProtocolFeeAmounts(uint256 previousInvariant, uint256 currentInvariant)\n        internal\n        view\n        returns (\n            uint256,\n            uint256,\n            address,\n            address\n        )\n    {\n        (uint256 protocolSwapFeePerc, uint256 protocolFeeGyroPortion, address gyroTreasury, address balTreasury) = _getFeesMetadata();\n\n        // Early return if the protocol swap fee percentage is zero, saving gas.\n        if (protocolSwapFeePerc == 0) {\n            return (0, 0, gyroTreasury, balTreasury);\n        }\n\n        // Calculate fees in BPT\n        (uint256 gyroFees, uint256 balancerFees) = GyroPoolMath._calcProtocolFees(\n            previousInvariant,\n            currentInvariant,\n            totalSupply(),\n            protocolSwapFeePerc,\n            protocolFeeGyroPortion\n        );\n\n        return (gyroFees, balancerFees, gyroTreasury, balTreasury);\n    }\n\n    function _payFeesBpt(\n        uint256 gyroFees,\n        uint256 balancerFees,\n        address gyroTreasury,\n        address balTreasury\n    ) internal {\n        // Pay fees in BPT to gyro treasury\n        if (gyroFees > 0) {\n            _mintPoolTokens(gyroTreasury, gyroFees);\n        }\n        // Pay fees in BPT to bal treasury\n        if (balancerFees > 0) {\n            _mintPoolTokens(balTreasury, balancerFees);\n        }\n    }\n\n    function _getFeesMetadata()\n        internal\n        view\n        returns (\n            uint256,\n            uint256,\n            address,\n            address\n        )\n    {\n        return (\n            gyroConfig.getSwapFeePercForPool(address(this), POOL_TYPE),\n            gyroConfig.getProtocolFeeGyroPortionForPool(address(this), POOL_TYPE),\n            gyroConfig.getAddress(GyroConfigKeys.GYRO_TREASURY_KEY),\n            gyroConfig.getAddress(GyroConfigKeys.BAL_TREASURY_KEY)\n        );\n    }\n\n    /** @notice Effective BPT supply.\n     *\n     *  This is the same as `totalSupply()` but also accounts for the fact that the pool owes\n     *  protocol fees to the pool in the form of unminted LP shares created on the next join/exit,\n     *  diluting LPers. Thus, this is the totalSupply() that the next join/exit operation will see.\n     *\n     *  Equivalent to the respective function in, e.g., WeightedPool, see:\n     *  https://github.com/balancer/balancer-v2-monorepo/blob/master/pkg/pool-weighted/contracts/WeightedPool.sol#L325-L344\n     */\n    function getActualSupply() external view returns (uint256) {\n        uint256 supply = totalSupply();\n        (uint256 gyroFees, uint256 balancerFees, , ) = _getDueProtocolFeeAmounts(_lastInvariant, getInvariant());\n        return supply.add(gyroFees).add(balancerFees);\n    }\n\n    /// @notice Equivalent to but more efficient than `getInvariant().divDown(getActualSupply())`.\n    function getInvariantDivActualSupply() external view returns (uint256) {\n        uint256 invariant = getInvariant();\n        uint256 supply = totalSupply();\n        (uint256 gyroFees, uint256 balancerFees, , ) = _getDueProtocolFeeAmounts(_lastInvariant, invariant);\n        uint256 actualSupply = supply.add(gyroFees).add(balancerFees);\n        return invariant.divDown(actualSupply);\n    }\n\n    function _setPausedState(bool paused) internal override {\n        _setPaused(paused);\n    }\n}\n", "sourceMap": "926:27432:40:-:0;;;873:95:27;820:148;;2160:4:44;2113:51;;;;2170;;2486:1;2436:51;;1679:527:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1882:19;;;;;1821:17;;;;;1840:16;;;;;1778:17;;4335:26:44;;;;4363:27;;;;4221:11;;;;;4234:13;;;;;4249:12;;2020:280:25;;;;;;;;;;;-1:-1:-1;;;2020:280:25;;;;4293:12:44;;;;4181:10;1929:46:11;;;1749:14:4;;;;-1:-1:-1;;;;;;1749:14:4;;;;2002:13:26;;1882:19:40;;1821:17;;1840:16;;1778:17;;4335:26:44;;4363:27;;4221:11;;4234:13;4221:11;;;;;;4234:13;;2002::26;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2025:17:26;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2052:9:26;:14;;-1:-1:-1;;2052:14:26;2064:2;2052:14;;;-1:-1:-1;2100:22:25;;;;;;;2085:37;;2150:25;;;;;;2132:43;;2198:95;2052:14:26;2185:108:25;-1:-1:-1;;;;;;1852:14:1::2;::::0;;;;::::2;::::0;2449:15:46;:37;;;;2497:40;;;;2570:41;;;;2547:64;;4431:15:44::4;::::0;;4444:1:::4;4431:15:::0;;;;;::::4;::::0;;-1:-1:-1;;4431:15:44;;-1:-1:-1;4444:1:44;;-1:-1:-1;4431:15:44;;::::4;::::0;-1:-1:-1;4431:15:44;::::4;::::0;::::4;;::::0;-1:-1:-1;4431:15:44::4;4406:40;;4468:6;:13;;;4456:6;4463:1;4456:9;;;;;;;;-1:-1:-1::0;;;;;4456:25:44;;::::4;:9;::::0;;::::4;::::0;;;;;;;:25;4503:13:::4;::::0;::::4;::::0;4491:9;;:6;;-1:-1:-1;;4491:9:44;::::4;;;;;-1:-1:-1::0;;;;;4491:25:44;;::::4;:9;::::0;;::::4;::::0;;;;;;:25;4681:40:::4;::::0;4714:6;;4681:32:::4;;::::0;::::4;;:40:::0;::::4;:::i;:::-;4754:24;::::0;::::4;::::0;4732:47:::4;::::0;:21:::4;:47::i;:::-;4807:12:::0;;:62:::4;::::0;-1:-1:-1;;;4807:62:44;;4790:14:::4;::::0;-1:-1:-1;;;;;4807:25:44::4;::::0;-1:-1:-1;;4807:62:44::4;::::0;4833:35:::4;::::0;4807:62:::4;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4933:12:::0;;4977:16:::4;::::0;;4991:1:::4;4977:16:::0;;;;;::::4;::::0;;4790:79;;-1:-1:-1;;;;;;4933:27:44;;::::4;::::0;::::4;::::0;4790:79;;4969:6;;4991:1;4977:16:::4;::::0;::::4;::::0;;::::4;::::0;::::4;;::::0;-1:-1:-1;4977:16:44::4;4933:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;::::0;::::4;;;;;-1:-1:-1::0;;;5094:16:44::4;::::0;;;-1:-1:-1;5131:13:44::4;::::0;;::::4;::::0;;5121:23;;-1:-1:-1;;;;;;5121:23:44;;;::::4;::::0;5164:13:::4;::::0;::::4;::::0;5154:23;;;;;;::::4;::::0;5228:13;5206:36:::4;::::0;:21:::4;:36::i;:::-;5188:54;::::0;5292:13:::4;::::0;::::4;::::0;5270:36:::4;::::0;:21:::4;:36::i;:::-;5252:54;::::0;-1:-1:-1;;1217:15:43;;;;;;;;;;;;-1:-1:-1;;;1217:15:43;;;;;-1:-1:-1;;;;;;1190:25:43;;1182:51;;;;-1:-1:-1;;;1182:51:43;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;1243:10:43;:24;;-1:-1:-1;;;;;;1243:24:43;-1:-1:-1;;;;;1243:24:43;;;;;;1301:17;;1277:10;:41;;1355:20;;;;1408:16;;;;;-1:-1:-1;;1277:41:43;;;;;;;;;;-1:-1:-1;;1328:47:43;-1:-1:-1;;;;;;1328:47:43;;;;;;;;;;;-1:-1:-1;;;;;1385:39:43;;;-1:-1:-1;;;1385:39:43;;;;;;;;639:63:45;;649:27;;;;4607:3:53;639:9:45;:63::i;:::-;712:12;:28;;-1:-1:-1;;;;;;712:28:45;-1:-1:-1;;;;;712:28:45;;;;;;;;;;1946:15:40::3;::::0;::::3;::::0;1927:16:::3;::::0;::::3;::::0;1917:83:::3;::::0;-1:-1:-1;313:3:41::3;1917:9:40;:83::i;:::-;2010:63;-1:-1:-1::0;;;;;2020:27:40;::::3;::::0;::::3;4607:3:53;2010:9:40;:63::i;:::-;2096:16;::::0;::::3;::::0;2083:29:::3;::::0;2134:15:::3;::::0;;::::3;::::0;2122:27:::3;::::0;2160:10:::3;:39:::0;;-1:-1:-1;;;;;;2160:39:40::3;-1:-1:-1::0;;;;;2160:39:40;;::::3;::::0;;;::::3;::::0;;926:27432;;1135:274:18;1345:5;1369:33;1345:5;1369:19;:33::i;:::-;1135:274;;:::o;6672:397:44:-;6748:87;1722:4;6757:45;;;5289:3:12;6748:8:44;:87::i;:::-;6845;1795:4;6854:45;;;5228:3:12;6845:8:44;:87::i;:::-;6955:49;6986:17;6955:9;;:30;;;;;;:49;;;;:::i;:::-;6943:9;:61;7019:43;;;;;;7044:17;;7019:43;:::i;:::-;;;;;;;;6672:397;:::o;34759:420::-;34826:7;34925:21;34963:5;-1:-1:-1;;;;;34949:30:44;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;34925:56;;;;35056:26;35085:27;35094:2;35098:13;35085:8;;;;;:27;;:::i;:::-;35129:2;:22;795:4:54;35129:43:44;;-1:-1:-1;;;34759:420:44;;;;:::o;388:103:53:-;458:9;453:35;;469:19;478:9;469:8;:19::i;1415:374:18:-;1511:1;1496:5;:12;:16;1492:53;;;1528:7;;1492:53;1555:16;1574:5;1580:1;1574:8;;;;;;;;;;;;;;1555:27;;1597:9;1609:1;1597:13;;1592:191;1616:5;:12;1612:1;:16;1592:191;;;1649:15;1667:5;1673:1;1667:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;1689:51:18;-1:-1:-1;;;;;1698:18:18;;;;;;;4890:3:12;1689:8:18;:51::i;:::-;1765:7;-1:-1:-1;1630:3:18;;1592:191;;;;1415:374;;;:::o;866:101:12:-;935:9;930:34;;946:18;954:9;946:7;:18::i;5083:194:9:-;5178:7;5204:66;5222:18;2155:2;5204:4;:17;;;;;;:66;;;;;:::i;:::-;5197:73;5083:194;-1:-1:-1;;;5083:194:9:o;948:166:23:-;1006:7;1025:37;1034:6;;;;4370:1:12;1025:8:23;:37::i;:::-;-1:-1:-1;1084:5:23;;;948:166::o;925:128:53:-;973:29;982:9;-1:-1:-1;;;973:8:53;:29::i;1074:3172:12:-;-1:-1:-1;;;3588:3:12;3581:79;;;3799:66;3793:4;3786:80;3941:1;3935:4;3928:15;2210:2;2243:18;;;2336;;;2383;;;2215:4;2379:29;;;3057:2;3053:17;2195:18;;;;2288;;;;2284:29;;;;3040:1;3036:14;3025:26;;;;3021:50;;;;2999:73;;2994:3;2990:83;4008:4;4001:26;4234:3;;4224:14;6887:269:20;-1:-1:-1;7074:18:20;;7072:21;7056:37;;;;7133:15;;7111:38;;6887:269::o;1160:3379:53:-;-1:-1:-1;;;1223:18:53;3874:79;;;4092:66;4086:4;4079:80;4234:1;4228:4;4221:15;2362:2;2395:18;;;2440;;;2367:4;2436:29;;;3238:1;3329:14;2347:18;;;;3318:26;;;;2488:18;;;;2535;;;2531:29;;3350:2;3346:17;3314:50;3228:4;3234:18;;;;;;3224:29;3220:2;3216:38;3293:72;;;;3288:3;3284:82;4301:4;4294:26;1252:14;;;;;4527:3;;4517:14;926:27432:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;926:27432:40;;;-1:-1:-1;926:27432:40;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:179:56;95:13;;-1:-1:-1;;;;;137:31:56;;127:42;;117:2;;183:1;180;173:12;198:505;;307:3;300:4;292:6;288:17;284:27;274:2;;329:5;322;315:20;274:2;356:13;;-1:-1:-1;381:26:56;;378:2;;;410:9;378:2;445:54;493:4;-1:-1:-1;;487:2:56;468:13;;464:27;460:38;445:54;:::i;:::-;524:2;515:7;508:19;570:3;563:4;558:2;550:6;546:15;542:26;539:35;536:2;;;591:5;584;577:20;536:2;608:64;669:2;662:4;653:7;649:18;642:4;634:6;630:17;608:64;:::i;:::-;690:7;264:439;-1:-1:-1;;;;264:439:56:o;708:864::-;;826:4;814:9;809:3;805:19;801:30;798:2;;;848:5;841;834:20;798:2;885;879:9;927:4;915:17;;983:22;;;-1:-1:-1;947:34:56;;944:62;941:2;;;1009:9;941:2;1040:10;1036:2;1029:22;;1069:6;1060:15;;1105:9;1099:16;1160:7;1153:15;1146:23;1137:7;1134:36;1124:2;;1184:1;1181;1174:12;1124:2;1197:23;;1265:2;1250:18;;1244:25;-1:-1:-1;;;;;1300:33:56;;1288:46;;1278:2;;1348:1;1345;1338:12;1278:2;1380;1368:15;;1361:32;1438:2;1423:18;;1417:25;-1:-1:-1;;;;;1473:33:56;;1461:46;;1451:2;;1521:1;1518;1511:12;1451:2;1553;1541:15;;;;1534:32;788:784;;-1:-1:-1;;788:784:56:o;1577:1148::-;;1681:6;1724:2;1712:9;1707:3;1703:19;1699:28;1696:2;;;1744:5;1737;1730:20;1696:2;1770:18;1785:2;1770:18;:::i;:::-;1761:27;;;1811:42;1843:9;1811:42;:::i;:::-;1797:57;;1898:2;1883:18;;1877:25;-1:-1:-1;1951:14:56;;;1948:2;;;1978:1;1975;1968:12;1948:2;2014:59;2069:3;2060:6;2049:9;2045:22;2014:59;:::i;:::-;2009:2;2002:5;1998:14;1991:83;2120:2;2109:9;2105:18;2099:25;2083:41;;2149:2;2139:8;2136:16;2133:2;;;2165:1;2162;2155:12;2133:2;;2201:61;2258:3;2247:8;2236:9;2232:24;2201:61;:::i;:::-;2196:2;2189:5;2185:14;2178:85;;2295:51;2342:2;2331:9;2327:18;2295:51;:::i;:::-;2290:2;2283:5;2279:14;2272:75;2380:52;2427:3;2416:9;2412:19;2380:52;:::i;:::-;2374:3;2367:5;2363:15;2356:77;2487:3;2476:9;2472:19;2466:26;2460:3;2453:5;2449:15;2442:51;2547:3;2536:9;2532:19;2526:26;2520:3;2513:5;2509:15;2502:51;2607:3;2596:9;2592:19;2586:26;2580:3;2573:5;2569:15;2562:51;2632:3;2667:51;2714:2;2703:9;2699:18;2667:51;:::i;:::-;2651:14;;;2644:75;2655:5;1661:1064;-1:-1:-1;;1661:1064:56:o;2730:194::-;;2853:2;2841:9;2832:7;2828:23;2824:32;2821:2;;;2874:6;2866;2859:22;2821:2;-1:-1:-1;2902:16:56;;2811:113;-1:-1:-1;2811:113:56:o;2929:1264::-;;;3096:2;3084:9;3075:7;3071:23;3067:32;3064:2;;;3117:6;3109;3102:22;3064:2;3149:16;;-1:-1:-1;3214:14:56;;;3211:2;;;3246:6;3238;3231:22;3211:2;3274:22;;;;3330:6;3312:16;;;3308:29;3305:2;;;3355:6;3347;3340:22;3305:2;3393;3387:9;3435:4;3427:6;3423:17;3490:6;3478:10;3475:22;3470:2;3458:10;3455:18;3452:46;3449:2;;;3501:9;3449:2;3528;3521:22;3568:9;;3589:16;;;3586:2;;;3623:6;3615;3608:22;3586:2;3656:73;3721:7;3710:8;3706:2;3702:17;3656:73;:::i;:::-;3648:6;3641:89;;3777:2;3773;3769:11;3763:18;3758:2;3750:6;3746:15;3739:43;3829:2;3825;3821:11;3815:18;3810:2;3802:6;3798:15;3791:43;3867:44;3907:2;3903;3899:11;3867:44;:::i;:::-;3862:2;3854:6;3850:15;3843:69;3946:64;4002:7;3996:3;3992:2;3988:12;3946:64;:::i;:::-;3940:3;3932:6;3928:16;3921:90;4046:45;4086:3;4082:2;4078:12;4046:45;:::i;:::-;4039:4;4027:17;;4020:72;4031:6;-1:-1:-1;4136:51:56;;-1:-1:-1;;4183:2:56;4168:18;;4136:51;:::i;:::-;4126:61;;3054:1139;;;;;:::o;4198:293::-;;4319:2;4307:9;4298:7;4294:23;4290:32;4287:2;;;4340:6;4332;4325:22;4287:2;4377:9;4371:16;4427:4;4420:5;4416:16;4409:5;4406:27;4396:2;;4452:6;4444;4437:22;4496:1295;;4807:2;4796:9;4792:18;4837:6;4826:9;4819:25;4863:2;4901;4896;4885:9;4881:18;4874:30;4924:6;4959;4953:13;4990:6;4982;4975:22;5028:3;5017:9;5013:19;5006:26;;5067:2;5059:6;5055:15;5041:29;;5088:4;5101:195;5115:6;5112:1;5109:13;5101:195;;;5180:13;;-1:-1:-1;;;;;5176:39:56;5164:52;;5271:15;;;;5236:12;;;;-1:-1:-1;5130:9:56;5101:195;;;-1:-1:-1;;5332:19:56;;;5327:2;5312:18;;5305:47;5402:13;;5424:21;;;5463:12;;;;-1:-1:-1;5500:15:56;;;;5535:4;5548:215;5564:8;5559:3;5556:17;5548:215;;;5637:15;;-1:-1:-1;;;;;5633:41:56;5619:56;;5697:14;;;;5736:17;;;;-1:-1:-1;5583:11:56;5548:215;;;-1:-1:-1;5780:5:56;;4768:1023;-1:-1:-1;;;;;;;;4768:1023:56:o;5796:244::-;5950:2;5935:18;;5983:1;5972:13;;5962:2;;5989:9;5962:2;6009:25;;;5917:123;:::o;6045:383::-;;6194:2;6183:9;6176:21;6226:6;6220:13;6269:6;6264:2;6253:9;6249:18;6242:34;6285:66;6344:6;6339:2;6328:9;6324:18;6319:2;6311:6;6307:15;6285:66;:::i;:::-;6412:2;6391:15;-1:-1:-1;;6387:29:56;6372:45;;;;6419:2;6368:54;;6166:262;-1:-1:-1;;6166:262:56:o;6433:177::-;6579:25;;;6567:2;6552:18;;6534:76::o;6615:242::-;6685:2;6679:9;6715:17;;;6783:22;;;-1:-1:-1;6747:34:56;;6744:62;6741:2;;;6809:9;6741:2;6836;6829:22;6659:198;;-1:-1:-1;6659:198:56:o;6862:258::-;6934:1;6944:113;6958:6;6955:1;6952:13;6944:113;;;7034:11;;;7028:18;7015:11;;;7008:39;6980:2;6973:10;6944:113;;;7075:6;7072:1;7069:13;7066:2;;;7110:1;7101:6;7096:3;7092:16;7085:27;7066:2;;6915:205;;;:::o;:::-;926:27432:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/2clp/Gyro2CLPPool.sol", "type": "contract", "deployment": {"address": "0x918390Ee7D83E79E3020A7f72df3f181cc9c029D", "chainid": "137", "blockHeight": 45579527}}