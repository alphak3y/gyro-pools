{"abi": [{"inputs": [{"internalType": "contract IVault", "name": "vault", "type": "address"}, {"internalType": "string", "name": "name", "type": "string"}, {"internalType": "string", "name": "symbol", "type": "string"}, {"internalType": "contract IERC20[]", "name": "tokens", "type": "address[]"}, {"internalType": "uint256", "name": "root3Alpha", "type": "uint256"}, {"internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}, {"internalType": "uint256", "name": "pauseWindowDuration", "type": "uint256"}, {"internalType": "uint256", "name": "bufferPeriodDuration", "type": "uint256"}, {"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "configAddress", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "owner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "spender", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Approval", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bool", "name": "paused", "type": "bool"}], "name": "PausedStateChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}], "name": "SwapFeePercentageChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "from", "type": "address"}, {"indexed": true, "internalType": "address", "name": "to", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Transfer", "type": "event"}, {"inputs": [], "name": "DOMAIN_SEPARATOR", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "spender", "type": "address"}], "name": "allowance", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "approve", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "balanceOf", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "decimals", "outputs": [{"internalType": "uint8", "name": "", "type": "uint8"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "decreaseAllowance", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes4", "name": "selector", "type": "bytes4"}], "name": "getActionId", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getAuthorizer", "outputs": [{"internalType": "contract IAuthorizer", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getInvariant", "outputs": [{"internalType": "uint256", "name": "invariant", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getLastInvariant", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getNormalizedWeights", "outputs": [{"internalType": "uint256[]", "name": "", "type": "uint256[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getOwner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getPausedState", "outputs": [{"internalType": "bool", "name": "paused", "type": "bool"}, {"internalType": "uint256", "name": "pauseWindowEndTime", "type": "uint256"}, {"internalType": "uint256", "name": "bufferPeriodEndTime", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getPoolId", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getRate", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getRoot3Alpha", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getScalingFactors", "outputs": [{"internalType": "uint256[]", "name": "", "type": "uint256[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getSwapFeePercentage", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getVault", "outputs": [{"internalType": "contract IVault", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "gyroConfig", "outputs": [{"internalType": "contract IGyroConfig", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "addedValue", "type": "uint256"}], "name": "increaseAllowance", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "name", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}], "name": "nonces", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "onExitPool", "outputs": [{"internalType": "uint256[]", "name": "", "type": "uint256[]"}, {"internalType": "uint256[]", "name": "", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "onJoinPool", "outputs": [{"internalType": "uint256[]", "name": "", "type": "uint256[]"}, {"internalType": "uint256[]", "name": "", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"components": [{"internalType": "enum IVault.SwapKind", "name": "kind", "type": "uint8"}, {"internalType": "contract IERC20", "name": "tokenIn", "type": "address"}, {"internalType": "contract IERC20", "name": "tokenOut", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}, {"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "address", "name": "from", "type": "address"}, {"internalType": "address", "name": "to", "type": "address"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "internalType": "struct IPoolSwapStructs.SwapRequest", "name": "request", "type": "tuple"}, {"internalType": "uint256", "name": "balanceTokenIn", "type": "uint256"}, {"internalType": "uint256", "name": "balanceTokenOut", "type": "uint256"}], "name": "onSwap", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "value", "type": "uint256"}, {"internalType": "uint256", "name": "deadline", "type": "uint256"}, {"internalType": "uint8", "name": "v", "type": "uint8"}, {"internalType": "bytes32", "name": "r", "type": "bytes32"}, {"internalType": "bytes32", "name": "s", "type": "bytes32"}], "name": "permit", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "queryExit", "outputs": [{"internalType": "uint256", "name": "bptIn", "type": "uint256"}, {"internalType": "uint256[]", "name": "amountsOut", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "queryJoin", "outputs": [{"internalType": "uint256", "name": "bptOut", "type": "uint256"}, {"internalType": "uint256[]", "name": "amountsIn", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "contract IERC20", "name": "token", "type": "address"}, {"internalType": "bytes", "name": "poolConfig", "type": "bytes"}], "name": "setAssetManagerPoolConfig", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bool", "name": "paused", "type": "bool"}], "name": "setPaused", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}], "name": "setSwapFeePercentage", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "symbol", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "totalSupply", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transfer", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transferFrom", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"0": "contracts/cpmmv-3/ExtensibleBaseWeightedPool.sol", "1": "contracts/cpmmv-3/GyroThreeMath.sol", "10": "node_modules/@balancer-labs/v2-pool-utils/contracts/BaseMinimalSwapInfoPool.sol", "11": "node_modules/@balancer-labs/v2-pool-utils/contracts/BasePool.sol", "12": "node_modules/@balancer-labs/v2-pool-utils/contracts/BasePoolAuthorization.sol", "16": "node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedMath.sol", "17": "node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol", "18": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/Authentication.sol", "19": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol", "2": "contracts/cpmmv-3/GyroThreePool.sol", "22": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol", "23": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/ISignaturesValidator.sol", "24": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol", "25": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/InputHelpers.sol", "26": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/TemporarilyPausable.sol", "27": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/WordCodec.sol", "28": "node_modules/@balancer-labs/v2-solidity-utils/contracts/math/FixedPoint.sol", "29": "node_modules/@balancer-labs/v2-solidity-utils/contracts/math/LogExpMath.sol", "3": "contracts/cpmmv-3/GyroThreePoolErrors.sol", "30": "node_modules/@balancer-labs/v2-solidity-utils/contracts/math/Math.sol", "31": "node_modules/@balancer-labs/v2-solidity-utils/contracts/misc/IWETH.sol", "32": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/EIP712.sol", "33": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ERC20.sol", "34": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ERC20Permit.sol", "35": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol", "36": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20Permit.sol", "37": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/SafeMath.sol", "38": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IAsset.sol", "39": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IAuthorizer.sol", "40": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IBasePool.sol", "41": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IFlashLoanRecipient.sol", "42": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IMinimalSwapInfoPool.sol", "43": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IPoolSwapStructs.sol", "44": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IProtocolFeesCollector.sol", "45": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IVault.sol", "5": "interfaces/IGyroConfig.sol", "6": "libraries/GyroConfigKeys.sol", "7": "libraries/GyroPoolMath.sol", "8": "node_modules/@balancer-labs/v2-asset-manager-utils/contracts/IAssetManager.sol", "9": "node_modules/@balancer-labs/v2-pool-utils/contracts/BalancerPoolToken.sol"}, "ast": {"absolutePath": "contracts/cpmmv-3/GyroThreePool.sol", "exportedSymbols": {"GyroThreePool": [1207]}, "id": 1208, "license": "GPL-3.0-or-later", "nodeType": "SourceUnit", "nodes": [{"id": 78, "literals": ["solidity", "^", "0.7", ".0"], "nodeType": "PragmaDirective", "src": "688:23:2"}, {"id": 79, "literals": ["experimental", "ABIEncoderV2"], "nodeType": "PragmaDirective", "src": "712:33:2"}, {"absolutePath": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol", "file": "@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol", "id": 80, "nodeType": "ImportDirective", "scope": 1208, "sourceUnit": 5220, "src": "747:79:2", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/GyroConfigKeys.sol", "file": "../../libraries/GyroConfigKeys.sol", "id": 81, "nodeType": "ImportDirective", "scope": 1208, "sourceUnit": 3992, "src": "828:44:2", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/IGyroConfig.sol", "file": "../../interfaces/IGyroConfig.sol", "id": 82, "nodeType": "ImportDirective", "scope": 1208, "sourceUnit": 3977, "src": "873:42:2", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/GyroPoolMath.sol", "file": "../../libraries/GyroPoolMath.sol", "id": 83, "nodeType": "ImportDirective", "scope": 1208, "sourceUnit": 4797, "src": "916:42:2", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/cpmmv-3/ExtensibleBaseWeightedPool.sol", "file": "./ExtensibleBaseWeightedPool.sol", "id": 84, "nodeType": "ImportDirective", "scope": 1208, "sourceUnit": 3044, "src": "960:42:2", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/cpmmv-3/GyroThreeMath.sol", "file": "./GyroThreeMath.sol", "id": 85, "nodeType": "ImportDirective", "scope": 1208, "sourceUnit": 3899, "src": "1003:29:2", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/cpmmv-3/GyroThreePoolErrors.sol", "file": "./GyroThreePoolErrors.sol", "id": 86, "nodeType": "ImportDirective", "scope": 1208, "sourceUnit": 3917, "src": "1033:35:2", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 88, "name": "ExtensibleBaseWeightedPool", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 3043, "src": "1152:26:2", "typeDescriptions": {"typeIdentifier": "t_contract$_ExtensibleBaseWeightedPool_$3043", "typeString": "contract ExtensibleBaseWeightedPool"}}, "id": 89, "nodeType": "InheritanceSpecifier", "src": "1152:26:2"}], "contractDependencies": [3043, 5479, 5572, 5947, 9199, 9218, 12035, 12128, 12308, 13627, 13691, 13844, 13921, 14024, 14117, 14153, 14164], "contractKind": "contract", "documentation": {"id": 87, "nodeType": "StructuredDocumentation", "src": "1070:55:2", "text": " @dev Gyro Three Pool with immutable weights."}, "fullyImplemented": true, "id": 1207, "linearizedBaseContracts": [1207, 3043, 5947, 9199, 12308, 5479, 12035, 13844, 14117, 14153, 13627, 5572, 12128, 13921, 14164, 9218, 13691, 14024], "name": "GyroThreePool", "nodeType": "ContractDefinition", "nodes": [{"id": 92, "libraryName": {"id": 90, "name": "FixedPoint", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 7697, "src": "1191:10:2", "typeDescriptions": {"typeIdentifier": "t_contract$_FixedPoint_$7697", "typeString": "library FixedPoint"}}, "nodeType": "UsingForDirective", "src": "1185:29:2", "typeName": {"id": 91, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1206:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"id": 95, "libraryName": {"id": 93, "name": "WeightedPoolUserDataHelpers", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 7255, "src": "1225:27:2", "typeDescriptions": {"typeIdentifier": "t_contract$_WeightedPoolUserDataHelpers_$7255", "typeString": "library WeightedPoolUserDataHelpers"}}, "nodeType": "UsingForDirective", "src": "1219:44:2", "typeName": {"id": 94, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "1257:5:2", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}}, {"constant": false, "id": 97, "mutability": "immutable", "name": "_root3Alpha", "nodeType": "VariableDeclaration", "scope": 1207, "src": "1269:37:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 96, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1269:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "private"}, {"constant": false, "functionSelector": "44bbdb55", "id": 99, "mutability": "mutable", "name": "gyroConfig", "nodeType": "VariableDeclaration", "scope": 1207, "src": "1313:29:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$3976", "typeString": "contract IGyroConfig"}, "typeName": {"id": 98, "name": "IGyroConfig", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 3976, "src": "1313:11:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$3976", "typeString": "contract IGyroConfig"}}, "visibility": "public"}, {"constant": true, "id": 102, "mutability": "constant", "name": "_MAX_TOKENS", "nodeType": "VariableDeclaration", "scope": 1207, "src": "1349:40:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 100, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1349:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "33", "id": 101, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1388:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}, "visibility": "private"}, {"constant": false, "id": 104, "mutability": "immutable", "name": "_token0", "nodeType": "VariableDeclaration", "scope": 1207, "src": "1396:33:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$5572", "typeString": "contract IERC20"}, "typeName": {"id": 103, "name": "IERC20", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 5572, "src": "1396:6:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$5572", "typeString": "contract IERC20"}}, "visibility": "internal"}, {"constant": false, "id": 106, "mutability": "immutable", "name": "_token1", "nodeType": "VariableDeclaration", "scope": 1207, "src": "1435:33:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$5572", "typeString": "contract IERC20"}, "typeName": {"id": 105, "name": "IERC20", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 5572, "src": "1435:6:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$5572", "typeString": "contract IERC20"}}, "visibility": "internal"}, {"constant": false, "id": 108, "mutability": "immutable", "name": "_token2", "nodeType": "VariableDeclaration", "scope": 1207, "src": "1474:33:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$5572", "typeString": "contract IERC20"}, "typeName": {"id": 107, "name": "IERC20", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 5572, "src": "1474:6:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$5572", "typeString": "contract IERC20"}}, "visibility": "internal"}, {"constant": false, "id": 110, "mutability": "immutable", "name": "_scalingFactor0", "nodeType": "VariableDeclaration", "scope": 1207, "src": "1864:42:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 109, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1864:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 112, "mutability": "immutable", "name": "_scalingFactor1", "nodeType": "VariableDeclaration", "scope": 1207, "src": "1912:42:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 111, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1912:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 114, "mutability": "immutable", "name": "_scalingFactor2", "nodeType": "VariableDeclaration", "scope": 1207, "src": "1960:42:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 113, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1960:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"body": {"id": 223, "nodeType": "Block", "src": "2474:530:2", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 157, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 154, "name": "tokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 123, "src": "2493:6:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_contract$_IERC20_$5572_$dyn_memory_ptr", "typeString": "contract IERC20[] memory"}}, "id": 155, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "2493:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "33", "id": 156, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2510:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}, "src": "2493:18:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 158, "name": "GyroThreePoolErrors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3916, "src": "2513:19:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroThreePoolErrors_$3916_$", "typeString": "type(library GyroThreePoolErrors)"}}, "id": 159, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "TOKENS_LENGTH_MUST_BE_3", "nodeType": "MemberAccess", "referencedDeclaration": 3915, "src": "2513:43:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 153, "name": "_require", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4814, "src": "2484:8:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 160, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2484:73:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 161, "nodeType": "ExpressionStatement", "src": "2484:73:2"}, {"expression": {"id": 166, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 162, "name": "_token0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 104, "src": "2568:7:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$5572", "typeString": "contract IERC20"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"baseExpression": {"id": 163, "name": "tokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 123, "src": "2578:6:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_contract$_IERC20_$5572_$dyn_memory_ptr", "typeString": "contract IERC20[] memory"}}, "id": 165, "indexExpression": {"hexValue": "30", "id": 164, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2585:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2578:9:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$5572", "typeString": "contract IERC20"}}, "src": "2568:19:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$5572", "typeString": "contract IERC20"}}, "id": 167, "nodeType": "ExpressionStatement", "src": "2568:19:2"}, {"expression": {"id": 172, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 168, "name": "_token1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 106, "src": "2597:7:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$5572", "typeString": "contract IERC20"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"baseExpression": {"id": 169, "name": "tokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 123, "src": "2607:6:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_contract$_IERC20_$5572_$dyn_memory_ptr", "typeString": "contract IERC20[] memory"}}, "id": 171, "indexExpression": {"hexValue": "31", "id": 170, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2614:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2607:9:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$5572", "typeString": "contract IERC20"}}, "src": "2597:19:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$5572", "typeString": "contract IERC20"}}, "id": 173, "nodeType": "ExpressionStatement", "src": "2597:19:2"}, {"expression": {"id": 178, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 174, "name": "_token2", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "2626:7:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$5572", "typeString": "contract IERC20"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"baseExpression": {"id": 175, "name": "tokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 123, "src": "2636:6:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_contract$_IERC20_$5572_$dyn_memory_ptr", "typeString": "contract IERC20[] memory"}}, "id": 177, "indexExpression": {"hexValue": "32", "id": 176, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2643:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2636:9:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$5572", "typeString": "contract IERC20"}}, "src": "2626:19:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$5572", "typeString": "contract IERC20"}}, "id": 179, "nodeType": "ExpressionStatement", "src": "2626:19:2"}, {"expression": {"id": 186, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 180, "name": "_scalingFactor0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 110, "src": "2656:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"baseExpression": {"id": 182, "name": "tokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 123, "src": "2696:6:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_contract$_IERC20_$5572_$dyn_memory_ptr", "typeString": "contract IERC20[] memory"}}, "id": 184, "indexExpression": {"hexValue": "30", "id": 183, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2703:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2696:9:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$5572", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$5572", "typeString": "contract IERC20"}], "id": 181, "name": "_computeScalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8880, "src": "2674:21:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$5572_$returns$_t_uint256_$", "typeString": "function (contract IERC20) view returns (uint256)"}}, "id": 185, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2674:32:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2656:50:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 187, "nodeType": "ExpressionStatement", "src": "2656:50:2"}, {"expression": {"id": 194, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 188, "name": "_scalingFactor1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 112, "src": "2716:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"baseExpression": {"id": 190, "name": "tokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 123, "src": "2756:6:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_contract$_IERC20_$5572_$dyn_memory_ptr", "typeString": "contract IERC20[] memory"}}, "id": 192, "indexExpression": {"hexValue": "31", "id": 191, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2763:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2756:9:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$5572", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$5572", "typeString": "contract IERC20"}], "id": 189, "name": "_computeScalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8880, "src": "2734:21:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$5572_$returns$_t_uint256_$", "typeString": "function (contract IERC20) view returns (uint256)"}}, "id": 193, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2734:32:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2716:50:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 195, "nodeType": "ExpressionStatement", "src": "2716:50:2"}, {"expression": {"id": 202, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 196, "name": "_scalingFactor2", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 114, "src": "2776:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"baseExpression": {"id": 198, "name": "tokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 123, "src": "2816:6:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_contract$_IERC20_$5572_$dyn_memory_ptr", "typeString": "contract IERC20[] memory"}}, "id": 200, "indexExpression": {"hexValue": "32", "id": 199, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2823:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2816:9:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$5572", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$5572", "typeString": "contract IERC20"}], "id": 197, "name": "_computeScalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8880, "src": "2794:21:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$5572_$returns$_t_uint256_$", "typeString": "function (contract IERC20) view returns (uint256)"}}, "id": 201, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2794:32:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2776:50:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 203, "nodeType": "ExpressionStatement", "src": "2776:50:2"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 208, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 205, "name": "root3Alpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 125, "src": "2846:10:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 206, "name": "FixedPoint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7697, "src": "2859:10:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_FixedPoint_$7697_$", "typeString": "type(library FixedPoint)"}}, "id": 207, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ONE", "nodeType": "MemberAccess", "referencedDeclaration": 7374, "src": "2859:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2846:27:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 209, "name": "GyroThreePoolErrors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3916, "src": "2875:19:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroThreePoolErrors_$3916_$", "typeString": "type(library GyroThreePoolErrors)"}}, "id": 210, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "PRICE_BOUNDS_WRONG", "nodeType": "MemberAccess", "referencedDeclaration": 3903, "src": "2875:38:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 204, "name": "_require", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4814, "src": "2837:8:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 211, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2837:77:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 212, "nodeType": "ExpressionStatement", "src": "2837:77:2"}, {"expression": {"id": 215, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 213, "name": "_root3Alpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 97, "src": "2924:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 214, "name": "root3Alpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 125, "src": "2938:10:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2924:24:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 216, "nodeType": "ExpressionStatement", "src": "2924:24:2"}, {"expression": {"id": 221, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 217, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 99, "src": "2958:10:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$3976", "typeString": "contract IGyroConfig"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 219, "name": "configAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 135, "src": "2983:13:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 218, "name": "IGyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3976, "src": "2971:11:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IGyroConfig_$3976_$", "typeString": "type(contract IGyroConfig)"}}, "id": 220, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2971:26:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$3976", "typeString": "contract IGyroConfig"}}, "src": "2958:39:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$3976", "typeString": "contract IGyroConfig"}}, "id": 222, "nodeType": "ExpressionStatement", "src": "2958:39:2"}]}, "id": 224, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"id": 138, "name": "vault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 116, "src": "2358:5:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IVault_$1815", "typeString": "contract IVault"}}, {"id": 139, "name": "name", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 118, "src": "2365:4:2", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, {"id": 140, "name": "symbol", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 120, "src": "2371:6:2", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, {"id": 141, "name": "tokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 123, "src": "2379:6:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_contract$_IERC20_$5572_$dyn_memory_ptr", "typeString": "contract IERC20[] memory"}}, {"arguments": [{"hexValue": "33", "id": 145, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2401:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}], "id": 144, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "2387:13:2", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (address[] memory)"}, "typeName": {"baseType": {"id": 142, "name": "address", "nodeType": "ElementaryTypeName", "src": "2391:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 143, "nodeType": "ArrayTypeName", "src": "2391:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}}, "id": 146, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2387:16:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, {"id": 147, "name": "swapFeePercentage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 127, "src": "2405:17:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 148, "name": "pauseWindowDuration", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 129, "src": "2424:19:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 149, "name": "bufferPeriodDuration", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 131, "src": "2445:20:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 150, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 133, "src": "2467:5:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 151, "modifierName": {"id": 137, "name": "ExtensibleBaseWeightedPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3043, "src": "2331:26:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ExtensibleBaseWeightedPool_$3043_$", "typeString": "type(contract ExtensibleBaseWeightedPool)"}}, "nodeType": "ModifierInvocation", "src": "2331:142:2"}], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 136, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 116, "mutability": "mutable", "name": "vault", "nodeType": "VariableDeclaration", "scope": 224, "src": "2030:12:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IVault_$1815", "typeString": "contract IVault"}, "typeName": {"id": 115, "name": "IVault", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 1815, "src": "2030:6:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IVault_$1815", "typeString": "contract IVault"}}, "visibility": "internal"}, {"constant": false, "id": 118, "mutability": "mutable", "name": "name", "nodeType": "VariableDeclaration", "scope": 224, "src": "2052:18:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 117, "name": "string", "nodeType": "ElementaryTypeName", "src": "2052:6:2", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 120, "mutability": "mutable", "name": "symbol", "nodeType": "VariableDeclaration", "scope": 224, "src": "2080:20:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 119, "name": "string", "nodeType": "ElementaryTypeName", "src": "2080:6:2", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 123, "mutability": "mutable", "name": "tokens", "nodeType": "VariableDeclaration", "scope": 224, "src": "2110:22:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_contract$_IERC20_$5572_$dyn_memory_ptr", "typeString": "contract IERC20[]"}, "typeName": {"baseType": {"id": 121, "name": "IERC20", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 5572, "src": "2110:6:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$5572", "typeString": "contract IERC20"}}, "id": 122, "nodeType": "ArrayTypeName", "src": "2110:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_contract$_IERC20_$5572_$dyn_storage_ptr", "typeString": "contract IERC20[]"}}, "visibility": "internal"}, {"constant": false, "id": 125, "mutability": "mutable", "name": "root3Alpha", "nodeType": "VariableDeclaration", "scope": 224, "src": "2142:18:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 124, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2142:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 127, "mutability": "mutable", "name": "swapFeePercentage", "nodeType": "VariableDeclaration", "scope": 224, "src": "2170:25:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 126, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2170:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 129, "mutability": "mutable", "name": "pauseWindowDuration", "nodeType": "VariableDeclaration", "scope": 224, "src": "2205:27:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 128, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2205:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 131, "mutability": "mutable", "name": "bufferPeriodDuration", "nodeType": "VariableDeclaration", "scope": 224, "src": "2242:28:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 130, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2242:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 133, "mutability": "mutable", "name": "owner", "nodeType": "VariableDeclaration", "scope": 224, "src": "2280:13:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 132, "name": "address", "nodeType": "ElementaryTypeName", "src": "2280:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 135, "mutability": "mutable", "name": "configAddress", "nodeType": "VariableDeclaration", "scope": 224, "src": "2303:21:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 134, "name": "address", "nodeType": "ElementaryTypeName", "src": "2303:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "2020:310:2"}, "returnParameters": {"id": 152, "nodeType": "ParameterList", "parameters": [], "src": "2474:0:2"}, "scope": 1207, "src": "2009:995:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 231, "nodeType": "Block", "src": "3067:35:2", "statements": [{"expression": {"id": 229, "name": "_root3Alpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 97, "src": "3084:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 228, "id": 230, "nodeType": "Return", "src": "3077:18:2"}]}, "functionSelector": "d60ca603", "id": 232, "implemented": true, "kind": "function", "modifiers": [], "name": "getRoot3Alpha", "nodeType": "FunctionDefinition", "parameters": {"id": 225, "nodeType": "ParameterList", "parameters": [], "src": "3032:2:2"}, "returnParameters": {"id": 228, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 227, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 232, "src": "3058:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 226, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3058:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3057:9:2"}, "scope": 1207, "src": "3010:92:2", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"baseFunctions": [1888], "body": {"id": 245, "nodeType": "Block", "src": "3387:42:2", "statements": [{"expression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 243, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 240, "name": "FixedPoint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7697, "src": "3404:10:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_FixedPoint_$7697_$", "typeString": "type(library FixedPoint)"}}, "id": 241, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ONE", "nodeType": "MemberAccess", "referencedDeclaration": 7374, "src": "3404:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"hexValue": "33", "id": 242, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3421:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}, "src": "3404:18:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 239, "id": 244, "nodeType": "Return", "src": "3397:25:2"}]}, "id": 246, "implemented": true, "kind": "function", "modifiers": [], "name": "_getNormalizedWeight", "nodeType": "FunctionDefinition", "overrides": {"id": 236, "nodeType": "OverrideSpecifier", "overrides": [], "src": "3360:8:2"}, "parameters": {"id": 235, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 234, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 246, "src": "3330:6:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$5572", "typeString": "contract IERC20"}, "typeName": {"id": 233, "name": "IERC20", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 5572, "src": "3330:6:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$5572", "typeString": "contract IERC20"}}, "visibility": "internal"}], "src": "3329:8:2"}, "returnParameters": {"id": 239, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 238, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 246, "src": "3378:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 237, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3378:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3377:9:2"}, "scope": 1207, "src": "3300:129:2", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"baseFunctions": [1895], "body": {"id": 294, "nodeType": "Block", "src": "3526:312:2", "statements": [{"assignments": [257], "declarations": [{"constant": false, "id": 257, "mutability": "mutable", "name": "normalizedWeights", "nodeType": "VariableDeclaration", "scope": 294, "src": "3536:34:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 255, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3536:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 256, "nodeType": "ArrayTypeName", "src": "3536:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 263, "initialValue": {"arguments": [{"hexValue": "33", "id": 261, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3587:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}], "id": 260, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "3573:13:2", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 258, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3577:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 259, "nodeType": "ArrayTypeName", "src": "3577:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 262, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3573:16:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "3536:53:2"}, {"id": 291, "nodeType": "Block", "src": "3627:170:2", "statements": [{"expression": {"id": 271, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 264, "name": "normalizedWeights", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 257, "src": "3641:17:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 266, "indexExpression": {"hexValue": "30", "id": 265, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3659:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "3641:20:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 270, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 267, "name": "FixedPoint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7697, "src": "3664:10:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_FixedPoint_$7697_$", "typeString": "type(library FixedPoint)"}}, "id": 268, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ONE", "nodeType": "MemberAccess", "referencedDeclaration": 7374, "src": "3664:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"hexValue": "33", "id": 269, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3679:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}, "src": "3664:16:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3641:39:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 272, "nodeType": "ExpressionStatement", "src": "3641:39:2"}, {"expression": {"id": 280, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 273, "name": "normalizedWeights", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 257, "src": "3694:17:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 275, "indexExpression": {"hexValue": "31", "id": 274, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3712:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "3694:20:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 279, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 276, "name": "FixedPoint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7697, "src": "3717:10:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_FixedPoint_$7697_$", "typeString": "type(library FixedPoint)"}}, "id": 277, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ONE", "nodeType": "MemberAccess", "referencedDeclaration": 7374, "src": "3717:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"hexValue": "33", "id": 278, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3732:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}, "src": "3717:16:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3694:39:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 281, "nodeType": "ExpressionStatement", "src": "3694:39:2"}, {"expression": {"id": 289, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 282, "name": "normalizedWeights", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 257, "src": "3747:17:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 284, "indexExpression": {"hexValue": "32", "id": 283, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3765:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "3747:20:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 288, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 285, "name": "FixedPoint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7697, "src": "3770:10:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_FixedPoint_$7697_$", "typeString": "type(library FixedPoint)"}}, "id": 286, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ONE", "nodeType": "MemberAccess", "referencedDeclaration": 7374, "src": "3770:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"hexValue": "33", "id": 287, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3785:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}, "src": "3770:16:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3747:39:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 290, "nodeType": "ExpressionStatement", "src": "3747:39:2"}]}, {"expression": {"id": 292, "name": "normalizedWeights", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 257, "src": "3814:17:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "functionReturnParameters": 252, "id": 293, "nodeType": "Return", "src": "3807:24:2"}]}, "id": 295, "implemented": true, "kind": "function", "modifiers": [], "name": "_getNormalizedWeights", "nodeType": "FunctionDefinition", "overrides": {"id": 248, "nodeType": "OverrideSpecifier", "overrides": [], "src": "3490:8:2"}, "parameters": {"id": 247, "nodeType": "ParameterList", "parameters": [], "src": "3465:2:2"}, "returnParameters": {"id": 252, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 251, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 295, "src": "3508:16:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 249, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3508:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 250, "nodeType": "ArrayTypeName", "src": "3508:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "3507:18:2"}, "scope": 1207, "src": "3435:403:2", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"baseFunctions": [1904], "body": {"id": 310, "nodeType": "Block", "src": "4067:52:2", "statements": [{"expression": {"components": [{"arguments": [], "expression": {"argumentTypes": [], "id": 305, "name": "_getNormalizedWeights", "nodeType": "Identifier", "overloadedDeclarations": [295], "referencedDeclaration": 295, "src": "4085:21:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function () view returns (uint256[] memory)"}}, "id": 306, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4085:23:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"hexValue": "30", "id": 307, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4110:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "id": 308, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4084:28:2", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_rational_0_by_1_$", "typeString": "tuple(uint256[] memory,int_const 0)"}}, "functionReturnParameters": 304, "id": 309, "nodeType": "Return", "src": "4077:35:2"}]}, "documentation": {"id": 296, "nodeType": "StructuredDocumentation", "src": "3844:101:2", "text": "@dev Since all weights are always the same, the max-weight token is arbitrary. We return token 0."}, "id": 311, "implemented": true, "kind": "function", "modifiers": [], "name": "_getNormalizedWeightsAndMaxWeightIndex", "nodeType": "FunctionDefinition", "overrides": {"id": 298, "nodeType": "OverrideSpecifier", "overrides": [], "src": "4022:8:2"}, "parameters": {"id": 297, "nodeType": "ParameterList", "parameters": [], "src": "3997:2:2"}, "returnParameters": {"id": 304, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 301, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 311, "src": "4040:16:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 299, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4040:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 300, "nodeType": "ArrayTypeName", "src": "4040:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 303, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 311, "src": "4058:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 302, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4058:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4039:27:2"}, "scope": 1207, "src": "3950:169:2", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"baseFunctions": [8186], "body": {"id": 319, "nodeType": "Block", "src": "4199:35:2", "statements": [{"expression": {"id": 317, "name": "_MAX_TOKENS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 102, "src": "4216:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 316, "id": 318, "nodeType": "Return", "src": "4209:18:2"}]}, "id": 320, "implemented": true, "kind": "function", "modifiers": [], "name": "_getMaxTokens", "nodeType": "FunctionDefinition", "overrides": {"id": 313, "nodeType": "OverrideSpecifier", "overrides": [], "src": "4172:8:2"}, "parameters": {"id": 312, "nodeType": "ParameterList", "parameters": [], "src": "4147:2:2"}, "returnParameters": {"id": 316, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 315, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 320, "src": "4190:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 314, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4190:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4189:9:2"}, "scope": 1207, "src": "4125:109:2", "stateMutability": "pure", "virtual": true, "visibility": "internal"}, {"baseFunctions": [8181], "body": {"id": 328, "nodeType": "Block", "src": "4316:25:2", "statements": [{"expression": {"hexValue": "33", "id": 326, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4333:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}, "functionReturnParameters": 325, "id": 327, "nodeType": "Return", "src": "4326:8:2"}]}, "id": 329, "implemented": true, "kind": "function", "modifiers": [], "name": "_getTotalTokens", "nodeType": "FunctionDefinition", "overrides": {"id": 322, "nodeType": "OverrideSpecifier", "overrides": [], "src": "4289:8:2"}, "parameters": {"id": 321, "nodeType": "ParameterList", "parameters": [], "src": "4264:2:2"}, "returnParameters": {"id": 325, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 324, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 329, "src": "4307:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 323, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4307:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4306:9:2"}, "scope": 1207, "src": "4240:101:2", "stateMutability": "pure", "virtual": true, "visibility": "internal"}, {"baseFunctions": [8888], "body": {"id": 371, "nodeType": "Block", "src": "4598:322:2", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_contract$_IERC20_$5572", "typeString": "contract IERC20"}, "id": 340, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 338, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 332, "src": "4612:5:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$5572", "typeString": "contract IERC20"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 339, "name": "_token0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 104, "src": "4621:7:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$5572", "typeString": "contract IERC20"}}, "src": "4612:16:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"condition": {"commonType": {"typeIdentifier": "t_contract$_IERC20_$5572", "typeString": "contract IERC20"}, "id": 348, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 346, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 332, "src": "4696:5:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$5572", "typeString": "contract IERC20"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 347, "name": "_token1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 106, "src": "4705:7:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$5572", "typeString": "contract IERC20"}}, "src": "4696:16:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"condition": {"commonType": {"typeIdentifier": "t_contract$_IERC20_$5572", "typeString": "contract IERC20"}, "id": 356, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 354, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 332, "src": "4780:5:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$5572", "typeString": "contract IERC20"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 355, "name": "_token2", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "4789:7:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$5572", "typeString": "contract IERC20"}}, "src": "4780:16:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 367, "nodeType": "Block", "src": "4860:54:2", "statements": [{"expression": {"arguments": [{"expression": {"id": 363, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5219, "src": "4882:6:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$5219_$", "typeString": "type(library Errors)"}}, "id": 364, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "INVALID_TOKEN", "nodeType": "MemberAccess", "referencedDeclaration": 4930, "src": "4882:20:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 362, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4822, "src": "4874:7:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$", "typeString": "function (uint256) pure"}}, "id": 365, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4874:29:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 366, "nodeType": "ExpressionStatement", "src": "4874:29:2"}]}, "id": 368, "nodeType": "IfStatement", "src": "4776:138:2", "trueBody": {"id": 361, "nodeType": "Block", "src": "4798:56:2", "statements": [{"expression": {"id": 359, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 357, "name": "scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 336, "src": "4812:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 358, "name": "_scalingFactor2", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 114, "src": "4828:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4812:31:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 360, "nodeType": "ExpressionStatement", "src": "4812:31:2"}]}}, "id": 369, "nodeType": "IfStatement", "src": "4692:222:2", "trueBody": {"id": 353, "nodeType": "Block", "src": "4714:56:2", "statements": [{"expression": {"id": 351, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 349, "name": "scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 336, "src": "4728:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 350, "name": "_scalingFactor1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 112, "src": "4744:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4728:31:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 352, "nodeType": "ExpressionStatement", "src": "4728:31:2"}]}}, "id": 370, "nodeType": "IfStatement", "src": "4608:306:2", "trueBody": {"id": 345, "nodeType": "Block", "src": "4630:56:2", "statements": [{"expression": {"id": 343, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 341, "name": "scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 336, "src": "4644:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 342, "name": "_scalingFactor0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 110, "src": "4660:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4644:31:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 344, "nodeType": "ExpressionStatement", "src": "4644:31:2"}]}}]}, "documentation": {"id": 330, "nodeType": "StructuredDocumentation", "src": "4347:145:2", "text": " @dev Returns the scaling factor for one of the Pool's tokens. Reverts if `token` is not a token registered by the\n Pool."}, "id": 372, "implemented": true, "kind": "function", "modifiers": [], "name": "_scalingFactor", "nodeType": "FunctionDefinition", "overrides": {"id": 334, "nodeType": "OverrideSpecifier", "overrides": [], "src": "4557:8:2"}, "parameters": {"id": 333, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 332, "mutability": "mutable", "name": "token", "nodeType": "VariableDeclaration", "scope": 372, "src": "4521:12:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$5572", "typeString": "contract IERC20"}, "typeName": {"id": 331, "name": "IERC20", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 5572, "src": "4521:6:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$5572", "typeString": "contract IERC20"}}, "visibility": "internal"}], "src": "4520:14:2"}, "returnParameters": {"id": 337, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 336, "mutability": "mutable", "name": "scalingFactor", "nodeType": "VariableDeclaration", "scope": 372, "src": "4575:21:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 335, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4575:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4574:23:2"}, "scope": 1207, "src": "4497:423:2", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"baseFunctions": [8895], "body": {"id": 416, "nodeType": "Block", "src": "5011:353:2", "statements": [{"assignments": [380], "declarations": [{"constant": false, "id": 380, "mutability": "mutable", "name": "totalTokens", "nodeType": "VariableDeclaration", "scope": 416, "src": "5021:19:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 379, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5021:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 383, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 381, "name": "_getTotalTokens", "nodeType": "Identifier", "overloadedDeclarations": [329], "referencedDeclaration": 329, "src": "5043:15:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$", "typeString": "function () pure returns (uint256)"}}, "id": 382, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5043:17:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "5021:39:2"}, {"assignments": [388], "declarations": [{"constant": false, "id": 388, "mutability": "mutable", "name": "scalingFactors", "nodeType": "VariableDeclaration", "scope": 416, "src": "5070:31:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 386, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5070:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 387, "nodeType": "ArrayTypeName", "src": "5070:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 394, "initialValue": {"arguments": [{"id": 392, "name": "totalTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 380, "src": "5118:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 391, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "5104:13:2", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 389, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5108:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 390, "nodeType": "ArrayTypeName", "src": "5108:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 393, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5104:26:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "5070:60:2"}, {"id": 413, "nodeType": "Block", "src": "5168:158:2", "statements": [{"expression": {"id": 399, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 395, "name": "scalingFactors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 388, "src": "5182:14:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 397, "indexExpression": {"hexValue": "30", "id": 396, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5197:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "5182:17:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 398, "name": "_scalingFactor0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 110, "src": "5202:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5182:35:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 400, "nodeType": "ExpressionStatement", "src": "5182:35:2"}, {"expression": {"id": 405, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 401, "name": "scalingFactors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 388, "src": "5231:14:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 403, "indexExpression": {"hexValue": "31", "id": 402, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5246:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "5231:17:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 404, "name": "_scalingFactor1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 112, "src": "5251:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5231:35:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 406, "nodeType": "ExpressionStatement", "src": "5231:35:2"}, {"expression": {"id": 411, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 407, "name": "scalingFactors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 388, "src": "5280:14:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 409, "indexExpression": {"hexValue": "32", "id": 408, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5295:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "5280:17:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 410, "name": "_scalingFactor2", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 114, "src": "5300:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5280:35:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 412, "nodeType": "ExpressionStatement", "src": "5280:35:2"}]}, {"expression": {"id": 414, "name": "scalingFactors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 388, "src": "5343:14:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "functionReturnParameters": 378, "id": 415, "nodeType": "Return", "src": "5336:21:2"}]}, "id": 417, "implemented": true, "kind": "function", "modifiers": [], "name": "_scalingFactors", "nodeType": "FunctionDefinition", "overrides": {"id": 374, "nodeType": "OverrideSpecifier", "overrides": [], "src": "4975:8:2"}, "parameters": {"id": 373, "nodeType": "ParameterList", "parameters": [], "src": "4950:2:2"}, "returnParameters": {"id": 378, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 377, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 417, "src": "4993:16:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 375, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4993:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 376, "nodeType": "ArrayTypeName", "src": "4993:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "4992:18:2"}, "scope": 1207, "src": "4926:438:2", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"baseFunctions": [1992], "body": {"id": 443, "nodeType": "Block", "src": "5582:172:2", "statements": [{"assignments": [432], "declarations": [{"constant": false, "id": 432, "mutability": "mutable", "name": "virtualOffset", "nodeType": "VariableDeclaration", "scope": 443, "src": "5592:21:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 431, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5592:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 435, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 433, "name": "_calculateVirtualOffset", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 515, "src": "5616:23:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 434, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5616:25:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "5592:49:2"}, {"expression": {"arguments": [{"id": 437, "name": "swapRequest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 419, "src": "5673:11:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$14023_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, {"id": 438, "name": "currentBalanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 421, "src": "5686:21:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 439, "name": "currentBalanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 423, "src": "5709:22:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 440, "name": "virtualOffset", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 432, "src": "5733:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_SwapRequest_$14023_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 436, "name": "_onSwapGivenIn", "nodeType": "Identifier", "overloadedDeclarations": [444, 569], "referencedDeclaration": 569, "src": "5658:14:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_SwapRequest_$14023_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (struct IPoolSwapStructs.SwapRequest memory,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 441, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5658:89:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 430, "id": 442, "nodeType": "Return", "src": "5651:96:2"}]}, "id": 444, "implemented": true, "kind": "function", "modifiers": [{"id": 427, "modifierName": {"id": 426, "name": "whenNotPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12196, "src": "5550:13:2", "typeDescriptions": {"typeIdentifier": "t_modifier$__$", "typeString": "modifier ()"}}, "nodeType": "ModifierInvocation", "src": "5550:13:2"}], "name": "_onSwapGivenIn", "nodeType": "FunctionDefinition", "overrides": {"id": 425, "nodeType": "OverrideSpecifier", "overrides": [], "src": "5541:8:2"}, "parameters": {"id": 424, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 419, "mutability": "mutable", "name": "swapRequest", "nodeType": "VariableDeclaration", "scope": 444, "src": "5403:30:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$14023_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 418, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 14023, "src": "5403:11:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$14023_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 421, "mutability": "mutable", "name": "currentBalanceTokenIn", "nodeType": "VariableDeclaration", "scope": 444, "src": "5443:29:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 420, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5443:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 423, "mutability": "mutable", "name": "currentBalanceTokenOut", "nodeType": "VariableDeclaration", "scope": 444, "src": "5482:30:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 422, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5482:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5393:125:2"}, "returnParameters": {"id": 430, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 429, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 444, "src": "5573:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 428, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5573:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5572:9:2"}, "scope": 1207, "src": "5370:384:2", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"baseFunctions": [2023], "body": {"id": 470, "nodeType": "Block", "src": "5973:173:2", "statements": [{"assignments": [459], "declarations": [{"constant": false, "id": 459, "mutability": "mutable", "name": "virtualOffset", "nodeType": "VariableDeclaration", "scope": 470, "src": "5983:21:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 458, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5983:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 462, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 460, "name": "_calculateVirtualOffset", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 515, "src": "6007:23:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 461, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6007:25:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "5983:49:2"}, {"expression": {"arguments": [{"id": 464, "name": "swapRequest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 446, "src": "6065:11:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$14023_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, {"id": 465, "name": "currentBalanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 448, "src": "6078:21:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 466, "name": "currentBalanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 450, "src": "6101:22:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 467, "name": "virtualOffset", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 459, "src": "6125:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_SwapRequest_$14023_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 463, "name": "_onSwapGivenOut", "nodeType": "Identifier", "overloadedDeclarations": [471, 592], "referencedDeclaration": 592, "src": "6049:15:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_SwapRequest_$14023_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (struct IPoolSwapStructs.SwapRequest memory,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 468, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6049:90:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 457, "id": 469, "nodeType": "Return", "src": "6042:97:2"}]}, "id": 471, "implemented": true, "kind": "function", "modifiers": [{"id": 454, "modifierName": {"id": 453, "name": "whenNotPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12196, "src": "5941:13:2", "typeDescriptions": {"typeIdentifier": "t_modifier$__$", "typeString": "modifier ()"}}, "nodeType": "ModifierInvocation", "src": "5941:13:2"}], "name": "_onSwapGivenOut", "nodeType": "FunctionDefinition", "overrides": {"id": 452, "nodeType": "OverrideSpecifier", "overrides": [], "src": "5932:8:2"}, "parameters": {"id": 451, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 446, "mutability": "mutable", "name": "swapRequest", "nodeType": "VariableDeclaration", "scope": 471, "src": "5794:30:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$14023_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 445, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 14023, "src": "5794:11:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$14023_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 448, "mutability": "mutable", "name": "currentBalanceTokenIn", "nodeType": "VariableDeclaration", "scope": 471, "src": "5834:29:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 447, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5834:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 450, "mutability": "mutable", "name": "currentBalanceTokenOut", "nodeType": "VariableDeclaration", "scope": 471, "src": "5873:30:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 449, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5873:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5784:125:2"}, "returnParameters": {"id": 457, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 456, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 471, "src": "5964:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 455, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5964:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5963:9:2"}, "scope": 1207, "src": "5760:386:2", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"body": {"id": 514, "nodeType": "Block", "src": "6325:322:2", "statements": [{"assignments": [null, 481, null], "declarations": [null, {"constant": false, "id": 481, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 514, "src": "6338:25:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 479, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6338:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 480, "nodeType": "ArrayTypeName", "src": "6338:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, null], "id": 488, "initialValue": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 485, "name": "getPoolId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8176, "src": "6394:9:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$", "typeString": "function () view returns (bytes32)"}}, "id": 486, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6394:11:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 482, "name": "getVault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11864, "src": "6369:8:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IVault_$1815_$", "typeString": "function () view returns (contract IVault)"}}, "id": 483, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6369:10:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IVault_$1815", "typeString": "contract IVault"}}, "id": 484, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getPoolTokens", "nodeType": "MemberAccess", "referencedDeclaration": 1571, "src": "6369:24:2", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_array$_t_contract$_IERC20_$5572_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$", "typeString": "function (bytes32) view external returns (contract IERC20[] memory,uint256[] memory,uint256)"}}, "id": 487, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6369:37:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_array$_t_contract$_IERC20_$5572_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$", "typeString": "tuple(contract IERC20[] memory,uint256[] memory,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "6335:71:2"}, {"expression": {"arguments": [{"id": 490, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 481, "src": "6430:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 491, "name": "_scalingFactors", "nodeType": "Identifier", "overloadedDeclarations": [417], "referencedDeclaration": 417, "src": "6440:15:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function () view returns (uint256[] memory)"}}, "id": 492, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6440:17:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}], "id": 489, "name": "_upscaleArray", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8960, "src": "6416:13:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$", "typeString": "function (uint256[] memory,uint256[] memory) view"}}, "id": 493, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6416:42:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 494, "nodeType": "ExpressionStatement", "src": "6416:42:2"}, {"assignments": [496], "declarations": [{"constant": false, "id": 496, "mutability": "mutable", "name": "root3Alpha", "nodeType": "VariableDeclaration", "scope": 514, "src": "6468:18:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 495, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6468:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 498, "initialValue": {"id": 497, "name": "_root3Alpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 97, "src": "6489:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6468:32:2"}, {"assignments": [500], "declarations": [{"constant": false, "id": 500, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 514, "src": "6510:17:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 499, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6510:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 506, "initialValue": {"arguments": [{"id": 503, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 481, "src": "6564:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 504, "name": "root3Alpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 496, "src": "6574:10:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 501, "name": "GyroThreeMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3898, "src": "6530:13:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroThreeMath_$3898_$", "typeString": "type(library GyroThreeMath)"}}, "id": 502, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 3108, "src": "6530:33:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256) pure returns (uint256)"}}, "id": 505, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6530:55:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6510:75:2"}, {"expression": {"id": 512, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 507, "name": "virtualOffset", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 475, "src": "6595:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 510, "name": "root3Alpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 496, "src": "6629:10:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 508, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 500, "src": "6611:9:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 509, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mulDown", "nodeType": "MemberAccess", "referencedDeclaration": 7466, "src": "6611:17:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 511, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6611:29:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6595:45:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 513, "nodeType": "ExpressionStatement", "src": "6595:45:2"}]}, "documentation": {"id": 472, "nodeType": "StructuredDocumentation", "src": "6152:88:2", "text": "@dev Calculate the offset that that takes real reserves to virtual reserves."}, "id": 515, "implemented": true, "kind": "function", "modifiers": [], "name": "_calculateVirtualOffset", "nodeType": "FunctionDefinition", "parameters": {"id": 473, "nodeType": "ParameterList", "parameters": [], "src": "6277:2:2"}, "returnParameters": {"id": 476, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 475, "mutability": "mutable", "name": "virtualOffset", "nodeType": "VariableDeclaration", "scope": 515, "src": "6302:21:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 474, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6302:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6301:23:2"}, "scope": 1207, "src": "6245:402:2", "stateMutability": "view", "virtual": false, "visibility": "private"}, {"body": {"id": 545, "nodeType": "Block", "src": "6766:213:2", "statements": [{"assignments": [null, 525, null], "declarations": [null, {"constant": false, "id": 525, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 545, "src": "6779:25:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 523, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6779:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 524, "nodeType": "ArrayTypeName", "src": "6779:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, null], "id": 532, "initialValue": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 529, "name": "getPoolId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8176, "src": "6835:9:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$", "typeString": "function () view returns (bytes32)"}}, "id": 530, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6835:11:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 526, "name": "getVault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11864, "src": "6810:8:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IVault_$1815_$", "typeString": "function () view returns (contract IVault)"}}, "id": 527, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6810:10:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IVault_$1815", "typeString": "contract IVault"}}, "id": 528, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getPoolTokens", "nodeType": "MemberAccess", "referencedDeclaration": 1571, "src": "6810:24:2", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_array$_t_contract$_IERC20_$5572_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$", "typeString": "function (bytes32) view external returns (contract IERC20[] memory,uint256[] memory,uint256)"}}, "id": 531, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6810:37:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_array$_t_contract$_IERC20_$5572_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$", "typeString": "tuple(contract IERC20[] memory,uint256[] memory,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "6776:71:2"}, {"expression": {"arguments": [{"id": 534, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 525, "src": "6871:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 535, "name": "_scalingFactors", "nodeType": "Identifier", "overloadedDeclarations": [417], "referencedDeclaration": 417, "src": "6881:15:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function () view returns (uint256[] memory)"}}, "id": 536, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6881:17:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}], "id": 533, "name": "_upscaleArray", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8960, "src": "6857:13:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$", "typeString": "function (uint256[] memory,uint256[] memory) view"}}, "id": 537, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6857:42:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 538, "nodeType": "ExpressionStatement", "src": "6857:42:2"}, {"expression": {"arguments": [{"id": 541, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 525, "src": "6950:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 542, "name": "_root3Alpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 97, "src": "6960:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 539, "name": "GyroThreeMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3898, "src": "6916:13:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroThreeMath_$3898_$", "typeString": "type(library GyroThreeMath)"}}, "id": 540, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 3108, "src": "6916:33:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256) pure returns (uint256)"}}, "id": 543, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6916:56:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 520, "id": 544, "nodeType": "Return", "src": "6909:63:2"}]}, "documentation": {"id": 516, "nodeType": "StructuredDocumentation", "src": "6653:36:2", "text": "@dev Calculate the invariant. "}, "id": 546, "implemented": true, "kind": "function", "modifiers": [], "name": "_calculateInvariant", "nodeType": "FunctionDefinition", "parameters": {"id": 517, "nodeType": "ParameterList", "parameters": [], "src": "6722:2:2"}, "returnParameters": {"id": 520, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 519, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 546, "src": "6747:17:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 518, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6747:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6746:19:2"}, "scope": 1207, "src": "6694:285:2", "stateMutability": "view", "virtual": false, "visibility": "private"}, {"body": {"id": 568, "nodeType": "Block", "src": "7196:135:2", "statements": [{"expression": {"arguments": [{"id": 561, "name": "currentBalanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 550, "src": "7243:21:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 562, "name": "currentBalanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 552, "src": "7266:22:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 563, "name": "swapRequest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 548, "src": "7290:11:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$14023_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 564, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 14012, "src": "7290:18:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 565, "name": "virtualOffset", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 554, "src": "7310:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 559, "name": "GyroThreeMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3898, "src": "7213:13:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroThreeMath_$3898_$", "typeString": "type(library GyroThreeMath)"}}, "id": 560, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcOutGivenIn", "nodeType": "MemberAccess", "referencedDeclaration": 3820, "src": "7213:29:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 566, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7213:111:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 558, "id": 567, "nodeType": "Return", "src": "7206:118:2"}]}, "id": 569, "implemented": true, "kind": "function", "modifiers": [], "name": "_onSwapGivenIn", "nodeType": "FunctionDefinition", "parameters": {"id": 555, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 548, "mutability": "mutable", "name": "swapRequest", "nodeType": "VariableDeclaration", "scope": 569, "src": "7018:30:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$14023_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 547, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 14023, "src": "7018:11:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$14023_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 550, "mutability": "mutable", "name": "currentBalanceTokenIn", "nodeType": "VariableDeclaration", "scope": 569, "src": "7058:29:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 549, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7058:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 552, "mutability": "mutable", "name": "currentBalanceTokenOut", "nodeType": "VariableDeclaration", "scope": 569, "src": "7097:30:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 551, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7097:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 554, "mutability": "mutable", "name": "virtualOffset", "nodeType": "VariableDeclaration", "scope": 569, "src": "7137:21:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 553, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7137:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7008:156:2"}, "returnParameters": {"id": 558, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 557, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 569, "src": "7187:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 556, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7187:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7186:9:2"}, "scope": 1207, "src": "6985:346:2", "stateMutability": "pure", "virtual": false, "visibility": "private"}, {"body": {"id": 591, "nodeType": "Block", "src": "7549:135:2", "statements": [{"expression": {"arguments": [{"id": 584, "name": "currentBalanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 573, "src": "7596:21:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 585, "name": "currentBalanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 575, "src": "7619:22:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 586, "name": "swapRequest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 571, "src": "7643:11:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$14023_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 587, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 14012, "src": "7643:18:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 588, "name": "virtualOffset", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 577, "src": "7663:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 582, "name": "GyroThreeMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3898, "src": "7566:13:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroThreeMath_$3898_$", "typeString": "type(library GyroThreeMath)"}}, "id": 583, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcInGivenOut", "nodeType": "MemberAccess", "referencedDeclaration": 3897, "src": "7566:29:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 589, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7566:111:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 581, "id": 590, "nodeType": "Return", "src": "7559:118:2"}]}, "id": 592, "implemented": true, "kind": "function", "modifiers": [], "name": "_onSwapGivenOut", "nodeType": "FunctionDefinition", "parameters": {"id": 578, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 571, "mutability": "mutable", "name": "swapRequest", "nodeType": "VariableDeclaration", "scope": 592, "src": "7371:30:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$14023_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 570, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 14023, "src": "7371:11:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$14023_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 573, "mutability": "mutable", "name": "currentBalanceTokenIn", "nodeType": "VariableDeclaration", "scope": 592, "src": "7411:29:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 572, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7411:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 575, "mutability": "mutable", "name": "currentBalanceTokenOut", "nodeType": "VariableDeclaration", "scope": 592, "src": "7450:30:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 574, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7450:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 577, "mutability": "mutable", "name": "virtualOffset", "nodeType": "VariableDeclaration", "scope": 592, "src": "7490:21:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 576, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7490:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7361:156:2"}, "returnParameters": {"id": 581, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 580, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 592, "src": "7540:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 579, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7540:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7539:9:2"}, "scope": 1207, "src": "7337:347:2", "stateMutability": "pure", "virtual": false, "visibility": "private"}, {"baseFunctions": [2120], "body": {"id": 679, "nodeType": "Block", "src": "8719:849:2", "statements": [{"assignments": [618], "declarations": [{"constant": false, "id": 618, "mutability": "mutable", "name": "kind", "nodeType": "VariableDeclaration", "scope": 679, "src": "8729:30:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$9242", "typeString": "enum BaseWeightedPool.JoinKind"}, "typeName": {"id": 617, "name": "BaseWeightedPool.JoinKind", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9242, "src": "8729:25:2", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$9242", "typeString": "enum BaseWeightedPool.JoinKind"}}, "visibility": "internal"}], "id": 622, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 619, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 604, "src": "8762:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 620, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "joinKind", "nodeType": "MemberAccess", "referencedDeclaration": 7065, "src": "8762:17:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_enum$_JoinKind_$9242_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (enum BaseWeightedPool.JoinKind)"}}, "id": 621, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8762:19:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$9242", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "VariableDeclarationStatement", "src": "8729:52:2"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_JoinKind_$9242", "typeString": "enum BaseWeightedPool.JoinKind"}, "id": 628, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 624, "name": "kind", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 618, "src": "8800:4:2", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$9242", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 625, "name": "BaseWeightedPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10443, "src": "8808:16:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BaseWeightedPool_$10443_$", "typeString": "type(contract BaseWeightedPool)"}}, "id": 626, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "JoinKind", "nodeType": "MemberAccess", "referencedDeclaration": 9242, "src": "8808:25:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_JoinKind_$9242_$", "typeString": "type(enum BaseWeightedPool.JoinKind)"}}, "id": 627, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "INIT", "nodeType": "MemberAccess", "src": "8808:30:2", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$9242", "typeString": "enum BaseWeightedPool.JoinKind"}}, "src": "8800:38:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 629, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5219, "src": "8840:6:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$5219_$", "typeString": "type(library Errors)"}}, "id": 630, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNINITIALIZED", "nodeType": "MemberAccess", "referencedDeclaration": 4888, "src": "8840:20:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 623, "name": "_require", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4814, "src": "8791:8:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 631, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8791:70:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 632, "nodeType": "ExpressionStatement", "src": "8791:70:2"}, {"assignments": [637], "declarations": [{"constant": false, "id": 637, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 679, "src": "8872:26:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 635, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8872:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 636, "nodeType": "ArrayTypeName", "src": "8872:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 641, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 638, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 604, "src": "8901:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 639, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "initialAmountsIn", "nodeType": "MemberAccess", "referencedDeclaration": 7104, "src": "8901:25:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (uint256[] memory)"}}, "id": 640, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8901:27:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "8872:56:2"}, {"expression": {"arguments": [{"expression": {"id": 645, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 637, "src": "8974:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 646, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "8974:16:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "33", "id": 647, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8992:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}], "expression": {"id": 642, "name": "InputHelpers", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7367, "src": "8938:12:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_InputHelpers_$7367_$", "typeString": "type(library InputHelpers)"}}, "id": 644, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ensureInputLengthMatch", "nodeType": "MemberAccess", "referencedDeclaration": 7275, "src": "8938:35:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256) pure"}}, "id": 648, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8938:56:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 649, "nodeType": "ExpressionStatement", "src": "8938:56:2"}, {"expression": {"arguments": [{"id": 651, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 637, "src": "9018:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 652, "name": "scalingFactors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 602, "src": "9029:14:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}], "id": 650, "name": "_upscaleArray", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8960, "src": "9004:13:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$", "typeString": "function (uint256[] memory,uint256[] memory) view"}}, "id": 653, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9004:40:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 654, "nodeType": "ExpressionStatement", "src": "9004:40:2"}, {"assignments": [656], "declarations": [{"constant": false, "id": 656, "mutability": "mutable", "name": "invariantAfterJoin", "nodeType": "VariableDeclaration", "scope": 679, "src": "9116:26:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 655, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9116:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 662, "initialValue": {"arguments": [{"id": 659, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 637, "src": "9179:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 660, "name": "_root3Alpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 97, "src": "9190:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 657, "name": "GyroThreeMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3898, "src": "9145:13:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroThreeMath_$3898_$", "typeString": "type(library GyroThreeMath)"}}, "id": 658, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 3108, "src": "9145:33:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256) pure returns (uint256)"}}, "id": 661, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9145:57:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "9116:86:2"}, {"assignments": [664], "declarations": [{"constant": false, "id": 664, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 679, "src": "9418:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 663, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9418:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 670, "initialValue": {"arguments": [{"id": 667, "name": "invariantAfterJoin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 656, "src": "9450:18:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "33", "id": 668, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9470:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}], "expression": {"id": 665, "name": "Math", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7986, "src": "9441:4:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Math_$7986_$", "typeString": "type(library Math)"}}, "id": 666, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mul", "nodeType": "MemberAccess", "referencedDeclaration": 7905, "src": "9441:8:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 669, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9441:31:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "9418:54:2"}, {"expression": {"id": 673, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 671, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1834, "src": "9483:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 672, "name": "invariantAfterJoin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 656, "src": "9500:18:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9483:35:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 674, "nodeType": "ExpressionStatement", "src": "9483:35:2"}, {"expression": {"components": [{"id": 675, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 664, "src": "9537:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 676, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 637, "src": "9551:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 677, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "9536:25:2", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "functionReturnParameters": 614, "id": 678, "nodeType": "Return", "src": "9529:32:2"}]}, "documentation": {"id": 593, "nodeType": "StructuredDocumentation", "src": "7690:800:2", "text": " @dev Called when the Pool is joined for the first time; that is, when the BPT total supply is zero.\n Returns the amount of BPT to mint and the token amounts the Pool will receive in return.\n Minted BPT will be sent to `recipient`, except for _MINIMUM_BPT, which will be deducted from this amount and sent\n to the zero address instead. This will cause that BPT to remain forever locked there, preventing total BTP from\n ever dropping below that value, and ensuring `_onInitializePool` can only be called once in the entire Pool's\n lifetime.\n The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n be downscaled (rounding up) before being returned to the Vault."}, "id": 680, "implemented": true, "kind": "function", "modifiers": [{"id": 608, "modifierName": {"id": 607, "name": "whenNotPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12196, "src": "8669:13:2", "typeDescriptions": {"typeIdentifier": "t_modifier$__$", "typeString": "modifier ()"}}, "nodeType": "ModifierInvocation", "src": "8669:13:2"}], "name": "_onInitializePool", "nodeType": "FunctionDefinition", "overrides": {"id": 606, "nodeType": "OverrideSpecifier", "overrides": [], "src": "8660:8:2"}, "parameters": {"id": 605, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 595, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 680, "src": "8531:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 594, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "8531:7:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 597, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 680, "src": "8548:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 596, "name": "address", "nodeType": "ElementaryTypeName", "src": "8548:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 599, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 680, "src": "8565:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 598, "name": "address", "nodeType": "ElementaryTypeName", "src": "8565:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 602, "mutability": "mutable", "name": "scalingFactors", "nodeType": "VariableDeclaration", "scope": 680, "src": "8582:31:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 600, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8582:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 601, "nodeType": "ArrayTypeName", "src": "8582:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 604, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 680, "src": "8623:21:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 603, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "8623:5:2", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "8521:129:2"}, "returnParameters": {"id": 614, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 610, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 680, "src": "8692:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 609, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8692:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 613, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 680, "src": "8701:16:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 611, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8701:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 612, "nodeType": "ArrayTypeName", "src": "8701:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "8691:27:2"}, "scope": 1207, "src": "8495:1073:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [2217], "body": {"id": 756, "nodeType": "Block", "src": "10901:1255:2", "statements": [{"assignments": [712], "declarations": [{"constant": false, "id": 712, "mutability": "mutable", "name": "root3Alpha", "nodeType": "VariableDeclaration", "scope": 756, "src": "11199:18:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 711, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11199:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 714, "initialValue": {"id": 713, "name": "_root3Alpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 97, "src": "11220:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "11199:32:2"}, {"assignments": [716], "declarations": [{"constant": false, "id": 716, "mutability": "mutable", "name": "invariantBeforeJoin", "nodeType": "VariableDeclaration", "scope": 756, "src": "11242:27:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 715, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11242:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 722, "initialValue": {"arguments": [{"id": 719, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 690, "src": "11306:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 720, "name": "root3Alpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 712, "src": "11316:10:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 717, "name": "GyroThreeMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3898, "src": "11272:13:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroThreeMath_$3898_$", "typeString": "type(library GyroThreeMath)"}}, "id": 718, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 3108, "src": "11272:33:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256) pure returns (uint256)"}}, "id": 721, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11272:55:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "11242:85:2"}, {"expression": {"arguments": [{"id": 724, "name": "invariantBeforeJoin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 716, "src": "11354:19:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 723, "name": "_distributeFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1054, "src": "11338:15:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 725, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11338:36:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 726, "nodeType": "ExpressionStatement", "src": "11338:36:2"}, {"expression": {"id": 734, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 727, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 703, "src": "11386:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 728, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 706, "src": "11400:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 729, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "11385:25:2", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 731, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 690, "src": "11421:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 732, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 699, "src": "11431:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 730, "name": "_doJoin", "nodeType": "Identifier", "overloadedDeclarations": [801, 2290], "referencedDeclaration": 801, "src": "11413:7:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 733, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11413:27:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "11385:55:2", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 735, "nodeType": "ExpressionStatement", "src": "11385:55:2"}, {"expression": {"id": 745, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 736, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1834, "src": "11866:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 739, "name": "invariantBeforeJoin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 716, "src": "11921:19:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 740, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 703, "src": "11942:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 741, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13236, "src": "11956:11:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 742, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11956:13:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "74727565", "id": 743, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "11971:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "expression": {"id": 737, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4796, "src": "11883:12:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$4796_$", "typeString": "type(library GyroPoolMath)"}}, "id": 738, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "liquidityInvariantUpdate", "nodeType": "MemberAccess", "referencedDeclaration": 4715, "src": "11883:37:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,bool) pure returns (uint256)"}}, "id": 744, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11883:93:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11866:110:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 746, "nodeType": "ExpressionStatement", "src": "11866:110:2"}, {"expression": {"components": [{"id": 747, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 703, "src": "12107:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 748, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 706, "src": "12121:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"arguments": [{"hexValue": "33", "id": 752, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12146:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}], "id": 751, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "12132:13:2", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 749, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12136:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 750, "nodeType": "ArrayTypeName", "src": "12136:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 753, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12132:16:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 754, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "12106:43:2", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory,uint256[] memory)"}}, "functionReturnParameters": 710, "id": 755, "nodeType": "Return", "src": "12099:50:2"}]}, "documentation": {"id": 681, "nodeType": "StructuredDocumentation", "src": "9574:888:2", "text": " @dev Called whenever the Pool is joined after the first initialization join (see `_onInitializePool`).\n Returns the amount of BPT to mint, the token amounts that the Pool will receive in return, and the number of\n tokens to pay in protocol swap fees.\n Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n Minted BPT will be sent to `recipient`.\n The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n be downscaled (rounding up) before being returned to the Vault.\n protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way"}, "id": 757, "implemented": true, "kind": "function", "modifiers": [], "name": "_onJoinPool", "nodeType": "FunctionDefinition", "overrides": {"id": 701, "nodeType": "OverrideSpecifier", "overrides": [], "src": "10735:8:2"}, "parameters": {"id": 700, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 683, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 757, "src": "10497:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 682, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "10497:7:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 685, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 757, "src": "10514:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 684, "name": "address", "nodeType": "ElementaryTypeName", "src": "10514:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 687, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 757, "src": "10531:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 686, "name": "address", "nodeType": "ElementaryTypeName", "src": "10531:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 690, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 757, "src": "10548:25:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 688, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10548:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 689, "nodeType": "ArrayTypeName", "src": "10548:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 692, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 757, "src": "10583:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 691, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10583:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 694, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 757, "src": "10600:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 693, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10600:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 697, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 757, "src": "10656:16:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 695, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10656:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 696, "nodeType": "ArrayTypeName", "src": "10656:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 699, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 757, "src": "10682:21:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 698, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "10682:5:2", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "10487:222:2"}, "returnParameters": {"id": 710, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 703, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 757, "src": "10774:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 702, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10774:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 706, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 757, "src": "10808:26:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 704, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10808:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 705, "nodeType": "ArrayTypeName", "src": "10808:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 709, "mutability": "mutable", "name": "dueProtocolFeeAmounts", "nodeType": "VariableDeclaration", "scope": 757, "src": "10848:38:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 707, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10848:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 708, "nodeType": "ArrayTypeName", "src": "10848:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "10760:136:2"}, "scope": 1207, "src": "10467:1689:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 800, "nodeType": "Block", "src": "12302:441:2", "statements": [{"assignments": [773], "declarations": [{"constant": false, "id": 773, "mutability": "mutable", "name": "kind", "nodeType": "VariableDeclaration", "scope": 800, "src": "12312:30:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$9242", "typeString": "enum BaseWeightedPool.JoinKind"}, "typeName": {"id": 772, "name": "BaseWeightedPool.JoinKind", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9242, "src": "12312:25:2", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$9242", "typeString": "enum BaseWeightedPool.JoinKind"}}, "visibility": "internal"}], "id": 777, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 774, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 762, "src": "12345:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 775, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "joinKind", "nodeType": "MemberAccess", "referencedDeclaration": 7065, "src": "12345:17:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_enum$_JoinKind_$9242_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (enum BaseWeightedPool.JoinKind)"}}, "id": 776, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12345:19:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$9242", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "VariableDeclarationStatement", "src": "12312:52:2"}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_JoinKind_$9242", "typeString": "enum BaseWeightedPool.JoinKind"}, "id": 782, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 778, "name": "kind", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 773, "src": "12501:4:2", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$9242", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 779, "name": "BaseWeightedPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10443, "src": "12509:16:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BaseWeightedPool_$10443_$", "typeString": "type(contract BaseWeightedPool)"}}, "id": 780, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "JoinKind", "nodeType": "MemberAccess", "referencedDeclaration": 9242, "src": "12509:25:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_JoinKind_$9242_$", "typeString": "type(enum BaseWeightedPool.JoinKind)"}}, "id": 781, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "ALL_TOKENS_IN_FOR_EXACT_BPT_OUT", "nodeType": "MemberAccess", "src": "12509:57:2", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$9242", "typeString": "enum BaseWeightedPool.JoinKind"}}, "src": "12501:65:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 798, "nodeType": "Block", "src": "12677:60:2", "statements": [{"expression": {"arguments": [{"expression": {"id": 794, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5219, "src": "12699:6:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$5219_$", "typeString": "type(library Errors)"}}, "id": 795, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNHANDLED_JOIN_KIND", "nodeType": "MemberAccess", "referencedDeclaration": 4933, "src": "12699:26:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 793, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4822, "src": "12691:7:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$", "typeString": "function (uint256) pure"}}, "id": 796, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12691:35:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 797, "nodeType": "ExpressionStatement", "src": "12691:35:2"}]}, "id": 799, "nodeType": "IfStatement", "src": "12497:240:2", "trueBody": {"id": 792, "nodeType": "Block", "src": "12568:103:2", "statements": [{"expression": {"id": 790, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 783, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 765, "src": "12583:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 784, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 768, "src": "12597:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 785, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "12582:25:2", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 787, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 760, "src": "12641:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 788, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 762, "src": "12651:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 786, "name": "_joinAllTokensInForExactBPTOut", "nodeType": "Identifier", "overloadedDeclarations": [949], "referencedDeclaration": 949, "src": "12610:30:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 789, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12610:50:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "12582:78:2", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 791, "nodeType": "ExpressionStatement", "src": "12582:78:2"}]}}]}, "id": 801, "implemented": true, "kind": "function", "modifiers": [], "name": "_doJoin", "nodeType": "FunctionDefinition", "parameters": {"id": 763, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 760, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 801, "src": "12179:25:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 758, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12179:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 759, "nodeType": "ArrayTypeName", "src": "12179:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 762, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 801, "src": "12206:21:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 761, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "12206:5:2", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "12178:50:2"}, "returnParameters": {"id": 769, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 765, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 801, "src": "12252:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 764, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12252:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 768, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 801, "src": "12274:26:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 766, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12274:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 767, "nodeType": "ArrayTypeName", "src": "12274:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "12251:50:2"}, "scope": 1207, "src": "12162:581:2", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [2589], "body": {"id": 899, "nodeType": "Block", "src": "13994:2242:2", "statements": [{"assignments": [833], "declarations": [{"constant": false, "id": 833, "mutability": "mutable", "name": "root3Alpha", "nodeType": "VariableDeclaration", "scope": 899, "src": "14159:18:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 832, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14159:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 835, "initialValue": {"id": 834, "name": "_root3Alpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 97, "src": "14180:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "14159:32:2"}, {"condition": {"arguments": [], "expression": {"argumentTypes": [], "id": 836, "name": "_isNotPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12291, "src": "14206:12:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$", "typeString": "function () view returns (bool)"}}, "id": 837, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14206:14:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 888, "nodeType": "Block", "src": "15325:732:2", "statements": [{"expression": {"id": 878, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 871, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 824, "src": "15540:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 872, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 827, "src": "15553:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 873, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "15539:25:2", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 875, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 811, "src": "15575:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 876, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 820, "src": "15585:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 874, "name": "_doExit", "nodeType": "Identifier", "overloadedDeclarations": [989, 2662], "referencedDeclaration": 989, "src": "15567:7:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 877, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15567:27:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "15539:55:2", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 879, "nodeType": "ExpressionStatement", "src": "15539:55:2"}, {"expression": {"id": 886, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 880, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1834, "src": "16012:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"arguments": [{"id": 883, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "16034:7:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 882, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16034:7:2", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}], "id": 881, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "16029:4:2", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 884, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16029:13:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint256", "typeString": "type(uint256)"}}, "id": 885, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "16029:17:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "16012:34:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 887, "nodeType": "ExpressionStatement", "src": "16012:34:2"}]}, "id": 889, "nodeType": "IfStatement", "src": "14202:1855:2", "trueBody": {"id": 870, "nodeType": "Block", "src": "14222:1097:2", "statements": [{"assignments": [839], "declarations": [{"constant": false, "id": 839, "mutability": "mutable", "name": "invariantBeforeExit", "nodeType": "VariableDeclaration", "scope": 870, "src": "14542:27:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 838, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14542:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 845, "initialValue": {"arguments": [{"id": 842, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 811, "src": "14606:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 843, "name": "root3Alpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 833, "src": "14616:10:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 840, "name": "GyroThreeMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3898, "src": "14572:13:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroThreeMath_$3898_$", "typeString": "type(library GyroThreeMath)"}}, "id": 841, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 3108, "src": "14572:33:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256) pure returns (uint256)"}}, "id": 844, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14572:55:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "14542:85:2"}, {"expression": {"arguments": [{"id": 847, "name": "invariantBeforeExit", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 839, "src": "14658:19:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 846, "name": "_distributeFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1054, "src": "14642:15:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 848, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14642:36:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 849, "nodeType": "ExpressionStatement", "src": "14642:36:2"}, {"expression": {"id": 857, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 850, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 824, "src": "14694:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 851, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 827, "src": "14707:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 852, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "14693:25:2", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 854, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 811, "src": "14729:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 855, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 820, "src": "14739:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 853, "name": "_doExit", "nodeType": "Identifier", "overloadedDeclarations": [989, 2662], "referencedDeclaration": 989, "src": "14721:7:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 856, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14721:27:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "14693:55:2", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 858, "nodeType": "ExpressionStatement", "src": "14693:55:2"}, {"expression": {"id": 868, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 859, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1834, "src": "15198:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 862, "name": "invariantBeforeExit", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 839, "src": "15253:19:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 863, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 824, "src": "15274:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 864, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13236, "src": "15287:11:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 865, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15287:13:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "66616c7365", "id": 866, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "15302:5:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "expression": {"id": 860, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4796, "src": "15215:12:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$4796_$", "typeString": "type(library GyroPoolMath)"}}, "id": 861, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "liquidityInvariantUpdate", "nodeType": "MemberAccess", "referencedDeclaration": 4715, "src": "15215:37:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,bool) pure returns (uint256)"}}, "id": 867, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15215:93:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "15198:110:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 869, "nodeType": "ExpressionStatement", "src": "15198:110:2"}]}}, {"expression": {"components": [{"id": 890, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 824, "src": "16187:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 891, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 827, "src": "16200:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"arguments": [{"hexValue": "33", "id": 895, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16226:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}], "id": 894, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "16212:13:2", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 892, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16216:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 893, "nodeType": "ArrayTypeName", "src": "16216:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 896, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16212:16:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 897, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "16186:43:2", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory,uint256[] memory)"}}, "functionReturnParameters": 831, "id": 898, "nodeType": "Return", "src": "16179:50:2"}]}, "documentation": {"id": 802, "nodeType": "StructuredDocumentation", "src": "12749:816:2", "text": " @dev Called whenever the Pool is exited.\n Returns the amount of BPT to burn, the token amounts for each Pool token that the Pool will grant in return, and\n the number of tokens to pay in protocol swap fees.\n Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n BPT will be burnt from `sender`.\n The Pool will grant tokens to `recipient`. These amounts are considered upscaled and will be downscaled\n (rounding down) before being returned to the Vault.\n protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way"}, "id": 900, "implemented": true, "kind": "function", "modifiers": [], "name": "_onExitPool", "nodeType": "FunctionDefinition", "overrides": {"id": 822, "nodeType": "OverrideSpecifier", "overrides": [], "src": "13828:8:2"}, "parameters": {"id": 821, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 804, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 900, "src": "13600:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 803, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "13600:7:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 806, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 900, "src": "13617:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 805, "name": "address", "nodeType": "ElementaryTypeName", "src": "13617:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 808, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 900, "src": "13634:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 807, "name": "address", "nodeType": "ElementaryTypeName", "src": "13634:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 811, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 900, "src": "13651:25:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 809, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13651:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 810, "nodeType": "ArrayTypeName", "src": "13651:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 813, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 900, "src": "13686:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 812, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13686:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 815, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 900, "src": "13703:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 814, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13703:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 818, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 900, "src": "13749:16:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 816, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13749:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 817, "nodeType": "ArrayTypeName", "src": "13749:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 820, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 900, "src": "13775:21:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 819, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "13775:5:2", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "13590:212:2"}, "returnParameters": {"id": 831, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 824, "mutability": "mutable", "name": "bptAmountIn", "nodeType": "VariableDeclaration", "scope": 900, "src": "13867:19:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 823, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13867:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 827, "mutability": "mutable", "name": "amountsOut", "nodeType": "VariableDeclaration", "scope": 900, "src": "13900:27:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 825, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13900:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 826, "nodeType": "ArrayTypeName", "src": "13900:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 830, "mutability": "mutable", "name": "dueProtocolFeeAmounts", "nodeType": "VariableDeclaration", "scope": 900, "src": "13941:38:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 828, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13941:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 829, "nodeType": "ArrayTypeName", "src": "13941:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "13853:136:2"}, "scope": 1207, "src": "13570:2666:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [1951], "body": {"id": 910, "nodeType": "Block", "src": "16387:45:2", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 907, "name": "_calculateInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 546, "src": "16404:19:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 908, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16404:21:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 906, "id": 909, "nodeType": "Return", "src": "16397:28:2"}]}, "documentation": {"id": 901, "nodeType": "StructuredDocumentation", "src": "16242:67:2", "text": " @dev Returns the current value of the invariant."}, "functionSelector": "c0ff1a15", "id": 911, "implemented": true, "kind": "function", "modifiers": [], "name": "getInvariant", "nodeType": "FunctionDefinition", "overrides": {"id": 903, "nodeType": "OverrideSpecifier", "overrides": [], "src": "16350:8:2"}, "parameters": {"id": 902, "nodeType": "ParameterList", "parameters": [], "src": "16335:2:2"}, "returnParameters": {"id": 906, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 905, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 911, "src": "16368:17:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 904, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16368:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "16367:19:2"}, "scope": 1207, "src": "16314:118:2", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"baseFunctions": [2484], "body": {"id": 948, "nodeType": "Block", "src": "16623:243:2", "statements": [{"assignments": [926], "declarations": [{"constant": false, "id": 926, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 948, "src": "16633:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 925, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16633:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 930, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 927, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 916, "src": "16656:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 928, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "allTokensInForExactBptOut", "nodeType": "MemberAccess", "referencedDeclaration": 7179, "src": "16656:34:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (uint256)"}}, "id": 929, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16656:36:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "16633:59:2"}, {"assignments": [935], "declarations": [{"constant": false, "id": 935, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 948, "src": "16703:26:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 933, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16703:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 934, "nodeType": "ArrayTypeName", "src": "16703:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 943, "initialValue": {"arguments": [{"id": 938, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 914, "src": "16778:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 939, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 926, "src": "16788:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 940, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13236, "src": "16802:11:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 941, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16802:13:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 936, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4796, "src": "16732:12:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$4796_$", "typeString": "type(library GyroPoolMath)"}}, "id": 937, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcAllTokensInGivenExactBptOut", "nodeType": "MemberAccess", "referencedDeclaration": 4088, "src": "16732:45:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256[] memory)"}}, "id": 942, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16732:84:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "16703:113:2"}, {"expression": {"components": [{"id": 944, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 926, "src": "16835:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 945, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 935, "src": "16849:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 946, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "16834:25:2", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "functionReturnParameters": 924, "id": 947, "nodeType": "Return", "src": "16827:32:2"}]}, "id": 949, "implemented": true, "kind": "function", "modifiers": [], "name": "_joinAllTokensInForExactBPTOut", "nodeType": "FunctionDefinition", "overrides": {"id": 918, "nodeType": "OverrideSpecifier", "overrides": [], "src": "16566:8:2"}, "parameters": {"id": 917, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 914, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 949, "src": "16478:25:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 912, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16478:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 913, "nodeType": "ArrayTypeName", "src": "16478:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 916, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 949, "src": "16505:21:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 915, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "16505:5:2", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "16477:50:2"}, "returnParameters": {"id": 924, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 920, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 949, "src": "16592:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 919, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16592:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 923, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 949, "src": "16601:16:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 921, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16601:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 922, "nodeType": "ArrayTypeName", "src": "16601:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "16591:27:2"}, "scope": 1207, "src": "16438:428:2", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 988, "nodeType": "Block", "src": "17012:431:2", "statements": [{"assignments": [965], "declarations": [{"constant": false, "id": 965, "mutability": "mutable", "name": "kind", "nodeType": "VariableDeclaration", "scope": 988, "src": "17022:30:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$9247", "typeString": "enum BaseWeightedPool.ExitKind"}, "typeName": {"id": 964, "name": "BaseWeightedPool.ExitKind", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9247, "src": "17022:25:2", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$9247", "typeString": "enum BaseWeightedPool.ExitKind"}}, "visibility": "internal"}], "id": 969, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 966, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 954, "src": "17055:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 967, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "exitKind", "nodeType": "MemberAccess", "referencedDeclaration": 7081, "src": "17055:17:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_enum$_ExitKind_$9247_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (enum BaseWeightedPool.ExitKind)"}}, "id": 968, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17055:19:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$9247", "typeString": "enum BaseWeightedPool.ExitKind"}}, "nodeType": "VariableDeclarationStatement", "src": "17022:52:2"}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_ExitKind_$9247", "typeString": "enum BaseWeightedPool.ExitKind"}, "id": 974, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 970, "name": "kind", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 965, "src": "17229:4:2", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$9247", "typeString": "enum BaseWeightedPool.ExitKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 971, "name": "BaseWeightedPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10443, "src": "17237:16:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BaseWeightedPool_$10443_$", "typeString": "type(contract BaseWeightedPool)"}}, "id": 972, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ExitKind", "nodeType": "MemberAccess", "referencedDeclaration": 9247, "src": "17237:25:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_ExitKind_$9247_$", "typeString": "type(enum BaseWeightedPool.ExitKind)"}}, "id": 973, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "EXACT_BPT_IN_FOR_TOKENS_OUT", "nodeType": "MemberAccess", "src": "17237:53:2", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$9247", "typeString": "enum BaseWeightedPool.ExitKind"}}, "src": "17229:61:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 986, "nodeType": "Block", "src": "17377:60:2", "statements": [{"expression": {"arguments": [{"expression": {"id": 982, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5219, "src": "17399:6:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$5219_$", "typeString": "type(library Errors)"}}, "id": 983, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNHANDLED_EXIT_KIND", "nodeType": "MemberAccess", "referencedDeclaration": 5011, "src": "17399:26:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 981, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4822, "src": "17391:7:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$", "typeString": "function (uint256) pure"}}, "id": 984, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17391:35:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 985, "nodeType": "ExpressionStatement", "src": "17391:35:2"}]}, "id": 987, "nodeType": "IfStatement", "src": "17225:212:2", "trueBody": {"id": 980, "nodeType": "Block", "src": "17292:79:2", "statements": [{"expression": {"arguments": [{"id": 976, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 952, "src": "17341:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 977, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 954, "src": "17351:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 975, "name": "_exitExactBPTInForTokensOut", "nodeType": "Identifier", "overloadedDeclarations": [1027], "referencedDeclaration": 1027, "src": "17313:27:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 978, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17313:47:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "functionReturnParameters": 961, "id": 979, "nodeType": "Return", "src": "17306:54:2"}]}}]}, "id": 989, "implemented": true, "kind": "function", "modifiers": [], "name": "_doExit", "nodeType": "FunctionDefinition", "parameters": {"id": 955, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 952, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 989, "src": "16889:25:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 950, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16889:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 951, "nodeType": "ArrayTypeName", "src": "16889:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 954, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 989, "src": "16916:21:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 953, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "16916:5:2", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "16888:50:2"}, "returnParameters": {"id": 961, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 957, "mutability": "mutable", "name": "bptAmountIn", "nodeType": "VariableDeclaration", "scope": 989, "src": "16962:19:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 956, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16962:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 960, "mutability": "mutable", "name": "amountsOut", "nodeType": "VariableDeclaration", "scope": 989, "src": "16983:27:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 958, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16983:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 959, "nodeType": "ArrayTypeName", "src": "16983:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "16961:50:2"}, "scope": 1207, "src": "16872:571:2", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [2781], "body": {"id": 1026, "nodeType": "Block", "src": "17631:746:2", "statements": [{"assignments": [1004], "declarations": [{"constant": false, "id": 1004, "mutability": "mutable", "name": "bptAmountIn", "nodeType": "VariableDeclaration", "scope": 1026, "src": "18052:19:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1003, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18052:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1008, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1005, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 994, "src": "18074:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 1006, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "exactBptInForTokensOut", "nodeType": "MemberAccess", "referencedDeclaration": 7226, "src": "18074:31:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (uint256)"}}, "id": 1007, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18074:33:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "18052:55:2"}, {"assignments": [1013], "declarations": [{"constant": false, "id": 1013, "mutability": "mutable", "name": "amountsOut", "nodeType": "VariableDeclaration", "scope": 1026, "src": "18218:27:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1011, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18218:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1012, "nodeType": "ArrayTypeName", "src": "18218:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 1021, "initialValue": {"arguments": [{"id": 1016, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 992, "src": "18291:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 1017, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1004, "src": "18301:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 1018, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13236, "src": "18314:11:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1019, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18314:13:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1014, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4796, "src": "18248:12:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$4796_$", "typeString": "type(library GyroPoolMath)"}}, "id": 1015, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcTokensOutGivenExactBptIn", "nodeType": "MemberAccess", "referencedDeclaration": 4147, "src": "18248:42:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256[] memory)"}}, "id": 1020, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18248:80:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "18218:110:2"}, {"expression": {"components": [{"id": 1022, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1004, "src": "18346:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1023, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1013, "src": "18359:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1024, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "18345:25:2", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "functionReturnParameters": 1002, "id": 1025, "nodeType": "Return", "src": "18338:32:2"}]}, "id": 1027, "implemented": true, "kind": "function", "modifiers": [], "name": "_exitExactBPTInForTokensOut", "nodeType": "FunctionDefinition", "overrides": {"id": 996, "nodeType": "OverrideSpecifier", "overrides": [], "src": "17574:8:2"}, "parameters": {"id": 995, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 992, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 1027, "src": "17486:25:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 990, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17486:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 991, "nodeType": "ArrayTypeName", "src": "17486:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 994, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 1027, "src": "17513:21:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 993, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "17513:5:2", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "17485:50:2"}, "returnParameters": {"id": 1002, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 998, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1027, "src": "17600:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 997, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17600:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1001, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1027, "src": "17609:16:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 999, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17609:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1000, "nodeType": "ArrayTypeName", "src": "17609:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "17599:27:2"}, "scope": 1207, "src": "17449:928:2", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 1053, "nodeType": "Block", "src": "18800:519:2", "statements": [{"assignments": [1034, 1036, 1038, 1040], "declarations": [{"constant": false, "id": 1034, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 1053, "src": "19029:16:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1033, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19029:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1036, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 1053, "src": "19047:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1035, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19047:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1038, "mutability": "mutable", "name": "gyroTreasury", "nodeType": "VariableDeclaration", "scope": 1053, "src": "19069:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1037, "name": "address", "nodeType": "ElementaryTypeName", "src": "19069:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1040, "mutability": "mutable", "name": "balTreasury", "nodeType": "VariableDeclaration", "scope": 1053, "src": "19091:19:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1039, "name": "address", "nodeType": "ElementaryTypeName", "src": "19091:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 1045, "initialValue": {"arguments": [{"id": 1042, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1834, "src": "19153:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1043, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1030, "src": "19181:21:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1041, "name": "_getDueProtocolFeeAmounts", "nodeType": "Identifier", "overloadedDeclarations": [1081, 1140], "referencedDeclaration": 1140, "src": "19114:25:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "function (uint256,uint256) view returns (uint256,uint256,address,address)"}}, "id": 1044, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19114:98:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "nodeType": "VariableDeclarationStatement", "src": "19028:184:2"}, {"expression": {"arguments": [{"id": 1047, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1034, "src": "19262:8:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1048, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1036, "src": "19272:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1049, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1038, "src": "19286:12:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1050, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1040, "src": "19300:11:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 1046, "name": "_payFeesBpt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1172, "src": "19250:11:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$", "typeString": "function (uint256,uint256,address,address)"}}, "id": 1051, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19250:62:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1052, "nodeType": "ExpressionStatement", "src": "19250:62:2"}]}, "documentation": {"id": 1028, "nodeType": "StructuredDocumentation", "src": "18477:253:2", "text": " @dev Computes and distributes fees between the Balancer and the Gyro treasury\n The fees are computed and distributed in BPT rather than using the\n Balancer regular distribution mechanism which would pay these in underlying"}, "id": 1054, "implemented": true, "kind": "function", "modifiers": [], "name": "_distributeFees", "nodeType": "FunctionDefinition", "parameters": {"id": 1031, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1030, "mutability": "mutable", "name": "invariantBeforeAction", "nodeType": "VariableDeclaration", "scope": 1054, "src": "18760:29:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1029, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18760:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "18759:31:2"}, "returnParameters": {"id": 1032, "nodeType": "ParameterList", "parameters": [], "src": "18800:0:2"}, "scope": 1207, "src": "18735:584:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [2919], "body": {"id": 1080, "nodeType": "Block", "src": "19768:42:2", "statements": [{"expression": {"arguments": [{"hexValue": "4e6f7420696d706c656d656e746564", "id": 1077, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "19785:17:2", "typeDescriptions": {"typeIdentifier": "t_stringliteral_9f5474d7a5849b3f79e8aee7ea2c60bcd36a60a08b4fa41f97e2fccf1c4df98b", "typeString": "literal_string \"Not implemented\""}, "value": "Not implemented"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_9f5474d7a5849b3f79e8aee7ea2c60bcd36a60a08b4fa41f97e2fccf1c4df98b", "typeString": "literal_string \"Not implemented\""}], "id": 1076, "name": "revert", "nodeType": "Identifier", "overloadedDeclarations": [-19, -19], "referencedDeclaration": -19, "src": "19778:6:2", "typeDescriptions": {"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory) pure"}}, "id": 1078, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19778:25:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1079, "nodeType": "ExpressionStatement", "src": "19778:25:2"}]}, "documentation": {"id": 1055, "nodeType": "StructuredDocumentation", "src": "19325:96:2", "text": " @dev this function overrides inherited function to make sure it is never used"}, "id": 1081, "implemented": true, "kind": "function", "modifiers": [], "name": "_getDueProtocolFeeAmounts", "nodeType": "FunctionDefinition", "overrides": {"id": 1071, "nodeType": "OverrideSpecifier", "overrides": [], "src": "19732:8:2"}, "parameters": {"id": 1070, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1058, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1081, "src": "19470:16:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1056, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19470:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1057, "nodeType": "ArrayTypeName", "src": "19470:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1061, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1081, "src": "19509:16:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1059, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19509:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1060, "nodeType": "ArrayTypeName", "src": "19509:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1063, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1081, "src": "19557:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1062, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19557:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1065, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1081, "src": "19598:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1064, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19598:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1067, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1081, "src": "19637:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1066, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19637:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1069, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1081, "src": "19675:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1068, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19675:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "19460:257:2"}, "returnParameters": {"id": 1075, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1074, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1081, "src": "19750:16:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1072, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19750:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1073, "nodeType": "ArrayTypeName", "src": "19750:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "19749:18:2"}, "scope": 1207, "src": "19426:384:2", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 1139, "nodeType": "Block", "src": "20498:681:2", "statements": [{"assignments": [1098, 1100, 1102, 1104], "declarations": [{"constant": false, "id": 1098, "mutability": "mutable", "name": "protocolSwapFeePerc", "nodeType": "VariableDeclaration", "scope": 1139, "src": "20509:27:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1097, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20509:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1100, "mutability": "mutable", "name": "protocolFeeGyroPortion", "nodeType": "VariableDeclaration", "scope": 1139, "src": "20538:30:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1099, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20538:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1102, "mutability": "mutable", "name": "gyroTreasury", "nodeType": "VariableDeclaration", "scope": 1139, "src": "20570:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1101, "name": "address", "nodeType": "ElementaryTypeName", "src": "20570:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1104, "mutability": "mutable", "name": "balTreasury", "nodeType": "VariableDeclaration", "scope": 1139, "src": "20592:19:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1103, "name": "address", "nodeType": "ElementaryTypeName", "src": "20592:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 1107, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 1105, "name": "_getFeesMetadata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1206, "src": "20615:16:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "function () view returns (uint256,uint256,address,address)"}}, "id": 1106, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20615:18:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "nodeType": "VariableDeclarationStatement", "src": "20508:125:2"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1110, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1108, "name": "protocolSwapFeePerc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1098, "src": "20729:19:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 1109, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20752:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "20729:24:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1118, "nodeType": "IfStatement", "src": "20725:95:2", "trueBody": {"id": 1117, "nodeType": "Block", "src": "20755:65:2", "statements": [{"expression": {"components": [{"hexValue": "30", "id": 1111, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20777:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"hexValue": "30", "id": 1112, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20780:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"id": 1113, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1102, "src": "20783:12:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1114, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1104, "src": "20797:11:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 1115, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "20776:33:2", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_address_$_t_address_$", "typeString": "tuple(int_const 0,int_const 0,address,address)"}}, "functionReturnParameters": 1096, "id": 1116, "nodeType": "Return", "src": "20769:40:2"}]}}, {"assignments": [1120, 1122], "declarations": [{"constant": false, "id": 1120, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 1139, "src": "20864:16:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1119, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20864:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1122, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 1139, "src": "20882:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1121, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20882:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1132, "initialValue": {"arguments": [{"id": 1125, "name": "previousInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1084, "src": "20950:17:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1126, "name": "currentInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1086, "src": "20981:16:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 1127, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13236, "src": "21011:11:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1128, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21011:13:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1129, "name": "protocolSwapFeePerc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1098, "src": "21038:19:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1130, "name": "protocolFeeGyroPortion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1100, "src": "21071:22:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1123, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4796, "src": "20906:12:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$4796_$", "typeString": "type(library GyroPoolMath)"}}, "id": 1124, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcProtocolFees", "nodeType": "MemberAccess", "referencedDeclaration": 4231, "src": "20906:30:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,uint256,uint256) pure returns (uint256,uint256)"}}, "id": 1131, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20906:197:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "20863:240:2"}, {"expression": {"components": [{"id": 1133, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1120, "src": "21122:8:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1134, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1122, "src": "21132:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1135, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1102, "src": "21146:12:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1136, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1104, "src": "21160:11:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 1137, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "21121:51:2", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "functionReturnParameters": 1096, "id": 1138, "nodeType": "Return", "src": "21114:58:2"}]}, "documentation": {"id": 1082, "nodeType": "StructuredDocumentation", "src": "19816:444:2", "text": " Note: This function is identical to that used in GyroTwoPool.sol\n @dev Calculates protocol fee amounts in BPT terms\n Overrides an inherited function and some arguments are intentionally not used (balances, normalizedWeights)\n protocolSwapFeePercentage is not used b/c we take parameters from GyroConfig instead\n Returns dueFees, where dueFees[0] = BPT due to Gyro, and dueFees[1] = BPT due to Balancer"}, "id": 1140, "implemented": true, "kind": "function", "modifiers": [], "name": "_getDueProtocolFeeAmounts", "nodeType": "FunctionDefinition", "parameters": {"id": 1087, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1084, "mutability": "mutable", "name": "previousInvariant", "nodeType": "VariableDeclaration", "scope": 1140, "src": "20300:25:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1083, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20300:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1086, "mutability": "mutable", "name": "currentInvariant", "nodeType": "VariableDeclaration", "scope": 1140, "src": "20327:24:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1085, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20327:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "20299:53:2"}, "returnParameters": {"id": 1096, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1089, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1140, "src": "20413:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1088, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20413:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1091, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1140, "src": "20434:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1090, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20434:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1093, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1140, "src": "20455:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1092, "name": "address", "nodeType": "ElementaryTypeName", "src": "20455:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1095, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1140, "src": "20476:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1094, "name": "address", "nodeType": "ElementaryTypeName", "src": "20476:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "20399:94:2"}, "scope": 1207, "src": "20265:914:2", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 1171, "nodeType": "Block", "src": "21408:283:2", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1153, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1151, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1142, "src": "21466:8:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 1152, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "21477:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "21466:12:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1160, "nodeType": "IfStatement", "src": "21462:82:2", "trueBody": {"id": 1159, "nodeType": "Block", "src": "21480:64:2", "statements": [{"expression": {"arguments": [{"id": 1155, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1146, "src": "21510:12:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1156, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1142, "src": "21524:8:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1154, "name": "_mintPoolTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12021, "src": "21494:15:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 1157, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21494:39:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1158, "nodeType": "ExpressionStatement", "src": "21494:39:2"}]}}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1163, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1161, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1144, "src": "21600:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 1162, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "21615:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "21600:16:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1170, "nodeType": "IfStatement", "src": "21596:89:2", "trueBody": {"id": 1169, "nodeType": "Block", "src": "21618:67:2", "statements": [{"expression": {"arguments": [{"id": 1165, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1148, "src": "21648:11:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1166, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1144, "src": "21661:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1164, "name": "_mintPoolTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12021, "src": "21632:15:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 1167, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21632:42:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1168, "nodeType": "ExpressionStatement", "src": "21632:42:2"}]}}]}, "id": 1172, "implemented": true, "kind": "function", "modifiers": [], "name": "_payFeesBpt", "nodeType": "FunctionDefinition", "parameters": {"id": 1149, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1142, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 1172, "src": "21287:16:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1141, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21287:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1144, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 1172, "src": "21313:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1143, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21313:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1146, "mutability": "mutable", "name": "gyroTreasury", "nodeType": "VariableDeclaration", "scope": 1172, "src": "21343:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1145, "name": "address", "nodeType": "ElementaryTypeName", "src": "21343:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1148, "mutability": "mutable", "name": "balTreasury", "nodeType": "VariableDeclaration", "scope": 1172, "src": "21373:19:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1147, "name": "address", "nodeType": "ElementaryTypeName", "src": "21373:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "21277:121:2"}, "returnParameters": {"id": 1150, "nodeType": "ParameterList", "parameters": [], "src": "21408:0:2"}, "scope": 1207, "src": "21257:434:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 1205, "nodeType": "Block", "src": "21942:324:2", "statements": [{"expression": {"components": [{"arguments": [{"expression": {"id": 1185, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3991, "src": "21992:14:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$3991_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 1186, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "PROTOCOL_SWAP_FEE_PERC_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 3981, "src": "21992:41:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 1183, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 99, "src": "21973:10:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$3976", "typeString": "contract IGyroConfig"}}, "id": 1184, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getUint", "nodeType": "MemberAccess", "referencedDeclaration": 3951, "src": "21973:18:2", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_uint256_$", "typeString": "function (bytes32) view external returns (uint256)"}}, "id": 1187, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21973:61:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"expression": {"id": 1190, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3991, "src": "22067:14:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$3991_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 1191, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "PROTOCOL_FEE_GYRO_PORTION_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 3984, "src": "22067:44:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 1188, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 99, "src": "22048:10:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$3976", "typeString": "contract IGyroConfig"}}, "id": 1189, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getUint", "nodeType": "MemberAccess", "referencedDeclaration": 3951, "src": "22048:18:2", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_uint256_$", "typeString": "function (bytes32) view external returns (uint256)"}}, "id": 1192, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22048:64:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"expression": {"id": 1195, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3991, "src": "22148:14:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$3991_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 1196, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "GYRO_TREASURY_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 3987, "src": "22148:32:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 1193, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 99, "src": "22126:10:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$3976", "typeString": "contract IGyroConfig"}}, "id": 1194, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getAddress", "nodeType": "MemberAccess", "referencedDeclaration": 3959, "src": "22126:21:2", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$", "typeString": "function (bytes32) view external returns (address)"}}, "id": 1197, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22126:55:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"expression": {"id": 1200, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3991, "src": "22217:14:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$3991_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 1201, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "BAL_TREASURY_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 3990, "src": "22217:31:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 1198, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 99, "src": "22195:10:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$3976", "typeString": "contract IGyroConfig"}}, "id": 1199, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getAddress", "nodeType": "MemberAccess", "referencedDeclaration": 3959, "src": "22195:21:2", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$", "typeString": "function (bytes32) view external returns (address)"}}, "id": 1202, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22195:54:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 1203, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "21959:300:2", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "functionReturnParameters": 1182, "id": 1204, "nodeType": "Return", "src": "21952:307:2"}]}, "id": 1206, "implemented": true, "kind": "function", "modifiers": [], "name": "_getFeesMetadata", "nodeType": "FunctionDefinition", "parameters": {"id": 1173, "nodeType": "ParameterList", "parameters": [], "src": "21794:2:2"}, "returnParameters": {"id": 1182, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1175, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1206, "src": "21857:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1174, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21857:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1177, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1206, "src": "21878:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1176, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21878:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1179, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1206, "src": "21899:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1178, "name": "address", "nodeType": "ElementaryTypeName", "src": "21899:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1181, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1206, "src": "21920:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1180, "name": "address", "nodeType": "ElementaryTypeName", "src": "21920:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "21843:94:2"}, "scope": 1207, "src": "21769:497:2", "stateMutability": "view", "virtual": false, "visibility": "internal"}], "scope": 1208, "src": "1126:21142:2"}], "src": "688:21581:2"}, "bytecode": "6102a06040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9610120523480156200003757600080fd5b5060405162004891380380620048918339810160408190526200005a91620008ef565b604080516003808252608082019092528b918b918b918b9190602082016060803683370190505089898989888651600214620000985760016200009b565b60025b8989898989898989828289898d8280604051806040016040528060018152602001603160f81b81525085858a336001600160a01b031660001b806080818152505050806001600160a01b031660a0816001600160a01b031660601b81525050508160039080519060200190620001139291906200070d565b508051620001299060049060208401906200070d565b505060058054601260ff1990911617905550815160209283012060c052805191012060e052507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6101005260601b6001600160601b03191661014052506200019c90506276a70083111561019462000475565b620001b062278d0082111561019562000475565b4290910161016081905201610180528551620001d2906002111560c862000475565b620001ec620001e06200048a565b8751111560c962000475565b62000202866200048f60201b62000dd01760201c565b6200020d846200049b565b6040516309b2760f60e01b81526000906001600160a01b038c16906309b2760f906200023e908d9060040162000aa7565b602060405180830381600087803b1580156200025957600080fd5b505af11580156200026e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002949190620008d6565b604051633354e3e960e11b81529091506001600160a01b038c16906366a9c7d290620002c99084908b908b9060040162000a0b565b600060405180830381600087803b158015620002e457600080fd5b505af1158015620002f9573d6000803e3d6000fd5b50505050806101a0818152505050505050505050505050505050505050505050506200033287516003146101616200047560201b60201c565b866000815181106200034057fe5b60200260200101516001600160a01b03166101e0816001600160a01b031660601b81525050866001815181106200037357fe5b60200260200101516001600160a01b0316610200816001600160a01b031660601b8152505086600281518110620003a657fe5b60200260200101516001600160a01b0316610220816001600160a01b031660601b81525050620003f187600081518110620003dd57fe5b60200260200101516200052760201b60201c565b6102405286516200040a9088906001908110620003dd57fe5b610260528651620004239088906002908110620003dd57fe5b610280526200043f670de0b6b3a7640000871061015f62000475565b6101c0959095525050600a80546001600160a01b0319166001600160a01b03909416939093179092555062000b0e945050505050565b8162000486576200048681620005fb565b5050565b600390565b8062000486816200064e565b620004b064e8d4a5100082101560cb62000475565b620004c867016345785d8a000082111560ca62000475565b620004e78160c0600854620006db60201b62000dda179092919060201c565b6008556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc906200051c90839062000abc565b60405180910390a150565b60006001600160a01b0382163014156200054b5750670de0b6b3a7640000620005f6565b6000826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156200058757600080fd5b505afa1580156200059c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005c29190620009e1565b60ff1690506000620005e1601283620006f060201b62000def1760201c565b905080600a0a670de0b6b3a764000002925050505b919050565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6002815110156200065f57620006d8565b6000816000815181106200066f57fe5b602002602001015190506000600190505b8251811015620006d55760008382815181106200069957fe5b60200260200101519050620006ca816001600160a01b0316846001600160a01b03161060656200047560201b60201c565b915060010162000680565b50505b50565b6001600160401b03811b1992909216911b1790565b60006200070283831115600162000475565b508082035b92915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200075057805160ff191683800117855562000780565b8280016001018555821562000780579182015b828111156200078057825182559160200191906001019062000763565b506200078e92915062000792565b5090565b5b808211156200078e576000815560010162000793565b8051620007078162000af8565b600082601f830112620007c7578081fd5b81516001600160401b03811115620007dd578182fd5b6020808202620007ef82820162000ac5565b838152935081840185830182870184018810156200080c57600080fd5b600092505b848310156200083c578051620008278162000af8565b82526001929092019190830190830162000811565b505050505092915050565b600082601f83011262000858578081fd5b81516001600160401b038111156200086e578182fd5b602062000884601f8301601f1916820162000ac5565b925081835284818386010111156200089b57600080fd5b60005b82811015620008bb5784810182015184820183015281016200089e565b82811115620008cd5760008284860101525b50505092915050565b600060208284031215620008e8578081fd5b5051919050565b6000806000806000806000806000806101408b8d0312156200090f578586fd5b6200091b8c8c620007a9565b60208c0151909a506001600160401b038082111562000938578788fd5b620009468e838f0162000847565b9a5060408d01519150808211156200095c578788fd5b6200096a8e838f0162000847565b995060608d015191508082111562000980578788fd5b506200098f8d828e01620007b6565b97505060808b0151955060a08b0151945060c08b0151935060e08b01519250620009be8c6101008d01620007a9565b9150620009d08c6101208d01620007a9565b90509295989b9194979a5092959850565b600060208284031215620009f3578081fd5b815160ff8116811462000a04578182fd5b9392505050565b60006060820185835260206060818501528186518084526080860191508288019350845b8181101562000a575762000a44855162000aec565b8352938301939183019160010162000a2f565b505084810360408601528551808252908201925081860190845b8181101562000a995762000a86835162000aec565b8552938301939183019160010162000a71565b509298975050505050505050565b602081016003831062000ab657fe5b91905290565b90815260200190565b6040518181016001600160401b038111828210171562000ae457600080fd5b604052919050565b6001600160a01b031690565b6001600160a01b0381168114620006d857600080fd5b60805160a05160601c60c05160e05161010051610120516101405160601c61016051610180516101a0516101c0516101e05160601c6102005160601c6102205160601c610240516102605161028051613c9462000bfd6000398061104752806118d752508061100d5280611876525080610fd3528061181552508061189c52508061183b5250806117da525080610d6752806113c652806116e15280611af75280611b9a52806121f152508061062e525080610f5c525080610f385250806108a6525080610b215250806111765250806111b852508061119752508061088252508061080c5250613c946000f3fe608060405234801561001057600080fd5b506004361061021c5760003560e01c806374f3b00911610125578063a457c2d7116100ad578063d505accf1161007c578063d505accf14610442578063d5c096c414610455578063d60ca60314610468578063dd62ed3e14610470578063f89f27ed146104835761021c565b8063a457c2d71461040c578063a9059cbb1461041f578063aaabadc514610432578063c0ff1a151461043a5761021c565b8063893d20e8116100f4578063893d20e8146103d95780638d928af8146103e157806395d89b41146103e95780639b02cdde146103f15780639d2c110c146103f95761021c565b806374f3b0091461037f5780637ecebe00146103a0578063851c1bb3146103b357806387ec6817146103c65761021c565b806338e9922e116101a857806350dd6ed91161017757806350dd6ed91461032857806355c676281461033b5780636028bfd414610343578063679aefce1461036457806370a082311461036c5761021c565b806338e9922e146102e557806338fff2d0146102f8578063395093511461030057806344bbdb55146103135761021c565b80631c0de051116101ef5780631c0de051146102895780631dd746ea146102a057806323b872dd146102b5578063313ce567146102c85780633644e515146102dd5761021c565b806306fdde0314610221578063095ea7b31461023f57806316c38b3c1461025f57806318160ddd14610274575b600080fd5b61022961048b565b6040516102369190613b89565b60405180910390f35b61025261024d3660046134e5565b610521565b6040516102369190613a90565b61027261026d3660046135db565b610538565b005b61027c61054c565b6040516102369190613ab3565b610291610552565b60405161023693929190613a9b565b6102a861057b565b6040516102369190613a58565b6102526102c3366004613430565b61058a565b6102d0610600565b6040516102369190613bdb565b61027c610609565b6102726102f336600461390c565b610613565b61027c61062c565b61025261030e3660046134e5565b610650565b61031b61068b565b6040516102369190613a44565b610272610336366004613737565b61069a565b61027c6106b8565b610356610351366004613613565b6106c9565b604051610236929190613bc2565b61027c610700565b61027c61037a3660046133c0565b61072b565b61039261038d366004613613565b61074a565b604051610236929190613a6b565b61027c6103ae3660046133c0565b6107ed565b61027c6103c136600461370f565b610808565b6103566103d4366004613613565b61085a565b61031b610880565b61031b6108a4565b6102296108c8565b61027c610929565b61027c610407366004613811565b61092f565b61025261041a3660046134e5565b610a8d565b61025261042d3660046134e5565b610acb565b61031b610ad8565b61027c610ae2565b610272610450366004613470565b610aec565b610392610463366004613613565b610c35565b61027c610d65565b61027c61047e3660046133f8565b610d89565b6102a8610dc6565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105175780601f106104ec57610100808354040283529160200191610517565b820191906000526020600020905b8154815290600101906020018083116104fa57829003601f168201915b5050505050905090565b600061052e338484610e05565b5060015b92915050565b610540610e6d565b61054981610e9b565b50565b60025490565b600080600061055f610f19565b15925061056a610f36565b9150610574610f5a565b9050909192565b6060610585610f7e565b905090565b6000806105978533610d89565b90506105bb336001600160a01b03871614806105b35750838210155b61019e611084565b6105c6858585611092565b336001600160a01b038616148015906105e157506000198114155b156105f3576105f38533858403610e05565b60019150505b9392505050565b60055460ff1690565b6000610585611172565b61061b610e6d565b61062361120f565b61054981611224565b7f000000000000000000000000000000000000000000000000000000000000000090565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161052e918590610686908661128f565b610e05565b600a546001600160a01b031681565b6106a2610e6d565b6106aa61120f565b6106b482826112a1565b5050565b6008546000906105859060c06113a0565b600060606106df86516106da6113ad565b6113b2565b6106f4898989898989896113bf6114836114e9565b97509795505050505050565b600061058561070d61054c565b610725610718610ae2565b6107206113ad565b61160c565b90611630565b6001600160a01b0381166000908152602081905260409020545b919050565b606080886107746107596108a4565b6001600160a01b0316336001600160a01b03161460cd611084565b61078961077f61062c565b82146101f4611084565b6060610793610f7e565b905061079f888261166f565b60006060806107b48e8e8e8e8e8e8a8f6113bf565b9250925092506107c48d846116d0565b6107ce8285611483565b6107d88185611483565b909550935050505b5097509795505050505050565b6001600160a01b031660009081526006602052604090205490565b60007f00000000000000000000000000000000000000000000000000000000000000008260405160200161083d929190613a01565b604051602081830303815290604052805190602001209050919050565b6000606061086b86516106da6113ad565b6106f4898989898989896116da6117756114e9565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105175780601f106104ec57610100808354040283529160200191610517565b60095490565b600083608001516109416107596108a4565b61094c61077f61062c565b600061095b86602001516117d6565b9050600061096c87604001516117d6565b905060008751600181111561097d57fe5b1415610a0d5760006109928860600151611906565b905060008189606001510390506109b689602001516109b18387611927565b611933565b606089018290526109c78885611927565b97506109d38784611927565b96506109e3896060015185611927565b60608a015260006109f58a8a8a611945565b9050610a018185611970565b96505050505050610a85565b610a178683611927565b9550610a238582611927565b9450610a33876060015182611927565b60608801526000610a4588888861197c565b9050610a51818461199e565b90506000610a5e826119aa565b905060008282039050610a798a602001516109b18388611927565b509450610a8592505050565b509392505050565b600080610a9a3385610d89565b9050808310610ab457610aaf33856000610e05565b610ac1565b610ac13385858403610e05565b5060019392505050565b600061052e338484611092565b60006105856119d0565b6000610585611a4a565b610afa8442111560d1611084565b6001600160a01b0387166000908152600660209081526040808320549051909291610b51917f0000000000000000000000000000000000000000000000000000000000000000918c918c918c9188918d9101613adb565b6040516020818303038152906040528051906020012090506000610b7482611b21565b9050600060018288888860405160008152602001604052604051610b9b9493929190613b6b565b6020604051602081039080840390855afa158015610bbd573d6000803e3d6000fd5b5050604051601f1901519150610bff90506001600160a01b03821615801590610bf757508b6001600160a01b0316826001600160a01b0316145b6101f8611084565b6001600160a01b038b166000908152600660205260409020600185019055610c288b8b8b610e05565b5050505050505050505050565b60608088610c446107596108a4565b610c4f61077f61062c565b6060610c59610f7e565b9050610c6361054c565b610d155760006060610c788d8d8d868b611b3d565b91509150610c91610c87611be4565b83101560cc611084565b610ca36000610c9e611be4565b611beb565b610cb68b610caf611be4565b8403611beb565b610cc08184611775565b80610cc96113ad565b6001600160401b0381118015610cde57600080fd5b50604051908082528060200260200182016040528015610d08578160200160208202803683370190505b50955095505050506107e0565b610d1f888261166f565b6000606080610d348e8e8e8e8e8e8a8f6116da565b925092509250610d448c84611beb565b610d4e8285611775565b610d588185611483565b90955093506107e0915050565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000610d936108a4565b6001600160a01b0316826001600160a01b03161415610db55750600019610532565b610dbf8383611bf5565b9050610532565b6060610585611c20565b806106b481611cb6565b6001600160401b03811b1992909216911b1790565b6000610dff838311156001611084565b50900390565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610e60908590613ab3565b60405180910390a3505050565b6000610e846000356001600160e01b031916610808565b9050610549610e938233611d2f565b610191611084565b8015610ebb57610eb6610eac610f36565b4210610193611084565b610ed0565b610ed0610ec6610f5a565b42106101a9611084565b6007805460ff19168215151790556040517f9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be6490610f0e908390613a90565b60405180910390a150565b6000610f23610f5a565b42118061058557505060075460ff161590565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b60606000610f8a6113ad565b90506060816001600160401b0381118015610fa457600080fd5b50604051908082528060200260200182016040528015610fce578160200160208202803683370190505b5090507f000000000000000000000000000000000000000000000000000000000000000081600081518110610fff57fe5b6020026020010181815250507f00000000000000000000000000000000000000000000000000000000000000008160018151811061103957fe5b6020026020010181815250507f00000000000000000000000000000000000000000000000000000000000000008160028151811061107357fe5b602090810291909101015291505090565b816106b4576106b481611e18565b6110a96001600160a01b0384161515610198611084565b6110c06001600160a01b0383161515610199611084565b6110cb8383836114e4565b6001600160a01b0383166000908152602081905260409020546110f190826101a0611e6b565b6001600160a01b038085166000908152602081905260408082209390935590841681522054611120908261128f565b6001600160a01b0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e60908590613ab3565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006111df611e81565b306040516020016111f4959493929190613b0f565b60405160208183030381529060405280519060200120905090565b61122261121a610f19565b610192611084565b565b61123764e8d4a5100082101560cb611084565b61124d67016345785d8a000082111560ca611084565b60085461125c908260c0610dda565b6008556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc90610f0e908390613ab3565b60008282016105f98482101583611084565b60006112ab61062c565b905060006112b76108a4565b6001600160a01b031663b05f8e4883866040518363ffffffff1660e01b81526004016112e4929190613b54565b60806040518083038186803b1580156112fc57600080fd5b505afa158015611310573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611334919061393c565b604051630639cdb560e21b81529094506001600160a01b03851693506318e736d49250611368915085908790600401613b3b565b600060405180830381600087803b15801561138257600080fd5b505af1158015611396573d6000803e3d6000fd5b5050505050505050565b1c6001600160401b031690565b600390565b6106b48183146067611084565b60006060807f00000000000000000000000000000000000000000000000000000000000000006113ed610f19565b156114355760006113fe8a83611e85565b905061140981611eb7565b6114138a87611ee4565b909550935061142c818661142561054c565b6000611f31565b6009555061144b565b61143f8986611ee4565b60001960095590945092505b604080516003808252608082019092528591859190602082016060803683370190505093509350935050985098509895505050505050565b60005b61148e6113ad565b8110156114e4576114c58382815181106114a457fe5b60200260200101518383815181106114b857fe5b6020026020010151611630565b8382815181106114d157fe5b6020908102919091010152600101611486565b505050565b3330146115a7576000306001600160a01b031660003660405161150d929190613a19565b6000604051808303816000865af19150503d806000811461154a576040519150601f19603f3d011682016040523d82523d6000602084013e61154f565b606091505b50509050806000811461155e57fe5b60046000803e6000516001600160e01b0319166343adbafb60e01b8114611589573d6000803e3d6000fd5b506020600460003e604060205260243d03602460403e601c3d016000f35b60606115b1610f7e565b90506115bd878261166f565b600060606115d58c8c8c8c8c8c898d8d63ffffffff16565b50915091506115e881848663ffffffff16565b8051601f1982018390526343adbafb603f1983015260200260231982016044820181fd5b60008282026105f984158061162957508385838161162657fe5b04145b6003611084565b60008161163c57600080fd5b670de0b6b3a76400008381029084828161165257fe5b041461165d57600080fd5b82818161166657fe5b04949350505050565b60005b61167a6113ad565b8110156114e4576116b183828151811061169057fe5b60200260200101518383815181106116a457fe5b6020026020010151611f8b565b8382815181106116bd57fe5b6020908102919091010152600101611672565b6106b48282611fb4565b60006060807f00000000000000000000000000000000000000000000000000000000000000008361170b8a83611e85565b905061171681611eb7565b6117208a87612070565b9095509350611739818661173261054c565b6001611f31565b60095560408051600380825260808201909252869186919060208201606080368337019050509450945094505050985098509895505050505050565b60005b6117806113ad565b8110156114e4576117b783828151811061179657fe5b60200260200101518383815181106117aa57fe5b60200260200101516120b4565b8382815181106117c357fe5b6020908102919091010152600101611778565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316141561183957507f0000000000000000000000000000000000000000000000000000000000000000610745565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316141561189a57507f0000000000000000000000000000000000000000000000000000000000000000610745565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031614156118fb57507f0000000000000000000000000000000000000000000000000000000000000000610745565b610745610135611e18565b60008061191b6119146106b8565b849061210b565b90506105f98382610def565b60006105f98383611f8b565b6106b461193f83612147565b826106b4565b600061194f61120f565b600061195961214d565b905061196785858584612230565b95945050505050565b60006105f98383611630565b600061198661120f565b600061199061214d565b905061196785858584612242565b60006105f983836120b4565b60006105326119c96119ba6106b8565b670de0b6b3a764000090610def565b83906120b4565b60006119da6108a4565b6001600160a01b031663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b158015611a1257600080fd5b505afa158015611a26573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058591906133dc565b60006060611a566108a4565b6001600160a01b031663f94d4668611a6c61062c565b6040518263ffffffff1660e01b8152600401611a889190613ab3565b60006040518083038186803b158015611aa057600080fd5b505afa158015611ab4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611adc9190810190613510565b50915050611af181611aec610f7e565b61166f565b611b1b817f0000000000000000000000000000000000000000000000000000000000000000611e85565b91505090565b6000611b2b611172565b8260405160200161083d929190613a29565b60006060611b4961120f565b6000611b5484612254565b9050611b6f6000826003811115611b6757fe5b1460ce611084565b6060611b7a8561226a565b9050611b88815160036113b2565b611b92818761166f565b6000611bbe827f0000000000000000000000000000000000000000000000000000000000000000611e85565b90506000611bcd82600361160c565b6009929092555093509150505b9550959350505050565b620f424090565b6106b48282612280565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b604080516003808252608082019092526060918291906020820183803683370190505090506003670de0b6b3a76400000481600081518110611c5e57fe5b60209081029190910101526003670de0b6b3a76400000481600181518110611c8257fe5b60209081029190910101526003670de0b6b3a76400000481600281518110611ca657fe5b6020908102919091010152905090565b600281511015611cc557610549565b600081600081518110611cd457fe5b602002602001015190506000600190505b82518110156114e4576000838281518110611cfc57fe5b60200260200101519050611d25816001600160a01b0316846001600160a01b0316106065611084565b9150600101611ce5565b600073ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b611d4e610880565b6001600160a01b031614158015611d695750611d698361230e565b15611d9157611d76610880565b6001600160a01b0316336001600160a01b0316149050610532565b611d996119d0565b6001600160a01b0316639be2a8848484306040518463ffffffff1660e01b8152600401611dc893929190613abc565b60206040518083038186803b158015611de057600080fd5b505afa158015611df4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dbf91906135f7565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6000611e7a8484111583611084565b5050900390565b4690565b6000806000806000611e978787612340565b9350935093509350611eac848484848a6124b0565b979650505050505050565b600080600080611ec9600954866124d8565b9350935093509350611edd84848484612541565b5050505050565b600060606000611ef384612254565b90506001816003811115611f0357fe5b1415611f1d57611f138585612567565b9250925050611f2a565b611f28610150611e18565b505b9250929050565b60008115611f63576000611f4f84611f49888861210b565b906120b4565b9050611f5b868261128f565b915050611f83565b6000611f73846107258888611f8b565b9050611f7f8682610def565b9150505b949350505050565b6000828202611fa584158061162957508385838161162657fe5b670de0b6b3a764000081611666565b611fcb6001600160a01b038316151561019b611084565b611fd7826000836114e4565b6001600160a01b038216600090815260208190526040902054611ffd90826101a1611e6b565b6001600160a01b0383166000908152602081905260409020556002546120239082612599565b6002556040516000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90612064908590613ab3565b60405180910390a35050565b60006060600061207f84612254565b9050600381600381111561208f57fe5b14156120a95761209f85856125a7565b9093509150611f28565b611f28610136611e18565b60006120c38215156004611084565b826120d057506000610532565b670de0b6b3a7640000838102906120f3908583816120ea57fe5b04146005611084565b8260018203816120ff57fe5b04600101915050610532565b600082820261212584158061162957508385838161162657fe5b80612134576000915050610532565b670de0b6b3a764000060001982016120ff565b50600090565b600060606121596108a4565b6001600160a01b031663f94d466861216f61062c565b6040518263ffffffff1660e01b815260040161218b9190613ab3565b60006040518083038186803b1580156121a357600080fd5b505afa1580156121b7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526121df9190810190613510565b509150506121ef81611aec610f7e565b7f0000000000000000000000000000000000000000000000000000000000000000600061221c8383611e85565b90506122288183611f8b565b935050505090565b600061196784848760600151856125cc565b60006119678484876060015185612664565b6000818060200190518101906105329190613784565b6060818060200190518101906105f991906137cd565b61228c600083836114e4565b600254612299908261128f565b6002556001600160a01b0382166000908152602081905260409020546122bf908261128f565b6001600160a01b0383166000818152602081905260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90612064908590613ab3565b6000612320631c74c91760e11b610808565b82148061053257506123386350dd6ed960e01b610808565b909114919050565b600080808061235c6119ba866123568180611f8b565b90611f8b565b935060006123b98760028151811061237057fe5b60200260200101516123b38960018151811061238857fe5b60200260200101518a60008151811061239d57fe5b602002602001015161128f90919063ffffffff16565b9061128f565b90506123c9866123568382611f8b565b9350600061245861240b896000815181106123e057fe5b60200260200101518a6002815181106123f557fe5b6020026020010151611f8b90919063ffffffff16565b6123b36124338b60028151811061241e57fe5b60200260200101518c6001815181106123f557fe5b6123b38c60018151811061244357fe5b60200260200101518d6000815181106123f557fe5b90506124648188611f8b565b93506124a38860028151811061247657fe5b60200260200101516123568a60018151811061248e57fe5b60200260200101518b6000815181106123f557fe5b9250505092959194509250565b60006124be868686866126f5565b90506124ce8686868686866127ab565b9695505050505050565b6000806000806000806000806124ec61286e565b9350935093509350836000141561251157600097508796509094509250612538915050565b6000806125288c8c61252161054c565b8989612add565b909a509850929650909450505050505b92959194509250565b8315612551576125518285611beb565b8215612561576125618184611beb565b50505050565b60006060600061257684612b70565b9050606061258c868361258761054c565b612b86565b9196919550909350505050565b60006105f983836001611e6b565b6000606060006125b684612b70565b9050606061258c86836125c761054c565b612c21565b60006125ee6125e386670429d069189e0000611f8b565b841115610130611084565b600061260c61260584670de0b6b3a764000261210b565b879061128f565b9050600061262561260585670de0b6b3a763ffff611f8b565b905061263e612634838761128f565b6107258388611f8b565b9250611f839150612659905085670429d069189e0000611f8b565b821115610131611084565b600061268661267b85670429d069189e0000611f8b565b841115610131611084565b600061269d61260584670de0b6b3a764000261210b565b905060006126b661260585670de0b6b3a763ffff611f8b565b90506126cf6126c58287610def565b611f49848861210b565b9250611f8391506126ea905086670429d069189e0000611f8b565b821115610130611084565b6000806127216127176729a2241af62c0000612711898861210b565b9061210b565b6123b3878061210b565b9050600061274761273a60038902611f49856005612cc8565b6123b38860038b026120b4565b9050600061275d670de0b6b3a764000089610def565b905060006706f05b59d3b2000082101561277f57671bc16d674ec80000612789565b6714d1120d7b1600005b6001600160401b0316905061279e838261210b565b9998505050505050505050565b600080805b60ff811015612857576000806127ca8b8b8b8b8b8b612e3b565b91509150600182116127e257859450505050506124ce565b600583108015906127f05750805b1561280157859450505050506124ce565b600583108015906128155750600884048210155b1561282657859450505050506124ce565b819350801561284057612839868361128f565b955061284d565b61284a8683610def565b95505b50506001016127b0565b50612863610160611e18565b509695505050505050565b600a5460405163bd02d0f560e01b81526000918291829182916001600160a01b039091169063bd02d0f5906128c0907550524f544f434f4c5f535741505f4645455f5045524360501b90600401613ab3565b60206040518083038186803b1580156128d857600080fd5b505afa1580156128ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129109190613924565b600a5460405163bd02d0f560e01b81526001600160a01b039091169063bd02d0f590612960907f50524f544f434f4c5f4645455f4759524f5f504f5254494f4e0000000000000090600401613ab3565b60206040518083038186803b15801561297857600080fd5b505afa15801561298c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129b09190613924565b600a546040516321f8a72160e01b81526001600160a01b03909116906321f8a721906129f0906c4759524f5f545245415355525960981b90600401613ab3565b60206040518083038186803b158015612a0857600080fd5b505afa158015612a1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a4091906133dc565b600a546040516321f8a72160e01b81526001600160a01b03909116906321f8a72190612a7f906b42414c5f545245415355525960a01b90600401613ab3565b60206040518083038186803b158015612a9757600080fd5b505afa158015612aab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612acf91906133dc565b935093509350935090919293565b600080868611612af257506000905080611bda565b6000612b0c85612356612b058a8c610def565b8990611f8b565b90506000612b24612b1d898b610def565b8790611f8b565b90506000612b328983610def565b90506000612b408483611630565b90506000612b4e8883611f8b565b90506000612b5c8383610def565b919d919c50909a5050505050505050505050565b6000818060200190518101906105f991906137a0565b60606000612b948484611630565b9050606085516001600160401b0381118015612baf57600080fd5b50604051908082528060200260200182016040528015612bd9578160200160208202803683370190505b50905060005b8651811015612c1757612bf8838883815181106123f557fe5b828281518110612c0457fe5b6020908102919091010152600101612bdf565b5095945050505050565b60606000612c2f84846120b4565b9050606085516001600160401b0381118015612c4a57600080fd5b50604051908082528060200260200182016040528015612c74578160200160208202803683370190505b50905060005b8651811015612c1757612ca983888381518110612c9357fe5b602002602001015161210b90919063ffffffff16565b828281518110612cb557fe5b6020908102919091010152600101612c7a565b600082612cd757506000610532565b6000612ce284612f20565b9050600281670de0b6b3a7640000860281612cf957fe5b04820181612d0357fe5b049050600281670de0b6b3a7640000860281612d1b57fe5b04820181612d2557fe5b049050600281670de0b6b3a7640000860281612d3d57fe5b04820181612d4757fe5b049050600281670de0b6b3a7640000860281612d5f57fe5b04820181612d6957fe5b049050600281670de0b6b3a7640000860281612d8157fe5b04820181612d8b57fe5b049050600281670de0b6b3a7640000860281612da357fe5b04820181612dad57fe5b049050600281670de0b6b3a7640000860281612dc557fe5b04820181612dcf57fe5b0490506000612dde8280611f8b565b9050612df4612ded838661210b565b869061128f565b8111158015612e165750612e12612e0b838661210b565b8690610def565b8110155b610a855760405162461bcd60e51b8152600401612e3290613b9c565b60405180910390fd5b6000808080612e4a8580611f8b565b9050612e5760038261160c565b9150612e73612e6c8761235681818782611f8b565b8390610def565b9150612e9888612e92612e8b60026107208a8f611f8b565b8590610def565b90610def565b9150506000612ea8858784613103565b90506000612eba8a6123568880611f8b565b9050612ed483610725612ecd898d611f8b565b849061128f565b9050612eea612ee38985611630565b829061128f565b905081811015935083612f0657612f018282610def565b612f10565b612f108183610def565b9450505050965096945050505050565b6000670de0b6b3a76400008210612f4d57670de0b6b3a7640000612f4581840461321a565b1b9050610745565b600a821015612f6157506312d940b6610745565b6064821015612f7657506402540be400610745565b6103e8821015612f8c575064075cdd4719610745565b612710821015612fa2575064174876e800610745565b620186a0821015612fb957506449a0a4c700610745565b620f4240821015612fd0575064e8d4a51000610745565b62989680821015612fe857506502e0466fc608610745565b6305f5e10082101561300157506509184e72a000610745565b633b9aca0082101561301a5750651cc2c05dbc53610745565b6402540be4008210156130345750655af3107a4000610745565b64174876e80082101561304f575066011f9b83a95b45610745565b64e8d4a5100082101561306a575066038d7ea4c68000610745565b6509184e72a0008210156130865750660b3c13249d90bb610745565b655af3107a40008210156130a25750662386f26fc10000610745565b66038d7ea4c680008210156130bf5750667058bf6e27a751610745565b662386f26fc100008210156130dd575067016345785d8a0000610745565b67016345785d8a00008210156130fc5750670463777a4d8c892d610745565b5080610745565b60006d0266ae2fd4d2340b427660000000841161315757613128846123568180611f8b565b905061314461313d8461235681818682611f8b565b8290610def565b90506131508183611630565b90506105f9565b6131618480611f8b565b905061319261317d670de0b6b3a7640000865b84919006611f8b565b6123b383670de0b6b3a7640000885b0461160c565b9050806131c26131a6633b9aca0086613174565b6123b36131b884633b9aca008961318c565b633b9aca006132b0565b90506131d56131a6633b9aca0086613174565b90506131e86131a6633b9aca0086613174565b90506131f48282610def565b915061196761320783633b9aca0061160c565b61321585633b9aca006132b0565b6132b0565b6000600160801b82106132325760809190911c906040015b68010000000000000000821061324d5760409190911c906020015b64010000000082106132645760209190911c906010015b6201000082106132795760109190911c906008015b610100821061328d5760089190911c906004015b601082106132a05760049190911c906002015b6004821061074557600101919050565b60006132bf8215156004611084565b8183816132c857fe5b049392505050565b803561053281613c2e565b600082601f8301126132eb578081fd5b81516132fe6132f982613c0f565b613be9565b81815291506020808301908481018184028601820187101561331f57600080fd5b60005b8481101561333e57815184529282019290820190600101613322565b505050505092915050565b600082601f830112613359578081fd5b81356001600160401b0381111561336e578182fd5b613381601f8201601f1916602001613be9565b915080825283602082850101111561339857600080fd5b8060208401602084013760009082016020015292915050565b80356002811061053257600080fd5b6000602082840312156133d1578081fd5b81356105f981613c2e565b6000602082840312156133ed578081fd5b81516105f981613c2e565b6000806040838503121561340a578081fd5b823561341581613c2e565b9150602083013561342581613c2e565b809150509250929050565b600080600060608486031215613444578081fd5b833561344f81613c2e565b9250602084013561345f81613c2e565b929592945050506040919091013590565b600080600080600080600060e0888a03121561348a578485fd5b873561349581613c2e565b965060208801356134a581613c2e565b95506040880135945060608801359350608088013560ff811681146134c8578384fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156134f7578182fd5b823561350281613c2e565b946020939093013593505050565b600080600060608486031215613524578081fd5b83516001600160401b038082111561353a578283fd5b818601915086601f83011261354d578283fd5b815161355b6132f982613c0f565b80828252602080830192508086018b82838702890101111561357b578788fd5b8796505b848710156135a657805161359281613c2e565b84526001969096019592810192810161357f565b5089015190975093505050808211156135bd578283fd5b506135ca868287016132db565b925050604084015190509250925092565b6000602082840312156135ec578081fd5b81356105f981613c43565b600060208284031215613608578081fd5b81516105f981613c43565b600080600080600080600060e0888a03121561362d578081fd5b8735965060208089013561364081613c2e565b9650604089013561365081613c2e565b955060608901356001600160401b038082111561366b578384fd5b818b0191508b601f83011261367e578384fd5b813561368c6132f982613c0f565b8082825285820191508585018f8788860288010111156136aa578788fd5b8795505b838610156136cc5780358352600195909501949186019186016136ae565b509850505060808b0135955060a08b0135945060c08b01359250808311156136f2578384fd5b50506137008a828b01613349565b91505092959891949750929550565b600060208284031215613720578081fd5b81356001600160e01b0319811681146105f9578182fd5b60008060408385031215613749578182fd5b823561375481613c2e565b915060208301356001600160401b0381111561376e578182fd5b61377a85828601613349565b9150509250929050565b600060208284031215613795578081fd5b81516105f981613c51565b600080604083850312156137b2578182fd5b82516137bd81613c51565b6020939093015192949293505050565b600080604083850312156137df578182fd5b82516137ea81613c51565b60208401519092506001600160401b03811115613805578182fd5b61377a858286016132db565b600080600060608486031215613825578081fd5b83356001600160401b038082111561383b578283fd5b8186019150610120808389031215613851578384fd5b61385a81613be9565b905061386688846133b1565b815261387588602085016132d0565b602082015261388788604085016132d0565b6040820152606083013560608201526080830135608082015260a083013560a08201526138b78860c085016132d0565b60c08201526138c98860e085016132d0565b60e082015261010080840135838111156138e1578586fd5b6138ed8a828701613349565b9183019190915250976020870135975060409096013595945050505050565b60006020828403121561391d578081fd5b5035919050565b600060208284031215613935578081fd5b5051919050565b60008060008060808587031215613951578182fd5b845193506020850151925060408501519150606085015161397181613c2e565b939692955090935050565b6000815180845260208085019450808401835b838110156139ab5781518752958201959082019060010161398f565b509495945050505050565b60008151808452815b818110156139db576020818501810151868301820152016139bf565b818111156139ec5782602083870101525b50601f01601f19169290920160200192915050565b9182526001600160e01b031916602082015260240190565b6000828483379101908152919050565b61190160f01b81526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6000602082526105f9602083018461397c565b600060408252613a7e604083018561397c565b8281036020840152611967818561397c565b901515815260200190565b92151583526020830191909152604082015260600190565b90815260200190565b9283526001600160a01b03918216602084015216604082015260600190565b9586526001600160a01b0394851660208701529290931660408501526060840152608083019190915260a082015260c00190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b600083825260406020830152611f8360408301846139b6565b9182526001600160a01b0316602082015260400190565b93845260ff9290921660208401526040830152606082015260800190565b6000602082526105f960208301846139b6565b6020808252600c908201526b17dcdc5c9d0811905253115160a21b604082015260600190565b600083825260406020830152611f83604083018461397c565b60ff91909116815260200190565b6040518181016001600160401b0381118282101715613c0757600080fd5b604052919050565b60006001600160401b03821115613c24578081fd5b5060209081020190565b6001600160a01b038116811461054957600080fd5b801515811461054957600080fd5b6004811061054957600080fdfea2646970667358221220125dbc85d77bc9bc166ecfe9badffee4c9b73c130595b2dd212686ac103ef38b64736f6c63430007010033", "bytecodeSha1": "68516c91bde254189f965643bacf97143761eab0", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.7.1+commit.f4a555be"}, "contractName": "GyroThreePool", "coverageMap": {"branches": {"0": {}, "1": {"GyroThreeMath._calcNewtonDelta": {"350": [9529, 9539, true]}, "GyroThreeMath._calculateCubicStartingPoint": {"344": [6189, 6204, true]}, "GyroThreeMath._runNewtonIteration": {"345": [7257, 7270, false], "346": [7304, 7342, false], "347": [7517, 7555, false], "348": [7559, 7622, false], "349": [7817, 7827, false]}, "GyroThreeMath._safeLargePow3ADown": {"351": [10190, 10221, false]}}, "10": {"BaseMinimalSwapInfoPool.onSwap": {"307": [1681, 1721, false]}}, "11": {"BasePool._queryAction": {"308": [25546, 25573, false]}}, "12": {"BasePoolAuthorization._canPerform": {"309": [2112, 2140, false]}}, "16": {}, "17": {}, "18": {}, "19": {}, "2": {"GyroThreePool._doExit": {"298": [17229, 17290, false]}, "GyroThreePool._doJoin": {"299": [12501, 12566, false]}, "GyroThreePool._getDueProtocolFeeAmounts": {"300": [20729, 20753, false]}, "GyroThreePool._onExitPool": {"294": [14206, 14220, false]}, "GyroThreePool._payFeesBpt": {"301": [21466, 21478, false], "302": [21600, 21616, false]}, "GyroThreePool._scalingFactor": {"295": [4612, 4628, false], "296": [4696, 4712, false], "297": [4780, 4796, false]}}, "22": {}, "23": {}, "24": {}, "25": {"InputHelpers.ensureArrayIsSorted": {"352": [1496, 1512, false]}}, "26": {"TemporarilyPausable._setPaused": {"353": [3849, 3855, false]}}, "27": {}, "28": {"FixedPoint.divDown": {"310": [2574, 2580, true], "311": [2645, 2665, true]}, "FixedPoint.divUp": {"312": [2862, 2868, false]}, "FixedPoint.mulUp": {"313": [2046, 2058, false]}}, "29": {}, "3": {}, "30": {}, "31": {}, "32": {}, "33": {}, "34": {}, "35": {}, "36": {}, "37": {}, "38": {}, "39": {}, "40": {}, "41": {}, "42": {}, "43": {}, "44": {}, "45": {}, "5": {}, "6": {}, "7": {"GyroPoolMath._calcProtocolFees": {"315": [5784, 5821, false]}, "GyroPoolMath._intLog2Halved": {"337": [10486, 10499, false], "338": [10569, 10581, false], "339": [10650, 10662, false], "340": [10731, 10743, false], "341": [10811, 10822, false], "342": [10889, 10900, false], "343": [10967, 10978, false]}, "GyroPoolMath._makeInitialGuess": {"319": [8879, 8902, false], "320": [9024, 9034, false], "321": [9107, 9118, false], "322": [9181, 9192, false], "323": [9265, 9276, false], "324": [9339, 9350, false], "325": [9423, 9434, false], "326": [9497, 9508, false], "327": [9581, 9592, false], "328": [9655, 9666, false], "329": [9738, 9750, false], "330": [9813, 9825, false], "331": [9897, 9909, false], "332": [9972, 9984, false], "333": [10056, 10068, false], "334": [10131, 10143, false], "335": [10215, 10227, false], "336": [10290, 10302, false]}, "GyroPoolMath._sqrt": {"316": [7313, 7323, false], "317": [8054, 8103, false], "318": [8107, 8156, true]}, "GyroPoolMath.liquidityInvariantUpdate": {"314": [11657, 11670, false]}}, "8": {}, "9": {"BalancerPoolToken.allowance": {"306": [2364, 2394, false]}, "BalancerPoolToken.decreaseAllowance": {"305": [3611, 3637, false]}, "BalancerPoolToken.transferFrom": {"303": [3030, 3050, false], "304": [3054, 3085, false]}}}, "statements": {"0": {"ExtensibleBaseWeightedPool.getLastInvariant": {"36": [3461, 3482]}, "ExtensibleBaseWeightedPool.getNormalizedWeights": {"72": [4149, 4179]}, "ExtensibleBaseWeightedPool.getRate": {"22": [22035, 22108]}}, "1": {"GyroThreeMath._calcInGivenOut": {"213": [17048, 17127], "214": [17593, 17666], "215": [17687, 17762]}, "GyroThreeMath._calcNewtonDelta": {"243": [8736, 8769], "244": [8783, 8879], "245": [8893, 8960], "246": [9335, 9400], "247": [9410, 9458], "248": [9469, 9507], "249": [9517, 9596]}, "GyroThreeMath._calcOutGivenIn": {"210": [14054, 14129], "211": [14595, 14671], "212": [14834, 14913]}, "GyroThreeMath._calculateCubic": {"202": [5172, 5225], "203": [5235, 5300]}, "GyroThreeMath._calculateCubicStartingPoint": {"216": [6230, 6253]}, "GyroThreeMath._calculateCubicTerms": {"198": [4039, 4113], "199": [4194, 4244], "200": [4390, 4420], "201": [4430, 4488]}, "GyroThreeMath._calculateInvariant": {"165": [3450, 3499]}, "GyroThreeMath._runNewtonIteration": {"217": [7272, 7286], "218": [7485, 7499], "219": [7734, 7748], "220": [7776, 7799], "221": [7829, 7860], "222": [7879, 7910], "223": [6900, 6911], "224": [7930, 7983]}, "GyroThreeMath._safeLargePow3ADown": {"269": [10291, 10320], "270": [10334, 10412], "271": [10426, 10446], "272": [10477, 10495], "273": [10761, 10837], "274": [10881, 10987], "275": [11001, 11107], "276": [11121, 11227], "277": [11241, 11257], "278": [11638, 11712]}}, "10": {"BaseMinimalSwapInfoPool._processSwapFeeAmount": {"137": [5632, 5690]}, "BaseMinimalSwapInfoPool.onSwap": {"37": [2053, 2132], "38": [2147, 2185], "39": [2247, 2310], "40": [2324, 2390], "41": [2404, 2467], "42": [2645, 2700], "43": [2778, 2841], "44": [2855, 2921], "45": [2935, 2999], "46": [3175, 3230], "47": [3544, 3623], "48": [3638, 3665]}}, "11": {"BasePool._addSwapFeeAmount": {"142": [19216, 19279]}, "BasePool._downscaleDown": {"139": [23084, 23132]}, "BasePool._downscaleDownArray": {"114": [23488, 23550], "115": [23469, 23472]}, "BasePool._downscaleUp": {"141": [23872, 23918]}, "BasePool._downscaleUpArray": {"129": [24270, 24330], "130": [24251, 24254]}, "BasePool._getAuthorizer": {"143": [24801, 24834]}, "BasePool._isOwnerOnlyAction": {"197": [7403, 7565]}, "BasePool._queryAction": {"116": [29770, 29809], "117": [30150, 30195]}, "BasePool._setAssetManagerPoolConfig": {"104": [7136, 7193]}, "BasePool._setSwapFeePercentage": {"99": [6353, 6440], "100": [6450, 6537], "101": [6548, 6630], "102": [6640, 6688]}, "BasePool._subtractSwapFeeAmount": {"135": [19634, 19662]}, "BasePool._upscale": {"136": [22304, 22352]}, "BasePool._upscaleArray": {"122": [22696, 22758], "123": [22677, 22680]}, "BasePool.getPoolId": {"16": [5691, 5705]}, "BasePool.getScalingFactors": {"8": [21587, 21611]}, "BasePool.getSwapFeePercentage": {"19": [6042, 6100]}, "BasePool.onExitPool": {"24": [10931, 10970], "25": [11404, 11440], "26": [11552, 11599], "27": [11609, 11667], "28": [11678, 11720]}, "BasePool.onJoinPool": {"59": [9180, 9242], "60": [9256, 9301], "61": [9315, 9374], "62": [9461, 9505], "63": [9520, 9572], "64": [9603, 9642], "65": [10123, 10163], "66": [10250, 10294], "67": [10393, 10451], "68": [10466, 10507]}, "BasePool.queryExit": {"20": [14219, 14290], "21": [14301, 14556]}, "BasePool.queryJoin": {"31": [12694, 12765], "32": [12776, 13029]}, "BasePool.setAssetManagerPoolConfig": {"18": [6863, 6908]}, "BasePool.setPaused": {"3": [7270, 7288]}, "BasePool.setSwapFeePercentage": {"15": [6224, 6264]}}, "12": {"BasePoolAuthorization._canPerform": {"162": [2251, 2282], "163": [2428, 2496]}, "BasePoolAuthorization.getAuthorizer": {"53": [1933, 1956]}, "BasePoolAuthorization.getOwner": {"33": [1836, 1849]}}, "16": {}, "17": {"WeightedPoolUserDataHelpers.exactBptInForTokensOut": {"228": [2448, 2520]}, "WeightedPoolUserDataHelpers.initialAmountsIn": {"192": [1311, 1383]}, "WeightedPoolUserDataHelpers.joinKind": {"191": [964, 1016]}}, "18": {"Authentication._authenticateCaller": {"78": [2404, 2474]}, "Authentication.getActionId": {"30": [2842, 2910]}}, "19": {"_require": {"90": [946, 964]}}, "2": {"GyroThreePool._calculateInvariant": {"144": [6857, 6899], "145": [6909, 6972]}, "GyroThreePool._calculateVirtualOffset": {"187": [6416, 6458], "188": [6595, 6640]}, "GyroThreePool._distributeFees": {"166": [19250, 19312]}, "GyroThreePool._doExit": {"167": [17306, 17360], "168": [17391, 17426]}, "GyroThreePool._doJoin": {"178": [12582, 12660], "179": [12691, 12726]}, "GyroThreePool._exitExactBPTInForTokensOut": {"208": [18338, 18370]}, "GyroThreePool._getDueProtocolFeeAmounts": {"204": [20769, 20809], "205": [21114, 21172]}, "GyroThreePool._getFeesMetadata": {"225": [21952, 22259]}, "GyroThreePool._getNormalizedWeights": {"154": [3641, 3680], "155": [3694, 3733], "156": [3747, 3786], "157": [3807, 3831]}, "GyroThreePool._getTotalTokens": {"106": [4326, 4334]}, "GyroThreePool._onExitPool": {"108": [14642, 14678], "109": [14693, 14748], "110": [15198, 15308], "111": [15539, 15594], "112": [16012, 16046], "113": [16179, 16229]}, "GyroThreePool._onInitializePool": {"147": [8791, 8861], "148": [8938, 8994], "149": [9004, 9044], "150": [9483, 9518], "151": [9529, 9561]}, "GyroThreePool._onJoinPool": {"125": [11338, 11374], "126": [11385, 11440], "127": [11866, 11976], "128": [12099, 12149]}, "GyroThreePool._onSwapGivenIn": {"138": [5651, 5747], "189": [7206, 7324]}, "GyroThreePool._onSwapGivenOut": {"140": [6042, 6139], "190": [7559, 7677]}, "GyroThreePool._payFeesBpt": {"206": [21494, 21533], "207": [21632, 21674]}, "GyroThreePool._scalingFactor": {"131": [4644, 4675], "132": [4728, 4759], "133": [4812, 4843], "134": [4874, 4903]}, "GyroThreePool._scalingFactors": {"86": [5182, 5217], "87": [5231, 5266], "88": [5280, 5315], "89": [5336, 5357]}, "GyroThreePool.getInvariant": {"54": [16397, 16425]}, "GyroThreePool.getRoot3Alpha": {"69": [3077, 3095]}}, "22": {}, "23": {}, "24": {}, "25": {"InputHelpers.ensureArrayIsSorted": {"73": [1369, 1402], "158": [1528, 1535], "159": [1689, 1740], "160": [1754, 1772], "161": [1630, 1633]}, "InputHelpers.ensureInputLengthMatch": {"107": [888, 934]}}, "26": {"TemporarilyPausable._ensureNotPaused": {"98": [4272, 4311]}, "TemporarilyPausable._getBufferPeriodEndTime": {"85": [5084, 5111]}, "TemporarilyPausable._getPauseWindowEndTime": {"84": [4969, 4995]}, "TemporarilyPausable._isNotPaused": {"83": [4712, 4774]}, "TemporarilyPausable._setPaused": {"79": [3871, 3952], "80": [3983, 4066], "81": [4087, 4103], "82": [4113, 4144]}, "TemporarilyPausable.getPausedState": {"5": [3374, 3398], "6": [3408, 3453], "7": [3463, 3510]}}, "27": {"WordCodec.decodeUint64": {"105": [11684, 11725]}, "WordCodec.insertUint64": {"74": [7104, 7149]}}, "28": {"FixedPoint.divDown": {"119": [2566, 2581], "120": [2637, 2666], "121": [2697, 2717]}, "FixedPoint.divUp": {"180": [2809, 2847], "181": [2884, 2892], "182": [2964, 3015], "183": [3363, 3395]}, "FixedPoint.mulDown": {"171": [1761, 1818], "172": [1829, 1849]}, "FixedPoint.mulUp": {"184": [1974, 2031], "185": [2074, 2082], "186": [2430, 2462]}}, "29": {}, "3": {}, "30": {"Math.divDown": {"292": [2238, 2276], "293": [2286, 2298]}, "Math.mul": {"118": [1897, 1948]}, "Math.sub": {"75": [1025, 1062]}}, "31": {}, "32": {"EIP712._domainSeparatorV4": {"97": [2466, 2567]}, "EIP712._hashTypedDataV4": {"146": [3295, 3375]}}, "33": {"ERC20._approve": {"76": [9468, 9504], "77": [9514, 9551]}, "ERC20._burn": {"173": [8587, 8655], "174": [8666, 8715], "175": [8726, 8814], "176": [8824, 8863], "177": [8873, 8915]}, "ERC20._mint": {"193": [7973, 8022], "194": [8033, 8072], "195": [8082, 8133], "196": [8143, 8185]}, "ERC20._transfer": {"91": [7195, 7266], "92": [7276, 7348], "93": [7359, 7406], "94": [7417, 7505], "95": [7515, 7570], "96": [7580, 7620]}, "ERC20.allowance": {"153": [3993, 4027]}, "ERC20.approve": {"1": [4271, 4308], "2": [4318, 4329]}, "ERC20.balanceOf": {"23": [3422, 3447]}, "ERC20.decimals": {"13": [3098, 3114]}, "ERC20.increaseAllowance": {"17": [5688, 5767]}, "ERC20.name": {"0": [2200, 2212]}, "ERC20.symbol": {"35": [2396, 2410]}, "ERC20.totalSupply": {"4": [3253, 3272]}, "ERC20.transfer": {"52": [3759, 3799]}}, "34": {"ERC20Permit.DOMAIN_SEPARATOR": {"14": [2438, 2465]}, "ERC20Permit.nonces": {"29": [2207, 2228]}, "ERC20Permit.permit": {"55": [1575, 1635], "56": [1902, 1981], "57": [1992, 2018], "58": [2028, 2059]}}, "35": {}, "36": {}, "37": {"SafeMath.add": {"103": [1019, 1056]}, "SafeMath.sub": {"164": [1861, 1888], "209": [1430, 1467]}}, "38": {}, "39": {}, "40": {}, "41": {}, "42": {}, "43": {}, "44": {}, "45": {}, "5": {}, "6": {}, "7": {"GyroPoolMath._calcAllTokensInGivenExactBptOut": {"232": [2867, 2909], "233": [2848, 2851]}, "GyroPoolMath._calcProtocolFees": {"226": [6073, 6086], "227": [7071, 7102]}, "GyroPoolMath._calcTokensOutGivenExactBptIn": {"229": [4404, 4449], "230": [4385, 4388], "231": [4470, 4487]}, "GyroPoolMath._intLog2Halved": {"279": [10515, 10524], "280": [10538, 10545], "281": [10597, 10605], "282": [10619, 10626], "283": [10678, 10686], "284": [10700, 10707], "285": [10759, 10767], "286": [10781, 10787], "287": [10838, 10845], "288": [10859, 10865], "289": [10916, 10923], "290": [10937, 10943], "291": [11015, 11021]}, "GyroPoolMath._makeInitialGuess": {"250": [8918, 8989], "251": [9054, 9075], "252": [9138, 9149], "253": [9212, 9233], "254": [9296, 9307], "255": [9370, 9391], "256": [9454, 9465], "257": [9528, 9549], "258": [9612, 9623], "259": [9686, 9706], "260": [9770, 9781], "261": [9845, 9865], "262": [9929, 9940], "263": [10004, 10024], "264": [10088, 10099], "265": [10163, 10183], "266": [10247, 10258], "267": [10322, 10342], "268": [10370, 10382]}, "GyroPoolMath._sqrt": {"234": [7339, 7347], "235": [7443, 7499], "236": [7509, 7565], "237": [7575, 7631], "238": [7641, 7697], "239": [7707, 7763], "240": [7773, 7829], "241": [7839, 7895], "242": [8046, 8173]}, "GyroPoolMath.liquidityInvariantUpdate": {"169": [11844, 11878], "170": [12094, 12128]}}, "8": {}, "9": {"BalancerPoolToken._burnPoolTokens": {"124": [4092, 4113]}, "BalancerPoolToken._mintPoolTokens": {"152": [3979, 4003]}, "BalancerPoolToken.allowance": {"70": [2410, 2428], "71": [2459, 2497]}, "BalancerPoolToken.decreaseAllowance": {"49": [3653, 3685], "50": [3772, 3828], "51": [3849, 3860]}, "BalancerPoolToken.getVault": {"34": [1938, 1951]}, "BalancerPoolToken.transferFrom": {"9": [2867, 2968], "10": [2979, 3015], "11": [3218, 3273], "12": [3294, 3305]}}}}, "dependencies": ["Authentication", "BalancerPoolToken", "BaseMinimalSwapInfoPool", "BasePool", "BasePoolAuthorization", "EIP712", "ERC20", "ERC20Permit", "Errors", "ExtensibleBaseWeightedPool", "FixedPoint", "GyroConfigKeys", "GyroPoolMath", "GyroThreeMath", "GyroThreePoolErrors", "IAsset", "IAssetManager", "IAuthentication", "IAuthorizer", "IBasePool", "IERC20", "IERC20Permit", "IFlashLoanRecipient", "IGyroConfig", "IMinimalSwapInfoPool", "IPoolSwapStructs", "IProtocolFeesCollector", "ISignaturesValidator", "ITemporarilyPausable", "IVault", "IWETH", "InputHelpers", "LogExpMath", "Math", "SafeMath", "TemporarilyPausable", "WeightedMath", "WeightedPoolUserDataHelpers", "WordCodec"], "deployedBytecode": "608060405234801561001057600080fd5b506004361061021c5760003560e01c806374f3b00911610125578063a457c2d7116100ad578063d505accf1161007c578063d505accf14610442578063d5c096c414610455578063d60ca60314610468578063dd62ed3e14610470578063f89f27ed146104835761021c565b8063a457c2d71461040c578063a9059cbb1461041f578063aaabadc514610432578063c0ff1a151461043a5761021c565b8063893d20e8116100f4578063893d20e8146103d95780638d928af8146103e157806395d89b41146103e95780639b02cdde146103f15780639d2c110c146103f95761021c565b806374f3b0091461037f5780637ecebe00146103a0578063851c1bb3146103b357806387ec6817146103c65761021c565b806338e9922e116101a857806350dd6ed91161017757806350dd6ed91461032857806355c676281461033b5780636028bfd414610343578063679aefce1461036457806370a082311461036c5761021c565b806338e9922e146102e557806338fff2d0146102f8578063395093511461030057806344bbdb55146103135761021c565b80631c0de051116101ef5780631c0de051146102895780631dd746ea146102a057806323b872dd146102b5578063313ce567146102c85780633644e515146102dd5761021c565b806306fdde0314610221578063095ea7b31461023f57806316c38b3c1461025f57806318160ddd14610274575b600080fd5b61022961048b565b6040516102369190613b89565b60405180910390f35b61025261024d3660046134e5565b610521565b6040516102369190613a90565b61027261026d3660046135db565b610538565b005b61027c61054c565b6040516102369190613ab3565b610291610552565b60405161023693929190613a9b565b6102a861057b565b6040516102369190613a58565b6102526102c3366004613430565b61058a565b6102d0610600565b6040516102369190613bdb565b61027c610609565b6102726102f336600461390c565b610613565b61027c61062c565b61025261030e3660046134e5565b610650565b61031b61068b565b6040516102369190613a44565b610272610336366004613737565b61069a565b61027c6106b8565b610356610351366004613613565b6106c9565b604051610236929190613bc2565b61027c610700565b61027c61037a3660046133c0565b61072b565b61039261038d366004613613565b61074a565b604051610236929190613a6b565b61027c6103ae3660046133c0565b6107ed565b61027c6103c136600461370f565b610808565b6103566103d4366004613613565b61085a565b61031b610880565b61031b6108a4565b6102296108c8565b61027c610929565b61027c610407366004613811565b61092f565b61025261041a3660046134e5565b610a8d565b61025261042d3660046134e5565b610acb565b61031b610ad8565b61027c610ae2565b610272610450366004613470565b610aec565b610392610463366004613613565b610c35565b61027c610d65565b61027c61047e3660046133f8565b610d89565b6102a8610dc6565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105175780601f106104ec57610100808354040283529160200191610517565b820191906000526020600020905b8154815290600101906020018083116104fa57829003601f168201915b5050505050905090565b600061052e338484610e05565b5060015b92915050565b610540610e6d565b61054981610e9b565b50565b60025490565b600080600061055f610f19565b15925061056a610f36565b9150610574610f5a565b9050909192565b6060610585610f7e565b905090565b6000806105978533610d89565b90506105bb336001600160a01b03871614806105b35750838210155b61019e611084565b6105c6858585611092565b336001600160a01b038616148015906105e157506000198114155b156105f3576105f38533858403610e05565b60019150505b9392505050565b60055460ff1690565b6000610585611172565b61061b610e6d565b61062361120f565b61054981611224565b7f000000000000000000000000000000000000000000000000000000000000000090565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161052e918590610686908661128f565b610e05565b600a546001600160a01b031681565b6106a2610e6d565b6106aa61120f565b6106b482826112a1565b5050565b6008546000906105859060c06113a0565b600060606106df86516106da6113ad565b6113b2565b6106f4898989898989896113bf6114836114e9565b97509795505050505050565b600061058561070d61054c565b610725610718610ae2565b6107206113ad565b61160c565b90611630565b6001600160a01b0381166000908152602081905260409020545b919050565b606080886107746107596108a4565b6001600160a01b0316336001600160a01b03161460cd611084565b61078961077f61062c565b82146101f4611084565b6060610793610f7e565b905061079f888261166f565b60006060806107b48e8e8e8e8e8e8a8f6113bf565b9250925092506107c48d846116d0565b6107ce8285611483565b6107d88185611483565b909550935050505b5097509795505050505050565b6001600160a01b031660009081526006602052604090205490565b60007f00000000000000000000000000000000000000000000000000000000000000008260405160200161083d929190613a01565b604051602081830303815290604052805190602001209050919050565b6000606061086b86516106da6113ad565b6106f4898989898989896116da6117756114e9565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105175780601f106104ec57610100808354040283529160200191610517565b60095490565b600083608001516109416107596108a4565b61094c61077f61062c565b600061095b86602001516117d6565b9050600061096c87604001516117d6565b905060008751600181111561097d57fe5b1415610a0d5760006109928860600151611906565b905060008189606001510390506109b689602001516109b18387611927565b611933565b606089018290526109c78885611927565b97506109d38784611927565b96506109e3896060015185611927565b60608a015260006109f58a8a8a611945565b9050610a018185611970565b96505050505050610a85565b610a178683611927565b9550610a238582611927565b9450610a33876060015182611927565b60608801526000610a4588888861197c565b9050610a51818461199e565b90506000610a5e826119aa565b905060008282039050610a798a602001516109b18388611927565b509450610a8592505050565b509392505050565b600080610a9a3385610d89565b9050808310610ab457610aaf33856000610e05565b610ac1565b610ac13385858403610e05565b5060019392505050565b600061052e338484611092565b60006105856119d0565b6000610585611a4a565b610afa8442111560d1611084565b6001600160a01b0387166000908152600660209081526040808320549051909291610b51917f0000000000000000000000000000000000000000000000000000000000000000918c918c918c9188918d9101613adb565b6040516020818303038152906040528051906020012090506000610b7482611b21565b9050600060018288888860405160008152602001604052604051610b9b9493929190613b6b565b6020604051602081039080840390855afa158015610bbd573d6000803e3d6000fd5b5050604051601f1901519150610bff90506001600160a01b03821615801590610bf757508b6001600160a01b0316826001600160a01b0316145b6101f8611084565b6001600160a01b038b166000908152600660205260409020600185019055610c288b8b8b610e05565b5050505050505050505050565b60608088610c446107596108a4565b610c4f61077f61062c565b6060610c59610f7e565b9050610c6361054c565b610d155760006060610c788d8d8d868b611b3d565b91509150610c91610c87611be4565b83101560cc611084565b610ca36000610c9e611be4565b611beb565b610cb68b610caf611be4565b8403611beb565b610cc08184611775565b80610cc96113ad565b6001600160401b0381118015610cde57600080fd5b50604051908082528060200260200182016040528015610d08578160200160208202803683370190505b50955095505050506107e0565b610d1f888261166f565b6000606080610d348e8e8e8e8e8e8a8f6116da565b925092509250610d448c84611beb565b610d4e8285611775565b610d588185611483565b90955093506107e0915050565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000610d936108a4565b6001600160a01b0316826001600160a01b03161415610db55750600019610532565b610dbf8383611bf5565b9050610532565b6060610585611c20565b806106b481611cb6565b6001600160401b03811b1992909216911b1790565b6000610dff838311156001611084565b50900390565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610e60908590613ab3565b60405180910390a3505050565b6000610e846000356001600160e01b031916610808565b9050610549610e938233611d2f565b610191611084565b8015610ebb57610eb6610eac610f36565b4210610193611084565b610ed0565b610ed0610ec6610f5a565b42106101a9611084565b6007805460ff19168215151790556040517f9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be6490610f0e908390613a90565b60405180910390a150565b6000610f23610f5a565b42118061058557505060075460ff161590565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b60606000610f8a6113ad565b90506060816001600160401b0381118015610fa457600080fd5b50604051908082528060200260200182016040528015610fce578160200160208202803683370190505b5090507f000000000000000000000000000000000000000000000000000000000000000081600081518110610fff57fe5b6020026020010181815250507f00000000000000000000000000000000000000000000000000000000000000008160018151811061103957fe5b6020026020010181815250507f00000000000000000000000000000000000000000000000000000000000000008160028151811061107357fe5b602090810291909101015291505090565b816106b4576106b481611e18565b6110a96001600160a01b0384161515610198611084565b6110c06001600160a01b0383161515610199611084565b6110cb8383836114e4565b6001600160a01b0383166000908152602081905260409020546110f190826101a0611e6b565b6001600160a01b038085166000908152602081905260408082209390935590841681522054611120908261128f565b6001600160a01b0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e60908590613ab3565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006111df611e81565b306040516020016111f4959493929190613b0f565b60405160208183030381529060405280519060200120905090565b61122261121a610f19565b610192611084565b565b61123764e8d4a5100082101560cb611084565b61124d67016345785d8a000082111560ca611084565b60085461125c908260c0610dda565b6008556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc90610f0e908390613ab3565b60008282016105f98482101583611084565b60006112ab61062c565b905060006112b76108a4565b6001600160a01b031663b05f8e4883866040518363ffffffff1660e01b81526004016112e4929190613b54565b60806040518083038186803b1580156112fc57600080fd5b505afa158015611310573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611334919061393c565b604051630639cdb560e21b81529094506001600160a01b03851693506318e736d49250611368915085908790600401613b3b565b600060405180830381600087803b15801561138257600080fd5b505af1158015611396573d6000803e3d6000fd5b5050505050505050565b1c6001600160401b031690565b600390565b6106b48183146067611084565b60006060807f00000000000000000000000000000000000000000000000000000000000000006113ed610f19565b156114355760006113fe8a83611e85565b905061140981611eb7565b6114138a87611ee4565b909550935061142c818661142561054c565b6000611f31565b6009555061144b565b61143f8986611ee4565b60001960095590945092505b604080516003808252608082019092528591859190602082016060803683370190505093509350935050985098509895505050505050565b60005b61148e6113ad565b8110156114e4576114c58382815181106114a457fe5b60200260200101518383815181106114b857fe5b6020026020010151611630565b8382815181106114d157fe5b6020908102919091010152600101611486565b505050565b3330146115a7576000306001600160a01b031660003660405161150d929190613a19565b6000604051808303816000865af19150503d806000811461154a576040519150601f19603f3d011682016040523d82523d6000602084013e61154f565b606091505b50509050806000811461155e57fe5b60046000803e6000516001600160e01b0319166343adbafb60e01b8114611589573d6000803e3d6000fd5b506020600460003e604060205260243d03602460403e601c3d016000f35b60606115b1610f7e565b90506115bd878261166f565b600060606115d58c8c8c8c8c8c898d8d63ffffffff16565b50915091506115e881848663ffffffff16565b8051601f1982018390526343adbafb603f1983015260200260231982016044820181fd5b60008282026105f984158061162957508385838161162657fe5b04145b6003611084565b60008161163c57600080fd5b670de0b6b3a76400008381029084828161165257fe5b041461165d57600080fd5b82818161166657fe5b04949350505050565b60005b61167a6113ad565b8110156114e4576116b183828151811061169057fe5b60200260200101518383815181106116a457fe5b6020026020010151611f8b565b8382815181106116bd57fe5b6020908102919091010152600101611672565b6106b48282611fb4565b60006060807f00000000000000000000000000000000000000000000000000000000000000008361170b8a83611e85565b905061171681611eb7565b6117208a87612070565b9095509350611739818661173261054c565b6001611f31565b60095560408051600380825260808201909252869186919060208201606080368337019050509450945094505050985098509895505050505050565b60005b6117806113ad565b8110156114e4576117b783828151811061179657fe5b60200260200101518383815181106117aa57fe5b60200260200101516120b4565b8382815181106117c357fe5b6020908102919091010152600101611778565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316141561183957507f0000000000000000000000000000000000000000000000000000000000000000610745565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316141561189a57507f0000000000000000000000000000000000000000000000000000000000000000610745565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031614156118fb57507f0000000000000000000000000000000000000000000000000000000000000000610745565b610745610135611e18565b60008061191b6119146106b8565b849061210b565b90506105f98382610def565b60006105f98383611f8b565b6106b461193f83612147565b826106b4565b600061194f61120f565b600061195961214d565b905061196785858584612230565b95945050505050565b60006105f98383611630565b600061198661120f565b600061199061214d565b905061196785858584612242565b60006105f983836120b4565b60006105326119c96119ba6106b8565b670de0b6b3a764000090610def565b83906120b4565b60006119da6108a4565b6001600160a01b031663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b158015611a1257600080fd5b505afa158015611a26573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058591906133dc565b60006060611a566108a4565b6001600160a01b031663f94d4668611a6c61062c565b6040518263ffffffff1660e01b8152600401611a889190613ab3565b60006040518083038186803b158015611aa057600080fd5b505afa158015611ab4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611adc9190810190613510565b50915050611af181611aec610f7e565b61166f565b611b1b817f0000000000000000000000000000000000000000000000000000000000000000611e85565b91505090565b6000611b2b611172565b8260405160200161083d929190613a29565b60006060611b4961120f565b6000611b5484612254565b9050611b6f6000826003811115611b6757fe5b1460ce611084565b6060611b7a8561226a565b9050611b88815160036113b2565b611b92818761166f565b6000611bbe827f0000000000000000000000000000000000000000000000000000000000000000611e85565b90506000611bcd82600361160c565b6009929092555093509150505b9550959350505050565b620f424090565b6106b48282612280565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b604080516003808252608082019092526060918291906020820183803683370190505090506003670de0b6b3a76400000481600081518110611c5e57fe5b60209081029190910101526003670de0b6b3a76400000481600181518110611c8257fe5b60209081029190910101526003670de0b6b3a76400000481600281518110611ca657fe5b6020908102919091010152905090565b600281511015611cc557610549565b600081600081518110611cd457fe5b602002602001015190506000600190505b82518110156114e4576000838281518110611cfc57fe5b60200260200101519050611d25816001600160a01b0316846001600160a01b0316106065611084565b9150600101611ce5565b600073ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b611d4e610880565b6001600160a01b031614158015611d695750611d698361230e565b15611d9157611d76610880565b6001600160a01b0316336001600160a01b0316149050610532565b611d996119d0565b6001600160a01b0316639be2a8848484306040518463ffffffff1660e01b8152600401611dc893929190613abc565b60206040518083038186803b158015611de057600080fd5b505afa158015611df4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dbf91906135f7565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6000611e7a8484111583611084565b5050900390565b4690565b6000806000806000611e978787612340565b9350935093509350611eac848484848a6124b0565b979650505050505050565b600080600080611ec9600954866124d8565b9350935093509350611edd84848484612541565b5050505050565b600060606000611ef384612254565b90506001816003811115611f0357fe5b1415611f1d57611f138585612567565b9250925050611f2a565b611f28610150611e18565b505b9250929050565b60008115611f63576000611f4f84611f49888861210b565b906120b4565b9050611f5b868261128f565b915050611f83565b6000611f73846107258888611f8b565b9050611f7f8682610def565b9150505b949350505050565b6000828202611fa584158061162957508385838161162657fe5b670de0b6b3a764000081611666565b611fcb6001600160a01b038316151561019b611084565b611fd7826000836114e4565b6001600160a01b038216600090815260208190526040902054611ffd90826101a1611e6b565b6001600160a01b0383166000908152602081905260409020556002546120239082612599565b6002556040516000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90612064908590613ab3565b60405180910390a35050565b60006060600061207f84612254565b9050600381600381111561208f57fe5b14156120a95761209f85856125a7565b9093509150611f28565b611f28610136611e18565b60006120c38215156004611084565b826120d057506000610532565b670de0b6b3a7640000838102906120f3908583816120ea57fe5b04146005611084565b8260018203816120ff57fe5b04600101915050610532565b600082820261212584158061162957508385838161162657fe5b80612134576000915050610532565b670de0b6b3a764000060001982016120ff565b50600090565b600060606121596108a4565b6001600160a01b031663f94d466861216f61062c565b6040518263ffffffff1660e01b815260040161218b9190613ab3565b60006040518083038186803b1580156121a357600080fd5b505afa1580156121b7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526121df9190810190613510565b509150506121ef81611aec610f7e565b7f0000000000000000000000000000000000000000000000000000000000000000600061221c8383611e85565b90506122288183611f8b565b935050505090565b600061196784848760600151856125cc565b60006119678484876060015185612664565b6000818060200190518101906105329190613784565b6060818060200190518101906105f991906137cd565b61228c600083836114e4565b600254612299908261128f565b6002556001600160a01b0382166000908152602081905260409020546122bf908261128f565b6001600160a01b0383166000818152602081905260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90612064908590613ab3565b6000612320631c74c91760e11b610808565b82148061053257506123386350dd6ed960e01b610808565b909114919050565b600080808061235c6119ba866123568180611f8b565b90611f8b565b935060006123b98760028151811061237057fe5b60200260200101516123b38960018151811061238857fe5b60200260200101518a60008151811061239d57fe5b602002602001015161128f90919063ffffffff16565b9061128f565b90506123c9866123568382611f8b565b9350600061245861240b896000815181106123e057fe5b60200260200101518a6002815181106123f557fe5b6020026020010151611f8b90919063ffffffff16565b6123b36124338b60028151811061241e57fe5b60200260200101518c6001815181106123f557fe5b6123b38c60018151811061244357fe5b60200260200101518d6000815181106123f557fe5b90506124648188611f8b565b93506124a38860028151811061247657fe5b60200260200101516123568a60018151811061248e57fe5b60200260200101518b6000815181106123f557fe5b9250505092959194509250565b60006124be868686866126f5565b90506124ce8686868686866127ab565b9695505050505050565b6000806000806000806000806124ec61286e565b9350935093509350836000141561251157600097508796509094509250612538915050565b6000806125288c8c61252161054c565b8989612add565b909a509850929650909450505050505b92959194509250565b8315612551576125518285611beb565b8215612561576125618184611beb565b50505050565b60006060600061257684612b70565b9050606061258c868361258761054c565b612b86565b9196919550909350505050565b60006105f983836001611e6b565b6000606060006125b684612b70565b9050606061258c86836125c761054c565b612c21565b60006125ee6125e386670429d069189e0000611f8b565b841115610130611084565b600061260c61260584670de0b6b3a764000261210b565b879061128f565b9050600061262561260585670de0b6b3a763ffff611f8b565b905061263e612634838761128f565b6107258388611f8b565b9250611f839150612659905085670429d069189e0000611f8b565b821115610131611084565b600061268661267b85670429d069189e0000611f8b565b841115610131611084565b600061269d61260584670de0b6b3a764000261210b565b905060006126b661260585670de0b6b3a763ffff611f8b565b90506126cf6126c58287610def565b611f49848861210b565b9250611f8391506126ea905086670429d069189e0000611f8b565b821115610130611084565b6000806127216127176729a2241af62c0000612711898861210b565b9061210b565b6123b3878061210b565b9050600061274761273a60038902611f49856005612cc8565b6123b38860038b026120b4565b9050600061275d670de0b6b3a764000089610def565b905060006706f05b59d3b2000082101561277f57671bc16d674ec80000612789565b6714d1120d7b1600005b6001600160401b0316905061279e838261210b565b9998505050505050505050565b600080805b60ff811015612857576000806127ca8b8b8b8b8b8b612e3b565b91509150600182116127e257859450505050506124ce565b600583108015906127f05750805b1561280157859450505050506124ce565b600583108015906128155750600884048210155b1561282657859450505050506124ce565b819350801561284057612839868361128f565b955061284d565b61284a8683610def565b95505b50506001016127b0565b50612863610160611e18565b509695505050505050565b600a5460405163bd02d0f560e01b81526000918291829182916001600160a01b039091169063bd02d0f5906128c0907550524f544f434f4c5f535741505f4645455f5045524360501b90600401613ab3565b60206040518083038186803b1580156128d857600080fd5b505afa1580156128ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129109190613924565b600a5460405163bd02d0f560e01b81526001600160a01b039091169063bd02d0f590612960907f50524f544f434f4c5f4645455f4759524f5f504f5254494f4e0000000000000090600401613ab3565b60206040518083038186803b15801561297857600080fd5b505afa15801561298c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129b09190613924565b600a546040516321f8a72160e01b81526001600160a01b03909116906321f8a721906129f0906c4759524f5f545245415355525960981b90600401613ab3565b60206040518083038186803b158015612a0857600080fd5b505afa158015612a1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a4091906133dc565b600a546040516321f8a72160e01b81526001600160a01b03909116906321f8a72190612a7f906b42414c5f545245415355525960a01b90600401613ab3565b60206040518083038186803b158015612a9757600080fd5b505afa158015612aab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612acf91906133dc565b935093509350935090919293565b600080868611612af257506000905080611bda565b6000612b0c85612356612b058a8c610def565b8990611f8b565b90506000612b24612b1d898b610def565b8790611f8b565b90506000612b328983610def565b90506000612b408483611630565b90506000612b4e8883611f8b565b90506000612b5c8383610def565b919d919c50909a5050505050505050505050565b6000818060200190518101906105f991906137a0565b60606000612b948484611630565b9050606085516001600160401b0381118015612baf57600080fd5b50604051908082528060200260200182016040528015612bd9578160200160208202803683370190505b50905060005b8651811015612c1757612bf8838883815181106123f557fe5b828281518110612c0457fe5b6020908102919091010152600101612bdf565b5095945050505050565b60606000612c2f84846120b4565b9050606085516001600160401b0381118015612c4a57600080fd5b50604051908082528060200260200182016040528015612c74578160200160208202803683370190505b50905060005b8651811015612c1757612ca983888381518110612c9357fe5b602002602001015161210b90919063ffffffff16565b828281518110612cb557fe5b6020908102919091010152600101612c7a565b600082612cd757506000610532565b6000612ce284612f20565b9050600281670de0b6b3a7640000860281612cf957fe5b04820181612d0357fe5b049050600281670de0b6b3a7640000860281612d1b57fe5b04820181612d2557fe5b049050600281670de0b6b3a7640000860281612d3d57fe5b04820181612d4757fe5b049050600281670de0b6b3a7640000860281612d5f57fe5b04820181612d6957fe5b049050600281670de0b6b3a7640000860281612d8157fe5b04820181612d8b57fe5b049050600281670de0b6b3a7640000860281612da357fe5b04820181612dad57fe5b049050600281670de0b6b3a7640000860281612dc557fe5b04820181612dcf57fe5b0490506000612dde8280611f8b565b9050612df4612ded838661210b565b869061128f565b8111158015612e165750612e12612e0b838661210b565b8690610def565b8110155b610a855760405162461bcd60e51b8152600401612e3290613b9c565b60405180910390fd5b6000808080612e4a8580611f8b565b9050612e5760038261160c565b9150612e73612e6c8761235681818782611f8b565b8390610def565b9150612e9888612e92612e8b60026107208a8f611f8b565b8590610def565b90610def565b9150506000612ea8858784613103565b90506000612eba8a6123568880611f8b565b9050612ed483610725612ecd898d611f8b565b849061128f565b9050612eea612ee38985611630565b829061128f565b905081811015935083612f0657612f018282610def565b612f10565b612f108183610def565b9450505050965096945050505050565b6000670de0b6b3a76400008210612f4d57670de0b6b3a7640000612f4581840461321a565b1b9050610745565b600a821015612f6157506312d940b6610745565b6064821015612f7657506402540be400610745565b6103e8821015612f8c575064075cdd4719610745565b612710821015612fa2575064174876e800610745565b620186a0821015612fb957506449a0a4c700610745565b620f4240821015612fd0575064e8d4a51000610745565b62989680821015612fe857506502e0466fc608610745565b6305f5e10082101561300157506509184e72a000610745565b633b9aca0082101561301a5750651cc2c05dbc53610745565b6402540be4008210156130345750655af3107a4000610745565b64174876e80082101561304f575066011f9b83a95b45610745565b64e8d4a5100082101561306a575066038d7ea4c68000610745565b6509184e72a0008210156130865750660b3c13249d90bb610745565b655af3107a40008210156130a25750662386f26fc10000610745565b66038d7ea4c680008210156130bf5750667058bf6e27a751610745565b662386f26fc100008210156130dd575067016345785d8a0000610745565b67016345785d8a00008210156130fc5750670463777a4d8c892d610745565b5080610745565b60006d0266ae2fd4d2340b427660000000841161315757613128846123568180611f8b565b905061314461313d8461235681818682611f8b565b8290610def565b90506131508183611630565b90506105f9565b6131618480611f8b565b905061319261317d670de0b6b3a7640000865b84919006611f8b565b6123b383670de0b6b3a7640000885b0461160c565b9050806131c26131a6633b9aca0086613174565b6123b36131b884633b9aca008961318c565b633b9aca006132b0565b90506131d56131a6633b9aca0086613174565b90506131e86131a6633b9aca0086613174565b90506131f48282610def565b915061196761320783633b9aca0061160c565b61321585633b9aca006132b0565b6132b0565b6000600160801b82106132325760809190911c906040015b68010000000000000000821061324d5760409190911c906020015b64010000000082106132645760209190911c906010015b6201000082106132795760109190911c906008015b610100821061328d5760089190911c906004015b601082106132a05760049190911c906002015b6004821061074557600101919050565b60006132bf8215156004611084565b8183816132c857fe5b049392505050565b803561053281613c2e565b600082601f8301126132eb578081fd5b81516132fe6132f982613c0f565b613be9565b81815291506020808301908481018184028601820187101561331f57600080fd5b60005b8481101561333e57815184529282019290820190600101613322565b505050505092915050565b600082601f830112613359578081fd5b81356001600160401b0381111561336e578182fd5b613381601f8201601f1916602001613be9565b915080825283602082850101111561339857600080fd5b8060208401602084013760009082016020015292915050565b80356002811061053257600080fd5b6000602082840312156133d1578081fd5b81356105f981613c2e565b6000602082840312156133ed578081fd5b81516105f981613c2e565b6000806040838503121561340a578081fd5b823561341581613c2e565b9150602083013561342581613c2e565b809150509250929050565b600080600060608486031215613444578081fd5b833561344f81613c2e565b9250602084013561345f81613c2e565b929592945050506040919091013590565b600080600080600080600060e0888a03121561348a578485fd5b873561349581613c2e565b965060208801356134a581613c2e565b95506040880135945060608801359350608088013560ff811681146134c8578384fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156134f7578182fd5b823561350281613c2e565b946020939093013593505050565b600080600060608486031215613524578081fd5b83516001600160401b038082111561353a578283fd5b818601915086601f83011261354d578283fd5b815161355b6132f982613c0f565b80828252602080830192508086018b82838702890101111561357b578788fd5b8796505b848710156135a657805161359281613c2e565b84526001969096019592810192810161357f565b5089015190975093505050808211156135bd578283fd5b506135ca868287016132db565b925050604084015190509250925092565b6000602082840312156135ec578081fd5b81356105f981613c43565b600060208284031215613608578081fd5b81516105f981613c43565b600080600080600080600060e0888a03121561362d578081fd5b8735965060208089013561364081613c2e565b9650604089013561365081613c2e565b955060608901356001600160401b038082111561366b578384fd5b818b0191508b601f83011261367e578384fd5b813561368c6132f982613c0f565b8082825285820191508585018f8788860288010111156136aa578788fd5b8795505b838610156136cc5780358352600195909501949186019186016136ae565b509850505060808b0135955060a08b0135945060c08b01359250808311156136f2578384fd5b50506137008a828b01613349565b91505092959891949750929550565b600060208284031215613720578081fd5b81356001600160e01b0319811681146105f9578182fd5b60008060408385031215613749578182fd5b823561375481613c2e565b915060208301356001600160401b0381111561376e578182fd5b61377a85828601613349565b9150509250929050565b600060208284031215613795578081fd5b81516105f981613c51565b600080604083850312156137b2578182fd5b82516137bd81613c51565b6020939093015192949293505050565b600080604083850312156137df578182fd5b82516137ea81613c51565b60208401519092506001600160401b03811115613805578182fd5b61377a858286016132db565b600080600060608486031215613825578081fd5b83356001600160401b038082111561383b578283fd5b8186019150610120808389031215613851578384fd5b61385a81613be9565b905061386688846133b1565b815261387588602085016132d0565b602082015261388788604085016132d0565b6040820152606083013560608201526080830135608082015260a083013560a08201526138b78860c085016132d0565b60c08201526138c98860e085016132d0565b60e082015261010080840135838111156138e1578586fd5b6138ed8a828701613349565b9183019190915250976020870135975060409096013595945050505050565b60006020828403121561391d578081fd5b5035919050565b600060208284031215613935578081fd5b5051919050565b60008060008060808587031215613951578182fd5b845193506020850151925060408501519150606085015161397181613c2e565b939692955090935050565b6000815180845260208085019450808401835b838110156139ab5781518752958201959082019060010161398f565b509495945050505050565b60008151808452815b818110156139db576020818501810151868301820152016139bf565b818111156139ec5782602083870101525b50601f01601f19169290920160200192915050565b9182526001600160e01b031916602082015260240190565b6000828483379101908152919050565b61190160f01b81526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6000602082526105f9602083018461397c565b600060408252613a7e604083018561397c565b8281036020840152611967818561397c565b901515815260200190565b92151583526020830191909152604082015260600190565b90815260200190565b9283526001600160a01b03918216602084015216604082015260600190565b9586526001600160a01b0394851660208701529290931660408501526060840152608083019190915260a082015260c00190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b600083825260406020830152611f8360408301846139b6565b9182526001600160a01b0316602082015260400190565b93845260ff9290921660208401526040830152606082015260800190565b6000602082526105f960208301846139b6565b6020808252600c908201526b17dcdc5c9d0811905253115160a21b604082015260600190565b600083825260406020830152611f83604083018461397c565b60ff91909116815260200190565b6040518181016001600160401b0381118282101715613c0757600080fd5b604052919050565b60006001600160401b03821115613c24578081fd5b5060209081020190565b6001600160a01b038116811461054957600080fd5b801515811461054957600080fd5b6004811061054957600080fdfea2646970667358221220125dbc85d77bc9bc166ecfe9badffee4c9b73c130595b2dd212686ac103ef38b64736f6c63430007010033", "deployedSourceMap": "1126:21142:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2138:81:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4172:164;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;7206:89:11:-;;;;;;:::i;:::-;;:::i;:::-;;3181:98:33;;;:::i;:::-;;;;;;;:::i;3154:363:26:-;;;:::i;:::-;;;;;;;;;:::i;21507:111:11:-;;;:::i;:::-;;;;;;;:::i;2657:655:9:-;;;;;;:::i;:::-;;:::i;3040:81:33:-;;;:::i;:::-;;;;;;;:::i;2359:113:34:-;;;:::i;6113:158:11:-;;;;;;:::i;:::-;;:::i;5621:91::-;;;:::i;5584:211:33:-;;;;;;:::i;:::-;;:::i;1313:29:2:-;;;:::i;:::-;;;;;;;:::i;6701:214:11:-;;;;;;:::i;:::-;;:::i;5970:137::-;;;:::i;13905:904::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;21888:227:0:-;;;:::i;3337:117:33:-;;;;;;:::i;:::-;;:::i;10530:1197:11:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2127:108:34:-;;;;;;:::i;:::-;;:::i;2487:430:18:-;;;;;;:::i;:::-;;:::i;12380:902:11:-;;;;;;:::i;:::-;;:::i;1776:80:12:-;;;:::i;1879:79:9:-;;;:::i;2332:85:33:-;;;:::i;3385:104:0:-;;;:::i;1329:2353:10:-;;;;;;:::i;:::-;;:::i;3438:429:9:-;;;;;;:::i;:::-;;:::i;3657:170:33:-;;;;;;:::i;:::-;;:::i;1862:101:12:-;;;:::i;16314:118:2:-;;;:::i;1313:753:34:-;;;;;;:::i;:::-;;:::i;8224:2300:11:-;;;;;;:::i;:::-;;:::i;3010:92:2:-;;;:::i;2260:254:9:-;;;;;;:::i;:::-;;:::i;4066:120:0:-;;;:::i;2138:81:33:-;2207:5;2200:12;;;;;;;;;;;;;-1:-1:-1;;2200:12:33;;;;;;;;;;;;;;;;;;;;;;;;;;2175:13;;2200:12;;2207:5;;2200:12;;;2207:5;2200:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2138:81;:::o;4172:164::-;4255:4;4271:37;4280:10;4292:7;4301:6;4271:8;:37::i;:::-;-1:-1:-1;4325:4:33;4172:164;;;;;:::o;7206:89:11:-;2156:21:18;:19;:21::i;:::-;7270:18:11::1;7281:6;7270:10;:18::i;:::-;7206:89:::0;:::o;3181:98:33:-;3260:12;;3181:98;:::o;3154:363:26:-;3257:11;3282:26;3322:27;3384:14;:12;:14::i;:::-;3383:15;3374:24;;3429;:22;:24::i;:::-;3408:45;;3485:25;:23;:25::i;:::-;3463:47;;3154:363;;;:::o;21507:111:11:-;21559:16;21594:17;:15;:17::i;:::-;21587:24;;21507:111;:::o;2657:655:9:-;2785:4;2801:24;2828:29;2838:6;2846:10;2828:9;:29::i;:::-;2801:56;-1:-1:-1;2867:101:9;-1:-1:-1;;;;;2876:20:9;;:10;:20;;:50;;;2920:6;2900:16;:26;;2876:50;9174:3:19;2867:8:9;:101::i;:::-;2979:36;2989:6;2997:9;3008:6;2979:9;:36::i;:::-;-1:-1:-1;;;;;3030:20:9;;:10;:20;;;;:55;;-1:-1:-1;;;3054:31:9;;;3030:55;3026:258;;;3218:55;3227:6;3235:10;3266:6;3247:16;:25;3218:8;:55::i;:::-;3301:4;3294:11;;;2657:655;;;;;;:::o;3040:81:33:-;3105:9;;;;3040:81;:::o;2359:113:34:-;2419:7;2445:20;:18;:20::i;6113:158:11:-;2156:21:18;:19;:21::i;:::-;2970:18:26::1;:16;:18::i;:::-;6224:40:11::2;6246:17;6224:21;:40::i;5621:91::-:0;5698:7;5621:91;:::o;5584:211:33:-;5697:10;5672:4;5718:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;5718:32:33;;;;;;;;;;5672:4;;5688:79;;5718:32;;:48;;5755:10;5718:36;:48::i;:::-;5688:8;:79::i;1313:29:2:-;;;-1:-1:-1;;;;;1313:29:2;;:::o;6701:214:11:-;2156:21:18;:19;:21::i;:::-;2970:18:26::1;:16;:18::i;:::-;6863:45:11::2;6890:5;6897:10;6863:26;:45::i;:::-;6701:214:::0;;:::o;5970:137::-;6049:9;;6023:7;;6049:51;;3356:3;6049:22;:51::i;13905:904::-;14165:13;14180:27;14219:71;14255:8;:15;14272:17;:15;:17::i;:::-;14219:35;:71::i;:::-;14301:255;14327:6;14347;14367:9;14390:8;14412:15;14441:25;14480:8;14502:11;14527:19;14301:12;:255::i;:::-;13905:904;;;;;;;;;;:::o;21888:227:0:-;21928:7;22042:66;22094:13;:11;:13::i;:::-;22042:43;22051:14;:12;:14::i;:::-;22067:17;:15;:17::i;:::-;22042:8;:43::i;:::-;:51;;:66::i;3337:117:33:-;-1:-1:-1;;;;;3429:18:33;;3403:7;3429:18;;;;;;;;;;;3337:117;;;;:::o;10530:1197:11:-;10824:16;10842;10807:6;8067:68;8098:10;:8;:10::i;:::-;-1:-1:-1;;;;;8076:33:11;:10;:33;5392:3:19;8067:8:11;:68::i;:::-;8145:55;8164:11;:9;:11::i;:::-;8154:6;:21;10241:3:19;8145:8:11;:55::i;:::-;10870:31:::1;10904:17;:15;:17::i;:::-;10870:51;;10931:39;10945:8;10955:14;10931:13;:39::i;:::-;10982:19;11003:27;11032:38:::0;11074:224:::1;11099:6;11119;11139:9;11162:8;11184:15;11213:25;11252:14;11280:8;11074:11;:224::i;:::-;10981:317;;;;;;11404:36;11420:6;11428:11;11404:15;:36::i;:::-;11552:47;11572:10;11584:14;11552:19;:47::i;:::-;11609:58;11629:21;11652:14;11609:19;:58::i;:::-;11686:10:::0;;-1:-1:-1;11698:21:11;-1:-1:-1;;;8210:1:11::1;10530:1197:::0;;;;;;;;;;;:::o;2127:108:34:-;-1:-1:-1;;;;;2214:14:34;2188:7;2214:14;;;:7;:14;;;;;;;2127:108::o;2487:430:18:-;2555:7;2876:22;2900:8;2859:50;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2849:61;;;;;;2842:68;;2487:430;;;:::o;12380:902:11:-;12640:14;12656:26;12694:71;12730:8;:15;12747:17;:15;:17::i;12694:71::-;12776:253;12802:6;12822;12842:9;12865:8;12887:15;12916:25;12955:8;12977:11;13002:17;12776:12;:253::i;1776:80:12:-;1843:6;1776:80;:::o;1879:79:9:-;1945:6;1879:79;:::o;2332:85:33:-;2403:7;2396:14;;;;;;;;;;;;;-1:-1:-1;;2396:14:33;;;;;;;;;;;;;;;;;;;;;;;;;;2371:13;;2396:14;;2403:7;;2396:14;;;2403:7;2396:14;;;;;;;;;;;;;;;;;;;;;;;;3385:104:0;3468:14;;3385:104;:::o;1329:2353:10:-;1511:7;1486;:14;;;8067:68:11;8098:10;:8;:10::i;8067:68::-;8145:55;8164:11;:9;:11::i;8145:55::-;1530:28:10::1;1561:31;1576:7;:15;;;1561:14;:31::i;:::-;1530:62;;1602:29;1634:32;1649:7;:16;;;1634:14;:32::i;:::-;1602:64:::0;-1:-1:-1;1697:24:10::1;1681:12:::0;;:40:::1;::::0;::::1;;;;;;;1677:1999;;;1849:29;1881:38;1904:7;:14;;;1881:22;:38::i;:::-;1849:70;;1983:15;2018:21;2001:7;:14;;;:38;1983:56;;2053:79;2075:7;:15;;;2092:39;2101:7;2110:20;2092:8;:39::i;:::-;2053:21;:79::i;:::-;2147:14;::::0;::::1;:38:::0;;;2264:46:::1;2273:14:::0;2289:20;2264:8:::1;:46::i;:::-;2247:63;;2342:48;2351:15;2368:21;2342:8;:48::i;:::-;2324:66;;2421:46;2430:7;:14;;;2446:20;2421:8;:46::i;:::-;2404:14;::::0;::::1;:63:::0;2482:17:::1;2502:56;2404:7:::0;2526:14;2542:15;2502:14:::1;:56::i;:::-;2482:76;;2652:48;2667:9;2678:21;2652:14;:48::i;:::-;2645:55;;;;;;;;;1677:1999;2795:46;2804:14;2820:20;2795:8;:46::i;:::-;2778:63;;2873:48;2882:15;2899:21;2873:8;:48::i;:::-;2855:66;;2952:47;2961:7;:14;;;2977:21;2952:8;:47::i;:::-;2935:14;::::0;::::1;:64:::0;3014:16:::1;3033:57;2935:7:::0;3058:14;3074:15;3033::::1;:57::i;:::-;3014:76;;3186:44;3199:8;3209:20;3186:12;:44::i;:::-;3175:55;;3359:28;3390:27;3408:8;3390:17;:27::i;:::-;3359:58;;3481:15;3522:8;3499:20;:31;3481:49;;3544:79;3566:7;:15;;;3583:39;3592:7;3601:20;3583:8;:39::i;3544:79::-;-1:-1:-1::0;3645:20:10;-1:-1:-1;3638:27:10::1;::::0;-1:-1:-1;;;3638:27:10::1;8210:1:11;1329:2353:10::0;;;;;;:::o;3438:429:9:-;3523:4;3539:24;3566:30;3576:10;3588:7;3566:9;:30::i;:::-;3539:57;;3621:16;3611:6;:26;3607:232;;3653:32;3662:10;3674:7;3683:1;3653:8;:32::i;:::-;3607:232;;;3772:56;3781:10;3793:7;3821:6;3802:16;:25;3772:8;:56::i;:::-;-1:-1:-1;3856:4:9;;3438:429;-1:-1:-1;;;3438:429:9:o;3657:170:33:-;3743:4;3759:40;3769:10;3781:9;3792:6;3759:9;:40::i;1862:101:12:-;1910:11;1940:16;:14;:16::i;16314:118:2:-;16368:17;16404:21;:19;:21::i;1313:753:34:-;1575:60;1603:8;1584:15;:27;;5606:3:19;1575:8:34;:60::i;:::-;-1:-1:-1;;;;;1662:14:34;;1646:13;1662:14;;;:7;:14;;;;;;;;;1717:68;;1662:14;;1646:13;1717:68;;1728:16;;1662:14;;1753:7;;1762:5;;1662:14;;1776:8;;1717:68;;:::i;:::-;;;;;;;;;;;;;1707:79;;;;;;1686:100;;1797:12;1812:28;1829:10;1812:16;:28::i;:::-;1797:43;;1851:14;1868:24;1878:4;1884:1;1887;1890;1868:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1868:24:34;;-1:-1:-1;;1868:24:34;;;-1:-1:-1;1902:79:34;;-1:-1:-1;;;;;;1912:20:34;;;;;;1911:43;;-1:-1:-1;;;;;;1938:15:34;;;;;;;1911:43;10474:3:19;1902:8:34;:79::i;:::-;-1:-1:-1;;;;;1992:14:34;;;;;;:7;:14;;;;;-1:-1:-1;2009:9:34;;1992:26;;2028:31;1992:14;2044:7;2053:5;2028:8;:31::i;:::-;1313:753;;;;;;;;;;;:::o;8224:2300:11:-;8518:16;8536;8501:6;8067:68;8098:10;:8;:10::i;8067:68::-;8145:55;8164:11;:9;:11::i;8145:55::-;8564:31:::1;8598:17;:15;:17::i;:::-;8564:51;;8630:13;:11;:13::i;:::-;8626:1892;;8665:20;8687:26;8717:164;8752:6;8776;8800:9;8827:14;8859:8;8717:17;:164::i;:::-;8664:217;;;;9180:62;9205:16;:14;:16::i;:::-;9189:12;:32;;5338:3:19;9180:8:11;:62::i;:::-;9256:45;9280:1;9284:16;:14;:16::i;:::-;9256:15;:45::i;:::-;9315:59;9331:9;9357:16;:14;:16::i;:::-;9342:12;:31;9315:15;:59::i;:::-;9461:44;9479:9;9490:14;9461:17;:44::i;:::-;9528:9;9553:17;:15;:17::i;:::-;-1:-1:-1::0;;;;;9539:32:11;::::1;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;9539:32:11::1;;9520:52;;;;;;;;;8626:1892;9603:39;9617:8;9627:14;9603:13;:39::i;:::-;9657:20;9679:26;9707:38:::0;9749:260:::1;9778:6;9802;9826:9;9853:8;9879:15;9912:25;9955:14;9987:8;9749:11;:260::i;:::-;9656:353;;;;;;10123:40;10139:9;10150:12;10123:15;:40::i;:::-;10250:44;10268:9;10279:14;10250:17;:44::i;:::-;10393:58;10413:21;10436:14;10393:19;:58::i;:::-;10474:9:::0;;-1:-1:-1;10485:21:11;-1:-1:-1;10466:41:11::1;::::0;-1:-1:-1;;10466:41:11::1;3010:92:2::0;3084:11;3010:92;:::o;2260:254:9:-;2341:7;2383:10;:8;:10::i;:::-;-1:-1:-1;;;;;2364:30:9;;;;;;2360:148;;;-1:-1:-1;;;2410:18:9;;2360:148;2466:31;2482:5;2489:7;2466:15;:31::i;:::-;2459:38;;;;4066:120:0;4121:16;4156:23;:21;:23::i;1135:274:25:-;1345:5;1369:33;1345:5;1369:19;:33::i;6887:269:27:-;-1:-1:-1;;;;;7074:18:27;;7072:21;7056:37;;;;7133:15;;7111:38;;6887:269::o;948:166:30:-;1006:7;1025:37;1039:1;1034;:6;;4370:1:19;1025:8:30;:37::i;:::-;-1:-1:-1;1084:5:30;;;948:166::o;9345:213:33:-;-1:-1:-1;;;;;9468:18:33;;;;;;;-1:-1:-1;9468:18:33;;;;;;;;:27;;;;;;;;;;;;;;:36;;;9519:32;;;;;9468:36;;9519:32;:::i;:::-;;;;;;;;9345:213;;;:::o;2300:181:18:-;2355:16;2374:20;-1:-1:-1;;;;;;2386:7:18;;;2374:11;:20::i;:::-;2355:39;;2404:70;2413:33;2425:8;2435:10;2413:11;:33::i;:::-;8353:3:19;2404:8:18;:70::i;3793:358:26:-;3849:6;3845:232;;;3871:81;3898:24;:22;:24::i;:::-;3880:15;:42;8455:3:19;3871:8:26;:81::i;:::-;3845:232;;;3983:83;4010:25;:23;:25::i;:::-;3992:15;:43;9885:3:19;3983:8:26;:83::i;:::-;4087:7;:16;;-1:-1:-1;;4087:16:26;;;;;;;4118:26;;;;;;4087:16;;4118:26;:::i;:::-;;;;;;;;3793:358;:::o;4544:237::-;4591:4;4737:25;:23;:25::i;:::-;4719:15;:43;:55;;;-1:-1:-1;;4767:7:26;;;;4766:8;;4544:237::o;4894:108::-;4976:19;4894:108;:::o;5008:110::-;5091:20;5008:110;:::o;4926:438:2:-;4993:16;5021:19;5043:17;:15;:17::i;:::-;5021:39;-1:-1:-1;5070:31:2;5021:39;-1:-1:-1;;;;;5104:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5104:26:2;;5070:60;;5202:15;5182:14;5197:1;5182:17;;;;;;;;;;;;;:35;;;;;5251:15;5231:14;5246:1;5231:17;;;;;;;;;;;;;:35;;;;;5300:15;5280:14;5295:1;5280:17;;;;;;;;;;;;;;;;;:35;5343:14;-1:-1:-1;;4926:438:2;:::o;866:101:19:-;935:9;930:34;;946:18;954:9;946:7;:18::i;7068:559:33:-;7195:71;-1:-1:-1;;;;;7204:20:33;;;;8770:3:19;7195:8:33;:71::i;:::-;7276:72;-1:-1:-1;;;;;7285:23:33;;;;8838:3:19;7276:8:33;:72::i;:::-;7359:47;7380:6;7388:9;7399:6;7359:20;:47::i;:::-;-1:-1:-1;;;;;7437:17:33;;:9;:17;;;;;;;;;;;:68;;7459:6;9316:3:19;7437:21:33;:68::i;:::-;-1:-1:-1;;;;;7417:17:33;;;:9;:17;;;;;;;;;;;:88;;;;7538:20;;;;;;;:32;;7563:6;7538:24;:32::i;:::-;-1:-1:-1;;;;;7515:20:33;;;:9;:20;;;;;;;;;;;;:55;;;;7585:35;;;;;;;;;;7613:6;;7585:35;:::i;2386:188:32:-;2447:7;2494:10;2506:12;2520:15;2537:13;:11;:13::i;:::-;2560:4;2483:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2473:94;;;;;;2466:101;;2386:188;:::o;4220:98:26:-;4272:39;4281:14;:12;:14::i;:::-;8397:3:19;4272:8:26;:39::i;:::-;4220:98::o;6277:418:11:-;6353:87;2755:4;6362:17;:45;;5289:3:19;6353:8:11;:87::i;:::-;6450;2828:4;6459:17;:45;;5228:3:19;6450:8:11;:87::i;:::-;6560:9;;:70;;6583:17;3356:3;6560:22;:70::i;:::-;6548:9;:82;6645:43;;;;;;6670:17;;6645:43;:::i;915:167:37:-;973:7;1004:5;;;1019:37;1028:6;;;;973:7;1019:8;:37::i;6921:279:11:-;7014:14;7031:11;:9;:11::i;:::-;7014:28;;7059:20;7083:10;:8;:10::i;:::-;:42;;-1:-1:-1;;;7083:42:11;;-1:-1:-1;;;;;7083:27:11;;;;;;;:42;;7111:6;;7119:5;;7083:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7136:57;;-1:-1:-1;;;7136:57:11;;7052:73;;-1:-1:-1;;;;;;7136:37:11;;;-1:-1:-1;7136:37:11;;-1:-1:-1;7136:57:11;;-1:-1:-1;7174:6:11;;7182:10;;7136:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6921:279;;;;:::o;11590:142:27:-;11699:14;-1:-1:-1;;;;;11691:34:27;;11590:142::o;4240:101:2:-;4333:1;4240:101;:::o;810:131:25:-;888:46;902:1;897;:6;5002:3:19;888:8:25;:46::i;13570:2666:2:-;13867:19;13900:27;;14180:11;14206:14;:12;:14::i;:::-;14202:1855;;;14542:27;14572:55;14606:8;14616:10;14572:33;:55::i;:::-;14542:85;;14642:36;14658:19;14642:15;:36::i;:::-;14721:27;14729:8;14739;14721:7;:27::i;:::-;14693:55;;-1:-1:-1;14693:55:2;-1:-1:-1;15215:93:2;15253:19;14693:55;15287:13;:11;:13::i;:::-;15302:5;15215:37;:93::i;:::-;15198:14;:110;-1:-1:-1;14202:1855:2;;;15567:27;15575:8;15585;15567:7;:27::i;:::-;-1:-1:-1;;16012:14:2;:34;15539:55;;-1:-1:-1;15539:55:2;-1:-1:-1;14202:1855:2;16212:16;;;16226:1;16212:16;;;;;;;;;16187:11;;16200:10;;16212:16;;;;;;;;;;;-1:-1:-1;16212:16:2;16179:50;;;;;;;13570:2666;;;;;;;;;;;;:::o;23314:253:11:-;23431:9;23426:135;23450:17;:15;:17::i;:::-;23446:1;:21;23426:135;;;23501:49;23520:7;23528:1;23520:10;;;;;;;;;;;;;;23532:14;23547:1;23532:17;;;;;;;;;;;;;;23501:18;:49::i;:::-;23488:7;23496:1;23488:10;;;;;;;;;;;;;;;;;:62;23469:3;;23426:135;;;;23314:253;;:::o;24847:6885::-;25546:10;25568:4;25546:27;25542:6184;;25860:28;;25842:12;;25868:4;;25860:28;;25842:12;;25879:8;;25860:28;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25841:47;;;26106:7;26139:1;26134:3336;;;;29630:9;26134:3336;26610:4;26607:1;26604;26589:26;26663:1;26657:8;-1:-1:-1;;;;;;26653:81:11;-1:-1:-1;;;26885:77:11;;26879:2;;27018:16;27015:1;27012;26997:38;27074:16;27071:1;27064:27;26879:2;;28485;28479:4;28476:1;28461:27;28682:2;28676:4;28669:16;29106:2;29088:16;29084:25;29078:4;29072;29057:53;29444:2;29426:16;29422:25;29419:1;29412:36;25972:3703;29705:31;29739:17;:15;:17::i;:::-;29705:51;;29770:39;29784:8;29794:14;29770:13;:39::i;:::-;29825:17;29844:29;29879:256;29904:6;29928;29952:9;29979:8;30005:15;30038:25;30081:14;30113:8;29879:7;:256;;:::i;:::-;29824:311;;;;;30150:45;30166:12;30180:14;30150:15;:45;;:::i;:::-;30676:19;;-1:-1:-1;;31063:23:11;;31103:24;;;31349:66;-1:-1:-1;;31331:16:11;;31324:92;-1:-1:-1;30672:28:11;-1:-1:-1;;31442:16:11;;31698:2;31688:13;;31442:16;31674:28;1793:180:30;1851:7;1882:5;;;1897:51;1906:6;;;:20;;;1925:1;1920;1916;:5;;;;;;:10;1906:20;4467:1:19;1897:8:30;:51::i;2485:239:28:-;2547:7;2574:6;2566:15;;;;;;893:4;2616:7;;;;:1;:7;:1;2645:13;;;;;:20;2637:29;;;;;;2716:1;2704:9;:13;;;;;;;2485:239;-1:-1:-1;;;;2485:239:28:o;22528:247:11:-;22639:9;22634:135;22658:17;:15;:17::i;:::-;22654:1;:21;22634:135;;;22709:49;22728:7;22736:1;22728:10;;;;;;;;;;;;;;22740:14;22755:1;22740:17;;;;;;;;;;;;;;22709:18;:49::i;:::-;22696:7;22704:1;22696:10;;;;;;;;;;;;;;;;;:62;22677:3;;22634:135;;4016:104:9;4092:21;4098:6;4106;4092:5;:21::i;10467:1689:2:-;10774:20;10808:26;;11220:11;10774:20;11272:55;11306:8;11220:11;11272:33;:55::i;:::-;11242:85;;11338:36;11354:19;11338:15;:36::i;:::-;11413:27;11421:8;11431;11413:7;:27::i;:::-;11385:55;;-1:-1:-1;11385:55:2;-1:-1:-1;11883:93:2;11921:19;11385:55;11956:13;:11;:13::i;:::-;11971:4;11883:37;:93::i;:::-;11866:14;:110;12132:16;;;12146:1;12132:16;;;;;;;;;12107:12;;12121:9;;12132:16;;;;;;;;;;;-1:-1:-1;12132:16:2;12099:50;;;;;;;;10467:1689;;;;;;;;;;;;:::o;24098:249:11:-;24213:9;24208:133;24232:17;:15;:17::i;:::-;24228:1;:21;24208:133;;;24283:47;24300:7;24308:1;24300:10;;;;;;;;;;;;;;24312:14;24327:1;24312:17;;;;;;;;;;;;;;24283:16;:47::i;:::-;24270:7;24278:1;24270:10;;;;;;;;;;;;;;;;;:60;24251:3;;24208:133;;4497:423:2;4575:21;4621:7;-1:-1:-1;;;;;4612:16:2;;;;;;;4608:306;;;-1:-1:-1;4660:15:2;4608:306;;;4705:7;-1:-1:-1;;;;;4696:16:2;;;;;;;4692:222;;;-1:-1:-1;4744:15:2;4692:222;;;4789:7;-1:-1:-1;;;;;4780:16:2;;;;;;;4776:138;;;-1:-1:-1;4828:15:2;4776:138;;;4874:29;6206:3:19;4874:7:2;:29::i;19386:283:11:-;19457:7;19568:17;19588:36;19601:22;:20;:22::i;:::-;19588:6;;:12;:36::i;:::-;19568:56;-1:-1:-1;19641:21:11;:6;19568:56;19641:10;:21::i;21780:579::-;21860:7;22311:41;22330:6;22338:13;22311:18;:41::i;5552:145:10:-;5632:58;5654:27;5675:5;5654:20;:27::i;:::-;5683:6;5632:21;:58::i;5370:384:2:-;5573:7;2970:18:26;:16;:18::i;:::-;5592:21:2::1;5616:25;:23;:25::i;:::-;5592:49;;5658:89;5673:11;5686:21;5709:22;5733:13;5658:14;:89::i;:::-;5651:96:::0;5370:384;-1:-1:-1;;;;;5370:384:2:o;22979:160:11:-;23065:7;23091:41;23110:6;23118:13;23091:18;:41::i;5760:386:2:-;5964:7;2970:18:26;:16;:18::i;:::-;5983:21:2::1;6007:25;:23;:25::i;:::-;5983:49;;6049:90;6065:11;6078:21;6101:22;6125:13;6049:15;:90::i;23769:156:11:-:0;23853:7;23879:39;23896:6;23904:13;23879:16;:39::i;19039:247::-;19105:7;19223:56;19236:42;19255:22;:20;:22::i;:::-;893:4:28;;19236:18:11;:42::i;:::-;19223:6;;:12;:56::i;24353:488::-;24411:11;24808:10;:8;:10::i;:::-;-1:-1:-1;;;;;24808:24:11;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;6694:285:2:-;6747:17;6779:25;6810:10;:8;:10::i;:::-;-1:-1:-1;;;;;6810:24:2;;6835:11;:9;:11::i;:::-;6810:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6810:37:2;;;;;;;;;;;;:::i;:::-;6776:71;;;;6857:42;6871:8;6881:17;:15;:17::i;:::-;6857:13;:42::i;:::-;6916:56;6950:8;6960:11;6916:33;:56::i;:::-;6909:63;;;6694:285;:::o;3199:183:32:-;3276:7;3341:20;:18;:20::i;:::-;3363:10;3312:62;;;;;;;;;:::i;8495:1073:2:-;8692:7;8701:16;2970:18:26;:16;:18::i;:::-;8729:30:2::1;8762:19;:8;:17;:19::i;:::-;8729:52:::0;-1:-1:-1;8791:70:2::1;8808:30;8800:4;:38;;;;;;;;;5443:3:19;8791:8:2;:70::i;:::-;8872:26;8901:27;:8;:25;:27::i;:::-;8872:56;;8938;8974:9;:16;8992:1;8938:35;:56::i;:::-;9004:40;9018:9;9029:14;9004:13;:40::i;:::-;9116:26;9145:57;9179:9;9190:11;9145:33;:57::i;:::-;9116:86;;9418:20;9441:31;9450:18;9470:1;9441:8;:31::i;:::-;9483:14;:35:::0;;;;-1:-1:-1;9418:54:2;-1:-1:-1;9551:9:2;-1:-1:-1;;2998:1:26::1;8495:1073:2::0;;;;;;;;:::o;5862:102:11:-;2647:3;5862:102;:::o;3900:110:9:-;3979:24;3985:9;3996:6;3979:5;:24::i;3885:149:33:-;-1:-1:-1;;;;;4000:18:33;;;3974:7;4000:18;;;-1:-1:-1;4000:18:33;;;;;;;;:27;;;;;;;;;;;;;3885:149::o;3435:403:2:-;3573:16;;;3587:1;3573:16;;;;;;;;;3508;;;;3573;;;;3508;;3573;;;;;-1:-1:-1;;3536:53:2;-1:-1:-1;3679:1:2;893:4:28;3664:16:2;3641:17;3659:1;3641:20;;;;;;;;;;;;;;;;;:39;3732:1;893:4:28;3717:16:2;3694:17;3712:1;3694:20;;;;;;;;;;;;;;;;;:39;3785:1;893:4:28;3770:16:2;3747:17;3765:1;3747:20;;;;;;;;;;;;;;;;;:39;3814:17;-1:-1:-1;3435:403:2;:::o;1415:374:25:-;1511:1;1496:5;:12;:16;1492:53;;;1528:7;;1492:53;1555:16;1574:5;1580:1;1574:8;;;;;;;;;;;;;;1555:27;;1597:9;1609:1;1597:13;;1592:191;1616:5;:12;1612:1;:16;1592:191;;;1649:15;1667:5;1673:1;1667:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;1689:51:25;-1:-1:-1;;;;;1698:18:25;;;;;;;4890:3:19;1689:8:25;:51::i;:::-;1765:7;-1:-1:-1;1630:3:25;;1592:191;;1969:544:12;2057:4;1663:42;2078:10;:8;:10::i;:::-;-1:-1:-1;;;;;2078:29:12;;;;;2077:63;;;2112:28;2131:8;2112:18;:28::i;:::-;2073:434;;;2272:10;:8;:10::i;:::-;-1:-1:-1;;;;;2258:24:12;:10;:24;;-1:-1:-1;2251:31:12;;2073:434;2435:16;:14;:16::i;:::-;:61;;-1:-1:-1;;;2435:61:12;;-1:-1:-1;;;;;2435:27:12;;;;;;;:61;;2463:8;;2473:7;;2490:4;;2435:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1074:3172:19:-;-1:-1:-1;;;3588:3:19;3581:79;;;3799:66;3793:4;3786:80;3941:1;3935:4;3928:15;2210:2;2243:18;;;2336;;;2383;;;2215:4;2379:29;;;3057:2;3053:17;2195:18;;;;2288;;;;2284:29;;;;3040:1;3036:14;3025:26;;;;3021:50;;;;2999:73;;2994:3;2990:83;4008:4;4001:26;4234:3;;4224:14;1765:176:37;1842:7;1861:27;1875:1;1870;:6;;1878:9;1861:8;:27::i;:::-;-1:-1:-1;;1910:5:37;;;1765:176::o;3388:427:32:-;3790:9;;3765:44::o;3222:284:1:-;3321:15;3349:9;3360:10;3372;3384;3398:42;3419:8;3429:10;3398:20;:42::i;:::-;3348:92;;;;;;;;3457:42;3473:1;3476:2;3480;3484;3488:10;3457:15;:42::i;:::-;3450:49;3222:284;-1:-1:-1;;;;;;;3222:284:1:o;18735:584:2:-;19029:16;19047:20;19069;19091:19;19114:98;19153:14;;19181:21;19114:25;:98::i;:::-;19028:184;;;;;;;;19250:62;19262:8;19272:12;19286;19300:11;19250;:62::i;:::-;18735:584;;;;;:::o;16872:571::-;16962:19;16983:27;17022:30;17055:19;:8;:17;:19::i;:::-;17022:52;-1:-1:-1;17237:53:2;17229:4;:61;;;;;;;;;17225:212;;;17313:47;17341:8;17351;17313:27;:47::i;:::-;17306:54;;;;;;;17225:212;17391:35;7850:3:19;17391:7:2;:35::i;:::-;16872:571;;;;;;;:::o;11402:743:7:-;11588:21;11657:13;11653:486;;;11760:10;11773:57;11813:16;11773:33;:10;11790:15;11773:16;:33::i;:::-;:39;;:57::i;:::-;11760:70;-1:-1:-1;11860:18:7;:10;11760:70;11860:14;:18::i;:::-;11844:34;;11653:486;;;;12006:10;12019:61;12063:16;12019:35;:10;12038:15;12019:18;:35::i;:61::-;12006:74;-1:-1:-1;12110:18:7;:10;12006:74;12110:14;:18::i;:::-;12094:34;;11653:486;;11402:743;;;;;;:::o;1647:209:28:-;1709:7;1746:5;;;1761:57;1770:6;;;:26;;;1795:1;1790;1780:7;:11;;;;1761:57;893:4;1836:7;:13;;8512:410:33;8587:68;-1:-1:-1;;;;;8596:21:33;;;;8968:3:19;8587:8:33;:68::i;:::-;8666:49;8687:7;8704:1;8708:6;8666:20;:49::i;:::-;-1:-1:-1;;;;;8747:18:33;;:9;:18;;;;;;;;;;;:67;;8770:6;9382:3:19;8747:22:33;:67::i;:::-;-1:-1:-1;;;;;8726:18:33;;:9;:18;;;;;;;;;;:88;8839:12;;:24;;8856:6;8839:16;:24::i;:::-;8824:12;:39;8878:37;;8904:1;;-1:-1:-1;;;;;8878:37:33;;;;;;;8908:6;;8878:37;:::i;:::-;;;;;;;;8512:410;;:::o;12162:581:2:-;12252:20;12274:26;12312:30;12345:19;:8;:17;:19::i;:::-;12312:52;-1:-1:-1;12509:57:2;12501:4;:65;;;;;;;;;12497:240;;;12610:50;12641:8;12651;12610:30;:50::i;:::-;12582:78;;-1:-1:-1;12582:78:2;-1:-1:-1;12497:240:2;;;12691:35;6263:3:19;12691:7:2;:35::i;2730:682:28:-;2790:7;2809:38;2818:6;;;4516:1:19;2809:8:28;:38::i;:::-;2862:6;2858:548;;-1:-1:-1;2891:1:28;2884:8;;2858:548;893:4;2943:7;;;;2964:51;;2943:1;:7;:1;2973:13;;;;;:20;4564:1:19;2964:8:28;:51::i;:::-;3389:1;3384;3372:9;:13;3371:19;;;;;;3394:1;3370:25;3363:32;;;;;1862:617;1922:7;1959:5;;;1974:57;1983:6;;;:26;;;2008:1;2003;1993:7;:11;;;;1974:57;2046:12;2042:431;;2081:1;2074:8;;;;;2042:431;893:4;-1:-1:-1;;2439:11:28;;2438:19;;6411:127:10;-1:-1:-1;6504:7:10;;6411:127::o;6245:402:2:-;6302:21;6338:25;6369:10;:8;:10::i;:::-;-1:-1:-1;;;;;6369:24:2;;6394:11;:9;:11::i;:::-;6369:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6369:37:2;;;;;;;;;;;;:::i;:::-;6335:71;;;;6416:42;6430:8;6440:17;:15;:17::i;6416:42::-;6489:11;6468:18;6530:55;6564:8;6489:11;6530:33;:55::i;:::-;6510:75;-1:-1:-1;6611:29:2;6510:75;6629:10;6611:17;:29::i;:::-;6595:45;;6245:402;;;;:::o;6985:346::-;7187:7;7213:111;7243:21;7266:22;7290:11;:18;;;7310:13;7213:29;:111::i;7337:347::-;7540:7;7566:111;7596:21;7619:22;7643:11;:18;;;7663:13;7566:29;:111::i;867:156:17:-;927:25;982:4;971:45;;;;;;;;;;;;:::i;1205:185::-;1273:26;1338:4;1327:56;;;;;;;;;;;;:::i;7898:294:33:-;7973:49;8002:1;8006:7;8015:6;7973:20;:49::i;:::-;8048:12;;:24;;8065:6;8048:16;:24::i;:::-;8033:12;:39;-1:-1:-1;;;;;8103:18:33;;:9;:18;;;;;;;;;;;:30;;8126:6;8103:22;:30::i;:::-;-1:-1:-1;;;;;8082:18:33;;:9;:18;;;;;;;;;;;:51;;;;8148:37;;8082:18;;:9;8148:37;;;;8178:6;;8148:37;:::i;7301:271:11:-;7387:4;7435:47;-1:-1:-1;;;7435:11:11;:47::i;:::-;7423:8;:59;7422:143;;;-1:-1:-1;7512:52:11;-1:-1:-1;;;7512:11:11;:52::i;:::-;7500:64;;;;7301:271;-1:-1:-1;7301:271:11:o;3722:773:1:-;3859:9;;;;4043:70;4062:50;4101:10;4062:30;4101:10;;4062:18;:30::i;:::-;:38;;:50::i;4043:70::-;4039:74;;4123:13;4139:45;4172:8;4181:1;4172:11;;;;;;;;;;;;;;4139:28;4155:8;4164:1;4155:11;;;;;;;;;;;;;;4139:8;4148:1;4139:11;;;;;;;;;;;;;;:15;;:28;;;;:::i;:::-;:32;;:45::i;:::-;4123:61;-1:-1:-1;4199:45:1;4233:10;4199:25;4123:61;4233:10;4199:13;:25::i;:45::-;4194:50;;4254:13;4270:110;4347:32;4367:8;4376:1;4367:11;;;;;;;;;;;;;;4347:8;4356:1;4347:11;;;;;;;;;;;;;;:19;;:32;;;;:::i;:::-;4270:72;4309:32;4329:8;4338:1;4329:11;;;;;;;;;;;;;;4309:8;4318:1;4309:11;;;;;;;:32;4271;4291:8;4300:1;4291:11;;;;;;;;;;;;;;4271:8;4280:1;4271:11;;;;;;;4270:110;4254:126;-1:-1:-1;4395:25:1;4254:126;4409:10;4395:13;:25::i;:::-;4390:30;;4435:53;4476:8;4485:1;4476:11;;;;;;;;;;;;;;4435:32;4455:8;4464:1;4455:11;;;;;;;;;;;;;;4435:8;4444:1;4435:11;;;;;;;:53;4430:58;;3722:773;;;;;;;;;:::o;4984:323::-;5145:15;5182:43;5211:1;5214:2;5218;5222;5182:28;:43::i;:::-;5172:53;;5245:55;5265:1;5268:2;5272;5276;5280:10;5292:7;5245:19;:55::i;:::-;5235:65;4984:323;-1:-1:-1;;;;;;4984:323:1:o;20265:914:2:-;20413:7;20434;20455;20476;20509:27;20538:30;20570:20;20592:19;20615:18;:16;:18::i;:::-;20508:125;;;;;;;;20729:19;20752:1;20729:24;20725:95;;;20777:1;;-1:-1:-1;20777:1:2;;-1:-1:-1;20783:12:2;;-1:-1:-1;20797:11:2;-1:-1:-1;20769:40:2;;-1:-1:-1;;20769:40:2;20725:95;20864:16;20882:20;20906:197;20950:17;20981:16;21011:13;:11;:13::i;:::-;21038:19;21071:22;20906:30;:197::i;:::-;20863:240;;-1:-1:-1;20863:240:2;-1:-1:-1;21146:12:2;;-1:-1:-1;21160:11:2;;-1:-1:-1;;;;;20265:914:2;;;;;;;;:::o;21257:434::-;21466:12;;21462:82;;21494:39;21510:12;21524:8;21494:15;:39::i;:::-;21600:16;;21596:89;;21632:42;21648:11;21661:12;21632:15;:42::i;:::-;21257:434;;;;:::o;17449:928::-;17600:7;17609:16;18052:19;18074:33;:8;:31;:33::i;:::-;18052:55;;18218:27;18248:80;18291:8;18301:11;18314:13;:11;:13::i;:::-;18248:42;:80::i;:::-;18346:11;;;;-1:-1:-1;17449:928:2;;-1:-1:-1;;;;17449:928:2:o;1353:121:37:-;1411:7;1437:30;1441:1;1444;4370::19;1437:3:37;:30::i;16438:428:2:-;16592:7;16601:16;16633:20;16656:36;:8;:34;:36::i;:::-;16633:59;;16703:26;16732:84;16778:8;16788:12;16802:13;:11;:13::i;:::-;16732:45;:84::i;12281:2639:1:-;12447:17;14054:75;14075:32;:9;2164:6;14075:17;:32::i;:::-;14063:8;:44;;5915:3:19;14054:8:1;:75::i;:::-;14411:18;14432:54;14446:39;:13;14466:18;14446:19;:39::i;:::-;14432:9;;:13;:54::i;:::-;14411:75;-1:-1:-1;14500:20:1;14523:57;14538:41;:13;14560:18;14538:21;:41::i;14523:57::-;14500:80;-1:-1:-1;14607:64:1;14646:24;:10;14661:8;14646:14;:24::i;:::-;14607:30;:12;14628:8;14607:20;:30::i;:64::-;14595:76;-1:-1:-1;14834:79:1;;-1:-1:-1;14856:34:1;;-1:-1:-1;14856:10:1;2219:6;14856:18;:34::i;:::-;14843:9;:47;;5966:3:19;14834:8:1;:79::i;15118:2651::-;15285:16;17048:79;17070:34;:10;2219:6;17070:18;:34::i;:::-;17057:9;:47;;5966:3:19;17048:8:1;:79::i;:::-;17409:18;17430:54;17444:39;:13;17464:18;17444:19;:39::i;17430:54::-;17409:75;-1:-1:-1;17498:20:1;17521:57;17536:41;:13;17558:18;17536:21;:41::i;17521:57::-;17498:80;-1:-1:-1;17604:62:1;17638:27;17498:80;17655:9;17638:16;:27::i;:::-;17604;:10;17621:9;17604:16;:27::i;:62::-;17593:73;-1:-1:-1;17687:75:1;;-1:-1:-1;17708:32:1;;-1:-1:-1;17708:9:1;2164:6;17708:17;:32::i;:::-;17696:8;:44;;5915:3:19;17687:8:1;:75::i;5546:714::-;5695:10;;5733:55;5750:37;5768:18;5750:11;:1;5758:2;5750:7;:11::i;:::-;:17;;:37::i;:::-;5733:12;5742:2;;5733:8;:12::i;:55::-;5717:71;-1:-1:-1;5798:12:1;5813:48;5833:27;5858:1;5854:5;;5833:14;5717:71;5845:1;5833:11;:14::i;:27::-;5813:15;:2;5826:1;5822:5;;5813:8;:15::i;:48::-;5798:63;-1:-1:-1;6093:13:1;6109:21;893:4:28;6128:1:1;6109:18;:21::i;:::-;6093:37;;6172:14;6198:6;6189:5;:15;;:31;;6216:4;6189:31;;;6207:6;6189:31;-1:-1:-1;;;;;6172:48:1;;-1:-1:-1;6235:18:1;:4;6172:48;6235:10;:18::i;:::-;6230:23;5546:714;-1:-1:-1;;;;;;;;;5546:714:1:o;6612:1378::-;6802:7;;;6855:1066;6895:3;6883:9;:15;6855:1066;;;7037:16;7055:15;7074:52;7091:1;7094:2;7098;7102;7106:10;7118:7;7074:16;:52::i;:::-;7036:90;;;;7269:1;7257:8;:13;7253:33;;7279:7;7272:14;;;;;;;;7253:33;2744:1;7304:38;;;;;:52;;;7346:10;7304:52;7300:199;;;7492:7;7485:14;;;;;;;;7300:199;2744:1;7517:38;;;;;:105;;-1:-1:-1;2685:1:1;7571:12;:51;7559:8;:63;;7517:105;7513:250;;;7741:7;7734:14;;;;;;;;7513:250;7791:8;7776:23;;7817:10;7813:97;;;7839:21;:7;7851:8;7839:11;:21::i;:::-;7829:31;;7813:97;;;7889:21;:7;7901:8;7889:11;:21::i;:::-;7879:31;;7813:97;-1:-1:-1;;6900:11:1;;6855:1066;;;;7930:53;958:3:3;7930:7:1;:53::i;:::-;6612:1378;;;;;;;;;:::o;21769:497:2:-;21973:10;;:61;;-1:-1:-1;;;21973:61:2;;21857:7;;;;;;;;-1:-1:-1;;;;;21973:10:2;;;;-1:-1:-1;;21973:61:2;;-1:-1:-1;;;;21973:61:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22048:10;;:64;;-1:-1:-1;;;22048:64:2;;-1:-1:-1;;;;;22048:10:2;;;;-1:-1:-1;;22048:64:2;;22067:44;;22048:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22126:10;;:55;;-1:-1:-1;;;22126:55:2;;-1:-1:-1;;;;;22126:10:2;;;;-1:-1:-1;;22126:55:2;;-1:-1:-1;;;;22126:55:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22195:10;;:54;;-1:-1:-1;;;22195:54:2;;-1:-1:-1;;;;;22195:10:2;;;;-1:-1:-1;;22195:54:2;;-1:-1:-1;;;;22195:54:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21952:307;;;;;;;;21769:497;;;;:::o;4825:2284:7:-;5061:7;5070;5804:17;5784:16;:37;5780:317;;-1:-1:-1;6081:1:7;;-1:-1:-1;6081:1:7;6073:13;;5780:317;6549:17;6569:96;6645:19;6570:65;6595:39;:16;6616:17;6595:20;:39::i;:::-;6570:16;;:24;:65::i;6569:96::-;6549:116;-1:-1:-1;6675:21:7;6699:68;6727:39;:16;6748:17;6727:20;:39::i;:::-;6699:19;;:27;:68::i;:::-;6675:92;-1:-1:-1;6777:19:7;6799:35;:16;6675:92;6799:20;:35::i;:::-;6777:57;-1:-1:-1;6844:14:7;6861:30;:9;6777:57;6861:17;:30::i;:::-;6844:47;-1:-1:-1;6950:16:7;6969:38;:22;6844:47;6969:30;:38::i;:::-;6950:57;-1:-1:-1;7017:20:7;7040;:6;6950:57;7040:10;:20::i;:::-;7079:8;;;;-1:-1:-1;4825:2284:7;;-1:-1:-1;;;;;;;;;;;4825:2284:7:o;2343:184:17:-;2417:19;2477:4;2466:54;;;;;;;;;;;;:::i;3047:1447:7:-;3205:16;4215;4234:29;:11;4254:8;4234:19;:29::i;:::-;4318:15;;4215:48;;-1:-1:-1;4274:27:7;;-1:-1:-1;;;;;4304:30:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4304:30:7;;4274:60;;4349:9;4344:116;4368:8;:15;4364:1;:19;4344:116;;;4420:29;4440:8;4420;4429:1;4420:11;;;;;;;:29;4404:10;4415:1;4404:13;;;;;;;;;;;;;;;;;:45;4385:3;;4344:116;;;-1:-1:-1;4477:10:7;3047:1447;-1:-1:-1;;;;;3047:1447:7:o;1691:1262::-;1853:16;2680;2699:28;:12;2718:8;2699:18;:28::i;:::-;2781:15;;2680:47;;-1:-1:-1;2738:26:7;;-1:-1:-1;;;;;2767:30:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2767:30:7;;2738:59;;2812:9;2807:113;2831:8;:15;2827:1;:19;2807:113;;;2882:27;2900:8;2882;2891:1;2882:11;;;;;;;;;;;;;;:17;;:27;;;;:::i;:::-;2867:9;2877:1;2867:12;;;;;;;;;;;;;;;;;:42;2848:3;;2807:113;;7218:985;7290:7;7313:10;7309:49;;-1:-1:-1;7346:1:7;7339:8;;7309:49;7368:13;7384:24;7402:5;7384:17;:24::i;:::-;7368:40;;7498:1;7488:5;893:4:28;7462:5:7;:22;7461:32;;;;;;7452:5;:42;7451:48;;;;;;7443:56;;7564:1;7554:5;893:4:28;7528:5:7;:22;7527:32;;;;;;7518:5;:42;7517:48;;;;;;7509:56;;7630:1;7620:5;893:4:28;7594:5:7;:22;7593:32;;;;;;7584:5;:42;7583:48;;;;;;7575:56;;7696:1;7686:5;893:4:28;7660:5:7;:22;7659:32;;;;;;7650:5;:42;7649:48;;;;;;7641:56;;7762:1;7752:5;893:4:28;7726:5:7;:22;7725:32;;;;;;7716:5;:42;7715:48;;;;;;7707:56;;7828:1;7818:5;893:4:28;7792:5:7;:22;7791:32;;;;;;7782:5;:42;7781:48;;;;;;7773:56;;7894:1;7884:5;893:4:28;7858:5:7;:22;7857:32;;;;;;7848:5;:42;7847:48;;;;;;;-1:-1:-1;7993:20:7;8016;7847:48;;8016:13;:20::i;:::-;7993:43;-1:-1:-1;8070:33:7;8080:22;:5;8092:9;8080:11;:22::i;:::-;8070:5;;:9;:33::i;:::-;8054:12;:49;;:102;;;;-1:-1:-1;8123:33:7;8133:22;:5;8145:9;8133:11;:22::i;:::-;8123:5;;:9;:33::i;:::-;8107:12;:49;;8054:102;8046:127;;;;-1:-1:-1;;;8046:127:7;;;;;;;:::i;:::-;;;;;;;;8178:1425:1;8365:16;;;;8698:24;8714:7;;8698:15;:24::i;:::-;8679:43;;8748:21;8757:1;8760:8;8748;:21::i;:::-;8736:33;-1:-1:-1;8795:84:1;8809:69;8867:10;8809:49;8867:10;8809:49;8736:33;8867:10;8809:17;:29::i;:69::-;8795:9;;:13;:84::i;:::-;8783:96;-1:-1:-1;8905:55:1;8957:2;8905:47;8919:32;8928:1;8931:19;:7;8947:2;8931:15;:19::i;8919:32::-;8905:9;;:13;:47::i;:::-;:51;;:55::i;:::-;8893:67;;8178:1425;8981:18;9002:51;9022:7;9031:10;9043:9;9002:19;:51::i;:::-;8981:72;-1:-1:-1;9269:17:1;9289:36;9322:2;9289:24;9305:7;;9289:15;:24::i;:36::-;9269:56;-1:-1:-1;9347:53:1;9390:9;9347:34;9361:19;:7;9377:2;9361:15;:19::i;:::-;9347:9;;:13;:34::i;:53::-;9335:65;-1:-1:-1;9422:36:1;9436:21;:2;9447:9;9436:10;:21::i;:::-;9422:9;;:13;:36::i;:::-;9410:48;;9496:10;9483:9;:23;;9469:38;;9529:10;:66;;9570:25;:10;9585:9;9570:14;:25::i;:::-;9529:66;;;9542:25;:9;9556:10;9542:13;:25::i;:::-;9517:79;;8178:1425;;;;;;;;;;;;:::o;8791:1608:7:-;8856:7;893:4:28;8879:5:7;:23;8875:1518;;893:4:28;8932:38:7;893:4:28;8947:5:7;:22;8932:14;:38::i;:::-;8925:64;;-1:-1:-1;8918:71:7;;8875:1518;9032:2;9024:5;:10;9020:70;;;-1:-1:-1;1531:9:7;9054:21;;9020:70;9115:3;9107:5;:11;9103:61;;;-1:-1:-1;9145:4:7;9138:11;;9103:61;9189:3;9181:5;:11;9177:71;;;-1:-1:-1;1472:11:7;9212:21;;9177:71;9273:3;9265:5;:11;9261:61;;;-1:-1:-1;9303:4:7;9296:11;;9261:61;9347:3;9339:5;:11;9335:71;;;-1:-1:-1;1412:12:7;9370:21;;9335:71;9431:3;9423:5;:11;9419:61;;;-1:-1:-1;9461:4:7;9454:11;;9419:61;9505:3;9497:5;:11;9493:71;;;-1:-1:-1;1351:13:7;9528:21;;9493:71;9589:3;9581:5;:11;9577:61;;;-1:-1:-1;9619:4:7;9612:11;;9577:61;9663:3;9655:5;:11;9651:70;;;-1:-1:-1;1289:14:7;9686:20;;9651:70;9746:4;9738:5;:12;9734:62;;;-1:-1:-1;9777:4:7;9770:11;;9734:62;9821:4;9813:5;:12;9809:71;;;-1:-1:-1;1227:15:7;9845:20;;9809:71;9905:4;9897:5;:12;9893:62;;;-1:-1:-1;9936:4:7;9929:11;;9893:62;9980:4;9972:5;:12;9968:71;;;-1:-1:-1;1164:16:7;10004:20;;9968:71;10064:4;10056:5;:12;10052:62;;;-1:-1:-1;10095:4:7;10088:11;;10052:62;10139:4;10131:5;:12;10127:71;;;-1:-1:-1;1100:17:7;10163:20;;10127:71;10223:4;10215:5;:12;10211:62;;;-1:-1:-1;10254:4:7;10247:11;;10211:62;10298:4;10290:5;:12;10286:71;;;-1:-1:-1;1035:18:7;10322:20;;10286:71;-1:-1:-1;10377:5:7;10370:12;;10039:1690:1;10163:11;3024:7;10190:1;:31;10186:1537;;10297:23;10318:1;10297:12;10318:1;;10297:9;:12::i;:23::-;10291:29;-1:-1:-1;10340:72:1;10348:63;10400:10;10348:43;10400:10;10348:43;10291:29;10400:10;10348:11;:23::i;:63::-;10340:3;;:7;:72::i;:::-;10334:78;-1:-1:-1;10432:14:1;10334:78;10444:1;10432:11;:14::i;:::-;10426:20;;10186:1537;;;10483:12;10493:1;;10483:9;:12::i;:::-;10477:18;-1:-1:-1;10767:70:1;10805:31;893:4:28;10817:1:1;:18;10805:3;;10817:18;;10805:11;:31::i;:::-;10767:33;10776:3;893:4:28;10781:1:1;:18;;10767:8;:33::i;:70::-;10761:76;-1:-1:-1;10761:76:1;10885:102;10952:34;3076:3;10962:10;:23;;10952:34;10885:62;10898:36;10907:1;3076:3;10910:10;:23;;10898:36;3076:3;10885:12;:62::i;:102::-;10881:106;-1:-1:-1;11005:102:1;11072:34;3076:3;11082:10;:23;;11005:102;11001:106;-1:-1:-1;11125:102:1;11192:34;3076:3;11202:10;:23;;11125:102;11121:106;-1:-1:-1;11247:10:1;:3;11121:106;11247:7;:10::i;:::-;11241:16;;11644:68;11657:25;11666:3;3076;11657:8;:25::i;:::-;11684:27;11697:1;3076:3;11684:12;:27::i;:::-;11644:12;:68::i;10405:633:7:-;10461:9;-1:-1:-1;;;10486:13:7;;10482:74;;10521:3;10515:9;;;;;10543:2;10538:7;10482:74;10574:7;10569:1;:12;10565:72;;10603:2;10597:8;;;;;10624:2;10619:7;10565:72;10655:7;10650:1;:12;10646:72;;10684:2;10678:8;;;;;10705:2;10700:7;10646:72;10736:7;10731:1;:12;10727:71;;10765:2;10759:8;;;;;10786:1;10781:6;10727:71;10816:6;10811:1;:11;10807:69;;10844:1;10838:7;;;;;10864:1;10859:6;10807:69;10894:6;10889:1;:11;10885:69;;10922:1;10916:7;;;;;10942:1;10937:6;10885:69;10972:6;10967:1;:11;10963:69;;11020:1;11015:6;;10405:633;-1:-1:-1;10405:633:7:o;2157:148:30:-;2219:7;2238:38;2247:6;;;4516:1:19;2238:8:30;:38::i;:::-;2297:1;2293;:5;;;;;;;2157:148;-1:-1:-1;;;2157:148:30:o;5:130:-1:-;72:20;;97:33;72:20;97:33;:::i;1835:722::-;;1963:3;1956:4;1948:6;1944:17;1940:27;1930:2;;-1:-1;;1971:12;1930:2;2011:6;2005:13;2033:80;2048:64;2105:6;2048:64;:::i;:::-;2033:80;:::i;:::-;2141:21;;;2024:89;-1:-1;2185:4;2198:14;;;;2173:17;;;2287;;;2278:27;;;;2275:36;-1:-1;2272:2;;;2324:1;;2314:12;2272:2;2349:1;2334:217;2359:6;2356:1;2353:13;2334:217;;;6485:13;;2427:61;;2502:14;;;;2530;;;;2381:1;2374:9;2334:217;;;2338:14;;;;;1923:634;;;;:::o;3104:440::-;;3205:3;3198:4;3190:6;3186:17;3182:27;3172:2;;-1:-1;;3213:12;3172:2;3247:20;;-1:-1;;;;;31559:30;;31556:2;;;-1:-1;;31592:12;31556:2;3282:64;31733:4;-1:-1;;31665:9;31646:17;;31642:33;31723:15;3282:64;:::i;:::-;3273:73;;3366:6;3359:5;3352:21;3470:3;31733:4;3461:6;3394;3452:16;;3449:25;3446:2;;;3487:1;;3477:12;3446:2;35476:6;31733:4;3394:6;3390:17;31733:4;3428:5;3424:16;35453:30;35532:1;35514:16;;;31733:4;35514:16;35507:27;3428:5;3165:379;-1:-1;;3165:379::o;4405:156::-;4485:20;;37207:1;37197:12;;37187:2;;37223:1;;37213:12;6681:241;;6785:2;6773:9;6764:7;6760:23;6756:32;6753:2;;;-1:-1;;6791:12;6753:2;85:6;72:20;97:33;124:5;97:33;:::i;6929:263::-;;7044:2;7032:9;7023:7;7019:23;7015:32;7012:2;;;-1:-1;;7050:12;7012:2;226:6;220:13;238:33;265:5;238:33;:::i;7199:366::-;;;7320:2;7308:9;7299:7;7295:23;7291:32;7288:2;;;-1:-1;;7326:12;7288:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;7378:63;-1:-1;7478:2;7517:22;;72:20;97:33;72:20;97:33;:::i;:::-;7486:63;;;;7282:283;;;;;:::o;7572:491::-;;;;7710:2;7698:9;7689:7;7685:23;7681:32;7678:2;;;-1:-1;;7716:12;7678:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;7768:63;-1:-1;7868:2;7907:22;;72:20;97:33;72:20;97:33;:::i;:::-;7672:391;;7876:63;;-1:-1;;;7976:2;8015:22;;;;6337:20;;7672:391::o;8070:991::-;;;;;;;;8274:3;8262:9;8253:7;8249:23;8245:33;8242:2;;;-1:-1;;8281:12;8242:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;8333:63;-1:-1;8433:2;8472:22;;72:20;97:33;72:20;97:33;:::i;:::-;8441:63;-1:-1;8541:2;8580:22;;6337:20;;-1:-1;8649:2;8688:22;;6337:20;;-1:-1;8757:3;8795:22;;6613:20;34195:4;34184:16;;37420:33;;37410:2;;-1:-1;;37457:12;37410:2;8236:825;;;;-1:-1;8236:825;;;;8766:61;8864:3;8904:22;;2898:20;;-1:-1;8973:3;9013:22;;;2898:20;;8236:825;-1:-1;;8236:825::o;9068:366::-;;;9189:2;9177:9;9168:7;9164:23;9160:32;9157:2;;;-1:-1;;9195:12;9157:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;9247:63;9347:2;9386:22;;;;6337:20;;-1:-1;;;9151:283::o;9441:823::-;;;;9655:2;9643:9;9634:7;9630:23;9626:32;9623:2;;;-1:-1;;9661:12;9623:2;9706:24;;-1:-1;;;;;9739:30;;;9736:2;;;-1:-1;;9772:12;9736:2;9889:6;9878:9;9874:22;;;452:3;445:4;437:6;433:17;429:27;419:2;;-1:-1;;460:12;419:2;500:6;494:13;522:95;537:79;609:6;537:79;:::i;522:95::-;623:16;659:6;652:5;645:21;689:4;;706:3;702:14;695:21;;689:4;681:6;677:17;811:3;689:4;;795:6;791:17;681:6;782:27;;779:36;776:2;;;-1:-1;;818:12;776:2;-1:-1;844:10;;838:232;863:6;860:1;857:13;838:232;;;3999:6;3993:13;4011:48;4053:5;4011:48;:::i;:::-;931:76;;885:1;878:9;;;;;1021:14;;;;1049;;838:232;;;-1:-1;9949:18;;9943:25;9792:114;;-1:-1;9943:25;-1:-1;;;9977:30;;;9974:2;;;-1:-1;;10010:12;9974:2;;10040:89;10121:7;10112:6;10101:9;10097:22;10040:89;:::i;:::-;10030:99;;;10166:2;10220:9;10216:22;6485:13;10174:74;;9617:647;;;;;:::o;10271:235::-;;10372:2;10360:9;10351:7;10347:23;10343:32;10340:2;;;-1:-1;;10378:12;10340:2;2642:6;2629:20;2654:30;2678:5;2654:30;:::i;10513:257::-;;10625:2;10613:9;10604:7;10600:23;10596:32;10593:2;;;-1:-1;;10631:12;10593:2;2777:6;2771:13;2789:30;2813:5;2789:30;:::i;10777:1235::-;;;;;;;;11017:3;11005:9;10996:7;10992:23;10988:33;10985:2;;;-1:-1;;11024:12;10985:2;2911:6;2898:20;11076:63;;11176:2;;11219:9;11215:22;72:20;97:33;124:5;97:33;:::i;:::-;11184:63;-1:-1;11284:2;11323:22;;72:20;97:33;72:20;97:33;:::i;:::-;11292:63;-1:-1;11420:2;11405:18;;11392:32;-1:-1;;;;;11433:30;;;11430:2;;;-1:-1;;11466:12;11430:2;11557:6;11546:9;11542:22;;;1219:3;1212:4;1204:6;1200:17;1196:27;1186:2;;-1:-1;;1227:12;1186:2;1274:6;1261:20;1296:80;1311:64;1368:6;1311:64;:::i;1296:80::-;1382:16;1418:6;1411:5;1404:21;11176:2;1465:3;1461:14;1454:21;;11176:2;1440:6;1436:17;1570:3;11176:2;;1554:6;1550:17;1440:6;1541:27;;1538:36;1535:2;;;-1:-1;;1577:12;1535:2;-1:-1;1603:10;;1597:206;1622:6;1619:1;1616:13;1597:206;;;6337:20;;1690:50;;1644:1;1637:9;;;;;1754:14;;;;1782;;1597:206;;;-1:-1;11486:88;-1:-1;;;11611:3;11651:22;;6337:20;;-1:-1;11720:3;11760:22;;6337:20;;-1:-1;11857:3;11842:19;;11829:33;;-1:-1;11871:30;;;11868:2;;;-1:-1;;11904:12;11868:2;;;11934:62;11988:7;11979:6;11968:9;11964:22;11934:62;:::i;:::-;11924:72;;;10979:1033;;;;;;;;;;:::o;12019:239::-;;12122:2;12110:9;12101:7;12097:23;12093:32;12090:2;;;-1:-1;;12128:12;12090:2;3034:20;;-1:-1;;;;;;33596:78;;36515:34;;36505:2;;-1:-1;;36553:12;12575:500;;;12720:2;12708:9;12699:7;12695:23;12691:32;12688:2;;;-1:-1;;12726:12;12688:2;3828:6;3815:20;3840:48;3882:5;3840:48;:::i;:::-;12778:78;-1:-1;12921:2;12906:18;;12893:32;-1:-1;;;;;12934:30;;12931:2;;;-1:-1;;12967:12;12931:2;12997:62;13051:7;13042:6;13031:9;13027:22;12997:62;:::i;:::-;12987:72;;;12682:393;;;;;:::o;13082:289::-;;13210:2;13198:9;13189:7;13185:23;13181:32;13178:2;;;-1:-1;;13216:12;13178:2;4168:6;4162:13;4180:46;4220:5;4180:46;:::i;13378:425::-;;;13523:2;13511:9;13502:7;13498:23;13494:32;13491:2;;;-1:-1;;13529:12;13491:2;4168:6;4162:13;4180:46;4220:5;4180:46;:::i;:::-;13705:2;13755:22;;;;6485:13;13581:87;;6485:13;;-1:-1;;;13485:318::o;14106:554::-;;;14276:2;14264:9;14255:7;14251:23;14247:32;14244:2;;;-1:-1;;14282:12;14244:2;4168:6;4162:13;4180:46;4220:5;4180:46;:::i;:::-;14479:2;14464:18;;14458:25;14334:87;;-1:-1;;;;;;14492:30;;14489:2;;;-1:-1;;14525:12;14489:2;14555:89;14636:7;14627:6;14616:9;14612:22;14555:89;:::i;15099:637::-;;;;15267:2;15255:9;15246:7;15242:23;15238:32;15235:2;;;-1:-1;;15273:12;15235:2;15318:31;;-1:-1;;;;;15358:30;;;15355:2;;;-1:-1;;15391:12;15355:2;15487:6;15476:9;15472:22;;;4729:6;;4717:9;4712:3;4708:19;4704:32;4701:2;;;-1:-1;;4739:12;4701:2;4767:22;4729:6;4767:22;:::i;:::-;4758:31;;4871:62;4929:3;4905:22;4871:62;:::i;:::-;4853:16;4846:88;5031:64;5091:3;4998:2;5071:9;5067:22;5031:64;:::i;:::-;4998:2;5017:5;5013:16;5006:90;5194:64;5254:3;5161:2;5234:9;5230:22;5194:64;:::i;:::-;5161:2;5180:5;5176:16;5169:90;15267:2;5380:9;5376:22;6337:20;15267:2;5341:5;5337:16;5330:75;5468:3;5527:9;5523:22;2898:20;5468:3;5488:5;5484:16;5477:75;5624:3;5683:9;5679:22;6337:20;5624:3;5644:5;5640:16;5633:75;5803:49;5848:3;5769;5828:9;5824:22;5803:49;:::i;:::-;5769:3;5789:5;5785:16;5778:75;5946:49;5991:3;5912;5971:9;5967:22;5946:49;:::i;:::-;5912:3;5932:5;5928:16;5921:75;6089:3;;6078:9;6074:19;6061:33;15369:18;6106:6;6103:30;6100:2;;;-1:-1;;6136:12;6100:2;6183:58;6237:3;6228:6;6217:9;6213:22;6183:58;:::i;:::-;6163:18;;;6156:86;;;;-1:-1;6167:5;4998:2;15580:22;;6337:20;;-1:-1;5161:2;15688:22;;;6337:20;;15229:507;-1:-1;;;;;15229:507::o;15743:241::-;;15847:2;15835:9;15826:7;15822:23;15818:32;15815:2;;;-1:-1;;15853:12;15815:2;-1:-1;6337:20;;15809:175;-1:-1;15809:175::o;15991:263::-;;16106:2;16094:9;16085:7;16081:23;16077:32;16074:2;;;-1:-1;;16112:12;16074:2;-1:-1;6485:13;;16068:186;-1:-1;16068:186::o;16261:672::-;;;;;16427:3;16415:9;16406:7;16402:23;16398:33;16395:2;;;-1:-1;;16434:12;16395:2;6491:6;6485:13;16486:74;;16597:2;16651:9;16647:22;6485:13;16605:74;;16716:2;16770:9;16766:22;6485:13;16724:74;;16835:2;16889:9;16885:22;220:13;238:33;265:5;238:33;:::i;:::-;16389:544;;;;-1:-1;16389:544;;-1:-1;;16389:544::o;17273:690::-;;17466:5;32016:12;32560:6;32555:3;32548:19;32597:4;;32592:3;32588:14;17478:93;;32597:4;17642:5;31870:14;-1:-1;17681:260;17706:6;17703:1;17700:13;17681:260;;;17767:13;;18153:37;;17094:14;;;;32403;;;;17728:1;17721:9;17681:260;;;-1:-1;17947:10;;17397:566;-1:-1;;;;;17397:566::o;18857:343::-;;18999:5;32016:12;32560:6;32555:3;32548:19;-1:-1;35621:101;35635:6;35632:1;35629:13;35621:101;;;32597:4;35702:11;;;;;35696:18;35683:11;;;;;35676:39;35650:10;35621:101;;;35737:6;35734:1;35731:13;35728:2;;;-1:-1;32597:4;35793:6;32592:3;35784:16;;35777:27;35728:2;-1:-1;31665:9;36054:14;-1:-1;;36050:28;19156:39;;;;32597:4;19156:39;;18947:253;-1:-1;;18947:253::o;21305:387::-;18153:37;;;-1:-1;;;;;;33596:78;21556:2;21547:12;;18448:56;21656:11;;;21447:245::o;21699:291::-;;35476:6;35471:3;35466;35453:30;35514:16;;35507:27;;;35514:16;21843:147;-1:-1;21843:147::o;21997:659::-;-1:-1;;;20509:87;;20494:1;20615:11;;18153:37;;;;22508:12;;;18153:37;22619:12;;;22242:414::o;22663:222::-;-1:-1;;;;;33979:54;;;;17193:37;;22790:2;22775:18;;22761:124::o;22892:370::-;;23069:2;23090:17;23083:47;23144:108;23069:2;23058:9;23054:18;23238:6;23144:108;:::i;23269:629::-;;23524:2;23545:17;23538:47;23599:108;23524:2;23513:9;23509:18;23693:6;23599:108;:::i;:::-;23755:9;23749:4;23745:20;23740:2;23729:9;23725:18;23718:48;23780:108;23883:4;23874:6;23780:108;:::i;23905:210::-;33430:13;;33423:21;18036:34;;24026:2;24011:18;;23997:118::o;24122:432::-;33430:13;;33423:21;18036:34;;24457:2;24442:18;;18153:37;;;;24540:2;24525:18;;18153:37;24299:2;24284:18;;24270:284::o;24561:222::-;18153:37;;;24688:2;24673:18;;24659:124::o;24790:444::-;18153:37;;;-1:-1;;;;;33979:54;;;25137:2;25122:18;;17193:37;33979:54;25220:2;25205:18;;17193:37;24973:2;24958:18;;24944:290::o;25241:780::-;18153:37;;;-1:-1;;;;;33979:54;;;25673:2;25658:18;;17193:37;33979:54;;;;25756:2;25741:18;;17193:37;25839:2;25824:18;;18153:37;25922:3;25907:19;;18153:37;;;;-1:-1;25991:19;;18153:37;25508:3;25493:19;;25479:542::o;26028:668::-;18153:37;;;26432:2;26417:18;;18153:37;;;;26515:2;26500:18;;18153:37;;;;26598:2;26583:18;;18153:37;-1:-1;;;;;33979:54;26681:3;26666:19;;17193:37;-1:-1;26252:19;;26238:458::o;26703:417::-;;18183:5;18160:3;18153:37;26876:2;26994;26983:9;26979:18;26972:48;27034:76;26876:2;26865:9;26861:18;27096:6;27034:76;:::i;27127:363::-;18153:37;;;-1:-1;;;;;33979:54;27476:2;27461:18;;19298:70;27297:2;27282:18;;27268:222::o;27497:548::-;18153:37;;;34195:4;34184:16;;;;27865:2;27850:18;;21258:35;27948:2;27933:18;;18153:37;28031:2;28016:18;;18153:37;27704:3;27689:19;;27675:370::o;28849:310::-;;28996:2;29017:17;29010:47;29071:78;28996:2;28985:9;28981:18;29135:6;29071:78;:::i;29166:416::-;29366:2;29380:47;;;20865:2;29351:18;;;32548:19;-1:-1;;;32588:14;;;20881:35;20935:12;;;29337:245::o;29818:481::-;;18183:5;18160:3;18153:37;30023:2;30141;30130:9;30126:18;30119:48;30181:108;30023:2;30012:9;30008:18;30275:6;30181:108;:::i;30306:214::-;34195:4;34184:16;;;;21258:35;;30429:2;30414:18;;30400:120::o;30527:256::-;30589:2;30583:9;30615:17;;;30711:22;;;-1:-1;;;;;30675:34;;30672:62;30669:2;;;30747:1;;30737:12;30669:2;30589;30756:22;30567:216;;-1:-1;30567:216::o;30790:319::-;;-1:-1;;;;;30953:30;;30950:2;;;-1:-1;;30986:12;30950:2;-1:-1;31031:4;31019:17;;;31084:15;;30887:222::o;36091:117::-;-1:-1;;;;;33979:54;;36150:35;;36140:2;;36199:1;;36189:12;36215:111;36296:5;33430:13;33423:21;36274:5;36271:32;36261:2;;36317:1;;36307:12;36897:107;36979:1;36972:5;36969:12;36959:2;;36995:1;;36985:12", "language": "Solidity", "natspec": {"details": "Gyro Three Pool with immutable weights.", "kind": "dev", "methods": {"DOMAIN_SEPARATOR()": {"details": "See {IERC20Permit-DOMAIN_SEPARATOR}."}, "allowance(address,address)": {"details": "Override to grant the Vault infinite allowance, causing for Pool Tokens to not require approval. This is sound as the Vault already provides authorization mechanisms when initiation token transfers, which this contract inherits."}, "approve(address,uint256)": {"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."}, "balanceOf(address)": {"details": "See {IERC20-balanceOf}."}, "decimals()": {"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."}, "decreaseAllowance(address,uint256)": {"details": "Override to allow decreasing allowance by more than the current amount (setting it to zero)"}, "getActionId(bytes4)": {"details": "Returns the action identifier associated with the external function described by `selector`."}, "getInvariant()": {"details": "Returns the current value of the invariant."}, "getPausedState()": {"details": "Returns the current contract pause status, as well as the end times of the Pause Window and Buffer Period."}, "getRate()": {"details": "This function returns the appreciation of one BPT relative to the underlying tokens. This starts at 1 when the pool is created and grows over time"}, "increaseAllowance(address,uint256)": {"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."}, "name()": {"details": "Returns the name of the token."}, "nonces(address)": {"details": "See {IERC20Permit-nonces}."}, "onExitPool(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Called by the Vault when a user calls `IVault.exitPool` to remove liquidity from this Pool. Returns how many tokens the Vault should deduct from the Pool's balances, as well as the amount of protocol fees the Pool owes to the Vault. The Vault will then take tokens from the Pool's balances and send them to `recipient`, as well as collect the reported amount in protocol fees, which the Pool should calculate based on `protocolSwapFeePercentage`. Protocol fees are charged on exit events to guarantee that users exiting the Pool have paid their share. `sender` is the account performing the exit (typically the pool shareholder), and `recipient` is the account to which the Vault will send the proceeds. `balances` contains the total token balances for each token the Pool registered in the Vault, in the same order that `IVault.getPoolTokens` would return. `lastChangeBlock` is the last block in which *any* of the Pool's registered tokens last changed its total balance. `userData` contains any pool-specific instructions needed to perform the calculations, such as the type of exit (e.g., proportional given an amount of pool shares, single-asset, multi-asset, etc.) Contracts implementing this function should check that the caller is indeed the Vault before performing any state-changing operations, such as burning pool shares."}, "onJoinPool(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Called by the Vault when a user calls `IVault.joinPool` to add liquidity to this Pool. Returns how many of each registered token the user should provide, as well as the amount of protocol fees the Pool owes to the Vault. The Vault will then take tokens from `sender` and add them to the Pool's balances, as well as collect the reported amount in protocol fees, which the pool should calculate based on `protocolSwapFeePercentage`. Protocol fees are reported and charged on join events so that the Pool is free of debt whenever new users join. `sender` is the account performing the join (from which tokens will be withdrawn), and `recipient` is the account designated to receive any benefits (typically pool shares). `balances` contains the total balances for each token the Pool registered in the Vault, in the same order that `IVault.getPoolTokens` would return. `lastChangeBlock` is the last block in which *any* of the Pool's registered tokens last changed its total balance. `userData` contains any pool-specific instructions needed to perform the calculations, such as the type of join (e.g., proportional given an amount of pool shares, single-asset, multi-asset, etc.) Contracts implementing this function should check that the caller is indeed the Vault before performing any state-changing operations, such as minting pool shares."}, "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {"details": "See {IERC20Permit-permit}."}, "queryExit(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Returns the amount of BPT that would be burned from `sender` if the `onExitPool` hook were called by the Vault with the same arguments, along with the number of tokens `recipient` would receive. This function is not meant to be called directly, but rather from a helper contract that fetches current Vault data, such as the protocol swap fee percentage and Pool balances. Like `IVault.queryBatchSwap`, this function is not view due to internal implementation details: the caller must explicitly use eth_call instead of eth_sendTransaction."}, "queryJoin(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Returns the amount of BPT that would be granted to `recipient` if the `onJoinPool` hook were called by the Vault with the same arguments, along with the number of tokens `sender` would have to supply. This function is not meant to be called directly, but rather from a helper contract that fetches current Vault data, such as the protocol swap fee percentage and Pool balances. Like `IVault.queryBatchSwap`, this function is not view due to internal implementation details: the caller must explicitly use eth_call instead of eth_sendTransaction."}, "symbol()": {"details": "Returns the symbol of the token, usually a shorter version of the name."}, "totalSupply()": {"details": "See {IERC20-totalSupply}."}, "transfer(address,uint256)": {"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."}, "transferFrom(address,address,uint256)": {"details": "Override to allow for 'infinite allowance' and let the token owner use `transferFrom` with no self-allowance"}}, "version": 1}, "offset": [1126, 22268], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x74F3B009 GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x442 JUMPI DUP1 PUSH4 0xD5C096C4 EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0xD60CA603 EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0xF89F27ED EQ PUSH2 0x483 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0xAAABADC5 EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0xC0FF1A15 EQ PUSH2 0x43A JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0x8D928AF8 EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0x9B02CDDE EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0x9D2C110C EQ PUSH2 0x3F9 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x74F3B009 EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0x851C1BB3 EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0x87EC6817 EQ PUSH2 0x3C6 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x38E9922E GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x50DD6ED9 GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x50DD6ED9 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x55C67628 EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x6028BFD4 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x36C JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x38E9922E EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x38FFF2D0 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x44BBDB55 EQ PUSH2 0x313 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x1C0DE051 GT PUSH2 0x1EF JUMPI DUP1 PUSH4 0x1C0DE051 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x1DD746EA EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2DD JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x274 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x229 PUSH2 0x48B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x3B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x252 PUSH2 0x24D CALLDATASIZE PUSH1 0x4 PUSH2 0x34E5 JUMP JUMPDEST PUSH2 0x521 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x3A90 JUMP JUMPDEST PUSH2 0x272 PUSH2 0x26D CALLDATASIZE PUSH1 0x4 PUSH2 0x35DB JUMP JUMPDEST PUSH2 0x538 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27C PUSH2 0x54C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x3AB3 JUMP JUMPDEST PUSH2 0x291 PUSH2 0x552 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3A9B JUMP JUMPDEST PUSH2 0x2A8 PUSH2 0x57B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x3A58 JUMP JUMPDEST PUSH2 0x252 PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3430 JUMP JUMPDEST PUSH2 0x58A JUMP JUMPDEST PUSH2 0x2D0 PUSH2 0x600 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x3BDB JUMP JUMPDEST PUSH2 0x27C PUSH2 0x609 JUMP JUMPDEST PUSH2 0x272 PUSH2 0x2F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x390C JUMP JUMPDEST PUSH2 0x613 JUMP JUMPDEST PUSH2 0x27C PUSH2 0x62C JUMP JUMPDEST PUSH2 0x252 PUSH2 0x30E CALLDATASIZE PUSH1 0x4 PUSH2 0x34E5 JUMP JUMPDEST PUSH2 0x650 JUMP JUMPDEST PUSH2 0x31B PUSH2 0x68B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x3A44 JUMP JUMPDEST PUSH2 0x272 PUSH2 0x336 CALLDATASIZE PUSH1 0x4 PUSH2 0x3737 JUMP JUMPDEST PUSH2 0x69A JUMP JUMPDEST PUSH2 0x27C PUSH2 0x6B8 JUMP JUMPDEST PUSH2 0x356 PUSH2 0x351 CALLDATASIZE PUSH1 0x4 PUSH2 0x3613 JUMP JUMPDEST PUSH2 0x6C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP3 SWAP2 SWAP1 PUSH2 0x3BC2 JUMP JUMPDEST PUSH2 0x27C PUSH2 0x700 JUMP JUMPDEST PUSH2 0x27C PUSH2 0x37A CALLDATASIZE PUSH1 0x4 PUSH2 0x33C0 JUMP JUMPDEST PUSH2 0x72B JUMP JUMPDEST PUSH2 0x392 PUSH2 0x38D CALLDATASIZE PUSH1 0x4 PUSH2 0x3613 JUMP JUMPDEST PUSH2 0x74A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP3 SWAP2 SWAP1 PUSH2 0x3A6B JUMP JUMPDEST PUSH2 0x27C PUSH2 0x3AE CALLDATASIZE PUSH1 0x4 PUSH2 0x33C0 JUMP JUMPDEST PUSH2 0x7ED JUMP JUMPDEST PUSH2 0x27C PUSH2 0x3C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x370F JUMP JUMPDEST PUSH2 0x808 JUMP JUMPDEST PUSH2 0x356 PUSH2 0x3D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3613 JUMP JUMPDEST PUSH2 0x85A JUMP JUMPDEST PUSH2 0x31B PUSH2 0x880 JUMP JUMPDEST PUSH2 0x31B PUSH2 0x8A4 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x8C8 JUMP JUMPDEST PUSH2 0x27C PUSH2 0x929 JUMP JUMPDEST PUSH2 0x27C PUSH2 0x407 CALLDATASIZE PUSH1 0x4 PUSH2 0x3811 JUMP JUMPDEST PUSH2 0x92F JUMP JUMPDEST PUSH2 0x252 PUSH2 0x41A CALLDATASIZE PUSH1 0x4 PUSH2 0x34E5 JUMP JUMPDEST PUSH2 0xA8D JUMP JUMPDEST PUSH2 0x252 PUSH2 0x42D CALLDATASIZE PUSH1 0x4 PUSH2 0x34E5 JUMP JUMPDEST PUSH2 0xACB JUMP JUMPDEST PUSH2 0x31B PUSH2 0xAD8 JUMP JUMPDEST PUSH2 0x27C PUSH2 0xAE2 JUMP JUMPDEST PUSH2 0x272 PUSH2 0x450 CALLDATASIZE PUSH1 0x4 PUSH2 0x3470 JUMP JUMPDEST PUSH2 0xAEC JUMP JUMPDEST PUSH2 0x392 PUSH2 0x463 CALLDATASIZE PUSH1 0x4 PUSH2 0x3613 JUMP JUMPDEST PUSH2 0xC35 JUMP JUMPDEST PUSH2 0x27C PUSH2 0xD65 JUMP JUMPDEST PUSH2 0x27C PUSH2 0x47E CALLDATASIZE PUSH1 0x4 PUSH2 0x33F8 JUMP JUMPDEST PUSH2 0xD89 JUMP JUMPDEST PUSH2 0x2A8 PUSH2 0xDC6 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x517 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4EC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x517 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4FA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52E CALLER DUP5 DUP5 PUSH2 0xE05 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x540 PUSH2 0xE6D JUMP JUMPDEST PUSH2 0x549 DUP2 PUSH2 0xE9B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x55F PUSH2 0xF19 JUMP JUMPDEST ISZERO SWAP3 POP PUSH2 0x56A PUSH2 0xF36 JUMP JUMPDEST SWAP2 POP PUSH2 0x574 PUSH2 0xF5A JUMP JUMPDEST SWAP1 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x585 PUSH2 0xF7E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x597 DUP6 CALLER PUSH2 0xD89 JUMP JUMPDEST SWAP1 POP PUSH2 0x5BB CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND EQ DUP1 PUSH2 0x5B3 JUMPI POP DUP4 DUP3 LT ISZERO JUMPDEST PUSH2 0x19E PUSH2 0x1084 JUMP JUMPDEST PUSH2 0x5C6 DUP6 DUP6 DUP6 PUSH2 0x1092 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x5E1 JUMPI POP PUSH1 0x0 NOT DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x5F3 JUMPI PUSH2 0x5F3 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0xE05 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x585 PUSH2 0x1172 JUMP JUMPDEST PUSH2 0x61B PUSH2 0xE6D JUMP JUMPDEST PUSH2 0x623 PUSH2 0x120F JUMP JUMPDEST PUSH2 0x549 DUP2 PUSH2 0x1224 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x52E SWAP2 DUP6 SWAP1 PUSH2 0x686 SWAP1 DUP7 PUSH2 0x128F JUMP JUMPDEST PUSH2 0xE05 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x6A2 PUSH2 0xE6D JUMP JUMPDEST PUSH2 0x6AA PUSH2 0x120F JUMP JUMPDEST PUSH2 0x6B4 DUP3 DUP3 PUSH2 0x12A1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x585 SWAP1 PUSH1 0xC0 PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x6DF DUP7 MLOAD PUSH2 0x6DA PUSH2 0x13AD JUMP JUMPDEST PUSH2 0x13B2 JUMP JUMPDEST PUSH2 0x6F4 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x13BF PUSH2 0x1483 PUSH2 0x14E9 JUMP JUMPDEST SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x585 PUSH2 0x70D PUSH2 0x54C JUMP JUMPDEST PUSH2 0x725 PUSH2 0x718 PUSH2 0xAE2 JUMP JUMPDEST PUSH2 0x720 PUSH2 0x13AD JUMP JUMPDEST PUSH2 0x160C JUMP JUMPDEST SWAP1 PUSH2 0x1630 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP9 PUSH2 0x774 PUSH2 0x759 PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH1 0xCD PUSH2 0x1084 JUMP JUMPDEST PUSH2 0x789 PUSH2 0x77F PUSH2 0x62C JUMP JUMPDEST DUP3 EQ PUSH2 0x1F4 PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x793 PUSH2 0xF7E JUMP JUMPDEST SWAP1 POP PUSH2 0x79F DUP9 DUP3 PUSH2 0x166F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH2 0x7B4 DUP15 DUP15 DUP15 DUP15 DUP15 DUP15 DUP11 DUP16 PUSH2 0x13BF JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x7C4 DUP14 DUP5 PUSH2 0x16D0 JUMP JUMPDEST PUSH2 0x7CE DUP3 DUP6 PUSH2 0x1483 JUMP JUMPDEST PUSH2 0x7D8 DUP2 DUP6 PUSH2 0x1483 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP POP JUMPDEST POP SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x83D SWAP3 SWAP2 SWAP1 PUSH2 0x3A01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x86B DUP7 MLOAD PUSH2 0x6DA PUSH2 0x13AD JUMP JUMPDEST PUSH2 0x6F4 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x16DA PUSH2 0x1775 PUSH2 0x14E9 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x517 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4EC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x517 JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0x941 PUSH2 0x759 PUSH2 0x8A4 JUMP JUMPDEST PUSH2 0x94C PUSH2 0x77F PUSH2 0x62C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x95B DUP7 PUSH1 0x20 ADD MLOAD PUSH2 0x17D6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x96C DUP8 PUSH1 0x40 ADD MLOAD PUSH2 0x17D6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP8 MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x97D JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xA0D JUMPI PUSH1 0x0 PUSH2 0x992 DUP9 PUSH1 0x60 ADD MLOAD PUSH2 0x1906 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP10 PUSH1 0x60 ADD MLOAD SUB SWAP1 POP PUSH2 0x9B6 DUP10 PUSH1 0x20 ADD MLOAD PUSH2 0x9B1 DUP4 DUP8 PUSH2 0x1927 JUMP JUMPDEST PUSH2 0x1933 JUMP JUMPDEST PUSH1 0x60 DUP10 ADD DUP3 SWAP1 MSTORE PUSH2 0x9C7 DUP9 DUP6 PUSH2 0x1927 JUMP JUMPDEST SWAP8 POP PUSH2 0x9D3 DUP8 DUP5 PUSH2 0x1927 JUMP JUMPDEST SWAP7 POP PUSH2 0x9E3 DUP10 PUSH1 0x60 ADD MLOAD DUP6 PUSH2 0x1927 JUMP JUMPDEST PUSH1 0x60 DUP11 ADD MSTORE PUSH1 0x0 PUSH2 0x9F5 DUP11 DUP11 DUP11 PUSH2 0x1945 JUMP JUMPDEST SWAP1 POP PUSH2 0xA01 DUP2 DUP6 PUSH2 0x1970 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP PUSH2 0xA85 JUMP JUMPDEST PUSH2 0xA17 DUP7 DUP4 PUSH2 0x1927 JUMP JUMPDEST SWAP6 POP PUSH2 0xA23 DUP6 DUP3 PUSH2 0x1927 JUMP JUMPDEST SWAP5 POP PUSH2 0xA33 DUP8 PUSH1 0x60 ADD MLOAD DUP3 PUSH2 0x1927 JUMP JUMPDEST PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0x0 PUSH2 0xA45 DUP9 DUP9 DUP9 PUSH2 0x197C JUMP JUMPDEST SWAP1 POP PUSH2 0xA51 DUP2 DUP5 PUSH2 0x199E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA5E DUP3 PUSH2 0x19AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 DUP3 SUB SWAP1 POP PUSH2 0xA79 DUP11 PUSH1 0x20 ADD MLOAD PUSH2 0x9B1 DUP4 DUP9 PUSH2 0x1927 JUMP JUMPDEST POP SWAP5 POP PUSH2 0xA85 SWAP3 POP POP POP JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA9A CALLER DUP6 PUSH2 0xD89 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 LT PUSH2 0xAB4 JUMPI PUSH2 0xAAF CALLER DUP6 PUSH1 0x0 PUSH2 0xE05 JUMP JUMPDEST PUSH2 0xAC1 JUMP JUMPDEST PUSH2 0xAC1 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0xE05 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52E CALLER DUP5 DUP5 PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x585 PUSH2 0x19D0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x585 PUSH2 0x1A4A JUMP JUMPDEST PUSH2 0xAFA DUP5 TIMESTAMP GT ISZERO PUSH1 0xD1 PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 SWAP3 SWAP2 PUSH2 0xB51 SWAP2 PUSH32 0x0 SWAP2 DUP13 SWAP2 DUP13 SWAP2 DUP13 SWAP2 DUP9 SWAP2 DUP14 SWAP2 ADD PUSH2 0x3ADB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xB74 DUP3 PUSH2 0x1B21 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xB9B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B6B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBBD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP PUSH2 0xBFF SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xBF7 JUMPI POP DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1F8 PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP6 ADD SWAP1 SSTORE PUSH2 0xC28 DUP12 DUP12 DUP12 PUSH2 0xE05 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP9 PUSH2 0xC44 PUSH2 0x759 PUSH2 0x8A4 JUMP JUMPDEST PUSH2 0xC4F PUSH2 0x77F PUSH2 0x62C JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC59 PUSH2 0xF7E JUMP JUMPDEST SWAP1 POP PUSH2 0xC63 PUSH2 0x54C JUMP JUMPDEST PUSH2 0xD15 JUMPI PUSH1 0x0 PUSH1 0x60 PUSH2 0xC78 DUP14 DUP14 DUP14 DUP7 DUP12 PUSH2 0x1B3D JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xC91 PUSH2 0xC87 PUSH2 0x1BE4 JUMP JUMPDEST DUP4 LT ISZERO PUSH1 0xCC PUSH2 0x1084 JUMP JUMPDEST PUSH2 0xCA3 PUSH1 0x0 PUSH2 0xC9E PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0x1BEB JUMP JUMPDEST PUSH2 0xCB6 DUP12 PUSH2 0xCAF PUSH2 0x1BE4 JUMP JUMPDEST DUP5 SUB PUSH2 0x1BEB JUMP JUMPDEST PUSH2 0xCC0 DUP2 DUP5 PUSH2 0x1775 JUMP JUMPDEST DUP1 PUSH2 0xCC9 PUSH2 0x13AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0xCDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD08 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x7E0 JUMP JUMPDEST PUSH2 0xD1F DUP9 DUP3 PUSH2 0x166F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH2 0xD34 DUP15 DUP15 DUP15 DUP15 DUP15 DUP15 DUP11 DUP16 PUSH2 0x16DA JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xD44 DUP13 DUP5 PUSH2 0x1BEB JUMP JUMPDEST PUSH2 0xD4E DUP3 DUP6 PUSH2 0x1775 JUMP JUMPDEST PUSH2 0xD58 DUP2 DUP6 PUSH2 0x1483 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP PUSH2 0x7E0 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD93 PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xDB5 JUMPI POP PUSH1 0x0 NOT PUSH2 0x532 JUMP JUMPDEST PUSH2 0xDBF DUP4 DUP4 PUSH2 0x1BF5 JUMP JUMPDEST SWAP1 POP PUSH2 0x532 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x585 PUSH2 0x1C20 JUMP JUMPDEST DUP1 PUSH2 0x6B4 DUP2 PUSH2 0x1CB6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 SHL NOT SWAP3 SWAP1 SWAP3 AND SWAP2 SHL OR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDFF DUP4 DUP4 GT ISZERO PUSH1 0x1 PUSH2 0x1084 JUMP JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0xE60 SWAP1 DUP6 SWAP1 PUSH2 0x3AB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE84 PUSH1 0x0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x808 JUMP JUMPDEST SWAP1 POP PUSH2 0x549 PUSH2 0xE93 DUP3 CALLER PUSH2 0x1D2F JUMP JUMPDEST PUSH2 0x191 PUSH2 0x1084 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEBB JUMPI PUSH2 0xEB6 PUSH2 0xEAC PUSH2 0xF36 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x193 PUSH2 0x1084 JUMP JUMPDEST PUSH2 0xED0 JUMP JUMPDEST PUSH2 0xED0 PUSH2 0xEC6 PUSH2 0xF5A JUMP JUMPDEST TIMESTAMP LT PUSH2 0x1A9 PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO ISZERO OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x9E3A5E37224532DEA67B89FACE185703738A228A6E8A23DEE546960180D3BE64 SWAP1 PUSH2 0xF0E SWAP1 DUP4 SWAP1 PUSH2 0x3A90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF23 PUSH2 0xF5A JUMP JUMPDEST TIMESTAMP GT DUP1 PUSH2 0x585 JUMPI POP POP PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xF8A PUSH2 0x13AD JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0xFA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFCE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xFFF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH32 0x0 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1039 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH32 0x0 DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x1073 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH2 0x6B4 JUMPI PUSH2 0x6B4 DUP2 PUSH2 0x1E18 JUMP JUMPDEST PUSH2 0x10A9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO ISZERO PUSH2 0x198 PUSH2 0x1084 JUMP JUMPDEST PUSH2 0x10C0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x199 PUSH2 0x1084 JUMP JUMPDEST PUSH2 0x10CB DUP4 DUP4 DUP4 PUSH2 0x14E4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x10F1 SWAP1 DUP3 PUSH2 0x1A0 PUSH2 0x1E6B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1120 SWAP1 DUP3 PUSH2 0x128F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0xE60 SWAP1 DUP6 SWAP1 PUSH2 0x3AB3 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x11DF PUSH2 0x1E81 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x11F4 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B0F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1222 PUSH2 0x121A PUSH2 0xF19 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x1084 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1237 PUSH5 0xE8D4A51000 DUP3 LT ISZERO PUSH1 0xCB PUSH2 0x1084 JUMP JUMPDEST PUSH2 0x124D PUSH8 0x16345785D8A0000 DUP3 GT ISZERO PUSH1 0xCA PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x125C SWAP1 DUP3 PUSH1 0xC0 PUSH2 0xDDA JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x40 MLOAD PUSH32 0xA9BA3FFE0B6C366B81232CAAB38605A0699AD5398D6CCE76F91EE809E322DAFC SWAP1 PUSH2 0xF0E SWAP1 DUP4 SWAP1 PUSH2 0x3AB3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH2 0x5F9 DUP5 DUP3 LT ISZERO DUP4 PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12AB PUSH2 0x62C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x12B7 PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB05F8E48 DUP4 DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B54 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1310 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1334 SWAP2 SWAP1 PUSH2 0x393C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x639CDB5 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP4 POP PUSH4 0x18E736D4 SWAP3 POP PUSH2 0x1368 SWAP2 POP DUP6 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x3B3B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1396 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x3 SWAP1 JUMP JUMPDEST PUSH2 0x6B4 DUP2 DUP4 EQ PUSH1 0x67 PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH32 0x0 PUSH2 0x13ED PUSH2 0xF19 JUMP JUMPDEST ISZERO PUSH2 0x1435 JUMPI PUSH1 0x0 PUSH2 0x13FE DUP11 DUP4 PUSH2 0x1E85 JUMP JUMPDEST SWAP1 POP PUSH2 0x1409 DUP2 PUSH2 0x1EB7 JUMP JUMPDEST PUSH2 0x1413 DUP11 DUP8 PUSH2 0x1EE4 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP PUSH2 0x142C DUP2 DUP7 PUSH2 0x1425 PUSH2 0x54C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F31 JUMP JUMPDEST PUSH1 0x9 SSTORE POP PUSH2 0x144B JUMP JUMPDEST PUSH2 0x143F DUP10 DUP7 PUSH2 0x1EE4 JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0x9 SSTORE SWAP1 SWAP5 POP SWAP3 POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE DUP6 SWAP2 DUP6 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x60 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP9 POP SWAP9 POP SWAP9 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH2 0x148E PUSH2 0x13AD JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x14E4 JUMPI PUSH2 0x14C5 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x14A4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x14B8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1630 JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x14D1 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x1486 JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x15A7 JUMPI PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD PUSH2 0x150D SWAP3 SWAP2 SWAP1 PUSH2 0x3A19 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x154A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x154F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x155E JUMPI INVALID JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x43ADBAFB PUSH1 0xE0 SHL DUP2 EQ PUSH2 0x1589 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x4 PUSH1 0x0 RETURNDATACOPY PUSH1 0x40 PUSH1 0x20 MSTORE PUSH1 0x24 RETURNDATASIZE SUB PUSH1 0x24 PUSH1 0x40 RETURNDATACOPY PUSH1 0x1C RETURNDATASIZE ADD PUSH1 0x0 RETURN JUMPDEST PUSH1 0x60 PUSH2 0x15B1 PUSH2 0xF7E JUMP JUMPDEST SWAP1 POP PUSH2 0x15BD DUP8 DUP3 PUSH2 0x166F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x15D5 DUP13 DUP13 DUP13 DUP13 DUP13 DUP13 DUP10 DUP14 DUP14 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x15E8 DUP2 DUP5 DUP7 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1F NOT DUP3 ADD DUP4 SWAP1 MSTORE PUSH4 0x43ADBAFB PUSH1 0x3F NOT DUP4 ADD MSTORE PUSH1 0x20 MUL PUSH1 0x23 NOT DUP3 ADD PUSH1 0x44 DUP3 ADD DUP2 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL PUSH2 0x5F9 DUP5 ISZERO DUP1 PUSH2 0x1629 JUMPI POP DUP4 DUP6 DUP4 DUP2 PUSH2 0x1626 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH1 0x3 PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x163C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 DUP2 MUL SWAP1 DUP5 DUP3 DUP2 PUSH2 0x1652 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x165D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP2 DUP2 PUSH2 0x1666 JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH2 0x167A PUSH2 0x13AD JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x14E4 JUMPI PUSH2 0x16B1 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1690 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x16A4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1F8B JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x16BD JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x1672 JUMP JUMPDEST PUSH2 0x6B4 DUP3 DUP3 PUSH2 0x1FB4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH32 0x0 DUP4 PUSH2 0x170B DUP11 DUP4 PUSH2 0x1E85 JUMP JUMPDEST SWAP1 POP PUSH2 0x1716 DUP2 PUSH2 0x1EB7 JUMP JUMPDEST PUSH2 0x1720 DUP11 DUP8 PUSH2 0x2070 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP PUSH2 0x1739 DUP2 DUP7 PUSH2 0x1732 PUSH2 0x54C JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1F31 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE DUP7 SWAP2 DUP7 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x60 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP5 POP SWAP5 POP SWAP5 POP POP POP SWAP9 POP SWAP9 POP SWAP9 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH2 0x1780 PUSH2 0x13AD JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x14E4 JUMPI PUSH2 0x17B7 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1796 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x17AA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x20B4 JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x17C3 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x1778 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1839 JUMPI POP PUSH32 0x0 PUSH2 0x745 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x189A JUMPI POP PUSH32 0x0 PUSH2 0x745 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x18FB JUMPI POP PUSH32 0x0 PUSH2 0x745 JUMP JUMPDEST PUSH2 0x745 PUSH2 0x135 PUSH2 0x1E18 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x191B PUSH2 0x1914 PUSH2 0x6B8 JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x210B JUMP JUMPDEST SWAP1 POP PUSH2 0x5F9 DUP4 DUP3 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F9 DUP4 DUP4 PUSH2 0x1F8B JUMP JUMPDEST PUSH2 0x6B4 PUSH2 0x193F DUP4 PUSH2 0x2147 JUMP JUMPDEST DUP3 PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x194F PUSH2 0x120F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1959 PUSH2 0x214D JUMP JUMPDEST SWAP1 POP PUSH2 0x1967 DUP6 DUP6 DUP6 DUP5 PUSH2 0x2230 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F9 DUP4 DUP4 PUSH2 0x1630 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1986 PUSH2 0x120F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1990 PUSH2 0x214D JUMP JUMPDEST SWAP1 POP PUSH2 0x1967 DUP6 DUP6 DUP6 DUP5 PUSH2 0x2242 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F9 DUP4 DUP4 PUSH2 0x20B4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x532 PUSH2 0x19C9 PUSH2 0x19BA PUSH2 0x6B8 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0xDEF JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x20B4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19DA PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAAABADC5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A26 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x585 SWAP2 SWAP1 PUSH2 0x33DC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x1A56 PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF94D4668 PUSH2 0x1A6C PUSH2 0x62C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A88 SWAP2 SWAP1 PUSH2 0x3AB3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1AA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AB4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1ADC SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3510 JUMP JUMPDEST POP SWAP2 POP POP PUSH2 0x1AF1 DUP2 PUSH2 0x1AEC PUSH2 0xF7E JUMP JUMPDEST PUSH2 0x166F JUMP JUMPDEST PUSH2 0x1B1B DUP2 PUSH32 0x0 PUSH2 0x1E85 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B2B PUSH2 0x1172 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x83D SWAP3 SWAP2 SWAP1 PUSH2 0x3A29 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x1B49 PUSH2 0x120F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B54 DUP5 PUSH2 0x2254 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B6F PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1B67 JUMPI INVALID JUMPDEST EQ PUSH1 0xCE PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1B7A DUP6 PUSH2 0x226A JUMP JUMPDEST SWAP1 POP PUSH2 0x1B88 DUP2 MLOAD PUSH1 0x3 PUSH2 0x13B2 JUMP JUMPDEST PUSH2 0x1B92 DUP2 DUP8 PUSH2 0x166F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BBE DUP3 PUSH32 0x0 PUSH2 0x1E85 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1BCD DUP3 PUSH1 0x3 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x9 SWAP3 SWAP1 SWAP3 SSTORE POP SWAP4 POP SWAP2 POP POP JUMPDEST SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH3 0xF4240 SWAP1 JUMP JUMPDEST PUSH2 0x6B4 DUP3 DUP3 PUSH2 0x2280 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP4 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x3 PUSH8 0xDE0B6B3A7640000 DIV DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1C5E JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x3 PUSH8 0xDE0B6B3A7640000 DIV DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1C82 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x3 PUSH8 0xDE0B6B3A7640000 DIV DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x1CA6 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD LT ISZERO PUSH2 0x1CC5 JUMPI PUSH2 0x549 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1CD4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x14E4 JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1CFC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x1D25 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH1 0x65 PUSH2 0x1084 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xBA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1B PUSH2 0x1D4E PUSH2 0x880 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1D69 JUMPI POP PUSH2 0x1D69 DUP4 PUSH2 0x230E JUMP JUMPDEST ISZERO PUSH2 0x1D91 JUMPI PUSH2 0x1D76 PUSH2 0x880 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP PUSH2 0x532 JUMP JUMPDEST PUSH2 0x1D99 PUSH2 0x19D0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9BE2A884 DUP5 DUP5 ADDRESS PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DC8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3ABC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DF4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDBF SWAP2 SWAP1 PUSH2 0x35F7 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH7 0x42414C23000030 PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD SWAP1 SWAP5 ADD PUSH1 0x10 SHL SWAP4 SWAP1 SWAP4 ADD ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E7A DUP5 DUP5 GT ISZERO DUP4 PUSH2 0x1084 JUMP JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1E97 DUP8 DUP8 PUSH2 0x2340 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH2 0x1EAC DUP5 DUP5 DUP5 DUP5 DUP11 PUSH2 0x24B0 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1EC9 PUSH1 0x9 SLOAD DUP7 PUSH2 0x24D8 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH2 0x1EDD DUP5 DUP5 DUP5 DUP5 PUSH2 0x2541 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x1EF3 DUP5 PUSH2 0x2254 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1F03 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1F1D JUMPI PUSH2 0x1F13 DUP6 DUP6 PUSH2 0x2567 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP PUSH2 0x1F2A JUMP JUMPDEST PUSH2 0x1F28 PUSH2 0x150 PUSH2 0x1E18 JUMP JUMPDEST POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO PUSH2 0x1F63 JUMPI PUSH1 0x0 PUSH2 0x1F4F DUP5 PUSH2 0x1F49 DUP9 DUP9 PUSH2 0x210B JUMP JUMPDEST SWAP1 PUSH2 0x20B4 JUMP JUMPDEST SWAP1 POP PUSH2 0x1F5B DUP7 DUP3 PUSH2 0x128F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1F83 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F73 DUP5 PUSH2 0x725 DUP9 DUP9 PUSH2 0x1F8B JUMP JUMPDEST SWAP1 POP PUSH2 0x1F7F DUP7 DUP3 PUSH2 0xDEF JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL PUSH2 0x1FA5 DUP5 ISZERO DUP1 PUSH2 0x1629 JUMPI POP DUP4 DUP6 DUP4 DUP2 PUSH2 0x1626 JUMPI INVALID JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x1666 JUMP JUMPDEST PUSH2 0x1FCB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x19B PUSH2 0x1084 JUMP JUMPDEST PUSH2 0x1FD7 DUP3 PUSH1 0x0 DUP4 PUSH2 0x14E4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1FFD SWAP1 DUP3 PUSH2 0x1A1 PUSH2 0x1E6B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x2023 SWAP1 DUP3 PUSH2 0x2599 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x2064 SWAP1 DUP6 SWAP1 PUSH2 0x3AB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x207F DUP5 PUSH2 0x2254 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x208F JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x20A9 JUMPI PUSH2 0x209F DUP6 DUP6 PUSH2 0x25A7 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH2 0x1F28 JUMP JUMPDEST PUSH2 0x1F28 PUSH2 0x136 PUSH2 0x1E18 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20C3 DUP3 ISZERO ISZERO PUSH1 0x4 PUSH2 0x1084 JUMP JUMPDEST DUP3 PUSH2 0x20D0 JUMPI POP PUSH1 0x0 PUSH2 0x532 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 DUP2 MUL SWAP1 PUSH2 0x20F3 SWAP1 DUP6 DUP4 DUP2 PUSH2 0x20EA JUMPI INVALID JUMPDEST DIV EQ PUSH1 0x5 PUSH2 0x1084 JUMP JUMPDEST DUP3 PUSH1 0x1 DUP3 SUB DUP2 PUSH2 0x20FF JUMPI INVALID JUMPDEST DIV PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x532 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL PUSH2 0x2125 DUP5 ISZERO DUP1 PUSH2 0x1629 JUMPI POP DUP4 DUP6 DUP4 DUP2 PUSH2 0x1626 JUMPI INVALID JUMPDEST DUP1 PUSH2 0x2134 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x532 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH1 0x0 NOT DUP3 ADD PUSH2 0x20FF JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x2159 PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF94D4668 PUSH2 0x216F PUSH2 0x62C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x218B SWAP2 SWAP1 PUSH2 0x3AB3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x21DF SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3510 JUMP JUMPDEST POP SWAP2 POP POP PUSH2 0x21EF DUP2 PUSH2 0x1AEC PUSH2 0xF7E JUMP JUMPDEST PUSH32 0x0 PUSH1 0x0 PUSH2 0x221C DUP4 DUP4 PUSH2 0x1E85 JUMP JUMPDEST SWAP1 POP PUSH2 0x2228 DUP2 DUP4 PUSH2 0x1F8B JUMP JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1967 DUP5 DUP5 DUP8 PUSH1 0x60 ADD MLOAD DUP6 PUSH2 0x25CC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1967 DUP5 DUP5 DUP8 PUSH1 0x60 ADD MLOAD DUP6 PUSH2 0x2664 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x532 SWAP2 SWAP1 PUSH2 0x3784 JUMP JUMPDEST PUSH1 0x60 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x5F9 SWAP2 SWAP1 PUSH2 0x37CD JUMP JUMPDEST PUSH2 0x228C PUSH1 0x0 DUP4 DUP4 PUSH2 0x14E4 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x2299 SWAP1 DUP3 PUSH2 0x128F JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x22BF SWAP1 DUP3 PUSH2 0x128F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x2064 SWAP1 DUP6 SWAP1 PUSH2 0x3AB3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2320 PUSH4 0x1C74C917 PUSH1 0xE1 SHL PUSH2 0x808 JUMP JUMPDEST DUP3 EQ DUP1 PUSH2 0x532 JUMPI POP PUSH2 0x2338 PUSH4 0x50DD6ED9 PUSH1 0xE0 SHL PUSH2 0x808 JUMP JUMPDEST SWAP1 SWAP2 EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x235C PUSH2 0x19BA DUP7 PUSH2 0x2356 DUP2 DUP1 PUSH2 0x1F8B JUMP JUMPDEST SWAP1 PUSH2 0x1F8B JUMP JUMPDEST SWAP4 POP PUSH1 0x0 PUSH2 0x23B9 DUP8 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x2370 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x23B3 DUP10 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2388 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP11 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x239D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x128F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x128F JUMP JUMPDEST SWAP1 POP PUSH2 0x23C9 DUP7 PUSH2 0x2356 DUP4 DUP3 PUSH2 0x1F8B JUMP JUMPDEST SWAP4 POP PUSH1 0x0 PUSH2 0x2458 PUSH2 0x240B DUP10 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x23E0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP11 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x23F5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1F8B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x23B3 PUSH2 0x2433 DUP12 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x241E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP13 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x23F5 JUMPI INVALID JUMPDEST PUSH2 0x23B3 DUP13 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2443 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP14 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x23F5 JUMPI INVALID JUMPDEST SWAP1 POP PUSH2 0x2464 DUP2 DUP9 PUSH2 0x1F8B JUMP JUMPDEST SWAP4 POP PUSH2 0x24A3 DUP9 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x2476 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2356 DUP11 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x248E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP12 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x23F5 JUMPI INVALID JUMPDEST SWAP3 POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24BE DUP7 DUP7 DUP7 DUP7 PUSH2 0x26F5 JUMP JUMPDEST SWAP1 POP PUSH2 0x24CE DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x27AB JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x24EC PUSH2 0x286E JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP DUP4 PUSH1 0x0 EQ ISZERO PUSH2 0x2511 JUMPI PUSH1 0x0 SWAP8 POP DUP8 SWAP7 POP SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x2538 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2528 DUP13 DUP13 PUSH2 0x2521 PUSH2 0x54C JUMP JUMPDEST DUP10 DUP10 PUSH2 0x2ADD JUMP JUMPDEST SWAP1 SWAP11 POP SWAP9 POP SWAP3 SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP JUMPDEST SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST DUP4 ISZERO PUSH2 0x2551 JUMPI PUSH2 0x2551 DUP3 DUP6 PUSH2 0x1BEB JUMP JUMPDEST DUP3 ISZERO PUSH2 0x2561 JUMPI PUSH2 0x2561 DUP2 DUP5 PUSH2 0x1BEB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x2576 DUP5 PUSH2 0x2B70 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x258C DUP7 DUP4 PUSH2 0x2587 PUSH2 0x54C JUMP JUMPDEST PUSH2 0x2B86 JUMP JUMPDEST SWAP2 SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F9 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1E6B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x25B6 DUP5 PUSH2 0x2B70 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x258C DUP7 DUP4 PUSH2 0x25C7 PUSH2 0x54C JUMP JUMPDEST PUSH2 0x2C21 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25EE PUSH2 0x25E3 DUP7 PUSH8 0x429D069189E0000 PUSH2 0x1F8B JUMP JUMPDEST DUP5 GT ISZERO PUSH2 0x130 PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x260C PUSH2 0x2605 DUP5 PUSH8 0xDE0B6B3A7640002 PUSH2 0x210B JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x128F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2625 PUSH2 0x2605 DUP6 PUSH8 0xDE0B6B3A763FFFF PUSH2 0x1F8B JUMP JUMPDEST SWAP1 POP PUSH2 0x263E PUSH2 0x2634 DUP4 DUP8 PUSH2 0x128F JUMP JUMPDEST PUSH2 0x725 DUP4 DUP9 PUSH2 0x1F8B JUMP JUMPDEST SWAP3 POP PUSH2 0x1F83 SWAP2 POP PUSH2 0x2659 SWAP1 POP DUP6 PUSH8 0x429D069189E0000 PUSH2 0x1F8B JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x131 PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2686 PUSH2 0x267B DUP6 PUSH8 0x429D069189E0000 PUSH2 0x1F8B JUMP JUMPDEST DUP5 GT ISZERO PUSH2 0x131 PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x269D PUSH2 0x2605 DUP5 PUSH8 0xDE0B6B3A7640002 PUSH2 0x210B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x26B6 PUSH2 0x2605 DUP6 PUSH8 0xDE0B6B3A763FFFF PUSH2 0x1F8B JUMP JUMPDEST SWAP1 POP PUSH2 0x26CF PUSH2 0x26C5 DUP3 DUP8 PUSH2 0xDEF JUMP JUMPDEST PUSH2 0x1F49 DUP5 DUP9 PUSH2 0x210B JUMP JUMPDEST SWAP3 POP PUSH2 0x1F83 SWAP2 POP PUSH2 0x26EA SWAP1 POP DUP7 PUSH8 0x429D069189E0000 PUSH2 0x1F8B JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x130 PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2721 PUSH2 0x2717 PUSH8 0x29A2241AF62C0000 PUSH2 0x2711 DUP10 DUP9 PUSH2 0x210B JUMP JUMPDEST SWAP1 PUSH2 0x210B JUMP JUMPDEST PUSH2 0x23B3 DUP8 DUP1 PUSH2 0x210B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2747 PUSH2 0x273A PUSH1 0x3 DUP10 MUL PUSH2 0x1F49 DUP6 PUSH1 0x5 PUSH2 0x2CC8 JUMP JUMPDEST PUSH2 0x23B3 DUP9 PUSH1 0x3 DUP12 MUL PUSH2 0x20B4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x275D PUSH8 0xDE0B6B3A7640000 DUP10 PUSH2 0xDEF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH8 0x6F05B59D3B20000 DUP3 LT ISZERO PUSH2 0x277F JUMPI PUSH8 0x1BC16D674EC80000 PUSH2 0x2789 JUMP JUMPDEST PUSH8 0x14D1120D7B160000 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 POP PUSH2 0x279E DUP4 DUP3 PUSH2 0x210B JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0xFF DUP2 LT ISZERO PUSH2 0x2857 JUMPI PUSH1 0x0 DUP1 PUSH2 0x27CA DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH2 0x2E3B JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x1 DUP3 GT PUSH2 0x27E2 JUMPI DUP6 SWAP5 POP POP POP POP POP PUSH2 0x24CE JUMP JUMPDEST PUSH1 0x5 DUP4 LT DUP1 ISZERO SWAP1 PUSH2 0x27F0 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x2801 JUMPI DUP6 SWAP5 POP POP POP POP POP PUSH2 0x24CE JUMP JUMPDEST PUSH1 0x5 DUP4 LT DUP1 ISZERO SWAP1 PUSH2 0x2815 JUMPI POP PUSH1 0x8 DUP5 DIV DUP3 LT ISZERO JUMPDEST ISZERO PUSH2 0x2826 JUMPI DUP6 SWAP5 POP POP POP POP POP PUSH2 0x24CE JUMP JUMPDEST DUP2 SWAP4 POP DUP1 ISZERO PUSH2 0x2840 JUMPI PUSH2 0x2839 DUP7 DUP4 PUSH2 0x128F JUMP JUMPDEST SWAP6 POP PUSH2 0x284D JUMP JUMPDEST PUSH2 0x284A DUP7 DUP4 PUSH2 0xDEF JUMP JUMPDEST SWAP6 POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x27B0 JUMP JUMPDEST POP PUSH2 0x2863 PUSH2 0x160 PUSH2 0x1E18 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0xBD02D0F5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xBD02D0F5 SWAP1 PUSH2 0x28C0 SWAP1 PUSH22 0x50524F544F434F4C5F535741505F4645455F50455243 PUSH1 0x50 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0x3AB3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x28D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x28EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2910 SWAP2 SWAP1 PUSH2 0x3924 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0xBD02D0F5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xBD02D0F5 SWAP1 PUSH2 0x2960 SWAP1 PUSH32 0x50524F544F434F4C5F4645455F4759524F5F504F5254494F4E00000000000000 SWAP1 PUSH1 0x4 ADD PUSH2 0x3AB3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2978 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x298C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x29B0 SWAP2 SWAP1 PUSH2 0x3924 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x21F8A721 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x21F8A721 SWAP1 PUSH2 0x29F0 SWAP1 PUSH13 0x4759524F5F5452454153555259 PUSH1 0x98 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0x3AB3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A1C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A40 SWAP2 SWAP1 PUSH2 0x33DC JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x21F8A721 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x21F8A721 SWAP1 PUSH2 0x2A7F SWAP1 PUSH12 0x42414C5F5452454153555259 PUSH1 0xA0 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0x3AB3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2AAB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2ACF SWAP2 SWAP1 PUSH2 0x33DC JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 DUP7 GT PUSH2 0x2AF2 JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x1BDA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B0C DUP6 PUSH2 0x2356 PUSH2 0x2B05 DUP11 DUP13 PUSH2 0xDEF JUMP JUMPDEST DUP10 SWAP1 PUSH2 0x1F8B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2B24 PUSH2 0x2B1D DUP10 DUP12 PUSH2 0xDEF JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x1F8B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2B32 DUP10 DUP4 PUSH2 0xDEF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2B40 DUP5 DUP4 PUSH2 0x1630 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2B4E DUP9 DUP4 PUSH2 0x1F8B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2B5C DUP4 DUP4 PUSH2 0xDEF JUMP JUMPDEST SWAP2 SWAP14 SWAP2 SWAP13 POP SWAP1 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x5F9 SWAP2 SWAP1 PUSH2 0x37A0 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2B94 DUP5 DUP5 PUSH2 0x1630 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x2BAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2BD9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x2C17 JUMPI PUSH2 0x2BF8 DUP4 DUP9 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x23F5 JUMPI INVALID JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2C04 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x2BDF JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2C2F DUP5 DUP5 PUSH2 0x20B4 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x2C4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2C74 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x2C17 JUMPI PUSH2 0x2CA9 DUP4 DUP9 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2C93 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x210B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2CB5 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x2C7A JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2CD7 JUMPI POP PUSH1 0x0 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CE2 DUP5 PUSH2 0x2F20 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x2CF9 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x2D03 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x2D1B JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x2D25 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x2D3D JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x2D47 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x2D5F JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x2D69 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x2D81 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x2D8B JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x2DA3 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x2DAD JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x2DC5 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x2DCF JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH2 0x2DDE DUP3 DUP1 PUSH2 0x1F8B JUMP JUMPDEST SWAP1 POP PUSH2 0x2DF4 PUSH2 0x2DED DUP4 DUP7 PUSH2 0x210B JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x128F JUMP JUMPDEST DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x2E16 JUMPI POP PUSH2 0x2E12 PUSH2 0x2E0B DUP4 DUP7 PUSH2 0x210B JUMP JUMPDEST DUP7 SWAP1 PUSH2 0xDEF JUMP JUMPDEST DUP2 LT ISZERO JUMPDEST PUSH2 0xA85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E32 SWAP1 PUSH2 0x3B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x2E4A DUP6 DUP1 PUSH2 0x1F8B JUMP JUMPDEST SWAP1 POP PUSH2 0x2E57 PUSH1 0x3 DUP3 PUSH2 0x160C JUMP JUMPDEST SWAP2 POP PUSH2 0x2E73 PUSH2 0x2E6C DUP8 PUSH2 0x2356 DUP2 DUP2 DUP8 DUP3 PUSH2 0x1F8B JUMP JUMPDEST DUP4 SWAP1 PUSH2 0xDEF JUMP JUMPDEST SWAP2 POP PUSH2 0x2E98 DUP9 PUSH2 0x2E92 PUSH2 0x2E8B PUSH1 0x2 PUSH2 0x720 DUP11 DUP16 PUSH2 0x1F8B JUMP JUMPDEST DUP6 SWAP1 PUSH2 0xDEF JUMP JUMPDEST SWAP1 PUSH2 0xDEF JUMP JUMPDEST SWAP2 POP POP PUSH1 0x0 PUSH2 0x2EA8 DUP6 DUP8 DUP5 PUSH2 0x3103 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2EBA DUP11 PUSH2 0x2356 DUP9 DUP1 PUSH2 0x1F8B JUMP JUMPDEST SWAP1 POP PUSH2 0x2ED4 DUP4 PUSH2 0x725 PUSH2 0x2ECD DUP10 DUP14 PUSH2 0x1F8B JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x128F JUMP JUMPDEST SWAP1 POP PUSH2 0x2EEA PUSH2 0x2EE3 DUP10 DUP6 PUSH2 0x1630 JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x128F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO SWAP4 POP DUP4 PUSH2 0x2F06 JUMPI PUSH2 0x2F01 DUP3 DUP3 PUSH2 0xDEF JUMP JUMPDEST PUSH2 0x2F10 JUMP JUMPDEST PUSH2 0x2F10 DUP2 DUP4 PUSH2 0xDEF JUMP JUMPDEST SWAP5 POP POP POP POP SWAP7 POP SWAP7 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 LT PUSH2 0x2F4D JUMPI PUSH8 0xDE0B6B3A7640000 PUSH2 0x2F45 DUP2 DUP5 DIV PUSH2 0x321A JUMP JUMPDEST SHL SWAP1 POP PUSH2 0x745 JUMP JUMPDEST PUSH1 0xA DUP3 LT ISZERO PUSH2 0x2F61 JUMPI POP PUSH4 0x12D940B6 PUSH2 0x745 JUMP JUMPDEST PUSH1 0x64 DUP3 LT ISZERO PUSH2 0x2F76 JUMPI POP PUSH5 0x2540BE400 PUSH2 0x745 JUMP JUMPDEST PUSH2 0x3E8 DUP3 LT ISZERO PUSH2 0x2F8C JUMPI POP PUSH5 0x75CDD4719 PUSH2 0x745 JUMP JUMPDEST PUSH2 0x2710 DUP3 LT ISZERO PUSH2 0x2FA2 JUMPI POP PUSH5 0x174876E800 PUSH2 0x745 JUMP JUMPDEST PUSH3 0x186A0 DUP3 LT ISZERO PUSH2 0x2FB9 JUMPI POP PUSH5 0x49A0A4C700 PUSH2 0x745 JUMP JUMPDEST PUSH3 0xF4240 DUP3 LT ISZERO PUSH2 0x2FD0 JUMPI POP PUSH5 0xE8D4A51000 PUSH2 0x745 JUMP JUMPDEST PUSH3 0x989680 DUP3 LT ISZERO PUSH2 0x2FE8 JUMPI POP PUSH6 0x2E0466FC608 PUSH2 0x745 JUMP JUMPDEST PUSH4 0x5F5E100 DUP3 LT ISZERO PUSH2 0x3001 JUMPI POP PUSH6 0x9184E72A000 PUSH2 0x745 JUMP JUMPDEST PUSH4 0x3B9ACA00 DUP3 LT ISZERO PUSH2 0x301A JUMPI POP PUSH6 0x1CC2C05DBC53 PUSH2 0x745 JUMP JUMPDEST PUSH5 0x2540BE400 DUP3 LT ISZERO PUSH2 0x3034 JUMPI POP PUSH6 0x5AF3107A4000 PUSH2 0x745 JUMP JUMPDEST PUSH5 0x174876E800 DUP3 LT ISZERO PUSH2 0x304F JUMPI POP PUSH7 0x11F9B83A95B45 PUSH2 0x745 JUMP JUMPDEST PUSH5 0xE8D4A51000 DUP3 LT ISZERO PUSH2 0x306A JUMPI POP PUSH7 0x38D7EA4C68000 PUSH2 0x745 JUMP JUMPDEST PUSH6 0x9184E72A000 DUP3 LT ISZERO PUSH2 0x3086 JUMPI POP PUSH7 0xB3C13249D90BB PUSH2 0x745 JUMP JUMPDEST PUSH6 0x5AF3107A4000 DUP3 LT ISZERO PUSH2 0x30A2 JUMPI POP PUSH7 0x2386F26FC10000 PUSH2 0x745 JUMP JUMPDEST PUSH7 0x38D7EA4C68000 DUP3 LT ISZERO PUSH2 0x30BF JUMPI POP PUSH7 0x7058BF6E27A751 PUSH2 0x745 JUMP JUMPDEST PUSH7 0x2386F26FC10000 DUP3 LT ISZERO PUSH2 0x30DD JUMPI POP PUSH8 0x16345785D8A0000 PUSH2 0x745 JUMP JUMPDEST PUSH8 0x16345785D8A0000 DUP3 LT ISZERO PUSH2 0x30FC JUMPI POP PUSH8 0x463777A4D8C892D PUSH2 0x745 JUMP JUMPDEST POP DUP1 PUSH2 0x745 JUMP JUMPDEST PUSH1 0x0 PUSH14 0x266AE2FD4D2340B427660000000 DUP5 GT PUSH2 0x3157 JUMPI PUSH2 0x3128 DUP5 PUSH2 0x2356 DUP2 DUP1 PUSH2 0x1F8B JUMP JUMPDEST SWAP1 POP PUSH2 0x3144 PUSH2 0x313D DUP5 PUSH2 0x2356 DUP2 DUP2 DUP7 DUP3 PUSH2 0x1F8B JUMP JUMPDEST DUP3 SWAP1 PUSH2 0xDEF JUMP JUMPDEST SWAP1 POP PUSH2 0x3150 DUP2 DUP4 PUSH2 0x1630 JUMP JUMPDEST SWAP1 POP PUSH2 0x5F9 JUMP JUMPDEST PUSH2 0x3161 DUP5 DUP1 PUSH2 0x1F8B JUMP JUMPDEST SWAP1 POP PUSH2 0x3192 PUSH2 0x317D PUSH8 0xDE0B6B3A7640000 DUP7 JUMPDEST DUP5 SWAP2 SWAP1 MOD PUSH2 0x1F8B JUMP JUMPDEST PUSH2 0x23B3 DUP4 PUSH8 0xDE0B6B3A7640000 DUP9 JUMPDEST DIV PUSH2 0x160C JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x31C2 PUSH2 0x31A6 PUSH4 0x3B9ACA00 DUP7 PUSH2 0x3174 JUMP JUMPDEST PUSH2 0x23B3 PUSH2 0x31B8 DUP5 PUSH4 0x3B9ACA00 DUP10 PUSH2 0x318C JUMP JUMPDEST PUSH4 0x3B9ACA00 PUSH2 0x32B0 JUMP JUMPDEST SWAP1 POP PUSH2 0x31D5 PUSH2 0x31A6 PUSH4 0x3B9ACA00 DUP7 PUSH2 0x3174 JUMP JUMPDEST SWAP1 POP PUSH2 0x31E8 PUSH2 0x31A6 PUSH4 0x3B9ACA00 DUP7 PUSH2 0x3174 JUMP JUMPDEST SWAP1 POP PUSH2 0x31F4 DUP3 DUP3 PUSH2 0xDEF JUMP JUMPDEST SWAP2 POP PUSH2 0x1967 PUSH2 0x3207 DUP4 PUSH4 0x3B9ACA00 PUSH2 0x160C JUMP JUMPDEST PUSH2 0x3215 DUP6 PUSH4 0x3B9ACA00 PUSH2 0x32B0 JUMP JUMPDEST PUSH2 0x32B0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x80 SHL DUP3 LT PUSH2 0x3232 JUMPI PUSH1 0x80 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x40 ADD JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0x324D JUMPI PUSH1 0x40 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0x3264 JUMPI PUSH1 0x20 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x10 ADD JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0x3279 JUMPI PUSH1 0x10 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x8 ADD JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x328D JUMPI PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x4 ADD JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x32A0 JUMPI PUSH1 0x4 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x2 ADD JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0x745 JUMPI PUSH1 0x1 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32BF DUP3 ISZERO ISZERO PUSH1 0x4 PUSH2 0x1084 JUMP JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x32C8 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x532 DUP2 PUSH2 0x3C2E JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x32EB JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x32FE PUSH2 0x32F9 DUP3 PUSH2 0x3C0F JUMP JUMPDEST PUSH2 0x3BE9 JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 POP PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP5 DUP2 ADD DUP2 DUP5 MUL DUP7 ADD DUP3 ADD DUP8 LT ISZERO PUSH2 0x331F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x333E JUMPI DUP2 MLOAD DUP5 MSTORE SWAP3 DUP3 ADD SWAP3 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3322 JUMP JUMPDEST POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3359 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x336E JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x3381 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x3BE9 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x3398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x0 SWAP1 DUP3 ADD PUSH1 0x20 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0x532 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33D1 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5F9 DUP2 PUSH2 0x3C2E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33ED JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x5F9 DUP2 PUSH2 0x3C2E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x340A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3415 DUP2 PUSH2 0x3C2E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3425 DUP2 PUSH2 0x3C2E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3444 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x344F DUP2 PUSH2 0x3C2E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x345F DUP2 PUSH2 0x3C2E JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x348A JUMPI DUP5 DUP6 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x3495 DUP2 PUSH2 0x3C2E JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x34A5 DUP2 PUSH2 0x3C2E JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x34C8 JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x34F7 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3502 DUP2 PUSH2 0x3C2E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3524 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x353A JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x354D JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x355B PUSH2 0x32F9 DUP3 PUSH2 0x3C0F JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP3 POP DUP1 DUP7 ADD DUP12 DUP3 DUP4 DUP8 MUL DUP10 ADD ADD GT ISZERO PUSH2 0x357B JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x35A6 JUMPI DUP1 MLOAD PUSH2 0x3592 DUP2 PUSH2 0x3C2E JUMP JUMPDEST DUP5 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP3 DUP2 ADD SWAP3 DUP2 ADD PUSH2 0x357F JUMP JUMPDEST POP DUP10 ADD MLOAD SWAP1 SWAP8 POP SWAP4 POP POP POP DUP1 DUP3 GT ISZERO PUSH2 0x35BD JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x35CA DUP7 DUP3 DUP8 ADD PUSH2 0x32DB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35EC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5F9 DUP2 PUSH2 0x3C43 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3608 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x5F9 DUP2 PUSH2 0x3C43 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x362D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP8 CALLDATALOAD SWAP7 POP PUSH1 0x20 DUP1 DUP10 ADD CALLDATALOAD PUSH2 0x3640 DUP2 PUSH2 0x3C2E JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x3650 DUP2 PUSH2 0x3C2E JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x366B JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP12 ADD SWAP2 POP DUP12 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x367E JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x368C PUSH2 0x32F9 DUP3 PUSH2 0x3C0F JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP6 DUP3 ADD SWAP2 POP DUP6 DUP6 ADD DUP16 DUP8 DUP9 DUP7 MUL DUP9 ADD ADD GT ISZERO PUSH2 0x36AA JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x36CC JUMPI DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x36AE JUMP JUMPDEST POP SWAP9 POP POP POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP6 POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 DUP12 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x36F2 JUMPI DUP4 DUP5 REVERT JUMPDEST POP POP PUSH2 0x3700 DUP11 DUP3 DUP12 ADD PUSH2 0x3349 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3720 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x5F9 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3749 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3754 DUP2 PUSH2 0x3C2E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x376E JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x377A DUP6 DUP3 DUP7 ADD PUSH2 0x3349 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3795 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x5F9 DUP2 PUSH2 0x3C51 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x37B2 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x37BD DUP2 PUSH2 0x3C51 JUMP JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD MLOAD SWAP3 SWAP5 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x37DF JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x37EA DUP2 PUSH2 0x3C51 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3805 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x377A DUP6 DUP3 DUP7 ADD PUSH2 0x32DB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3825 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x383B JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP PUSH2 0x120 DUP1 DUP4 DUP10 SUB SLT ISZERO PUSH2 0x3851 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x385A DUP2 PUSH2 0x3BE9 JUMP JUMPDEST SWAP1 POP PUSH2 0x3866 DUP9 DUP5 PUSH2 0x33B1 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x3875 DUP9 PUSH1 0x20 DUP6 ADD PUSH2 0x32D0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x3887 DUP9 PUSH1 0x40 DUP6 ADD PUSH2 0x32D0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x38B7 DUP9 PUSH1 0xC0 DUP6 ADD PUSH2 0x32D0 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x38C9 DUP9 PUSH1 0xE0 DUP6 ADD PUSH2 0x32D0 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD CALLDATALOAD DUP4 DUP2 GT ISZERO PUSH2 0x38E1 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH2 0x38ED DUP11 DUP3 DUP8 ADD PUSH2 0x3349 JUMP JUMPDEST SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP8 PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP8 POP PUSH1 0x40 SWAP1 SWAP7 ADD CALLDATALOAD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x391D JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3935 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3951 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 MLOAD SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP6 ADD MLOAD PUSH2 0x3971 DUP2 PUSH2 0x3C2E JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x39AB JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x398F JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x39DB JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x39BF JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x39EC JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x24 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP4 CALLDATACOPY SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x5F9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x397C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0x3A7E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x397C JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1967 DUP2 DUP6 PUSH2 0x397C JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x20 DUP8 ADD MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1F83 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x39B6 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x5F9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x39B6 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x17DCDC5C9D08119052531151 PUSH1 0xA2 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1F83 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x397C JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x3C07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x3C24 JUMPI DUP1 DUP2 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x549 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0x5D 0xBC DUP6 0xD7 PUSH28 0xC9BC166ECFE9BADFFEE4C9B73C130595B2DD212686AC103EF38B6473 PUSH16 0x6C634300070100330000000000000000 ", "sha1": "94c8f2ec6112b926880e011453fbc8d9a0e745a9", "source": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\npragma experimental ABIEncoderV2;\n\nimport \"@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol\";\n\nimport \"../../libraries/GyroConfigKeys.sol\";\nimport \"../../interfaces/IGyroConfig.sol\";\nimport \"../../libraries/GyroPoolMath.sol\";\n\nimport \"./ExtensibleBaseWeightedPool.sol\";\nimport \"./GyroThreeMath.sol\";\nimport \"./GyroThreePoolErrors.sol\";\n\n/**\n * @dev Gyro Three Pool with immutable weights.\n */\ncontract GyroThreePool is ExtensibleBaseWeightedPool {\n    using FixedPoint for uint256;\n    using WeightedPoolUserDataHelpers for bytes;\n\n    uint256 private immutable _root3Alpha;\n\n    IGyroConfig public gyroConfig;\n\n    uint256 private constant _MAX_TOKENS = 3;\n\n    IERC20 internal immutable _token0;\n    IERC20 internal immutable _token1;\n    IERC20 internal immutable _token2;\n\n    // All token balances are normalized to behave as if the token had 18 decimals. We assume a token's decimals will\n    // not change throughout its lifetime, and store the corresponding scaling factor for each at construction time.\n    // These factors are always greater than or equal to one: tokens with more than 18 decimals are not supported.\n    uint256 internal immutable _scalingFactor0;\n    uint256 internal immutable _scalingFactor1;\n    uint256 internal immutable _scalingFactor2;\n\n    constructor(\n        IVault vault,\n        string memory name,\n        string memory symbol,\n        IERC20[] memory tokens,\n        uint256 root3Alpha,\n        uint256 swapFeePercentage,\n        uint256 pauseWindowDuration,\n        uint256 bufferPeriodDuration,\n        address owner,\n        address configAddress\n    ) ExtensibleBaseWeightedPool(vault, name, symbol, tokens, new address[](3), swapFeePercentage, pauseWindowDuration, bufferPeriodDuration, owner) {\n        _require(tokens.length == 3, GyroThreePoolErrors.TOKENS_LENGTH_MUST_BE_3);\n\n        _token0 = tokens[0];\n        _token1 = tokens[1];\n        _token2 = tokens[2];\n\n        _scalingFactor0 = _computeScalingFactor(tokens[0]);\n        _scalingFactor1 = _computeScalingFactor(tokens[1]);\n        _scalingFactor2 = _computeScalingFactor(tokens[2]);\n\n        _require(root3Alpha < FixedPoint.ONE, GyroThreePoolErrors.PRICE_BOUNDS_WRONG);\n        _root3Alpha = root3Alpha;\n        gyroConfig = IGyroConfig(configAddress);\n    }\n\n    function getRoot3Alpha() external view returns (uint256) {\n        return _root3Alpha;\n    }\n\n    // We don't support weights at the moment; in other words, all tokens are always weighted equally and thus their\n    // normalized weights are all 1/3. This is what the functions return.\n\n    function _getNormalizedWeight(IERC20) internal view virtual override returns (uint256) {\n        return FixedPoint.ONE / 3;\n    }\n\n    function _getNormalizedWeights() internal view virtual override returns (uint256[] memory) {\n        uint256[] memory normalizedWeights = new uint256[](3);\n\n        // prettier-ignore\n        {\n            normalizedWeights[0] = FixedPoint.ONE/3;\n            normalizedWeights[1] = FixedPoint.ONE/3;\n            normalizedWeights[2] = FixedPoint.ONE/3;\n        }\n\n        return normalizedWeights;\n    }\n\n    /// @dev Since all weights are always the same, the max-weight token is arbitrary. We return token 0.\n    function _getNormalizedWeightsAndMaxWeightIndex() internal view virtual override returns (uint256[] memory, uint256) {\n        return (_getNormalizedWeights(), 0);\n    }\n\n    function _getMaxTokens() internal pure virtual override returns (uint256) {\n        return _MAX_TOKENS;\n    }\n\n    function _getTotalTokens() internal pure virtual override returns (uint256) {\n        return 3;\n    }\n\n    /**\n     * @dev Returns the scaling factor for one of the Pool's tokens. Reverts if `token` is not a token registered by the\n     * Pool.\n     */\n    function _scalingFactor(IERC20 token) internal view virtual override returns (uint256 scalingFactor) {\n        if (token == _token0) {\n            scalingFactor = _scalingFactor0;\n        } else if (token == _token1) {\n            scalingFactor = _scalingFactor1;\n        } else if (token == _token2) {\n            scalingFactor = _scalingFactor2;\n        } else {\n            _revert(Errors.INVALID_TOKEN);\n        }\n    }\n\n    function _scalingFactors() internal view virtual override returns (uint256[] memory) {\n        uint256 totalTokens = _getTotalTokens();\n        uint256[] memory scalingFactors = new uint256[](totalTokens);\n\n        // prettier-ignore\n        {\n            scalingFactors[0] = _scalingFactor0;\n            scalingFactors[1] = _scalingFactor1;\n            scalingFactors[2] = _scalingFactor2;\n        }\n\n        return scalingFactors;\n    }\n\n    function _onSwapGivenIn(\n        SwapRequest memory swapRequest,\n        uint256 currentBalanceTokenIn,\n        uint256 currentBalanceTokenOut\n    ) internal view virtual override whenNotPaused returns (uint256) {\n        uint256 virtualOffset = _calculateVirtualOffset();\n        return _onSwapGivenIn(swapRequest, currentBalanceTokenIn, currentBalanceTokenOut, virtualOffset);\n    }\n\n    function _onSwapGivenOut(\n        SwapRequest memory swapRequest,\n        uint256 currentBalanceTokenIn,\n        uint256 currentBalanceTokenOut\n    ) internal view virtual override whenNotPaused returns (uint256) {\n        uint256 virtualOffset = _calculateVirtualOffset();\n        return _onSwapGivenOut(swapRequest, currentBalanceTokenIn, currentBalanceTokenOut, virtualOffset);\n    }\n\n    /** @dev Calculate the offset that that takes real reserves to virtual reserves.\n     */\n    function _calculateVirtualOffset() private view returns (uint256 virtualOffset) {\n        (, uint256[] memory balances, ) = getVault().getPoolTokens(getPoolId());\n        _upscaleArray(balances, _scalingFactors());\n        uint256 root3Alpha = _root3Alpha;\n        uint256 invariant = GyroThreeMath._calculateInvariant(balances, root3Alpha);\n        virtualOffset = invariant.mulDown(root3Alpha);\n    }\n\n    /** @dev Calculate the invariant. */\n    function _calculateInvariant() private view returns (uint256 invariant) {\n        (, uint256[] memory balances, ) = getVault().getPoolTokens(getPoolId());\n        _upscaleArray(balances, _scalingFactors());\n        return GyroThreeMath._calculateInvariant(balances, _root3Alpha);\n    }\n\n    function _onSwapGivenIn(\n        SwapRequest memory swapRequest,\n        uint256 currentBalanceTokenIn,\n        uint256 currentBalanceTokenOut,\n        uint256 virtualOffset\n    ) private pure returns (uint256) {\n        return GyroThreeMath._calcOutGivenIn(currentBalanceTokenIn, currentBalanceTokenOut, swapRequest.amount, virtualOffset);\n    }\n\n    function _onSwapGivenOut(\n        SwapRequest memory swapRequest,\n        uint256 currentBalanceTokenIn,\n        uint256 currentBalanceTokenOut,\n        uint256 virtualOffset\n    ) private pure returns (uint256) {\n        return GyroThreeMath._calcInGivenOut(currentBalanceTokenIn, currentBalanceTokenOut, swapRequest.amount, virtualOffset);\n    }\n\n    /**\n     * @dev Called when the Pool is joined for the first time; that is, when the BPT total supply is zero.\n     *\n     * Returns the amount of BPT to mint and the token amounts the Pool will receive in return.\n     *\n     * Minted BPT will be sent to `recipient`, except for _MINIMUM_BPT, which will be deducted from this amount and sent\n     * to the zero address instead. This will cause that BPT to remain forever locked there, preventing total BTP from\n     * ever dropping below that value, and ensuring `_onInitializePool` can only be called once in the entire Pool's\n     * lifetime.\n     *\n     * The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n     * be downscaled (rounding up) before being returned to the Vault.\n     */\n    function _onInitializePool(\n        bytes32,\n        address,\n        address,\n        uint256[] memory scalingFactors,\n        bytes memory userData\n    ) internal override whenNotPaused returns (uint256, uint256[] memory) {\n        BaseWeightedPool.JoinKind kind = userData.joinKind();\n        _require(kind == BaseWeightedPool.JoinKind.INIT, Errors.UNINITIALIZED);\n\n        uint256[] memory amountsIn = userData.initialAmountsIn();\n        InputHelpers.ensureInputLengthMatch(amountsIn.length, 3);\n        _upscaleArray(amountsIn, scalingFactors);\n\n        // uint256[] memory sqrtParams = _sqrtParameters();\n\n        uint256 invariantAfterJoin = GyroThreeMath._calculateInvariant(amountsIn, _root3Alpha);\n\n        // Set the initial BPT to the value of the invariant times the number of tokens. This makes BPT supply more\n        // consistent in Pools with similar compositions but different number of tokens.\n        uint256 bptAmountOut = Math.mul(invariantAfterJoin, 3);\n\n        _lastInvariant = invariantAfterJoin;\n\n        return (bptAmountOut, amountsIn);\n    }\n\n    /**\n     * @dev Called whenever the Pool is joined after the first initialization join (see `_onInitializePool`).\n     *\n     * Returns the amount of BPT to mint, the token amounts that the Pool will receive in return, and the number of\n     * tokens to pay in protocol swap fees.\n     *\n     * Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n     * performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n     *\n     * Minted BPT will be sent to `recipient`.\n     *\n     * The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n     * be downscaled (rounding up) before being returned to the Vault.\n     *\n     * protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way\n     */\n    function _onJoinPool(\n        bytes32,\n        address,\n        address,\n        uint256[] memory balances,\n        uint256,\n        uint256, // protocolSwapFeePercentage, not used\n        uint256[] memory,\n        bytes memory userData\n    )\n        internal\n        override\n        returns (\n            uint256 bptAmountOut,\n            uint256[] memory amountsIn,\n            uint256[] memory dueProtocolFeeAmounts\n        )\n    {\n        // Due protocol swap fee amounts are computed by measuring the growth of the invariant between the previous join\n        // or exit event and now - the invariant's growth is due exclusively to swap fees. This avoids spending gas\n        // computing them on each individual swap\n\n        uint256 root3Alpha = _root3Alpha;\n\n        uint256 invariantBeforeJoin = GyroThreeMath._calculateInvariant(balances, root3Alpha);\n\n        _distributeFees(invariantBeforeJoin);\n\n        (bptAmountOut, amountsIn) = _doJoin(balances, userData);\n\n        // Since we pay fees in BPT, they have not changed the invariant and 'lastInvariant' is still consistent with\n        // 'balances'. Therefore, we can use a simplified method to update the invariant that does not require a full\n        // re-computation.\n        // Note: Should this be changed in the future, we also need to reduce the invariant proportionally by the total\n        // protocol fee factor.\n        _lastInvariant = GyroPoolMath.liquidityInvariantUpdate(invariantBeforeJoin, bptAmountOut, totalSupply(), true);\n\n        // returns a new uint256[](3) b/c Balancer vault is expecting a fee array, but fees paid in BPT instead\n        return (bptAmountOut, amountsIn, new uint256[](3));\n    }\n\n    function _doJoin(uint256[] memory balances, bytes memory userData) internal view returns (uint256 bptAmountOut, uint256[] memory amountsIn) {\n        BaseWeightedPool.JoinKind kind = userData.joinKind();\n\n        // We do NOT currently support unbalanced update, i.e., EXACT_TOKENS_IN_FOR_BPT_OUT or TOKEN_IN_FOR_EXACT_BPT_OUT\n        if (kind == BaseWeightedPool.JoinKind.ALL_TOKENS_IN_FOR_EXACT_BPT_OUT) {\n            (bptAmountOut, amountsIn) = _joinAllTokensInForExactBPTOut(balances, userData);\n        } else {\n            _revert(Errors.UNHANDLED_JOIN_KIND);\n        }\n    }\n\n    /**\n     * @dev Called whenever the Pool is exited.\n     *\n     * Returns the amount of BPT to burn, the token amounts for each Pool token that the Pool will grant in return, and\n     * the number of tokens to pay in protocol swap fees.\n     *\n     * Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n     * performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n     *\n     * BPT will be burnt from `sender`.\n     *\n     * The Pool will grant tokens to `recipient`. These amounts are considered upscaled and will be downscaled\n     * (rounding down) before being returned to the Vault.\n     *\n     * protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way\n     */\n    function _onExitPool(\n        bytes32,\n        address,\n        address,\n        uint256[] memory balances,\n        uint256,\n        uint256, // protocolSwapFeePercentage\n        uint256[] memory,\n        bytes memory userData\n    )\n        internal\n        override\n        returns (\n            uint256 bptAmountIn,\n            uint256[] memory amountsOut,\n            uint256[] memory dueProtocolFeeAmounts\n        )\n    {\n        // Exits are not completely disabled while the contract is paused: proportional exits (exact BPT in for tokens\n        // out) remain functional.\n\n        uint256 root3Alpha = _root3Alpha;\n\n        if (_isNotPaused()) {\n            // Due protocol swap fee amounts are computed by measuring the growth of the invariant between the previous\n            // join or exit event and now - the invariant's growth is due exclusively to swap fees. This avoids\n            // spending gas calculating the fees on each individual swap.\n            uint256 invariantBeforeExit = GyroThreeMath._calculateInvariant(balances, root3Alpha);\n\n            _distributeFees(invariantBeforeExit);\n\n            (bptAmountIn, amountsOut) = _doExit(balances, userData);\n\n            // Since we pay fees in BPT, they have not changed the invariant and 'lastInvariant' is still consistent with\n            // 'balances'. Therefore, we can use a simplified method to update the invariant that does not require a full\n            // re-computation.\n            // Note: Should this be changed in the future, we also need to reduce the invariant proportionally by the\n            // total protocol fee factor.\n            _lastInvariant = GyroPoolMath.liquidityInvariantUpdate(invariantBeforeExit, bptAmountIn, totalSupply(), false);\n        } else {\n            // Note: If the contract is paused, swap protocol fee amounts are not charged and the oracle is not updated\n            // to avoid extra calculations and reduce the potential for errors.\n            (bptAmountIn, amountsOut) = _doExit(balances, userData);\n\n            // In the paused state, we do not recompute the invariant to reduce the potential for errors and to avoid\n            // lock-up in case the pool is in a state where the involved numerical method does not converge.\n            // Instead, we set the invariant such that any following (non-paused) join/exit will ignore and recompute it\n            // (see GyroThreeMath._calcProtocolFees())\n            _lastInvariant = type(uint256).max;\n        }\n\n        // returns a new uint256[](3) b/c Balancer vault is expecting a fee array, but fees paid in BPT instead\n        return (bptAmountIn, amountsOut, new uint256[](3));\n    }\n\n    /**\n     * @dev Returns the current value of the invariant.\n     */\n    function getInvariant() public view override returns (uint256 invariant) {\n        return _calculateInvariant();\n    }\n\n    function _joinAllTokensInForExactBPTOut(uint256[] memory balances, bytes memory userData)\n        internal\n        view\n        override\n        returns (uint256, uint256[] memory)\n    {\n        uint256 bptAmountOut = userData.allTokensInForExactBptOut();\n\n        uint256[] memory amountsIn = GyroPoolMath._calcAllTokensInGivenExactBptOut(balances, bptAmountOut, totalSupply());\n\n        return (bptAmountOut, amountsIn);\n    }\n\n    function _doExit(uint256[] memory balances, bytes memory userData) internal view returns (uint256 bptAmountIn, uint256[] memory amountsOut) {\n        BaseWeightedPool.ExitKind kind = userData.exitKind();\n\n        // We do NOT support unbalanced exit at the moment, i.e., EXACT_BPT_IN_FOR_ONE_TOKEN_OUT or\n        // BPT_IN_FOR_EXACT_TOKENS_OUT.\n        if (kind == BaseWeightedPool.ExitKind.EXACT_BPT_IN_FOR_TOKENS_OUT) {\n            return _exitExactBPTInForTokensOut(balances, userData);\n        } else {\n            _revert(Errors.UNHANDLED_EXIT_KIND);\n        }\n    }\n\n    function _exitExactBPTInForTokensOut(uint256[] memory balances, bytes memory userData)\n        internal\n        view\n        override\n        returns (uint256, uint256[] memory)\n    {\n        // This exit function is the only one that is not disabled if the contract is paused: it remains unrestricted\n        // in an attempt to provide users with a mechanism to retrieve their tokens in case of an emergency.\n        // This particular exit function is the only one that remains available because it is the simplest one, and\n        // therefore the one with the lowest likelihood of errors.\n\n        uint256 bptAmountIn = userData.exactBptInForTokensOut();\n        // Note that there is no minimum amountOut parameter: this is handled by `IVault.exitPool`.\n\n        uint256[] memory amountsOut = GyroPoolMath._calcTokensOutGivenExactBptIn(balances, bptAmountIn, totalSupply());\n        return (bptAmountIn, amountsOut);\n    }\n\n    // Helpers\n\n    // Protocol Fee Helpers. These are the same functions as in GyroTwoPool.\n\n    /**\n     * @dev Computes and distributes fees between the Balancer and the Gyro treasury\n     * The fees are computed and distributed in BPT rather than using the\n     * Balancer regular distribution mechanism which would pay these in underlying\n     */\n    function _distributeFees(uint256 invariantBeforeAction) internal {\n        // calculate Protocol fees in BPT\n        // _lastInvariant is the invariant logged at the end of the last liquidity update\n        // protocol fees are calculated on swap fees earned between liquidity updates\n        (uint256 gyroFees, uint256 balancerFees, address gyroTreasury, address balTreasury) = _getDueProtocolFeeAmounts(\n            _lastInvariant,\n            invariantBeforeAction\n        );\n\n        // Pay fees in BPT\n        _payFeesBpt(gyroFees, balancerFees, gyroTreasury, balTreasury);\n    }\n\n    /**\n     * @dev this function overrides inherited function to make sure it is never used\n     */\n    function _getDueProtocolFeeAmounts(\n        uint256[] memory, // balances,\n        uint256[] memory, // normalizedWeights,\n        uint256, // maxWeightTokenIndex,\n        uint256, // previousInvariant,\n        uint256, // currentInvariant,\n        uint256 // protocolSwapFeePercentage\n    ) internal pure override returns (uint256[] memory) {\n        revert(\"Not implemented\");\n    }\n\n    /**\n     * Note: This function is identical to that used in GyroTwoPool.sol\n     * @dev Calculates protocol fee amounts in BPT terms\n     * Overrides an inherited function and some arguments are intentionally not used (balances, normalizedWeights)\n     * protocolSwapFeePercentage is not used b/c we take parameters from GyroConfig instead\n     * Returns dueFees, where dueFees[0] = BPT due to Gyro, and dueFees[1] = BPT due to Balancer\n     */\n    function _getDueProtocolFeeAmounts(uint256 previousInvariant, uint256 currentInvariant)\n        internal\n        view\n        returns (\n            uint256,\n            uint256,\n            address,\n            address\n        )\n    {\n        (uint256 protocolSwapFeePerc, uint256 protocolFeeGyroPortion, address gyroTreasury, address balTreasury) = _getFeesMetadata();\n\n        // Early return if the protocol swap fee percentage is zero, saving gas.\n        if (protocolSwapFeePerc == 0) {\n            return (0, 0, gyroTreasury, balTreasury);\n        }\n\n        // Calculate fees in BPT\n        (uint256 gyroFees, uint256 balancerFees) = GyroPoolMath._calcProtocolFees(\n            previousInvariant,\n            currentInvariant,\n            totalSupply(),\n            protocolSwapFeePerc,\n            protocolFeeGyroPortion\n        );\n\n        return (gyroFees, balancerFees, gyroTreasury, balTreasury);\n    }\n\n    // Note: This function is identical to that used in GyroTwoPool.sol\n    function _payFeesBpt(\n        uint256 gyroFees,\n        uint256 balancerFees,\n        address gyroTreasury,\n        address balTreasury\n    ) internal {\n        // Pay fees in BPT to gyro treasury\n        if (gyroFees > 0) {\n            _mintPoolTokens(gyroTreasury, gyroFees);\n        }\n        // Pay fees in BPT to bal treasury\n        if (balancerFees > 0) {\n            _mintPoolTokens(balTreasury, balancerFees);\n        }\n    }\n\n    // Note: This function is identical to that used in GyroTwoPool.sol\n    function _getFeesMetadata()\n        internal\n        view\n        returns (\n            uint256,\n            uint256,\n            address,\n            address\n        )\n    {\n        return (\n            gyroConfig.getUint(GyroConfigKeys.PROTOCOL_SWAP_FEE_PERC_KEY),\n            gyroConfig.getUint(GyroConfigKeys.PROTOCOL_FEE_GYRO_PORTION_KEY),\n            gyroConfig.getAddress(GyroConfigKeys.GYRO_TREASURY_KEY),\n            gyroConfig.getAddress(GyroConfigKeys.BAL_TREASURY_KEY)\n        );\n    }\n}\n", "sourceMap": "1126:21142:2:-:0;;;873:95:34;820:148;;2009:995:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2387:16;;;2401:1;2387:16;;;;;;;;;2358:5;;2365:4;;2371:6;;2379;;2387:16;;;;;;;;;;;-1:-1:-1;2387:16:2;2405:17;2424:19;2445:20;2467:5;1935::0;2218:6;:13;2235:1;2218:18;:134;;2309:43;2218:134;;;2255:35;2218:134;2366:4;2384:6;2404;2424:13;2451:17;2482:19;2515:20;2549:5;4518:19:11;4539:20;4432:4;4438:6;4446:5;1831:9:9;1239:4:34;2020:280:32;;;;;;;;;;;;;-1:-1:-1;;;2020:280:32;;;1795:9:9;1806:11;4483:5:11;4392:10;-1:-1:-1;;;;;4384:19:11;4376:28;;1954:21:18;1929:46;;;;;;1876:106;1758:5:12;-1:-1:-1;;;;;1749:14:12;;;-1:-1:-1;;;;;1749:14:12;;;;;;;1712:58;2010:5:33;2002;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2025:17:33;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2052:9:33;:14;;2064:2;-1:-1:-1;;2052:14:33;;;;;;-1:-1:-1;2100:22:32;;;;;;;2085:37;;2150:25;;;;;2132:43;;-1:-1:-1;2198:95:32;2052:14:33;2185:108:32;1852:14:9::2;::::0;-1:-1:-1;;;;;;1852:14:9;::::2;::::0;-1:-1:-1;2458:93:26;;-1:-1:-1;2164:7:26;2467:49;;;8518:3:19;2458:8:26;:93::i;:::-;2561:96;2232:7;2570:51;;;8582:3:19;2561:8:26;:96::i;:::-;2697:15;:37;;;2745:40;;;;2818:41;2795:64;;4584:13:11;;4575:57:::4;::::0;2599:1:::4;-1:-1:-1::0;4584:28:11::4;5119:3:19;4575:8:11;:57::i;:::-;4642:61;4668:15;:13;:15::i;:::-;4651:13:::0;;:32:::4;;5167:3:19;4642:8:11;:61::i;:::-;5251:40;5284:6;5251:32;;;;;:40;;:::i;:::-;5302;5324:17:::0;5302:21:::4;:40::i;:::-;5370:34;::::0;-1:-1:-1;;;5370:34:11;;5353:14:::4;::::0;-1:-1:-1;;;;;5370:18:11;::::4;::::0;-1:-1:-1;;5370:34:11::4;::::0;5389:14;;5370:34:::4;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5415:51;::::0;-1:-1:-1;;;5415:51:11;;5353;;-1:-1:-1;;;;;;5415:20:11;::::4;::::0;::::4;::::0;:51:::4;::::0;5353;;5444:6;;5452:13;;5415:51:::4;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;::::0;::::4;;;;;;;;;5576:6;5566:16;;;;::::0;::::4;3470:2119;::::0;;;;;;;;;;1602:1031:0;;;;;;;;;2484:73:2::1;2493:6;:13;2510:1;2493:18;1194:3:3;2484:8:2;;;:73;;:::i;:::-;2578:6;2585:1;2578:9;;;;;;;;;::::0;;::::1;::::0;;;;;;2568:19:::1;::::0;-1:-1:-1;;;;;;2568:19:2;::::1;::::0;2607:9;;;;-1:-1:-1;;2607:9:2;::::1;;;;;;::::0;;::::1;::::0;;;;;;2597:19:::1;::::0;-1:-1:-1;;;;;;2597:19:2;::::1;::::0;2636:9;;;;2643:1:::1;::::0;2636:9;::::1;;;;;;::::0;;::::1;::::0;;;;;;2626:19:::1;::::0;-1:-1:-1;;;;;;2626:19:2;::::1;::::0;2696:9;;2674:32:::1;::::0;2696:9;;2703:1:::1;::::0;2696:9:::1;;;;;;;;;;2674:21;;;:32;;:::i;:::-;2656:50;::::0;2756:9;;2734:32:::1;::::0;2756:6;;2763:1:::1;::::0;2756:9;::::1;;;;2734:32;2716:50;::::0;2816:9;;2794:32:::1;::::0;2816:6;;2823:1:::1;::::0;2816:9;::::1;;;;2794:32;2776:50;::::0;2837:77:::1;893:4:28;2846:27:2::0;::::1;896:3:3;2837:8:2;:77::i;:::-;2924:24;::::0;;;;-1:-1:-1;;2958:10:2::1;:39:::0;;-1:-1:-1;;;;;;2958:39:2::1;-1:-1:-1::0;;;;;2958:39:2;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;1126:21142:2;;-1:-1:-1;;;;;1126:21142:2;866:101:19;935:9;930:34;;946:18;954:9;946:7;:18::i;:::-;866:101;;:::o;4125:109:2:-;1388:1;4125:109;:::o;1135:274:25:-;1345:5;1369:33;1345:5;1369:19;:33::i;6277:418:11:-;6353:87;2755:4;6362:45;;;5289:3:19;6353:8:11;:87::i;:::-;6450;2828:4;6459:45;;;5228:3:19;6450:8:11;:87::i;:::-;6560:70;6583:17;3356:3;6560:9;;:22;;;;;;:70;;;;;:::i;:::-;6548:9;:82;6645:43;;;;;;6670:17;;6645:43;:::i;:::-;;;;;;;;6277:418;:::o;19853:510::-;19921:7;19970:4;-1:-1:-1;;;;;19944:31:11;;;19940:83;;;-1:-1:-1;893:4:28;19991:21:11;;19940:83;20113:21;20151:5;-1:-1:-1;;;;;20137:30:11;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20113:56;;;;20244:26;20273:27;20282:2;20286:13;20273:8;;;;;:27;;:::i;:::-;20244:56;;20338:18;20334:2;:22;893:4:28;20317:39:11;20310:46;;;;19853:510;;;;:::o;1074:3172:19:-;-1:-1:-1;;;3588:3:19;3581:79;;;3799:66;3793:4;3786:80;3941:1;3935:4;3928:15;2210:2;2243:18;;;2336;;;2383;;;2215:4;2379:29;;;3057:2;3053:17;2195:18;;;;2288;;;;2284:29;;;;3040:1;3036:14;3025:26;;;;3021:50;;;;2999:73;;2994:3;2990:83;4008:4;4001:26;4234:3;;4224:14;1415:374:25;1511:1;1496:5;:12;:16;1492:53;;;1528:7;;1492:53;1555:16;1574:5;1580:1;1574:8;;;;;;;;;;;;;;1555:27;;1597:9;1609:1;1597:13;;1592:191;1616:5;:12;1612:1;:16;1592:191;;;1649:15;1667:5;1673:1;1667:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;1689:51:25;-1:-1:-1;;;;;1698:18:25;;;;;;;4890:3:19;1689:8:25;:51::i;:::-;1765:7;-1:-1:-1;1630:3:25;;1592:191;;;;1415:374;;;:::o;6887:269:27:-;-1:-1:-1;7074:18:27;;7072:21;7056:37;;;;7133:15;;7111:38;;6887:269::o;948:166:30:-;1006:7;1025:37;1034:6;;;;4370:1:19;1025:8:30;:37::i;:::-;-1:-1:-1;1084:5:30;;;948:166;;;;;:::o;1126:21142:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1126:21142:2;;;-1:-1:-1;1126:21142:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;5:134:-1;83:13;;101:33;83:13;101:33;:::i;172:767::-;;315:3;308:4;300:6;296:17;292:27;282:2;;-1:-1;;323:12;282:2;357:13;;-1:-1;8901:30;;8898:2;;;-1:-1;;8934:12;8898:2;8979:4;;8971:6;8967:17;385:95;8979:4;8967:17;9032:15;385:95;:::i;:::-;508:21;;;376:104;-1:-1;565:14;;;540:17;;;645:27;;;;;642:36;-1:-1;639:2;;;691:1;;681:12;639:2;716:1;707:10;;701:232;726:6;723:1;720:13;701:232;;;89:6;83:13;101:33;128:5;101:33;:::i;:::-;794:76;;748:1;741:9;;;;;884:14;;;;912;;701:232;;;705:14;;;;;275:664;;;;:::o;1431:444::-;;1544:3;1537:4;1529:6;1525:17;1521:27;1511:2;;-1:-1;;1552:12;1511:2;1586:13;;-1:-1;9197:30;;9194:2;;;-1:-1;;9230:12;9194:2;9371:4;1614:65;-1:-1;;9303:9;9284:17;;9280:33;9361:15;;1614:65;:::i;:::-;1605:74;;1699:6;1692:5;1685:21;1803:3;9371:4;1794:6;1727;1785:16;;1782:25;1779:2;;;1820:1;;1810:12;1779:2;11829:1;11836:101;11850:6;11847:1;11844:13;11836:101;;;11917:11;;;;;11911:18;11898:11;;;;;11891:39;11865:10;;11836:101;;;11952:6;11949:1;11946:13;11943:2;;;11829:1;9371:4;12008:6;1761:5;11999:16;;11992:27;11943:2;;;;1504:371;;;;:::o;2161:263::-;;2276:2;2264:9;2255:7;2251:23;2247:32;2244:2;;;-1:-1;;2282:12;2244:2;-1:-1;1025:13;;2238:186;-1:-1;2238:186::o;2431:1881::-;;;;;;;;;;;2774:3;2762:9;2753:7;2749:23;2745:33;2742:2;;;-1:-1;;2781:12;2742:2;2843:79;2914:7;2890:22;2843:79;:::i;:::-;2980:2;2965:18;;2959:25;2833:89;;-1:-1;;2993:30;;;2990:2;;;-1:-1;;3026:12;2990:2;3056:74;3122:7;3113:6;3102:9;3098:22;3056:74;:::i;:::-;3046:84;;3188:2;3177:9;3173:18;3167:25;3153:39;;3004:18;3204:6;3201:30;3198:2;;;-1:-1;;3234:12;3198:2;3264:74;3330:7;3321:6;3310:9;3306:22;3264:74;:::i;:::-;3254:84;;3396:2;3385:9;3381:18;3375:25;3361:39;;3004:18;3412:6;3409:30;3406:2;;;-1:-1;;3442:12;3406:2;;3472:104;3568:7;3559:6;3548:9;3544:22;3472:104;:::i;:::-;3462:114;;;3613:3;3668:9;3664:22;1961:13;3622:74;;3733:3;3788:9;3784:22;1961:13;3742:74;;3853:3;3908:9;3904:22;1961:13;3862:74;;3973:3;4028:9;4024:22;1961:13;3982:74;;4112:64;4168:7;4093:3;4148:9;4144:22;4112:64;:::i;:::-;4102:74;;4232:64;4288:7;4213:3;4268:9;4264:22;4232:64;:::i;:::-;4222:74;;2736:1576;;;;;;;;;;;;;:::o;4319:259::-;;4432:2;4420:9;4411:7;4407:23;4403:32;4400:2;;;-1:-1;;4438:12;4400:2;2106:6;2100:13;11299:4;12924:5;11288:16;12901:5;12898:33;12888:2;;-1:-1;;12935:12;12888:2;4490:72;4394:184;-1:-1;;;4394:184::o;7198:770::-;;7496:2;7485:9;7481:18;6731:5;6708:3;6701:37;7614:2;7496;7614;7603:9;7599:18;7592:48;7654:123;6080:5;9827:12;10403:6;10398:3;10391:19;10431:14;7485:9;10431:14;6092:93;;7614:2;6271:5;9508:14;6283:21;;-1:-1;6310:290;6335:6;6332:1;6329:13;6310:290;;;11410:52;6402:6;6396:13;11410:52;:::i;:::-;6826:65;;10116:14;;;;4951;;;;6357:1;6350:9;6310:290;;;-1:-1;;7815:20;;;7810:2;7795:18;;7788:48;9827:12;;10391:19;;;10431:14;;;;-1:-1;9508:14;;;;-1:-1;5528:260;5553:6;5550:1;5547:13;5528:260;;;10521:24;5620:6;5614:13;10521:24;:::i;:::-;5040:37;;4739:14;;;;10116;;;;6357:1;5568:9;5528:260;;;-1:-1;7842:116;;7467:501;-1:-1;;;;;;;;7467:501::o;7975:264::-;8123:2;8108:18;;12132:1;12122:12;;12112:2;;12138:9;12112:2;6995:71;;;8094:145;:::o;8246:222::-;6701:37;;;8373:2;8358:18;;8344:124::o;8475:256::-;8537:2;8531:9;8563:17;;;8659:22;;;-1:-1;8623:34;;8620:62;8617:2;;;8695:1;;8685:12;8617:2;8537;8704:22;8515:216;;-1:-1;8515:216::o;10459:91::-;-1:-1;;;;;11083:54;;10504:46::o;12161:117::-;-1:-1;;;;;11083:54;;12220:35;;12210:2;;12269:1;;12259:12;12204:74;1126:21142:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/cpmmv-3/GyroThreePool.sol", "type": "contract", "deployment": {"address": "0xbC9bC9dC07a3C860da97693D94B0F12D6Dccf4b1", "chainid": "137", "blockHeight": 26860012}}