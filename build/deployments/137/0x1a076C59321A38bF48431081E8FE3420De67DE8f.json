{"abi": [{"inputs": [{"components": [{"internalType": "contract IVault", "name": "vault", "type": "address"}, {"internalType": "address", "name": "configAddress", "type": "address"}, {"components": [{"internalType": "string", "name": "name", "type": "string"}, {"internalType": "string", "name": "symbol", "type": "string"}, {"internalType": "contract IERC20[]", "name": "tokens", "type": "address[]"}, {"internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}, {"internalType": "uint256", "name": "root3Alpha", "type": "uint256"}, {"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "capManager", "type": "address"}, {"components": [{"internalType": "bool", "name": "capEnabled", "type": "bool"}, {"internalType": "uint120", "name": "perAddressCap", "type": "uint120"}, {"internalType": "uint128", "name": "globalCap", "type": "uint128"}], "internalType": "struct ICappedLiquidity.CapParams", "name": "capParams", "type": "tuple"}, {"internalType": "address", "name": "pauseManager", "type": "address"}], "internalType": "struct Gyro3CLPPool.NewPoolConfigParams", "name": "config", "type": "tuple"}, {"internalType": "uint256", "name": "pauseWindowDuration", "type": "uint256"}, {"internalType": "uint256", "name": "bufferPeriodDuration", "type": "uint256"}], "internalType": "struct Gyro3CLPPool.NewPoolParams", "name": "params", "type": "tuple"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "owner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "spender", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Approval", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "capManager", "type": "address"}], "name": "CapManagerUpdated", "type": "event"}, {"anonymous": false, "inputs": [{"components": [{"internalType": "bool", "name": "capEnabled", "type": "bool"}, {"internalType": "uint120", "name": "perAddressCap", "type": "uint120"}, {"internalType": "uint128", "name": "globalCap", "type": "uint128"}], "indexed": false, "internalType": "struct ICappedLiquidity.CapParams", "name": "params", "type": "tuple"}], "name": "CapParamsUpdated", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "oldPauseManager", "type": "address"}, {"indexed": false, "internalType": "address", "name": "newPauseManager", "type": "address"}], "name": "PauseManagerChanged", "type": "event"}, {"anonymous": false, "inputs": [], "name": "PausedLocally", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bool", "name": "paused", "type": "bool"}], "name": "PausedStateChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}], "name": "SwapFeePercentageChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "from", "type": "address"}, {"indexed": true, "internalType": "address", "name": "to", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Transfer", "type": "event"}, {"anonymous": false, "inputs": [], "name": "UnpausedLocally", "type": "event"}, {"inputs": [], "name": "DOMAIN_SEPARATOR", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "spender", "type": "address"}], "name": "allowance", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "approve", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "balanceOf", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "capManager", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "capParams", "outputs": [{"components": [{"internalType": "bool", "name": "capEnabled", "type": "bool"}, {"internalType": "uint120", "name": "perAddressCap", "type": "uint120"}, {"internalType": "uint128", "name": "globalCap", "type": "uint128"}], "internalType": "struct ICappedLiquidity.CapParams", "name": "", "type": "tuple"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_pauseManager", "type": "address"}], "name": "changePauseManager", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "decimals", "outputs": [{"internalType": "uint8", "name": "", "type": "uint8"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "decreaseAllowance", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes4", "name": "selector", "type": "bytes4"}], "name": "getActionId", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getAuthorizer", "outputs": [{"internalType": "contract IAuthorizer", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getInvariant", "outputs": [{"internalType": "uint256", "name": "invariant", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getLastInvariant", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getNormalizedWeights", "outputs": [{"internalType": "uint256[]", "name": "", "type": "uint256[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getOwner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getPausedState", "outputs": [{"internalType": "bool", "name": "paused", "type": "bool"}, {"internalType": "uint256", "name": "pauseWindowEndTime", "type": "uint256"}, {"internalType": "uint256", "name": "bufferPeriodEndTime", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getPoolId", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getRate", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getRoot3Alpha", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getScalingFactors", "outputs": [{"internalType": "uint256[]", "name": "", "type": "uint256[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getSwapFeePercentage", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getVault", "outputs": [{"internalType": "contract IVault", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "gyroConfig", "outputs": [{"internalType": "contract IGyroConfig", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "addedValue", "type": "uint256"}], "name": "increaseAllowance", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "name", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}], "name": "nonces", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "onExitPool", "outputs": [{"internalType": "uint256[]", "name": "", "type": "uint256[]"}, {"internalType": "uint256[]", "name": "", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "onJoinPool", "outputs": [{"internalType": "uint256[]", "name": "", "type": "uint256[]"}, {"internalType": "uint256[]", "name": "", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"components": [{"internalType": "enum IVault.SwapKind", "name": "kind", "type": "uint8"}, {"internalType": "contract IERC20", "name": "tokenIn", "type": "address"}, {"internalType": "contract IERC20", "name": "tokenOut", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}, {"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "address", "name": "from", "type": "address"}, {"internalType": "address", "name": "to", "type": "address"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "internalType": "struct IPoolSwapStructs.SwapRequest", "name": "request", "type": "tuple"}, {"internalType": "uint256", "name": "balanceTokenIn", "type": "uint256"}, {"internalType": "uint256", "name": "balanceTokenOut", "type": "uint256"}], "name": "onSwap", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "pause", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "pauseManager", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "value", "type": "uint256"}, {"internalType": "uint256", "name": "deadline", "type": "uint256"}, {"internalType": "uint8", "name": "v", "type": "uint8"}, {"internalType": "bytes32", "name": "r", "type": "bytes32"}, {"internalType": "bytes32", "name": "s", "type": "bytes32"}], "name": "permit", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "queryExit", "outputs": [{"internalType": "uint256", "name": "bptIn", "type": "uint256"}, {"internalType": "uint256[]", "name": "amountsOut", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "queryJoin", "outputs": [{"internalType": "uint256", "name": "bptOut", "type": "uint256"}, {"internalType": "uint256[]", "name": "amountsIn", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "contract IERC20", "name": "token", "type": "address"}, {"internalType": "bytes", "name": "poolConfig", "type": "bytes"}], "name": "setAssetManagerPoolConfig", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_capManager", "type": "address"}], "name": "setCapManager", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"components": [{"internalType": "bool", "name": "capEnabled", "type": "bool"}, {"internalType": "uint120", "name": "perAddressCap", "type": "uint120"}, {"internalType": "uint128", "name": "globalCap", "type": "uint128"}], "internalType": "struct ICappedLiquidity.CapParams", "name": "params", "type": "tuple"}], "name": "setCapParams", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bool", "name": "paused", "type": "bool"}], "name": "setPaused", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}], "name": "setSwapFeePercentage", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "symbol", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "totalSupply", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transfer", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transferFrom", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "unpause", "outputs": [], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"10": "contracts/3clp/Gyro3CLPPool.sol", "11": "contracts/3clp/Gyro3CLPPoolErrors.sol", "112": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IAsset.sol", "113": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IAuthorizer.sol", "114": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IBasePool.sol", "115": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IFlashLoanRecipient.sol", "117": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IMinimalSwapInfoPool.sol", "118": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IPoolSwapStructs.sol", "119": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IProtocolFeesCollector.sol", "120": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IVault.sol", "14": "contracts/CappedLiquidity.sol", "17": "contracts/LocallyPausable.sol", "36": "interfaces/ICappedLiquidity.sol", "40": "interfaces/IGyroConfig.sol", "41": "interfaces/ILocallyPausable.sol", "42": "libraries/GyroConfigKeys.sol", "43": "libraries/GyroErrors.sol", "44": "libraries/GyroFixedPoint.sol", "45": "libraries/GyroPoolMath.sol", "47": "node_modules/@balancer-labs/v2-asset-manager-utils/contracts/IAssetManager.sol", "48": "node_modules/@balancer-labs/v2-pool-utils/contracts/BalancerPoolToken.sol", "49": "node_modules/@balancer-labs/v2-pool-utils/contracts/BaseMinimalSwapInfoPool.sol", "50": "node_modules/@balancer-labs/v2-pool-utils/contracts/BasePool.sol", "51": "node_modules/@balancer-labs/v2-pool-utils/contracts/BasePoolAuthorization.sol", "61": "node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedMath.sol", "64": "node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol", "65": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/Authentication.sol", "66": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol", "69": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol", "70": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/ISignaturesValidator.sol", "71": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol", "72": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/InputHelpers.sol", "75": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/TemporarilyPausable.sol", "76": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/WordCodec.sol", "77": "node_modules/@balancer-labs/v2-solidity-utils/contracts/math/FixedPoint.sol", "78": "node_modules/@balancer-labs/v2-solidity-utils/contracts/math/LogExpMath.sol", "79": "node_modules/@balancer-labs/v2-solidity-utils/contracts/math/Math.sol", "8": "contracts/3clp/ExtensibleBaseWeightedPool.sol", "80": "node_modules/@balancer-labs/v2-solidity-utils/contracts/misc/IWETH.sol", "83": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/EIP712.sol", "84": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ERC20.sol", "85": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ERC20Permit.sol", "88": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol", "89": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20Permit.sol", "9": "contracts/3clp/Gyro3CLPMath.sol", "93": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/SafeMath.sol"}, "ast": {"absolutePath": "contracts/3clp/Gyro3CLPPool.sol", "exportedSymbols": {"Authentication": [34175], "BalancerPoolToken": [21894], "BaseMinimalSwapInfoPool": [20561], "BasePool": [23074], "BasePoolAuthorization": [23167], "BaseWeightedPool": [31399], "CappedLiquidity": [6652], "EIP712": [37410], "ERC20": [24362], "ERC20Permit": [34016], "Errors": [27925], "ExtensibleBaseWeightedPool": [3815], "FixedPoint": [33863], "Gyro3CLPMath": [4635], "Gyro3CLPPool": [6070], "Gyro3CLPPoolErrors": [6100], "GyroConfigKeys": [19096], "GyroErrors": [17105], "GyroFixedPoint": [17765], "GyroPoolMath": [18553], "IAsset": [31678], "IAssetManager": [34098], "IAuthentication": [21682], "IAuthorizer": [26381], "IBasePool": [26974], "ICappedLiquidity": [19555], "IERC20": [26910], "IERC20Permit": [37446], "IFlashLoanRecipient": [31697], "IGyroConfig": [19081], "ILocallyPausable": [24744], "IMinimalSwapInfoPool": [24381], "IPoolSwapStructs": [27021], "IProtocolFeesCollector": [31762], "ISignaturesValidator": [31640], "ITemporarilyPausable": [31659], "IVault": [20196], "IWETH": [31674], "InputHelpers": [18665], "LocallyPausable": [9169], "LogExpMath": [29333], "Math": [18954], "SafeMath": [34253], "TemporarilyPausable": [23884], "WeightedMath": [21659], "WeightedPoolUserDataHelpers": [19521], "WordCodec": [30174], "_grequire": [17050, 17069], "_grevert": [17081, 17101], "_require": [27520], "_revert": [27528]}, "id": 6071, "license": "GPL-3.0-or-later", "nodeType": "SourceUnit", "nodes": [{"id": 4637, "literals": ["solidity", "0.7", ".6"], "nodeType": "PragmaDirective", "src": "688:22:10"}, {"id": 4638, "literals": ["experimental", "ABIEncoderV2"], "nodeType": "PragmaDirective", "src": "711:33:10"}, {"absolutePath": "libraries/GyroConfigKeys.sol", "file": "../../libraries/GyroConfigKeys.sol", "id": 4639, "nodeType": "ImportDirective", "scope": 6071, "sourceUnit": 19097, "src": "746:44:10", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/IGyroConfig.sol", "file": "../../interfaces/IGyroConfig.sol", "id": 4640, "nodeType": "ImportDirective", "scope": 6071, "sourceUnit": 19082, "src": "791:42:10", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/GyroPoolMath.sol", "file": "../../libraries/GyroPoolMath.sol", "id": 4641, "nodeType": "ImportDirective", "scope": 6071, "sourceUnit": 18554, "src": "834:42:10", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/GyroErrors.sol", "file": "../../libraries/GyroErrors.sol", "id": 4642, "nodeType": "ImportDirective", "scope": 6071, "sourceUnit": 17106, "src": "877:40:10", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/3clp/ExtensibleBaseWeightedPool.sol", "file": "./ExtensibleBaseWeightedPool.sol", "id": 4643, "nodeType": "ImportDirective", "scope": 6071, "sourceUnit": 3816, "src": "919:42:10", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/3clp/Gyro3CLPMath.sol", "file": "./Gyro3CLPMath.sol", "id": 4644, "nodeType": "ImportDirective", "scope": 6071, "sourceUnit": 4636, "src": "962:28:10", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/3clp/Gyro3CLPPoolErrors.sol", "file": "./Gyro3CLPPoolErrors.sol", "id": 4645, "nodeType": "ImportDirective", "scope": 6071, "sourceUnit": 6101, "src": "991:34:10", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/CappedLiquidity.sol", "file": "../CappedLiquidity.sol", "id": 4646, "nodeType": "ImportDirective", "scope": 6071, "sourceUnit": 6653, "src": "1027:32:10", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/LocallyPausable.sol", "file": "../LocallyPausable.sol", "id": 4647, "nodeType": "ImportDirective", "scope": 6071, "sourceUnit": 9170, "src": "1060:32:10", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 4649, "name": "ExtensibleBaseWeightedPool", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 3815, "src": "1314:26:10", "typeDescriptions": {"typeIdentifier": "t_contract$_ExtensibleBaseWeightedPool_$3815", "typeString": "contract ExtensibleBaseWeightedPool"}}, "id": 4650, "nodeType": "InheritanceSpecifier", "src": "1314:26:10"}, {"baseName": {"id": 4651, "name": "CappedLiquidity", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 6652, "src": "1342:15:10", "typeDescriptions": {"typeIdentifier": "t_contract$_CappedLiquidity_$6652", "typeString": "contract CappedLiquidity"}}, "id": 4652, "nodeType": "InheritanceSpecifier", "src": "1342:15:10"}, {"baseName": {"id": 4653, "name": "LocallyPausable", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9169, "src": "1359:15:10", "typeDescriptions": {"typeIdentifier": "t_contract$_LocallyPausable_$9169", "typeString": "contract LocallyPausable"}}, "id": 4654, "nodeType": "InheritanceSpecifier", "src": "1359:15:10"}], "contractDependencies": [3815, 6652, 9169, 19555, 20561, 21682, 21894, 23074, 23167, 23884, 24362, 24381, 24744, 26910, 26974, 27021, 31659, 34016, 34175, 37410, 37446], "contractKind": "contract", "documentation": {"id": 4648, "nodeType": "StructuredDocumentation", "src": "1094:55:10", "text": " @dev Gyro Three Pool with immutable weights."}, "fullyImplemented": true, "id": 6070, "linearizedBaseContracts": [6070, 9169, 24744, 6652, 19555, 3815, 20561, 23074, 23884, 31659, 21894, 34016, 37410, 37446, 24362, 26910, 23167, 34175, 21682, 24381, 26974, 27021], "name": "Gyro3CLPPool", "nodeType": "ContractDefinition", "nodes": [{"id": 4657, "libraryName": {"id": 4655, "name": "GyroFixedPoint", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 17765, "src": "1387:14:10", "typeDescriptions": {"typeIdentifier": "t_contract$_GyroFixedPoint_$17765", "typeString": "library GyroFixedPoint"}}, "nodeType": "UsingForDirective", "src": "1381:33:10", "typeName": {"id": 4656, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1406:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"id": 4660, "libraryName": {"id": 4658, "name": "WeightedPoolUserDataHelpers", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 19521, "src": "1425:27:10", "typeDescriptions": {"typeIdentifier": "t_contract$_WeightedPoolUserDataHelpers_$19521", "typeString": "library WeightedPoolUserDataHelpers"}}, "nodeType": "UsingForDirective", "src": "1419:44:10", "typeName": {"id": 4659, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "1457:5:10", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}}, {"constant": false, "id": 4662, "mutability": "immutable", "name": "_root3Alpha", "nodeType": "VariableDeclaration", "scope": 6070, "src": "1469:37:10", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4661, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1469:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "private"}, {"constant": false, "functionSelector": "44bbdb55", "id": 4664, "mutability": "mutable", "name": "gyroConfig", "nodeType": "VariableDeclaration", "scope": 6070, "src": "1513:29:10", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$19081", "typeString": "contract IGyroConfig"}, "typeName": {"id": 4663, "name": "IGyroConfig", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 19081, "src": "1513:11:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$19081", "typeString": "contract IGyroConfig"}}, "visibility": "public"}, {"constant": true, "id": 4667, "mutability": "constant", "name": "_MAX_TOKENS", "nodeType": "VariableDeclaration", "scope": 6070, "src": "1549:40:10", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4665, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1549:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "33", "id": 4666, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1588:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}, "visibility": "private"}, {"constant": false, "id": 4669, "mutability": "immutable", "name": "_token0", "nodeType": "VariableDeclaration", "scope": 6070, "src": "1596:33:10", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}, "typeName": {"id": 4668, "name": "IERC20", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 26910, "src": "1596:6:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "visibility": "internal"}, {"constant": false, "id": 4671, "mutability": "immutable", "name": "_token1", "nodeType": "VariableDeclaration", "scope": 6070, "src": "1635:33:10", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}, "typeName": {"id": 4670, "name": "IERC20", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 26910, "src": "1635:6:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "visibility": "internal"}, {"constant": false, "id": 4673, "mutability": "immutable", "name": "_token2", "nodeType": "VariableDeclaration", "scope": 6070, "src": "1674:33:10", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}, "typeName": {"id": 4672, "name": "IERC20", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 26910, "src": "1674:6:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "visibility": "internal"}, {"constant": false, "id": 4675, "mutability": "immutable", "name": "_scalingFactor0", "nodeType": "VariableDeclaration", "scope": 6070, "src": "2064:42:10", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4674, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2064:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4677, "mutability": "immutable", "name": "_scalingFactor1", "nodeType": "VariableDeclaration", "scope": 6070, "src": "2112:42:10", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4676, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2112:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4679, "mutability": "immutable", "name": "_scalingFactor2", "nodeType": "VariableDeclaration", "scope": 6070, "src": "2160:42:10", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4678, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2160:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"canonicalName": "Gyro3CLPPool.NewPoolConfigParams", "id": 4699, "members": [{"constant": false, "id": 4681, "mutability": "mutable", "name": "name", "nodeType": "VariableDeclaration", "scope": 4699, "src": "2246:11:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}, "typeName": {"id": 4680, "name": "string", "nodeType": "ElementaryTypeName", "src": "2246:6:10", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 4683, "mutability": "mutable", "name": "symbol", "nodeType": "VariableDeclaration", "scope": 4699, "src": "2267:13:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}, "typeName": {"id": 4682, "name": "string", "nodeType": "ElementaryTypeName", "src": "2267:6:10", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 4686, "mutability": "mutable", "name": "tokens", "nodeType": "VariableDeclaration", "scope": 4699, "src": "2290:15:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_array$_t_contract$_IERC20_$26910_$dyn_storage_ptr", "typeString": "contract IERC20[]"}, "typeName": {"baseType": {"id": 4684, "name": "IERC20", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 26910, "src": "2290:6:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "id": 4685, "nodeType": "ArrayTypeName", "src": "2290:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_contract$_IERC20_$26910_$dyn_storage_ptr", "typeString": "contract IERC20[]"}}, "visibility": "internal"}, {"constant": false, "id": 4688, "mutability": "mutable", "name": "swapFeePercentage", "nodeType": "VariableDeclaration", "scope": 4699, "src": "2315:25:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4687, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2315:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4690, "mutability": "mutable", "name": "root3Alpha", "nodeType": "VariableDeclaration", "scope": 4699, "src": "2350:18:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4689, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2350:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4692, "mutability": "mutable", "name": "owner", "nodeType": "VariableDeclaration", "scope": 4699, "src": "2378:13:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4691, "name": "address", "nodeType": "ElementaryTypeName", "src": "2378:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 4694, "mutability": "mutable", "name": "capManager", "nodeType": "VariableDeclaration", "scope": 4699, "src": "2401:18:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4693, "name": "address", "nodeType": "ElementaryTypeName", "src": "2401:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 4696, "mutability": "mutable", "name": "capParams", "nodeType": "VariableDeclaration", "scope": 4699, "src": "2429:19:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_CapParams_$19539_storage_ptr", "typeString": "struct ICappedLiquidity.CapParams"}, "typeName": {"id": 4695, "name": "CapParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 19539, "src": "2429:9:10", "typeDescriptions": {"typeIdentifier": "t_struct$_CapParams_$19539_storage_ptr", "typeString": "struct ICappedLiquidity.CapParams"}}, "visibility": "internal"}, {"constant": false, "id": 4698, "mutability": "mutable", "name": "pauseManager", "nodeType": "VariableDeclaration", "scope": 4699, "src": "2458:20:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4697, "name": "address", "nodeType": "ElementaryTypeName", "src": "2458:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "name": "NewPoolConfigParams", "nodeType": "StructDefinition", "scope": 6070, "src": "2209:276:10", "visibility": "public"}, {"canonicalName": "Gyro3CLPPool.NewPoolParams", "id": 4710, "members": [{"constant": false, "id": 4701, "mutability": "mutable", "name": "vault", "nodeType": "VariableDeclaration", "scope": 4710, "src": "2522:12:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IVault_$20196", "typeString": "contract IVault"}, "typeName": {"id": 4700, "name": "IVault", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 20196, "src": "2522:6:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IVault_$20196", "typeString": "contract IVault"}}, "visibility": "internal"}, {"constant": false, "id": 4703, "mutability": "mutable", "name": "configAddress", "nodeType": "VariableDeclaration", "scope": 4710, "src": "2544:21:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4702, "name": "address", "nodeType": "ElementaryTypeName", "src": "2544:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 4705, "mutability": "mutable", "name": "config", "nodeType": "VariableDeclaration", "scope": 4710, "src": "2575:26:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolConfigParams_$4699_storage_ptr", "typeString": "struct Gyro3CLPPool.NewPoolConfigParams"}, "typeName": {"id": 4704, "name": "NewPoolConfigParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 4699, "src": "2575:19:10", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolConfigParams_$4699_storage_ptr", "typeString": "struct Gyro3CLPPool.NewPoolConfigParams"}}, "visibility": "internal"}, {"constant": false, "id": 4707, "mutability": "mutable", "name": "pauseWindowDuration", "nodeType": "VariableDeclaration", "scope": 4710, "src": "2611:27:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4706, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2611:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4709, "mutability": "mutable", "name": "bufferPeriodDuration", "nodeType": "VariableDeclaration", "scope": 4710, "src": "2648:28:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4708, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2648:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "name": "NewPoolParams", "nodeType": "StructDefinition", "scope": 6070, "src": "2491:192:10", "visibility": "public"}, {"body": {"id": 4864, "nodeType": "Block", "src": "3221:1033:10", "statements": [{"assignments": [4759], "declarations": [{"constant": false, "id": 4759, "mutability": "mutable", "name": "tokens", "nodeType": "VariableDeclaration", "scope": 4864, "src": "3231:22:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_contract$_IERC20_$26910_$dyn_memory_ptr", "typeString": "contract IERC20[]"}, "typeName": {"baseType": {"id": 4757, "name": "IERC20", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 26910, "src": "3231:6:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "id": 4758, "nodeType": "ArrayTypeName", "src": "3231:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_contract$_IERC20_$26910_$dyn_storage_ptr", "typeString": "contract IERC20[]"}}, "visibility": "internal"}], "id": 4763, "initialValue": {"expression": {"expression": {"id": 4760, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4712, "src": "3256:6:10", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$4710_memory_ptr", "typeString": "struct Gyro3CLPPool.NewPoolParams memory"}}, "id": 4761, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "config", "nodeType": "MemberAccess", "referencedDeclaration": 4705, "src": "3256:13:10", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolConfigParams_$4699_memory_ptr", "typeString": "struct Gyro3CLPPool.NewPoolConfigParams memory"}}, "id": 4762, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokens", "nodeType": "MemberAccess", "referencedDeclaration": 4686, "src": "3256:20:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_contract$_IERC20_$26910_$dyn_memory_ptr", "typeString": "contract IERC20[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "3231:45:10"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4768, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 4765, "name": "tokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4759, "src": "3296:6:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_contract$_IERC20_$26910_$dyn_memory_ptr", "typeString": "contract IERC20[] memory"}}, "id": 4766, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "3296:13:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "33", "id": 4767, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3313:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}, "src": "3296:18:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 4769, "name": "Gyro3CLPPoolErrors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6100, "src": "3316:18:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro3CLPPoolErrors_$6100_$", "typeString": "type(library Gyro3CLPPoolErrors)"}}, "id": 4770, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "TOKENS_LENGTH_MUST_BE_3", "nodeType": "MemberAccess", "referencedDeclaration": 6096, "src": "3316:42:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 4764, "name": "_grequire", "nodeType": "Identifier", "overloadedDeclarations": [17050, 17069], "referencedDeclaration": 17050, "src": "3286:9:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 4771, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3286:73:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4772, "nodeType": "ExpressionStatement", "src": "3286:73:10"}, {"expression": {"arguments": [{"id": 4776, "name": "tokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4759, "src": "3402:6:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_contract$_IERC20_$26910_$dyn_memory_ptr", "typeString": "contract IERC20[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_contract$_IERC20_$26910_$dyn_memory_ptr", "typeString": "contract IERC20[] memory"}], "expression": {"id": 4773, "name": "InputHelpers", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18665, "src": "3369:12:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_InputHelpers_$18665_$", "typeString": "type(library InputHelpers)"}}, "id": 4775, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ensureArrayIsSorted", "nodeType": "MemberAccess", "referencedDeclaration": 18613, "src": "3369:32:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_contract$_IERC20_$26910_$dyn_memory_ptr_$returns$__$", "typeString": "function (contract IERC20[] memory) pure"}}, "id": 4777, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3369:40:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4778, "nodeType": "ExpressionStatement", "src": "3369:40:10"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 4786, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 4780, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4712, "src": "3496:6:10", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$4710_memory_ptr", "typeString": "struct Gyro3CLPPool.NewPoolParams memory"}}, "id": 4781, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "configAddress", "nodeType": "MemberAccess", "referencedDeclaration": 4703, "src": "3496:20:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 4784, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3528:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 4783, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3520:7:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 4782, "name": "address", "nodeType": "ElementaryTypeName", "src": "3520:7:10", "typeDescriptions": {}}}, "id": 4785, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3520:10:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "3496:34:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 4787, "name": "GyroErrors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17105, "src": "3532:10:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroErrors_$17105_$", "typeString": "type(library GyroErrors)"}}, "id": 4788, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ZERO_ADDRESS", "nodeType": "MemberAccess", "referencedDeclaration": 17104, "src": "3532:23:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 4779, "name": "_grequire", "nodeType": "Identifier", "overloadedDeclarations": [17050, 17069], "referencedDeclaration": 17050, "src": "3486:9:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 4789, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3486:70:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4790, "nodeType": "ExpressionStatement", "src": "3486:70:10"}, {"expression": {"id": 4795, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4791, "name": "_token0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4669, "src": "3567:7:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"baseExpression": {"id": 4792, "name": "tokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4759, "src": "3577:6:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_contract$_IERC20_$26910_$dyn_memory_ptr", "typeString": "contract IERC20[] memory"}}, "id": 4794, "indexExpression": {"hexValue": "30", "id": 4793, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3584:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3577:9:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "src": "3567:19:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "id": 4796, "nodeType": "ExpressionStatement", "src": "3567:19:10"}, {"expression": {"id": 4801, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4797, "name": "_token1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4671, "src": "3596:7:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"baseExpression": {"id": 4798, "name": "tokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4759, "src": "3606:6:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_contract$_IERC20_$26910_$dyn_memory_ptr", "typeString": "contract IERC20[] memory"}}, "id": 4800, "indexExpression": {"hexValue": "31", "id": 4799, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3613:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3606:9:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "src": "3596:19:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "id": 4802, "nodeType": "ExpressionStatement", "src": "3596:19:10"}, {"expression": {"id": 4807, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4803, "name": "_token2", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4673, "src": "3625:7:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"baseExpression": {"id": 4804, "name": "tokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4759, "src": "3635:6:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_contract$_IERC20_$26910_$dyn_memory_ptr", "typeString": "contract IERC20[] memory"}}, "id": 4806, "indexExpression": {"hexValue": "32", "id": 4805, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3642:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3635:9:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "src": "3625:19:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "id": 4808, "nodeType": "ExpressionStatement", "src": "3625:19:10"}, {"expression": {"id": 4815, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4809, "name": "_scalingFactor0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4675, "src": "3655:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"baseExpression": {"id": 4811, "name": "tokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4759, "src": "3695:6:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_contract$_IERC20_$26910_$dyn_memory_ptr", "typeString": "contract IERC20[] memory"}}, "id": 4813, "indexExpression": {"hexValue": "30", "id": 4812, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3702:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3695:9:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}], "id": 4810, "name": "_computeScalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22755, "src": "3673:21:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$26910_$returns$_t_uint256_$", "typeString": "function (contract IERC20) view returns (uint256)"}}, "id": 4814, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3673:32:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3655:50:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4816, "nodeType": "ExpressionStatement", "src": "3655:50:10"}, {"expression": {"id": 4823, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4817, "name": "_scalingFactor1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4677, "src": "3715:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"baseExpression": {"id": 4819, "name": "tokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4759, "src": "3755:6:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_contract$_IERC20_$26910_$dyn_memory_ptr", "typeString": "contract IERC20[] memory"}}, "id": 4821, "indexExpression": {"hexValue": "31", "id": 4820, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3762:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3755:9:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}], "id": 4818, "name": "_computeScalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22755, "src": "3733:21:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$26910_$returns$_t_uint256_$", "typeString": "function (contract IERC20) view returns (uint256)"}}, "id": 4822, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3733:32:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3715:50:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4824, "nodeType": "ExpressionStatement", "src": "3715:50:10"}, {"expression": {"id": 4831, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4825, "name": "_scalingFactor2", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4679, "src": "3775:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"baseExpression": {"id": 4827, "name": "tokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4759, "src": "3815:6:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_contract$_IERC20_$26910_$dyn_memory_ptr", "typeString": "contract IERC20[] memory"}}, "id": 4829, "indexExpression": {"hexValue": "32", "id": 4828, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3822:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3815:9:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}], "id": 4826, "name": "_computeScalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22755, "src": "3793:21:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$26910_$returns$_t_uint256_$", "typeString": "function (contract IERC20) view returns (uint256)"}}, "id": 4830, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3793:32:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3775:50:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4832, "nodeType": "ExpressionStatement", "src": "3775:50:10"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 4846, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4839, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 4834, "name": "Gyro3CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4635, "src": "3962:12:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro3CLPMath_$4635_$", "typeString": "type(library Gyro3CLPMath)"}}, "id": 4835, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_MIN_ROOT_3_ALPHA", "nodeType": "MemberAccess", "referencedDeclaration": 3842, "src": "3962:30:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"expression": {"expression": {"id": 4836, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4712, "src": "3996:6:10", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$4710_memory_ptr", "typeString": "struct Gyro3CLPPool.NewPoolParams memory"}}, "id": 4837, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "config", "nodeType": "MemberAccess", "referencedDeclaration": 4705, "src": "3996:13:10", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolConfigParams_$4699_memory_ptr", "typeString": "struct Gyro3CLPPool.NewPoolConfigParams memory"}}, "id": 4838, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "root3Alpha", "nodeType": "MemberAccess", "referencedDeclaration": 4690, "src": "3996:24:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3962:58:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4845, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"expression": {"id": 4840, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4712, "src": "4024:6:10", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$4710_memory_ptr", "typeString": "struct Gyro3CLPPool.NewPoolParams memory"}}, "id": 4841, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "config", "nodeType": "MemberAccess", "referencedDeclaration": 4705, "src": "4024:13:10", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolConfigParams_$4699_memory_ptr", "typeString": "struct Gyro3CLPPool.NewPoolConfigParams memory"}}, "id": 4842, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "root3Alpha", "nodeType": "MemberAccess", "referencedDeclaration": 4690, "src": "4024:24:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"expression": {"id": 4843, "name": "Gyro3CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4635, "src": "4052:12:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro3CLPMath_$4635_$", "typeString": "type(library Gyro3CLPMath)"}}, "id": 4844, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_MAX_ROOT_3_ALPHA", "nodeType": "MemberAccess", "referencedDeclaration": 3845, "src": "4052:30:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4024:58:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "3962:120:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 4847, "name": "Gyro3CLPPoolErrors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6100, "src": "4096:18:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro3CLPPoolErrors_$6100_$", "typeString": "type(library Gyro3CLPPoolErrors)"}}, "id": 4848, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "PRICE_BOUNDS_WRONG", "nodeType": "MemberAccess", "referencedDeclaration": 6075, "src": "4096:37:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 4833, "name": "_grequire", "nodeType": "Identifier", "overloadedDeclarations": [17050, 17069], "referencedDeclaration": 17050, "src": "3939:9:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 4849, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3939:204:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4850, "nodeType": "ExpressionStatement", "src": "3939:204:10"}, {"expression": {"id": 4855, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4851, "name": "_root3Alpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4662, "src": "4153:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"expression": {"id": 4852, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4712, "src": "4167:6:10", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$4710_memory_ptr", "typeString": "struct Gyro3CLPPool.NewPoolParams memory"}}, "id": 4853, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "config", "nodeType": "MemberAccess", "referencedDeclaration": 4705, "src": "4167:13:10", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolConfigParams_$4699_memory_ptr", "typeString": "struct Gyro3CLPPool.NewPoolConfigParams memory"}}, "id": 4854, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "root3Alpha", "nodeType": "MemberAccess", "referencedDeclaration": 4690, "src": "4167:24:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4153:38:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4856, "nodeType": "ExpressionStatement", "src": "4153:38:10"}, {"expression": {"id": 4862, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4857, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4664, "src": "4201:10:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$19081", "typeString": "contract IGyroConfig"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 4859, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4712, "src": "4226:6:10", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$4710_memory_ptr", "typeString": "struct Gyro3CLPPool.NewPoolParams memory"}}, "id": 4860, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "configAddress", "nodeType": "MemberAccess", "referencedDeclaration": 4703, "src": "4226:20:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 4858, "name": "IGyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19081, "src": "4214:11:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IGyroConfig_$19081_$", "typeString": "type(contract IGyroConfig)"}}, "id": 4861, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4214:33:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$19081", "typeString": "contract IGyroConfig"}}, "src": "4201:46:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$19081", "typeString": "contract IGyroConfig"}}, "id": 4863, "nodeType": "ExpressionStatement", "src": "4201:46:10"}]}, "id": 4865, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"expression": {"id": 4715, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4712, "src": "2778:6:10", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$4710_memory_ptr", "typeString": "struct Gyro3CLPPool.NewPoolParams memory"}}, "id": 4716, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "vault", "nodeType": "MemberAccess", "referencedDeclaration": 4701, "src": "2778:12:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IVault_$20196", "typeString": "contract IVault"}}, {"expression": {"expression": {"id": 4717, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4712, "src": "2804:6:10", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$4710_memory_ptr", "typeString": "struct Gyro3CLPPool.NewPoolParams memory"}}, "id": 4718, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "config", "nodeType": "MemberAccess", "referencedDeclaration": 4705, "src": "2804:13:10", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolConfigParams_$4699_memory_ptr", "typeString": "struct Gyro3CLPPool.NewPoolConfigParams memory"}}, "id": 4719, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "name", "nodeType": "MemberAccess", "referencedDeclaration": 4681, "src": "2804:18:10", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, {"expression": {"expression": {"id": 4720, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4712, "src": "2836:6:10", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$4710_memory_ptr", "typeString": "struct Gyro3CLPPool.NewPoolParams memory"}}, "id": 4721, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "config", "nodeType": "MemberAccess", "referencedDeclaration": 4705, "src": "2836:13:10", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolConfigParams_$4699_memory_ptr", "typeString": "struct Gyro3CLPPool.NewPoolConfigParams memory"}}, "id": 4722, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "symbol", "nodeType": "MemberAccess", "referencedDeclaration": 4683, "src": "2836:20:10", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, {"expression": {"expression": {"id": 4723, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4712, "src": "2870:6:10", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$4710_memory_ptr", "typeString": "struct Gyro3CLPPool.NewPoolParams memory"}}, "id": 4724, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "config", "nodeType": "MemberAccess", "referencedDeclaration": 4705, "src": "2870:13:10", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolConfigParams_$4699_memory_ptr", "typeString": "struct Gyro3CLPPool.NewPoolConfigParams memory"}}, "id": 4725, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokens", "nodeType": "MemberAccess", "referencedDeclaration": 4686, "src": "2870:20:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_contract$_IERC20_$26910_$dyn_memory_ptr", "typeString": "contract IERC20[] memory"}}, {"arguments": [{"hexValue": "33", "id": 4729, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2918:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}], "id": 4728, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "2904:13:10", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (address[] memory)"}, "typeName": {"baseType": {"id": 4726, "name": "address", "nodeType": "ElementaryTypeName", "src": "2908:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 4727, "nodeType": "ArrayTypeName", "src": "2908:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}}, "id": 4730, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2904:16:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, {"expression": {"expression": {"id": 4731, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4712, "src": "2934:6:10", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$4710_memory_ptr", "typeString": "struct Gyro3CLPPool.NewPoolParams memory"}}, "id": 4732, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "config", "nodeType": "MemberAccess", "referencedDeclaration": 4705, "src": "2934:13:10", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolConfigParams_$4699_memory_ptr", "typeString": "struct Gyro3CLPPool.NewPoolConfigParams memory"}}, "id": 4733, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "swapFeePercentage", "nodeType": "MemberAccess", "referencedDeclaration": 4688, "src": "2934:31:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 4734, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4712, "src": "2979:6:10", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$4710_memory_ptr", "typeString": "struct Gyro3CLPPool.NewPoolParams memory"}}, "id": 4735, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "pauseWindowDuration", "nodeType": "MemberAccess", "referencedDeclaration": 4707, "src": "2979:26:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 4736, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4712, "src": "3019:6:10", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$4710_memory_ptr", "typeString": "struct Gyro3CLPPool.NewPoolParams memory"}}, "id": 4737, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "bufferPeriodDuration", "nodeType": "MemberAccess", "referencedDeclaration": 4709, "src": "3019:27:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"expression": {"id": 4738, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4712, "src": "3060:6:10", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$4710_memory_ptr", "typeString": "struct Gyro3CLPPool.NewPoolParams memory"}}, "id": 4739, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "config", "nodeType": "MemberAccess", "referencedDeclaration": 4705, "src": "3060:13:10", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolConfigParams_$4699_memory_ptr", "typeString": "struct Gyro3CLPPool.NewPoolConfigParams memory"}}, "id": 4740, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "owner", "nodeType": "MemberAccess", "referencedDeclaration": 4692, "src": "3060:19:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 4741, "modifierName": {"id": 4714, "name": "ExtensibleBaseWeightedPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3815, "src": "2738:26:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ExtensibleBaseWeightedPool_$3815_$", "typeString": "type(contract ExtensibleBaseWeightedPool)"}}, "nodeType": "ModifierInvocation", "src": "2738:351:10"}, {"arguments": [{"expression": {"expression": {"id": 4743, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4712, "src": "3114:6:10", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$4710_memory_ptr", "typeString": "struct Gyro3CLPPool.NewPoolParams memory"}}, "id": 4744, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "config", "nodeType": "MemberAccess", "referencedDeclaration": 4705, "src": "3114:13:10", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolConfigParams_$4699_memory_ptr", "typeString": "struct Gyro3CLPPool.NewPoolConfigParams memory"}}, "id": 4745, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "capManager", "nodeType": "MemberAccess", "referencedDeclaration": 4694, "src": "3114:24:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"expression": {"id": 4746, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4712, "src": "3140:6:10", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$4710_memory_ptr", "typeString": "struct Gyro3CLPPool.NewPoolParams memory"}}, "id": 4747, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "config", "nodeType": "MemberAccess", "referencedDeclaration": 4705, "src": "3140:13:10", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolConfigParams_$4699_memory_ptr", "typeString": "struct Gyro3CLPPool.NewPoolConfigParams memory"}}, "id": 4748, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "capParams", "nodeType": "MemberAccess", "referencedDeclaration": 4696, "src": "3140:23:10", "typeDescriptions": {"typeIdentifier": "t_struct$_CapParams_$19539_memory_ptr", "typeString": "struct ICappedLiquidity.CapParams memory"}}], "id": 4749, "modifierName": {"id": 4742, "name": "CappedLiquidity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6652, "src": "3098:15:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_CappedLiquidity_$6652_$", "typeString": "type(contract CappedLiquidity)"}}, "nodeType": "ModifierInvocation", "src": "3098:66:10"}, {"arguments": [{"expression": {"expression": {"id": 4751, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4712, "src": "3189:6:10", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$4710_memory_ptr", "typeString": "struct Gyro3CLPPool.NewPoolParams memory"}}, "id": 4752, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "config", "nodeType": "MemberAccess", "referencedDeclaration": 4705, "src": "3189:13:10", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolConfigParams_$4699_memory_ptr", "typeString": "struct Gyro3CLPPool.NewPoolConfigParams memory"}}, "id": 4753, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "pauseManager", "nodeType": "MemberAccess", "referencedDeclaration": 4698, "src": "3189:26:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 4754, "modifierName": {"id": 4750, "name": "LocallyPausable", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9169, "src": "3173:15:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_LocallyPausable_$9169_$", "typeString": "type(contract LocallyPausable)"}}, "nodeType": "ModifierInvocation", "src": "3173:43:10"}], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 4713, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4712, "mutability": "mutable", "name": "params", "nodeType": "VariableDeclaration", "scope": 4865, "src": "2701:27:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$4710_memory_ptr", "typeString": "struct Gyro3CLPPool.NewPoolParams"}, "typeName": {"id": 4711, "name": "NewPoolParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 4710, "src": "2701:13:10", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$4710_storage_ptr", "typeString": "struct Gyro3CLPPool.NewPoolParams"}}, "visibility": "internal"}], "src": "2700:29:10"}, "returnParameters": {"id": 4755, "nodeType": "ParameterList", "parameters": [], "src": "3221:0:10"}, "scope": 6070, "src": "2689:1565:10", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 4872, "nodeType": "Block", "src": "4317:35:10", "statements": [{"expression": {"id": 4870, "name": "_root3Alpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4662, "src": "4334:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 4869, "id": 4871, "nodeType": "Return", "src": "4327:18:10"}]}, "functionSelector": "d60ca603", "id": 4873, "implemented": true, "kind": "function", "modifiers": [], "name": "getRoot3Alpha", "nodeType": "FunctionDefinition", "parameters": {"id": 4866, "nodeType": "ParameterList", "parameters": [], "src": "4282:2:10"}, "returnParameters": {"id": 4869, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4868, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 4873, "src": "4308:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4867, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4308:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4307:9:10"}, "scope": 6070, "src": "4260:92:10", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"baseFunctions": [2660], "body": {"id": 4886, "nodeType": "Block", "src": "4637:46:10", "statements": [{"expression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4884, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 4881, "name": "GyroFixedPoint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17765, "src": "4654:14:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroFixedPoint_$17765_$", "typeString": "type(library GyroFixedPoint)"}}, "id": 4882, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ONE", "nodeType": "MemberAccess", "referencedDeclaration": 17113, "src": "4654:18:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"hexValue": "33", "id": 4883, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4675:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}, "src": "4654:22:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 4880, "id": 4885, "nodeType": "Return", "src": "4647:29:10"}]}, "id": 4887, "implemented": true, "kind": "function", "modifiers": [], "name": "_getNormalizedWeight", "nodeType": "FunctionDefinition", "overrides": {"id": 4877, "nodeType": "OverrideSpecifier", "overrides": [], "src": "4610:8:10"}, "parameters": {"id": 4876, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4875, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 4887, "src": "4580:6:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}, "typeName": {"id": 4874, "name": "IERC20", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 26910, "src": "4580:6:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "visibility": "internal"}], "src": "4579:8:10"}, "returnParameters": {"id": 4880, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4879, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 4887, "src": "4628:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4878, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4628:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4627:9:10"}, "scope": 6070, "src": "4550:133:10", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"baseFunctions": [2667], "body": {"id": 4935, "nodeType": "Block", "src": "4780:324:10", "statements": [{"assignments": [4898], "declarations": [{"constant": false, "id": 4898, "mutability": "mutable", "name": "normalizedWeights", "nodeType": "VariableDeclaration", "scope": 4935, "src": "4790:34:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 4896, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4790:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4897, "nodeType": "ArrayTypeName", "src": "4790:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 4904, "initialValue": {"arguments": [{"hexValue": "33", "id": 4902, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4841:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}], "id": 4901, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "4827:13:10", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 4899, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4831:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4900, "nodeType": "ArrayTypeName", "src": "4831:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 4903, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4827:16:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "4790:53:10"}, {"id": 4932, "nodeType": "Block", "src": "4881:182:10", "statements": [{"expression": {"id": 4912, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 4905, "name": "normalizedWeights", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4898, "src": "4895:17:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 4907, "indexExpression": {"hexValue": "30", "id": 4906, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4913:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "4895:20:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4911, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 4908, "name": "GyroFixedPoint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17765, "src": "4918:14:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroFixedPoint_$17765_$", "typeString": "type(library GyroFixedPoint)"}}, "id": 4909, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ONE", "nodeType": "MemberAccess", "referencedDeclaration": 17113, "src": "4918:18:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"hexValue": "33", "id": 4910, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4937:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}, "src": "4918:20:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4895:43:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4913, "nodeType": "ExpressionStatement", "src": "4895:43:10"}, {"expression": {"id": 4921, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 4914, "name": "normalizedWeights", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4898, "src": "4952:17:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 4916, "indexExpression": {"hexValue": "31", "id": 4915, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4970:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "4952:20:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4920, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 4917, "name": "GyroFixedPoint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17765, "src": "4975:14:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroFixedPoint_$17765_$", "typeString": "type(library GyroFixedPoint)"}}, "id": 4918, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ONE", "nodeType": "MemberAccess", "referencedDeclaration": 17113, "src": "4975:18:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"hexValue": "33", "id": 4919, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4994:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}, "src": "4975:20:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4952:43:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4922, "nodeType": "ExpressionStatement", "src": "4952:43:10"}, {"expression": {"id": 4930, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 4923, "name": "normalizedWeights", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4898, "src": "5009:17:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 4925, "indexExpression": {"hexValue": "32", "id": 4924, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5027:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "5009:20:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4929, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 4926, "name": "GyroFixedPoint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17765, "src": "5032:14:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroFixedPoint_$17765_$", "typeString": "type(library GyroFixedPoint)"}}, "id": 4927, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ONE", "nodeType": "MemberAccess", "referencedDeclaration": 17113, "src": "5032:18:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"hexValue": "33", "id": 4928, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5051:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}, "src": "5032:20:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5009:43:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4931, "nodeType": "ExpressionStatement", "src": "5009:43:10"}]}, {"expression": {"id": 4933, "name": "normalizedWeights", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4898, "src": "5080:17:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "functionReturnParameters": 4893, "id": 4934, "nodeType": "Return", "src": "5073:24:10"}]}, "id": 4936, "implemented": true, "kind": "function", "modifiers": [], "name": "_getNormalizedWeights", "nodeType": "FunctionDefinition", "overrides": {"id": 4889, "nodeType": "OverrideSpecifier", "overrides": [], "src": "4744:8:10"}, "parameters": {"id": 4888, "nodeType": "ParameterList", "parameters": [], "src": "4719:2:10"}, "returnParameters": {"id": 4893, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4892, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 4936, "src": "4762:16:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 4890, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4762:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4891, "nodeType": "ArrayTypeName", "src": "4762:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "4761:18:10"}, "scope": 6070, "src": "4689:415:10", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"baseFunctions": [2676], "body": {"id": 4951, "nodeType": "Block", "src": "5333:52:10", "statements": [{"expression": {"components": [{"arguments": [], "expression": {"argumentTypes": [], "id": 4946, "name": "_getNormalizedWeights", "nodeType": "Identifier", "overloadedDeclarations": [4936], "referencedDeclaration": 4936, "src": "5351:21:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function () view returns (uint256[] memory)"}}, "id": 4947, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5351:23:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"hexValue": "30", "id": 4948, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5376:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "id": 4949, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "5350:28:10", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_rational_0_by_1_$", "typeString": "tuple(uint256[] memory,int_const 0)"}}, "functionReturnParameters": 4945, "id": 4950, "nodeType": "Return", "src": "5343:35:10"}]}, "documentation": {"id": 4937, "nodeType": "StructuredDocumentation", "src": "5110:101:10", "text": "@dev Since all weights are always the same, the max-weight token is arbitrary. We return token 0."}, "id": 4952, "implemented": true, "kind": "function", "modifiers": [], "name": "_getNormalizedWeightsAndMaxWeightIndex", "nodeType": "FunctionDefinition", "overrides": {"id": 4939, "nodeType": "OverrideSpecifier", "overrides": [], "src": "5288:8:10"}, "parameters": {"id": 4938, "nodeType": "ParameterList", "parameters": [], "src": "5263:2:10"}, "returnParameters": {"id": 4945, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4942, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 4952, "src": "5306:16:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 4940, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5306:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4941, "nodeType": "ArrayTypeName", "src": "5306:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 4944, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 4952, "src": "5324:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4943, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5324:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5305:27:10"}, "scope": 6070, "src": "5216:169:10", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"baseFunctions": [22061], "body": {"id": 4960, "nodeType": "Block", "src": "5465:35:10", "statements": [{"expression": {"id": 4958, "name": "_MAX_TOKENS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4667, "src": "5482:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 4957, "id": 4959, "nodeType": "Return", "src": "5475:18:10"}]}, "id": 4961, "implemented": true, "kind": "function", "modifiers": [], "name": "_getMaxTokens", "nodeType": "FunctionDefinition", "overrides": {"id": 4954, "nodeType": "OverrideSpecifier", "overrides": [], "src": "5438:8:10"}, "parameters": {"id": 4953, "nodeType": "ParameterList", "parameters": [], "src": "5413:2:10"}, "returnParameters": {"id": 4957, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4956, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 4961, "src": "5456:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4955, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5456:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5455:9:10"}, "scope": 6070, "src": "5391:109:10", "stateMutability": "pure", "virtual": true, "visibility": "internal"}, {"baseFunctions": [22056], "body": {"id": 4969, "nodeType": "Block", "src": "5582:25:10", "statements": [{"expression": {"hexValue": "33", "id": 4967, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5599:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}, "functionReturnParameters": 4966, "id": 4968, "nodeType": "Return", "src": "5592:8:10"}]}, "id": 4970, "implemented": true, "kind": "function", "modifiers": [], "name": "_getTotalTokens", "nodeType": "FunctionDefinition", "overrides": {"id": 4963, "nodeType": "OverrideSpecifier", "overrides": [], "src": "5555:8:10"}, "parameters": {"id": 4962, "nodeType": "ParameterList", "parameters": [], "src": "5530:2:10"}, "returnParameters": {"id": 4966, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4965, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 4970, "src": "5573:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4964, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5573:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5572:9:10"}, "scope": 6070, "src": "5506:101:10", "stateMutability": "pure", "virtual": true, "visibility": "internal"}, {"baseFunctions": [22763], "body": {"id": 5012, "nodeType": "Block", "src": "5864:322:10", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}, "id": 4981, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4979, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4973, "src": "5878:5:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 4980, "name": "_token0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4669, "src": "5887:7:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "src": "5878:16:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"condition": {"commonType": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}, "id": 4989, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4987, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4973, "src": "5962:5:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 4988, "name": "_token1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4671, "src": "5971:7:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "src": "5962:16:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"condition": {"commonType": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}, "id": 4997, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4995, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4973, "src": "6046:5:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 4996, "name": "_token2", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4673, "src": "6055:7:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "src": "6046:16:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 5008, "nodeType": "Block", "src": "6126:54:10", "statements": [{"expression": {"arguments": [{"expression": {"id": 5004, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 27925, "src": "6148:6:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$27925_$", "typeString": "type(library Errors)"}}, "id": 5005, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "INVALID_TOKEN", "nodeType": "MemberAccess", "referencedDeclaration": 27636, "src": "6148:20:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 5003, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 27528, "src": "6140:7:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$", "typeString": "function (uint256) pure"}}, "id": 5006, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6140:29:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5007, "nodeType": "ExpressionStatement", "src": "6140:29:10"}]}, "id": 5009, "nodeType": "IfStatement", "src": "6042:138:10", "trueBody": {"id": 5002, "nodeType": "Block", "src": "6064:56:10", "statements": [{"expression": {"id": 5000, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4998, "name": "scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4977, "src": "6078:13:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 4999, "name": "_scalingFactor2", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4679, "src": "6094:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6078:31:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5001, "nodeType": "ExpressionStatement", "src": "6078:31:10"}]}}, "id": 5010, "nodeType": "IfStatement", "src": "5958:222:10", "trueBody": {"id": 4994, "nodeType": "Block", "src": "5980:56:10", "statements": [{"expression": {"id": 4992, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4990, "name": "scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4977, "src": "5994:13:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 4991, "name": "_scalingFactor1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4677, "src": "6010:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5994:31:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4993, "nodeType": "ExpressionStatement", "src": "5994:31:10"}]}}, "id": 5011, "nodeType": "IfStatement", "src": "5874:306:10", "trueBody": {"id": 4986, "nodeType": "Block", "src": "5896:56:10", "statements": [{"expression": {"id": 4984, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4982, "name": "scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4977, "src": "5910:13:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 4983, "name": "_scalingFactor0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4675, "src": "5926:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5910:31:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4985, "nodeType": "ExpressionStatement", "src": "5910:31:10"}]}}]}, "documentation": {"id": 4971, "nodeType": "StructuredDocumentation", "src": "5613:145:10", "text": " @dev Returns the scaling factor for one of the Pool's tokens. Reverts if `token` is not a token registered by the\n Pool."}, "id": 5013, "implemented": true, "kind": "function", "modifiers": [], "name": "_scalingFactor", "nodeType": "FunctionDefinition", "overrides": {"id": 4975, "nodeType": "OverrideSpecifier", "overrides": [], "src": "5823:8:10"}, "parameters": {"id": 4974, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4973, "mutability": "mutable", "name": "token", "nodeType": "VariableDeclaration", "scope": 5013, "src": "5787:12:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}, "typeName": {"id": 4972, "name": "IERC20", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 26910, "src": "5787:6:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "visibility": "internal"}], "src": "5786:14:10"}, "returnParameters": {"id": 4978, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4977, "mutability": "mutable", "name": "scalingFactor", "nodeType": "VariableDeclaration", "scope": 5013, "src": "5841:21:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4976, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5841:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5840:23:10"}, "scope": 6070, "src": "5763:423:10", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"baseFunctions": [22770], "body": {"id": 5057, "nodeType": "Block", "src": "6277:353:10", "statements": [{"assignments": [5021], "declarations": [{"constant": false, "id": 5021, "mutability": "mutable", "name": "totalTokens", "nodeType": "VariableDeclaration", "scope": 5057, "src": "6287:19:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5020, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6287:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 5024, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 5022, "name": "_getTotalTokens", "nodeType": "Identifier", "overloadedDeclarations": [4970], "referencedDeclaration": 4970, "src": "6309:15:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$", "typeString": "function () pure returns (uint256)"}}, "id": 5023, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6309:17:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6287:39:10"}, {"assignments": [5029], "declarations": [{"constant": false, "id": 5029, "mutability": "mutable", "name": "scalingFactors", "nodeType": "VariableDeclaration", "scope": 5057, "src": "6336:31:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 5027, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6336:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5028, "nodeType": "ArrayTypeName", "src": "6336:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 5035, "initialValue": {"arguments": [{"id": 5033, "name": "totalTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5021, "src": "6384:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 5032, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "6370:13:10", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 5030, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6374:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5031, "nodeType": "ArrayTypeName", "src": "6374:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 5034, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6370:26:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "6336:60:10"}, {"id": 5054, "nodeType": "Block", "src": "6434:158:10", "statements": [{"expression": {"id": 5040, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 5036, "name": "scalingFactors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5029, "src": "6448:14:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 5038, "indexExpression": {"hexValue": "30", "id": 5037, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6463:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "6448:17:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 5039, "name": "_scalingFactor0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4675, "src": "6468:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6448:35:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5041, "nodeType": "ExpressionStatement", "src": "6448:35:10"}, {"expression": {"id": 5046, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 5042, "name": "scalingFactors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5029, "src": "6497:14:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 5044, "indexExpression": {"hexValue": "31", "id": 5043, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6512:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "6497:17:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 5045, "name": "_scalingFactor1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4677, "src": "6517:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6497:35:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5047, "nodeType": "ExpressionStatement", "src": "6497:35:10"}, {"expression": {"id": 5052, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 5048, "name": "scalingFactors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5029, "src": "6546:14:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 5050, "indexExpression": {"hexValue": "32", "id": 5049, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6561:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "6546:17:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 5051, "name": "_scalingFactor2", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4679, "src": "6566:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6546:35:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5053, "nodeType": "ExpressionStatement", "src": "6546:35:10"}]}, {"expression": {"id": 5055, "name": "scalingFactors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5029, "src": "6609:14:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "functionReturnParameters": 5019, "id": 5056, "nodeType": "Return", "src": "6602:21:10"}]}, "id": 5058, "implemented": true, "kind": "function", "modifiers": [], "name": "_scalingFactors", "nodeType": "FunctionDefinition", "overrides": {"id": 5015, "nodeType": "OverrideSpecifier", "overrides": [], "src": "6241:8:10"}, "parameters": {"id": 5014, "nodeType": "ParameterList", "parameters": [], "src": "6216:2:10"}, "returnParameters": {"id": 5019, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5018, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 5058, "src": "6259:16:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 5016, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6259:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5017, "nodeType": "ArrayTypeName", "src": "6259:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "6258:18:10"}, "scope": 6070, "src": "6192:438:10", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"baseFunctions": [2764], "body": {"id": 5087, "nodeType": "Block", "src": "7007:230:10", "statements": [{"assignments": [5073], "declarations": [{"constant": false, "id": 5073, "mutability": "mutable", "name": "virtualOffset", "nodeType": "VariableDeclaration", "scope": 5087, "src": "7017:21:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5072, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7017:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 5079, "initialValue": {"arguments": [{"id": 5075, "name": "swapRequest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5060, "src": "7065:11:10", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27020_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, {"id": 5076, "name": "currentBalanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5062, "src": "7078:21:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 5077, "name": "currentBalanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5064, "src": "7101:22:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_SwapRequest_$27020_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 5074, "name": "_calculateVirtualOffset", "nodeType": "Identifier", "overloadedDeclarations": [5286, 5315, 5372], "referencedDeclaration": 5286, "src": "7041:23:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_SwapRequest_$27020_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (struct IPoolSwapStructs.SwapRequest memory,uint256,uint256) view returns (uint256)"}}, "id": 5078, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7041:83:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "7017:107:10"}, {"expression": {"arguments": [{"id": 5081, "name": "swapRequest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5060, "src": "7156:11:10", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27020_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, {"id": 5082, "name": "currentBalanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5062, "src": "7169:21:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 5083, "name": "currentBalanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5064, "src": "7192:22:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 5084, "name": "virtualOffset", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5073, "src": "7216:13:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_SwapRequest_$27020_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 5080, "name": "_onSwapGivenIn", "nodeType": "Identifier", "overloadedDeclarations": [5088, 5408], "referencedDeclaration": 5408, "src": "7141:14:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_SwapRequest_$27020_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (struct IPoolSwapStructs.SwapRequest memory,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 5085, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7141:89:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 5071, "id": 5086, "nodeType": "Return", "src": "7134:96:10"}]}, "id": 5088, "implemented": true, "kind": "function", "modifiers": [{"id": 5068, "modifierName": {"id": 5067, "name": "whenNotPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23772, "src": "6975:13:10", "typeDescriptions": {"typeIdentifier": "t_modifier$__$", "typeString": "modifier ()"}}, "nodeType": "ModifierInvocation", "src": "6975:13:10"}], "name": "_onSwapGivenIn", "nodeType": "FunctionDefinition", "overrides": {"id": 5066, "nodeType": "OverrideSpecifier", "overrides": [], "src": "6966:8:10"}, "parameters": {"id": 5065, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5060, "mutability": "mutable", "name": "swapRequest", "nodeType": "VariableDeclaration", "scope": 5088, "src": "6828:30:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27020_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 5059, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 27020, "src": "6828:11:10", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27020_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 5062, "mutability": "mutable", "name": "currentBalanceTokenIn", "nodeType": "VariableDeclaration", "scope": 5088, "src": "6868:29:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5061, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6868:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 5064, "mutability": "mutable", "name": "currentBalanceTokenOut", "nodeType": "VariableDeclaration", "scope": 5088, "src": "6907:30:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5063, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6907:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6818:125:10"}, "returnParameters": {"id": 5071, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5070, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 5088, "src": "6998:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5069, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6998:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6997:9:10"}, "scope": 6070, "src": "6795:442:10", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"baseFunctions": [2795], "body": {"id": 5117, "nodeType": "Block", "src": "7456:231:10", "statements": [{"assignments": [5103], "declarations": [{"constant": false, "id": 5103, "mutability": "mutable", "name": "virtualOffset", "nodeType": "VariableDeclaration", "scope": 5117, "src": "7466:21:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5102, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7466:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 5109, "initialValue": {"arguments": [{"id": 5105, "name": "swapRequest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5090, "src": "7514:11:10", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27020_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, {"id": 5106, "name": "currentBalanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5092, "src": "7527:21:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 5107, "name": "currentBalanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5094, "src": "7550:22:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_SwapRequest_$27020_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 5104, "name": "_calculateVirtualOffset", "nodeType": "Identifier", "overloadedDeclarations": [5286, 5315, 5372], "referencedDeclaration": 5286, "src": "7490:23:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_SwapRequest_$27020_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (struct IPoolSwapStructs.SwapRequest memory,uint256,uint256) view returns (uint256)"}}, "id": 5108, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7490:83:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "7466:107:10"}, {"expression": {"arguments": [{"id": 5111, "name": "swapRequest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5090, "src": "7606:11:10", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27020_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, {"id": 5112, "name": "currentBalanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5092, "src": "7619:21:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 5113, "name": "currentBalanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5094, "src": "7642:22:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 5114, "name": "virtualOffset", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5103, "src": "7666:13:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_SwapRequest_$27020_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 5110, "name": "_onSwapGivenOut", "nodeType": "Identifier", "overloadedDeclarations": [5118, 5431], "referencedDeclaration": 5431, "src": "7590:15:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_SwapRequest_$27020_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (struct IPoolSwapStructs.SwapRequest memory,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 5115, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7590:90:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 5101, "id": 5116, "nodeType": "Return", "src": "7583:97:10"}]}, "id": 5118, "implemented": true, "kind": "function", "modifiers": [{"id": 5098, "modifierName": {"id": 5097, "name": "whenNotPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23772, "src": "7424:13:10", "typeDescriptions": {"typeIdentifier": "t_modifier$__$", "typeString": "modifier ()"}}, "nodeType": "ModifierInvocation", "src": "7424:13:10"}], "name": "_onSwapGivenOut", "nodeType": "FunctionDefinition", "overrides": {"id": 5096, "nodeType": "OverrideSpecifier", "overrides": [], "src": "7415:8:10"}, "parameters": {"id": 5095, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5090, "mutability": "mutable", "name": "swapRequest", "nodeType": "VariableDeclaration", "scope": 5118, "src": "7277:30:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27020_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 5089, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 27020, "src": "7277:11:10", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27020_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 5092, "mutability": "mutable", "name": "currentBalanceTokenIn", "nodeType": "VariableDeclaration", "scope": 5118, "src": "7317:29:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5091, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7317:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 5094, "mutability": "mutable", "name": "currentBalanceTokenOut", "nodeType": "VariableDeclaration", "scope": 5118, "src": "7356:30:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5093, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7356:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7267:125:10"}, "returnParameters": {"id": 5101, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5100, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 5118, "src": "7447:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5099, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7447:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7446:9:10"}, "scope": 6070, "src": "7243:444:10", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"body": {"id": 5189, "nodeType": "Block", "src": "8041:529:10", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}, "id": 5132, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5130, "name": "x", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5121, "src": "8071:1:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"id": 5131, "name": "y", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5123, "src": "8075:1:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "src": "8071:5:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 5141, "nodeType": "IfStatement", "src": "8067:26:10", "trueBody": {"expression": {"id": 5139, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 5133, "name": "x", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5121, "src": "8079:1:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, {"id": 5134, "name": "y", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5123, "src": "8082:1:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}], "id": 5135, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "8078:6:10", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_contract$_IERC20_$26910_$_t_contract$_IERC20_$26910_$", "typeString": "tuple(contract IERC20,contract IERC20)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"components": [{"id": 5136, "name": "y", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5123, "src": "8088:1:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, {"id": 5137, "name": "x", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5121, "src": "8091:1:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}], "id": 5138, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "8087:6:10", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_contract$_IERC20_$26910_$_t_contract$_IERC20_$26910_$", "typeString": "tuple(contract IERC20,contract IERC20)"}}, "src": "8078:15:10", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5140, "nodeType": "ExpressionStatement", "src": "8078:15:10"}}, {"condition": {"commonType": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}, "id": 5144, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5142, "name": "x", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5121, "src": "8175:1:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 5143, "name": "_token0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4669, "src": "8180:7:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "src": "8175:12:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 5168, "nodeType": "IfStatement", "src": "8171:238:10", "trueBody": {"id": 5167, "nodeType": "Block", "src": "8189:220:10", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}, "id": 5147, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5145, "name": "y", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5123, "src": "8207:1:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 5146, "name": "_token1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4671, "src": "8212:7:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "src": "8207:12:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 5152, "nodeType": "IfStatement", "src": "8203:51:10", "trueBody": {"expression": {"components": [{"id": 5148, "name": "_token2", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4673, "src": "8229:7:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, {"id": 5149, "name": "_scalingFactor2", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4679, "src": "8238:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 5150, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "8228:26:10", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_contract$_IERC20_$26910_$_t_uint256_$", "typeString": "tuple(contract IERC20,uint256)"}}, "functionReturnParameters": 5129, "id": 5151, "nodeType": "Return", "src": "8221:33:10"}}, {"condition": {"commonType": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}, "id": 5155, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5153, "name": "y", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5123, "src": "8272:1:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"id": 5154, "name": "_token2", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4673, "src": "8277:7:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "src": "8272:12:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 5162, "nodeType": "IfStatement", "src": "8268:83:10", "trueBody": {"expression": {"arguments": [{"hexValue": "66616c7365", "id": 5157, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "8296:5:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, {"expression": {"id": 5158, "name": "Gyro3CLPPoolErrors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6100, "src": "8303:18:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro3CLPPoolErrors_$6100_$", "typeString": "type(library Gyro3CLPPoolErrors)"}}, "id": 5159, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "TOKENS_NOT_AMONG_POOL_TOKENS", "nodeType": "MemberAccess", "referencedDeclaration": 6099, "src": "8303:47:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 5156, "name": "_grequire", "nodeType": "Identifier", "overloadedDeclarations": [17050, 17069], "referencedDeclaration": 17050, "src": "8286:9:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 5160, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8286:65:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5161, "nodeType": "ExpressionStatement", "src": "8286:65:10"}}, {"expression": {"components": [{"id": 5163, "name": "_token1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4671, "src": "8373:7:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, {"id": 5164, "name": "_scalingFactor1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4677, "src": "8382:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 5165, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "8372:26:10", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_contract$_IERC20_$26910_$_t_uint256_$", "typeString": "tuple(contract IERC20,uint256)"}}, "functionReturnParameters": 5129, "id": 5166, "nodeType": "Return", "src": "8365:33:10"}]}}, {"condition": {"id": 5177, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "8422:31:10", "subExpression": {"components": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 5175, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}, "id": 5171, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5169, "name": "x", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5121, "src": "8424:1:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 5170, "name": "_token1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4671, "src": "8429:7:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "src": "8424:12:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}, "id": 5174, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5172, "name": "y", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5123, "src": "8440:1:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 5173, "name": "_token2", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4673, "src": "8445:7:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "src": "8440:12:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "8424:28:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "id": 5176, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "8423:30:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 5184, "nodeType": "IfStatement", "src": "8418:102:10", "trueBody": {"expression": {"arguments": [{"hexValue": "66616c7365", "id": 5179, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "8465:5:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, {"expression": {"id": 5180, "name": "Gyro3CLPPoolErrors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6100, "src": "8472:18:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro3CLPPoolErrors_$6100_$", "typeString": "type(library Gyro3CLPPoolErrors)"}}, "id": 5181, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "TOKENS_NOT_AMONG_POOL_TOKENS", "nodeType": "MemberAccess", "referencedDeclaration": 6099, "src": "8472:47:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 5178, "name": "_grequire", "nodeType": "Identifier", "overloadedDeclarations": [17050, 17069], "referencedDeclaration": 17050, "src": "8455:9:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 5182, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8455:65:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5183, "nodeType": "ExpressionStatement", "src": "8455:65:10"}}, {"expression": {"components": [{"id": 5185, "name": "_token0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4669, "src": "8538:7:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, {"id": 5186, "name": "_scalingFactor0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4675, "src": "8547:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 5187, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "8537:26:10", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_contract$_IERC20_$26910_$_t_uint256_$", "typeString": "tuple(contract IERC20,uint256)"}}, "functionReturnParameters": 5129, "id": 5188, "nodeType": "Return", "src": "8530:33:10"}]}, "documentation": {"id": 5119, "nodeType": "StructuredDocumentation", "src": "7693:229:10", "text": "@dev Given two tokens x, y, return the third one among the pool tokens that is neither x nor y. x, y do *not*\n have to be ordered, but they have to be among the tokens of this pool and they have to be different."}, "id": 5190, "implemented": true, "kind": "function", "modifiers": [], "name": "_getThirdToken", "nodeType": "FunctionDefinition", "parameters": {"id": 5124, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5121, "mutability": "mutable", "name": "x", "nodeType": "VariableDeclaration", "scope": 5190, "src": "7951:8:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}, "typeName": {"id": 5120, "name": "IERC20", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 26910, "src": "7951:6:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "visibility": "internal"}, {"constant": false, "id": 5123, "mutability": "mutable", "name": "y", "nodeType": "VariableDeclaration", "scope": 5190, "src": "7961:8:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}, "typeName": {"id": 5122, "name": "IERC20", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 26910, "src": "7961:6:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "visibility": "internal"}], "src": "7950:20:10"}, "returnParameters": {"id": 5129, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5126, "mutability": "mutable", "name": "tokenOther", "nodeType": "VariableDeclaration", "scope": 5190, "src": "7994:17:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}, "typeName": {"id": 5125, "name": "IERC20", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 26910, "src": "7994:6:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "visibility": "internal"}, {"constant": false, "id": 5128, "mutability": "mutable", "name": "scalingFactorOther", "nodeType": "VariableDeclaration", "scope": 5190, "src": "8013:26:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5127, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8013:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7993:47:10"}, "scope": 6070, "src": "7927:643:10", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 5225, "nodeType": "Block", "src": "8860:479:10", "statements": [{"assignments": [5201, 5203, null, null], "declarations": [{"constant": false, "id": 5201, "mutability": "mutable", "name": "cash", "nodeType": "VariableDeclaration", "scope": 5225, "src": "9088:12:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5200, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9088:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 5203, "mutability": "mutable", "name": "managed", "nodeType": "VariableDeclaration", "scope": 5225, "src": "9102:15:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5202, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9102:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, null, null], "id": 5211, "initialValue": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 5207, "name": "getPoolId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22051, "src": "9153:9:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$", "typeString": "function () view returns (bytes32)"}}, "id": 5208, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9153:11:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 5209, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5193, "src": "9166:5:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}], "expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 5204, "name": "getVault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21723, "src": "9125:8:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IVault_$20196_$", "typeString": "function () view returns (contract IVault)"}}, "id": 5205, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9125:10:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IVault_$20196", "typeString": "contract IVault"}}, "id": 5206, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getPoolTokenInfo", "nodeType": "MemberAccess", "referencedDeclaration": 19938, "src": "9125:27:10", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$_t_contract$_IERC20_$26910_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$", "typeString": "function (bytes32,contract IERC20) view external returns (uint256,uint256,uint256,address)"}}, "id": 5210, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9125:47:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$", "typeString": "tuple(uint256,uint256,uint256,address)"}}, "nodeType": "VariableDeclarationStatement", "src": "9087:85:10"}, {"expression": {"id": 5216, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 5212, "name": "balance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5198, "src": "9182:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5215, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5213, "name": "cash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5201, "src": "9192:4:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 5214, "name": "managed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5203, "src": "9199:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9192:14:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9182:24:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5217, "nodeType": "ExpressionStatement", "src": "9182:24:10"}, {"expression": {"id": 5223, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 5218, "name": "balance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5198, "src": "9292:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 5221, "name": "scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5195, "src": "9318:13:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 5219, "name": "balance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5198, "src": "9302:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5220, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mulDown", "nodeType": "MemberAccess", "referencedDeclaration": 17223, "src": "9302:15:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 5222, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9302:30:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9292:40:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5224, "nodeType": "ExpressionStatement", "src": "9292:40:10"}]}, "documentation": {"id": 5191, "nodeType": "StructuredDocumentation", "src": "8576:170:10", "text": "@dev Reads the balance of a token from the balancer vault and returns the scaled amount. Smaller storage access\n compared to getVault().getPoolTokens()."}, "id": 5226, "implemented": true, "kind": "function", "modifiers": [], "name": "_getScaledTokenBalance", "nodeType": "FunctionDefinition", "parameters": {"id": 5196, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5193, "mutability": "mutable", "name": "token", "nodeType": "VariableDeclaration", "scope": 5226, "src": "8783:12:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}, "typeName": {"id": 5192, "name": "IERC20", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 26910, "src": "8783:6:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "visibility": "internal"}, {"constant": false, "id": 5195, "mutability": "mutable", "name": "scalingFactor", "nodeType": "VariableDeclaration", "scope": 5226, "src": "8797:21:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5194, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8797:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "8782:37:10"}, "returnParameters": {"id": 5199, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5198, "mutability": "mutable", "name": "balance", "nodeType": "VariableDeclaration", "scope": 5226, "src": "8843:15:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5197, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8843:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "8842:17:10"}, "scope": 6070, "src": "8751:588:10", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 5285, "nodeType": "Block", "src": "9737:657:10", "statements": [{"assignments": [5242], "declarations": [{"constant": false, "id": 5242, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 5285, "src": "9852:25:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 5240, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9852:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5241, "nodeType": "ArrayTypeName", "src": "9852:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 5248, "initialValue": {"arguments": [{"hexValue": "33", "id": 5246, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9894:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}], "id": 5245, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "9880:13:10", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 5243, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9884:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5244, "nodeType": "ArrayTypeName", "src": "9884:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 5247, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9880:16:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "9852:44:10"}, {"expression": {"id": 5253, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 5249, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5242, "src": "9906:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 5251, "indexExpression": {"hexValue": "30", "id": 5250, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9915:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "9906:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 5252, "name": "currentBalanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5231, "src": "9920:21:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9906:35:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5254, "nodeType": "ExpressionStatement", "src": "9906:35:10"}, {"expression": {"id": 5259, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 5255, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5242, "src": "9951:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 5257, "indexExpression": {"hexValue": "31", "id": 5256, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9960:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "9951:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 5258, "name": "currentBalanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5233, "src": "9965:22:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9951:36:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5260, "nodeType": "ExpressionStatement", "src": "9951:36:10"}, {"assignments": [5262, 5264], "declarations": [{"constant": false, "id": 5262, "mutability": "mutable", "name": "token3", "nodeType": "VariableDeclaration", "scope": 5285, "src": "10168:13:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}, "typeName": {"id": 5261, "name": "IERC20", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 26910, "src": "10168:6:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, "visibility": "internal"}, {"constant": false, "id": 5264, "mutability": "mutable", "name": "scalingFactor3", "nodeType": "VariableDeclaration", "scope": 5285, "src": "10183:22:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5263, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10183:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 5271, "initialValue": {"arguments": [{"expression": {"id": 5266, "name": "swapRequest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5229, "src": "10224:11:10", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27020_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 5267, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenIn", "nodeType": "MemberAccess", "referencedDeclaration": 27005, "src": "10224:19:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, {"expression": {"id": 5268, "name": "swapRequest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5229, "src": "10245:11:10", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27020_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 5269, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenOut", "nodeType": "MemberAccess", "referencedDeclaration": 27007, "src": "10245:20:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}, {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}], "id": 5265, "name": "_getThirdToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5190, "src": "10209:14:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$26910_$_t_contract$_IERC20_$26910_$returns$_t_contract$_IERC20_$26910_$_t_uint256_$", "typeString": "function (contract IERC20,contract IERC20) view returns (contract IERC20,uint256)"}}, "id": 5270, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10209:57:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_contract$_IERC20_$26910_$_t_uint256_$", "typeString": "tuple(contract IERC20,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "10167:99:10"}, {"expression": {"id": 5279, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 5272, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5242, "src": "10276:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 5274, "indexExpression": {"hexValue": "32", "id": 5273, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10285:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "10276:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 5276, "name": "token3", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5262, "src": "10313:6:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, {"id": 5277, "name": "scalingFactor3", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5264, "src": "10321:14:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 5275, "name": "_getScaledTokenBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5226, "src": "10290:22:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$26910_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (contract IERC20,uint256) view returns (uint256)"}}, "id": 5278, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10290:46:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10276:60:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5280, "nodeType": "ExpressionStatement", "src": "10276:60:10"}, {"expression": {"arguments": [{"id": 5282, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5242, "src": "10378:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}], "id": 5281, "name": "_calculateVirtualOffset", "nodeType": "Identifier", "overloadedDeclarations": [5286, 5315, 5372], "referencedDeclaration": 5315, "src": "10354:23:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$", "typeString": "function (uint256[] memory) view returns (uint256)"}}, "id": 5283, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10354:33:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 5237, "id": 5284, "nodeType": "Return", "src": "10347:40:10"}]}, "documentation": {"id": 5227, "nodeType": "StructuredDocumentation", "src": "9345:184:10", "text": "@dev Calculate the offset that that takes real reserves to virtual reserves. Variant that uses the info given\n during swaps to query less from the vault and save gas."}, "id": 5286, "implemented": true, "kind": "function", "modifiers": [], "name": "_calculateVirtualOffset", "nodeType": "FunctionDefinition", "parameters": {"id": 5234, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5229, "mutability": "mutable", "name": "swapRequest", "nodeType": "VariableDeclaration", "scope": 5286, "src": "9576:30:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27020_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 5228, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 27020, "src": "9576:11:10", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27020_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 5231, "mutability": "mutable", "name": "currentBalanceTokenIn", "nodeType": "VariableDeclaration", "scope": 5286, "src": "9616:29:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5230, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9616:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 5233, "mutability": "mutable", "name": "currentBalanceTokenOut", "nodeType": "VariableDeclaration", "scope": 5286, "src": "9655:30:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5232, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9655:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "9566:125:10"}, "returnParameters": {"id": 5237, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5236, "mutability": "mutable", "name": "virtualOffset", "nodeType": "VariableDeclaration", "scope": 5286, "src": "9714:21:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5235, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9714:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "9713:23:10"}, "scope": 6070, "src": "9534:860:10", "stateMutability": "view", "virtual": false, "visibility": "private"}, {"body": {"id": 5314, "nodeType": "Block", "src": "10673:188:10", "statements": [{"assignments": [5296], "declarations": [{"constant": false, "id": 5296, "mutability": "mutable", "name": "root3Alpha", "nodeType": "VariableDeclaration", "scope": 5314, "src": "10683:18:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5295, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10683:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 5298, "initialValue": {"id": 5297, "name": "_root3Alpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4662, "src": "10704:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "10683:32:10"}, {"assignments": [5300], "declarations": [{"constant": false, "id": 5300, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 5314, "src": "10725:17:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5299, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10725:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 5306, "initialValue": {"arguments": [{"id": 5303, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5290, "src": "10778:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 5304, "name": "root3Alpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5296, "src": "10788:10:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 5301, "name": "Gyro3CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4635, "src": "10745:12:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro3CLPMath_$4635_$", "typeString": "type(library Gyro3CLPMath)"}}, "id": 5302, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 3929, "src": "10745:32:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256) pure returns (uint256)"}}, "id": 5305, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10745:54:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "10725:74:10"}, {"expression": {"id": 5312, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 5307, "name": "virtualOffset", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5293, "src": "10809:13:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 5310, "name": "root3Alpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5296, "src": "10843:10:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 5308, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5300, "src": "10825:9:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5309, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mulDown", "nodeType": "MemberAccess", "referencedDeclaration": 17223, "src": "10825:17:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 5311, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10825:29:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10809:45:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5313, "nodeType": "ExpressionStatement", "src": "10809:45:10"}]}, "documentation": {"id": 5287, "nodeType": "StructuredDocumentation", "src": "10400:116:10", "text": "@dev Calculate virtual offsets from scaled balances. Balances can be retrieved in the most gas-efficient way. "}, "id": 5315, "implemented": true, "kind": "function", "modifiers": [], "name": "_calculateVirtualOffset", "nodeType": "FunctionDefinition", "parameters": {"id": 5291, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5290, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 5315, "src": "10563:25:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 5288, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10563:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5289, "nodeType": "ArrayTypeName", "src": "10563:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "10553:74:10"}, "returnParameters": {"id": 5294, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5293, "mutability": "mutable", "name": "virtualOffset", "nodeType": "VariableDeclaration", "scope": 5315, "src": "10650:21:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5292, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10650:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "10649:23:10"}, "scope": 6070, "src": "10521:340:10", "stateMutability": "view", "virtual": false, "visibility": "private"}, {"body": {"id": 5359, "nodeType": "Block", "src": "11072:507:10", "statements": [{"expression": {"id": 5328, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 5322, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5320, "src": "11304:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "33", "id": 5326, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11329:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}], "id": 5325, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "11315:13:10", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 5323, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11319:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5324, "nodeType": "ArrayTypeName", "src": "11319:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 5327, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11315:16:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "src": "11304:27:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 5329, "nodeType": "ExpressionStatement", "src": "11304:27:10"}, {"expression": {"id": 5337, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 5330, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5320, "src": "11341:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 5332, "indexExpression": {"hexValue": "30", "id": 5331, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11350:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "11341:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 5334, "name": "_token0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4669, "src": "11378:7:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, {"id": 5335, "name": "_scalingFactor0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4675, "src": "11387:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 5333, "name": "_getScaledTokenBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5226, "src": "11355:22:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$26910_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (contract IERC20,uint256) view returns (uint256)"}}, "id": 5336, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11355:48:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11341:62:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5338, "nodeType": "ExpressionStatement", "src": "11341:62:10"}, {"expression": {"id": 5346, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 5339, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5320, "src": "11413:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 5341, "indexExpression": {"hexValue": "31", "id": 5340, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11422:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "11413:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 5343, "name": "_token1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4671, "src": "11450:7:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, {"id": 5344, "name": "_scalingFactor1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4677, "src": "11459:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 5342, "name": "_getScaledTokenBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5226, "src": "11427:22:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$26910_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (contract IERC20,uint256) view returns (uint256)"}}, "id": 5345, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11427:48:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11413:62:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5347, "nodeType": "ExpressionStatement", "src": "11413:62:10"}, {"expression": {"id": 5355, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 5348, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5320, "src": "11485:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 5350, "indexExpression": {"hexValue": "32", "id": 5349, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11494:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "11485:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 5352, "name": "_token2", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4673, "src": "11522:7:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}}, {"id": 5353, "name": "_scalingFactor2", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4679, "src": "11531:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$26910", "typeString": "contract IERC20"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 5351, "name": "_getScaledTokenBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5226, "src": "11499:22:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$26910_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (contract IERC20,uint256) view returns (uint256)"}}, "id": 5354, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11499:48:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11485:62:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5356, "nodeType": "ExpressionStatement", "src": "11485:62:10"}, {"expression": {"id": 5357, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5320, "src": "11564:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "functionReturnParameters": 5321, "id": 5358, "nodeType": "Return", "src": "11557:15:10"}]}, "documentation": {"id": 5316, "nodeType": "StructuredDocumentation", "src": "10867:124:10", "text": "@dev Get all balances in the pool, scaled by the appropriate scaling factors, in a relatively gas-efficient way."}, "id": 5360, "implemented": true, "kind": "function", "modifiers": [], "name": "_getAllBalances", "nodeType": "FunctionDefinition", "parameters": {"id": 5317, "nodeType": "ParameterList", "parameters": [], "src": "11020:2:10"}, "returnParameters": {"id": 5321, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5320, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 5360, "src": "11045:25:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 5318, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11045:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5319, "nodeType": "ArrayTypeName", "src": "11045:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "11044:27:10"}, "scope": 6070, "src": "10996:583:10", "stateMutability": "view", "virtual": false, "visibility": "private"}, {"body": {"id": 5371, "nodeType": "Block", "src": "11869:66:10", "statements": [{"expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 5367, "name": "_getAllBalances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5360, "src": "11910:15:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function () view returns (uint256[] memory)"}}, "id": 5368, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11910:17:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}], "id": 5366, "name": "_calculateVirtualOffset", "nodeType": "Identifier", "overloadedDeclarations": [5286, 5315, 5372], "referencedDeclaration": 5315, "src": "11886:23:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$", "typeString": "function (uint256[] memory) view returns (uint256)"}}, "id": 5369, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11886:42:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 5365, "id": 5370, "nodeType": "Return", "src": "11879:49:10"}]}, "documentation": {"id": 5361, "nodeType": "StructuredDocumentation", "src": "11585:199:10", "text": "@dev Calculate the offset that that takes real reserves to virtual reserves. Uses only the info in the pool, but\n is rather expensive because a lot has to be queried from the vault."}, "id": 5372, "implemented": true, "kind": "function", "modifiers": [], "name": "_calculateVirtualOffset", "nodeType": "FunctionDefinition", "parameters": {"id": 5362, "nodeType": "ParameterList", "parameters": [], "src": "11821:2:10"}, "returnParameters": {"id": 5365, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5364, "mutability": "mutable", "name": "virtualOffset", "nodeType": "VariableDeclaration", "scope": 5372, "src": "11846:21:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5363, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11846:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "11845:23:10"}, "scope": 6070, "src": "11789:146:10", "stateMutability": "view", "virtual": false, "visibility": "private"}, {"body": {"id": 5384, "nodeType": "Block", "src": "12013:88:10", "statements": [{"expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 5379, "name": "_getAllBalances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5360, "src": "12063:15:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function () view returns (uint256[] memory)"}}, "id": 5380, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12063:17:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 5381, "name": "_root3Alpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4662, "src": "12082:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 5377, "name": "Gyro3CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4635, "src": "12030:12:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro3CLPMath_$4635_$", "typeString": "type(library Gyro3CLPMath)"}}, "id": 5378, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 3929, "src": "12030:32:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256) pure returns (uint256)"}}, "id": 5382, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12030:64:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 5376, "id": 5383, "nodeType": "Return", "src": "12023:71:10"}]}, "id": 5385, "implemented": true, "kind": "function", "modifiers": [], "name": "_calculateInvariant", "nodeType": "FunctionDefinition", "parameters": {"id": 5373, "nodeType": "ParameterList", "parameters": [], "src": "11969:2:10"}, "returnParameters": {"id": 5376, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5375, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 5385, "src": "11994:17:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5374, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11994:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "11993:19:10"}, "scope": 6070, "src": "11941:160:10", "stateMutability": "view", "virtual": false, "visibility": "private"}, {"body": {"id": 5407, "nodeType": "Block", "src": "12318:134:10", "statements": [{"expression": {"arguments": [{"id": 5400, "name": "currentBalanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5389, "src": "12364:21:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 5401, "name": "currentBalanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5391, "src": "12387:22:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 5402, "name": "swapRequest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5387, "src": "12411:11:10", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27020_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 5403, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 27009, "src": "12411:18:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 5404, "name": "virtualOffset", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5393, "src": "12431:13:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 5398, "name": "Gyro3CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4635, "src": "12335:12:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro3CLPMath_$4635_$", "typeString": "type(library Gyro3CLPMath)"}}, "id": 5399, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcOutGivenIn", "nodeType": "MemberAccess", "referencedDeclaration": 4569, "src": "12335:28:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 5405, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12335:110:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 5397, "id": 5406, "nodeType": "Return", "src": "12328:117:10"}]}, "id": 5408, "implemented": true, "kind": "function", "modifiers": [], "name": "_onSwapGivenIn", "nodeType": "FunctionDefinition", "parameters": {"id": 5394, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5387, "mutability": "mutable", "name": "swapRequest", "nodeType": "VariableDeclaration", "scope": 5408, "src": "12140:30:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27020_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 5386, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 27020, "src": "12140:11:10", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27020_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 5389, "mutability": "mutable", "name": "currentBalanceTokenIn", "nodeType": "VariableDeclaration", "scope": 5408, "src": "12180:29:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5388, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12180:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 5391, "mutability": "mutable", "name": "currentBalanceTokenOut", "nodeType": "VariableDeclaration", "scope": 5408, "src": "12219:30:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5390, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12219:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 5393, "mutability": "mutable", "name": "virtualOffset", "nodeType": "VariableDeclaration", "scope": 5408, "src": "12259:21:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5392, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12259:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "12130:156:10"}, "returnParameters": {"id": 5397, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5396, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 5408, "src": "12309:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5395, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12309:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "12308:9:10"}, "scope": 6070, "src": "12107:345:10", "stateMutability": "pure", "virtual": false, "visibility": "private"}, {"body": {"id": 5430, "nodeType": "Block", "src": "12670:134:10", "statements": [{"expression": {"arguments": [{"id": 5423, "name": "currentBalanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5412, "src": "12716:21:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 5424, "name": "currentBalanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5414, "src": "12739:22:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 5425, "name": "swapRequest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5410, "src": "12763:11:10", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27020_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 5426, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 27009, "src": "12763:18:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 5427, "name": "virtualOffset", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5416, "src": "12783:13:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 5421, "name": "Gyro3CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4635, "src": "12687:12:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro3CLPMath_$4635_$", "typeString": "type(library Gyro3CLPMath)"}}, "id": 5422, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcInGivenOut", "nodeType": "MemberAccess", "referencedDeclaration": 4634, "src": "12687:28:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 5428, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12687:110:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 5420, "id": 5429, "nodeType": "Return", "src": "12680:117:10"}]}, "id": 5431, "implemented": true, "kind": "function", "modifiers": [], "name": "_onSwapGivenOut", "nodeType": "FunctionDefinition", "parameters": {"id": 5417, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5410, "mutability": "mutable", "name": "swapRequest", "nodeType": "VariableDeclaration", "scope": 5431, "src": "12492:30:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27020_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 5409, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 27020, "src": "12492:11:10", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$27020_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 5412, "mutability": "mutable", "name": "currentBalanceTokenIn", "nodeType": "VariableDeclaration", "scope": 5431, "src": "12532:29:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5411, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12532:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 5414, "mutability": "mutable", "name": "currentBalanceTokenOut", "nodeType": "VariableDeclaration", "scope": 5431, "src": "12571:30:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5413, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12571:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 5416, "mutability": "mutable", "name": "virtualOffset", "nodeType": "VariableDeclaration", "scope": 5431, "src": "12611:21:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5415, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12611:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "12482:156:10"}, "returnParameters": {"id": 5420, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5419, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 5431, "src": "12661:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5418, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12661:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "12660:9:10"}, "scope": 6070, "src": "12458:346:10", "stateMutability": "pure", "virtual": false, "visibility": "private"}, {"baseFunctions": [2892], "body": {"id": 5518, "nodeType": "Block", "src": "13839:867:10", "statements": [{"assignments": [5457], "declarations": [{"constant": false, "id": 5457, "mutability": "mutable", "name": "kind", "nodeType": "VariableDeclaration", "scope": 5518, "src": "13849:30:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$30198", "typeString": "enum BaseWeightedPool.JoinKind"}, "typeName": {"id": 5456, "name": "BaseWeightedPool.JoinKind", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 30198, "src": "13849:25:10", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$30198", "typeString": "enum BaseWeightedPool.JoinKind"}}, "visibility": "internal"}], "id": 5461, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 5458, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5443, "src": "13882:8:10", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 5459, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "joinKind", "nodeType": "MemberAccess", "referencedDeclaration": 19331, "src": "13882:17:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_enum$_JoinKind_$30198_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (enum BaseWeightedPool.JoinKind)"}}, "id": 5460, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13882:19:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$30198", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "VariableDeclarationStatement", "src": "13849:52:10"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_JoinKind_$30198", "typeString": "enum BaseWeightedPool.JoinKind"}, "id": 5467, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5463, "name": "kind", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5457, "src": "13920:4:10", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$30198", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 5464, "name": "BaseWeightedPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31399, "src": "13928:16:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BaseWeightedPool_$31399_$", "typeString": "type(contract BaseWeightedPool)"}}, "id": 5465, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "JoinKind", "nodeType": "MemberAccess", "referencedDeclaration": 30198, "src": "13928:25:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_JoinKind_$30198_$", "typeString": "type(enum BaseWeightedPool.JoinKind)"}}, "id": 5466, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "INIT", "nodeType": "MemberAccess", "src": "13928:30:10", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$30198", "typeString": "enum BaseWeightedPool.JoinKind"}}, "src": "13920:38:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 5468, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 27925, "src": "13960:6:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$27925_$", "typeString": "type(library Errors)"}}, "id": 5469, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNINITIALIZED", "nodeType": "MemberAccess", "referencedDeclaration": 27594, "src": "13960:20:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 5462, "name": "_require", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 27520, "src": "13911:8:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 5470, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13911:70:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5471, "nodeType": "ExpressionStatement", "src": "13911:70:10"}, {"assignments": [5476], "declarations": [{"constant": false, "id": 5476, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 5518, "src": "13992:26:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 5474, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13992:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5475, "nodeType": "ArrayTypeName", "src": "13992:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 5480, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 5477, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5443, "src": "14021:8:10", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 5478, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "initialAmountsIn", "nodeType": "MemberAccess", "referencedDeclaration": 19370, "src": "14021:25:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (uint256[] memory)"}}, "id": 5479, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14021:27:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "13992:56:10"}, {"expression": {"arguments": [{"expression": {"id": 5484, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5476, "src": "14094:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 5485, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "14094:16:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "33", "id": 5486, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14112:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}], "expression": {"id": 5481, "name": "InputHelpers", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18665, "src": "14058:12:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_InputHelpers_$18665_$", "typeString": "type(library InputHelpers)"}}, "id": 5483, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ensureInputLengthMatch", "nodeType": "MemberAccess", "referencedDeclaration": 18573, "src": "14058:35:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256) pure"}}, "id": 5487, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14058:56:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5488, "nodeType": "ExpressionStatement", "src": "14058:56:10"}, {"expression": {"arguments": [{"id": 5490, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5476, "src": "14138:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 5491, "name": "scalingFactors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5441, "src": "14149:14:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}], "id": 5489, "name": "_upscaleArray", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22835, "src": "14124:13:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$", "typeString": "function (uint256[] memory,uint256[] memory) view"}}, "id": 5492, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14124:40:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5493, "nodeType": "ExpressionStatement", "src": "14124:40:10"}, {"assignments": [5495], "declarations": [{"constant": false, "id": 5495, "mutability": "mutable", "name": "invariantAfterJoin", "nodeType": "VariableDeclaration", "scope": 5518, "src": "14175:26:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5494, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14175:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 5501, "initialValue": {"arguments": [{"id": 5498, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5476, "src": "14237:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 5499, "name": "_root3Alpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4662, "src": "14248:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 5496, "name": "Gyro3CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4635, "src": "14204:12:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro3CLPMath_$4635_$", "typeString": "type(library Gyro3CLPMath)"}}, "id": 5497, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 3929, "src": "14204:32:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256) pure returns (uint256)"}}, "id": 5500, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14204:56:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "14175:85:10"}, {"assignments": [5503], "declarations": [{"constant": false, "id": 5503, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 5518, "src": "14556:20:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5502, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14556:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 5509, "initialValue": {"arguments": [{"id": 5506, "name": "invariantAfterJoin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5495, "src": "14588:18:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "33", "id": 5507, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14608:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}], "expression": {"id": 5504, "name": "Math", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18954, "src": "14579:4:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Math_$18954_$", "typeString": "type(library Math)"}}, "id": 5505, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mul", "nodeType": "MemberAccess", "referencedDeclaration": 18873, "src": "14579:8:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 5508, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14579:31:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "14556:54:10"}, {"expression": {"id": 5512, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 5510, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2606, "src": "14621:14:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 5511, "name": "invariantAfterJoin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5495, "src": "14638:18:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "14621:35:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5513, "nodeType": "ExpressionStatement", "src": "14621:35:10"}, {"expression": {"components": [{"id": 5514, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5503, "src": "14675:12:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 5515, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5476, "src": "14689:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 5516, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "14674:25:10", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "functionReturnParameters": 5453, "id": 5517, "nodeType": "Return", "src": "14667:32:10"}]}, "documentation": {"id": 5432, "nodeType": "StructuredDocumentation", "src": "12810:800:10", "text": " @dev Called when the Pool is joined for the first time; that is, when the BPT total supply is zero.\n Returns the amount of BPT to mint and the token amounts the Pool will receive in return.\n Minted BPT will be sent to `recipient`, except for _MINIMUM_BPT, which will be deducted from this amount and sent\n to the zero address instead. This will cause that BPT to remain forever locked there, preventing total BTP from\n ever dropping below that value, and ensuring `_onInitializePool` can only be called once in the entire Pool's\n lifetime.\n The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n be downscaled (rounding up) before being returned to the Vault."}, "id": 5519, "implemented": true, "kind": "function", "modifiers": [{"id": 5447, "modifierName": {"id": 5446, "name": "whenNotPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23772, "src": "13789:13:10", "typeDescriptions": {"typeIdentifier": "t_modifier$__$", "typeString": "modifier ()"}}, "nodeType": "ModifierInvocation", "src": "13789:13:10"}], "name": "_onInitializePool", "nodeType": "FunctionDefinition", "overrides": {"id": 5445, "nodeType": "OverrideSpecifier", "overrides": [], "src": "13780:8:10"}, "parameters": {"id": 5444, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5434, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 5519, "src": "13651:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 5433, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "13651:7:10", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 5436, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 5519, "src": "13668:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 5435, "name": "address", "nodeType": "ElementaryTypeName", "src": "13668:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 5438, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 5519, "src": "13685:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 5437, "name": "address", "nodeType": "ElementaryTypeName", "src": "13685:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 5441, "mutability": "mutable", "name": "scalingFactors", "nodeType": "VariableDeclaration", "scope": 5519, "src": "13702:31:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 5439, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13702:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5440, "nodeType": "ArrayTypeName", "src": "13702:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 5443, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 5519, "src": "13743:21:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 5442, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "13743:5:10", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "13641:129:10"}, "returnParameters": {"id": 5453, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5449, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 5519, "src": "13812:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5448, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13812:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 5452, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 5519, "src": "13821:16:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 5450, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13821:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5451, "nodeType": "ArrayTypeName", "src": "13821:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "13811:27:10"}, "scope": 6070, "src": "13615:1091:10", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [2989], "body": {"id": 5608, "nodeType": "Block", "src": "16049:1382:10", "statements": [{"assignments": [5551], "declarations": [{"constant": false, "id": 5551, "mutability": "mutable", "name": "root3Alpha", "nodeType": "VariableDeclaration", "scope": 5608, "src": "16352:18:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5550, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16352:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 5553, "initialValue": {"id": 5552, "name": "_root3Alpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4662, "src": "16373:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "16352:32:10"}, {"assignments": [5555], "declarations": [{"constant": false, "id": 5555, "mutability": "mutable", "name": "invariantBeforeJoin", "nodeType": "VariableDeclaration", "scope": 5608, "src": "16395:27:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5554, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16395:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 5561, "initialValue": {"arguments": [{"id": 5558, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5529, "src": "16458:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 5559, "name": "root3Alpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5551, "src": "16468:10:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 5556, "name": "Gyro3CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4635, "src": "16425:12:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro3CLPMath_$4635_$", "typeString": "type(library Gyro3CLPMath)"}}, "id": 5557, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 3929, "src": "16425:32:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256) pure returns (uint256)"}}, "id": 5560, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16425:54:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "16395:84:10"}, {"expression": {"arguments": [{"id": 5563, "name": "invariantBeforeJoin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5555, "src": "16506:19:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 5562, "name": "_distributeFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5906, "src": "16490:15:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 5564, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16490:36:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5565, "nodeType": "ExpressionStatement", "src": "16490:36:10"}, {"expression": {"id": 5573, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 5566, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5542, "src": "16538:12:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 5567, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5545, "src": "16552:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 5568, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "16537:25:10", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 5570, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5529, "src": "16573:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 5571, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5538, "src": "16583:8:10", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 5569, "name": "_doJoin", "nodeType": "Identifier", "overloadedDeclarations": [5653, 3062], "referencedDeclaration": 5653, "src": "16565:7:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 5572, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16565:27:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "16537:55:10", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5574, "nodeType": "ExpressionStatement", "src": "16537:55:10"}, {"condition": {"expression": {"id": 5575, "name": "_capParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6492, "src": "16607:10:10", "typeDescriptions": {"typeIdentifier": "t_struct$_CapParams_$19539_storage", "typeString": "struct ICappedLiquidity.CapParams storage ref"}}, "id": 5576, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "capEnabled", "nodeType": "MemberAccess", "referencedDeclaration": 19534, "src": "16607:21:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 5587, "nodeType": "IfStatement", "src": "16603:113:10", "trueBody": {"id": 5586, "nodeType": "Block", "src": "16630:86:10", "statements": [{"expression": {"arguments": [{"id": 5578, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5542, "src": "16655:12:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"id": 5580, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5526, "src": "16679:9:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 5579, "name": "balanceOf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23985, "src": "16669:9:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view returns (uint256)"}}, "id": 5581, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16669:20:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 5582, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23971, "src": "16691:11:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 5583, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16691:13:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 5577, "name": "_ensureCap", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6651, "src": "16644:10:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256,uint256) view"}}, "id": 5584, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16644:61:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5585, "nodeType": "ExpressionStatement", "src": "16644:61:10"}]}}, {"expression": {"id": 5597, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 5588, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2606, "src": "17141:14:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 5591, "name": "invariantBeforeJoin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5555, "src": "17196:19:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 5592, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5542, "src": "17217:12:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 5593, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23971, "src": "17231:11:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 5594, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17231:13:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "74727565", "id": 5595, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "17246:4:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "expression": {"id": 5589, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18553, "src": "17158:12:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$18553_$", "typeString": "type(library GyroPoolMath)"}}, "id": 5590, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "liquidityInvariantUpdate", "nodeType": "MemberAccess", "referencedDeclaration": 18472, "src": "17158:37:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,bool) pure returns (uint256)"}}, "id": 5596, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17158:93:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "17141:110:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5598, "nodeType": "ExpressionStatement", "src": "17141:110:10"}, {"expression": {"components": [{"id": 5599, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5542, "src": "17382:12:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 5600, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5545, "src": "17396:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"arguments": [{"hexValue": "33", "id": 5604, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "17421:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}], "id": 5603, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "17407:13:10", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 5601, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17411:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5602, "nodeType": "ArrayTypeName", "src": "17411:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 5605, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17407:16:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 5606, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "17381:43:10", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory,uint256[] memory)"}}, "functionReturnParameters": 5549, "id": 5607, "nodeType": "Return", "src": "17374:50:10"}]}, "documentation": {"id": 5520, "nodeType": "StructuredDocumentation", "src": "14712:888:10", "text": " @dev Called whenever the Pool is joined after the first initialization join (see `_onInitializePool`).\n Returns the amount of BPT to mint, the token amounts that the Pool will receive in return, and the number of\n tokens to pay in protocol swap fees.\n Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n Minted BPT will be sent to `recipient`.\n The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n be downscaled (rounding up) before being returned to the Vault.\n protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way"}, "id": 5609, "implemented": true, "kind": "function", "modifiers": [], "name": "_onJoinPool", "nodeType": "FunctionDefinition", "overrides": {"id": 5540, "nodeType": "OverrideSpecifier", "overrides": [], "src": "15883:8:10"}, "parameters": {"id": 5539, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5522, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 5609, "src": "15635:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 5521, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "15635:7:10", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 5524, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 5609, "src": "15652:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 5523, "name": "address", "nodeType": "ElementaryTypeName", "src": "15652:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 5526, "mutability": "mutable", "name": "recipient", "nodeType": "VariableDeclaration", "scope": 5609, "src": "15669:17:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 5525, "name": "address", "nodeType": "ElementaryTypeName", "src": "15669:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 5529, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 5609, "src": "15696:25:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 5527, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15696:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5528, "nodeType": "ArrayTypeName", "src": "15696:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 5531, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 5609, "src": "15731:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5530, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15731:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 5533, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 5609, "src": "15748:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5532, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15748:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 5536, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 5609, "src": "15804:16:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 5534, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15804:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5535, "nodeType": "ArrayTypeName", "src": "15804:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 5538, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 5609, "src": "15830:21:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 5537, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "15830:5:10", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "15625:232:10"}, "returnParameters": {"id": 5549, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5542, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 5609, "src": "15922:20:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5541, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15922:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 5545, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 5609, "src": "15956:26:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 5543, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15956:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5544, "nodeType": "ArrayTypeName", "src": "15956:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 5548, "mutability": "mutable", "name": "dueProtocolFeeAmounts", "nodeType": "VariableDeclaration", "scope": 5609, "src": "15996:38:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 5546, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15996:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5547, "nodeType": "ArrayTypeName", "src": "15996:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "15908:136:10"}, "scope": 6070, "src": "15605:1826:10", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 5652, "nodeType": "Block", "src": "17577:441:10", "statements": [{"assignments": [5625], "declarations": [{"constant": false, "id": 5625, "mutability": "mutable", "name": "kind", "nodeType": "VariableDeclaration", "scope": 5652, "src": "17587:30:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$30198", "typeString": "enum BaseWeightedPool.JoinKind"}, "typeName": {"id": 5624, "name": "BaseWeightedPool.JoinKind", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 30198, "src": "17587:25:10", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$30198", "typeString": "enum BaseWeightedPool.JoinKind"}}, "visibility": "internal"}], "id": 5629, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 5626, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5614, "src": "17620:8:10", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 5627, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "joinKind", "nodeType": "MemberAccess", "referencedDeclaration": 19331, "src": "17620:17:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_enum$_JoinKind_$30198_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (enum BaseWeightedPool.JoinKind)"}}, "id": 5628, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17620:19:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$30198", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "VariableDeclarationStatement", "src": "17587:52:10"}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_JoinKind_$30198", "typeString": "enum BaseWeightedPool.JoinKind"}, "id": 5634, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5630, "name": "kind", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5625, "src": "17776:4:10", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$30198", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 5631, "name": "BaseWeightedPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31399, "src": "17784:16:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BaseWeightedPool_$31399_$", "typeString": "type(contract BaseWeightedPool)"}}, "id": 5632, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "JoinKind", "nodeType": "MemberAccess", "referencedDeclaration": 30198, "src": "17784:25:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_JoinKind_$30198_$", "typeString": "type(enum BaseWeightedPool.JoinKind)"}}, "id": 5633, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "ALL_TOKENS_IN_FOR_EXACT_BPT_OUT", "nodeType": "MemberAccess", "src": "17784:57:10", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$30198", "typeString": "enum BaseWeightedPool.JoinKind"}}, "src": "17776:65:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 5650, "nodeType": "Block", "src": "17952:60:10", "statements": [{"expression": {"arguments": [{"expression": {"id": 5646, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 27925, "src": "17974:6:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$27925_$", "typeString": "type(library Errors)"}}, "id": 5647, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNHANDLED_JOIN_KIND", "nodeType": "MemberAccess", "referencedDeclaration": 27639, "src": "17974:26:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 5645, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 27528, "src": "17966:7:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$", "typeString": "function (uint256) pure"}}, "id": 5648, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17966:35:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5649, "nodeType": "ExpressionStatement", "src": "17966:35:10"}]}, "id": 5651, "nodeType": "IfStatement", "src": "17772:240:10", "trueBody": {"id": 5644, "nodeType": "Block", "src": "17843:103:10", "statements": [{"expression": {"id": 5642, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 5635, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5617, "src": "17858:12:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 5636, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5620, "src": "17872:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 5637, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "17857:25:10", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 5639, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5612, "src": "17916:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 5640, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5614, "src": "17926:8:10", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 5638, "name": "_joinAllTokensInForExactBPTOut", "nodeType": "Identifier", "overloadedDeclarations": [5801], "referencedDeclaration": 5801, "src": "17885:30:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 5641, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17885:50:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "17857:78:10", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5643, "nodeType": "ExpressionStatement", "src": "17857:78:10"}]}}]}, "id": 5653, "implemented": true, "kind": "function", "modifiers": [], "name": "_doJoin", "nodeType": "FunctionDefinition", "parameters": {"id": 5615, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5612, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 5653, "src": "17454:25:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 5610, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17454:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5611, "nodeType": "ArrayTypeName", "src": "17454:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 5614, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 5653, "src": "17481:21:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 5613, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "17481:5:10", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "17453:50:10"}, "returnParameters": {"id": 5621, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5617, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 5653, "src": "17527:20:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5616, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17527:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 5620, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 5653, "src": "17549:26:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 5618, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17549:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5619, "nodeType": "ArrayTypeName", "src": "17549:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "17526:50:10"}, "scope": 6070, "src": "17437:581:10", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [3361], "body": {"id": 5751, "nodeType": "Block", "src": "19269:2240:10", "statements": [{"assignments": [5685], "declarations": [{"constant": false, "id": 5685, "mutability": "mutable", "name": "root3Alpha", "nodeType": "VariableDeclaration", "scope": 5751, "src": "19434:18:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5684, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19434:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 5687, "initialValue": {"id": 5686, "name": "_root3Alpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4662, "src": "19455:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "19434:32:10"}, {"condition": {"arguments": [], "expression": {"argumentTypes": [], "id": 5688, "name": "_isNotPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23867, "src": "19481:12:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$", "typeString": "function () view returns (bool)"}}, "id": 5689, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19481:14:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 5740, "nodeType": "Block", "src": "20599:731:10", "statements": [{"expression": {"id": 5730, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 5723, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5676, "src": "20814:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 5724, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5679, "src": "20827:10:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 5725, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "20813:25:10", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 5727, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5663, "src": "20849:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 5728, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5672, "src": "20859:8:10", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 5726, "name": "_doExit", "nodeType": "Identifier", "overloadedDeclarations": [5841, 3434], "referencedDeclaration": 5841, "src": "20841:7:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 5729, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20841:27:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "20813:55:10", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5731, "nodeType": "ExpressionStatement", "src": "20813:55:10"}, {"expression": {"id": 5738, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 5732, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2606, "src": "21285:14:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"arguments": [{"id": 5735, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "21307:7:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 5734, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21307:7:10", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}], "id": 5733, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "21302:4:10", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 5736, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21302:13:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint256", "typeString": "type(uint256)"}}, "id": 5737, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "21302:17:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "21285:34:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5739, "nodeType": "ExpressionStatement", "src": "21285:34:10"}]}, "id": 5741, "nodeType": "IfStatement", "src": "19477:1853:10", "trueBody": {"id": 5722, "nodeType": "Block", "src": "19497:1096:10", "statements": [{"assignments": [5691], "declarations": [{"constant": false, "id": 5691, "mutability": "mutable", "name": "invariantBeforeExit", "nodeType": "VariableDeclaration", "scope": 5722, "src": "19817:27:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5690, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19817:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 5697, "initialValue": {"arguments": [{"id": 5694, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5663, "src": "19880:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 5695, "name": "root3Alpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5685, "src": "19890:10:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 5692, "name": "Gyro3CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4635, "src": "19847:12:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro3CLPMath_$4635_$", "typeString": "type(library Gyro3CLPMath)"}}, "id": 5693, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 3929, "src": "19847:32:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256) pure returns (uint256)"}}, "id": 5696, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19847:54:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "19817:84:10"}, {"expression": {"arguments": [{"id": 5699, "name": "invariantBeforeExit", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5691, "src": "19932:19:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 5698, "name": "_distributeFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5906, "src": "19916:15:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 5700, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19916:36:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5701, "nodeType": "ExpressionStatement", "src": "19916:36:10"}, {"expression": {"id": 5709, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 5702, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5676, "src": "19968:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 5703, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5679, "src": "19981:10:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 5704, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "19967:25:10", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 5706, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5663, "src": "20003:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 5707, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5672, "src": "20013:8:10", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 5705, "name": "_doExit", "nodeType": "Identifier", "overloadedDeclarations": [5841, 3434], "referencedDeclaration": 5841, "src": "19995:7:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 5708, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19995:27:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "19967:55:10", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5710, "nodeType": "ExpressionStatement", "src": "19967:55:10"}, {"expression": {"id": 5720, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 5711, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2606, "src": "20472:14:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 5714, "name": "invariantBeforeExit", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5691, "src": "20527:19:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 5715, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5676, "src": "20548:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 5716, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23971, "src": "20561:11:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 5717, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20561:13:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "66616c7365", "id": 5718, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "20576:5:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "expression": {"id": 5712, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18553, "src": "20489:12:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$18553_$", "typeString": "type(library GyroPoolMath)"}}, "id": 5713, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "liquidityInvariantUpdate", "nodeType": "MemberAccess", "referencedDeclaration": 18472, "src": "20489:37:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,bool) pure returns (uint256)"}}, "id": 5719, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20489:93:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "20472:110:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5721, "nodeType": "ExpressionStatement", "src": "20472:110:10"}]}}, {"expression": {"components": [{"id": 5742, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5676, "src": "21460:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 5743, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5679, "src": "21473:10:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"arguments": [{"hexValue": "33", "id": 5747, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "21499:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}], "id": 5746, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "21485:13:10", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 5744, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21489:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5745, "nodeType": "ArrayTypeName", "src": "21489:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 5748, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21485:16:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 5749, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "21459:43:10", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory,uint256[] memory)"}}, "functionReturnParameters": 5683, "id": 5750, "nodeType": "Return", "src": "21452:50:10"}]}, "documentation": {"id": 5654, "nodeType": "StructuredDocumentation", "src": "18024:816:10", "text": " @dev Called whenever the Pool is exited.\n Returns the amount of BPT to burn, the token amounts for each Pool token that the Pool will grant in return, and\n the number of tokens to pay in protocol swap fees.\n Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n BPT will be burnt from `sender`.\n The Pool will grant tokens to `recipient`. These amounts are considered upscaled and will be downscaled\n (rounding down) before being returned to the Vault.\n protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way"}, "id": 5752, "implemented": true, "kind": "function", "modifiers": [], "name": "_onExitPool", "nodeType": "FunctionDefinition", "overrides": {"id": 5674, "nodeType": "OverrideSpecifier", "overrides": [], "src": "19103:8:10"}, "parameters": {"id": 5673, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5656, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 5752, "src": "18875:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 5655, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "18875:7:10", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 5658, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 5752, "src": "18892:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 5657, "name": "address", "nodeType": "ElementaryTypeName", "src": "18892:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 5660, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 5752, "src": "18909:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 5659, "name": "address", "nodeType": "ElementaryTypeName", "src": "18909:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 5663, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 5752, "src": "18926:25:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 5661, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18926:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5662, "nodeType": "ArrayTypeName", "src": "18926:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 5665, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 5752, "src": "18961:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5664, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18961:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 5667, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 5752, "src": "18978:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5666, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18978:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 5670, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 5752, "src": "19024:16:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 5668, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19024:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5669, "nodeType": "ArrayTypeName", "src": "19024:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 5672, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 5752, "src": "19050:21:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 5671, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "19050:5:10", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "18865:212:10"}, "returnParameters": {"id": 5683, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5676, "mutability": "mutable", "name": "bptAmountIn", "nodeType": "VariableDeclaration", "scope": 5752, "src": "19142:19:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5675, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19142:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 5679, "mutability": "mutable", "name": "amountsOut", "nodeType": "VariableDeclaration", "scope": 5752, "src": "19175:27:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 5677, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19175:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5678, "nodeType": "ArrayTypeName", "src": "19175:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 5682, "mutability": "mutable", "name": "dueProtocolFeeAmounts", "nodeType": "VariableDeclaration", "scope": 5752, "src": "19216:38:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 5680, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19216:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5681, "nodeType": "ArrayTypeName", "src": "19216:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "19128:136:10"}, "scope": 6070, "src": "18845:2664:10", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [2723], "body": {"id": 5762, "nodeType": "Block", "src": "21660:45:10", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 5759, "name": "_calculateInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5385, "src": "21677:19:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 5760, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21677:21:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 5758, "id": 5761, "nodeType": "Return", "src": "21670:28:10"}]}, "documentation": {"id": 5753, "nodeType": "StructuredDocumentation", "src": "21515:67:10", "text": " @dev Returns the current value of the invariant."}, "functionSelector": "c0ff1a15", "id": 5763, "implemented": true, "kind": "function", "modifiers": [], "name": "getInvariant", "nodeType": "FunctionDefinition", "overrides": {"id": 5755, "nodeType": "OverrideSpecifier", "overrides": [], "src": "21623:8:10"}, "parameters": {"id": 5754, "nodeType": "ParameterList", "parameters": [], "src": "21608:2:10"}, "returnParameters": {"id": 5758, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5757, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 5763, "src": "21641:17:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5756, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21641:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "21640:19:10"}, "scope": 6070, "src": "21587:118:10", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"baseFunctions": [3256], "body": {"id": 5800, "nodeType": "Block", "src": "21896:243:10", "statements": [{"assignments": [5778], "declarations": [{"constant": false, "id": 5778, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 5800, "src": "21906:20:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5777, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21906:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 5782, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 5779, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5768, "src": "21929:8:10", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 5780, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "allTokensInForExactBptOut", "nodeType": "MemberAccess", "referencedDeclaration": 19445, "src": "21929:34:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (uint256)"}}, "id": 5781, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21929:36:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "21906:59:10"}, {"assignments": [5787], "declarations": [{"constant": false, "id": 5787, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 5800, "src": "21976:26:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 5785, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21976:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5786, "nodeType": "ArrayTypeName", "src": "21976:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 5795, "initialValue": {"arguments": [{"id": 5790, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5766, "src": "22051:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 5791, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5778, "src": "22061:12:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 5792, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23971, "src": "22075:11:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 5793, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22075:13:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 5788, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18553, "src": "22005:12:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$18553_$", "typeString": "type(library GyroPoolMath)"}}, "id": 5789, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcAllTokensInGivenExactBptOut", "nodeType": "MemberAccess", "referencedDeclaration": 17852, "src": "22005:45:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256[] memory)"}}, "id": 5794, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22005:84:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "21976:113:10"}, {"expression": {"components": [{"id": 5796, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5778, "src": "22108:12:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 5797, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5787, "src": "22122:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 5798, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "22107:25:10", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "functionReturnParameters": 5776, "id": 5799, "nodeType": "Return", "src": "22100:32:10"}]}, "id": 5801, "implemented": true, "kind": "function", "modifiers": [], "name": "_joinAllTokensInForExactBPTOut", "nodeType": "FunctionDefinition", "overrides": {"id": 5770, "nodeType": "OverrideSpecifier", "overrides": [], "src": "21839:8:10"}, "parameters": {"id": 5769, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5766, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 5801, "src": "21751:25:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 5764, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21751:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5765, "nodeType": "ArrayTypeName", "src": "21751:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 5768, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 5801, "src": "21778:21:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 5767, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "21778:5:10", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "21750:50:10"}, "returnParameters": {"id": 5776, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5772, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 5801, "src": "21865:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5771, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21865:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 5775, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 5801, "src": "21874:16:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 5773, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21874:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5774, "nodeType": "ArrayTypeName", "src": "21874:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "21864:27:10"}, "scope": 6070, "src": "21711:428:10", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 5840, "nodeType": "Block", "src": "22285:431:10", "statements": [{"assignments": [5817], "declarations": [{"constant": false, "id": 5817, "mutability": "mutable", "name": "kind", "nodeType": "VariableDeclaration", "scope": 5840, "src": "22295:30:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$30203", "typeString": "enum BaseWeightedPool.ExitKind"}, "typeName": {"id": 5816, "name": "BaseWeightedPool.ExitKind", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 30203, "src": "22295:25:10", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$30203", "typeString": "enum BaseWeightedPool.ExitKind"}}, "visibility": "internal"}], "id": 5821, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 5818, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5806, "src": "22328:8:10", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 5819, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "exitKind", "nodeType": "MemberAccess", "referencedDeclaration": 19347, "src": "22328:17:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_enum$_ExitKind_$30203_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (enum BaseWeightedPool.ExitKind)"}}, "id": 5820, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22328:19:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$30203", "typeString": "enum BaseWeightedPool.ExitKind"}}, "nodeType": "VariableDeclarationStatement", "src": "22295:52:10"}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_ExitKind_$30203", "typeString": "enum BaseWeightedPool.ExitKind"}, "id": 5826, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5822, "name": "kind", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5817, "src": "22502:4:10", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$30203", "typeString": "enum BaseWeightedPool.ExitKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 5823, "name": "BaseWeightedPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31399, "src": "22510:16:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BaseWeightedPool_$31399_$", "typeString": "type(contract BaseWeightedPool)"}}, "id": 5824, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ExitKind", "nodeType": "MemberAccess", "referencedDeclaration": 30203, "src": "22510:25:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_ExitKind_$30203_$", "typeString": "type(enum BaseWeightedPool.ExitKind)"}}, "id": 5825, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "EXACT_BPT_IN_FOR_TOKENS_OUT", "nodeType": "MemberAccess", "src": "22510:53:10", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$30203", "typeString": "enum BaseWeightedPool.ExitKind"}}, "src": "22502:61:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 5838, "nodeType": "Block", "src": "22650:60:10", "statements": [{"expression": {"arguments": [{"expression": {"id": 5834, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 27925, "src": "22672:6:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$27925_$", "typeString": "type(library Errors)"}}, "id": 5835, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNHANDLED_EXIT_KIND", "nodeType": "MemberAccess", "referencedDeclaration": 27717, "src": "22672:26:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 5833, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 27528, "src": "22664:7:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$", "typeString": "function (uint256) pure"}}, "id": 5836, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22664:35:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5837, "nodeType": "ExpressionStatement", "src": "22664:35:10"}]}, "id": 5839, "nodeType": "IfStatement", "src": "22498:212:10", "trueBody": {"id": 5832, "nodeType": "Block", "src": "22565:79:10", "statements": [{"expression": {"arguments": [{"id": 5828, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5804, "src": "22614:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 5829, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5806, "src": "22624:8:10", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 5827, "name": "_exitExactBPTInForTokensOut", "nodeType": "Identifier", "overloadedDeclarations": [5879], "referencedDeclaration": 5879, "src": "22586:27:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 5830, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22586:47:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "functionReturnParameters": 5813, "id": 5831, "nodeType": "Return", "src": "22579:54:10"}]}}]}, "id": 5841, "implemented": true, "kind": "function", "modifiers": [], "name": "_doExit", "nodeType": "FunctionDefinition", "parameters": {"id": 5807, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5804, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 5841, "src": "22162:25:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 5802, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22162:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5803, "nodeType": "ArrayTypeName", "src": "22162:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 5806, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 5841, "src": "22189:21:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 5805, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "22189:5:10", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "22161:50:10"}, "returnParameters": {"id": 5813, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5809, "mutability": "mutable", "name": "bptAmountIn", "nodeType": "VariableDeclaration", "scope": 5841, "src": "22235:19:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5808, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22235:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 5812, "mutability": "mutable", "name": "amountsOut", "nodeType": "VariableDeclaration", "scope": 5841, "src": "22256:27:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 5810, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22256:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5811, "nodeType": "ArrayTypeName", "src": "22256:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "22234:50:10"}, "scope": 6070, "src": "22145:571:10", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [3553], "body": {"id": 5878, "nodeType": "Block", "src": "22904:746:10", "statements": [{"assignments": [5856], "declarations": [{"constant": false, "id": 5856, "mutability": "mutable", "name": "bptAmountIn", "nodeType": "VariableDeclaration", "scope": 5878, "src": "23325:19:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5855, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23325:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 5860, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 5857, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5846, "src": "23347:8:10", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 5858, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "exactBptInForTokensOut", "nodeType": "MemberAccess", "referencedDeclaration": 19492, "src": "23347:31:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (uint256)"}}, "id": 5859, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23347:33:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "23325:55:10"}, {"assignments": [5865], "declarations": [{"constant": false, "id": 5865, "mutability": "mutable", "name": "amountsOut", "nodeType": "VariableDeclaration", "scope": 5878, "src": "23491:27:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 5863, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23491:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5864, "nodeType": "ArrayTypeName", "src": "23491:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 5873, "initialValue": {"arguments": [{"id": 5868, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5844, "src": "23564:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 5869, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5856, "src": "23574:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 5870, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23971, "src": "23587:11:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 5871, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23587:13:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 5866, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18553, "src": "23521:12:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$18553_$", "typeString": "type(library GyroPoolMath)"}}, "id": 5867, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcTokensOutGivenExactBptIn", "nodeType": "MemberAccess", "referencedDeclaration": 17904, "src": "23521:42:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256[] memory)"}}, "id": 5872, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23521:80:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "23491:110:10"}, {"expression": {"components": [{"id": 5874, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5856, "src": "23619:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 5875, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5865, "src": "23632:10:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 5876, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "23618:25:10", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "functionReturnParameters": 5854, "id": 5877, "nodeType": "Return", "src": "23611:32:10"}]}, "id": 5879, "implemented": true, "kind": "function", "modifiers": [], "name": "_exitExactBPTInForTokensOut", "nodeType": "FunctionDefinition", "overrides": {"id": 5848, "nodeType": "OverrideSpecifier", "overrides": [], "src": "22847:8:10"}, "parameters": {"id": 5847, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5844, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 5879, "src": "22759:25:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 5842, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22759:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5843, "nodeType": "ArrayTypeName", "src": "22759:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 5846, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 5879, "src": "22786:21:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 5845, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "22786:5:10", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "22758:50:10"}, "returnParameters": {"id": 5854, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5850, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 5879, "src": "22873:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5849, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22873:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 5853, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 5879, "src": "22882:16:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 5851, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22882:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5852, "nodeType": "ArrayTypeName", "src": "22882:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "22872:27:10"}, "scope": 6070, "src": "22722:928:10", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 5905, "nodeType": "Block", "src": "24074:519:10", "statements": [{"assignments": [5886, 5888, 5890, 5892], "declarations": [{"constant": false, "id": 5886, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 5905, "src": "24303:16:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5885, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24303:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 5888, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 5905, "src": "24321:20:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5887, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24321:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 5890, "mutability": "mutable", "name": "gyroTreasury", "nodeType": "VariableDeclaration", "scope": 5905, "src": "24343:20:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 5889, "name": "address", "nodeType": "ElementaryTypeName", "src": "24343:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 5892, "mutability": "mutable", "name": "balTreasury", "nodeType": "VariableDeclaration", "scope": 5905, "src": "24365:19:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 5891, "name": "address", "nodeType": "ElementaryTypeName", "src": "24365:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 5897, "initialValue": {"arguments": [{"id": 5894, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2606, "src": "24427:14:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 5895, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5882, "src": "24455:21:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 5893, "name": "_getDueProtocolFeeAmounts", "nodeType": "Identifier", "overloadedDeclarations": [5933, 5992], "referencedDeclaration": 5992, "src": "24388:25:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "function (uint256,uint256) view returns (uint256,uint256,address,address)"}}, "id": 5896, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24388:98:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "nodeType": "VariableDeclarationStatement", "src": "24302:184:10"}, {"expression": {"arguments": [{"id": 5899, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5886, "src": "24536:8:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 5900, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5888, "src": "24546:12:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 5901, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5890, "src": "24560:12:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 5902, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5892, "src": "24574:11:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 5898, "name": "_payFeesBpt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6024, "src": "24524:11:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$", "typeString": "function (uint256,uint256,address,address)"}}, "id": 5903, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24524:62:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5904, "nodeType": "ExpressionStatement", "src": "24524:62:10"}]}, "documentation": {"id": 5880, "nodeType": "StructuredDocumentation", "src": "23751:253:10", "text": " @dev Computes and distributes fees between the Balancer and the Gyro treasury\n The fees are computed and distributed in BPT rather than using the\n Balancer regular distribution mechanism which would pay these in underlying"}, "id": 5906, "implemented": true, "kind": "function", "modifiers": [], "name": "_distributeFees", "nodeType": "FunctionDefinition", "parameters": {"id": 5883, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5882, "mutability": "mutable", "name": "invariantBeforeAction", "nodeType": "VariableDeclaration", "scope": 5906, "src": "24034:29:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5881, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24034:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "24033:31:10"}, "returnParameters": {"id": 5884, "nodeType": "ParameterList", "parameters": [], "src": "24074:0:10"}, "scope": 6070, "src": "24009:584:10", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [3691], "body": {"id": 5932, "nodeType": "Block", "src": "25042:42:10", "statements": [{"expression": {"arguments": [{"hexValue": "4e6f7420696d706c656d656e746564", "id": 5929, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "25059:17:10", "typeDescriptions": {"typeIdentifier": "t_stringliteral_9f5474d7a5849b3f79e8aee7ea2c60bcd36a60a08b4fa41f97e2fccf1c4df98b", "typeString": "literal_string \"Not implemented\""}, "value": "Not implemented"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_9f5474d7a5849b3f79e8aee7ea2c60bcd36a60a08b4fa41f97e2fccf1c4df98b", "typeString": "literal_string \"Not implemented\""}], "id": 5928, "name": "revert", "nodeType": "Identifier", "overloadedDeclarations": [-19, -19], "referencedDeclaration": -19, "src": "25052:6:10", "typeDescriptions": {"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory) pure"}}, "id": 5930, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25052:25:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5931, "nodeType": "ExpressionStatement", "src": "25052:25:10"}]}, "documentation": {"id": 5907, "nodeType": "StructuredDocumentation", "src": "24599:96:10", "text": " @dev this function overrides inherited function to make sure it is never used"}, "id": 5933, "implemented": true, "kind": "function", "modifiers": [], "name": "_getDueProtocolFeeAmounts", "nodeType": "FunctionDefinition", "overrides": {"id": 5923, "nodeType": "OverrideSpecifier", "overrides": [], "src": "25006:8:10"}, "parameters": {"id": 5922, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5910, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 5933, "src": "24744:16:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 5908, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24744:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5909, "nodeType": "ArrayTypeName", "src": "24744:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 5913, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 5933, "src": "24783:16:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 5911, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24783:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5912, "nodeType": "ArrayTypeName", "src": "24783:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 5915, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 5933, "src": "24831:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5914, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24831:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 5917, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 5933, "src": "24872:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5916, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24872:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 5919, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 5933, "src": "24911:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5918, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24911:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 5921, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 5933, "src": "24949:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5920, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24949:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "24734:257:10"}, "returnParameters": {"id": 5927, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5926, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 5933, "src": "25024:16:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 5924, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25024:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5925, "nodeType": "ArrayTypeName", "src": "25024:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "25023:18:10"}, "scope": 6070, "src": "24700:384:10", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 5991, "nodeType": "Block", "src": "25707:681:10", "statements": [{"assignments": [5950, 5952, 5954, 5956], "declarations": [{"constant": false, "id": 5950, "mutability": "mutable", "name": "protocolSwapFeePerc", "nodeType": "VariableDeclaration", "scope": 5991, "src": "25718:27:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5949, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25718:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 5952, "mutability": "mutable", "name": "protocolFeeGyroPortion", "nodeType": "VariableDeclaration", "scope": 5991, "src": "25747:30:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5951, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25747:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 5954, "mutability": "mutable", "name": "gyroTreasury", "nodeType": "VariableDeclaration", "scope": 5991, "src": "25779:20:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 5953, "name": "address", "nodeType": "ElementaryTypeName", "src": "25779:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 5956, "mutability": "mutable", "name": "balTreasury", "nodeType": "VariableDeclaration", "scope": 5991, "src": "25801:19:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 5955, "name": "address", "nodeType": "ElementaryTypeName", "src": "25801:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 5959, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 5957, "name": "_getFeesMetadata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6058, "src": "25824:16:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "function () view returns (uint256,uint256,address,address)"}}, "id": 5958, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25824:18:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "nodeType": "VariableDeclarationStatement", "src": "25717:125:10"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5962, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5960, "name": "protocolSwapFeePerc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5950, "src": "25938:19:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 5961, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "25961:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "25938:24:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 5970, "nodeType": "IfStatement", "src": "25934:95:10", "trueBody": {"id": 5969, "nodeType": "Block", "src": "25964:65:10", "statements": [{"expression": {"components": [{"hexValue": "30", "id": 5963, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "25986:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"hexValue": "30", "id": 5964, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "25989:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"id": 5965, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5954, "src": "25992:12:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 5966, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5956, "src": "26006:11:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 5967, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "25985:33:10", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_address_$_t_address_$", "typeString": "tuple(int_const 0,int_const 0,address,address)"}}, "functionReturnParameters": 5948, "id": 5968, "nodeType": "Return", "src": "25978:40:10"}]}}, {"assignments": [5972, 5974], "declarations": [{"constant": false, "id": 5972, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 5991, "src": "26073:16:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5971, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26073:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 5974, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 5991, "src": "26091:20:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5973, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26091:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 5984, "initialValue": {"arguments": [{"id": 5977, "name": "previousInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5936, "src": "26159:17:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 5978, "name": "currentInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5938, "src": "26190:16:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 5979, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23971, "src": "26220:11:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 5980, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26220:13:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 5981, "name": "protocolSwapFeePerc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5950, "src": "26247:19:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 5982, "name": "protocolFeeGyroPortion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5952, "src": "26280:22:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 5975, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18553, "src": "26115:12:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$18553_$", "typeString": "type(library GyroPoolMath)"}}, "id": 5976, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcProtocolFees", "nodeType": "MemberAccess", "referencedDeclaration": 17988, "src": "26115:30:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,uint256,uint256) pure returns (uint256,uint256)"}}, "id": 5983, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26115:197:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "26072:240:10"}, {"expression": {"components": [{"id": 5985, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5972, "src": "26331:8:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 5986, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5974, "src": "26341:12:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 5987, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5954, "src": "26355:12:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 5988, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5956, "src": "26369:11:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 5989, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "26330:51:10", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "functionReturnParameters": 5948, "id": 5990, "nodeType": "Return", "src": "26323:58:10"}]}, "documentation": {"id": 5934, "nodeType": "StructuredDocumentation", "src": "25090:379:10", "text": " @dev\n Note: This function is identical to that used in Gyro2CLPPool.sol.\n Calculates protocol fee amounts in BPT terms.\n protocolSwapFeePercentage is not used here b/c we take parameters from GyroConfig instead.\n Returns: BPT due to Gyro, BPT due to Balancer, receiving address for Gyro fees, receiving address for Balancer\n fees."}, "id": 5992, "implemented": true, "kind": "function", "modifiers": [], "name": "_getDueProtocolFeeAmounts", "nodeType": "FunctionDefinition", "parameters": {"id": 5939, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5936, "mutability": "mutable", "name": "previousInvariant", "nodeType": "VariableDeclaration", "scope": 5992, "src": "25509:25:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5935, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25509:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 5938, "mutability": "mutable", "name": "currentInvariant", "nodeType": "VariableDeclaration", "scope": 5992, "src": "25536:24:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5937, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25536:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "25508:53:10"}, "returnParameters": {"id": 5948, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5941, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 5992, "src": "25622:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5940, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25622:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 5943, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 5992, "src": "25643:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5942, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25643:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 5945, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 5992, "src": "25664:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 5944, "name": "address", "nodeType": "ElementaryTypeName", "src": "25664:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 5947, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 5992, "src": "25685:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 5946, "name": "address", "nodeType": "ElementaryTypeName", "src": "25685:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "25608:94:10"}, "scope": 6070, "src": "25474:914:10", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 6023, "nodeType": "Block", "src": "26618:283:10", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 6005, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 6003, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5994, "src": "26676:8:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 6004, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "26687:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "26676:12:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 6012, "nodeType": "IfStatement", "src": "26672:82:10", "trueBody": {"id": 6011, "nodeType": "Block", "src": "26690:64:10", "statements": [{"expression": {"arguments": [{"id": 6007, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5998, "src": "26720:12:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 6008, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5994, "src": "26734:8:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 6006, "name": "_mintPoolTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21880, "src": "26704:15:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 6009, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26704:39:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 6010, "nodeType": "ExpressionStatement", "src": "26704:39:10"}]}}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 6015, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 6013, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5996, "src": "26810:12:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 6014, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "26825:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "26810:16:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 6022, "nodeType": "IfStatement", "src": "26806:89:10", "trueBody": {"id": 6021, "nodeType": "Block", "src": "26828:67:10", "statements": [{"expression": {"arguments": [{"id": 6017, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6000, "src": "26858:11:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 6018, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5996, "src": "26871:12:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 6016, "name": "_mintPoolTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21880, "src": "26842:15:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 6019, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26842:42:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 6020, "nodeType": "ExpressionStatement", "src": "26842:42:10"}]}}]}, "id": 6024, "implemented": true, "kind": "function", "modifiers": [], "name": "_payFeesBpt", "nodeType": "FunctionDefinition", "parameters": {"id": 6001, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5994, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 6024, "src": "26497:16:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5993, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26497:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 5996, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 6024, "src": "26523:20:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5995, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26523:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 5998, "mutability": "mutable", "name": "gyroTreasury", "nodeType": "VariableDeclaration", "scope": 6024, "src": "26553:20:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 5997, "name": "address", "nodeType": "ElementaryTypeName", "src": "26553:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 6000, "mutability": "mutable", "name": "balTreasury", "nodeType": "VariableDeclaration", "scope": 6024, "src": "26583:19:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 5999, "name": "address", "nodeType": "ElementaryTypeName", "src": "26583:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "26487:121:10"}, "returnParameters": {"id": 6002, "nodeType": "ParameterList", "parameters": [], "src": "26618:0:10"}, "scope": 6070, "src": "26467:434:10", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 6057, "nodeType": "Block", "src": "27153:324:10", "statements": [{"expression": {"components": [{"arguments": [{"expression": {"id": 6037, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19096, "src": "27203:14:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$19096_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 6038, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "PROTOCOL_SWAP_FEE_PERC_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 19086, "src": "27203:41:10", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 6035, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4664, "src": "27184:10:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$19081", "typeString": "contract IGyroConfig"}}, "id": 6036, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getUint", "nodeType": "MemberAccess", "referencedDeclaration": 19056, "src": "27184:18:10", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_uint256_$", "typeString": "function (bytes32) view external returns (uint256)"}}, "id": 6039, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27184:61:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"expression": {"id": 6042, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19096, "src": "27278:14:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$19096_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 6043, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "PROTOCOL_FEE_GYRO_PORTION_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 19089, "src": "27278:44:10", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 6040, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4664, "src": "27259:10:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$19081", "typeString": "contract IGyroConfig"}}, "id": 6041, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getUint", "nodeType": "MemberAccess", "referencedDeclaration": 19056, "src": "27259:18:10", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_uint256_$", "typeString": "function (bytes32) view external returns (uint256)"}}, "id": 6044, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27259:64:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"expression": {"id": 6047, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19096, "src": "27359:14:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$19096_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 6048, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "GYRO_TREASURY_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 19092, "src": "27359:32:10", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 6045, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4664, "src": "27337:10:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$19081", "typeString": "contract IGyroConfig"}}, "id": 6046, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getAddress", "nodeType": "MemberAccess", "referencedDeclaration": 19064, "src": "27337:21:10", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$", "typeString": "function (bytes32) view external returns (address)"}}, "id": 6049, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27337:55:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"expression": {"id": 6052, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19096, "src": "27428:14:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$19096_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 6053, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "BAL_TREASURY_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 19095, "src": "27428:31:10", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 6050, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4664, "src": "27406:10:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$19081", "typeString": "contract IGyroConfig"}}, "id": 6051, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getAddress", "nodeType": "MemberAccess", "referencedDeclaration": 19064, "src": "27406:21:10", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$", "typeString": "function (bytes32) view external returns (address)"}}, "id": 6054, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27406:54:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 6055, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "27170:300:10", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "functionReturnParameters": 6034, "id": 6056, "nodeType": "Return", "src": "27163:307:10"}]}, "id": 6058, "implemented": true, "kind": "function", "modifiers": [], "name": "_getFeesMetadata", "nodeType": "FunctionDefinition", "parameters": {"id": 6025, "nodeType": "ParameterList", "parameters": [], "src": "27005:2:10"}, "returnParameters": {"id": 6034, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 6027, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 6058, "src": "27068:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 6026, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27068:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 6029, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 6058, "src": "27089:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 6028, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27089:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 6031, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 6058, "src": "27110:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 6030, "name": "address", "nodeType": "ElementaryTypeName", "src": "27110:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 6033, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 6058, "src": "27131:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 6032, "name": "address", "nodeType": "ElementaryTypeName", "src": "27131:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "27054:94:10"}, "scope": 6070, "src": "26980:497:10", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [9168], "body": {"id": 6068, "nodeType": "Block", "src": "27539:35:10", "statements": [{"expression": {"arguments": [{"id": 6065, "name": "paused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6060, "src": "27560:6:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 6064, "name": "_setPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23839, "src": "27549:10:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$", "typeString": "function (bool)"}}, "id": 6066, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27549:18:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 6067, "nodeType": "ExpressionStatement", "src": "27549:18:10"}]}, "id": 6069, "implemented": true, "kind": "function", "modifiers": [], "name": "_setPausedState", "nodeType": "FunctionDefinition", "overrides": {"id": 6062, "nodeType": "OverrideSpecifier", "overrides": [], "src": "27530:8:10"}, "parameters": {"id": 6061, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 6060, "mutability": "mutable", "name": "paused", "nodeType": "VariableDeclaration", "scope": 6069, "src": "27508:11:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 6059, "name": "bool", "nodeType": "ElementaryTypeName", "src": "27508:4:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "27507:13:10"}, "returnParameters": {"id": 6063, "nodeType": "ParameterList", "parameters": [], "src": "27539:0:10"}, "scope": 6070, "src": "27483:91:10", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}], "scope": 6071, "src": "1289:26287:10"}], "src": "688:26889:10"}, "bytecode": "6102a06040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9610120523480156200003757600080fd5b50604051620058d3380380620058d38339810160408190526200005a9162000c97565b60408181015161010081015160c082015160e0830151855184516020860151958701518751600380825260808201909952959794969395929491939290918160200160208202803683370190505088604001516060015189606001518a608001518b6040015160a00151888651600214620000d7576001620000da565b60025b8989898989898989828289898d8280604051806040016040528060018152602001603160f81b81525085858a336001600160a01b031660001b806080818152505050806001600160a01b031660a0816001600160a01b031660601b815250505081600390805190602001906200015292919062000936565b5080516200016890600490602084019062000936565b505060058054601260ff1990911617905550815160209283012060c052805191012060e052507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6101005260601b6001600160601b0319166101405250620001db90506276a7008311156101946200061f565b620001ef62278d008211156101956200061f565b429091016101608190520161018052855162000211906002111560c86200061f565b6200022b6200021f62000634565b8751111560c96200061f565b62000241866200063960201b620013951760201c565b6200024c8462000645565b6040516309b2760f60e01b81526000906001600160a01b038c16906309b2760f906200027d908d9060040162000e17565b602060405180830381600087803b1580156200029857600080fd5b505af1158015620002ad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002d3919062000c7e565b604051633354e3e960e11b81529091506001600160a01b038c16906366a9c7d290620003089084908b908b9060040162000d7d565b600060405180830381600087803b1580156200032357600080fd5b505af115801562000338573d6000803e3d6000fd5b50505050806101a08181525050505050505050505050505050505050505050505060006001600160a01b0316826001600160a01b031614156040518060400160405280600e81526020016d1b9bdd08185d5d1a1bdc9a5e995960921b81525090620003c15760405162461bcd60e51b8152600401620003b8919062000e2c565b60405180910390fd5b50600b80546001600160a01b0319166001600160a01b039384161790558051600a8054602084015160409094015160ff1990911692151592909217610100600160801b0319166101006001600160781b0390941693909302929092176001600160801b03908116600160801b91909216021790556200044690821615156069620006d1565b600c80546001600160a01b0319166001600160a01b0392909216919091179055604081810151015180516200048190600314610161620006d1565b62000497816200063960201b620013951760201c565b6020820151620004b4906001600160a01b031615156069620006d1565b80600081518110620004c257fe5b60200260200101516001600160a01b03166101e0816001600160a01b031660601b8152505080600181518110620004f557fe5b60200260200101516001600160a01b0316610200816001600160a01b031660601b81525050806002815181106200052857fe5b60200260200101516001600160a01b0316610220816001600160a01b031660601b8152505062000573816000815181106200055f57fe5b6020026020010151620006e260201b60201c565b6102405280516200058c90829060019081106200055f57fe5b610260528051620005a590829060029081106200055f57fe5b61028052604082015160800151620005e890670233f548dddd560211801590620005df5750670de098625faac3a883604001516080015111155b61015f620006d1565b506040810151608001516101c05260200151600d80546001600160a01b0319166001600160a01b0390921691909117905562000ed7565b8162000630576200063081620007b6565b5050565b600390565b80620006308162000809565b6200065a64e8d4a5100082101560cb6200061f565b6200067267016345785d8a000082111560ca6200061f565b620006918160c06008546200089660201b6200139f179092919060201c565b6008556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc90620006c690839062000e61565b60405180910390a150565b8162000630576200063081620008ab565b60006001600160a01b038216301415620007065750670de0b6b3a7640000620007b1565b6000826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156200074257600080fd5b505afa15801562000757573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200077d919062000d53565b60ff16905060006200079c601283620008bd60201b620013b41760201c565b905080600a0a670de0b6b3a764000002925050505b919050565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6002815110156200081a5762000893565b6000816000815181106200082a57fe5b602002602001015190506000600190505b8251811015620008905760008382815181106200085457fe5b6020026020010151905062000885816001600160a01b0316846001600160a01b03161060656200061f60201b60201c565b91506001016200083b565b50505b50565b6001600160401b03811b1992909216911b1790565b62000893816223aca960e91b620008d5565b6000620008cf8383111560016200061f565b50900390565b62461bcd60e51b600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fd5b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200096e5760008555620009b9565b82601f106200098957805160ff1916838001178555620009b9565b82800160010185558215620009b9579182015b82811115620009b95782518255916020019190600101906200099c565b50620009c7929150620009cb565b5090565b5b80821115620009c75760008155600101620009cc565b8051620007b18162000ec1565b600082601f83011262000a00578081fd5b815160206001600160401b0382111562000a1657fe5b80820262000a2682820162000e6a565b83815282810190868401838801850189101562000a41578687fd5b8693505b8584101562000a7057805162000a5b8162000ec1565b83526001939093019291840191840162000a45565b50979650505050505050565b600082601f83011262000a8d578081fd5b81516001600160401b0381111562000aa157fe5b62000ab6601f8201601f191660200162000e6a565b81815284602083860101111562000acb578283fd5b62000ade82602083016020870162000e8e565b949350505050565b60006060828403121562000af8578081fd5b604051606081016001600160401b038111828210171562000b1557fe5b80604052508091508251801515811462000b2e57600080fd5b815260208301516001600160781b038116811462000b4b57600080fd5b602082015260408301516001600160801b038116811462000b6b57600080fd5b6040919091015292915050565b6000610160828403121562000b8b578081fd5b62000b9861012062000e6a565b82519091506001600160401b038082111562000bb357600080fd5b62000bc18583860162000a7c565b8352602084015191508082111562000bd857600080fd5b62000be68583860162000a7c565b6020840152604084015191508082111562000c0057600080fd5b5062000c0f84828501620009ef565b604083015250606082015160608201526080820151608082015262000c3760a08301620009e2565b60a082015262000c4a60c08301620009e2565b60c082015262000c5e8360e0840162000ae6565b60e082015262000c726101408301620009e2565b61010082015292915050565b60006020828403121562000c90578081fd5b5051919050565b60006020828403121562000ca9578081fd5b81516001600160401b038082111562000cc0578283fd5b9083019060a0828603121562000cd4578283fd5b60405160a08101818110838211171562000cea57fe5b60405262000cf883620009e2565b815262000d0860208401620009e2565b602082015260408301518281111562000d1f578485fd5b62000d2d8782860162000b78565b604083015250606083015160608201526080830151608082015280935050505092915050565b60006020828403121562000d65578081fd5b815160ff8116811462000d76578182fd5b9392505050565b60006060820185835260206060818501528186518084526080860191508288019350845b8181101562000dc85784516001600160a01b03168352938301939183019160010162000da1565b505084810360408601528551808252908201925081860190845b8181101562000e095782516001600160a01b03168552938301939183019160010162000de2565b509298975050505050505050565b602081016003831062000e2657fe5b91905290565b600060208252825180602084015262000e4d81604085016020870162000e8e565b601f01601f19169190910160400192915050565b90815260200190565b6040518181016001600160401b038111828210171562000e8657fe5b604052919050565b60005b8381101562000eab57818101518382015260200162000e91565b8381111562000ebb576000848401525b50505050565b6001600160a01b03811681146200089357600080fd5b60805160a05160601c60c05160e05161010051610120516101405160601c61016051610180516101a0516101c0516101e05160601c6102005160601c6102205160601c6102405161026051610280516148b86200101b600039806116045280611f035280612ad252806131135250806115ca5280611ea25280612a6f52806131a35250806115905280611e415280612a0c528061326f525080611ec85280612ab152806130f052806131395280613205525080611e675280612a4e52806130b5528061318052806131c9525080611e0652806129eb528061307b528061324d52508061132c52806119b35280611ce8528061208b528061215852806133405250806107a35250806115195250806114f5525080610e365250806110ba52508061173b52508061177d52508061175c525080610e12525080610d9752506148b86000f3fe608060405234801561001057600080fd5b50600436106102745760003560e01c806374f3b009116101515780639d2c110c116100c3578063c0ff1a1511610087578063c0ff1a1514610500578063d505accf14610508578063d5c096c41461051b578063d60ca6031461052e578063dd62ed3e14610536578063f89f27ed1461054957610274565b80639d2c110c146104b7578063a457c2d7146104ca578063a9059cbb146104dd578063aaabadc5146104f0578063abd13afe146104f857610274565b8063851c1bb311610115578063851c1bb31461047157806387ec681714610484578063893d20e8146104975780638d928af81461049f57806395d89b41146104a75780639b02cdde146104af57610274565b806374f3b0091461040f57806376e54a46146104305780637ecebe00146104435780638002df18146104565780638456cb591461046957610274565b806338fff2d0116101ea57806350dd6ed9116101ae57806350dd6ed9146103b057806355c67628146103c35780636028bfd4146103cb578063679aefce146103ec5780636d785a87146103f457806370a08231146103fc57610274565b806338fff2d014610363578063395093511461036b5780633aeae0d31461037e5780633f4ba83a1461039357806344bbdb551461039b57610274565b80631c0de0511161023c5780631c0de051146102f45780631dd746ea1461030b57806323b872dd14610320578063313ce567146103335780633644e5151461034857806338e9922e1461035057610274565b806306fdde0314610279578063095ea7b3146102975780630e608b30146102b757806316c38b3c146102cc57806318160ddd146102df575b600080fd5b610281610551565b60405161028e91906147b0565b60405180910390f35b6102aa6102a53660046142ca565b6105e7565b60405161028e9190614754565b6102ca6102c53660046141a5565b6105fe565b005b6102ca6102da3660046142f5565b6106af565b6102e76106c3565b60405161028e9190614777565b6102fc6106c9565b60405161028e9392919061475f565b6103136106f2565b60405161028e919061471c565b6102aa61032e366004614215565b610701565b61033b610775565b60405161028e919061483c565b6102e761077e565b6102ca61035e366004614603565b610788565b6102e76107a1565b6102aa6103793660046142ca565b6107c5565b610386610800565b60405161028e91906147c3565b6102ca61084b565b6103a3610940565b60405161028e9190614708565b6102ca6103be366004614442565b61094f565b6102e761096d565b6103de6103d936600461430f565b61097e565b60405161028e929190614823565b6102e76109b5565b6103a36109e0565b6102e761040a3660046141a5565b6109ef565b61042261041d36600461430f565b610a0e565b60405161028e92919061472f565b6102ca61043e36600461448f565b610ab1565b6102e76104513660046141a5565b610bd8565b6102ca6104643660046141a5565b610bf3565b6102ca610cd9565b6102e761047f36600461441a565b610d91565b6103de61049236600461430f565b610dea565b6103a3610e10565b6103a3610e34565b610281610e58565b6102e7610eb9565b6102e76104c536600461450d565b610ebf565b6102aa6104d83660046142ca565b61101d565b6102aa6104eb3660046142ca565b61105b565b6103a3611068565b6103a3611072565b6102e7611081565b6102ca610516366004614255565b61108b565b61042261052936600461430f565b6111fb565b6102e761132a565b6102e76105443660046141dd565b61134e565b61031361138b565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105dd5780601f106105b2576101008083540402835291602001916105dd565b820191906000526020600020905b8154815290600101906020018083116105c057829003601f168201915b5050505050905090565b60006105f43384846113ca565b5060015b92915050565b600b5460408051808201909152600e81526d1b9bdd08185d5d1a1bdc9a5e995960921b6020820152906001600160a01b031633146106585760405162461bcd60e51b815260040161064f91906147b0565b60405180910390fd5b50600b80546001600160a01b0319166001600160a01b0383161790556040517fb8fd9afc34c38fcd13b9a3b7646482eb1fddcefb40af2c70609972816eba3208906106a4908390614708565b60405180910390a150565b6106b761142c565b6106c08161145a565b50565b60025490565b60008060006106d66114d6565b1592506106e16114f3565b91506106eb611517565b9050909192565b60606106fc61153b565b905090565b60008061070e853361134e565b9050610732336001600160a01b038716148061072a5750838210155b61019e611641565b61073d85858561164f565b336001600160a01b0386161480159061075857506000198114155b1561076a5761076a85338584036113ca565b506001949350505050565b60055460ff1690565b60006106fc611737565b61079061142c565b6107986117f5565b6106c08161180a565b7f000000000000000000000000000000000000000000000000000000000000000090565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916105f49185906107fb9086611875565b6113ca565b6108086140f7565b5060408051606081018252600a5460ff81161515825261010081046001600160781b03166020830152600160801b90046001600160801b03169181019190915290565b600c546040805180820190915260118152703737ba103830bab9b29036b0b730b3b2b960791b6020820152906001600160a01b0316331461090a5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156108cf5781810151838201526020016108b7565b50505050905090810190601f1680156108fc5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5061091560006106b7565b6040517f215385c8bfc731925ec8068d7baa50f6b6f34417cc7804f7273dc2c0b3db279090600090a1565b600d546001600160a01b031681565b61095761142c565b61095f6117f5565b610969828261188e565b5050565b6008546000906106fc9060c061198d565b60006060610994865161098f61199a565b61199f565b6109a9898989898989896119ac611a70611ad6565b97509795505050505050565b60006106fc6109c26106c3565b6109da6109cd611081565b6109d561199a565b611bf8565b90611c1c565b600b546001600160a01b031681565b6001600160a01b0381166000908152602081905260409020545b919050565b60608088610a38610a1d610e34565b6001600160a01b0316336001600160a01b03161460cd611641565b610a4d610a436107a1565b82146101f4611641565b6000610a5761153b565b9050610a638882611c76565b6000806000610a788e8e8e8e8e8e8a8f6119ac565b925092509250610a888d84611cd7565b610a928285611a70565b610a9c8185611a70565b909550935050505b5097509795505050505050565b600b5460408051808201909152600e81526d1b9bdd08185d5d1a1bdc9a5e995960921b6020820152906001600160a01b03163314610b025760405162461bcd60e51b815260040161064f91906147b0565b50600a5460408051808201909152601081526f1c1bdbdb081a5cc81d5b98d85c1c195960821b60208201529060ff16610b4e5760405162461bcd60e51b815260040161064f91906147b0565b508051600a8054602084015160408086015160ff19909316941515949094176fffffffffffffffffffffffffffffff0019166101006001600160781b0390921691909102176001600160801b03908116600160801b919092160217815590517f2abf5970d7bc1a2b36eaae52dd2cc353edb0337c7284ef8a01973081b4e04424916106a4916147f8565b6001600160a01b031660009081526006602052604090205490565b600c546040805180820190915260118152703737ba103830bab9b29036b0b730b3b2b960791b60208201526001600160a01b0390911690338214610c785760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156108cf5781810151838201526020016108b7565b50600c80546001600160a01b0319166001600160a01b03848116918217909255604080519284168352602083019190915280517f1ffccd1fa96f4fb3415df8048a0fd107344e262d2d246c85105e2a3f8f3e81989281900390910190a15050565b600c546040805180820190915260118152703737ba103830bab9b29036b0b730b3b2b960791b6020820152906001600160a01b03163314610d5b5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156108cf5781810151838201526020016108b7565b50610d6660016106b7565b6040517f681eace576127d0553b224436a09801fb47d042942cbff59d7d4ff04d8fa03d790600090a1565b604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091526001600160e01b03198416828401528251602481840301815260449092019092528051910120919050565b60006060610dfb865161098f61199a565b6109a989898989898989611ce1611da1611ad6565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105dd5780601f106105b2576101008083540402835291602001916105dd565b60095490565b60008360800151610ed1610a1d610e34565b610edc610a436107a1565b6000610eeb8660200151611e02565b90506000610efc8760400151611e02565b9050600087516001811115610f0d57fe5b1415610f9d576000610f228860600151611f32565b90506000818960600151039050610f468960200151610f418387611f53565b611f5f565b60608901829052610f578885611f53565b9750610f638784611f53565b9650610f73896060015185611f53565b60608a01526000610f858a8a8a611f71565b9050610f918185611f9f565b96505050505050611015565b610fa78683611f53565b9550610fb38582611f53565b9450610fc3876060015182611f53565b60608801526000610fd5888888611fab565b9050610fe18184611fd0565b90506000610fee82611fdc565b9050600082820390506110098a60200151610f418388611f53565b50945061101592505050565b509392505050565b60008061102a338561134e565b90508083106110445761103f338560006113ca565b611051565b61105133858584036113ca565b5060019392505050565b60006105f433848461164f565b60006106fc612002565b600c546001600160a01b031681565b60006106fc61207c565b6110998442111560d1611641565b6001600160a01b0380881660008181526006602090815260408083205481517f00000000000000000000000000000000000000000000000000000000000000008185015280830195909552948b166060850152608084018a905260a0840185905260c08085018a90528151808603909101815260e09094019052825192019190912090611125826120af565b9050600060018288888860405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015611183573d6000803e3d6000fd5b5050604051601f19015191506111c590506001600160a01b038216158015906111bd57508b6001600160a01b0316826001600160a01b0316145b6101f8611641565b6001600160a01b038b1660009081526006602052604090206001850190556111ee8b8b8b6113ca565b5050505050505050505050565b6060808861120a610a1d610e34565b611215610a436107a1565b600061121f61153b565b90506112296106c3565b6112da5760008061123d8d8d8d868b6120fb565b9150915061125661124c6121a2565b83101560cc611641565b61126860006112636121a2565b6121a9565b61127b8b6112746121a2565b84036121a9565b6112858184611da1565b8061128e61199a565b6001600160401b03811180156112a357600080fd5b506040519080825280602002602001820160405280156112cd578160200160208202803683370190505b5095509550505050610aa4565b6112e48882611c76565b60008060006112f98e8e8e8e8e8e8a8f611ce1565b9250925092506113098c846121a9565b6113138285611da1565b61131d8185611a70565b9095509350610aa4915050565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000611358610e34565b6001600160a01b0316826001600160a01b0316141561137a57506000196105f8565b61138483836121b3565b90506105f8565b60606106fc6121de565b8061096981612275565b6001600160401b03811b1992909216911b1790565b60006113c4838311156001611641565b50900390565b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b60006114436000356001600160e01b031916610d91565b90506106c061145282336122ee565b610191611641565b801561147a5761147561146b6114f3565b4210610193611641565b61148f565b61148f611485611517565b42106101a9611641565b6007805482151560ff19909116811790915560408051918252517f9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be649181900360200190a150565b60006114e0611517565b4211806106fc57505060075460ff161590565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6060600061154761199a565b90506000816001600160401b038111801561156157600080fd5b5060405190808252806020026020018201604052801561158b578160200160208202803683370190505b5090507f0000000000000000000000000000000000000000000000000000000000000000816000815181106115bc57fe5b6020026020010181815250507f0000000000000000000000000000000000000000000000000000000000000000816001815181106115f657fe5b6020026020010181815250507f00000000000000000000000000000000000000000000000000000000000000008160028151811061163057fe5b602090810291909101015291505090565b8161096957610969816123f0565b6116666001600160a01b0384161515610198611641565b61167d6001600160a01b0383161515610199611641565b611688838383611ad1565b6001600160a01b0383166000908152602081905260409020546116ae90826101a0612443565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546116dd9082611875565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006117a4612459565b3060405160200180868152602001858152602001848152602001838152602001826001600160a01b031681526020019550505050505060405160208183030381529060405280519060200120905090565b6118086118006114d6565b610192611641565b565b61181d64e8d4a5100082101560cb611641565b61183367016345785d8a000082111560ca611641565b600854611842908260c061139f565b6008556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc906106a4908390614777565b60008282016118878482101583611641565b9392505050565b60006118986107a1565b905060006118a4610e34565b6001600160a01b031663b05f8e4883866040518363ffffffff1660e01b81526004016118d1929190614799565b60806040518083038186803b1580156118e957600080fd5b505afa1580156118fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119219190614633565b604051630639cdb560e21b81529094506001600160a01b03851693506318e736d49250611955915085908790600401614780565b600060405180830381600087803b15801561196f57600080fd5b505af1158015611983573d6000803e3d6000fd5b5050505050505050565b1c6001600160401b031690565b600390565b6109698183146067611641565b60006060807f00000000000000000000000000000000000000000000000000000000000000006119da6114d6565b15611a225760006119eb8a8361245d565b90506119f681612531565b611a008a8761255e565b9095509350611a198186611a126106c3565b60006125ab565b60095550611a38565b611a2c898661255e565b60001960095590945092505b604080516003808252608082019092528591859190602082016060803683370190505093509350935050985098509895505050505050565b60005b611a7b61199a565b811015611ad157611ab2838281518110611a9157fe5b6020026020010151838381518110611aa557fe5b6020026020010151612605565b838281518110611abe57fe5b6020908102919091010152600101611a73565b505050565b333014611b94576000306001600160a01b0316600036604051611afa9291906146f8565b6000604051808303816000865af19150503d8060008114611b37576040519150601f19603f3d011682016040523d82523d6000602084013e611b3c565b606091505b505090508060008114611b4b57fe5b60046000803e6000516001600160e01b0319166343adbafb60e01b8114611b76573d6000803e3d6000fd5b506020600460003e604060205260243d03602460403e601c3d016000f35b6000611b9e61153b565b9050611baa8782611c76565b600080611bc18c8c8c8c8c8c898d8d63ffffffff16565b5091509150611bd481848663ffffffff16565b8051601f1982018390526343adbafb603f1983015260200260231982016044820181fd5b6000828202611887841580611c15575083858381611c1257fe5b04145b6003611641565b600081611c2f57611c2f60006004611641565b82611c3c575060006105f8565b670de0b6b3a764000083810290848281611c5257fe5b0414611c6457611c6460006005611641565b828181611c6d57fe5b04949350505050565b60005b611c8161199a565b811015611ad157611cb8838281518110611c9757fe5b6020026020010151838381518110611cab57fe5b6020026020010151612632565b838281518110611cc457fe5b6020908102919091010152600101611c79565b610969828261265b565b60006060807f000000000000000000000000000000000000000000000000000000000000000083611d128a8361245d565b9050611d1d81612531565b611d278a87612712565b600a54919650945060ff1615611d5157611d5185611d448d6109ef565b611d4c6106c3565b612756565b611d658186611d5e6106c3565b60016125ab565b60095560408051600380825260808201909252869186919060208201606080368337019050509450945094505050985098509895505050505050565b60005b611dac61199a565b811015611ad157611de3838281518110611dc257fe5b6020026020010151838381518110611dd657fe5b6020026020010151612868565b838281518110611def57fe5b6020908102919091010152600101611da4565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161415611e6557507f0000000000000000000000000000000000000000000000000000000000000000610a09565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161415611ec657507f0000000000000000000000000000000000000000000000000000000000000000610a09565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161415611f2757507f0000000000000000000000000000000000000000000000000000000000000000610a09565b610a096101356123f0565b600080611f47611f4061096d565b84906128bf565b905061188783826113b4565b60006118878383612632565b610969611f6b836128fb565b82610969565b6000611f7b6117f5565b6000611f88858585612901565b9050611f96858585846129a0565b95945050505050565b60006118878383612605565b6000611fb56117f5565b6000611fc2858585612901565b9050611f96858585846129b2565b60006118878383612868565b60006105f8611ffb611fec61096d565b670de0b6b3a7640000906113b4565b8390612868565b600061200c610e34565b6001600160a01b031663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b15801561204457600080fd5b505afa158015612058573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fc91906141c1565b60006106fc6120896129c4565b7f000000000000000000000000000000000000000000000000000000000000000061245d565b60006120b9611737565b82604051602001808061190160f01b81525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b600060606121076117f5565b600061211284612b12565b905061212d600082600381111561212557fe5b1460ce611641565b600061213885612b31565b90506121468151600361199f565b6121508187611c76565b600061217c827f000000000000000000000000000000000000000000000000000000000000000061245d565b9050600061218b826003611bf8565b6009929092555093509150505b9550959350505050565b620f424090565b6109698282612be5565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60408051600380825260808201909252606091600091906020820184803683370190505090506003670de0b6b3a7640000048160008151811061221d57fe5b60209081029190910101526003670de0b6b3a7640000048160018151811061224157fe5b60209081029190910101526003670de0b6b3a7640000048160028151811061226557fe5b6020908102919091010152905090565b600281511015612284576106c0565b60008160008151811061229357fe5b602002602001015190506000600190505b8251811015611ad15760008382815181106122bb57fe5b602002602001015190506122e4816001600160a01b0316846001600160a01b0316106065611641565b91506001016122a4565b600073ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b61230d610e10565b6001600160a01b031614158015612328575061232883612c7a565b1561235057612335610e10565b6001600160a01b0316336001600160a01b03161490506105f8565b612358612002565b6001600160a01b0316639be2a8848484306040518463ffffffff1660e01b815260040180848152602001836001600160a01b03168152602001826001600160a01b03168152602001935050505060206040518083038186803b1580156123bd57600080fd5b505afa1580156123d1573d6000803e3d6000fd5b505050506040513d60208110156123e757600080fd5b505190506105f8565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b60006124528484111583611641565b5050900390565b4690565b60006c01431e0fae6d7217caa00000008360008151811061247a57fe5b6020026020010151111561249557612495600061016a612cac565b6c01431e0fae6d7217caa0000000836001815181106124b057fe5b602002602001015111156124cb576124cb600061016a612cac565b6c01431e0fae6d7217caa0000000836002815181106124e657fe5b6020026020010151111561250157612501600061016a612cac565b6000806000806125118787612cba565b9350935093509350612526848484848a612e09565b979650505050505050565b60008060008061254360095486612e5a565b935093509350935061255784848484612ec3565b5050505050565b60006060600061256d84612b12565b9050600181600381111561257d57fe5b14156125975761258d8585612ee9565b92509250506125a4565b6125a26101506123f0565b505b9250929050565b600081156125dd5760006125c9846125c38888612f1b565b90612f70565b90506125d58682612fcd565b9150506125fd565b60006125ed846109da8888612fe5565b90506125f9868261300f565b9150505b949350505050565b60008161261157600080fd5b670de0b6b3a76400008381029084828161262757fe5b0414611c6457600080fd5b600082820261264c841580611c15575083858381611c1257fe5b670de0b6b3a764000081611c6d565b6126726001600160a01b038316151561019b611641565b61267e82600083611ad1565b6001600160a01b0382166000908152602081905260409020546126a490826101a1612443565b6001600160a01b0383166000908152602081905260409020556002546126ca9082613025565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b60006060600061272184612b12565b9050600381600381111561273157fe5b141561274b576127418585613033565b90935091506125a2565b6125a26101366123f0565b60408051606081018252600a5460ff81161515825261010081046001600160781b031660208301819052600160801b9091046001600160801b031692820192909252906127a38585612fcd565b11156040518060400160405280601a81526020017f6f7665722061646472657373206c697175696469747920636170000000000000815250906127f95760405162461bcd60e51b815260040161064f91906147b0565b5060408101516001600160801b03166128128584612fcd565b11156040518060400160405280601981526020017f6f76657220676c6f62616c206c69717569646974792063617000000000000000815250906125575760405162461bcd60e51b815260040161064f91906147b0565b60006128778215156004611641565b82612884575060006105f8565b670de0b6b3a7640000838102906128a79085838161289e57fe5b04146005611641565b8260018203816128b357fe5b046001019150506105f8565b60008282026128d9841580611c15575083858381611c1257fe5b806128e85760009150506105f8565b670de0b6b3a764000060001982016128b3565b50600090565b6040805160038082526080820190925260009182919060208201606080368337019050509050838160008151811061293557fe5b602002602001018181525050828160018151811061294f57fe5b60200260200101818152505060008061297087602001518860400151613058565b9150915061297e8282613295565b8360028151811061298b57fe5b6020026020010181815250506125268361333c565b6000611f968484876060015185613376565b6000611f9684848760600151856133d7565b60408051600380825260808201909252606091602082018380368337019050509050612a307f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000613295565b81600081518110612a3d57fe5b602002602001018181525050612a937f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000613295565b81600181518110612aa057fe5b602002602001018181525050612af67f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000613295565b81600281518110612b0357fe5b60200260200101818152505090565b6000818060200190516020811015612b2957600080fd5b505192915050565b6060818060200190516040811015612b4857600080fd5b815160208301805160405192949293830192919084640100000000821115612b6f57600080fd5b908301906020820185811115612b8457600080fd5b8251866020820283011164010000000082111715612ba157600080fd5b82525081516020918201928201910280838360005b83811015612bce578181015183820152602001612bb6565b505050509190910160405250929695505050505050565b612bf160008383611ad1565b600254612bfe9082611875565b6002556001600160a01b038216600090815260208190526040902054612c249082611875565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000612c8c631c74c91760e11b610d91565b8214806105f85750612ca46350dd6ed960e01b610d91565b909114919050565b816109695761096981613435565b6000808080612cd385612ccd8180613445565b90613445565b670de0b6b3a7640000039350600086600281518110612cee57fe5b602002602001015187600181518110612d0357fe5b602002602001015188600081518110612d1857fe5b602002602001015101019050612d3b86612ccd888461344590919063ffffffff16565b93506000612d7a88600081518110612d4f57fe5b602002602001015189600281518110612d6457fe5b602002602001015161344590919063ffffffff16565b612d9f89600281518110612d8a57fe5b60200260200101518a600181518110612d6457fe5b612dc48a600181518110612daf57fe5b60200260200101518b600081518110612d6457fe5b01019050612dd28188613445565b9350612dfc88600281518110612de457fe5b6020026020010151612ccd8a600181518110612daf57fe5b9250505092959194509250565b600080612e188787878761345c565b92509050612e2a868686868587613501565b91506e01ed09bead87c0378d8e6400000000821115612e5057612e506000610169612cac565b5095945050505050565b600080600080600080600080612e6e6135c5565b93509350935093508360001415612e9357600097508796509094509250612eba915050565b600080612eaa8c8c612ea36106c3565b8989613834565b909a509850929650909450505050505b92959194509250565b8315612ed357612ed382856121a9565b8215612ee357612ee381846121a9565b50505050565b600060606000612ef8846138cd565b90506000612f0e8683612f096106c3565b6138ef565b9196919550909350505050565b6000828202831580612f35575082848281612f3257fe5b04145b612f4557612f4560006003611641565b80612f545760009150506105f8565b670de0b6b3a764000060001982015b0460010191505092915050565b600081612f8357612f8360006004611641565b82612f90575060006105f8565b670de0b6b3a764000083810290848281612fa657fe5b0414612fc157612fc1670de0b6b3a764000085838161289e57fe5b826001820381612f6357fe5b60008282018381101561188757611887600080611641565b6000828202831580612fff575082848281612ffc57fe5b04145b61264c5761264c60006003611641565b6000828211156113c4576113c460006001611641565b600061188783836001612443565b600060606000613042846138cd565b90506000612f0e86836130536106c3565b61398a565b600080826001600160a01b0316846001600160a01b03161115613079579192915b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b031614156131c7577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316141561313757507f000000000000000000000000000000000000000000000000000000000000000090507f00000000000000000000000000000000000000000000000000000000000000006125a4565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b03161461317d5761317d6000610162612cac565b507f000000000000000000000000000000000000000000000000000000000000000090507f00000000000000000000000000000000000000000000000000000000000000006125a4565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b031614801561323957507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316145b61324a5761324a6000610162612cac565b507f0000000000000000000000000000000000000000000000000000000000000000937f00000000000000000000000000000000000000000000000000000000000000009350915050565b60008060006132a2610e34565b6001600160a01b031663b05f8e486132b86107a1565b876040518363ffffffff1660e01b81526004016132d6929190614799565b60806040518083038186803b1580156132ee57600080fd5b505afa158015613302573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133269190614633565b505081810194509092509050611f968385612fe5565b60007f00000000000000000000000000000000000000000000000000000000000000008161336a848361245d565b90506125fd8183612fe5565b60008061338b83670de0b6b3a7640002613a25565b8601905060006133a384670de0b6b3a763ffff613445565b860190506133be6133b48387612fcd565b6109da8388612fe5565b92505050838111156125fd576125fd6000610165612cac565b6000838311156133ee576133ee6000610165612cac565b600061340283670de0b6b3a7640002613a25565b86019050600061341a84670de0b6b3a763ffff613445565b8601905061252661342b828761300f565b6125c38488612f1b565b6106c0816223aca960e91b613a39565b6000670de0b6b3a76400008383025b049392505050565b6000808061346d8760038702613a25565b6134778780613a25565b01905060006134966003890261348e846005613a9a565b890190613c28565b9050670de0b6b3a76400008890036134df6706f05b59d3b200008210156134c557671bc16d674ec800006134cf565b6714d1120d7b1600005b83906001600160401b0316613a25565b93506134f38267120a871cc0020000613a25565b945050505094509492505050565b600080805b60ff8110156135ad576000806135208b8b8b8b8b8b613c6a565b915091506001821161353857859450505050506135bb565b600583108015906135465750805b1561355757859450505050506135bb565b6005831080159061356b5750600884048210155b1561357c57859450505050506135bb565b81935080156135965761358f8683612fcd565b95506135a3565b6135a0868361300f565b95505b5050600101613506565b506135b9610160613435565b505b9695505050505050565b600d5460405163bd02d0f560e01b81526000918291829182916001600160a01b039091169063bd02d0f590613617907550524f544f434f4c5f535741505f4645455f5045524360501b90600401614777565b60206040518083038186803b15801561362f57600080fd5b505afa158015613643573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613667919061461b565b600d5460405163bd02d0f560e01b81526001600160a01b039091169063bd02d0f5906136b7907f50524f544f434f4c5f4645455f4759524f5f504f5254494f4e0000000000000090600401614777565b60206040518083038186803b1580156136cf57600080fd5b505afa1580156136e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613707919061461b565b600d546040516321f8a72160e01b81526001600160a01b03909116906321f8a72190613747906c4759524f5f545245415355525960981b90600401614777565b60206040518083038186803b15801561375f57600080fd5b505afa158015613773573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061379791906141c1565b600d546040516321f8a72160e01b81526001600160a01b03909116906321f8a721906137d6906b42414c5f545245415355525960a01b90600401614777565b60206040518083038186803b1580156137ee57600080fd5b505afa158015613802573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061382691906141c1565b935093509350935090919293565b60008086861161384957506000905080612198565b60006138698561386361385c8a8c61300f565b8990612fe5565b90612fe5565b9050600061388161387a898b61300f565b8790612fe5565b9050600061388f898361300f565b9050600061389d8483611c1c565b905060006138ab8883612fe5565b905060006138b9838361300f565b919d919c50909a5050505050505050505050565b60008180602001905160408110156138e457600080fd5b506020015192915050565b606083516001600160401b038111801561390857600080fd5b50604051908082528060200260200182016040528015613932578160200160208202803683370190505b50905060005b84518110156110155761396b836109da8688858151811061395557fe5b6020026020010151612fe590919063ffffffff16565b82828151811061397757fe5b6020908102919091010152600101613938565b606083516001600160401b03811180156139a357600080fd5b506040519080825280602002602001820160405280156139cd578160200160208202803683370190505b50905060005b845181101561101557613a06836125c3868885815181106139f057fe5b6020026020010151612f1b90919063ffffffff16565b828281518110613a1257fe5b60209081029190910101526001016139d3565b600082820280612f545760009150506105f8565b62461bcd60e51b600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fd5b600082613aa9575060006105f8565b6000613ab484613df3565b9050600281670de0b6b3a7640000860281613acb57fe5b04820181613ad557fe5b049050600281670de0b6b3a7640000860281613aed57fe5b04820181613af757fe5b049050600281670de0b6b3a7640000860281613b0f57fe5b04820181613b1957fe5b049050600281670de0b6b3a7640000860281613b3157fe5b04820181613b3b57fe5b049050600281670de0b6b3a7640000860281613b5357fe5b04820181613b5d57fe5b049050600281670de0b6b3a7640000860281613b7557fe5b04820181613b7f57fe5b049050600281670de0b6b3a7640000860281613b9757fe5b04820181613ba157fe5b0490506000613bb08280612fe5565b9050613bc6613bbf8386612f1b565b8690612fcd565b8111158015613be85750613be4613bdd8386612f1b565b869061300f565b8110155b611015576040805162461bcd60e51b815260206004820152600c60248201526b17dcdc5c9d0811905253115160a21b604482015290519081900360640190fd5b600081613c3b57613c3b60006004611641565b82613c48575060006105f8565b816001670de0b6b3a764000085020381613c5e57fe5b04600101905092915050565b6000806e01ed09bead87c0378d8e6400000000831115613c9157613c916000610169612cac565b83831015613ca657613ca6600061016b612cac565b6000613cb28480613445565b90506000613cc36003860286612fe5565b9050613cd587612ccd81818582613445565b900388613ce2868c613445565b600202909103036000806cfc6f7c40458122964d000000008711613d6057613d0a8488613445565b9150613d1c89612ccd81818682613445565b90910390613d2a8284613fc5565b9150613d36848d613445565b9050613d4e83613d46898e613445565b830190613fc5565b9050613d5a8a84613fc5565b01613dcb565b613d6a8488613feb565b9150613d8289613d7c81818682613feb565b90613feb565b90910390613d908284614016565b9150613d9c848d613feb565b9050613da88b88613445565b01613dbd818464e8d4a51000620f4240614024565b9050613dc98a84613fc5565b015b81811015945084613dde57808203613de2565b8181035b955050505050965096945050505050565b6000670de0b6b3a76400008210613e2057670de0b6b3a7640000613e18818404614061565b1b9050610a09565b600a8211613e33575063bc7c871c610a09565b60648211613e4757506402540be400610a09565b6103e88211613e5c575064075cdd4719610a09565b6127108211613e71575064174876e800610a09565b620186a08211613e8757506449a0a4c700610a09565b620f42408211613e9d575064e8d4a51000610a09565b629896808211613eb457506502e0466fc608610a09565b6305f5e1008211613ecc57506509184e72a000610a09565b633b9aca008211613ee45750651cc2c05dbc53610a09565b6402540be4008211613efd5750655af3107a4000610a09565b64174876e8008211613f17575066011f9b83a95b45610a09565b64e8d4a510008211613f31575066038d7ea4c68000610a09565b6509184e72a0008211613f4c5750660b3c13249d90bb610a09565b655af3107a40008211613f675750662386f26fc10000610a09565b66038d7ea4c680008211613f835750667058bf6e27a751610a09565b662386f26fc100008211613fa0575067016345785d8a0000610a09565b67016345785d8a00008211613fbe5750670463777a4d8c892d610a09565b5080610a09565b600081613fd857613fd860006004611641565b81670de0b6b3a764000084028161345457fe5b6000614001670de0b6b3a7640000840683613445565b82670de0b6b3a7640000850402019392505050565b60006118878383633b9aca00805b6000836140375761403760006004611641565b600082600186038161404557fe5b046001019050808487028161405657fe5b049695505050505050565b6000600160801b82106140795760809190911c906040015b6801000000000000000082106140945760409190911c906020015b64010000000082106140ab5760209190911c906010015b6201000082106140c05760109190911c906008015b61010082106140d45760089190911c906004015b601082106140e75760049190911c906002015b60048210610a0957600101919050565b604080516060810182526000808252602082018190529181019190915290565b8035610a098161486d565b80358015158114610a0957600080fd5b600082601f830112614142578081fd5b81356001600160401b0381111561415557fe5b614168601f8201601f191660200161484a565b81815284602083860101111561417c578283fd5b816020850160208301379081016020019190915292915050565b803560028110610a0957600080fd5b6000602082840312156141b6578081fd5b81356118878161486d565b6000602082840312156141d2578081fd5b81516118878161486d565b600080604083850312156141ef578081fd5b82356141fa8161486d565b9150602083013561420a8161486d565b809150509250929050565b600080600060608486031215614229578081fd5b83356142348161486d565b925060208401356142448161486d565b929592945050506040919091013590565b600080600080600080600060e0888a03121561426f578283fd5b873561427a8161486d565b9650602088013561428a8161486d565b95506040880135945060608801359350608088013560ff811681146142ad578384fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156142dc578182fd5b82356142e78161486d565b946020939093013593505050565b600060208284031215614306578081fd5b61188782614122565b600080600080600080600060e0888a031215614329578081fd5b87359650602088013561433b8161486d565b9550604088013561434b8161486d565b945060608801356001600160401b0380821115614366578283fd5b818a0191508a601f830112614379578283fd5b81358181111561438557fe5b602081026143956020820161484a565b80838252602082019150602086018f60208589010111156143b4578788fd5b8796505b848710156143d7578035835260019690960195602092830192016143b8565b50985050505060808a0135945060a08a0135935060c08a01359150808211156143fe578283fd5b5061440b8a828b01614132565b91505092959891949750929550565b60006020828403121561442b578081fd5b81356001600160e01b031981168114611887578182fd5b60008060408385031215614454578182fd5b823561445f8161486d565b915060208301356001600160401b03811115614479578182fd5b61448585828601614132565b9150509250929050565b6000606082840312156144a0578081fd5b604051606081018181106001600160401b03821117156144bc57fe5b6040526144c883614122565b815260208301356001600160781b03811681146144e3578283fd5b602082015260408301356001600160801b0381168114614501578283fd5b60408201529392505050565b600080600060608486031215614521578081fd5b83356001600160401b0380821115614537578283fd5b818601915061012080838903121561454d578384fd5b6145568161484a565b905061456183614196565b815261456f60208401614117565b602082015261458060408401614117565b6040820152606083013560608201526080830135608082015260a083013560a08201526145af60c08401614117565b60c08201526145c060e08401614117565b60e082015261010080840135838111156145d8578586fd5b6145e48a828701614132565b9183019190915250976020870135975060409096013595945050505050565b600060208284031215614614578081fd5b5035919050565b60006020828403121561462c578081fd5b5051919050565b60008060008060808587031215614648578182fd5b84519350602085015192506040850151915060608501516146688161486d565b939692955090935050565b6000815180845260208085019450808401835b838110156146a257815187529582019590820190600101614686565b509495945050505050565b60008151808452815b818110156146d2576020818501810151868301820152016146b6565b818111156146e35782602083870101525b50601f01601f19169290920160200192915050565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b6000602082526118876020830184614673565b6000604082526147426040830185614673565b8281036020840152611f968185614673565b901515815260200190565b92151583526020830191909152604082015260600190565b90815260200190565b6000838252604060208301526125fd60408301846146ad565b9182526001600160a01b0316602082015260400190565b60006020825261188760208301846146ad565b8151151581526020808301516001600160781b0316908201526040918201516001600160801b03169181019190915260600190565b905460ff811615158252600881901c6001600160781b0316602083015260801c604082015260600190565b6000838252604060208301526125fd6040830184614673565b60ff91909116815260200190565b6040518181016001600160401b038111828210171561486557fe5b604052919050565b6001600160a01b03811681146106c057600080fdfea26469706673582212203aea3ffdcd02b63a31fe61ecceb0923b4848abdac7be419114b7f1d325ba224864736f6c63430007060033", "bytecodeSha1": "634d9babdca7b9c4a5806a1da0cd132456753463", "compiler": {"evm_version": "berlin", "optimizer": {"enabled": true, "runs": 200}, "version": "0.7.6+commit.7338295f"}, "contractName": "Gyro3CLPPool", "coverageMap": {"branches": {"10": {"Gyro3CLPPool._doExit": {"365": [22502, 22563, false]}, "Gyro3CLPPool._doJoin": {"366": [17776, 17841, false]}, "Gyro3CLPPool._getDueProtocolFeeAmounts": {"367": [25938, 25962, false]}, "Gyro3CLPPool._getThirdToken": {"370": [8071, 8076, false], "371": [8175, 8187, false], "372": [8207, 8219, false], "373": [8272, 8284, false], "374": [8424, 8436, false], "375": [8440, 8452, false]}, "Gyro3CLPPool._onExitPool": {"360": [19481, 19495, false]}, "Gyro3CLPPool._onJoinPool": {"361": [16607, 16628, false]}, "Gyro3CLPPool._payFeesBpt": {"368": [26676, 26688, false], "369": [26810, 26826, false]}, "Gyro3CLPPool._scalingFactor": {"362": [5878, 5894, false], "363": [5962, 5978, false], "364": [6046, 6062, false]}}, "11": {}, "112": {}, "113": {}, "114": {}, "115": {}, "117": {}, "118": {}, "119": {}, "120": {}, "14": {"CappedLiquidity._ensureCap": {"386": [2206, 2259, true]}, "CappedLiquidity.setCapManager": {"383": [1376, 1400, true]}, "CappedLiquidity.setCapParams": {"384": [1704, 1728, true], "385": [1764, 1785, true]}}, "17": {"LocallyPausable.changePauseManager": {"443": [791, 824, true]}, "LocallyPausable.pause": {"444": [1056, 1082, true]}, "LocallyPausable.unpause": {"442": [1269, 1295, true]}}, "36": {}, "40": {}, "41": {}, "42": {}, "43": {}, "44": {"GyroFixedPoint.divDown": {"398": [3940, 3946, false], "399": [4024, 4030, false]}, "GyroFixedPoint.divDownLargeU": {"410": [8322, 8328, false]}, "GyroFixedPoint.divUp": {"403": [4543, 4549, false], "404": [4627, 4633, false]}, "GyroFixedPoint.divUpU": {"408": [5272, 5278, false], "409": [5356, 5362, false]}, "GyroFixedPoint.mulDown": {"405": [2361, 2367, true], "406": [2371, 2387, false]}, "GyroFixedPoint.mulUp": {"400": [2836, 2842, true], "401": [2846, 2862, false], "402": [2940, 2952, false]}, "GyroFixedPoint.mulUpU": {"407": [3457, 3469, false]}}, "45": {"GyroPoolMath._calcProtocolFees": {"412": [5676, 5713, false]}, "GyroPoolMath._intLog2Halved": {"434": [10561, 10574, false], "435": [10644, 10656, false], "436": [10725, 10737, false], "437": [10806, 10818, false], "438": [10886, 10897, false], "439": [10964, 10975, false], "440": [11042, 11053, false]}, "GyroPoolMath._makeInitialGuess": {"416": [8925, 8952, false], "417": [9082, 9093, false], "418": [9166, 9178, false], "419": [9241, 9253, false], "420": [9326, 9338, false], "421": [9401, 9413, false], "422": [9486, 9498, false], "423": [9561, 9573, false], "424": [9646, 9658, false], "425": [9721, 9733, false], "426": [9805, 9818, false], "427": [9881, 9894, false], "428": [9966, 9979, false], "429": [10042, 10055, false], "430": [10127, 10140, false], "431": [10203, 10216, false], "432": [10288, 10301, false], "433": [10364, 10377, false]}, "GyroPoolMath._sqrt": {"413": [7331, 7341, false], "414": [8100, 8149, false], "415": [8153, 8202, true]}, "GyroPoolMath.liquidityInvariantUpdate": {"411": [11732, 11745, false]}}, "47": {}, "48": {"BalancerPoolToken.allowance": {"379": [2364, 2394, false]}, "BalancerPoolToken.decreaseAllowance": {"378": [3611, 3637, false]}, "BalancerPoolToken.transferFrom": {"376": [3030, 3050, false], "377": [3054, 3085, false]}}, "49": {"BaseMinimalSwapInfoPool.onSwap": {"380": [1681, 1721, false]}}, "50": {"BasePool._queryAction": {"381": [25546, 25573, false]}}, "51": {"BasePoolAuthorization._canPerform": {"382": [2112, 2140, false]}}, "61": {}, "64": {}, "65": {}, "66": {}, "69": {}, "70": {}, "71": {}, "72": {"InputHelpers.ensureArrayIsSorted": {"441": [1496, 1512, false]}}, "75": {"TemporarilyPausable._setPaused": {"445": [3849, 3855, false]}}, "76": {}, "77": {"FixedPoint.divDown": {"387": [2574, 2580, true], "388": [2645, 2665, true]}, "FixedPoint.divUp": {"389": [2862, 2868, false]}}, "78": {}, "79": {}, "8": {}, "80": {}, "83": {}, "84": {}, "85": {}, "88": {}, "89": {}, "9": {"Gyro3CLPMath._calcNewtonDelta": {"397": [10964, 11003, false]}, "Gyro3CLPMath._calculateCubicStartingPoint": {"390": [7327, 7342, true]}, "Gyro3CLPMath._runNewtonIteration": {"391": [8424, 8437, false], "392": [8471, 8509, false], "393": [8513, 8523, false], "394": [8684, 8722, false], "395": [8726, 8789, false], "396": [9055, 9065, false]}}, "93": {}}, "statements": {"10": {"Gyro3CLPPool._calculateInvariant": {"166": [12023, 12094]}, "Gyro3CLPPool._calculateVirtualOffset": {"215": [9906, 9941], "216": [9951, 9987], "217": [10276, 10336], "218": [10347, 10387], "264": [10809, 10854]}, "Gyro3CLPPool._distributeFees": {"190": [24524, 24586]}, "Gyro3CLPPool._doExit": {"191": [22579, 22633], "192": [22664, 22699]}, "Gyro3CLPPool._doJoin": {"204": [17857, 17935], "205": [17966, 18001]}, "Gyro3CLPPool._exitExactBPTInForTokensOut": {"244": [23611, 23643]}, "Gyro3CLPPool._getAllBalances": {"221": [11304, 11331], "222": [11341, 11403], "223": [11413, 11475], "224": [11485, 11547]}, "Gyro3CLPPool._getDueProtocolFeeAmounts": {"240": [25978, 26018], "241": [26323, 26381]}, "Gyro3CLPPool._getFeesMetadata": {"281": [27163, 27470]}, "Gyro3CLPPool._getNormalizedWeights": {"175": [4895, 4938], "176": [4952, 4995], "177": [5009, 5052], "178": [5073, 5097]}, "Gyro3CLPPool._getScaledTokenBalance": {"262": [9182, 9206], "263": [9292, 9332]}, "Gyro3CLPPool._getThirdToken": {"256": [8078, 8093], "257": [8221, 8254], "258": [8286, 8351], "259": [8365, 8398], "260": [8455, 8520], "261": [8530, 8563]}, "Gyro3CLPPool._getTotalTokens": {"126": [5592, 5600]}, "Gyro3CLPPool._onExitPool": {"128": [19916, 19952], "129": [19967, 20022], "130": [20472, 20582], "131": [20813, 20868], "132": [21285, 21319], "133": [21452, 21502]}, "Gyro3CLPPool._onInitializePool": {"168": [13911, 13981], "169": [14058, 14114], "170": [14124, 14164], "171": [14621, 14656], "172": [14667, 14699]}, "Gyro3CLPPool._onJoinPool": {"146": [16490, 16526], "147": [16537, 16592], "148": [16644, 16705], "149": [17141, 17251], "150": [17374, 17424]}, "Gyro3CLPPool._onSwapGivenIn": {"160": [7134, 7230], "219": [12328, 12445]}, "Gyro3CLPPool._onSwapGivenOut": {"162": [7583, 7680], "220": [12680, 12797]}, "Gyro3CLPPool._payFeesBpt": {"242": [26704, 26743], "243": [26842, 26884]}, "Gyro3CLPPool._scalingFactor": {"153": [5910, 5941], "154": [5994, 6025], "155": [6078, 6109], "156": [6140, 6169]}, "Gyro3CLPPool._scalingFactors": {"105": [6448, 6483], "106": [6497, 6532], "107": [6546, 6581], "108": [6602, 6623]}, "Gyro3CLPPool.getInvariant": {"73": [21670, 21698]}, "Gyro3CLPPool.getRoot3Alpha": {"88": [4327, 4345]}}, "11": {}, "112": {}, "113": {}, "114": {}, "115": {}, "117": {}, "118": {}, "119": {}, "120": {}, "14": {"CappedLiquidity._ensureCap": {"206": [2198, 2279], "207": [2289, 2367]}, "CappedLiquidity.capParams": {"21": [1591, 1608]}, "CappedLiquidity.setCapManager": {"3": [1368, 1418], "4": [1428, 1452], "5": [1462, 1497]}, "CappedLiquidity.setCapParams": {"36": [1696, 1746], "37": [1756, 1797], "38": [1808, 1849], "39": [1859, 1906], "40": [1916, 1955], "41": [1966, 1999]}}, "17": {"LocallyPausable.changePauseManager": {"43": [783, 845], "44": [855, 883], "45": [893, 953]}, "LocallyPausable.pause": {"46": [1048, 1103], "47": [1113, 1134], "48": [1144, 1164]}, "LocallyPausable.unpause": {"22": [1261, 1316], "23": [1326, 1348], "24": [1358, 1380]}}, "36": {}, "40": {}, "41": {}, "42": {}, "43": {"_grequire": {"232": [337, 356]}, "_grevert": {"269": [841, 870]}}, "44": {"GyroFixedPoint.add": {"252": [1881, 1917]}, "GyroFixedPoint.divDown": {"139": [3962, 3999], "140": [4046, 4054], "141": [4155, 4191], "142": [4228, 4248]}, "GyroFixedPoint.divDownLargeU": {"344": [7111, 7161], "345": [8439, 8476], "346": [8539, 8561]}, "GyroFixedPoint.divDownU": {"341": [4369, 4406], "342": [4427, 4447]}, "GyroFixedPoint.divUp": {"248": [4565, 4602], "249": [4649, 4657], "250": [4758, 4809], "251": [5143, 5175]}, "GyroFixedPoint.divUpU": {"301": [5294, 5331], "302": [5378, 5386], "303": [5406, 5436]}, "GyroFixedPoint.mulDown": {"253": [2404, 2440]}, "GyroFixedPoint.mulDownLargeSmallU": {"343": [6381, 6424]}, "GyroFixedPoint.mulDownU": {"270": [2685, 2705]}, "GyroFixedPoint.mulUp": {"245": [2879, 2915], "246": [2968, 2976], "247": [3294, 3326]}, "GyroFixedPoint.mulUpU": {"291": [3485, 3493]}, "GyroFixedPoint.sub": {"254": [2137, 2173]}}, "45": {"GyroPoolMath._calcAllTokensInGivenExactBptOut": {"288": [2636, 2678], "289": [2748, 2804], "290": [2729, 2732]}, "GyroPoolMath._calcProtocolFees": {"282": [6091, 6104], "283": [7089, 7120]}, "GyroPoolMath._calcTokensOutGivenExactBptIn": {"285": [4168, 4211], "286": [4281, 4341], "287": [4262, 4265]}, "GyroPoolMath._intLog2Halved": {"347": [10590, 10599], "348": [10613, 10620], "349": [10672, 10680], "350": [10694, 10701], "351": [10753, 10761], "352": [10775, 10782], "353": [10834, 10842], "354": [10856, 10862], "355": [10913, 10920], "356": [10934, 10940], "357": [10991, 10998], "358": [11012, 11018], "359": [11090, 11096]}, "GyroPoolMath._makeInitialGuess": {"323": [8968, 9047], "324": [9113, 9134], "325": [9198, 9209], "326": [9358, 9369], "327": [9433, 9454], "328": [9518, 9529], "329": [9593, 9614], "330": [9678, 9689], "331": [9753, 9773], "332": [9838, 9849], "333": [9914, 9934], "334": [9999, 10010], "335": [10075, 10095], "336": [10160, 10171], "337": [10236, 10256], "338": [10321, 10332], "339": [10397, 10417], "340": [10445, 10457]}, "GyroPoolMath._sqrt": {"292": [7357, 7365], "293": [7461, 7521], "294": [7531, 7591], "295": [7601, 7661], "296": [7671, 7731], "297": [7741, 7801], "298": [7811, 7871], "299": [7881, 7941], "300": [8092, 8219]}, "GyroPoolMath.liquidityInvariantUpdate": {"193": [11919, 11953], "194": [12169, 12203]}}, "47": {}, "48": {"BalancerPoolToken._burnPoolTokens": {"145": [4092, 4113]}, "BalancerPoolToken._mintPoolTokens": {"173": [3979, 4003]}, "BalancerPoolToken.allowance": {"89": [2410, 2428], "90": [2459, 2497]}, "BalancerPoolToken.decreaseAllowance": {"68": [3653, 3685], "69": [3772, 3828], "70": [3849, 3860]}, "BalancerPoolToken.getVault": {"53": [1938, 1951]}, "BalancerPoolToken.transferFrom": {"12": [2867, 2968], "13": [2979, 3015], "14": [3218, 3273], "15": [3294, 3305]}}, "49": {"BaseMinimalSwapInfoPool._processSwapFeeAmount": {"159": [5632, 5690]}, "BaseMinimalSwapInfoPool.onSwap": {"56": [2053, 2132], "57": [2147, 2185], "58": [2247, 2310], "59": [2324, 2390], "60": [2404, 2467], "61": [2645, 2700], "62": [2778, 2841], "63": [2855, 2921], "64": [2935, 2999], "65": [3175, 3230], "66": [3544, 3623], "67": [3638, 3665]}}, "50": {"BasePool._addSwapFeeAmount": {"164": [19216, 19279]}, "BasePool._downscaleDown": {"161": [23084, 23132]}, "BasePool._downscaleDownArray": {"134": [23488, 23550], "135": [23469, 23472]}, "BasePool._downscaleUp": {"163": [23872, 23918]}, "BasePool._downscaleUpArray": {"151": [24270, 24330], "152": [24251, 24254]}, "BasePool._getAuthorizer": {"165": [24801, 24834]}, "BasePool._isOwnerOnlyAction": {"231": [7403, 7565]}, "BasePool._queryAction": {"136": [29770, 29809], "137": [30150, 30195]}, "BasePool._setAssetManagerPoolConfig": {"124": [7136, 7193]}, "BasePool._setSwapFeePercentage": {"118": [6353, 6440], "119": [6450, 6537], "120": [6548, 6630], "121": [6640, 6688]}, "BasePool._subtractSwapFeeAmount": {"157": [19634, 19662]}, "BasePool._upscale": {"158": [22304, 22352]}, "BasePool._upscaleArray": {"143": [22696, 22758], "144": [22677, 22680]}, "BasePool.getPoolId": {"19": [5691, 5705]}, "BasePool.getScalingFactors": {"11": [21587, 21611]}, "BasePool.getSwapFeePercentage": {"26": [6042, 6100]}, "BasePool.onExitPool": {"31": [10931, 10970], "32": [11404, 11440], "33": [11552, 11599], "34": [11609, 11667], "35": [11678, 11720]}, "BasePool.onJoinPool": {"78": [9180, 9242], "79": [9256, 9301], "80": [9315, 9374], "81": [9461, 9505], "82": [9520, 9572], "83": [9603, 9642], "84": [10123, 10163], "85": [10250, 10294], "86": [10393, 10451], "87": [10466, 10507]}, "BasePool.queryExit": {"27": [14219, 14290], "28": [14301, 14556]}, "BasePool.queryJoin": {"50": [12694, 12765], "51": [12776, 13029]}, "BasePool.setAssetManagerPoolConfig": {"25": [6863, 6908]}, "BasePool.setPaused": {"6": [7270, 7288]}, "BasePool.setSwapFeePercentage": {"18": [6224, 6264]}}, "51": {"BasePoolAuthorization._canPerform": {"183": [2251, 2282], "184": [2428, 2496]}, "BasePoolAuthorization.getAuthorizer": {"72": [1933, 1956]}, "BasePoolAuthorization.getOwner": {"52": [1836, 1849]}}, "61": {}, "64": {"WeightedPoolUserDataHelpers.exactBptInForTokensOut": {"284": [2448, 2520]}, "WeightedPoolUserDataHelpers.initialAmountsIn": {"226": [1311, 1383]}, "WeightedPoolUserDataHelpers.joinKind": {"225": [964, 1016]}}, "65": {"Authentication._authenticateCaller": {"97": [2404, 2474]}, "Authentication.getActionId": {"49": [2842, 2910]}}, "66": {"_require": {"109": [946, 964]}}, "69": {}, "70": {}, "71": {}, "72": {"InputHelpers.ensureArrayIsSorted": {"92": [1369, 1402], "179": [1528, 1535], "180": [1689, 1740], "181": [1754, 1772], "182": [1630, 1633]}, "InputHelpers.ensureInputLengthMatch": {"127": [888, 934]}}, "75": {"TemporarilyPausable._ensureNotPaused": {"117": [4272, 4311]}, "TemporarilyPausable._getBufferPeriodEndTime": {"104": [5084, 5111]}, "TemporarilyPausable._getPauseWindowEndTime": {"103": [4969, 4995]}, "TemporarilyPausable._isNotPaused": {"102": [4712, 4774]}, "TemporarilyPausable._setPaused": {"98": [3871, 3952], "99": [3983, 4066], "100": [4087, 4103], "101": [4113, 4144]}, "TemporarilyPausable.getPausedState": {"8": [3374, 3398], "9": [3408, 3453], "10": [3463, 3510]}}, "76": {"WordCodec.decodeUint64": {"125": [11684, 11725]}, "WordCodec.insertUint64": {"93": [7104, 7149]}}, "77": {"FixedPoint.divDown": {"195": [2566, 2581], "196": [2637, 2666]}, "FixedPoint.divUp": {"208": [2809, 2847], "209": [2884, 2892], "210": [2964, 3015], "211": [3363, 3395]}, "FixedPoint.mulDown": {"197": [1761, 1818], "198": [1829, 1849]}, "FixedPoint.mulUp": {"212": [1974, 2031], "213": [2074, 2082], "214": [2430, 2462]}}, "78": {}, "79": {"Math.mul": {"138": [1897, 1948]}, "Math.sub": {"94": [1025, 1062]}}, "8": {"ExtensibleBaseWeightedPool.getLastInvariant": {"55": [3448, 3469]}, "ExtensibleBaseWeightedPool.getNormalizedWeights": {"91": [4136, 4166]}, "ExtensibleBaseWeightedPool.getRate": {"29": [21591, 21664]}}, "80": {}, "83": {"EIP712._domainSeparatorV4": {"116": [2466, 2567]}, "EIP712._hashTypedDataV4": {"167": [3295, 3375]}}, "84": {"ERC20._approve": {"95": [9468, 9504], "96": [9514, 9551]}, "ERC20._burn": {"199": [8587, 8655], "200": [8666, 8715], "201": [8726, 8814], "202": [8824, 8863], "203": [8873, 8915]}, "ERC20._mint": {"227": [7973, 8022], "228": [8033, 8072], "229": [8082, 8133], "230": [8143, 8185]}, "ERC20._transfer": {"110": [7195, 7266], "111": [7276, 7348], "112": [7359, 7406], "113": [7417, 7505], "114": [7515, 7570], "115": [7580, 7620]}, "ERC20.allowance": {"174": [3993, 4027]}, "ERC20.approve": {"1": [4271, 4308], "2": [4318, 4329]}, "ERC20.balanceOf": {"30": [3422, 3447]}, "ERC20.decimals": {"16": [3098, 3114]}, "ERC20.increaseAllowance": {"20": [5688, 5767]}, "ERC20.name": {"0": [2200, 2212]}, "ERC20.symbol": {"54": [2396, 2410]}, "ERC20.totalSupply": {"7": [3253, 3272]}, "ERC20.transfer": {"71": [3759, 3799]}}, "85": {"ERC20Permit.DOMAIN_SEPARATOR": {"17": [2438, 2465]}, "ERC20Permit.nonces": {"42": [2207, 2228]}, "ERC20Permit.permit": {"74": [1575, 1635], "75": [1902, 1981], "76": [1992, 2018], "77": [2028, 2059]}}, "88": {}, "89": {}, "9": {"Gyro3CLPMath._calcInGivenOut": {"267": [18569, 18627], "268": [19370, 19443]}, "Gyro3CLPMath._calcNewtonDelta": {"304": [9680, 9736], "305": [9955, 10011], "306": [10500, 10596], "307": [10606, 10659], "308": [11113, 11152], "309": [11166, 11265], "310": [11279, 11322], "311": [11607, 11640], "312": [11654, 11720], "313": [11734, 11780], "314": [11955, 12004], "315": [12018, 12147], "316": [12380, 12428], "317": [12584, 12627], "318": [12860, 12904], "319": [12918, 12975], "320": [12989, 13035], "321": [13056, 13094], "322": [13104, 13177]}, "Gyro3CLPMath._calcOutGivenIn": {"265": [16241, 16317], "266": [16432, 16490]}, "Gyro3CLPMath._calculateCubic": {"237": [5967, 6031], "238": [6041, 6112], "239": [6259, 6315]}, "Gyro3CLPMath._calculateCubicStartingPoint": {"271": [7309, 7359], "272": [7369, 7408]}, "Gyro3CLPMath._calculateCubicTerms": {"233": [4812, 4889], "234": [4964, 5016], "235": [5157, 5188], "236": [5198, 5258]}, "Gyro3CLPMath._calculateInvariant": {"186": [3731, 3786], "187": [3833, 3888], "188": [3935, 3990], "189": [4102, 4151]}, "Gyro3CLPMath._runNewtonIteration": {"273": [8439, 8453], "274": [8652, 8666], "275": [8901, 8915], "276": [8943, 8966], "277": [9067, 9098], "278": [9117, 9148], "279": [8061, 8072], "280": [9168, 9221]}}, "93": {"SafeMath.add": {"122": [1019, 1056], "123": [1067, 1075]}, "SafeMath.sub": {"185": [1861, 1888], "255": [1430, 1467]}}}}, "dependencies": ["Authentication", "BalancerPoolToken", "BaseMinimalSwapInfoPool", "BasePool", "BasePoolAuthorization", "CappedLiquidity", "EIP712", "ERC20", "ERC20Permit", "Errors", "ExtensibleBaseWeightedPool", "FixedPoint", "Gyro3CLPMath", "Gyro3CLPPoolErrors", "GyroConfigKeys", "GyroErrors", "GyroFixedPoint", "GyroPoolMath", "IAsset", "IAssetManager", "IAuthentication", "IAuthorizer", "IBasePool", "ICappedLiquidity", "IERC20", "IERC20Permit", "IFlashLoanRecipient", "IGyroConfig", "ILocallyPausable", "IMinimalSwapInfoPool", "IPoolSwapStructs", "IProtocolFeesCollector", "ISignaturesValidator", "ITemporarilyPausable", "IVault", "IWETH", "InputHelpers", "LocallyPausable", "LogExpMath", "Math", "SafeMath", "TemporarilyPausable", "WeightedMath", "WeightedPoolUserDataHelpers", "WordCodec"], "deployedBytecode": "", "deployedSourceMap": "1289:26287:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2138:81:84;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4172:164;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1305:199:14:-;;;;;;:::i;:::-;;:::i;:::-;;7206:89:50;;;;;;:::i;:::-;;:::i;3181:98:84:-;;;:::i;:::-;;;;;;;:::i;3154:363:75:-;;;:::i;:::-;;;;;;;;;:::i;21507:111:50:-;;;:::i;:::-;;;;;;;:::i;2657:655:48:-;;;;;;:::i;:::-;;:::i;3040:81:84:-;;;:::i;:::-;;;;;;;:::i;2359:113:85:-;;;:::i;6113:158:50:-;;;;;;:::i;:::-;;:::i;5621:91::-;;;:::i;5584:211:84:-;;;;;;:::i;:::-;;:::i;1510:105:14:-;;;:::i;:::-;;;;;;;:::i;1214:173:17:-;;;:::i;1513:29:10:-;;;:::i;:::-;;;;;;;:::i;6701:214:50:-;;;;;;:::i;:::-;;:::i;5970:137::-;;;:::i;13905:904::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;21444:227:8:-;;;:::i;941:34:14:-;;;:::i;3337:117:84:-;;;;;;:::i;:::-;;:::i;10530:1197:50:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1621:385:14:-;;;;;;:::i;:::-;;:::i;2127:108:85:-;;;;;;:::i;:::-;;:::i;652:308:17:-;;;;;;:::i;:::-;;:::i;1003:168::-;;;:::i;2487:430:65:-;;;;;;:::i;:::-;;:::i;12380:902:50:-;;;;;;:::i;:::-;;:::i;1776:80:51:-;;;:::i;1879:79:48:-;;;:::i;2332:85:84:-;;;:::i;3372:104:8:-;;;:::i;1329:2353:49:-;;;;;;:::i;:::-;;:::i;3438:429:48:-;;;;;;:::i;:::-;;:::i;3657:170:84:-;;;;;;:::i;:::-;;:::i;1862:101:51:-;;;:::i;350:27:17:-;;;:::i;21587:118:10:-;;;:::i;1313:753:85:-;;;;;;:::i;:::-;;:::i;8224:2300:50:-;;;;;;:::i;:::-;;:::i;4260:92:10:-;;;:::i;2260:254:48:-;;;;;;:::i;:::-;;:::i;4053:120:8:-;;;:::i;2138:81:84:-;2207:5;2200:12;;;;;;;;;;;;;-1:-1:-1;;2200:12:84;;;;;;;;;;;;;;;;;;;;;;;;;;2175:13;;2200:12;;2207:5;;2200:12;;;2207:5;2200:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2138:81;:::o;4172:164::-;4255:4;4271:37;4280:10;4292:7;4301:6;4271:8;:37::i;:::-;-1:-1:-1;4325:4:84;4172:164;;;;;:::o;1305:199:14:-;1390:10;;1402:15;;;;;;;;;;;;-1:-1:-1;;;1402:15:14;;;;;-1:-1:-1;;;;;1390:10:14;1376;:24;1368:50;;;;-1:-1:-1;;;1368:50:14;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;1428:10:14;:24;;-1:-1:-1;;;;;;1428:24:14;-1:-1:-1;;;;;1428:24:14;;;;;1467:30;;;;;;1428:24;;1467:30;:::i;:::-;;;;;;;;1305:199;:::o;7206:89:50:-;2156:21:65;:19;:21::i;:::-;7270:18:50::1;7281:6;7270:10;:18::i;:::-;7206:89:::0;:::o;3181:98:84:-;3260:12;;3181:98;:::o;3154:363:75:-;3257:11;3282:26;3322:27;3384:14;:12;:14::i;:::-;3383:15;3374:24;;3429;:22;:24::i;:::-;3408:45;;3485:25;:23;:25::i;:::-;3463:47;;3154:363;;;:::o;21507:111:50:-;21559:16;21594:17;:15;:17::i;:::-;21587:24;;21507:111;:::o;2657:655:48:-;2785:4;2801:24;2828:29;2838:6;2846:10;2828:9;:29::i;:::-;2801:56;-1:-1:-1;2867:101:48;-1:-1:-1;;;;;2876:20:48;;:10;:20;;:50;;;2920:6;2900:16;:26;;2876:50;9174:3:66;2867:8:48;:101::i;:::-;2979:36;2989:6;2997:9;3008:6;2979:9;:36::i;:::-;-1:-1:-1;;;;;3030:20:48;;:10;:20;;;;:55;;-1:-1:-1;;;3054:31:48;;;3030:55;3026:258;;;3218:55;3227:6;3235:10;3266:6;3247:16;:25;3218:8;:55::i;:::-;-1:-1:-1;3301:4:48;;2657:655;-1:-1:-1;;;;2657:655:48:o;3040:81:84:-;3105:9;;;;3040:81;:::o;2359:113:85:-;2419:7;2445:20;:18;:20::i;6113:158:50:-;2156:21:65;:19;:21::i;:::-;2970:18:75::1;:16;:18::i;:::-;6224:40:50::2;6246:17;6224:21;:40::i;5621:91::-:0;5698:7;5621:91;:::o;5584:211:84:-;5697:10;5672:4;5718:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;5718:32:84;;;;;;;;;;5672:4;;5688:79;;5718:32;;:48;;5755:10;5718:36;:48::i;:::-;5688:8;:79::i;1510:105:14:-;1563:16;;:::i;:::-;-1:-1:-1;1591:17:14;;;;;;;;1598:10;1591:17;;;;;;;;;;;-1:-1:-1;;;;;1591:17:14;;;;;-1:-1:-1;;;1591:17:14;;-1:-1:-1;;;;;1591:17:14;;;;;;;;;1510:105::o;1214:173:17:-;1269:12;;1297:18;;;;;;;;;;;;-1:-1:-1;;;1297:18:17;;;;;-1:-1:-1;;;;;1269:12:17;1285:10;1269:26;1261:55;;;;-1:-1:-1;;;1261:55:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1326:22;1342:5;1326:15;:22::i;:::-;1363:17;;;;;;;1214:173::o;1513:29:10:-;;;-1:-1:-1;;;;;1513:29:10;;:::o;6701:214:50:-;2156:21:65;:19;:21::i;:::-;2970:18:75::1;:16;:18::i;:::-;6863:45:50::2;6890:5;6897:10;6863:26;:45::i;:::-;6701:214:::0;;:::o;5970:137::-;6049:9;;6023:7;;6049:51;;3356:3;6049:22;:51::i;13905:904::-;14165:13;14180:27;14219:71;14255:8;:15;14272:17;:15;:17::i;:::-;14219:35;:71::i;:::-;14301:255;14327:6;14347;14367:9;14390:8;14412:15;14441:25;14480:8;14502:11;14527:19;14301:12;:255::i;:::-;13905:904;;;;;;;;;;:::o;21444:227:8:-;21484:7;21598:66;21650:13;:11;:13::i;:::-;21598:43;21607:14;:12;:14::i;:::-;21623:17;:15;:17::i;:::-;21598:8;:43::i;:::-;:51;;:66::i;941:34:14:-;;;-1:-1:-1;;;;;941:34:14;;:::o;3337:117:84:-;-1:-1:-1;;;;;3429:18:84;;3403:7;3429:18;;;;;;;;;;;3337:117;;;;:::o;10530:1197:50:-;10824:16;10842;10807:6;8067:68;8098:10;:8;:10::i;:::-;-1:-1:-1;;;;;8076:33:50;:10;:33;5392:3:66;8067:8:50;:68::i;:::-;8145:55;8164:11;:9;:11::i;:::-;8154:6;:21;10241:3:66;8145:8:50;:55::i;:::-;10870:31:::1;10904:17;:15;:17::i;:::-;10870:51;;10931:39;10945:8;10955:14;10931:13;:39::i;:::-;10982:19;11003:27:::0;11032:38:::1;11074:224;11099:6;11119;11139:9;11162:8;11184:15;11213:25;11252:14;11280:8;11074:11;:224::i;:::-;10981:317;;;;;;11404:36;11420:6;11428:11;11404:15;:36::i;:::-;11552:47;11572:10;11584:14;11552:19;:47::i;:::-;11609:58;11629:21;11652:14;11609:19;:58::i;:::-;11686:10:::0;;-1:-1:-1;11698:21:50;-1:-1:-1;;;8210:1:50::1;10530:1197:::0;;;;;;;;;;;:::o;1621:385:14:-;1718:10;;1730:15;;;;;;;;;;;;-1:-1:-1;;;1730:15:14;;;;;-1:-1:-1;;;;;1718:10:14;1704;:24;1696:50;;;;-1:-1:-1;;;1696:50:14;;;;;;;;:::i;:::-;-1:-1:-1;1764:10:14;:21;1787:9;;;;;;;;;;;;-1:-1:-1;;;1787:9:14;;;;;1764:21;;1756:41;;;;-1:-1:-1;;;1756:41:14;;;;;;;;:::i;:::-;-1:-1:-1;1832:17:14;;1808:10;:41;;1886:20;;;;1939:16;;;;;-1:-1:-1;;1808:41:14;;;;;;;;;;-1:-1:-1;;1859:47:14;1808:41;-1:-1:-1;;;;;1859:47:14;;;;;;;;-1:-1:-1;;;;;1916:39:14;;;-1:-1:-1;;;1916:39:14;;;;;;;;1971:28;;;;;;;:::i;2127:108:85:-;-1:-1:-1;;;;;2214:14:85;2188:7;2214:14;;;:7;:14;;;;;;;2127:108::o;652:308:17:-;761:12;;826:18;;;;;;;;;;;;-1:-1:-1;;;826:18:17;;;;-1:-1:-1;;;;;761:12:17;;;;814:10;791:33;;783:62;;;;-1:-1:-1;;;783:62:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;783:62:17;;;;;;;;;;;;;;;;;-1:-1:-1;855:12:17;:28;;-1:-1:-1;;;;;;855:28:17;-1:-1:-1;;;;;855:28:17;;;;;;;;;898:55;;;;;;;;;;;;;;;;;;;;;;;;;;;652:308;;:::o;1003:168::-;1056:12;;1084:18;;;;;;;;;;;;-1:-1:-1;;;1084:18:17;;;;;-1:-1:-1;;;;;1056:12:17;1072:10;1056:26;1048:55;;;;-1:-1:-1;;;1048:55:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1048:55:17;;;;;;;;;;;;;;;;;;1113:21;1129:4;1113:15;:21::i;:::-;1149:15;;;;;;;1003:168::o;2487:430:65:-;2859:50;;;2876:22;2859:50;;;;;;;;-1:-1:-1;;;;;;2859:50:65;;;;;;;;;;;;;;;;;;;;;;;;2849:61;;;;;;2487:430::o;12380:902:50:-;12640:14;12656:26;12694:71;12730:8;:15;12747:17;:15;:17::i;12694:71::-;12776:253;12802:6;12822;12842:9;12865:8;12887:15;12916:25;12955:8;12977:11;13002:17;12776:12;:253::i;1776:80:51:-;1843:6;1776:80;:::o;1879:79:48:-;1945:6;1879:79;:::o;2332:85:84:-;2403:7;2396:14;;;;;;;;;;;;;-1:-1:-1;;2396:14:84;;;;;;;;;;;;;;;;;;;;;;;;;;2371:13;;2396:14;;2403:7;;2396:14;;;2403:7;2396:14;;;;;;;;;;;;;;;;;;;;;;;;3372:104:8;3455:14;;3372:104;:::o;1329:2353:49:-;1511:7;1486;:14;;;8067:68:50;8098:10;:8;:10::i;8067:68::-;8145:55;8164:11;:9;:11::i;8145:55::-;1530:28:49::1;1561:31;1576:7;:15;;;1561:14;:31::i;:::-;1530:62;;1602:29;1634:32;1649:7;:16;;;1634:14;:32::i;:::-;1602:64:::0;-1:-1:-1;1697:24:49::1;1681:12:::0;;:40:::1;::::0;::::1;;;;;;;1677:1999;;;1849:29;1881:38;1904:7;:14;;;1881:22;:38::i;:::-;1849:70;;1983:15;2018:21;2001:7;:14;;;:38;1983:56;;2053:79;2075:7;:15;;;2092:39;2101:7;2110:20;2092:8;:39::i;:::-;2053:21;:79::i;:::-;2147:14;::::0;::::1;:38:::0;;;2264:46:::1;2273:14:::0;2289:20;2264:8:::1;:46::i;:::-;2247:63;;2342:48;2351:15;2368:21;2342:8;:48::i;:::-;2324:66;;2421:46;2430:7;:14;;;2446:20;2421:8;:46::i;:::-;2404:14;::::0;::::1;:63:::0;2482:17:::1;2502:56;2404:7:::0;2526:14;2542:15;2502:14:::1;:56::i;:::-;2482:76;;2652:48;2667:9;2678:21;2652:14;:48::i;:::-;2645:55;;;;;;;;;1677:1999;2795:46;2804:14;2820:20;2795:8;:46::i;:::-;2778:63;;2873:48;2882:15;2899:21;2873:8;:48::i;:::-;2855:66;;2952:47;2961:7;:14;;;2977:21;2952:8;:47::i;:::-;2935:14;::::0;::::1;:64:::0;3014:16:::1;3033:57;2935:7:::0;3058:14;3074:15;3033::::1;:57::i;:::-;3014:76;;3186:44;3199:8;3209:20;3186:12;:44::i;:::-;3175:55;;3359:28;3390:27;3408:8;3390:17;:27::i;:::-;3359:58;;3481:15;3522:8;3499:20;:31;3481:49;;3544:79;3566:7;:15;;;3583:39;3592:7;3601:20;3583:8;:39::i;3544:79::-;-1:-1:-1::0;3645:20:49;-1:-1:-1;3638:27:49::1;::::0;-1:-1:-1;;;3638:27:49::1;8210:1:50;1329:2353:49::0;;;;;;:::o;3438:429:48:-;3523:4;3539:24;3566:30;3576:10;3588:7;3566:9;:30::i;:::-;3539:57;;3621:16;3611:6;:26;3607:232;;3653:32;3662:10;3674:7;3683:1;3653:8;:32::i;:::-;3607:232;;;3772:56;3781:10;3793:7;3821:6;3802:16;:25;3772:8;:56::i;:::-;-1:-1:-1;3856:4:48;;3438:429;-1:-1:-1;;;3438:429:48:o;3657:170:84:-;3743:4;3759:40;3769:10;3781:9;3792:6;3759:9;:40::i;1862:101:51:-;1910:11;1940:16;:14;:16::i;350:27:17:-;;;-1:-1:-1;;;;;350:27:17;;:::o;21587:118:10:-;21641:17;21677:21;:19;:21::i;1313:753:85:-;1575:60;1603:8;1584:15;:27;;5606:3:66;1575:8:85;:60::i;:::-;-1:-1:-1;;;;;1662:14:85;;;1646:13;1662:14;;;:7;:14;;;;;;;;;1717:68;;1728:16;1717:68;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1717:68:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;1707:79;;;;;;;;;1812:28;1707:79;1812:16;:28::i;:::-;1797:43;;1851:14;1868:24;1878:4;1884:1;1887;1890;1868:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1868:24:85;;-1:-1:-1;;1868:24:85;;;-1:-1:-1;1902:79:85;;-1:-1:-1;;;;;;1912:20:85;;;;;;1911:43;;-1:-1:-1;;;;;;1938:15:85;;;;;;;1911:43;10474:3:66;1902:8:85;:79::i;:::-;-1:-1:-1;;;;;1992:14:85;;;;;;:7;:14;;;;;-1:-1:-1;2009:9:85;;1992:26;;2028:31;1992:14;2044:7;2053:5;2028:8;:31::i;:::-;1313:753;;;;;;;;;;;:::o;8224:2300:50:-;8518:16;8536;8501:6;8067:68;8098:10;:8;:10::i;8067:68::-;8145:55;8164:11;:9;:11::i;8145:55::-;8564:31:::1;8598:17;:15;:17::i;:::-;8564:51;;8630:13;:11;:13::i;:::-;8626:1892;;8665:20;8687:26:::0;8717:164:::1;8752:6;8776;8800:9;8827:14;8859:8;8717:17;:164::i;:::-;8664:217;;;;9180:62;9205:16;:14;:16::i;:::-;9189:12;:32;;5338:3:66;9180:8:50;:62::i;:::-;9256:45;9280:1;9284:16;:14;:16::i;:::-;9256:15;:45::i;:::-;9315:59;9331:9;9357:16;:14;:16::i;:::-;9342:12;:31;9315:15;:59::i;:::-;9461:44;9479:9;9490:14;9461:17;:44::i;:::-;9528:9;9553:17;:15;:17::i;:::-;-1:-1:-1::0;;;;;9539:32:50;::::1;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;9539:32:50::1;;9520:52;;;;;;;;;8626:1892;9603:39;9617:8;9627:14;9603:13;:39::i;:::-;9657:20;9679:26:::0;9707:38:::1;9749:260;9778:6;9802;9826:9;9853:8;9879:15;9912:25;9955:14;9987:8;9749:11;:260::i;:::-;9656:353;;;;;;10123:40;10139:9;10150:12;10123:15;:40::i;:::-;10250:44;10268:9;10279:14;10250:17;:44::i;:::-;10393:58;10413:21;10436:14;10393:19;:58::i;:::-;10474:9:::0;;-1:-1:-1;10485:21:50;-1:-1:-1;10466:41:50::1;::::0;-1:-1:-1;;10466:41:50::1;4260:92:10::0;4334:11;4260:92;:::o;2260:254:48:-;2341:7;2383:10;:8;:10::i;:::-;-1:-1:-1;;;;;2364:30:48;;;;;;2360:148;;;-1:-1:-1;;;2410:18:48;;2360:148;2466:31;2482:5;2489:7;2466:15;:31::i;:::-;2459:38;;;;4053:120:8;4108:16;4143:23;:21;:23::i;1135:274:72:-;1345:5;1369:33;1345:5;1369:19;:33::i;6887:269:76:-;-1:-1:-1;;;;;7074:18:76;;7072:21;7056:37;;;;7133:15;;7111:38;;6887:269::o;948:166:79:-;1006:7;1025:37;1039:1;1034;:6;;4370:1:66;1025:8:79;:37::i;:::-;-1:-1:-1;1084:5:79;;;948:166::o;9345:213:84:-;-1:-1:-1;;;;;9468:18:84;;;;;;;-1:-1:-1;9468:18:84;;;;;;;;:27;;;;;;;;;;;;;:36;;;9519:32;;;;;;;;;;;;;;;;;9345:213;;;:::o;2300:181:65:-;2355:16;2374:20;-1:-1:-1;;;;;;2386:7:65;;;2374:11;:20::i;:::-;2355:39;;2404:70;2413:33;2425:8;2435:10;2413:11;:33::i;:::-;8353:3:66;2404:8:65;:70::i;3793:358:75:-;3849:6;3845:232;;;3871:81;3898:24;:22;:24::i;:::-;3880:15;:42;8455:3:66;3871:8:75;:81::i;:::-;3845:232;;;3983:83;4010:25;:23;:25::i;:::-;3992:15;:43;9885:3:66;3983:8:75;:83::i;:::-;4087:7;:16;;-1:-1:-1;;4087:16:75;;;;;;;;;;4118:26;;;;;;;;;;;;;;;;;3793:358;:::o;4544:237::-;4591:4;4737:25;:23;:25::i;:::-;4719:15;:43;:55;;;-1:-1:-1;;4767:7:75;;;;4766:8;;4544:237::o;4894:108::-;4976:19;4894:108;:::o;5008:110::-;5091:20;5008:110;:::o;6192:438:10:-;6259:16;6287:19;6309:17;:15;:17::i;:::-;6287:39;-1:-1:-1;6336:31:10;6287:39;-1:-1:-1;;;;;6370:26:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6370:26:10;;6336:60;;6468:15;6448:14;6463:1;6448:17;;;;;;;;;;;;;:35;;;;;6517:15;6497:14;6512:1;6497:17;;;;;;;;;;;;;:35;;;;;6566:15;6546:14;6561:1;6546:17;;;;;;;;;;;;;;;;;:35;6609:14;-1:-1:-1;;6192:438:10;:::o;866:101:66:-;935:9;930:34;;946:18;954:9;946:7;:18::i;7068:559:84:-;7195:71;-1:-1:-1;;;;;7204:20:84;;;;8770:3:66;7195:8:84;:71::i;:::-;7276:72;-1:-1:-1;;;;;7285:23:84;;;;8838:3:66;7276:8:84;:72::i;:::-;7359:47;7380:6;7388:9;7399:6;7359:20;:47::i;:::-;-1:-1:-1;;;;;7437:17:84;;:9;:17;;;;;;;;;;;:68;;7459:6;9316:3:66;7437:21:84;:68::i;:::-;-1:-1:-1;;;;;7417:17:84;;;:9;:17;;;;;;;;;;;:88;;;;7538:20;;;;;;;:32;;7563:6;7538:24;:32::i;:::-;-1:-1:-1;;;;;7515:20:84;;;:9;:20;;;;;;;;;;;;:55;;;;7585:35;;;;;;;7515:20;;7585:35;;;;;;;;;;;;;7068:559;;;:::o;2386:188:83:-;2447:7;2494:10;2506:12;2520:15;2537:13;:11;:13::i;:::-;2483:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2560:4;2483:83;;;;;;;;;;;;;;;;;;;;;;;;2473:94;;;;;;2386:188;-1:-1:-1;2386:188:83:o;4220:98:75:-;4272:39;4281:14;:12;:14::i;:::-;8397:3:66;4272:8:75;:39::i;:::-;4220:98::o;6277:418:50:-;6353:87;2755:4;6362:17;:45;;5289:3:66;6353:8:50;:87::i;:::-;6450;2828:4;6459:17;:45;;5228:3:66;6450:8:50;:87::i;:::-;6560:9;;:70;;6583:17;3356:3;6560:22;:70::i;:::-;6548:9;:82;6645:43;;;;;;6670:17;;6645:43;:::i;915:167:93:-;973:7;1004:5;;;1019:37;1028:6;;;;973:7;1019:8;:37::i;:::-;1074:1;915:167;-1:-1:-1;;;915:167:93:o;6921:279:50:-;7014:14;7031:11;:9;:11::i;:::-;7014:28;;7059:20;7083:10;:8;:10::i;:::-;:42;;-1:-1:-1;;;7083:42:50;;-1:-1:-1;;;;;7083:27:50;;;;;;;:42;;7111:6;;7119:5;;7083:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7136:57;;-1:-1:-1;;;7136:57:50;;7052:73;;-1:-1:-1;;;;;;7136:37:50;;;-1:-1:-1;7136:37:50;;-1:-1:-1;7136:57:50;;-1:-1:-1;7174:6:50;;7182:10;;7136:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6921:279;;;;:::o;11590:142:76:-;11699:14;-1:-1:-1;;;;;11691:34:76;;11590:142::o;5506:101:10:-;5599:1;5506:101;:::o;810:131:72:-;888:46;902:1;897;:6;5002:3:66;888:8:72;:46::i;18845:2664:10:-;19142:19;19175:27;;19455:11;19481:14;:12;:14::i;:::-;19477:1853;;;19817:27;19847:54;19880:8;19890:10;19847:32;:54::i;:::-;19817:84;;19916:36;19932:19;19916:15;:36::i;:::-;19995:27;20003:8;20013;19995:7;:27::i;:::-;19967:55;;-1:-1:-1;19967:55:10;-1:-1:-1;20489:93:10;20527:19;19967:55;20561:13;:11;:13::i;:::-;20576:5;20489:37;:93::i;:::-;20472:14;:110;-1:-1:-1;19477:1853:10;;;20841:27;20849:8;20859;20841:7;:27::i;:::-;-1:-1:-1;;21285:14:10;:34;20813:55;;-1:-1:-1;20813:55:10;-1:-1:-1;19477:1853:10;21485:16;;;21499:1;21485:16;;;;;;;;;21460:11;;21473:10;;21485:16;;;;;;;;;;;-1:-1:-1;21485:16:10;21452:50;;;;;;;18845:2664;;;;;;;;;;;;:::o;23314:253:50:-;23431:9;23426:135;23450:17;:15;:17::i;:::-;23446:1;:21;23426:135;;;23501:49;23520:7;23528:1;23520:10;;;;;;;;;;;;;;23532:14;23547:1;23532:17;;;;;;;;;;;;;;23501:18;:49::i;:::-;23488:7;23496:1;23488:10;;;;;;;;;;;;;;;;;:62;23469:3;;23426:135;;;;23314:253;;:::o;24847:6885::-;25546:10;25568:4;25546:27;25542:6184;;25860:28;;25842:12;;25868:4;;25860:28;;25842:12;;25879:8;;25860:28;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25841:47;;;26106:7;26139:1;26134:3336;;;;29630:9;26134:3336;26610:4;26607:1;26604;26589:26;26663:1;26657:8;-1:-1:-1;;;;;;26653:81:50;-1:-1:-1;;;26885:77:50;;26879:2;;27018:16;27015:1;27012;26997:38;27074:16;27071:1;27064:27;26879:2;;28485;28479:4;28476:1;28461:27;28682:2;28676:4;28669:16;29106:2;29088:16;29084:25;29078:4;29072;29057:53;29444:2;29426:16;29422:25;29419:1;29412:36;25972:3703;29705:31;29739:17;:15;:17::i;:::-;29705:51;;29770:39;29784:8;29794:14;29770:13;:39::i;:::-;29825:17;29844:29;29879:256;29904:6;29928;29952:9;29979:8;30005:15;30038:25;30081:14;30113:8;29879:7;:256;;:::i;:::-;29824:311;;;;;30150:45;30166:12;30180:14;30150:15;:45;;:::i;:::-;30676:19;;-1:-1:-1;;31063:23:50;;31103:24;;;31349:66;-1:-1:-1;;31331:16:50;;31324:92;-1:-1:-1;30672:28:50;-1:-1:-1;;31442:16:50;;31698:2;31688:13;;31442:16;31674:28;1793:180:79;1851:7;1882:5;;;1897:51;1906:6;;;:20;;;1925:1;1920;1916;:5;;;;;;:10;1906:20;4467:1:66;1897:8:79;:51::i;3855:400:44:-;3917:7;3940:6;3936:74;;3962:37;3971:5;4516:1:66;3962:8:44;:37::i;:::-;4024:6;4020:45;;-1:-1:-1;4053:1:44;4046:8;;4020:45;1305:4;4095:7;;;;:1;:7;:1;4118:13;;;;;:20;4112:106;;4155:36;4164:5;4564:1:66;4155:8:44;:36::i;:::-;4247:1;4235:9;:13;;;;;;;3855:400;-1:-1:-1;;;;3855:400:44:o;22528:247:50:-;22639:9;22634:135;22658:17;:15;:17::i;:::-;22654:1;:21;22634:135;;;22709:49;22728:7;22736:1;22728:10;;;;;;;;;;;;;;22740:14;22755:1;22740:17;;;;;;;;;;;;;;22709:18;:49::i;:::-;22696:7;22704:1;22696:10;;;;;;;;;;;;;;;;;:62;22677:3;;22634:135;;4016:104:48;4092:21;4098:6;4106;4092:5;:21::i;15605:1826:10:-;15922:20;15956:26;;16373:11;15922:20;16425:54;16458:8;16373:11;16425:32;:54::i;:::-;16395:84;;16490:36;16506:19;16490:15;:36::i;:::-;16565:27;16573:8;16583;16565:7;:27::i;:::-;16607:10;:21;16537:55;;-1:-1:-1;16537:55:10;-1:-1:-1;16607:21:10;;16603:113;;;16644:61;16655:12;16669:20;16679:9;16669;:20::i;:::-;16691:13;:11;:13::i;:::-;16644:10;:61::i;:::-;17158:93;17196:19;17217:12;17231:13;:11;:13::i;:::-;17246:4;17158:37;:93::i;:::-;17141:14;:110;17407:16;;;17421:1;17407:16;;;;;;;;;17382:12;;17396:9;;17407:16;;;;;;;;;;;-1:-1:-1;17407:16:10;17374:50;;;;;;;;15605:1826;;;;;;;;;;;;:::o;24098:249:50:-;24213:9;24208:133;24232:17;:15;:17::i;:::-;24228:1;:21;24208:133;;;24283:47;24300:7;24308:1;24300:10;;;;;;;;;;;;;;24312:14;24327:1;24312:17;;;;;;;;;;;;;;24283:16;:47::i;:::-;24270:7;24278:1;24270:10;;;;;;;;;;;;;;;;;:60;24251:3;;24208:133;;5763:423:10;5841:21;5887:7;-1:-1:-1;;;;;5878:16:10;;;;;;;5874:306;;;-1:-1:-1;5926:15:10;5874:306;;;5971:7;-1:-1:-1;;;;;5962:16:10;;;;;;;5958:222;;;-1:-1:-1;6010:15:10;5958:222;;;6055:7;-1:-1:-1;;;;;6046:16:10;;;;;;;6042:138;;;-1:-1:-1;6094:15:10;6042:138;;;6140:29;6206:3:66;6140:7:10;:29::i;19386:283:50:-;19457:7;19568:17;19588:36;19601:22;:20;:22::i;:::-;19588:6;;:12;:36::i;:::-;19568:56;-1:-1:-1;19641:21:50;:6;19568:56;19641:10;:21::i;21780:579::-;21860:7;22311:41;22330:6;22338:13;22311:18;:41::i;5552:145:49:-;5632:58;5654:27;5675:5;5654:20;:27::i;:::-;5683:6;5632:21;:58::i;6795:442:10:-;6998:7;2970:18:75;:16;:18::i;:::-;7017:21:10::1;7041:83;7065:11;7078:21;7101:22;7041:23;:83::i;:::-;7017:107;;7141:89;7156:11;7169:21;7192:22;7216:13;7141:14;:89::i;:::-;7134:96:::0;6795:442;-1:-1:-1;;;;;6795:442:10:o;22979:160:50:-;23065:7;23091:41;23110:6;23118:13;23091:18;:41::i;7243:444:10:-;7447:7;2970:18:75;:16;:18::i;:::-;7466:21:10::1;7490:83;7514:11;7527:21;7550:22;7490:23;:83::i;:::-;7466:107;;7590:90;7606:11;7619:21;7642:22;7666:13;7590:15;:90::i;23769:156:50:-:0;23853:7;23879:39;23896:6;23904:13;23879:16;:39::i;19039:247::-;19105:7;19223:56;19236:42;19255:22;:20;:22::i;:::-;893:4:77;;19236:18:50;:42::i;:::-;19223:6;;:12;:56::i;24353:488::-;24411:11;24808:10;:8;:10::i;:::-;-1:-1:-1;;;;;24808:24:50;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;11941:160:10:-;11994:17;12030:64;12063:17;:15;:17::i;:::-;12082:11;12030:32;:64::i;3199:183:83:-;3276:7;3341:20;:18;:20::i;:::-;3363:10;3312:62;;;;;;-1:-1:-1;;;3312:62:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3302:73;;;;;;3295:80;;3199:183;;;:::o;13615:1091:10:-;13812:7;13821:16;2970:18:75;:16;:18::i;:::-;13849:30:10::1;13882:19;:8;:17;:19::i;:::-;13849:52:::0;-1:-1:-1;13911:70:10::1;13928:30;13920:4;:38;;;;;;;;;5443:3:66;13911:8:10;:70::i;:::-;13992:26;14021:27;:8;:25;:27::i;:::-;13992:56;;14058;14094:9;:16;14112:1;14058:35;:56::i;:::-;14124:40;14138:9;14149:14;14124:13;:40::i;:::-;14175:26;14204:56;14237:9;14248:11;14204:32;:56::i;:::-;14175:85;;14556:20;14579:31;14588:18;14608:1;14579:8;:31::i;:::-;14621:14;:35:::0;;;;-1:-1:-1;14556:54:10;-1:-1:-1;14689:9:10;-1:-1:-1;;2998:1:75::1;13615:1091:10::0;;;;;;;;:::o;5862:102:50:-;2647:3;5862:102;:::o;3900:110:48:-;3979:24;3985:9;3996:6;3979:5;:24::i;3885:149:84:-;-1:-1:-1;;;;;4000:18:84;;;3974:7;4000:18;;;-1:-1:-1;4000:18:84;;;;;;;;:27;;;;;;;;;;;;;3885:149::o;4689:415:10:-;4827:16;;;4841:1;4827:16;;;;;;;;;4762;;4790:34;;4827:16;;;;4762;;4827;;;;;-1:-1:-1;;4790:53:10;-1:-1:-1;4937:1:10;1305:4:44;4918:20:10;4895:17;4913:1;4895:20;;;;;;;;;;;;;;;;;:43;4994:1;1305:4:44;4975:20:10;4952:17;4970:1;4952:20;;;;;;;;;;;;;;;;;:43;5051:1;1305:4:44;5032:20:10;5009:17;5027:1;5009:20;;;;;;;;;;;;;;;;;:43;5080:17;-1:-1:-1;4689:415:10;:::o;1415:374:72:-;1511:1;1496:5;:12;:16;1492:53;;;1528:7;;1492:53;1555:16;1574:5;1580:1;1574:8;;;;;;;;;;;;;;1555:27;;1597:9;1609:1;1597:13;;1592:191;1616:5;:12;1612:1;:16;1592:191;;;1649:15;1667:5;1673:1;1667:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;1689:51:72;-1:-1:-1;;;;;1698:18:72;;;;;;;4890:3:66;1689:8:72;:51::i;:::-;1765:7;-1:-1:-1;1630:3:72;;1592:191;;1969:544:51;2057:4;1663:42;2078:10;:8;:10::i;:::-;-1:-1:-1;;;;;2078:29:51;;;;;2077:63;;;2112:28;2131:8;2112:18;:28::i;:::-;2073:434;;;2272:10;:8;:10::i;:::-;-1:-1:-1;;;;;2258:24:51;:10;:24;;-1:-1:-1;2251:31:51;;2073:434;2435:16;:14;:16::i;:::-;:61;;;-1:-1:-1;;;2435:61:51;;;;;;;;-1:-1:-1;;;;;2435:61:51;;;;;;;2490:4;2435:61;;;;;;:27;;;;;;;:61;;;;;;;;;;;;;;;:27;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2435:61:51;;-1:-1:-1;2428:68:51;;1074:3172:66;-1:-1:-1;;;3588:3:66;3581:79;;;3799:66;3793:4;3786:80;3941:1;3935:4;3928:15;2210:2;2243:18;;;2336;;;2383;;;2215:4;2379:29;;;3057:2;3053:17;2195:18;;;;2288;;;;2284:29;;;;3040:1;3036:14;3025:26;;;;3021:50;;;;2999:73;;2994:3;2990:83;4008:4;4001:26;4234:3;;4224:14;1765:176:93;1842:7;1861:27;1875:1;1870;:6;;1878:9;1861:8;:27::i;:::-;-1:-1:-1;;1910:5:93;;;1765:176::o;3388:427:83:-;3790:9;;3765:44::o;3568:590:9:-;3667:15;2244:4;3700:8;3709:1;3700:11;;;;;;;;;;;;;;:28;;3694:92;;3731:55;3741:5;523:3:11;3731:9:9;:55::i;:::-;2244:4;3802:8;3811:1;3802:11;;;;;;;;;;;;;;:28;;3796:92;;3833:55;3843:5;523:3:11;3833:9:9;:55::i;:::-;2244:4;3904:8;3913:1;3904:11;;;;;;;;;;;;;;:28;;3898:92;;3935:55;3945:5;523:3:11;3935:9:9;:55::i;:::-;4001:9;4012:10;4024;4036;4050:42;4071:8;4081:10;4050:20;:42::i;:::-;4000:92;;;;;;;;4109:42;4125:1;4128:2;4132;4136;4140:10;4109:15;:42::i;:::-;4102:49;3568:590;-1:-1:-1;;;;;;;3568:590:9:o;24009:584:10:-;24303:16;24321:20;24343;24365:19;24388:98;24427:14;;24455:21;24388:25;:98::i;:::-;24302:184;;;;;;;;24524:62;24536:8;24546:12;24560;24574:11;24524;:62::i;:::-;24009:584;;;;;:::o;22145:571::-;22235:19;22256:27;22295:30;22328:19;:8;:17;:19::i;:::-;22295:52;-1:-1:-1;22510:53:10;22502:4;:61;;;;;;;;;22498:212;;;22586:47;22614:8;22624;22586:27;:47::i;:::-;22579:54;;;;;;;22498:212;22664:35;7850:3:66;22664:7:10;:35::i;:::-;22145:571;;;;;;;:::o;11477:743:45:-;11663:21;11732:13;11728:486;;;11835:10;11848:57;11888:16;11848:33;:10;11865:15;11848:16;:33::i;:::-;:39;;:57::i;:::-;11835:70;-1:-1:-1;11935:18:45;:10;11835:70;11935:14;:18::i;:::-;11919:34;;11728:486;;;;12081:10;12094:61;12138:16;12094:35;:10;12113:15;12094:18;:35::i;:61::-;12081:74;-1:-1:-1;12185:18:45;:10;12081:74;12185:14;:18::i;:::-;12169:34;;11728:486;;11477:743;;;;;;:::o;2485:239:77:-;2547:7;2574:6;2566:15;;;;;;893:4;2616:7;;;;:1;:7;:1;2645:13;;;;;:20;2637:29;;;;;1647:209;1709:7;1746:5;;;1761:57;1770:6;;;:26;;;1795:1;1790;1780:7;:11;;;;1761:57;893:4;1836:7;:13;;8512:410:84;8587:68;-1:-1:-1;;;;;8596:21:84;;;;8968:3:66;8587:8:84;:68::i;:::-;8666:49;8687:7;8704:1;8708:6;8666:20;:49::i;:::-;-1:-1:-1;;;;;8747:18:84;;:9;:18;;;;;;;;;;;:67;;8770:6;9382:3:66;8747:22:84;:67::i;:::-;-1:-1:-1;;;;;8726:18:84;;:9;:18;;;;;;;;;;:88;8839:12;;:24;;8856:6;8839:16;:24::i;:::-;8824:12;:39;8878:37;;;;;;;;8904:1;;-1:-1:-1;;;;;8878:37:84;;;;;;;;;;;;8512:410;;:::o;17437:581:10:-;17527:20;17549:26;17587:30;17620:19;:8;:17;:19::i;:::-;17587:52;-1:-1:-1;17784:57:10;17776:4;:65;;;;;;;;;17772:240;;;17885:50;17916:8;17926;17885:30;:50::i;:::-;17857:78;;-1:-1:-1;17857:78:10;-1:-1:-1;17772:240:10;;;17966:35;6263:3:66;17966:7:10;:35::i;2012:362:14:-;2152:36;;;;;;;;2178:10;2152:36;;;;;;;;;;;-1:-1:-1;;;;;2152:36:14;;;;;;;-1:-1:-1;;;2152:36:14;;;-1:-1:-1;;;;;2152:36:14;;;;;;;;;2206:29;:12;2223:11;2206:16;:29::i;:::-;:53;;2261:17;;;;;;;;;;;;;;;;;2198:81;;;;;-1:-1:-1;;;2198:81:14;;;;;;;;:::i;:::-;-1:-1:-1;2332:16:14;;;;-1:-1:-1;;;;;2297:51:14;:31;:12;2314:13;2297:16;:31::i;:::-;:51;;2350:16;;;;;;;;;;;;;;;;;2289:78;;;;;-1:-1:-1;;;2289:78:14;;;;;;;;:::i;2730:682:77:-;2790:7;2809:38;2818:6;;;4516:1:66;2809:8:77;:38::i;:::-;2862:6;2858:548;;-1:-1:-1;2891:1:77;2884:8;;2858:548;893:4;2943:7;;;;2964:51;;2943:1;:7;:1;2973:13;;;;;:20;4564:1:66;2964:8:77;:51::i;:::-;3389:1;3384;3372:9;:13;3371:19;;;;;;3394:1;3370:25;3363:32;;;;;1862:617;1922:7;1959:5;;;1974:57;1983:6;;;:26;;;2008:1;2003;1993:7;:11;;;;1974:57;2046:12;2042:431;;2081:1;2074:8;;;;;2042:431;893:4;-1:-1:-1;;2439:11:77;;2438:19;;6411:127:49;-1:-1:-1;6504:7:49;;6411:127::o;9534:860:10:-;9880:16;;;9894:1;9880:16;;;;;;;;;9714:21;;;;9880:16;;;;;;;;;;;-1:-1:-1;9880:16:10;9852:44;;9920:21;9906:8;9915:1;9906:11;;;;;;;;;;;;;:35;;;;;9965:22;9951:8;9960:1;9951:11;;;;;;;;;;;;;:36;;;;;10168:13;10183:22;10209:57;10224:11;:19;;;10245:11;:20;;;10209:14;:57::i;:::-;10167:99;;;;10290:46;10313:6;10321:14;10290:22;:46::i;:::-;10276:8;10285:1;10276:11;;;;;;;;;;;;;:60;;;;;10354:33;10378:8;10354:23;:33::i;12107:345::-;12309:7;12335:110;12364:21;12387:22;12411:11;:18;;;12431:13;12335:28;:110::i;12458:346::-;12661:7;12687:110;12716:21;12739:22;12763:11;:18;;;12783:13;12687:28;:110::i;10996:583::-;11315:16;;;11329:1;11315:16;;;;;;;;;11045:25;;11315:16;;;11045:25;;11315:16;;;;;-1:-1:-1;11315:16:10;11304:27;;11355:48;11378:7;11387:15;11355:22;:48::i;:::-;11341:8;11350:1;11341:11;;;;;;;;;;;;;:62;;;;;11427:48;11450:7;11459:15;11427:22;:48::i;:::-;11413:8;11422:1;11413:11;;;;;;;;;;;;;:62;;;;;11499:48;11522:7;11531:15;11499:22;:48::i;:::-;11485:8;11494:1;11485:11;;;;;;;;;;;;;:62;;;;;10996:583;:::o;867:156:64:-;927:25;982:4;971:45;;;;;;;;;;;;;;;-1:-1:-1;971:45:64;;867:156;-1:-1:-1;;867:156:64:o;1205:185::-;1273:26;1338:4;1327:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1327:56:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1327:56:64;;;;;;-1:-1:-1;1311:72:64;;1205:185;-1:-1:-1;;;;;;1205:185:64:o;7898:294:84:-;7973:49;8002:1;8006:7;8015:6;7973:20;:49::i;:::-;8048:12;;:24;;8065:6;8048:16;:24::i;:::-;8033:12;:39;-1:-1:-1;;;;;8103:18:84;;:9;:18;;;;;;;;;;;:30;;8126:6;8103:22;:30::i;:::-;-1:-1:-1;;;;;8082:18:84;;:9;:18;;;;;;;;;;;:51;;;;8148:37;;;;;;;8082:18;;:9;;8148:37;;;;;;;;;;7898:294;;:::o;7301:271:50:-;7387:4;7435:47;-1:-1:-1;;;7435:11:50;:47::i;:::-;7423:8;:59;7422:143;;;-1:-1:-1;7512:52:50;-1:-1:-1;;;7512:11:50;:52::i;:::-;7500:64;;;;7301:271;-1:-1:-1;7301:271:50:o;256:103:43:-;326:9;321:35;;337:19;346:9;337:8;:19::i;4376:889:9:-;4513:9;;;;4837:52;4878:10;4837:31;4878:10;;4837:19;:31::i;:::-;:40;;:52::i;:::-;1305:4:44;4816:73:9;4812:77;;4899:13;4943:8;4952:1;4943:11;;;;;;;;;;;;;;4929:8;4938:1;4929:11;;;;;;;;;;;;;;4915:8;4924:1;4915:11;;;;;;;;;;;;;;:25;:39;4899:55;;4969:47;5005:10;4969:26;4984:10;4969:5;:14;;:26;;;;:::i;:47::-;4964:52;;5026:13;5114:33;5135:8;5144:1;5135:11;;;;;;;;;;;;;;5114:8;5123:1;5114:11;;;;;;;;;;;;;;:20;;:33;;;;:::i;:::-;5078;5099:8;5108:1;5099:11;;;;;;;;;;;;;;5078:8;5087:1;5078:11;;;;;;;:33;5042;5063:8;5072:1;5063:11;;;;;;;;;;;;;;5042:8;5051:1;5042:11;;;;;;;:33;:69;:105;;-1:-1:-1;5162:26:9;5042:105;5177:10;5162:14;:26::i;:::-;5157:31;;5203:55;5246:8;5255:1;5246:11;;;;;;;;;;;;;;5203:33;5224:8;5233:1;5224:11;;;;;;;5203:55;5198:60;;4376:889;;;;;;;;;:::o;5754:568::-;5915:15;5942;5988:43;6017:1;6020:2;6024;6028;5988:28;:43::i;:::-;5967:64;-1:-1:-1;5967:64:9;-1:-1:-1;6051:61:9;6071:2;6075;6079;6083:10;5967:64;;6051:19;:61::i;:::-;6041:71;;3003:4;6239:7;:17;;6233:82;;6259:56;6269:5;467:3:11;6259:9:9;:56::i;:::-;5754:568;;;;;;;;:::o;25474:914:10:-;25622:7;25643;25664;25685;25718:27;25747:30;25779:20;25801:19;25824:18;:16;:18::i;:::-;25717:125;;;;;;;;25938:19;25961:1;25938:24;25934:95;;;25986:1;;-1:-1:-1;25986:1:10;;-1:-1:-1;25992:12:10;;-1:-1:-1;26006:11:10;-1:-1:-1;25978:40:10;;-1:-1:-1;;25978:40:10;25934:95;26073:16;26091:20;26115:197;26159:17;26190:16;26220:13;:11;:13::i;:::-;26247:19;26280:22;26115:30;:197::i;:::-;26072:240;;-1:-1:-1;26072:240:10;-1:-1:-1;26355:12:10;;-1:-1:-1;26369:11:10;;-1:-1:-1;;;;;25474:914:10;;;;;;;;:::o;26467:434::-;26676:12;;26672:82;;26704:39;26720:12;26734:8;26704:15;:39::i;:::-;26810:16;;26806:89;;26842:42;26858:11;26871:12;26842:15;:42::i;:::-;26467:434;;;;:::o;22722:928::-;22873:7;22882:16;23325:19;23347:33;:8;:31;:33::i;:::-;23325:55;;23491:27;23521:80;23564:8;23574:11;23587:13;:11;:13::i;:::-;23521:42;:80::i;:::-;23619:11;;;;-1:-1:-1;22722:928:10;;-1:-1:-1;;;;22722:928:10:o;2718:615:44:-;2778:7;2815:5;;;2836:6;;;:26;;;2861:1;2856;2846:7;:11;;;;;;:16;2836:26;2830:96;;2879:36;2888:5;4467:1:66;2879:8:44;:36::i;:::-;2940:12;2936:51;;2975:1;2968:8;;;;;2936:51;1305:4;-1:-1:-1;;3303:11:44;;3302:19;;3325:1;3301:25;3294:32;;;2718:615;;;;:::o;4460:722::-;4520:7;4543:6;4539:74;;4565:37;4574:5;4516:1:66;4565:8:44;:37::i;:::-;4627:6;4623:45;;-1:-1:-1;4656:1:44;4649:8;;4623:45;1305:4;4698:7;;;;:1;:7;:1;4721:13;;;;;:20;4715:121;;4758:51;1305:4;4779:1;4767:9;:13;;;;4758:51;5169:1;5164;5152:9;:13;5151:19;;;;1675:277;1733:7;1837:5;;;1858:6;;;;1852:76;;1881:36;1890:5;4322:1:66;1881:8:44;:36::i;2241:247::-;2303:7;2340:5;;;2361:6;;;:26;;;2386:1;2381;2371:7;:11;;;;;;:16;2361:26;2355:96;;2404:36;2413:5;4467:1:66;2404:8:44;:36::i;1958:277::-;2016:7;2119:1;2114;:6;;2108:76;;2137:36;2146:5;4370:1:66;2137:8:44;:36::i;1353:121:93:-;1411:7;1437:30;1441:1;1444;4370::66;1437:3:93;:30::i;21711:428:10:-;21865:7;21874:16;21906:20;21929:36;:8;:34;:36::i;:::-;21906:59;;21976:26;22005:84;22051:8;22061:12;22075:13;:11;:13::i;:::-;22005:45;:84::i;7927:643::-;7994:17;;-1:-1:-1;;;;;8071:5:10;;;;;;;8067:26;;;8088:1;;8091;8067:26;8180:7;-1:-1:-1;;;;;8175:12:10;;;;;;;8171:238;;;8212:7;-1:-1:-1;;;;;8207:12:10;;;;;;;8203:51;;;-1:-1:-1;8229:7:10;;-1:-1:-1;8238:15:10;8221:33;;8203:51;8277:7;-1:-1:-1;;;;;8272:12:10;;;;;;;8268:83;;8286:65;8296:5;721:3:11;8286:9:10;:65::i;:::-;-1:-1:-1;8373:7:10;;-1:-1:-1;8382:15:10;8365:33;;8171:238;8429:7;-1:-1:-1;;;;;8424:12:10;;;;;;;:28;;;;-1:-1:-1;8445:7:10;-1:-1:-1;;;;;8440:12:10;;;;;;;8424:28;8418:102;;8455:65;8465:5;721:3:11;8455:9:10;:65::i;:::-;-1:-1:-1;8538:7:10;;8547:15;;-1:-1:-1;7927:643:10;-1:-1:-1;;7927:643:10:o;8751:588::-;8843:15;9088:12;9102:15;9125:10;:8;:10::i;:::-;-1:-1:-1;;;;;9125:27:10;;9153:11;:9;:11::i;:::-;9166:5;9125:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;9192:14:10;;;;-1:-1:-1;9087:85:10;;-1:-1:-1;9087:85:10;-1:-1:-1;9302:30:10;9192:14;9318:13;9302:15;:30::i;10521:340::-;10650:21;10704:11;10650:21;10745:54;10778:8;10704:11;10745:32;:54::i;:::-;10725:74;-1:-1:-1;10825:29:10;10725:74;10843:10;10825:17;:29::i;13736:2761:9:-;13902:17;;15998:44;:13;16019:22;15998:20;:44::i;:::-;15986:56;;;-1:-1:-1;16056:20:9;16092:46;:13;16115:22;16092;:46::i;:::-;16079:59;;;-1:-1:-1;16253:64:9;16292:24;:10;16307:8;16292:14;:24::i;:::-;16253:30;:12;16274:8;16253:20;:30::i;:64::-;16241:76;;13736:2761;;16419:10;16406:9;:23;;16400:90;;16432:58;16442:5;297:3:11;16432:9:9;:58::i;16695:2765::-;16862:16;18556:10;18543:9;:23;;18537:90;;18569:58;18579:5;297:3:11;18569:9:9;:58::i;:::-;19093:18;19126:44;:13;19147:22;19126:20;:44::i;:::-;19114:56;;;-1:-1:-1;19184:20:9;19220:46;:13;19243:22;19220;:46::i;:::-;19207:59;;;-1:-1:-1;19381:62:9;19415:27;19207:59;19432:9;19415:16;:27::i;:::-;19381;:10;19398:9;19381:16;:27::i;793:128:43:-;841:29;850:9;-1:-1:-1;;;841:8:43;:29::i;2603:109:44:-;2666:7;1305:4;2693:5;;;2692:13;;;2603:109;-1:-1:-1;;;2603:109:44:o;6676:739:9:-;6825:15;;;6896:16;:1;6910;6905:6;;6896:8;:16::i;:::-;6880:13;6890:2;;6880:9;:13::i;:::-;:32;;-1:-1:-1;6922:13:9;6938:35;6971:1;6967:5;;6944:14;6880:32;6956:1;6944:11;:14::i;:::-;6939:19;;;6938:28;:35::i;:::-;6922:51;-1:-1:-1;1305:4:44;7245:22:9;;;7314:45;7336:6;7327:15;;;:31;;7354:4;7327:31;;;7345:6;7327:31;7314:5;;-1:-1:-1;;;;;7314:45:9;:12;:45::i;:::-;7309:50;-1:-1:-1;7379:29:9;:5;3461:6;7379:12;:29::i;:::-;7369:39;;6676:739;;;;;;;;;;:::o;7767:1461::-;7963:7;;;8016:1143;8056:3;8044:9;:15;8016:1143;;;8198:16;8216:15;8235:58;8252:2;8256;8260;8264:10;8276:7;8285;8235:16;:58::i;:::-;8197:96;;;;8436:1;8424:8;:13;8420:33;;8446:7;8439:14;;;;;;;;8420:33;2109:1;8471:38;;;;;:52;;;8513:10;8471:52;8467:199;;;8659:7;8652:14;;;;;;;;8467:199;2109:1;8684:38;;;;;:105;;-1:-1:-1;2050:1:9;8738:12;:51;8726:8;:63;;8684:105;8680:250;;;8908:7;8901:14;;;;;;;;8680:250;8958:8;8943:23;;9055:10;9051:97;;;9077:21;:7;9089:8;9077:11;:21::i;:::-;9067:31;;9051:97;;;9127:21;:7;9139:8;9127:11;:21::i;:::-;9117:31;;9051:97;-1:-1:-1;;8061:11:9;;8016:1143;;;;9168:53;238:3:11;9168:8:9;:53::i;:::-;7767:1461;;;;;;;;;;:::o;26980:497:10:-;27184:10;;:61;;-1:-1:-1;;;27184:61:10;;27068:7;;;;;;;;-1:-1:-1;;;;;27184:10:10;;;;-1:-1:-1;;27184:61:10;;-1:-1:-1;;;;27184:61:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27259:10;;:64;;-1:-1:-1;;;27259:64:10;;-1:-1:-1;;;;;27259:10:10;;;;-1:-1:-1;;27259:64:10;;27278:44;;27259:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27337:10;;:55;;-1:-1:-1;;;27337:55:10;;-1:-1:-1;;;;;27337:10:10;;;;-1:-1:-1;;27337:55:10;;-1:-1:-1;;;;27337:55:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27406:10;;:54;;-1:-1:-1;;;27406:54:10;;-1:-1:-1;;;;;27406:10:10;;;;-1:-1:-1;;27406:54:10;;-1:-1:-1;;;;27406:54:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27163:307;;;;;;;;26980:497;;;;:::o;4717:2410:45:-;4953:7;4962;5696:17;5676:16;:37;5672:443;;-1:-1:-1;6099:1:45;;-1:-1:-1;6099:1:45;6091:13;;5672:443;6567:17;6587:96;6663:19;6588:65;6613:39;:16;6634:17;6613:20;:39::i;:::-;6588:16;;:24;:65::i;:::-;6587:75;;:96::i;:::-;6567:116;-1:-1:-1;6693:21:45;6717:68;6745:39;:16;6766:17;6745:20;:39::i;:::-;6717:19;;:27;:68::i;:::-;6693:92;-1:-1:-1;6795:19:45;6817:35;:16;6693:92;6817:20;:35::i;:::-;6795:57;-1:-1:-1;6862:14:45;6879:30;:9;6795:57;6879:17;:30::i;:::-;6862:47;-1:-1:-1;6968:16:45;6987:38;:22;6862:47;6987:30;:38::i;:::-;6968:57;-1:-1:-1;7035:20:45;7058;:6;6968:57;7058:10;:20::i;:::-;7097:8;;;;-1:-1:-1;4717:2410:45;;-1:-1:-1;;;;;;;;;;;4717:2410:45:o;2343:184:64:-;2417:19;2477:4;2466:54;;;;;;;;;;;;;;;-1:-1:-1;2466:54:64;;;;2343:184;-1:-1:-1;;2343:184:64:o;2942:1444:45:-;4195:15;;3094:27;;-1:-1:-1;;;;;4181:30:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4181:30:45;;4168:43;;4226:9;4221:131;4245:8;:15;4241:1;:19;4221:131;;;4297:44;4332:8;4297:26;4317:5;4297:8;4306:1;4297:11;;;;;;;;;;;;;;:19;;:26;;;;:::i;:44::-;4281:10;4292:1;4281:13;;;;;;;;;;;;;;;;;:60;4262:3;;4221:131;;1673:1175;2662:15;;1829:26;;-1:-1:-1;;;;;2648:30:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2648:30:45;;2636:42;;2693:9;2688:127;2712:8;:15;2708:1;:19;2688:127;;;2763:41;2795:8;2763:25;2781:6;2763:8;2772:1;2763:11;;;;;;;;;;;;;;:17;;:25;;;;:::i;:41::-;2748:9;2758:1;2748:12;;;;;;;;;;;;;;;;;:56;2729:3;;2688:127;;3339:510:44;3400:7;3437:5;;;3457:12;3453:51;;3492:1;3485:8;;;;;1028:3379:43;-1:-1:-1;;;1091:18:43;3742:79;;;3960:66;3954:4;3947:80;4102:1;4096:4;4089:15;2230:2;2263:18;;;2308;;;2235:4;2304:29;;;3106:1;3197:14;2215:18;;;;3186:26;;;;2356:18;;;;2403;;;2399:29;;3218:2;3214:17;3182:50;3096:4;3102:18;;;;;;3092:29;3088:2;3084:38;3161:72;;;;3156:3;3152:82;4169:4;4162:26;1120:14;;;;;4395:3;;4385:14;7236:1013:45;7308:7;7331:10;7327:49;;-1:-1:-1;7364:1:45;7357:8;;7327:49;7386:13;7402:24;7420:5;7402:17;:24::i;:::-;7386:40;;7520:1;7510:5;1305:4:44;7480:5:45;:26;7479:36;;;;;;7470:5;:46;7469:52;;;;;;7461:60;;7590:1;7580:5;1305:4:44;7550:5:45;:26;7549:36;;;;;;7540:5;:46;7539:52;;;;;;7531:60;;7660:1;7650:5;1305:4:44;7620:5:45;:26;7619:36;;;;;;7610:5;:46;7609:52;;;;;;7601:60;;7730:1;7720:5;1305:4:44;7690:5:45;:26;7689:36;;;;;;7680:5;:46;7679:52;;;;;;7671:60;;7800:1;7790:5;1305:4:44;7760:5:45;:26;7759:36;;;;;;7750:5;:46;7749:52;;;;;;7741:60;;7870:1;7860:5;1305:4:44;7830:5:45;:26;7829:36;;;;;;7820:5;:46;7819:52;;;;;;7811:60;;7940:1;7930:5;1305:4:44;7900:5:45;:26;7899:36;;;;;;7890:5;:46;7889:52;;;;;;;-1:-1:-1;8039:20:45;8062;7889:52;;8062:13;:20::i;:::-;8039:43;-1:-1:-1;8116:33:45;8126:22;:5;8138:9;8126:11;:22::i;:::-;8116:5;;:9;:33::i;:::-;8100:12;:49;;:102;;;;-1:-1:-1;8169:33:45;8179:22;:5;8191:9;8179:11;:22::i;:::-;8169:5;;:9;:33::i;:::-;8153:12;:49;;8100:102;8092:127;;;;;-1:-1:-1;;;8092:127:45;;;;;;;;;;;;-1:-1:-1;;;8092:127:45;;;;;;;;;;;;;;5188:255:44;5249:7;5272:6;5268:74;;5294:37;5303:5;4516:1:66;5294:8:44;:37::i;:::-;5356:6;5352:45;;-1:-1:-1;5385:1:44;5378:8;;5352:45;5430:1;5425;1305:4;5415:1;:7;:11;5414:17;;;;;;5435:1;5413:23;5406:30;;5188:255;;;;:::o;9416:3768:9:-;9609:16;9627:15;3003:4;9660:7;:17;;9654:82;;9680:56;9690:5;467:3:11;9680:9:9;:56::i;:::-;9945:7;9934;:18;;9928:83;;9955:56;9965:5;580:3:11;9955:9:9;:56::i;:::-;10022:16;10041:25;10058:7;;10041:16;:25::i;:::-;10022:44;-1:-1:-1;10440:17:9;10460:30;10471:1;10461:11;;10482:7;10460:21;:30::i;:::-;10440:50;-1:-1:-1;10524:72:9;10585:10;10524:51;10585:10;10524:51;10440:50;10585:10;10524:18;:30::i;:72::-;10512:84;;10657:2;10634:20;:7;10651:2;10634:16;:20::i;:::-;10630:1;:24;10618:36;;;:41;10905:18;;2664:4;10964:39;;10960:2086;;11126:26;:8;11144:7;11126:17;:26::i;:::-;11113:39;-1:-1:-1;11192:73:9;11254:10;11192:52;11254:10;11192:52;11113:39;11254:10;11192:19;:31::i;:73::-;11179:86;;;;11292:30;11179:86;11312:9;11292:19;:30::i;:::-;11279:43;-1:-1:-1;11619:21:9;:8;11637:2;11619:17;:21::i;:::-;11607:33;-1:-1:-1;11666:54:9;11710:9;11679:20;:7;11696:2;11679:16;:20::i;:::-;11667:32;;;11666:43;:54::i;:::-;11654:66;-1:-1:-1;11758:22:9;:2;11770:9;11758:11;:22::i;:::-;11746:34;10960:2086;;;11968:36;:8;11996:7;11968:27;:36::i;:::-;11955:49;-1:-1:-1;12044:103:9;12136:10;12044:72;12136:10;12044:72;11955:49;12136:10;12044:29;:41::i;:::-;:60;;:72::i;:103::-;12031:116;;;;12393:35;12031:116;12418:9;12393:24;:35::i;:::-;12380:48;-1:-1:-1;12596:31:9;:8;12624:2;12596:27;:31::i;:::-;12584:43;-1:-1:-1;12884:20:9;:2;12896:7;12884:11;:20::i;:::-;12872:32;12930:45;12872:32;12954:9;12965:4;12971:3;12930:23;:45::i;:::-;12918:57;-1:-1:-1;13013:22:9;:2;13025:9;13013:11;:22::i;:::-;13001:34;10960:2086;13083:10;13070:9;:23;;13056:38;;13116:10;:60;;13167:9;13154:10;:22;13116:60;;;13141:10;13129:9;:22;13116:60;13104:73;;9416:3768;;;;;;;;;;;;;:::o;8837:1637:45:-;8902:7;1305:4:44;8925:5:45;:27;8921:1547;;1305:4:44;8982:42:45;1305:4:44;8997:5:45;:26;8982:14;:42::i;:::-;8975:72;;-1:-1:-1;8968:79:45;;8921:1547;9091:2;9082:5;:11;9078:71;;-1:-1:-1;1568:10:45;9113:21;;9078:71;9175:3;9166:5;:12;9162:62;;-1:-1:-1;9205:4:45;9198:11;;9162:62;9250:3;9241:5;:12;9237:72;;-1:-1:-1;1509:11:45;9273:21;;9237:72;9335:3;9326:5;:12;9322:62;;-1:-1:-1;9365:4:45;9358:11;;9322:62;9410:3;9401:5;:12;9397:72;;-1:-1:-1;1449:12:45;9433:21;;9397:72;9495:3;9486:5;:12;9482:62;;-1:-1:-1;9525:4:45;9518:11;;9482:62;9570:3;9561:5;:12;9557:72;;-1:-1:-1;1388:13:45;9593:21;;9557:72;9655:3;9646:5;:12;9642:62;;-1:-1:-1;9685:4:45;9678:11;;9642:62;9730:3;9721:5;:12;9717:71;;-1:-1:-1;1326:14:45;9753:20;;9717:71;9814:4;9805:5;:13;9801:63;;-1:-1:-1;9845:4:45;9838:11;;9801:63;9890:4;9881:5;:13;9877:72;;-1:-1:-1;1264:15:45;9914:20;;9877:72;9975:4;9966:5;:13;9962:63;;-1:-1:-1;10006:4:45;9999:11;;9962:63;10051:4;10042:5;:13;10038:72;;-1:-1:-1;1201:16:45;10075:20;;10038:72;10136:4;10127:5;:13;10123:63;;-1:-1:-1;10167:4:45;10160:11;;10123:63;10212:4;10203:5;:13;10199:72;;-1:-1:-1;1137:17:45;10236:20;;10199:72;10297:4;10288:5;:13;10284:63;;-1:-1:-1;10328:4:45;10321:11;;10284:63;10373:4;10364:5;:13;10360:72;;-1:-1:-1;1072:18:45;10397:20;;10360:72;-1:-1:-1;10452:5:45;10445:12;;4261:193:44;4324:7;4347:6;4343:74;;4369:37;4378:5;4516:1:66;4369:8:44;:37::i;:::-;4446:1;1305:4;4435:1;:7;4434:13;;;;6289:142;6362:7;6404:20;1305:4;6413:1;:7;6422:1;6404:8;:20::i;:::-;6400:1;1305:4;6389:1;:7;6388:13;:36;;6289:142;-1:-1:-1;;;6289:142:44:o;7024:144::-;7092:7;7118:43;7132:1;7135;1375:3;;8141:427;8269:7;8322:6;8318:169;;8439:37;8448:5;4516:1:66;8439:8:44;:37::i;:::-;8497:13;8527:1;8522;8518;:5;8517:11;;;;;;8513:1;:15;8497:31;;8556:5;8551:1;8547;:5;8546:15;;;;;;;8141:427;-1:-1:-1;;;;;;8141:427:44:o;10480:633:45:-;10536:9;-1:-1:-1;;;10561:13:45;;10557:74;;10596:3;10590:9;;;;;10618:2;10613:7;10557:74;10649:7;10644:1;:12;10640:72;;10678:2;10672:8;;;;;10699:2;10694:7;10640:72;10730:7;10725:1;:12;10721:72;;10759:2;10753:8;;;;;10780:2;10775:7;10721:72;10811:7;10806:1;:12;10802:71;;10840:2;10834:8;;;;;10861:1;10856:6;10802:71;10891:6;10886:1;:11;10882:69;;10919:1;10913:7;;;;;10939:1;10934:6;10882:69;10969:6;10964:1;:11;10960:69;;10997:1;10991:7;;;;;11017:1;11012:6;10960:69;11047:6;11042:1;:11;11038:69;;11095:1;11090:6;;10480:633;-1:-1:-1;10480:633:45:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:138:129:-;84:20;;113:33;84:20;113:33;:::i;157:162::-;224:20;;280:13;;273:21;263:32;;253:2;;309:1;306;299:12;324:542;;421:3;414:4;406:6;402:17;398:27;388:2;;443:5;436;429:20;388:2;470:20;;-1:-1:-1;;;;;502:26:129;;499:2;;;531:9;499:2;566:54;614:4;-1:-1:-1;;608:2:129;589:13;;585:27;581:38;566:54;:::i;:::-;645:2;636:7;629:19;691:3;684:4;679:2;671:6;667:15;663:26;660:35;657:2;;;712:5;705;698:20;657:2;781;774:4;766:6;762:17;755:4;746:7;742:18;729:55;804:16;;;822:4;800:27;793:42;;;;808:7;378:488;-1:-1:-1;;378:488:129:o;871:152::-;948:20;;997:1;987:12;;977:2;;1013:1;1010;1003:12;1028:259;;1140:2;1128:9;1119:7;1115:23;1111:32;1108:2;;;1161:6;1153;1146:22;1108:2;1205:9;1192:23;1224:33;1251:5;1224:33;:::i;1292:263::-;;1415:2;1403:9;1394:7;1390:23;1386:32;1383:2;;;1436:6;1428;1421:22;1383:2;1473:9;1467:16;1492:33;1519:5;1492:33;:::i;1560:402::-;;;1689:2;1677:9;1668:7;1664:23;1660:32;1657:2;;;1710:6;1702;1695:22;1657:2;1754:9;1741:23;1773:33;1800:5;1773:33;:::i;:::-;1825:5;-1:-1:-1;1882:2:129;1867:18;;1854:32;1895:35;1854:32;1895:35;:::i;:::-;1949:7;1939:17;;;1647:315;;;;;:::o;1967:470::-;;;;2113:2;2101:9;2092:7;2088:23;2084:32;2081:2;;;2134:6;2126;2119:22;2081:2;2178:9;2165:23;2197:33;2224:5;2197:33;:::i;:::-;2249:5;-1:-1:-1;2306:2:129;2291:18;;2278:32;2319:35;2278:32;2319:35;:::i;:::-;2071:366;;2373:7;;-1:-1:-1;;;2427:2:129;2412:18;;;;2399:32;;2071:366::o;2442:853::-;;;;;;;;2654:3;2642:9;2633:7;2629:23;2625:33;2622:2;;;2676:6;2668;2661:22;2622:2;2720:9;2707:23;2739:33;2766:5;2739:33;:::i;:::-;2791:5;-1:-1:-1;2848:2:129;2833:18;;2820:32;2861:35;2820:32;2861:35;:::i;:::-;2915:7;-1:-1:-1;2969:2:129;2954:18;;2941:32;;-1:-1:-1;3020:2:129;3005:18;;2992:32;;-1:-1:-1;3076:3:129;3061:19;;3048:33;3125:4;3112:18;;3100:31;;3090:2;;3150:6;3142;3135:22;3090:2;2612:683;;;;-1:-1:-1;2612:683:129;;;;3178:7;3232:3;3217:19;;3204:33;;-1:-1:-1;3284:3:129;3269:19;;;3256:33;;2612:683;-1:-1:-1;;2612:683:129:o;3300:327::-;;;3429:2;3417:9;3408:7;3404:23;3400:32;3397:2;;;3450:6;3442;3435:22;3397:2;3494:9;3481:23;3513:33;3540:5;3513:33;:::i;:::-;3565:5;3617:2;3602:18;;;;3589:32;;-1:-1:-1;;;3387:240:129:o;3632:192::-;;3741:2;3729:9;3720:7;3716:23;3712:32;3709:2;;;3762:6;3754;3747:22;3709:2;3790:28;3808:9;3790:28;:::i;3829:1670::-;;;;;;;;4077:3;4065:9;4056:7;4052:23;4048:33;4045:2;;;4099:6;4091;4084:22;4045:2;4140:9;4127:23;4117:33;;4200:2;4189:9;4185:18;4172:32;4213:33;4240:5;4213:33;:::i;:::-;4265:5;-1:-1:-1;4322:2:129;4307:18;;4294:32;4335:35;4294:32;4335:35;:::i;:::-;4389:7;-1:-1:-1;4447:2:129;4432:18;;4419:32;-1:-1:-1;;;;;4500:14:129;;;4497:2;;;4532:6;4524;4517:22;4497:2;4575:6;4564:9;4560:22;4550:32;;4620:7;4613:4;4609:2;4605:13;4601:27;4591:2;;4647:6;4639;4632:22;4591:2;4688;4675:16;4710:2;4706;4703:10;4700:2;;;4716:9;4700:2;4754;4750;4746:11;4777:27;4800:2;4796;4792:11;4777:27;:::i;:::-;4826:3;4850:2;4845:3;4838:15;4878:2;4873:3;4869:12;4862:19;;4909:2;4905;4901:11;4949:7;4944:2;4939;4935;4931:11;4927:20;4924:33;4921:2;;;4975:6;4967;4960:22;4921:2;5002:6;4993:15;;5017:163;5031:2;5028:1;5025:9;5017:163;;;5088:17;;5076:30;;5049:1;5042:9;;;;;5135:2;5126:12;;;;5158;5017:163;;;-1:-1:-1;5199:5:129;-1:-1:-1;;;;5251:3:129;5236:19;;5223:33;;-1:-1:-1;5303:3:129;5288:19;;5275:33;;-1:-1:-1;5361:3:129;5346:19;;5333:33;;-1:-1:-1;5378:16:129;;;5375:2;;;5412:6;5404;5397:22;5375:2;;5440:53;5485:7;5474:8;5463:9;5459:24;5440:53;:::i;:::-;5430:63;;;4035:1464;;;;;;;;;;:::o;5504:306::-;;5615:2;5603:9;5594:7;5590:23;5586:32;5583:2;;;5636:6;5628;5621:22;5583:2;5667:23;;-1:-1:-1;;;;;;5719:32:129;;5709:43;;5699:2;;5771:6;5763;5756:22;6104:495;;;6258:2;6246:9;6237:7;6233:23;6229:32;6226:2;;;6279:6;6271;6264:22;6226:2;6323:9;6310:23;6342:33;6369:5;6342:33;:::i;:::-;6394:5;-1:-1:-1;6450:2:129;6435:18;;6422:32;-1:-1:-1;;;;;6466:30:129;;6463:2;;;6514:6;6506;6499:22;6463:2;6542:51;6585:7;6576:6;6565:9;6561:22;6542:51;:::i;:::-;6532:61;;;6216:383;;;;;:::o;6604:847::-;;6744:2;6732:9;6723:7;6719:23;6715:32;6712:2;;;6765:6;6757;6750:22;6712:2;6803;6797:9;6845:2;6833:15;;-1:-1:-1;;;;;6863:34:129;;6899:22;;;6860:62;6857:2;;;6925:9;6857:2;6952;6945:22;6991:28;7009:9;6991:28;:::i;:::-;6976:44;;7070:2;7055:18;;7042:32;-1:-1:-1;;;;;7103:44:129;;7093:55;;7083:2;;7167:6;7159;7152:22;7083:2;7204;7192:15;;7185:30;7267:2;7252:18;;7239:32;-1:-1:-1;;;;;7302:48:129;;7290:61;;7280:2;;7370:6;7362;7355:22;7280:2;7407;7395:15;;7388:32;7399:6;6702:749;-1:-1:-1;;;6702:749:129:o;7456:1351::-;;;;7632:2;7620:9;7611:7;7607:23;7603:32;7600:2;;;7653:6;7645;7638:22;7600:2;7685:23;;-1:-1:-1;;;;;7757:14:129;;;7754:2;;;7789:6;7781;7774:22;7754:2;7832:6;7821:9;7817:22;7807:32;;7858:6;7898:2;7893;7884:7;7880:16;7876:25;7873:2;;;7919:6;7911;7904:22;7873:2;7950:18;7965:2;7950:18;:::i;:::-;7937:31;;7991;8019:2;7991:31;:::i;:::-;7984:5;7977:46;8055:33;8084:2;8080;8076:11;8055:33;:::i;:::-;8050:2;8043:5;8039:14;8032:57;8121:33;8150:2;8146;8142:11;8121:33;:::i;:::-;8116:2;8109:5;8105:14;8098:57;8208:2;8204;8200:11;8187:25;8182:2;8175:5;8171:14;8164:49;8267:3;8263:2;8259:12;8246:26;8240:3;8233:5;8229:15;8222:51;8327:3;8323:2;8319:12;8306:26;8300:3;8293:5;8289:15;8282:51;8366:34;8395:3;8391:2;8387:12;8366:34;:::i;:::-;8360:3;8353:5;8349:15;8342:59;8434:34;8463:3;8459:2;8455:12;8434:34;:::i;:::-;8428:3;8421:5;8417:15;8410:59;8488:3;8537:2;8533;8529:11;8516:25;8566:2;8556:8;8553:16;8550:2;;;8587:6;8579;8572:22;8550:2;8628:46;8666:7;8655:8;8651:2;8647:17;8628:46;:::i;:::-;8612:14;;;8605:70;;;;-1:-1:-1;8616:5:129;8746:2;8731:18;;8718:32;;-1:-1:-1;8797:2:129;8782:18;;;8769:32;;7590:1217;-1:-1:-1;;;;;7590:1217:129:o;8812:190::-;;8924:2;8912:9;8903:7;8899:23;8895:32;8892:2;;;8945:6;8937;8930:22;8892:2;-1:-1:-1;8973:23:129;;8882:120;-1:-1:-1;8882:120:129:o;9007:194::-;;9130:2;9118:9;9109:7;9105:23;9101:32;9098:2;;;9151:6;9143;9136:22;9098:2;-1:-1:-1;9179:16:129;;9088:113;-1:-1:-1;9088:113:129:o;9206:447::-;;;;;9380:3;9368:9;9359:7;9355:23;9351:33;9348:2;;;9402:6;9394;9387:22;9348:2;9436:9;9430:16;9420:26;;9486:2;9475:9;9471:18;9465:25;9455:35;;9530:2;9519:9;9515:18;9509:25;9499:35;;9577:2;9566:9;9562:18;9556:25;9590:33;9617:5;9590:33;:::i;:::-;9338:315;;;;-1:-1:-1;9338:315:129;;-1:-1:-1;;9338:315:129:o;9658:443::-;;9755:5;9749:12;9782:6;9777:3;9770:19;9808:4;9837:2;9832:3;9828:12;9821:19;;9874:2;9867:5;9863:14;9895:3;9907:169;9921:6;9918:1;9915:13;9907:169;;;9982:13;;9970:26;;10016:12;;;;10051:15;;;;9943:1;9936:9;9907:169;;;-1:-1:-1;10092:3:129;;9725:376;-1:-1:-1;;;;;9725:376:129:o;10106:477::-;;10187:5;10181:12;10214:6;10209:3;10202:19;10239:3;10251:162;10265:6;10262:1;10259:13;10251:162;;;10327:4;10383:13;;;10379:22;;10373:29;10355:11;;;10351:20;;10344:59;10280:12;10251:162;;;10431:6;10428:1;10425:13;10422:2;;;10497:3;10490:4;10481:6;10476:3;10472:16;10468:27;10461:40;10422:2;-1:-1:-1;10565:2:129;10544:15;-1:-1:-1;;10540:29:129;10531:39;;;;10572:4;10527:50;;10157:426;-1:-1:-1;;10157:426:129:o;10588:273::-;;10771:6;10763;10758:3;10745:33;10797:16;;10822:15;;;10797:16;10735:126;-1:-1:-1;10735:126:129:o;10866:203::-;-1:-1:-1;;;;;11030:32:129;;;;11012:51;;11000:2;10985:18;;10967:102::o;11074:267::-;;11253:2;11242:9;11235:21;11273:62;11331:2;11320:9;11316:18;11308:6;11273:62;:::i;11346:477::-;;11603:2;11592:9;11585:21;11629:62;11687:2;11676:9;11672:18;11664:6;11629:62;:::i;:::-;11739:9;11731:6;11727:22;11722:2;11711:9;11707:18;11700:50;11767;11810:6;11802;11767:50;:::i;11828:187::-;11993:14;;11986:22;11968:41;;11956:2;11941:18;;11923:92::o;12020:329::-;12241:14;;12234:22;12216:41;;12288:2;12273:18;;12266:34;;;;12331:2;12316:18;;12309:34;12204:2;12189:18;;12171:178::o;12354:177::-;12500:25;;;12488:2;12473:18;;12455:76::o;12536:290::-;;12711:6;12700:9;12693:25;12754:2;12749;12738:9;12734:18;12727:30;12774:46;12816:2;12805:9;12801:18;12793:6;12774:46;:::i;12831:290::-;13021:25;;;-1:-1:-1;;;;;13082:32:129;13077:2;13062:18;;13055:60;13009:2;12994:18;;12976:145::o;13808:221::-;;13957:2;13946:9;13939:21;13977:46;14019:2;14008:9;14004:18;13996:6;13977:46;:::i;14034:462::-;14268:13;;14261:21;14254:29;14236:48;;14344:4;14332:17;;;14326:24;-1:-1:-1;;;;;14322:63:129;14300:20;;;14293:93;14446:4;14434:17;;;14428:24;-1:-1:-1;;;;;14424:65:129;14402:20;;;14395:95;;;;14224:2;14209:18;;14191:305::o;14501:452::-;14717:13;;14786:4;14771:20;;14764:28;14757:36;14739:55;;-1:-1:-1;;;;;14840:1:129;14836:17;;;14832:56;14825:4;14810:20;;14803:86;14931:3;14927:19;14920:4;14905:20;;14898:49;14688:2;14673:18;;14655:298::o;15140:338::-;;15347:6;15336:9;15329:25;15390:2;15385;15374:9;15370:18;15363:30;15410:62;15468:2;15457:9;15453:18;15445:6;15410:62;:::i;15483:184::-;15655:4;15643:17;;;;15625:36;;15613:2;15598:18;;15580:87::o;15672:242::-;15742:2;15736:9;15772:17;;;15840:22;;;-1:-1:-1;;;;;15804:34:129;;15801:62;15798:2;;;15866:9;15798:2;15893;15886:22;15716:198;;-1:-1:-1;15716:198:129:o;15919:133::-;-1:-1:-1;;;;;15996:31:129;;15986:42;;15976:2;;16042:1;16039;16032:12", "language": "Solidity", "natspec": {"details": "Gyro Three Pool with immutable weights.", "kind": "dev", "methods": {"DOMAIN_SEPARATOR()": {"details": "See {IERC20Permit-DOMAIN_SEPARATOR}."}, "allowance(address,address)": {"details": "Override to grant the Vault infinite allowance, causing for Pool Tokens to not require approval. This is sound as the Vault already provides authorization mechanisms when initiation token transfers, which this contract inherits."}, "approve(address,uint256)": {"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."}, "balanceOf(address)": {"details": "See {IERC20-balanceOf}."}, "changePauseManager(address)": {"notice": "Changes the account that is allowed to pause a pool."}, "decimals()": {"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."}, "decreaseAllowance(address,uint256)": {"details": "Override to allow decreasing allowance by more than the current amount (setting it to zero)"}, "getActionId(bytes4)": {"details": "Returns the action identifier associated with the external function described by `selector`."}, "getInvariant()": {"details": "Returns the current value of the invariant."}, "getPausedState()": {"details": "Returns the current contract pause status, as well as the end times of the Pause Window and Buffer Period."}, "getRate()": {"details": "This function returns the appreciation of one BPT relative to the underlying tokens. This starts at 1 when the pool is created and grows over time"}, "increaseAllowance(address,uint256)": {"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."}, "name()": {"details": "Returns the name of the token."}, "nonces(address)": {"details": "See {IERC20Permit-nonces}."}, "onExitPool(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Called by the Vault when a user calls `IVault.exitPool` to remove liquidity from this Pool. Returns how many tokens the Vault should deduct from the Pool's balances, as well as the amount of protocol fees the Pool owes to the Vault. The Vault will then take tokens from the Pool's balances and send them to `recipient`, as well as collect the reported amount in protocol fees, which the Pool should calculate based on `protocolSwapFeePercentage`. Protocol fees are charged on exit events to guarantee that users exiting the Pool have paid their share. `sender` is the account performing the exit (typically the pool shareholder), and `recipient` is the account to which the Vault will send the proceeds. `balances` contains the total token balances for each token the Pool registered in the Vault, in the same order that `IVault.getPoolTokens` would return. `lastChangeBlock` is the last block in which *any* of the Pool's registered tokens last changed its total balance. `userData` contains any pool-specific instructions needed to perform the calculations, such as the type of exit (e.g., proportional given an amount of pool shares, single-asset, multi-asset, etc.) Contracts implementing this function should check that the caller is indeed the Vault before performing any state-changing operations, such as burning pool shares."}, "onJoinPool(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Called by the Vault when a user calls `IVault.joinPool` to add liquidity to this Pool. Returns how many of each registered token the user should provide, as well as the amount of protocol fees the Pool owes to the Vault. The Vault will then take tokens from `sender` and add them to the Pool's balances, as well as collect the reported amount in protocol fees, which the pool should calculate based on `protocolSwapFeePercentage`. Protocol fees are reported and charged on join events so that the Pool is free of debt whenever new users join. `sender` is the account performing the join (from which tokens will be withdrawn), and `recipient` is the account designated to receive any benefits (typically pool shares). `balances` contains the total balances for each token the Pool registered in the Vault, in the same order that `IVault.getPoolTokens` would return. `lastChangeBlock` is the last block in which *any* of the Pool's registered tokens last changed its total balance. `userData` contains any pool-specific instructions needed to perform the calculations, such as the type of join (e.g., proportional given an amount of pool shares, single-asset, multi-asset, etc.) Contracts implementing this function should check that the caller is indeed the Vault before performing any state-changing operations, such as minting pool shares."}, "pause()": {"notice": "Pauses the pool. Can only be called by the pause manager."}, "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {"details": "See {IERC20Permit-permit}."}, "queryExit(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Returns the amount of BPT that would be burned from `sender` if the `onExitPool` hook were called by the Vault with the same arguments, along with the number of tokens `recipient` would receive. This function is not meant to be called directly, but rather from a helper contract that fetches current Vault data, such as the protocol swap fee percentage and Pool balances. Like `IVault.queryBatchSwap`, this function is not view due to internal implementation details: the caller must explicitly use eth_call instead of eth_sendTransaction."}, "queryJoin(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Returns the amount of BPT that would be granted to `recipient` if the `onJoinPool` hook were called by the Vault with the same arguments, along with the number of tokens `sender` would have to supply. This function is not meant to be called directly, but rather from a helper contract that fetches current Vault data, such as the protocol swap fee percentage and Pool balances. Like `IVault.queryBatchSwap`, this function is not view due to internal implementation details: the caller must explicitly use eth_call instead of eth_sendTransaction."}, "symbol()": {"details": "Returns the symbol of the token, usually a shorter version of the name."}, "totalSupply()": {"details": "See {IERC20-totalSupply}."}, "transfer(address,uint256)": {"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."}, "transferFrom(address,address,uint256)": {"details": "Override to allow for 'infinite allowance' and let the token owner use `transferFrom` with no self-allowance"}, "unpause()": {"notice": "Unpauses the pool. Can only be called by the pause manager."}}, "version": 1}, "offset": [1289, 27576], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x274 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x74F3B009 GT PUSH2 0x151 JUMPI DUP1 PUSH4 0x9D2C110C GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xC0FF1A15 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xC0FF1A15 EQ PUSH2 0x500 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x508 JUMPI DUP1 PUSH4 0xD5C096C4 EQ PUSH2 0x51B JUMPI DUP1 PUSH4 0xD60CA603 EQ PUSH2 0x52E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0xF89F27ED EQ PUSH2 0x549 JUMPI PUSH2 0x274 JUMP JUMPDEST DUP1 PUSH4 0x9D2C110C EQ PUSH2 0x4B7 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4DD JUMPI DUP1 PUSH4 0xAAABADC5 EQ PUSH2 0x4F0 JUMPI DUP1 PUSH4 0xABD13AFE EQ PUSH2 0x4F8 JUMPI PUSH2 0x274 JUMP JUMPDEST DUP1 PUSH4 0x851C1BB3 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x851C1BB3 EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0x87EC6817 EQ PUSH2 0x484 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x497 JUMPI DUP1 PUSH4 0x8D928AF8 EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4A7 JUMPI DUP1 PUSH4 0x9B02CDDE EQ PUSH2 0x4AF JUMPI PUSH2 0x274 JUMP JUMPDEST DUP1 PUSH4 0x74F3B009 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0x76E54A46 EQ PUSH2 0x430 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0x8002DF18 EQ PUSH2 0x456 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x469 JUMPI PUSH2 0x274 JUMP JUMPDEST DUP1 PUSH4 0x38FFF2D0 GT PUSH2 0x1EA JUMPI DUP1 PUSH4 0x50DD6ED9 GT PUSH2 0x1AE JUMPI DUP1 PUSH4 0x50DD6ED9 EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x55C67628 EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x6028BFD4 EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0x6D785A87 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3FC JUMPI PUSH2 0x274 JUMP JUMPDEST DUP1 PUSH4 0x38FFF2D0 EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0x3AEAE0D3 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0x44BBDB55 EQ PUSH2 0x39B JUMPI PUSH2 0x274 JUMP JUMPDEST DUP1 PUSH4 0x1C0DE051 GT PUSH2 0x23C JUMPI DUP1 PUSH4 0x1C0DE051 EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x1DD746EA EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x38E9922E EQ PUSH2 0x350 JUMPI PUSH2 0x274 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0xE608B30 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2DF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x281 PUSH2 0x551 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x47B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH2 0x2A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x42CA JUMP JUMPDEST PUSH2 0x5E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x4754 JUMP JUMPDEST PUSH2 0x2CA PUSH2 0x2C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x41A5 JUMP JUMPDEST PUSH2 0x5FE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CA PUSH2 0x2DA CALLDATASIZE PUSH1 0x4 PUSH2 0x42F5 JUMP JUMPDEST PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x4777 JUMP JUMPDEST PUSH2 0x2FC PUSH2 0x6C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x475F JUMP JUMPDEST PUSH2 0x313 PUSH2 0x6F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x471C JUMP JUMPDEST PUSH2 0x2AA PUSH2 0x32E CALLDATASIZE PUSH1 0x4 PUSH2 0x4215 JUMP JUMPDEST PUSH2 0x701 JUMP JUMPDEST PUSH2 0x33B PUSH2 0x775 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x483C JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x2CA PUSH2 0x35E CALLDATASIZE PUSH1 0x4 PUSH2 0x4603 JUMP JUMPDEST PUSH2 0x788 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x7A1 JUMP JUMPDEST PUSH2 0x2AA PUSH2 0x379 CALLDATASIZE PUSH1 0x4 PUSH2 0x42CA JUMP JUMPDEST PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x386 PUSH2 0x800 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x47C3 JUMP JUMPDEST PUSH2 0x2CA PUSH2 0x84B JUMP JUMPDEST PUSH2 0x3A3 PUSH2 0x940 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x4708 JUMP JUMPDEST PUSH2 0x2CA PUSH2 0x3BE CALLDATASIZE PUSH1 0x4 PUSH2 0x4442 JUMP JUMPDEST PUSH2 0x94F JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x96D JUMP JUMPDEST PUSH2 0x3DE PUSH2 0x3D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x430F JUMP JUMPDEST PUSH2 0x97E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP3 SWAP2 SWAP1 PUSH2 0x4823 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x9B5 JUMP JUMPDEST PUSH2 0x3A3 PUSH2 0x9E0 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x40A CALLDATASIZE PUSH1 0x4 PUSH2 0x41A5 JUMP JUMPDEST PUSH2 0x9EF JUMP JUMPDEST PUSH2 0x422 PUSH2 0x41D CALLDATASIZE PUSH1 0x4 PUSH2 0x430F JUMP JUMPDEST PUSH2 0xA0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP3 SWAP2 SWAP1 PUSH2 0x472F JUMP JUMPDEST PUSH2 0x2CA PUSH2 0x43E CALLDATASIZE PUSH1 0x4 PUSH2 0x448F JUMP JUMPDEST PUSH2 0xAB1 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x451 CALLDATASIZE PUSH1 0x4 PUSH2 0x41A5 JUMP JUMPDEST PUSH2 0xBD8 JUMP JUMPDEST PUSH2 0x2CA PUSH2 0x464 CALLDATASIZE PUSH1 0x4 PUSH2 0x41A5 JUMP JUMPDEST PUSH2 0xBF3 JUMP JUMPDEST PUSH2 0x2CA PUSH2 0xCD9 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x47F CALLDATASIZE PUSH1 0x4 PUSH2 0x441A JUMP JUMPDEST PUSH2 0xD91 JUMP JUMPDEST PUSH2 0x3DE PUSH2 0x492 CALLDATASIZE PUSH1 0x4 PUSH2 0x430F JUMP JUMPDEST PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x3A3 PUSH2 0xE10 JUMP JUMPDEST PUSH2 0x3A3 PUSH2 0xE34 JUMP JUMPDEST PUSH2 0x281 PUSH2 0xE58 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0xEB9 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x4C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x450D JUMP JUMPDEST PUSH2 0xEBF JUMP JUMPDEST PUSH2 0x2AA PUSH2 0x4D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x42CA JUMP JUMPDEST PUSH2 0x101D JUMP JUMPDEST PUSH2 0x2AA PUSH2 0x4EB CALLDATASIZE PUSH1 0x4 PUSH2 0x42CA JUMP JUMPDEST PUSH2 0x105B JUMP JUMPDEST PUSH2 0x3A3 PUSH2 0x1068 JUMP JUMPDEST PUSH2 0x3A3 PUSH2 0x1072 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x1081 JUMP JUMPDEST PUSH2 0x2CA PUSH2 0x516 CALLDATASIZE PUSH1 0x4 PUSH2 0x4255 JUMP JUMPDEST PUSH2 0x108B JUMP JUMPDEST PUSH2 0x422 PUSH2 0x529 CALLDATASIZE PUSH1 0x4 PUSH2 0x430F JUMP JUMPDEST PUSH2 0x11FB JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x132A JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x544 CALLDATASIZE PUSH1 0x4 PUSH2 0x41DD JUMP JUMPDEST PUSH2 0x134E JUMP JUMPDEST PUSH2 0x313 PUSH2 0x138B JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x5DD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5B2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5DD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5C0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F4 CALLER DUP5 DUP5 PUSH2 0x13CA JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x1B9BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x658 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP2 SWAP1 PUSH2 0x47B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xB8FD9AFC34C38FCD13B9A3B7646482EB1FDDCEFB40AF2C70609972816EBA3208 SWAP1 PUSH2 0x6A4 SWAP1 DUP4 SWAP1 PUSH2 0x4708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x6B7 PUSH2 0x142C JUMP JUMPDEST PUSH2 0x6C0 DUP2 PUSH2 0x145A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x6D6 PUSH2 0x14D6 JUMP JUMPDEST ISZERO SWAP3 POP PUSH2 0x6E1 PUSH2 0x14F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x6EB PUSH2 0x1517 JUMP JUMPDEST SWAP1 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x6FC PUSH2 0x153B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x70E DUP6 CALLER PUSH2 0x134E JUMP JUMPDEST SWAP1 POP PUSH2 0x732 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND EQ DUP1 PUSH2 0x72A JUMPI POP DUP4 DUP3 LT ISZERO JUMPDEST PUSH2 0x19E PUSH2 0x1641 JUMP JUMPDEST PUSH2 0x73D DUP6 DUP6 DUP6 PUSH2 0x164F JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x758 JUMPI POP PUSH1 0x0 NOT DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x76A JUMPI PUSH2 0x76A DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x13CA JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FC PUSH2 0x1737 JUMP JUMPDEST PUSH2 0x790 PUSH2 0x142C JUMP JUMPDEST PUSH2 0x798 PUSH2 0x17F5 JUMP JUMPDEST PUSH2 0x6C0 DUP2 PUSH2 0x180A JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x5F4 SWAP2 DUP6 SWAP1 PUSH2 0x7FB SWAP1 DUP7 PUSH2 0x1875 JUMP JUMPDEST PUSH2 0x13CA JUMP JUMPDEST PUSH2 0x808 PUSH2 0x40F7 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0xA SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP3 MSTORE PUSH2 0x100 DUP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x3737BA103830BAB9B29036B0B730B3B2B9 PUSH1 0x79 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x90A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8CF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x8B7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x8FC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x915 PUSH1 0x0 PUSH2 0x6B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x215385C8BFC731925EC8068D7BAA50F6B6F34417CC7804F7273DC2C0B3DB2790 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x957 PUSH2 0x142C JUMP JUMPDEST PUSH2 0x95F PUSH2 0x17F5 JUMP JUMPDEST PUSH2 0x969 DUP3 DUP3 PUSH2 0x188E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x6FC SWAP1 PUSH1 0xC0 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x994 DUP7 MLOAD PUSH2 0x98F PUSH2 0x199A JUMP JUMPDEST PUSH2 0x199F JUMP JUMPDEST PUSH2 0x9A9 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x19AC PUSH2 0x1A70 PUSH2 0x1AD6 JUMP JUMPDEST SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FC PUSH2 0x9C2 PUSH2 0x6C3 JUMP JUMPDEST PUSH2 0x9DA PUSH2 0x9CD PUSH2 0x1081 JUMP JUMPDEST PUSH2 0x9D5 PUSH2 0x199A JUMP JUMPDEST PUSH2 0x1BF8 JUMP JUMPDEST SWAP1 PUSH2 0x1C1C JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP9 PUSH2 0xA38 PUSH2 0xA1D PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH1 0xCD PUSH2 0x1641 JUMP JUMPDEST PUSH2 0xA4D PUSH2 0xA43 PUSH2 0x7A1 JUMP JUMPDEST DUP3 EQ PUSH2 0x1F4 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA57 PUSH2 0x153B JUMP JUMPDEST SWAP1 POP PUSH2 0xA63 DUP9 DUP3 PUSH2 0x1C76 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xA78 DUP15 DUP15 DUP15 DUP15 DUP15 DUP15 DUP11 DUP16 PUSH2 0x19AC JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xA88 DUP14 DUP5 PUSH2 0x1CD7 JUMP JUMPDEST PUSH2 0xA92 DUP3 DUP6 PUSH2 0x1A70 JUMP JUMPDEST PUSH2 0xA9C DUP2 DUP6 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP POP JUMPDEST POP SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x1B9BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP2 SWAP1 PUSH2 0x47B0 JUMP JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH16 0x1C1BDBDB081A5CC81D5B98D85C1C1959 PUSH1 0x82 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0xB4E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP2 SWAP1 PUSH2 0x47B0 JUMP JUMPDEST POP DUP1 MLOAD PUSH1 0xA DUP1 SLOAD PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP1 DUP7 ADD MLOAD PUSH1 0xFF NOT SWAP1 SWAP4 AND SWAP5 ISZERO ISZERO SWAP5 SWAP1 SWAP5 OR PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL OR PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x80 SHL SWAP2 SWAP1 SWAP3 AND MUL OR DUP2 SSTORE SWAP1 MLOAD PUSH32 0x2ABF5970D7BC1A2B36EAAE52DD2CC353EDB0337C7284EF8A01973081B4E04424 SWAP2 PUSH2 0x6A4 SWAP2 PUSH2 0x47F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x3737BA103830BAB9B29036B0B730B3B2B9 PUSH1 0x79 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLER DUP3 EQ PUSH2 0xC78 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x8CF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x8B7 JUMP JUMPDEST POP PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 DUP5 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD PUSH32 0x1FFCCD1FA96F4FB3415DF8048A0FD107344E262D2D246C85105E2A3F8F3E8198 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x3737BA103830BAB9B29036B0B730B3B2B9 PUSH1 0x79 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD5B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x8CF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x8B7 JUMP JUMPDEST POP PUSH2 0xD66 PUSH1 0x1 PUSH2 0x6B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x681EACE576127D0553B224436A09801FB47D042942CBFF59D7D4FF04D8FA03D7 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x0 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP5 AND DUP3 DUP5 ADD MSTORE DUP3 MLOAD PUSH1 0x24 DUP2 DUP5 SUB ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0xDFB DUP7 MLOAD PUSH2 0x98F PUSH2 0x199A JUMP JUMPDEST PUSH2 0x9A9 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x1CE1 PUSH2 0x1DA1 PUSH2 0x1AD6 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x5DD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5B2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5DD JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0xED1 PUSH2 0xA1D PUSH2 0xE34 JUMP JUMPDEST PUSH2 0xEDC PUSH2 0xA43 PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEEB DUP7 PUSH1 0x20 ADD MLOAD PUSH2 0x1E02 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xEFC DUP8 PUSH1 0x40 ADD MLOAD PUSH2 0x1E02 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP8 MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xF0D JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xF9D JUMPI PUSH1 0x0 PUSH2 0xF22 DUP9 PUSH1 0x60 ADD MLOAD PUSH2 0x1F32 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP10 PUSH1 0x60 ADD MLOAD SUB SWAP1 POP PUSH2 0xF46 DUP10 PUSH1 0x20 ADD MLOAD PUSH2 0xF41 DUP4 DUP8 PUSH2 0x1F53 JUMP JUMPDEST PUSH2 0x1F5F JUMP JUMPDEST PUSH1 0x60 DUP10 ADD DUP3 SWAP1 MSTORE PUSH2 0xF57 DUP9 DUP6 PUSH2 0x1F53 JUMP JUMPDEST SWAP8 POP PUSH2 0xF63 DUP8 DUP5 PUSH2 0x1F53 JUMP JUMPDEST SWAP7 POP PUSH2 0xF73 DUP10 PUSH1 0x60 ADD MLOAD DUP6 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x60 DUP11 ADD MSTORE PUSH1 0x0 PUSH2 0xF85 DUP11 DUP11 DUP11 PUSH2 0x1F71 JUMP JUMPDEST SWAP1 POP PUSH2 0xF91 DUP2 DUP6 PUSH2 0x1F9F JUMP JUMPDEST SWAP7 POP POP POP POP POP POP PUSH2 0x1015 JUMP JUMPDEST PUSH2 0xFA7 DUP7 DUP4 PUSH2 0x1F53 JUMP JUMPDEST SWAP6 POP PUSH2 0xFB3 DUP6 DUP3 PUSH2 0x1F53 JUMP JUMPDEST SWAP5 POP PUSH2 0xFC3 DUP8 PUSH1 0x60 ADD MLOAD DUP3 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0x0 PUSH2 0xFD5 DUP9 DUP9 DUP9 PUSH2 0x1FAB JUMP JUMPDEST SWAP1 POP PUSH2 0xFE1 DUP2 DUP5 PUSH2 0x1FD0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xFEE DUP3 PUSH2 0x1FDC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 DUP3 SUB SWAP1 POP PUSH2 0x1009 DUP11 PUSH1 0x20 ADD MLOAD PUSH2 0xF41 DUP4 DUP9 PUSH2 0x1F53 JUMP JUMPDEST POP SWAP5 POP PUSH2 0x1015 SWAP3 POP POP POP JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x102A CALLER DUP6 PUSH2 0x134E JUMP JUMPDEST SWAP1 POP DUP1 DUP4 LT PUSH2 0x1044 JUMPI PUSH2 0x103F CALLER DUP6 PUSH1 0x0 PUSH2 0x13CA JUMP JUMPDEST PUSH2 0x1051 JUMP JUMPDEST PUSH2 0x1051 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x13CA JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F4 CALLER DUP5 DUP5 PUSH2 0x164F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FC PUSH2 0x2002 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FC PUSH2 0x207C JUMP JUMPDEST PUSH2 0x1099 DUP5 TIMESTAMP GT ISZERO PUSH1 0xD1 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD PUSH32 0x0 DUP2 DUP6 ADD MSTORE DUP1 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP5 DUP12 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD DUP11 SWAP1 MSTORE PUSH1 0xA0 DUP5 ADD DUP6 SWAP1 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP11 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 SWAP1 SWAP5 ADD SWAP1 MSTORE DUP3 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP1 PUSH2 0x1125 DUP3 PUSH2 0x20AF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1183 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP PUSH2 0x11C5 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x11BD JUMPI POP DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1F8 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP6 ADD SWAP1 SSTORE PUSH2 0x11EE DUP12 DUP12 DUP12 PUSH2 0x13CA JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP9 PUSH2 0x120A PUSH2 0xA1D PUSH2 0xE34 JUMP JUMPDEST PUSH2 0x1215 PUSH2 0xA43 PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x121F PUSH2 0x153B JUMP JUMPDEST SWAP1 POP PUSH2 0x1229 PUSH2 0x6C3 JUMP JUMPDEST PUSH2 0x12DA JUMPI PUSH1 0x0 DUP1 PUSH2 0x123D DUP14 DUP14 DUP14 DUP7 DUP12 PUSH2 0x20FB JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1256 PUSH2 0x124C PUSH2 0x21A2 JUMP JUMPDEST DUP4 LT ISZERO PUSH1 0xCC PUSH2 0x1641 JUMP JUMPDEST PUSH2 0x1268 PUSH1 0x0 PUSH2 0x1263 PUSH2 0x21A2 JUMP JUMPDEST PUSH2 0x21A9 JUMP JUMPDEST PUSH2 0x127B DUP12 PUSH2 0x1274 PUSH2 0x21A2 JUMP JUMPDEST DUP5 SUB PUSH2 0x21A9 JUMP JUMPDEST PUSH2 0x1285 DUP2 DUP5 PUSH2 0x1DA1 JUMP JUMPDEST DUP1 PUSH2 0x128E PUSH2 0x199A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x12A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12CD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0xAA4 JUMP JUMPDEST PUSH2 0x12E4 DUP9 DUP3 PUSH2 0x1C76 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x12F9 DUP15 DUP15 DUP15 DUP15 DUP15 DUP15 DUP11 DUP16 PUSH2 0x1CE1 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1309 DUP13 DUP5 PUSH2 0x21A9 JUMP JUMPDEST PUSH2 0x1313 DUP3 DUP6 PUSH2 0x1DA1 JUMP JUMPDEST PUSH2 0x131D DUP2 DUP6 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP PUSH2 0xAA4 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1358 PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x137A JUMPI POP PUSH1 0x0 NOT PUSH2 0x5F8 JUMP JUMPDEST PUSH2 0x1384 DUP4 DUP4 PUSH2 0x21B3 JUMP JUMPDEST SWAP1 POP PUSH2 0x5F8 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x6FC PUSH2 0x21DE JUMP JUMPDEST DUP1 PUSH2 0x969 DUP2 PUSH2 0x2275 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 SHL NOT SWAP3 SWAP1 SWAP3 AND SWAP2 SHL OR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13C4 DUP4 DUP4 GT ISZERO PUSH1 0x1 PUSH2 0x1641 JUMP JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1443 PUSH1 0x0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0xD91 JUMP JUMPDEST SWAP1 POP PUSH2 0x6C0 PUSH2 0x1452 DUP3 CALLER PUSH2 0x22EE JUMP JUMPDEST PUSH2 0x191 PUSH2 0x1641 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x147A JUMPI PUSH2 0x1475 PUSH2 0x146B PUSH2 0x14F3 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x193 PUSH2 0x1641 JUMP JUMPDEST PUSH2 0x148F JUMP JUMPDEST PUSH2 0x148F PUSH2 0x1485 PUSH2 0x1517 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x1A9 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH32 0x9E3A5E37224532DEA67B89FACE185703738A228A6E8A23DEE546960180D3BE64 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14E0 PUSH2 0x1517 JUMP JUMPDEST TIMESTAMP GT DUP1 PUSH2 0x6FC JUMPI POP POP PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1547 PUSH2 0x199A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x1561 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x158B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x15BC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH32 0x0 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x15F6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH32 0x0 DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x1630 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH2 0x969 JUMPI PUSH2 0x969 DUP2 PUSH2 0x23F0 JUMP JUMPDEST PUSH2 0x1666 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO ISZERO PUSH2 0x198 PUSH2 0x1641 JUMP JUMPDEST PUSH2 0x167D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x199 PUSH2 0x1641 JUMP JUMPDEST PUSH2 0x1688 DUP4 DUP4 DUP4 PUSH2 0x1AD1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x16AE SWAP1 DUP3 PUSH2 0x1A0 PUSH2 0x2443 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x16DD SWAP1 DUP3 PUSH2 0x1875 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x17A4 PUSH2 0x2459 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1808 PUSH2 0x1800 PUSH2 0x14D6 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x1641 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x181D PUSH5 0xE8D4A51000 DUP3 LT ISZERO PUSH1 0xCB PUSH2 0x1641 JUMP JUMPDEST PUSH2 0x1833 PUSH8 0x16345785D8A0000 DUP3 GT ISZERO PUSH1 0xCA PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1842 SWAP1 DUP3 PUSH1 0xC0 PUSH2 0x139F JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x40 MLOAD PUSH32 0xA9BA3FFE0B6C366B81232CAAB38605A0699AD5398D6CCE76F91EE809E322DAFC SWAP1 PUSH2 0x6A4 SWAP1 DUP4 SWAP1 PUSH2 0x4777 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH2 0x1887 DUP5 DUP3 LT ISZERO DUP4 PUSH2 0x1641 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1898 PUSH2 0x7A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x18A4 PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB05F8E48 DUP4 DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18D1 SWAP3 SWAP2 SWAP1 PUSH2 0x4799 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1921 SWAP2 SWAP1 PUSH2 0x4633 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x639CDB5 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP4 POP PUSH4 0x18E736D4 SWAP3 POP PUSH2 0x1955 SWAP2 POP DUP6 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x4780 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x196F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1983 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x3 SWAP1 JUMP JUMPDEST PUSH2 0x969 DUP2 DUP4 EQ PUSH1 0x67 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH32 0x0 PUSH2 0x19DA PUSH2 0x14D6 JUMP JUMPDEST ISZERO PUSH2 0x1A22 JUMPI PUSH1 0x0 PUSH2 0x19EB DUP11 DUP4 PUSH2 0x245D JUMP JUMPDEST SWAP1 POP PUSH2 0x19F6 DUP2 PUSH2 0x2531 JUMP JUMPDEST PUSH2 0x1A00 DUP11 DUP8 PUSH2 0x255E JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP PUSH2 0x1A19 DUP2 DUP7 PUSH2 0x1A12 PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25AB JUMP JUMPDEST PUSH1 0x9 SSTORE POP PUSH2 0x1A38 JUMP JUMPDEST PUSH2 0x1A2C DUP10 DUP7 PUSH2 0x255E JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0x9 SSTORE SWAP1 SWAP5 POP SWAP3 POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE DUP6 SWAP2 DUP6 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x60 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP9 POP SWAP9 POP SWAP9 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH2 0x1A7B PUSH2 0x199A JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1AD1 JUMPI PUSH2 0x1AB2 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1A91 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1AA5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2605 JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1ABE JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x1A73 JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x1B94 JUMPI PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD PUSH2 0x1AFA SWAP3 SWAP2 SWAP1 PUSH2 0x46F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1B37 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B3C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1B4B JUMPI INVALID JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x43ADBAFB PUSH1 0xE0 SHL DUP2 EQ PUSH2 0x1B76 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x4 PUSH1 0x0 RETURNDATACOPY PUSH1 0x40 PUSH1 0x20 MSTORE PUSH1 0x24 RETURNDATASIZE SUB PUSH1 0x24 PUSH1 0x40 RETURNDATACOPY PUSH1 0x1C RETURNDATASIZE ADD PUSH1 0x0 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x1B9E PUSH2 0x153B JUMP JUMPDEST SWAP1 POP PUSH2 0x1BAA DUP8 DUP3 PUSH2 0x1C76 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1BC1 DUP13 DUP13 DUP13 DUP13 DUP13 DUP13 DUP10 DUP14 DUP14 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1BD4 DUP2 DUP5 DUP7 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1F NOT DUP3 ADD DUP4 SWAP1 MSTORE PUSH4 0x43ADBAFB PUSH1 0x3F NOT DUP4 ADD MSTORE PUSH1 0x20 MUL PUSH1 0x23 NOT DUP3 ADD PUSH1 0x44 DUP3 ADD DUP2 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL PUSH2 0x1887 DUP5 ISZERO DUP1 PUSH2 0x1C15 JUMPI POP DUP4 DUP6 DUP4 DUP2 PUSH2 0x1C12 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH1 0x3 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1C2F JUMPI PUSH2 0x1C2F PUSH1 0x0 PUSH1 0x4 PUSH2 0x1641 JUMP JUMPDEST DUP3 PUSH2 0x1C3C JUMPI POP PUSH1 0x0 PUSH2 0x5F8 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 DUP2 MUL SWAP1 DUP5 DUP3 DUP2 PUSH2 0x1C52 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1C64 JUMPI PUSH2 0x1C64 PUSH1 0x0 PUSH1 0x5 PUSH2 0x1641 JUMP JUMPDEST DUP3 DUP2 DUP2 PUSH2 0x1C6D JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH2 0x1C81 PUSH2 0x199A JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1AD1 JUMPI PUSH2 0x1CB8 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1C97 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1CAB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2632 JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1CC4 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x1C79 JUMP JUMPDEST PUSH2 0x969 DUP3 DUP3 PUSH2 0x265B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH32 0x0 DUP4 PUSH2 0x1D12 DUP11 DUP4 PUSH2 0x245D JUMP JUMPDEST SWAP1 POP PUSH2 0x1D1D DUP2 PUSH2 0x2531 JUMP JUMPDEST PUSH2 0x1D27 DUP11 DUP8 PUSH2 0x2712 JUMP JUMPDEST PUSH1 0xA SLOAD SWAP2 SWAP7 POP SWAP5 POP PUSH1 0xFF AND ISZERO PUSH2 0x1D51 JUMPI PUSH2 0x1D51 DUP6 PUSH2 0x1D44 DUP14 PUSH2 0x9EF JUMP JUMPDEST PUSH2 0x1D4C PUSH2 0x6C3 JUMP JUMPDEST PUSH2 0x2756 JUMP JUMPDEST PUSH2 0x1D65 DUP2 DUP7 PUSH2 0x1D5E PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x25AB JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE DUP7 SWAP2 DUP7 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x60 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP5 POP SWAP5 POP SWAP5 POP POP POP SWAP9 POP SWAP9 POP SWAP9 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH2 0x1DAC PUSH2 0x199A JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1AD1 JUMPI PUSH2 0x1DE3 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1DC2 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1DD6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2868 JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1DEF JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1E65 JUMPI POP PUSH32 0x0 PUSH2 0xA09 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1EC6 JUMPI POP PUSH32 0x0 PUSH2 0xA09 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1F27 JUMPI POP PUSH32 0x0 PUSH2 0xA09 JUMP JUMPDEST PUSH2 0xA09 PUSH2 0x135 PUSH2 0x23F0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1F47 PUSH2 0x1F40 PUSH2 0x96D JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x28BF JUMP JUMPDEST SWAP1 POP PUSH2 0x1887 DUP4 DUP3 PUSH2 0x13B4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1887 DUP4 DUP4 PUSH2 0x2632 JUMP JUMPDEST PUSH2 0x969 PUSH2 0x1F6B DUP4 PUSH2 0x28FB JUMP JUMPDEST DUP3 PUSH2 0x969 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F7B PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F88 DUP6 DUP6 DUP6 PUSH2 0x2901 JUMP JUMPDEST SWAP1 POP PUSH2 0x1F96 DUP6 DUP6 DUP6 DUP5 PUSH2 0x29A0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1887 DUP4 DUP4 PUSH2 0x2605 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB5 PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FC2 DUP6 DUP6 DUP6 PUSH2 0x2901 JUMP JUMPDEST SWAP1 POP PUSH2 0x1F96 DUP6 DUP6 DUP6 DUP5 PUSH2 0x29B2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1887 DUP4 DUP4 PUSH2 0x2868 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F8 PUSH2 0x1FFB PUSH2 0x1FEC PUSH2 0x96D JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x13B4 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x2868 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x200C PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAAABADC5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2044 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2058 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6FC SWAP2 SWAP1 PUSH2 0x41C1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FC PUSH2 0x2089 PUSH2 0x29C4 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x245D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20B9 PUSH2 0x1737 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x2107 PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2112 DUP5 PUSH2 0x2B12 JUMP JUMPDEST SWAP1 POP PUSH2 0x212D PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2125 JUMPI INVALID JUMPDEST EQ PUSH1 0xCE PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2138 DUP6 PUSH2 0x2B31 JUMP JUMPDEST SWAP1 POP PUSH2 0x2146 DUP2 MLOAD PUSH1 0x3 PUSH2 0x199F JUMP JUMPDEST PUSH2 0x2150 DUP2 DUP8 PUSH2 0x1C76 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x217C DUP3 PUSH32 0x0 PUSH2 0x245D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x218B DUP3 PUSH1 0x3 PUSH2 0x1BF8 JUMP JUMPDEST PUSH1 0x9 SWAP3 SWAP1 SWAP3 SSTORE POP SWAP4 POP SWAP2 POP POP JUMPDEST SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH3 0xF4240 SWAP1 JUMP JUMPDEST PUSH2 0x969 DUP3 DUP3 PUSH2 0x2BE5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP5 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x3 PUSH8 0xDE0B6B3A7640000 DIV DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x221D JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x3 PUSH8 0xDE0B6B3A7640000 DIV DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2241 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x3 PUSH8 0xDE0B6B3A7640000 DIV DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x2265 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD LT ISZERO PUSH2 0x2284 JUMPI PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2293 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1AD1 JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x22BB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x22E4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH1 0x65 PUSH2 0x1641 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x22A4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xBA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1B PUSH2 0x230D PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x2328 JUMPI POP PUSH2 0x2328 DUP4 PUSH2 0x2C7A JUMP JUMPDEST ISZERO PUSH2 0x2350 JUMPI PUSH2 0x2335 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP PUSH2 0x5F8 JUMP JUMPDEST PUSH2 0x2358 PUSH2 0x2002 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9BE2A884 DUP5 DUP5 ADDRESS PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x23BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x23D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x23E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x5F8 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH7 0x42414C23000030 PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD SWAP1 SWAP5 ADD PUSH1 0x10 SHL SWAP4 SWAP1 SWAP4 ADD ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2452 DUP5 DUP5 GT ISZERO DUP4 PUSH2 0x1641 JUMP JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH13 0x1431E0FAE6D7217CAA0000000 DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x247A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x2495 JUMPI PUSH2 0x2495 PUSH1 0x0 PUSH2 0x16A PUSH2 0x2CAC JUMP JUMPDEST PUSH13 0x1431E0FAE6D7217CAA0000000 DUP4 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x24B0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x24CB JUMPI PUSH2 0x24CB PUSH1 0x0 PUSH2 0x16A PUSH2 0x2CAC JUMP JUMPDEST PUSH13 0x1431E0FAE6D7217CAA0000000 DUP4 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x24E6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x2501 JUMPI PUSH2 0x2501 PUSH1 0x0 PUSH2 0x16A PUSH2 0x2CAC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x2511 DUP8 DUP8 PUSH2 0x2CBA JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH2 0x2526 DUP5 DUP5 DUP5 DUP5 DUP11 PUSH2 0x2E09 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x2543 PUSH1 0x9 SLOAD DUP7 PUSH2 0x2E5A JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH2 0x2557 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2EC3 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x256D DUP5 PUSH2 0x2B12 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x257D JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x2597 JUMPI PUSH2 0x258D DUP6 DUP6 PUSH2 0x2EE9 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP PUSH2 0x25A4 JUMP JUMPDEST PUSH2 0x25A2 PUSH2 0x150 PUSH2 0x23F0 JUMP JUMPDEST POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO PUSH2 0x25DD JUMPI PUSH1 0x0 PUSH2 0x25C9 DUP5 PUSH2 0x25C3 DUP9 DUP9 PUSH2 0x2F1B JUMP JUMPDEST SWAP1 PUSH2 0x2F70 JUMP JUMPDEST SWAP1 POP PUSH2 0x25D5 DUP7 DUP3 PUSH2 0x2FCD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x25FD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25ED DUP5 PUSH2 0x9DA DUP9 DUP9 PUSH2 0x2FE5 JUMP JUMPDEST SWAP1 POP PUSH2 0x25F9 DUP7 DUP3 PUSH2 0x300F JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2611 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 DUP2 MUL SWAP1 DUP5 DUP3 DUP2 PUSH2 0x2627 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1C64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL PUSH2 0x264C DUP5 ISZERO DUP1 PUSH2 0x1C15 JUMPI POP DUP4 DUP6 DUP4 DUP2 PUSH2 0x1C12 JUMPI INVALID JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x1C6D JUMP JUMPDEST PUSH2 0x2672 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x19B PUSH2 0x1641 JUMP JUMPDEST PUSH2 0x267E DUP3 PUSH1 0x0 DUP4 PUSH2 0x1AD1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x26A4 SWAP1 DUP3 PUSH2 0x1A1 PUSH2 0x2443 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x26CA SWAP1 DUP3 PUSH2 0x3025 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x2721 DUP5 PUSH2 0x2B12 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2731 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x274B JUMPI PUSH2 0x2741 DUP6 DUP6 PUSH2 0x3033 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH2 0x25A2 JUMP JUMPDEST PUSH2 0x25A2 PUSH2 0x136 PUSH2 0x23F0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0xA SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP3 MSTORE PUSH2 0x100 DUP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB AND PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x27A3 DUP6 DUP6 PUSH2 0x2FCD JUMP JUMPDEST GT ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6F7665722061646472657373206C697175696469747920636170000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x27F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP2 SWAP1 PUSH2 0x47B0 JUMP JUMPDEST POP PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x2812 DUP6 DUP5 PUSH2 0x2FCD JUMP JUMPDEST GT ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6F76657220676C6F62616C206C69717569646974792063617000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x2557 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP2 SWAP1 PUSH2 0x47B0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2877 DUP3 ISZERO ISZERO PUSH1 0x4 PUSH2 0x1641 JUMP JUMPDEST DUP3 PUSH2 0x2884 JUMPI POP PUSH1 0x0 PUSH2 0x5F8 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 DUP2 MUL SWAP1 PUSH2 0x28A7 SWAP1 DUP6 DUP4 DUP2 PUSH2 0x289E JUMPI INVALID JUMPDEST DIV EQ PUSH1 0x5 PUSH2 0x1641 JUMP JUMPDEST DUP3 PUSH1 0x1 DUP3 SUB DUP2 PUSH2 0x28B3 JUMPI INVALID JUMPDEST DIV PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x5F8 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL PUSH2 0x28D9 DUP5 ISZERO DUP1 PUSH2 0x1C15 JUMPI POP DUP4 DUP6 DUP4 DUP2 PUSH2 0x1C12 JUMPI INVALID JUMPDEST DUP1 PUSH2 0x28E8 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x5F8 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH1 0x0 NOT DUP3 ADD PUSH2 0x28B3 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x60 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP4 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2935 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP3 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x294F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP1 PUSH2 0x2970 DUP8 PUSH1 0x20 ADD MLOAD DUP9 PUSH1 0x40 ADD MLOAD PUSH2 0x3058 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x297E DUP3 DUP3 PUSH2 0x3295 JUMP JUMPDEST DUP4 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x298B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2526 DUP4 PUSH2 0x333C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F96 DUP5 DUP5 DUP8 PUSH1 0x60 ADD MLOAD DUP6 PUSH2 0x3376 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F96 DUP5 DUP5 DUP8 PUSH1 0x60 ADD MLOAD DUP6 PUSH2 0x33D7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x20 DUP3 ADD DUP4 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH2 0x2A30 PUSH32 0x0 PUSH32 0x0 PUSH2 0x3295 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2A3D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2A93 PUSH32 0x0 PUSH32 0x0 PUSH2 0x3295 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2AA0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2AF6 PUSH32 0x0 PUSH32 0x0 PUSH2 0x3295 JUMP JUMPDEST DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x2B03 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2B29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2B48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP3 SWAP5 SWAP3 SWAP4 DUP4 ADD SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x2B6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2B84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x2BA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2BCE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2BB6 JUMP JUMPDEST POP POP POP POP SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 MSTORE POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2BF1 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1AD1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x2BFE SWAP1 DUP3 PUSH2 0x1875 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2C24 SWAP1 DUP3 PUSH2 0x1875 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C8C PUSH4 0x1C74C917 PUSH1 0xE1 SHL PUSH2 0xD91 JUMP JUMPDEST DUP3 EQ DUP1 PUSH2 0x5F8 JUMPI POP PUSH2 0x2CA4 PUSH4 0x50DD6ED9 PUSH1 0xE0 SHL PUSH2 0xD91 JUMP JUMPDEST SWAP1 SWAP2 EQ SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH2 0x969 JUMPI PUSH2 0x969 DUP2 PUSH2 0x3435 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x2CD3 DUP6 PUSH2 0x2CCD DUP2 DUP1 PUSH2 0x3445 JUMP JUMPDEST SWAP1 PUSH2 0x3445 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SUB SWAP4 POP PUSH1 0x0 DUP7 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x2CEE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2D03 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2D18 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD ADD ADD SWAP1 POP PUSH2 0x2D3B DUP7 PUSH2 0x2CCD DUP9 DUP5 PUSH2 0x3445 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP PUSH1 0x0 PUSH2 0x2D7A DUP9 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2D4F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP10 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x2D64 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3445 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D9F DUP10 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x2D8A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP11 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2D64 JUMPI INVALID JUMPDEST PUSH2 0x2DC4 DUP11 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2DAF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP12 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2D64 JUMPI INVALID JUMPDEST ADD ADD SWAP1 POP PUSH2 0x2DD2 DUP2 DUP9 PUSH2 0x3445 JUMP JUMPDEST SWAP4 POP PUSH2 0x2DFC DUP9 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x2DE4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2CCD DUP11 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2DAF JUMPI INVALID JUMPDEST SWAP3 POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2E18 DUP8 DUP8 DUP8 DUP8 PUSH2 0x345C JUMP JUMPDEST SWAP3 POP SWAP1 POP PUSH2 0x2E2A DUP7 DUP7 DUP7 DUP7 DUP6 DUP8 PUSH2 0x3501 JUMP JUMPDEST SWAP2 POP PUSH15 0x1ED09BEAD87C0378D8E6400000000 DUP3 GT ISZERO PUSH2 0x2E50 JUMPI PUSH2 0x2E50 PUSH1 0x0 PUSH2 0x169 PUSH2 0x2CAC JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x2E6E PUSH2 0x35C5 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP DUP4 PUSH1 0x0 EQ ISZERO PUSH2 0x2E93 JUMPI PUSH1 0x0 SWAP8 POP DUP8 SWAP7 POP SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x2EBA SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2EAA DUP13 DUP13 PUSH2 0x2EA3 PUSH2 0x6C3 JUMP JUMPDEST DUP10 DUP10 PUSH2 0x3834 JUMP JUMPDEST SWAP1 SWAP11 POP SWAP9 POP SWAP3 SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP JUMPDEST SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST DUP4 ISZERO PUSH2 0x2ED3 JUMPI PUSH2 0x2ED3 DUP3 DUP6 PUSH2 0x21A9 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x2EE3 JUMPI PUSH2 0x2EE3 DUP2 DUP5 PUSH2 0x21A9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x2EF8 DUP5 PUSH2 0x38CD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2F0E DUP7 DUP4 PUSH2 0x2F09 PUSH2 0x6C3 JUMP JUMPDEST PUSH2 0x38EF JUMP JUMPDEST SWAP2 SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL DUP4 ISZERO DUP1 PUSH2 0x2F35 JUMPI POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x2F32 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0x2F45 JUMPI PUSH2 0x2F45 PUSH1 0x0 PUSH1 0x3 PUSH2 0x1641 JUMP JUMPDEST DUP1 PUSH2 0x2F54 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x5F8 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH1 0x0 NOT DUP3 ADD JUMPDEST DIV PUSH1 0x1 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2F83 JUMPI PUSH2 0x2F83 PUSH1 0x0 PUSH1 0x4 PUSH2 0x1641 JUMP JUMPDEST DUP3 PUSH2 0x2F90 JUMPI POP PUSH1 0x0 PUSH2 0x5F8 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 DUP2 MUL SWAP1 DUP5 DUP3 DUP2 PUSH2 0x2FA6 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x2FC1 JUMPI PUSH2 0x2FC1 PUSH8 0xDE0B6B3A7640000 DUP6 DUP4 DUP2 PUSH2 0x289E JUMPI INVALID JUMPDEST DUP3 PUSH1 0x1 DUP3 SUB DUP2 PUSH2 0x2F63 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1887 JUMPI PUSH2 0x1887 PUSH1 0x0 DUP1 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL DUP4 ISZERO DUP1 PUSH2 0x2FFF JUMPI POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x2FFC JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0x264C JUMPI PUSH2 0x264C PUSH1 0x0 PUSH1 0x3 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x13C4 JUMPI PUSH2 0x13C4 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1887 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2443 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x3042 DUP5 PUSH2 0x38CD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2F0E DUP7 DUP4 PUSH2 0x3053 PUSH2 0x6C3 JUMP JUMPDEST PUSH2 0x398A JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x3079 JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x31C7 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x3137 JUMPI POP PUSH32 0x0 SWAP1 POP PUSH32 0x0 PUSH2 0x25A4 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x317D JUMPI PUSH2 0x317D PUSH1 0x0 PUSH2 0x162 PUSH2 0x2CAC JUMP JUMPDEST POP PUSH32 0x0 SWAP1 POP PUSH32 0x0 PUSH2 0x25A4 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x3239 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x324A JUMPI PUSH2 0x324A PUSH1 0x0 PUSH2 0x162 PUSH2 0x2CAC JUMP JUMPDEST POP PUSH32 0x0 SWAP4 PUSH32 0x0 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x32A2 PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB05F8E48 PUSH2 0x32B8 PUSH2 0x7A1 JUMP JUMPDEST DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32D6 SWAP3 SWAP2 SWAP1 PUSH2 0x4799 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x32EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3302 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3326 SWAP2 SWAP1 PUSH2 0x4633 JUMP JUMPDEST POP POP DUP2 DUP2 ADD SWAP5 POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1F96 DUP4 DUP6 PUSH2 0x2FE5 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 DUP2 PUSH2 0x336A DUP5 DUP4 PUSH2 0x245D JUMP JUMPDEST SWAP1 POP PUSH2 0x25FD DUP2 DUP4 PUSH2 0x2FE5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x338B DUP4 PUSH8 0xDE0B6B3A7640002 PUSH2 0x3A25 JUMP JUMPDEST DUP7 ADD SWAP1 POP PUSH1 0x0 PUSH2 0x33A3 DUP5 PUSH8 0xDE0B6B3A763FFFF PUSH2 0x3445 JUMP JUMPDEST DUP7 ADD SWAP1 POP PUSH2 0x33BE PUSH2 0x33B4 DUP4 DUP8 PUSH2 0x2FCD JUMP JUMPDEST PUSH2 0x9DA DUP4 DUP9 PUSH2 0x2FE5 JUMP JUMPDEST SWAP3 POP POP POP DUP4 DUP2 GT ISZERO PUSH2 0x25FD JUMPI PUSH2 0x25FD PUSH1 0x0 PUSH2 0x165 PUSH2 0x2CAC JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO PUSH2 0x33EE JUMPI PUSH2 0x33EE PUSH1 0x0 PUSH2 0x165 PUSH2 0x2CAC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3402 DUP4 PUSH8 0xDE0B6B3A7640002 PUSH2 0x3A25 JUMP JUMPDEST DUP7 ADD SWAP1 POP PUSH1 0x0 PUSH2 0x341A DUP5 PUSH8 0xDE0B6B3A763FFFF PUSH2 0x3445 JUMP JUMPDEST DUP7 ADD SWAP1 POP PUSH2 0x2526 PUSH2 0x342B DUP3 DUP8 PUSH2 0x300F JUMP JUMPDEST PUSH2 0x25C3 DUP5 DUP9 PUSH2 0x2F1B JUMP JUMPDEST PUSH2 0x6C0 DUP2 PUSH3 0x23ACA9 PUSH1 0xE9 SHL PUSH2 0x3A39 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP4 DUP4 MUL JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x346D DUP8 PUSH1 0x3 DUP8 MUL PUSH2 0x3A25 JUMP JUMPDEST PUSH2 0x3477 DUP8 DUP1 PUSH2 0x3A25 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 PUSH2 0x3496 PUSH1 0x3 DUP10 MUL PUSH2 0x348E DUP5 PUSH1 0x5 PUSH2 0x3A9A JUMP JUMPDEST DUP10 ADD SWAP1 PUSH2 0x3C28 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP9 SWAP1 SUB PUSH2 0x34DF PUSH8 0x6F05B59D3B20000 DUP3 LT ISZERO PUSH2 0x34C5 JUMPI PUSH8 0x1BC16D674EC80000 PUSH2 0x34CF JUMP JUMPDEST PUSH8 0x14D1120D7B160000 JUMPDEST DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x3A25 JUMP JUMPDEST SWAP4 POP PUSH2 0x34F3 DUP3 PUSH8 0x120A871CC0020000 PUSH2 0x3A25 JUMP JUMPDEST SWAP5 POP POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0xFF DUP2 LT ISZERO PUSH2 0x35AD JUMPI PUSH1 0x0 DUP1 PUSH2 0x3520 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH2 0x3C6A JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x1 DUP3 GT PUSH2 0x3538 JUMPI DUP6 SWAP5 POP POP POP POP POP PUSH2 0x35BB JUMP JUMPDEST PUSH1 0x5 DUP4 LT DUP1 ISZERO SWAP1 PUSH2 0x3546 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x3557 JUMPI DUP6 SWAP5 POP POP POP POP POP PUSH2 0x35BB JUMP JUMPDEST PUSH1 0x5 DUP4 LT DUP1 ISZERO SWAP1 PUSH2 0x356B JUMPI POP PUSH1 0x8 DUP5 DIV DUP3 LT ISZERO JUMPDEST ISZERO PUSH2 0x357C JUMPI DUP6 SWAP5 POP POP POP POP POP PUSH2 0x35BB JUMP JUMPDEST DUP2 SWAP4 POP DUP1 ISZERO PUSH2 0x3596 JUMPI PUSH2 0x358F DUP7 DUP4 PUSH2 0x2FCD JUMP JUMPDEST SWAP6 POP PUSH2 0x35A3 JUMP JUMPDEST PUSH2 0x35A0 DUP7 DUP4 PUSH2 0x300F JUMP JUMPDEST SWAP6 POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x3506 JUMP JUMPDEST POP PUSH2 0x35B9 PUSH2 0x160 PUSH2 0x3435 JUMP JUMPDEST POP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0xBD02D0F5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xBD02D0F5 SWAP1 PUSH2 0x3617 SWAP1 PUSH22 0x50524F544F434F4C5F535741505F4645455F50455243 PUSH1 0x50 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0x4777 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x362F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3643 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3667 SWAP2 SWAP1 PUSH2 0x461B JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0xBD02D0F5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xBD02D0F5 SWAP1 PUSH2 0x36B7 SWAP1 PUSH32 0x50524F544F434F4C5F4645455F4759524F5F504F5254494F4E00000000000000 SWAP1 PUSH1 0x4 ADD PUSH2 0x4777 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x36CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x36E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3707 SWAP2 SWAP1 PUSH2 0x461B JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x21F8A721 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x21F8A721 SWAP1 PUSH2 0x3747 SWAP1 PUSH13 0x4759524F5F5452454153555259 PUSH1 0x98 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0x4777 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x375F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3773 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3797 SWAP2 SWAP1 PUSH2 0x41C1 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x21F8A721 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x21F8A721 SWAP1 PUSH2 0x37D6 SWAP1 PUSH12 0x42414C5F5452454153555259 PUSH1 0xA0 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0x4777 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x37EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3802 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3826 SWAP2 SWAP1 PUSH2 0x41C1 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 DUP7 GT PUSH2 0x3849 JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x2198 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3869 DUP6 PUSH2 0x3863 PUSH2 0x385C DUP11 DUP13 PUSH2 0x300F JUMP JUMPDEST DUP10 SWAP1 PUSH2 0x2FE5 JUMP JUMPDEST SWAP1 PUSH2 0x2FE5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3881 PUSH2 0x387A DUP10 DUP12 PUSH2 0x300F JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x2FE5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x388F DUP10 DUP4 PUSH2 0x300F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x389D DUP5 DUP4 PUSH2 0x1C1C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x38AB DUP9 DUP4 PUSH2 0x2FE5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x38B9 DUP4 DUP4 PUSH2 0x300F JUMP JUMPDEST SWAP2 SWAP14 SWAP2 SWAP13 POP SWAP1 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x38E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 ADD MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x3908 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3932 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1015 JUMPI PUSH2 0x396B DUP4 PUSH2 0x9DA DUP7 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x3955 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2FE5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3977 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x3938 JUMP JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x39A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x39CD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1015 JUMPI PUSH2 0x3A06 DUP4 PUSH2 0x25C3 DUP7 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x39F0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2F1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3A12 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x39D3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL DUP1 PUSH2 0x2F54 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x5F8 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3AA9 JUMPI POP PUSH1 0x0 PUSH2 0x5F8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AB4 DUP5 PUSH2 0x3DF3 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x3ACB JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x3AD5 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x3AED JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x3AF7 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x3B0F JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x3B19 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x3B31 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x3B3B JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x3B53 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x3B5D JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x3B75 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x3B7F JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x3B97 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x3BA1 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH2 0x3BB0 DUP3 DUP1 PUSH2 0x2FE5 JUMP JUMPDEST SWAP1 POP PUSH2 0x3BC6 PUSH2 0x3BBF DUP4 DUP7 PUSH2 0x2F1B JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x2FCD JUMP JUMPDEST DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x3BE8 JUMPI POP PUSH2 0x3BE4 PUSH2 0x3BDD DUP4 DUP7 PUSH2 0x2F1B JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x300F JUMP JUMPDEST DUP2 LT ISZERO JUMPDEST PUSH2 0x1015 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x17DCDC5C9D08119052531151 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x3C3B JUMPI PUSH2 0x3C3B PUSH1 0x0 PUSH1 0x4 PUSH2 0x1641 JUMP JUMPDEST DUP3 PUSH2 0x3C48 JUMPI POP PUSH1 0x0 PUSH2 0x5F8 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH8 0xDE0B6B3A7640000 DUP6 MUL SUB DUP2 PUSH2 0x3C5E JUMPI INVALID JUMPDEST DIV PUSH1 0x1 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH15 0x1ED09BEAD87C0378D8E6400000000 DUP4 GT ISZERO PUSH2 0x3C91 JUMPI PUSH2 0x3C91 PUSH1 0x0 PUSH2 0x169 PUSH2 0x2CAC JUMP JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0x3CA6 JUMPI PUSH2 0x3CA6 PUSH1 0x0 PUSH2 0x16B PUSH2 0x2CAC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CB2 DUP5 DUP1 PUSH2 0x3445 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3CC3 PUSH1 0x3 DUP7 MUL DUP7 PUSH2 0x2FE5 JUMP JUMPDEST SWAP1 POP PUSH2 0x3CD5 DUP8 PUSH2 0x2CCD DUP2 DUP2 DUP6 DUP3 PUSH2 0x3445 JUMP JUMPDEST SWAP1 SUB DUP9 PUSH2 0x3CE2 DUP7 DUP13 PUSH2 0x3445 JUMP JUMPDEST PUSH1 0x2 MUL SWAP1 SWAP2 SUB SUB PUSH1 0x0 DUP1 PUSH13 0xFC6F7C40458122964D00000000 DUP8 GT PUSH2 0x3D60 JUMPI PUSH2 0x3D0A DUP5 DUP9 PUSH2 0x3445 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D1C DUP10 PUSH2 0x2CCD DUP2 DUP2 DUP7 DUP3 PUSH2 0x3445 JUMP JUMPDEST SWAP1 SWAP2 SUB SWAP1 PUSH2 0x3D2A DUP3 DUP5 PUSH2 0x3FC5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D36 DUP5 DUP14 PUSH2 0x3445 JUMP JUMPDEST SWAP1 POP PUSH2 0x3D4E DUP4 PUSH2 0x3D46 DUP10 DUP15 PUSH2 0x3445 JUMP JUMPDEST DUP4 ADD SWAP1 PUSH2 0x3FC5 JUMP JUMPDEST SWAP1 POP PUSH2 0x3D5A DUP11 DUP5 PUSH2 0x3FC5 JUMP JUMPDEST ADD PUSH2 0x3DCB JUMP JUMPDEST PUSH2 0x3D6A DUP5 DUP9 PUSH2 0x3FEB JUMP JUMPDEST SWAP2 POP PUSH2 0x3D82 DUP10 PUSH2 0x3D7C DUP2 DUP2 DUP7 DUP3 PUSH2 0x3FEB JUMP JUMPDEST SWAP1 PUSH2 0x3FEB JUMP JUMPDEST SWAP1 SWAP2 SUB SWAP1 PUSH2 0x3D90 DUP3 DUP5 PUSH2 0x4016 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D9C DUP5 DUP14 PUSH2 0x3FEB JUMP JUMPDEST SWAP1 POP PUSH2 0x3DA8 DUP12 DUP9 PUSH2 0x3445 JUMP JUMPDEST ADD PUSH2 0x3DBD DUP2 DUP5 PUSH5 0xE8D4A51000 PUSH3 0xF4240 PUSH2 0x4024 JUMP JUMPDEST SWAP1 POP PUSH2 0x3DC9 DUP11 DUP5 PUSH2 0x3FC5 JUMP JUMPDEST ADD JUMPDEST DUP2 DUP2 LT ISZERO SWAP5 POP DUP5 PUSH2 0x3DDE JUMPI DUP1 DUP3 SUB PUSH2 0x3DE2 JUMP JUMPDEST DUP2 DUP2 SUB JUMPDEST SWAP6 POP POP POP POP POP SWAP7 POP SWAP7 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 LT PUSH2 0x3E20 JUMPI PUSH8 0xDE0B6B3A7640000 PUSH2 0x3E18 DUP2 DUP5 DIV PUSH2 0x4061 JUMP JUMPDEST SHL SWAP1 POP PUSH2 0xA09 JUMP JUMPDEST PUSH1 0xA DUP3 GT PUSH2 0x3E33 JUMPI POP PUSH4 0xBC7C871C PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x64 DUP3 GT PUSH2 0x3E47 JUMPI POP PUSH5 0x2540BE400 PUSH2 0xA09 JUMP JUMPDEST PUSH2 0x3E8 DUP3 GT PUSH2 0x3E5C JUMPI POP PUSH5 0x75CDD4719 PUSH2 0xA09 JUMP JUMPDEST PUSH2 0x2710 DUP3 GT PUSH2 0x3E71 JUMPI POP PUSH5 0x174876E800 PUSH2 0xA09 JUMP JUMPDEST PUSH3 0x186A0 DUP3 GT PUSH2 0x3E87 JUMPI POP PUSH5 0x49A0A4C700 PUSH2 0xA09 JUMP JUMPDEST PUSH3 0xF4240 DUP3 GT PUSH2 0x3E9D JUMPI POP PUSH5 0xE8D4A51000 PUSH2 0xA09 JUMP JUMPDEST PUSH3 0x989680 DUP3 GT PUSH2 0x3EB4 JUMPI POP PUSH6 0x2E0466FC608 PUSH2 0xA09 JUMP JUMPDEST PUSH4 0x5F5E100 DUP3 GT PUSH2 0x3ECC JUMPI POP PUSH6 0x9184E72A000 PUSH2 0xA09 JUMP JUMPDEST PUSH4 0x3B9ACA00 DUP3 GT PUSH2 0x3EE4 JUMPI POP PUSH6 0x1CC2C05DBC53 PUSH2 0xA09 JUMP JUMPDEST PUSH5 0x2540BE400 DUP3 GT PUSH2 0x3EFD JUMPI POP PUSH6 0x5AF3107A4000 PUSH2 0xA09 JUMP JUMPDEST PUSH5 0x174876E800 DUP3 GT PUSH2 0x3F17 JUMPI POP PUSH7 0x11F9B83A95B45 PUSH2 0xA09 JUMP JUMPDEST PUSH5 0xE8D4A51000 DUP3 GT PUSH2 0x3F31 JUMPI POP PUSH7 0x38D7EA4C68000 PUSH2 0xA09 JUMP JUMPDEST PUSH6 0x9184E72A000 DUP3 GT PUSH2 0x3F4C JUMPI POP PUSH7 0xB3C13249D90BB PUSH2 0xA09 JUMP JUMPDEST PUSH6 0x5AF3107A4000 DUP3 GT PUSH2 0x3F67 JUMPI POP PUSH7 0x2386F26FC10000 PUSH2 0xA09 JUMP JUMPDEST PUSH7 0x38D7EA4C68000 DUP3 GT PUSH2 0x3F83 JUMPI POP PUSH7 0x7058BF6E27A751 PUSH2 0xA09 JUMP JUMPDEST PUSH7 0x2386F26FC10000 DUP3 GT PUSH2 0x3FA0 JUMPI POP PUSH8 0x16345785D8A0000 PUSH2 0xA09 JUMP JUMPDEST PUSH8 0x16345785D8A0000 DUP3 GT PUSH2 0x3FBE JUMPI POP PUSH8 0x463777A4D8C892D PUSH2 0xA09 JUMP JUMPDEST POP DUP1 PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x3FD8 JUMPI PUSH2 0x3FD8 PUSH1 0x0 PUSH1 0x4 PUSH2 0x1641 JUMP JUMPDEST DUP2 PUSH8 0xDE0B6B3A7640000 DUP5 MUL DUP2 PUSH2 0x3454 JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH2 0x4001 PUSH8 0xDE0B6B3A7640000 DUP5 MOD DUP4 PUSH2 0x3445 JUMP JUMPDEST DUP3 PUSH8 0xDE0B6B3A7640000 DUP6 DIV MUL ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1887 DUP4 DUP4 PUSH4 0x3B9ACA00 DUP1 JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x4037 JUMPI PUSH2 0x4037 PUSH1 0x0 PUSH1 0x4 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 DUP7 SUB DUP2 PUSH2 0x4045 JUMPI INVALID JUMPDEST DIV PUSH1 0x1 ADD SWAP1 POP DUP1 DUP5 DUP8 MUL DUP2 PUSH2 0x4056 JUMPI INVALID JUMPDEST DIV SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x80 SHL DUP3 LT PUSH2 0x4079 JUMPI PUSH1 0x80 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x40 ADD JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0x4094 JUMPI PUSH1 0x40 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0x40AB JUMPI PUSH1 0x20 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x10 ADD JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0x40C0 JUMPI PUSH1 0x10 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x8 ADD JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x40D4 JUMPI PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x4 ADD JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x40E7 JUMPI PUSH1 0x4 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x2 ADD JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0xA09 JUMPI PUSH1 0x1 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xA09 DUP2 PUSH2 0x486D JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xA09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4142 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4155 JUMPI INVALID JUMPDEST PUSH2 0x4168 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x484A JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x417C JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0xA09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x41B6 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1887 DUP2 PUSH2 0x486D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x41D2 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1887 DUP2 PUSH2 0x486D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x41EF JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x41FA DUP2 PUSH2 0x486D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x420A DUP2 PUSH2 0x486D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4229 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x4234 DUP2 PUSH2 0x486D JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x4244 DUP2 PUSH2 0x486D JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x426F JUMPI DUP3 DUP4 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x427A DUP2 PUSH2 0x486D JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x428A DUP2 PUSH2 0x486D JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x42AD JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x42DC JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x42E7 DUP2 PUSH2 0x486D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4306 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1887 DUP3 PUSH2 0x4122 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x4329 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP8 CALLDATALOAD SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x433B DUP2 PUSH2 0x486D JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH2 0x434B DUP2 PUSH2 0x486D JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4366 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP11 ADD SWAP2 POP DUP11 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4379 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x4385 JUMPI INVALID JUMPDEST PUSH1 0x20 DUP2 MUL PUSH2 0x4395 PUSH1 0x20 DUP3 ADD PUSH2 0x484A JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP7 ADD DUP16 PUSH1 0x20 DUP6 DUP10 ADD ADD GT ISZERO PUSH2 0x43B4 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x43D7 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x43B8 JUMP JUMPDEST POP SWAP9 POP POP POP POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP5 POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x43FE JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x440B DUP11 DUP3 DUP12 ADD PUSH2 0x4132 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x442B JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1887 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4454 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x445F DUP2 PUSH2 0x486D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4479 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x4485 DUP6 DUP3 DUP7 ADD PUSH2 0x4132 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x44A0 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH2 0x44BC JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE PUSH2 0x44C8 DUP4 PUSH2 0x4122 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x44E3 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4501 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4521 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4537 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP PUSH2 0x120 DUP1 DUP4 DUP10 SUB SLT ISZERO PUSH2 0x454D JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x4556 DUP2 PUSH2 0x484A JUMP JUMPDEST SWAP1 POP PUSH2 0x4561 DUP4 PUSH2 0x4196 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x456F PUSH1 0x20 DUP5 ADD PUSH2 0x4117 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x4580 PUSH1 0x40 DUP5 ADD PUSH2 0x4117 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x45AF PUSH1 0xC0 DUP5 ADD PUSH2 0x4117 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x45C0 PUSH1 0xE0 DUP5 ADD PUSH2 0x4117 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD CALLDATALOAD DUP4 DUP2 GT ISZERO PUSH2 0x45D8 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH2 0x45E4 DUP11 DUP3 DUP8 ADD PUSH2 0x4132 JUMP JUMPDEST SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP8 PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP8 POP PUSH1 0x40 SWAP1 SWAP7 ADD CALLDATALOAD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4614 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x462C JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4648 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 MLOAD SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP6 ADD MLOAD PUSH2 0x4668 DUP2 PUSH2 0x486D JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x46A2 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4686 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x46D2 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x46B6 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x46E3 JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP4 CALLDATACOPY SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x1887 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4673 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0x4742 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x4673 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1F96 DUP2 DUP6 PUSH2 0x4673 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x25FD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x46AD JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x1887 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x46AD JUMP JUMPDEST DUP2 MLOAD ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 SWAP2 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP3 MSTORE PUSH1 0x8 DUP2 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x80 SHR PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x25FD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4673 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4865 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6C0 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0xEA EXTCODEHASH REVERT 0xCD MUL 0xB6 GASPRICE BALANCE INVALID PUSH2 0xECCE 0xB0 SWAP3 EXTCODESIZE 0x48 0x48 0xAB 0xDA 0xC7 0xBE COINBASE SWAP2 EQ 0xB7 CALL 0xD3 0x25 0xBA 0x22 0x48 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ", "sha1": "78e81b4de4ab242d60af68adc9d814829de56ebd", "source": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity 0.7.6;\npragma experimental ABIEncoderV2;\n\nimport \"../../libraries/GyroConfigKeys.sol\";\nimport \"../../interfaces/IGyroConfig.sol\";\nimport \"../../libraries/GyroPoolMath.sol\";\nimport \"../../libraries/GyroErrors.sol\";\n\nimport \"./ExtensibleBaseWeightedPool.sol\";\nimport \"./Gyro3CLPMath.sol\";\nimport \"./Gyro3CLPPoolErrors.sol\";\n\nimport \"../CappedLiquidity.sol\";\nimport \"../LocallyPausable.sol\";\n\n/**\n * @dev Gyro Three Pool with immutable weights.\n */\n// We derive from ExtensibleBaseWeightedPool and we override a large part of the functionality. In particular the\n// weights are not used.\ncontract Gyro3CLPPool is ExtensibleBaseWeightedPool, CappedLiquidity, LocallyPausable {\n    using GyroFixedPoint for uint256;\n    using WeightedPoolUserDataHelpers for bytes;\n\n    uint256 private immutable _root3Alpha;\n\n    IGyroConfig public gyroConfig;\n\n    uint256 private constant _MAX_TOKENS = 3;\n\n    IERC20 internal immutable _token0;\n    IERC20 internal immutable _token1;\n    IERC20 internal immutable _token2;\n\n    // All token balances are normalized to behave as if the token had 18 decimals. We assume a token's decimals will\n    // not change throughout its lifetime, and store the corresponding scaling factor for each at construction time.\n    // These factors are always greater than or equal to one: tokens with more than 18 decimals are not supported.\n    uint256 internal immutable _scalingFactor0;\n    uint256 internal immutable _scalingFactor1;\n    uint256 internal immutable _scalingFactor2;\n\n    struct NewPoolConfigParams {\n        string name;\n        string symbol;\n        IERC20[] tokens;\n        uint256 swapFeePercentage;\n        uint256 root3Alpha;\n        address owner;\n        address capManager;\n        CapParams capParams;\n        address pauseManager;\n    }\n\n    struct NewPoolParams {\n        IVault vault;\n        address configAddress;\n        NewPoolConfigParams config;\n        uint256 pauseWindowDuration;\n        uint256 bufferPeriodDuration;\n    }\n\n    constructor(NewPoolParams memory params)\n        ExtensibleBaseWeightedPool(\n            params.vault,\n            params.config.name,\n            params.config.symbol,\n            params.config.tokens,\n            new address[](3),\n            params.config.swapFeePercentage,\n            params.pauseWindowDuration,\n            params.bufferPeriodDuration,\n            params.config.owner\n        )\n        CappedLiquidity(params.config.capManager, params.config.capParams)\n        LocallyPausable(params.config.pauseManager)\n    {\n        IERC20[] memory tokens = params.config.tokens;\n        _grequire(tokens.length == 3, Gyro3CLPPoolErrors.TOKENS_LENGTH_MUST_BE_3);\n        InputHelpers.ensureArrayIsSorted(tokens); // For uniqueness and required to make balance reconstruction work\n        _grequire(params.configAddress != address(0), GyroErrors.ZERO_ADDRESS);\n\n        _token0 = tokens[0];\n        _token1 = tokens[1];\n        _token2 = tokens[2];\n\n        _scalingFactor0 = _computeScalingFactor(tokens[0]);\n        _scalingFactor1 = _computeScalingFactor(tokens[1]);\n        _scalingFactor2 = _computeScalingFactor(tokens[2]);\n\n        // _require(params.config.root3Alpha < FixedPoint.ONE, Gyro3CLPPoolErrors.PRICE_BOUNDS_WRONG);\n        _grequire(\n            Gyro3CLPMath._MIN_ROOT_3_ALPHA <= params.config.root3Alpha && params.config.root3Alpha <= Gyro3CLPMath._MAX_ROOT_3_ALPHA,\n            Gyro3CLPPoolErrors.PRICE_BOUNDS_WRONG\n        );\n        _root3Alpha = params.config.root3Alpha;\n        gyroConfig = IGyroConfig(params.configAddress);\n    }\n\n    function getRoot3Alpha() external view returns (uint256) {\n        return _root3Alpha;\n    }\n\n    // We don't support weights at the moment; in other words, all tokens are always weighted equally and thus their\n    // normalized weights are all 1/3. This is what the functions return.\n\n    function _getNormalizedWeight(IERC20) internal view virtual override returns (uint256) {\n        return GyroFixedPoint.ONE / 3;\n    }\n\n    function _getNormalizedWeights() internal view virtual override returns (uint256[] memory) {\n        uint256[] memory normalizedWeights = new uint256[](3);\n\n        // prettier-ignore\n        {\n            normalizedWeights[0] = GyroFixedPoint.ONE/3;\n            normalizedWeights[1] = GyroFixedPoint.ONE/3;\n            normalizedWeights[2] = GyroFixedPoint.ONE/3;\n        }\n\n        return normalizedWeights;\n    }\n\n    /// @dev Since all weights are always the same, the max-weight token is arbitrary. We return token 0.\n    function _getNormalizedWeightsAndMaxWeightIndex() internal view virtual override returns (uint256[] memory, uint256) {\n        return (_getNormalizedWeights(), 0);\n    }\n\n    function _getMaxTokens() internal pure virtual override returns (uint256) {\n        return _MAX_TOKENS;\n    }\n\n    function _getTotalTokens() internal pure virtual override returns (uint256) {\n        return 3;\n    }\n\n    /**\n     * @dev Returns the scaling factor for one of the Pool's tokens. Reverts if `token` is not a token registered by the\n     * Pool.\n     */\n    function _scalingFactor(IERC20 token) internal view virtual override returns (uint256 scalingFactor) {\n        if (token == _token0) {\n            scalingFactor = _scalingFactor0;\n        } else if (token == _token1) {\n            scalingFactor = _scalingFactor1;\n        } else if (token == _token2) {\n            scalingFactor = _scalingFactor2;\n        } else {\n            _revert(Errors.INVALID_TOKEN);\n        }\n    }\n\n    function _scalingFactors() internal view virtual override returns (uint256[] memory) {\n        uint256 totalTokens = _getTotalTokens();\n        uint256[] memory scalingFactors = new uint256[](totalTokens);\n\n        // prettier-ignore\n        {\n            scalingFactors[0] = _scalingFactor0;\n            scalingFactors[1] = _scalingFactor1;\n            scalingFactors[2] = _scalingFactor2;\n        }\n\n        return scalingFactors;\n    }\n\n    // on{Swap,Join,Exit}() toplevel entry points are not overloaded and taken from ExtensibleBaseWeightedPool. We\n    // override the lower-level functions.\n\n    function _onSwapGivenIn(\n        SwapRequest memory swapRequest,\n        uint256 currentBalanceTokenIn,\n        uint256 currentBalanceTokenOut\n    ) internal view virtual override whenNotPaused returns (uint256) {\n        uint256 virtualOffset = _calculateVirtualOffset(swapRequest, currentBalanceTokenIn, currentBalanceTokenOut);\n        return _onSwapGivenIn(swapRequest, currentBalanceTokenIn, currentBalanceTokenOut, virtualOffset);\n    }\n\n    function _onSwapGivenOut(\n        SwapRequest memory swapRequest,\n        uint256 currentBalanceTokenIn,\n        uint256 currentBalanceTokenOut\n    ) internal view virtual override whenNotPaused returns (uint256) {\n        uint256 virtualOffset = _calculateVirtualOffset(swapRequest, currentBalanceTokenIn, currentBalanceTokenOut);\n        return _onSwapGivenOut(swapRequest, currentBalanceTokenIn, currentBalanceTokenOut, virtualOffset);\n    }\n\n    /** @dev Given two tokens x, y, return the third one among the pool tokens that is neither x nor y. x, y do *not*\n     * have to be ordered, but they have to be among the tokens of this pool and they have to be different.\n     */\n    function _getThirdToken(IERC20 x, IERC20 y) internal view returns (IERC20 tokenOther, uint256 scalingFactorOther) {\n        // Sort\n        if (x > y) (x, y) = (y, x);\n\n        // We exploit that the variables _token{0,1,2} are sorted.\n        if (x == _token0) {\n            if (y == _token1) return (_token2, _scalingFactor2);\n            if (y != _token2) _grequire(false, Gyro3CLPPoolErrors.TOKENS_NOT_AMONG_POOL_TOKENS);\n            return (_token1, _scalingFactor1);\n        }\n        if (!(x == _token1 && y == _token2)) _grequire(false, Gyro3CLPPoolErrors.TOKENS_NOT_AMONG_POOL_TOKENS);\n        return (_token0, _scalingFactor0);\n    }\n\n    /** @dev Reads the balance of a token from the balancer vault and returns the scaled amount. Smaller storage access\n     * compared to getVault().getPoolTokens().\n     */\n    function _getScaledTokenBalance(IERC20 token, uint256 scalingFactor) internal view returns (uint256 balance) {\n        // Signature of getPoolTokenInfo(): (pool id, token) -> (cash, managed, lastChangeBlock, assetManager)\n        // and total amount = cash + managed. See balancer repo, PoolTokens.sol and BalanceAllocation.sol\n        (uint256 cash, uint256 managed, , ) = getVault().getPoolTokenInfo(getPoolId(), token);\n        balance = cash + managed; // can't overflow, see BalanceAllocation.sol::total() in the Balancer repo.\n        balance = balance.mulDown(scalingFactor);\n    }\n\n    /** @dev Calculate the offset that that takes real reserves to virtual reserves. Variant that uses the info given\n     * during swaps to query less from the vault and save gas.\n     */\n    function _calculateVirtualOffset(\n        SwapRequest memory swapRequest,\n        uint256 currentBalanceTokenIn,\n        uint256 currentBalanceTokenOut\n    ) private view returns (uint256 virtualOffset) {\n        // We exploit that everything is symmetric, so we don't have to know which balance is which here\n        uint256[] memory balances = new uint256[](3);\n        balances[0] = currentBalanceTokenIn;\n        balances[1] = currentBalanceTokenOut;\n\n        // Get the third token and query its balance.\n        // This needs to be scaled up, like in BasePool._upscaleArray(). The other balances are already scaled up.\n        (IERC20 token3, uint256 scalingFactor3) = _getThirdToken(swapRequest.tokenIn, swapRequest.tokenOut);\n        balances[2] = _getScaledTokenBalance(token3, scalingFactor3);\n\n        return _calculateVirtualOffset(balances);\n    }\n\n    /** @dev Calculate virtual offsets from scaled balances. Balances can be retrieved in the most gas-efficient way. */\n    function _calculateVirtualOffset(\n        uint256[] memory balances // Need to be already scaled up.\n    ) private view returns (uint256 virtualOffset) {\n        uint256 root3Alpha = _root3Alpha;\n        uint256 invariant = Gyro3CLPMath._calculateInvariant(balances, root3Alpha);\n        virtualOffset = invariant.mulDown(root3Alpha);\n    }\n\n    /** @dev Get all balances in the pool, scaled by the appropriate scaling factors, in a relatively gas-efficient way.\n     */\n    function _getAllBalances() private view returns (uint256[] memory balances) {\n        // The below is more gas-efficient than the following line because the token slots don't have to be read in the\n        // vault.\n        // (, uint256[] memory balances, ) = getVault().getPoolTokens(getPoolId());\n        balances = new uint256[](3);\n        balances[0] = _getScaledTokenBalance(_token0, _scalingFactor0);\n        balances[1] = _getScaledTokenBalance(_token1, _scalingFactor1);\n        balances[2] = _getScaledTokenBalance(_token2, _scalingFactor2);\n        return balances;\n    }\n\n    /** @dev Calculate the offset that that takes real reserves to virtual reserves. Uses only the info in the pool, but\n     * is rather expensive because a lot has to be queried from the vault.\n     */\n    function _calculateVirtualOffset() private view returns (uint256 virtualOffset) {\n        return _calculateVirtualOffset(_getAllBalances());\n    }\n\n    function _calculateInvariant() private view returns (uint256 invariant) {\n        return Gyro3CLPMath._calculateInvariant(_getAllBalances(), _root3Alpha);\n    }\n\n    function _onSwapGivenIn(\n        SwapRequest memory swapRequest,\n        uint256 currentBalanceTokenIn,\n        uint256 currentBalanceTokenOut,\n        uint256 virtualOffset\n    ) private pure returns (uint256) {\n        return Gyro3CLPMath._calcOutGivenIn(currentBalanceTokenIn, currentBalanceTokenOut, swapRequest.amount, virtualOffset);\n    }\n\n    function _onSwapGivenOut(\n        SwapRequest memory swapRequest,\n        uint256 currentBalanceTokenIn,\n        uint256 currentBalanceTokenOut,\n        uint256 virtualOffset\n    ) private pure returns (uint256) {\n        return Gyro3CLPMath._calcInGivenOut(currentBalanceTokenIn, currentBalanceTokenOut, swapRequest.amount, virtualOffset);\n    }\n\n    /**\n     * @dev Called when the Pool is joined for the first time; that is, when the BPT total supply is zero.\n     *\n     * Returns the amount of BPT to mint and the token amounts the Pool will receive in return.\n     *\n     * Minted BPT will be sent to `recipient`, except for _MINIMUM_BPT, which will be deducted from this amount and sent\n     * to the zero address instead. This will cause that BPT to remain forever locked there, preventing total BTP from\n     * ever dropping below that value, and ensuring `_onInitializePool` can only be called once in the entire Pool's\n     * lifetime.\n     *\n     * The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n     * be downscaled (rounding up) before being returned to the Vault.\n     */\n    function _onInitializePool(\n        bytes32,\n        address,\n        address,\n        uint256[] memory scalingFactors,\n        bytes memory userData\n    ) internal override whenNotPaused returns (uint256, uint256[] memory) {\n        BaseWeightedPool.JoinKind kind = userData.joinKind();\n        _require(kind == BaseWeightedPool.JoinKind.INIT, Errors.UNINITIALIZED);\n\n        uint256[] memory amountsIn = userData.initialAmountsIn();\n        InputHelpers.ensureInputLengthMatch(amountsIn.length, 3);\n        _upscaleArray(amountsIn, scalingFactors);\n\n        uint256 invariantAfterJoin = Gyro3CLPMath._calculateInvariant(amountsIn, _root3Alpha);\n\n        // Set the initial BPT to the value of the invariant times the number of tokens. This makes BPT supply more\n        // consistent in Pools with similar compositions but different number of tokens.\n        // Note that the BPT supply also depends on the parameters of the pool.\n        uint256 bptAmountOut = Math.mul(invariantAfterJoin, 3);\n\n        _lastInvariant = invariantAfterJoin;\n\n        return (bptAmountOut, amountsIn);\n    }\n\n    /**\n     * @dev Called whenever the Pool is joined after the first initialization join (see `_onInitializePool`).\n     *\n     * Returns the amount of BPT to mint, the token amounts that the Pool will receive in return, and the number of\n     * tokens to pay in protocol swap fees.\n     *\n     * Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n     * performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n     *\n     * Minted BPT will be sent to `recipient`.\n     *\n     * The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n     * be downscaled (rounding up) before being returned to the Vault.\n     *\n     * protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way\n     */\n    function _onJoinPool(\n        bytes32,\n        address,\n        address recipient,\n        uint256[] memory balances,\n        uint256,\n        uint256, // protocolSwapFeePercentage, not used\n        uint256[] memory,\n        bytes memory userData\n    )\n        internal\n        override\n        returns (\n            uint256 bptAmountOut,\n            uint256[] memory amountsIn,\n            uint256[] memory dueProtocolFeeAmounts\n        )\n    {\n        // Due protocol swap fee amounts are computed by measuring the growth of the invariant between the previous join\n        // or exit event and now - the invariant's growth is due exclusively to swap fees. This avoids spending gas\n        // accounting for them on each individual swap\n\n        uint256 root3Alpha = _root3Alpha;\n\n        uint256 invariantBeforeJoin = Gyro3CLPMath._calculateInvariant(balances, root3Alpha);\n\n        _distributeFees(invariantBeforeJoin);\n\n        (bptAmountOut, amountsIn) = _doJoin(balances, userData);\n\n        if (_capParams.capEnabled) {\n            _ensureCap(bptAmountOut, balanceOf(recipient), totalSupply());\n        }\n\n        // Since we pay fees in BPT, they have not changed the invariant and 'lastInvariant' is still consistent with\n        // 'balances'. Therefore, we can use a simplified method to update the invariant that does not require a full\n        // re-computation.\n        // Note: Should this be changed in the future, we also need to reduce the invariant proportionally by the total\n        // protocol fee factor.\n        _lastInvariant = GyroPoolMath.liquidityInvariantUpdate(invariantBeforeJoin, bptAmountOut, totalSupply(), true);\n\n        // returns a new uint256[](3) b/c Balancer vault is expecting a fee array, but fees paid in BPT instead\n        return (bptAmountOut, amountsIn, new uint256[](3));\n    }\n\n    function _doJoin(uint256[] memory balances, bytes memory userData) internal view returns (uint256 bptAmountOut, uint256[] memory amountsIn) {\n        BaseWeightedPool.JoinKind kind = userData.joinKind();\n\n        // We do NOT currently support unbalanced update, i.e., EXACT_TOKENS_IN_FOR_BPT_OUT or TOKEN_IN_FOR_EXACT_BPT_OUT\n        if (kind == BaseWeightedPool.JoinKind.ALL_TOKENS_IN_FOR_EXACT_BPT_OUT) {\n            (bptAmountOut, amountsIn) = _joinAllTokensInForExactBPTOut(balances, userData);\n        } else {\n            _revert(Errors.UNHANDLED_JOIN_KIND);\n        }\n    }\n\n    /**\n     * @dev Called whenever the Pool is exited.\n     *\n     * Returns the amount of BPT to burn, the token amounts for each Pool token that the Pool will grant in return, and\n     * the number of tokens to pay in protocol swap fees.\n     *\n     * Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n     * performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n     *\n     * BPT will be burnt from `sender`.\n     *\n     * The Pool will grant tokens to `recipient`. These amounts are considered upscaled and will be downscaled\n     * (rounding down) before being returned to the Vault.\n     *\n     * protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way\n     */\n    function _onExitPool(\n        bytes32,\n        address,\n        address,\n        uint256[] memory balances,\n        uint256,\n        uint256, // protocolSwapFeePercentage\n        uint256[] memory,\n        bytes memory userData\n    )\n        internal\n        override\n        returns (\n            uint256 bptAmountIn,\n            uint256[] memory amountsOut,\n            uint256[] memory dueProtocolFeeAmounts\n        )\n    {\n        // Exits are not completely disabled while the contract is paused: proportional exits (exact BPT in for tokens\n        // out) remain functional.\n\n        uint256 root3Alpha = _root3Alpha;\n\n        if (_isNotPaused()) {\n            // Due protocol swap fee amounts are computed by measuring the growth of the invariant between the previous\n            // join or exit event and now - the invariant's growth is due exclusively to swap fees. This avoids\n            // spending gas calculating the fees on each individual swap.\n            uint256 invariantBeforeExit = Gyro3CLPMath._calculateInvariant(balances, root3Alpha);\n\n            _distributeFees(invariantBeforeExit);\n\n            (bptAmountIn, amountsOut) = _doExit(balances, userData);\n\n            // Since we pay fees in BPT, they have not changed the invariant and 'lastInvariant' is still consistent with\n            // 'balances'. Therefore, we can use a simplified method to update the invariant that does not require a full\n            // re-computation.\n            // Note: Should this be changed in the future, we also need to reduce the invariant proportionally by the\n            // total protocol fee factor.\n            _lastInvariant = GyroPoolMath.liquidityInvariantUpdate(invariantBeforeExit, bptAmountIn, totalSupply(), false);\n        } else {\n            // Note: If the contract is paused, swap protocol fee amounts are not charged and the oracle is not updated\n            // to avoid extra calculations and reduce the potential for errors.\n            (bptAmountIn, amountsOut) = _doExit(balances, userData);\n\n            // In the paused state, we do not recompute the invariant to reduce the potential for errors and to avoid\n            // lock-up in case the pool is in a state where the involved numerical method does not converge.\n            // Instead, we set the invariant such that any following (non-paused) join/exit will ignore and recompute it\n            // (see GyroPoolMath._calcProtocolFees())\n            _lastInvariant = type(uint256).max;\n        }\n\n        // returns a new uint256[](3) b/c Balancer vault is expecting a fee array, but fees paid in BPT instead\n        return (bptAmountIn, amountsOut, new uint256[](3));\n    }\n\n    /**\n     * @dev Returns the current value of the invariant.\n     */\n    function getInvariant() public view override returns (uint256 invariant) {\n        return _calculateInvariant();\n    }\n\n    function _joinAllTokensInForExactBPTOut(uint256[] memory balances, bytes memory userData)\n        internal\n        view\n        override\n        returns (uint256, uint256[] memory)\n    {\n        uint256 bptAmountOut = userData.allTokensInForExactBptOut();\n\n        uint256[] memory amountsIn = GyroPoolMath._calcAllTokensInGivenExactBptOut(balances, bptAmountOut, totalSupply());\n\n        return (bptAmountOut, amountsIn);\n    }\n\n    function _doExit(uint256[] memory balances, bytes memory userData) internal view returns (uint256 bptAmountIn, uint256[] memory amountsOut) {\n        BaseWeightedPool.ExitKind kind = userData.exitKind();\n\n        // We do NOT support unbalanced exit at the moment, i.e., EXACT_BPT_IN_FOR_ONE_TOKEN_OUT or\n        // BPT_IN_FOR_EXACT_TOKENS_OUT.\n        if (kind == BaseWeightedPool.ExitKind.EXACT_BPT_IN_FOR_TOKENS_OUT) {\n            return _exitExactBPTInForTokensOut(balances, userData);\n        } else {\n            _revert(Errors.UNHANDLED_EXIT_KIND);\n        }\n    }\n\n    function _exitExactBPTInForTokensOut(uint256[] memory balances, bytes memory userData)\n        internal\n        view\n        override\n        returns (uint256, uint256[] memory)\n    {\n        // This exit function is the only one that is not disabled if the contract is paused: it remains unrestricted\n        // in an attempt to provide users with a mechanism to retrieve their tokens in case of an emergency.\n        // This particular exit function is the only one that remains available because it is the simplest one, and\n        // therefore the one with the lowest likelihood of errors.\n\n        uint256 bptAmountIn = userData.exactBptInForTokensOut();\n        // Note that there is no minimum amountOut parameter: this is handled by `IVault.exitPool`.\n\n        uint256[] memory amountsOut = GyroPoolMath._calcTokensOutGivenExactBptIn(balances, bptAmountIn, totalSupply());\n        return (bptAmountIn, amountsOut);\n    }\n\n    // Helpers\n\n    // Protocol Fee Helpers. These are the same functions as in Gyro2CLPPool.\n\n    /**\n     * @dev Computes and distributes fees between the Balancer and the Gyro treasury\n     * The fees are computed and distributed in BPT rather than using the\n     * Balancer regular distribution mechanism which would pay these in underlying\n     */\n    function _distributeFees(uint256 invariantBeforeAction) internal {\n        // calculate Protocol fees in BPT\n        // _lastInvariant is the invariant logged at the end of the last liquidity update\n        // protocol fees are calculated on swap fees earned between liquidity updates\n        (uint256 gyroFees, uint256 balancerFees, address gyroTreasury, address balTreasury) = _getDueProtocolFeeAmounts(\n            _lastInvariant,\n            invariantBeforeAction\n        );\n\n        // Pay fees in BPT\n        _payFeesBpt(gyroFees, balancerFees, gyroTreasury, balTreasury);\n    }\n\n    /**\n     * @dev this function overrides inherited function to make sure it is never used\n     */\n    function _getDueProtocolFeeAmounts(\n        uint256[] memory, // balances,\n        uint256[] memory, // normalizedWeights,\n        uint256, // maxWeightTokenIndex,\n        uint256, // previousInvariant,\n        uint256, // currentInvariant,\n        uint256 // protocolSwapFeePercentage\n    ) internal pure override returns (uint256[] memory) {\n        revert(\"Not implemented\");\n    }\n\n    /**\n     * @dev\n     * Note: This function is identical to that used in Gyro2CLPPool.sol.\n     * Calculates protocol fee amounts in BPT terms.\n     * protocolSwapFeePercentage is not used here b/c we take parameters from GyroConfig instead.\n     * Returns: BPT due to Gyro, BPT due to Balancer, receiving address for Gyro fees, receiving address for Balancer\n     * fees.\n     */\n    function _getDueProtocolFeeAmounts(uint256 previousInvariant, uint256 currentInvariant)\n        internal\n        view\n        returns (\n            uint256,\n            uint256,\n            address,\n            address\n        )\n    {\n        (uint256 protocolSwapFeePerc, uint256 protocolFeeGyroPortion, address gyroTreasury, address balTreasury) = _getFeesMetadata();\n\n        // Early return if the protocol swap fee percentage is zero, saving gas.\n        if (protocolSwapFeePerc == 0) {\n            return (0, 0, gyroTreasury, balTreasury);\n        }\n\n        // Calculate fees in BPT\n        (uint256 gyroFees, uint256 balancerFees) = GyroPoolMath._calcProtocolFees(\n            previousInvariant,\n            currentInvariant,\n            totalSupply(),\n            protocolSwapFeePerc,\n            protocolFeeGyroPortion\n        );\n\n        return (gyroFees, balancerFees, gyroTreasury, balTreasury);\n    }\n\n    // Note: This function is identical to that used in Gyro2CLPPool.sol\n    function _payFeesBpt(\n        uint256 gyroFees,\n        uint256 balancerFees,\n        address gyroTreasury,\n        address balTreasury\n    ) internal {\n        // Pay fees in BPT to gyro treasury\n        if (gyroFees > 0) {\n            _mintPoolTokens(gyroTreasury, gyroFees);\n        }\n        // Pay fees in BPT to bal treasury\n        if (balancerFees > 0) {\n            _mintPoolTokens(balTreasury, balancerFees);\n        }\n    }\n\n    // Note: This function is identical to that used in Gyro2CLPPool.sol\n    function _getFeesMetadata()\n        internal\n        view\n        returns (\n            uint256,\n            uint256,\n            address,\n            address\n        )\n    {\n        return (\n            gyroConfig.getUint(GyroConfigKeys.PROTOCOL_SWAP_FEE_PERC_KEY),\n            gyroConfig.getUint(GyroConfigKeys.PROTOCOL_FEE_GYRO_PORTION_KEY),\n            gyroConfig.getAddress(GyroConfigKeys.GYRO_TREASURY_KEY),\n            gyroConfig.getAddress(GyroConfigKeys.BAL_TREASURY_KEY)\n        );\n    }\n\n    function _setPausedState(bool paused) internal override {\n        _setPaused(paused);\n    }\n}\n", "sourceMap": "1289:26287:10:-:0;;;873:95:85;820:148;;2689:1565:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3189:13;;;;;:26;;;;3114:24;;;;3140:23;;;;2778:12;;2804:18;;2836:20;;;;2870;;;;2904:16;;2918:1;2904:16;;;;;;;;;3189:26;;3114:24;;3140:23;;2778:12;;2804:18;;2836:20;2870;;2904:16;;;;;;;;;;;;-1:-1:-1;2904:16:10;2934:6;:13;;;:31;;;2979:6;:26;;;3019:6;:27;;;3060:6;:13;;;:19;;;1986:5:8;2269:6;:13;2286:1;2269:18;:102;;2328:43;2269:102;;;2290:35;2269:102;2385:4;2403:6;2423;2443:13;2470:17;2501:19;2534:20;2568:5;4518:19:50;4539:20;4432:4;4438:6;4446:5;1831:9:48;1239:4:85;2020:280:83;;;;;;;;;;;;;-1:-1:-1;;;2020:280:83;;;1795:9:48;1806:11;4483:5:50;4392:10;-1:-1:-1;;;;;4384:19:50;4376:28;;1954:21:65;1929:46;;;;;;1876:106;1758:5:51;-1:-1:-1;;;;;1749:14:51;;;-1:-1:-1;;;;;1749:14:51;;;;;;;1712:58;2010:5:84;2002;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2025:17:84;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2052:9:84;:14;;2064:2;-1:-1:-1;;2052:14:84;;;;;;-1:-1:-1;2100:22:83;;;;;;;2085:37;;2150:25;;;;;2132:43;;-1:-1:-1;2198:95:83;2052:14:84;2185:108:83;1852:14:48::2;::::0;-1:-1:-1;;;;;;1852:14:48;::::2;::::0;-1:-1:-1;2458:93:75;;-1:-1:-1;2164:7:75;2467:49;;;8518:3:66;2458:8:75;:93::i;:::-;2561:96;2232:7;2570:51;;;8582:3:66;2561:8:75;:96::i;:::-;2697:15;:37;;;2745:40;;;;2818:41;2795:64;;4584:13:50;;4575:57:::4;::::0;2599:1:::4;-1:-1:-1::0;4584:28:50::4;5119:3:66;4575:8:50;:57::i;:::-;4642:61;4668:15;:13;:15::i;:::-;4651:13:::0;;:32:::4;;5167:3:66;4642:8:50;:61::i;:::-;5251:40;5284:6;5251:32;;;;;:40;;:::i;:::-;5302;5324:17:::0;5302:21:::4;:40::i;:::-;5370:34;::::0;-1:-1:-1;;;5370:34:50;;5353:14:::4;::::0;-1:-1:-1;;;;;5370:18:50;::::4;::::0;-1:-1:-1;;5370:34:50::4;::::0;5389:14;;5370:34:::4;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5415:51;::::0;-1:-1:-1;;;5415:51:50;;5353;;-1:-1:-1;;;;;;5415:20:50;::::4;::::0;::::4;::::0;:51:::4;::::0;5353;;5444:6;;5452:13;;5415:51:::4;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;::::0;::::4;;;;;;;;;5576:6;5566:16;;;;::::0;::::4;3470:2119;::::0;;;;;;;;;;1653:999:8;;;;;;;;;1081:1:14;-1:-1:-1;;;;;1058:25:14;:11;-1:-1:-1;;;;;1058:25:14;;;1085:15;;;;;;;;;;;;;-1:-1:-1;;;1085:15:14;;;1050:51;;;;;-1:-1:-1;;;1050:51:14;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;1111:10:14;:24;;-1:-1:-1;;;;;;1111:24:14;-1:-1:-1;;;;;1111:24:14;;;;;;1169:17;;1145:10;:41;;1223:20;;;;1276:16;;;;;-1:-1:-1;;1145:41:14;;;;;;;;;;-1:-1:-1;;1196:47:14;-1:-1:-1;;;;;;1196:47:14;;;;;;;;;;;-1:-1:-1;;;;;1253:39:14;;;-1:-1:-1;;;1253:39:14;;;;;;;;501:63:17;;511:27;;;;4475:3:43;501:9:17;:63::i;:::-;574:12;:28;;-1:-1:-1;;;;;;574:28:17;-1:-1:-1;;;;;574:28:17;;;;;;;;;;3256:13:10::3;::::0;;::::3;::::0;:20:::3;::::0;3296:13;;3286:73:::3;::::0;3313:1:::3;3296:18;655:3:11;3286:9:10;:73::i;:::-;3369:40;3402:6;3369:32;;;;;:40;;:::i;:::-;3496:20;::::0;::::3;::::0;3486:70:::3;::::0;-1:-1:-1;;;;;3496:34:10::3;::::0;::::3;4475:3:43;3486:9:10;:70::i;:::-;3577:6;3584:1;3577:9;;;;;;;;;::::0;;::::3;::::0;;;;;;3567:19:::3;::::0;-1:-1:-1;;;;;;3567:19:10;::::3;::::0;3606:9;;;;-1:-1:-1;;3606:9:10;::::3;;;;;;::::0;;::::3;::::0;;;;;;3596:19:::3;::::0;-1:-1:-1;;;;;;3596:19:10;::::3;::::0;3635:9;;;;3642:1:::3;::::0;3635:9;::::3;;;;;;::::0;;::::3;::::0;;;;;;3625:19:::3;::::0;-1:-1:-1;;;;;;3625:19:10;::::3;::::0;3695:9;;3673:32:::3;::::0;3695:9;;3702:1:::3;::::0;3695:9:::3;;;;;;;;;;3673:21;;;:32;;:::i;:::-;3655:50;::::0;3755:9;;3733:32:::3;::::0;3755:6;;3762:1:::3;::::0;3755:9;::::3;;;;3733:32;3715:50;::::0;3815:9;;3793:32:::3;::::0;3815:6;;3822:1:::3;::::0;3815:9;::::3;;;;3793:32;3775:50;::::0;3996:13:::3;::::0;::::3;::::0;:24:::3;;::::0;3939:204:::3;::::0;2330:22:9::3;3962:58:10;::::0;::::3;::::0;:120:::3;;;2433:21:9;4024:6:10;:13;;;:24;;;:58;;3962:120;176:3:11;3939:9:10;:204::i;:::-;-1:-1:-1::0;4167:13:10::3;::::0;::::3;::::0;:24:::3;;::::0;4153:38:::3;::::0;4226:20:::3;;::::0;4201:10:::3;:46:::0;;-1:-1:-1;;;;;;4201:46:10::3;-1:-1:-1::0;;;;;4201:46:10;;::::3;::::0;;;::::3;::::0;;1289:26287;;866:101:66;935:9;930:34;;946:18;954:9;946:7;:18::i;:::-;866:101;;:::o;5391:109:10:-;1588:1;5391:109;:::o;1135:274:72:-;1345:5;1369:33;1345:5;1369:19;:33::i;6277:418:50:-;6353:87;2755:4;6362:45;;;5289:3:66;6353:8:50;:87::i;:::-;6450;2828:4;6459:45;;;5228:3:66;6450:8:50;:87::i;:::-;6560:70;6583:17;3356:3;6560:9;;:22;;;;;;:70;;;;;:::i;:::-;6548:9;:82;6645:43;;;;;;6670:17;;6645:43;:::i;:::-;;;;;;;;6277:418;:::o;256:103:43:-;326:9;321:35;;337:19;346:9;337:8;:19::i;19853:510:50:-;19921:7;19970:4;-1:-1:-1;;;;;19944:31:50;;;19940:83;;;-1:-1:-1;893:4:77;19991:21:50;;19940:83;20113:21;20151:5;-1:-1:-1;;;;;20137:30:50;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20113:56;;;;20244:26;20273:27;20282:2;20286:13;20273:8;;;;;:27;;:::i;:::-;20244:56;;20338:18;20334:2;:22;893:4:77;20317:39:50;20310:46;;;;19853:510;;;;:::o;1074:3172:66:-;-1:-1:-1;;;3588:3:66;3581:79;;;3799:66;3793:4;3786:80;3941:1;3935:4;3928:15;2210:2;2243:18;;;2336;;;2383;;;2215:4;2379:29;;;3057:2;3053:17;2195:18;;;;2288;;;;2284:29;;;;3040:1;3036:14;3025:26;;;;3021:50;;;;2999:73;;2994:3;2990:83;4008:4;4001:26;4234:3;;4224:14;1415:374:72;1511:1;1496:5;:12;:16;1492:53;;;1528:7;;1492:53;1555:16;1574:5;1580:1;1574:8;;;;;;;;;;;;;;1555:27;;1597:9;1609:1;1597:13;;1592:191;1616:5;:12;1612:1;:16;1592:191;;;1649:15;1667:5;1673:1;1667:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;1689:51:72;-1:-1:-1;;;;;1698:18:72;;;;;;;4890:3:66;1689:8:72;:51::i;:::-;1765:7;-1:-1:-1;1630:3:72;;1592:191;;;;1415:374;;;:::o;6887:269:76:-;-1:-1:-1;7074:18:76;;7072:21;7056:37;;;;7133:15;;7111:38;;6887:269::o;793:128:43:-;841:29;850:9;-1:-1:-1;;;841:8:43;:29::i;948:166:79:-;1006:7;1025:37;1034:6;;;;4370:1:66;1025:8:79;:37::i;:::-;-1:-1:-1;1084:5:79;;;948:166::o;1028:3379:43:-;-1:-1:-1;;;1091:18:43;3742:79;;;3960:66;3954:4;3947:80;4102:1;4096:4;4089:15;2230:2;2263:18;;;2308;;;2235:4;2304:29;;;3106:1;3197:14;2215:18;;;;3186:26;;;;2356:18;;;;2403;;;2399:29;;3218:2;3214:17;3182:50;3096:4;3102:18;;;;;;3092:29;3088:2;3084:38;3161:72;;;;3156:3;3152:82;4169:4;4162:26;1120:14;;;;;4395:3;;4385:14;1289:26287:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1289:26287:10;;;-1:-1:-1;1289:26287:10;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:142:129;95:13;;117:33;95:13;117:33;:::i;161:811::-;;282:3;275:4;267:6;263:17;259:27;249:2;;304:5;297;290:20;249:2;331:13;;363:4;-1:-1:-1;379:26:129;;376:2;;;408:9;376:2;446;442;438:11;469:27;492:2;488;484:11;469:27;:::i;:::-;530:15;;;561:12;;;;593:15;;;627;;;623:24;;620:33;-1:-1:-1;617:2:129;;;670:5;663;656:20;617:2;696:5;687:14;;710:233;724:2;721:1;718:9;710:233;;;788:3;782:10;805:33;832:5;805:33;:::i;:::-;851:18;;742:1;735:9;;;;;889:12;;;;921;;710:233;;;-1:-1:-1;961:5:129;239:733;-1:-1:-1;;;;;;;239:733:129:o;977:505::-;;1086:3;1079:4;1071:6;1067:17;1063:27;1053:2;;1108:5;1101;1094:20;1053:2;1135:13;;-1:-1:-1;1160:26:129;;1157:2;;;1189:9;1157:2;1224:54;1272:4;-1:-1:-1;;1266:2:129;1247:13;;1243:27;1239:38;1224:54;:::i;:::-;1303:2;1294:7;1287:19;1349:3;1342:4;1337:2;1329:6;1325:15;1321:26;1318:35;1315:2;;;1370:5;1363;1356:20;1315:2;1387:64;1448:2;1441:4;1432:7;1428:18;1421:4;1413:6;1409:17;1387:64;:::i;:::-;1469:7;1043:439;-1:-1:-1;;;;1043:439:129:o;1487:864::-;;1605:4;1593:9;1588:3;1584:19;1580:30;1577:2;;;1627:5;1620;1613:20;1577:2;1664;1658:9;1706:4;1694:17;;1762:22;;;-1:-1:-1;1726:34:129;;1723:62;1720:2;;;1788:9;1720:2;1819:10;1815:2;1808:22;;1848:6;1839:15;;1884:9;1878:16;1939:7;1932:15;1925:23;1916:7;1913:36;1903:2;;1963:1;1960;1953:12;1903:2;1976:23;;2044:2;2029:18;;2023:25;-1:-1:-1;;;;;2079:33:129;;2067:46;;2057:2;;2127:1;2124;2117:12;2057:2;2159;2147:15;;2140:32;2217:2;2202:18;;2196:25;-1:-1:-1;;;;;2252:33:129;;2240:46;;2230:2;;2300:1;2297;2290:12;2230:2;2332;2320:15;;;;2313:32;1567:784;;-1:-1:-1;;1567:784:129:o;2356:1278::-;;2484:6;2472:9;2467:3;2463:19;2459:32;2456:2;;;2508:5;2501;2494:20;2456:2;2534:22;2549:6;2534:22;:::i;:::-;2579:16;;2525:31;;-1:-1:-1;;2644:14:129;;;2641:2;;;2671:1;2668;2661:12;2641:2;2698:59;2753:3;2744:6;2733:9;2729:22;2698:59;:::i;:::-;2691:5;2684:74;2804:2;2793:9;2789:18;2783:25;2767:41;;2833:2;2823:8;2820:16;2817:2;;;2849:1;2846;2839:12;2817:2;2885:61;2942:3;2931:8;2920:9;2916:24;2885:61;:::i;:::-;2880:2;2873:5;2869:14;2862:85;2993:2;2982:9;2978:18;2972:25;2956:41;;3022:2;3012:8;3009:16;3006:2;;;3038:1;3035;3028:12;3006:2;;3074:73;3143:3;3132:8;3121:9;3117:24;3074:73;:::i;:::-;3069:2;3062:5;3058:14;3051:97;;3201:2;3190:9;3186:18;3180:25;3175:2;3168:5;3164:14;3157:49;3260:3;3249:9;3245:19;3239:26;3233:3;3226:5;3222:15;3215:51;3299:52;3346:3;3335:9;3331:19;3299:52;:::i;:::-;3293:3;3286:5;3282:15;3275:77;3385:52;3432:3;3421:9;3417:19;3385:52;:::i;:::-;3379:3;3372:5;3368:15;3361:77;3471:67;3534:3;3528;3517:9;3513:19;3471:67;:::i;:::-;3465:3;3458:5;3454:15;3447:92;3575:52;3622:3;3611:9;3607:19;3575:52;:::i;:::-;3566:6;3559:5;3555:18;3548:80;2446:1188;;;;:::o;3639:194::-;;3762:2;3750:9;3741:7;3737:23;3733:32;3730:2;;;3783:6;3775;3768:22;3730:2;-1:-1:-1;3811:16:129;;3720:113;-1:-1:-1;3720:113:129:o;3838:1085::-;;3992:2;3980:9;3971:7;3967:23;3963:32;3960:2;;;4013:6;4005;3998:22;3960:2;4045:16;;-1:-1:-1;4110:14:129;;;4107:2;;;4142:6;4134;4127:22;4107:2;4170:22;;;;4226:4;4208:16;;;4204:27;4201:2;;;4249:6;4241;4234:22;4201:2;4287;4281:9;4329:4;4321:6;4317:17;4384:6;4372:10;4369:22;4364:2;4352:10;4349:18;4346:46;4343:2;;;4395:9;4343:2;4422;4415:22;4461:35;4493:2;4461:35;:::i;:::-;4453:6;4446:51;4530:44;4570:2;4566;4562:11;4530:44;:::i;:::-;4525:2;4517:6;4513:15;4506:69;4614:2;4610;4606:11;4600:18;4643:2;4633:8;4630:16;4627:2;;;4664:6;4656;4649:22;4627:2;4706:79;4777:7;4766:8;4762:2;4758:17;4706:79;:::i;:::-;4701:2;4693:6;4689:15;4682:104;;4833:2;4829;4825:11;4819:18;4814:2;4806:6;4802:15;4795:43;4886:3;4882:2;4878:12;4872:19;4866:3;4858:6;4854:16;4847:45;4911:6;4901:16;;;;;3950:973;;;;:::o;4928:293::-;;5049:2;5037:9;5028:7;5024:23;5020:32;5017:2;;;5070:6;5062;5055:22;5017:2;5107:9;5101:16;5157:4;5150:5;5146:16;5139:5;5136:27;5126:2;;5182:6;5174;5167:22;5126:2;5210:5;5007:214;-1:-1:-1;;;5007:214:129:o;5226:1296::-;;5538:2;5527:9;5523:18;5568:6;5557:9;5550:25;5594:2;5632;5627;5616:9;5612:18;5605:30;5655:6;5690;5684:13;5721:6;5713;5706:22;5759:3;5748:9;5744:19;5737:26;;5798:2;5790:6;5786:15;5772:29;;5819:4;5832:195;5846:6;5843:1;5840:13;5832:195;;;5911:13;;-1:-1:-1;;;;;5907:39:129;5895:52;;6002:15;;;;5967:12;;;;-1:-1:-1;5861:9:129;5832:195;;;-1:-1:-1;;6063:19:129;;;6058:2;6043:18;;6036:47;6133:13;;6155:21;;;6194:12;;;;-1:-1:-1;6231:15:129;;;;6266:4;6279:215;6295:8;6290:3;6287:17;6279:215;;;6368:15;;-1:-1:-1;;;;;6364:41:129;6350:56;;6428:14;;;;6467:17;;;;-1:-1:-1;6314:11:129;6279:215;;;-1:-1:-1;6511:5:129;;5499:1023;-1:-1:-1;;;;;;;;5499:1023:129:o;6527:246::-;6683:2;6668:18;;6716:1;6705:13;;6695:2;;6722:9;6695:2;6742:25;;;6650:123;:::o;6778:383::-;;6927:2;6916:9;6909:21;6959:6;6953:13;7002:6;6997:2;6986:9;6982:18;6975:34;7018:66;7077:6;7072:2;7061:9;7057:18;7052:2;7044:6;7040:15;7018:66;:::i;:::-;7145:2;7124:15;-1:-1:-1;;7120:29:129;7105:45;;;;7152:2;7101:54;;6899:262;-1:-1:-1;;6899:262:129:o;7166:177::-;7312:25;;;7300:2;7285:18;;7267:76::o;7348:242::-;7418:2;7412:9;7448:17;;;7516:22;;;-1:-1:-1;7480:34:129;;7477:62;7474:2;;;7542:9;7474:2;7569;7562:22;7392:198;;-1:-1:-1;7392:198:129:o;7595:258::-;7667:1;7677:113;7691:6;7688:1;7685:13;7677:113;;;7767:11;;;7761:18;7748:11;;;7741:39;7713:2;7706:10;7677:113;;;7808:6;7805:1;7802:13;7799:2;;;7843:1;7834:6;7829:3;7825:16;7818:27;7799:2;;7648:205;;;:::o;7858:133::-;-1:-1:-1;;;;;7935:31:129;;7925:42;;7915:2;;7981:1;7978;7971:12;7905:86;1289:26287:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/3clp/Gyro3CLPPool.sol", "type": "contract", "deployment": {"address": "0x1a076C59321A38bF48431081E8FE3420De67DE8f", "chainid": "137", "blockHeight": 33048619}}