{"abi": [{"inputs": [{"components": [{"components": [{"internalType": "contract IVault", "name": "vault", "type": "address"}, {"internalType": "string", "name": "name", "type": "string"}, {"internalType": "string", "name": "symbol", "type": "string"}, {"internalType": "contract IERC20", "name": "token0", "type": "address"}, {"internalType": "contract IERC20", "name": "token1", "type": "address"}, {"internalType": "uint256", "name": "normalizedWeight0", "type": "uint256"}, {"internalType": "uint256", "name": "normalizedWeight1", "type": "uint256"}, {"internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}, {"internalType": "uint256", "name": "pauseWindowDuration", "type": "uint256"}, {"internalType": "uint256", "name": "bufferPeriodDuration", "type": "uint256"}, {"internalType": "bool", "name": "oracleEnabled", "type": "bool"}, {"internalType": "address", "name": "owner", "type": "address"}], "internalType": "struct ExtensibleWeightedPool2Tokens.NewPoolParams", "name": "baseParams", "type": "tuple"}, {"internalType": "uint256", "name": "sqrtAlpha", "type": "uint256"}, {"internalType": "uint256", "name": "sqrtBeta", "type": "uint256"}], "internalType": "struct GyroTwoPool.GyroParams", "name": "params", "type": "tuple"}, {"internalType": "address", "name": "configAddress", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "owner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "spender", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Approval", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bool", "name": "enabled", "type": "bool"}], "name": "OracleEnabledChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bool", "name": "paused", "type": "bool"}], "name": "PausedStateChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}], "name": "SwapFeePercentageChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "from", "type": "address"}, {"indexed": true, "internalType": "address", "name": "to", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Transfer", "type": "event"}, {"inputs": [], "name": "DOMAIN_SEPARATOR", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "spender", "type": "address"}], "name": "allowance", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "approve", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "balanceOf", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "balanceTokenIn", "type": "uint256"}, {"internalType": "uint256", "name": "balanceTokenOut", "type": "uint256"}, {"internalType": "bool", "name": "tokenInIsToken0", "type": "bool"}], "name": "calculateCurrentValues", "outputs": [{"internalType": "uint256", "name": "currentInvariant", "type": "uint256"}, {"internalType": "uint256", "name": "virtualParamIn", "type": "uint256"}, {"internalType": "uint256", "name": "virtualParamOut", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "decimals", "outputs": [{"internalType": "uint8", "name": "", "type": "uint8"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "decreaseAllowance", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "startIndex", "type": "uint256"}, {"internalType": "uint256", "name": "endIndex", "type": "uint256"}], "name": "dirtyUninitializedOracleSamples", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "enableOracle", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes4", "name": "selector", "type": "bytes4"}], "name": "getActionId", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getAuthorizer", "outputs": [{"internalType": "contract IAuthorizer", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getInvariant", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getLargestSafeQueryWindow", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "pure", "type": "function"}, {"inputs": [], "name": "getLastInvariant", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "enum IPriceOracle.Variable", "name": "variable", "type": "uint8"}], "name": "getLatest", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getMiscData", "outputs": [{"internalType": "int256", "name": "logInvariant", "type": "int256"}, {"internalType": "int256", "name": "logTotalSupply", "type": "int256"}, {"internalType": "uint256", "name": "oracleSampleCreationTimestamp", "type": "uint256"}, {"internalType": "uint256", "name": "oracleIndex", "type": "uint256"}, {"internalType": "bool", "name": "oracleEnabled", "type": "bool"}, {"internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getNormalizedWeights", "outputs": [{"internalType": "uint256[]", "name": "", "type": "uint256[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getOwner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"components": [{"internalType": "enum IPriceOracle.Variable", "name": "variable", "type": "uint8"}, {"internalType": "uint256", "name": "ago", "type": "uint256"}], "internalType": "struct IPriceOracle.OracleAccumulatorQuery[]", "name": "queries", "type": "tuple[]"}], "name": "getPastAccumulators", "outputs": [{"internalType": "int256[]", "name": "results", "type": "int256[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getPausedState", "outputs": [{"internalType": "bool", "name": "paused", "type": "bool"}, {"internalType": "uint256", "name": "pauseWindowEndTime", "type": "uint256"}, {"internalType": "uint256", "name": "bufferPeriodEndTime", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getPoolId", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getRate", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "index", "type": "uint256"}], "name": "getSample", "outputs": [{"internalType": "int256", "name": "logPairPrice", "type": "int256"}, {"internalType": "int256", "name": "accLogPairPrice", "type": "int256"}, {"internalType": "int256", "name": "logBptPrice", "type": "int256"}, {"internalType": "int256", "name": "accLogBptPrice", "type": "int256"}, {"internalType": "int256", "name": "logInvariant", "type": "int256"}, {"internalType": "int256", "name": "accLogInvariant", "type": "int256"}, {"internalType": "uint256", "name": "timestamp", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getSqrtParameters", "outputs": [{"internalType": "uint256[]", "name": "", "type": "uint256[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getSwapFeePercentage", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"components": [{"internalType": "enum IPriceOracle.Variable", "name": "variable", "type": "uint8"}, {"internalType": "uint256", "name": "secs", "type": "uint256"}, {"internalType": "uint256", "name": "ago", "type": "uint256"}], "internalType": "struct IPriceOracle.OracleAverageQuery[]", "name": "queries", "type": "tuple[]"}], "name": "getTimeWeightedAverage", "outputs": [{"internalType": "uint256[]", "name": "results", "type": "uint256[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getTotalSamples", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "pure", "type": "function"}, {"inputs": [], "name": "getVault", "outputs": [{"internalType": "contract IVault", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getVirtualParameters", "outputs": [{"internalType": "uint256[]", "name": "virtualParams", "type": "uint256[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "gyroConfig", "outputs": [{"internalType": "contract IGyroConfig", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "addedValue", "type": "uint256"}], "name": "increaseAllowance", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "name", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}], "name": "nonces", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "onExitPool", "outputs": [{"internalType": "uint256[]", "name": "", "type": "uint256[]"}, {"internalType": "uint256[]", "name": "", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "onJoinPool", "outputs": [{"internalType": "uint256[]", "name": "amountsIn", "type": "uint256[]"}, {"internalType": "uint256[]", "name": "dueProtocolFeeAmounts", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"components": [{"internalType": "enum IVault.SwapKind", "name": "kind", "type": "uint8"}, {"internalType": "contract IERC20", "name": "tokenIn", "type": "address"}, {"internalType": "contract IERC20", "name": "tokenOut", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}, {"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "address", "name": "from", "type": "address"}, {"internalType": "address", "name": "to", "type": "address"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "internalType": "struct IPoolSwapStructs.SwapRequest", "name": "request", "type": "tuple"}, {"internalType": "uint256", "name": "balanceTokenIn", "type": "uint256"}, {"internalType": "uint256", "name": "balanceTokenOut", "type": "uint256"}], "name": "onSwap", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "value", "type": "uint256"}, {"internalType": "uint256", "name": "deadline", "type": "uint256"}, {"internalType": "uint8", "name": "v", "type": "uint8"}, {"internalType": "bytes32", "name": "r", "type": "bytes32"}, {"internalType": "bytes32", "name": "s", "type": "bytes32"}], "name": "permit", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "queryExit", "outputs": [{"internalType": "uint256", "name": "bptIn", "type": "uint256"}, {"internalType": "uint256[]", "name": "amountsOut", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "queryJoin", "outputs": [{"internalType": "uint256", "name": "bptOut", "type": "uint256"}, {"internalType": "uint256[]", "name": "amountsIn", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bool", "name": "paused", "type": "bool"}], "name": "setPaused", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}], "name": "setSwapFeePercentage", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "symbol", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "totalSupply", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transfer", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transferFrom", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"10": "contracts/cpmmv-2/GyroTwoPool.sol", "100": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IAuthorizer.sol", "101": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IBasePool.sol", "102": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IFlashLoanRecipient.sol", "104": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IMinimalSwapInfoPool.sol", "105": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IPoolSwapStructs.sol", "106": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IProtocolFeesCollector.sol", "107": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IVault.sol", "30": "interfaces/IGyroConfig.sol", "31": "libraries/GyroConfigKeys.sol", "32": "libraries/GyroPoolMath.sol", "35": "node_modules/@balancer-labs/v2-pool-utils/contracts/BalancerPoolToken.sol", "38": "node_modules/@balancer-labs/v2-pool-utils/contracts/BasePoolAuthorization.sol", "41": "node_modules/@balancer-labs/v2-pool-utils/contracts/interfaces/IPoolPriceOracle.sol", "42": "node_modules/@balancer-labs/v2-pool-utils/contracts/interfaces/IPriceOracle.sol", "43": "node_modules/@balancer-labs/v2-pool-utils/contracts/oracle/Buffer.sol", "44": "node_modules/@balancer-labs/v2-pool-utils/contracts/oracle/PoolPriceOracle.sol", "45": "node_modules/@balancer-labs/v2-pool-utils/contracts/oracle/QueryProcessor.sol", "46": "node_modules/@balancer-labs/v2-pool-utils/contracts/oracle/Samples.sol", "48": "node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedMath.sol", "50": "node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol", "51": "node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol", "52": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/Authentication.sol", "53": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol", "56": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol", "57": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/ISignaturesValidator.sol", "58": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol", "59": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/InputHelpers.sol", "6": "contracts/cpmmv-2/ExtensibleWeightedPool2Tokens.sol", "60": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/LogCompression.sol", "62": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/TemporarilyPausable.sol", "63": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/WordCodec.sol", "64": "node_modules/@balancer-labs/v2-solidity-utils/contracts/math/FixedPoint.sol", "65": "node_modules/@balancer-labs/v2-solidity-utils/contracts/math/LogExpMath.sol", "66": "node_modules/@balancer-labs/v2-solidity-utils/contracts/math/Math.sol", "67": "node_modules/@balancer-labs/v2-solidity-utils/contracts/misc/IWETH.sol", "7": "contracts/cpmmv-2/Gyro2PoolErrors.sol", "70": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/EIP712.sol", "71": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ERC20.sol", "72": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ERC20Permit.sol", "75": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol", "76": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20Permit.sol", "8": "contracts/cpmmv-2/GyroTwoMath.sol", "80": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/SafeMath.sol", "9": "contracts/cpmmv-2/GyroTwoOracleMath.sol", "99": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IAsset.sol"}, "ast": {"absolutePath": "contracts/cpmmv-2/GyroTwoPool.sol", "exportedSymbols": {"GyroTwoPool": [8352]}, "id": 8353, "license": "GPL-3.0-or-later", "nodeType": "SourceUnit", "nodes": [{"id": 6906, "literals": ["solidity", "^", "0.7", ".0"], "nodeType": "PragmaDirective", "src": "688:23:10"}, {"id": 6907, "literals": ["experimental", "ABIEncoderV2"], "nodeType": "PragmaDirective", "src": "712:33:10"}, {"absolutePath": "node_modules/@balancer-labs/v2-solidity-utils/contracts/math/FixedPoint.sol", "file": "@balancer-labs/v2-solidity-utils/contracts/math/FixedPoint.sol", "id": 6908, "nodeType": "ImportDirective", "scope": 8353, "sourceUnit": 16148, "src": "747:72:10", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol", "file": "@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol", "id": 6909, "nodeType": "ImportDirective", "scope": 8353, "sourceUnit": 18122, "src": "821:83:10", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol", "file": "@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol", "id": 6910, "nodeType": "ImportDirective", "scope": 8353, "sourceUnit": 17912, "src": "905:83:10", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/GyroConfigKeys.sol", "file": "../../libraries/GyroConfigKeys.sol", "id": 6911, "nodeType": "ImportDirective", "scope": 8353, "sourceUnit": 16892, "src": "990:44:10", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/IGyroConfig.sol", "file": "../../interfaces/IGyroConfig.sol", "id": 6912, "nodeType": "ImportDirective", "scope": 8353, "sourceUnit": 16877, "src": "1035:42:10", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/GyroPoolMath.sol", "file": "../../libraries/GyroPoolMath.sol", "id": 6913, "nodeType": "ImportDirective", "scope": 8353, "sourceUnit": 17697, "src": "1078:42:10", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/cpmmv-2/ExtensibleWeightedPool2Tokens.sol", "file": "./ExtensibleWeightedPool2Tokens.sol", "id": 6914, "nodeType": "ImportDirective", "scope": 8353, "sourceUnit": 6299, "src": "1122:45:10", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/cpmmv-2/Gyro2PoolErrors.sol", "file": "./Gyro2PoolErrors.sol", "id": 6915, "nodeType": "ImportDirective", "scope": 8353, "sourceUnit": 6308, "src": "1168:31:10", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/cpmmv-2/GyroTwoMath.sol", "file": "./GyroTwoMath.sol", "id": 6916, "nodeType": "ImportDirective", "scope": 8353, "sourceUnit": 6783, "src": "1200:27:10", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/cpmmv-2/GyroTwoOracleMath.sol", "file": "./GyroTwoOracleMath.sol", "id": 6917, "nodeType": "ImportDirective", "scope": 8353, "sourceUnit": 6905, "src": "1228:33:10", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 6918, "name": "ExtensibleWeightedPool2Tokens", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 6298, "src": "1287:29:10", "typeDescriptions": {"typeIdentifier": "t_contract$_ExtensibleWeightedPool2Tokens_$6298", "typeString": "contract ExtensibleWeightedPool2Tokens"}}, "id": 6919, "nodeType": "InheritanceSpecifier", "src": "1287:29:10"}, {"baseName": {"id": 6920, "name": "GyroTwoOracleMath", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 6904, "src": "1318:17:10", "typeDescriptions": {"typeIdentifier": "t_contract$_GyroTwoOracleMath_$6904", "typeString": "contract GyroTwoOracleMath"}}, "id": 6921, "nodeType": "InheritanceSpecifier", "src": "1318:17:10"}], "contractDependencies": [6298, 6904, 18363, 19636, 20101, 21451, 21929, 21948, 24138, 24202, 24249, 24278, 24333, 28860, 29019, 29038, 32009, 32045, 32056], "contractKind": "contract", "fullyImplemented": true, "id": 8352, "linearizedBaseContracts": [8352, 6904, 6298, 20101, 24333, 24278, 21451, 29038, 18363, 28860, 32009, 32045, 21929, 24138, 19636, 29019, 32056, 21948, 24202, 24249], "name": "GyroTwoPool", "nodeType": "ContractDefinition", "nodes": [{"id": 6924, "libraryName": {"id": 6922, "name": "FixedPoint", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 16147, "src": "1348:10:10", "typeDescriptions": {"typeIdentifier": "t_contract$_FixedPoint_$16147", "typeString": "library FixedPoint"}}, "nodeType": "UsingForDirective", "src": "1342:29:10", "typeName": {"id": 6923, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1363:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"id": 6927, "libraryName": {"id": 6925, "name": "WeightedPoolUserDataHelpers", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 18121, "src": "1382:27:10", "typeDescriptions": {"typeIdentifier": "t_contract$_WeightedPoolUserDataHelpers_$18121", "typeString": "library WeightedPoolUserDataHelpers"}}, "nodeType": "UsingForDirective", "src": "1376:44:10", "typeName": {"id": 6926, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "1414:5:10", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}}, {"id": 6930, "libraryName": {"id": 6928, "name": "WeightedPool2TokensMiscData", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 17911, "src": "1431:27:10", "typeDescriptions": {"typeIdentifier": "t_contract$_WeightedPool2TokensMiscData_$17911", "typeString": "library WeightedPool2TokensMiscData"}}, "nodeType": "UsingForDirective", "src": "1425:46:10", "typeName": {"id": 6929, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1463:7:10", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}}, {"constant": false, "id": 6932, "mutability": "immutable", "name": "_sqrtAlpha", "nodeType": "VariableDeclaration", "scope": 8352, "src": "1477:36:10", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 6931, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1477:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "private"}, {"constant": false, "id": 6934, "mutability": "immutable", "name": "_sqrtBeta", "nodeType": "VariableDeclaration", "scope": 8352, "src": "1519:35:10", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 6933, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1519:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "private"}, {"constant": false, "functionSelector": "44bbdb55", "id": 6936, "mutability": "mutable", "name": "gyroConfig", "nodeType": "VariableDeclaration", "scope": 8352, "src": "1561:29:10", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$16876", "typeString": "contract IGyroConfig"}, "typeName": {"id": 6935, "name": "IGyroConfig", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 16876, "src": "1561:11:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$16876", "typeString": "contract IGyroConfig"}}, "visibility": "public"}, {"canonicalName": "GyroTwoPool.GyroParams", "id": 6943, "members": [{"constant": false, "id": 6938, "mutability": "mutable", "name": "baseParams", "nodeType": "VariableDeclaration", "scope": 6943, "src": "1625:24:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$4020_storage_ptr", "typeString": "struct ExtensibleWeightedPool2Tokens.NewPoolParams"}, "typeName": {"id": 6937, "name": "NewPoolParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 4020, "src": "1625:13:10", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$4020_storage_ptr", "typeString": "struct ExtensibleWeightedPool2Tokens.NewPoolParams"}}, "visibility": "internal"}, {"constant": false, "id": 6940, "mutability": "mutable", "name": "sqrtAlpha", "nodeType": "VariableDeclaration", "scope": 6943, "src": "1659:17:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 6939, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1659:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 6942, "mutability": "mutable", "name": "sqrtBeta", "nodeType": "VariableDeclaration", "scope": 6943, "src": "1719:16:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 6941, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1719:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "name": "GyroParams", "nodeType": "StructDefinition", "scope": 8352, "src": "1597:212:10", "visibility": "public"}, {"body": {"id": 6980, "nodeType": "Block", "src": "1925:222:10", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 6959, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 6955, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6945, "src": "1944:6:10", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$6943_memory_ptr", "typeString": "struct GyroTwoPool.GyroParams memory"}}, "id": 6956, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "sqrtAlpha", "nodeType": "MemberAccess", "referencedDeclaration": 6940, "src": "1944:16:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 6957, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6945, "src": "1963:6:10", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$6943_memory_ptr", "typeString": "struct GyroTwoPool.GyroParams memory"}}, "id": 6958, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "sqrtBeta", "nodeType": "MemberAccess", "referencedDeclaration": 6942, "src": "1963:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1944:34:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 6960, "name": "Gyro2PoolErrors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6307, "src": "1980:15:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2PoolErrors_$6307_$", "typeString": "type(library Gyro2PoolErrors)"}}, "id": 6961, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "SQRT_PARAMS_WRONG", "nodeType": "MemberAccess", "referencedDeclaration": 6303, "src": "1980:33:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 6954, "name": "_require", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22909, "src": "1935:8:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 6962, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1935:79:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 6963, "nodeType": "ExpressionStatement", "src": "1935:79:10"}, {"expression": {"id": 6967, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 6964, "name": "_sqrtAlpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6932, "src": "2024:10:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 6965, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6945, "src": "2037:6:10", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$6943_memory_ptr", "typeString": "struct GyroTwoPool.GyroParams memory"}}, "id": 6966, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "sqrtAlpha", "nodeType": "MemberAccess", "referencedDeclaration": 6940, "src": "2037:16:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2024:29:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 6968, "nodeType": "ExpressionStatement", "src": "2024:29:10"}, {"expression": {"id": 6972, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 6969, "name": "_sqrtBeta", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6934, "src": "2063:9:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 6970, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6945, "src": "2075:6:10", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$6943_memory_ptr", "typeString": "struct GyroTwoPool.GyroParams memory"}}, "id": 6971, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "sqrtBeta", "nodeType": "MemberAccess", "referencedDeclaration": 6942, "src": "2075:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2063:27:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 6973, "nodeType": "ExpressionStatement", "src": "2063:27:10"}, {"expression": {"id": 6978, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 6974, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6936, "src": "2101:10:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$16876", "typeString": "contract IGyroConfig"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 6976, "name": "configAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6947, "src": "2126:13:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 6975, "name": "IGyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16876, "src": "2114:11:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IGyroConfig_$16876_$", "typeString": "type(contract IGyroConfig)"}}, "id": 6977, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2114:26:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$16876", "typeString": "contract IGyroConfig"}}, "src": "2101:39:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$16876", "typeString": "contract IGyroConfig"}}, "id": 6979, "nodeType": "ExpressionStatement", "src": "2101:39:10"}]}, "id": 6981, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"expression": {"id": 6950, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6945, "src": "1906:6:10", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$6943_memory_ptr", "typeString": "struct GyroTwoPool.GyroParams memory"}}, "id": 6951, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "baseParams", "nodeType": "MemberAccess", "referencedDeclaration": 6938, "src": "1906:17:10", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$4020_memory_ptr", "typeString": "struct ExtensibleWeightedPool2Tokens.NewPoolParams memory"}}], "id": 6952, "modifierName": {"id": 6949, "name": "ExtensibleWeightedPool2Tokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6298, "src": "1876:29:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ExtensibleWeightedPool2Tokens_$6298_$", "typeString": "type(contract ExtensibleWeightedPool2Tokens)"}}, "nodeType": "ModifierInvocation", "src": "1876:48:10"}], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 6948, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 6945, "mutability": "mutable", "name": "params", "nodeType": "VariableDeclaration", "scope": 6981, "src": "1827:24:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$6943_memory_ptr", "typeString": "struct GyroTwoPool.GyroParams"}, "typeName": {"id": 6944, "name": "GyroParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 6943, "src": "1827:10:10", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$6943_storage_ptr", "typeString": "struct GyroTwoPool.GyroParams"}}, "visibility": "internal"}, {"constant": false, "id": 6947, "mutability": "mutable", "name": "configAddress", "nodeType": "VariableDeclaration", "scope": 6981, "src": "1853:21:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 6946, "name": "address", "nodeType": "ElementaryTypeName", "src": "1853:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1826:49:10"}, "returnParameters": {"id": 6953, "nodeType": "ParameterList", "parameters": [], "src": "1925:0:10"}, "scope": 8352, "src": "1815:332:10", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 6990, "nodeType": "Block", "src": "2329:41:10", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 6987, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [7027, 7040], "referencedDeclaration": 7027, "src": "2346:15:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function () view returns (uint256[] memory)"}}, "id": 6988, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2346:17:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "functionReturnParameters": 6986, "id": 6989, "nodeType": "Return", "src": "2339:24:10"}]}, "functionSelector": "707dcd1e", "id": 6991, "implemented": true, "kind": "function", "modifiers": [], "name": "getSqrtParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 6982, "nodeType": "ParameterList", "parameters": [], "src": "2285:2:10"}, "returnParameters": {"id": 6986, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 6985, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 6991, "src": "2311:16:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 6983, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2311:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 6984, "nodeType": "ArrayTypeName", "src": "2311:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "2310:18:10"}, "scope": 8352, "src": "2259:111:10", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 7026, "nodeType": "Block", "src": "2452:213:10", "statements": [{"assignments": [7001], "declarations": [{"constant": false, "id": 7001, "mutability": "mutable", "name": "virtualParameters", "nodeType": "VariableDeclaration", "scope": 7026, "src": "2462:34:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 6999, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2462:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7000, "nodeType": "ArrayTypeName", "src": "2462:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 7007, "initialValue": {"arguments": [{"hexValue": "32", "id": 7005, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2513:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 7004, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "2499:13:10", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 7002, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2503:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7003, "nodeType": "ArrayTypeName", "src": "2503:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 7006, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2499:16:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "2462:53:10"}, {"expression": {"id": 7014, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 7008, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7001, "src": "2525:17:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7010, "indexExpression": {"hexValue": "30", "id": 7009, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2543:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "2525:20:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "74727565", "id": 7012, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "2564:4:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 7011, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [7027, 7040], "referencedDeclaration": 7040, "src": "2548:15:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 7013, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2548:21:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2525:44:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7015, "nodeType": "ExpressionStatement", "src": "2525:44:10"}, {"expression": {"id": 7022, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 7016, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7001, "src": "2579:17:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7018, "indexExpression": {"hexValue": "31", "id": 7017, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2597:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "2579:20:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "66616c7365", "id": 7020, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "2618:5:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 7019, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [7027, 7040], "referencedDeclaration": 7040, "src": "2602:15:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 7021, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2602:22:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2579:45:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7023, "nodeType": "ExpressionStatement", "src": "2579:45:10"}, {"expression": {"id": 7024, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7001, "src": "2641:17:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "functionReturnParameters": 6996, "id": 7025, "nodeType": "Return", "src": "2634:24:10"}]}, "id": 7027, "implemented": true, "kind": "function", "modifiers": [], "name": "_sqrtParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 6992, "nodeType": "ParameterList", "parameters": [], "src": "2400:2:10"}, "returnParameters": {"id": 6996, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 6995, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7027, "src": "2434:16:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 6993, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2434:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 6994, "nodeType": "ArrayTypeName", "src": "2434:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "2433:18:10"}, "scope": 8352, "src": "2376:289:10", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"body": {"id": 7039, "nodeType": "Block", "src": "2753:59:10", "statements": [{"expression": {"condition": {"id": 7034, "name": "parameter0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7029, "src": "2770:10:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 7036, "name": "_sqrtBeta", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6934, "src": "2796:9:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7037, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "2770:35:10", "trueExpression": {"id": 7035, "name": "_sqrtAlpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6932, "src": "2783:10:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 7033, "id": 7038, "nodeType": "Return", "src": "2763:42:10"}]}, "id": 7040, "implemented": true, "kind": "function", "modifiers": [], "name": "_sqrtParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 7030, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7029, "mutability": "mutable", "name": "parameter0", "nodeType": "VariableDeclaration", "scope": 7040, "src": "2696:15:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 7028, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2696:4:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "2695:17:10"}, "returnParameters": {"id": 7033, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7032, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7040, "src": "2744:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7031, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2744:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2743:9:10"}, "scope": 8352, "src": "2671:141:10", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"body": {"id": 7077, "nodeType": "Block", "src": "3007:314:10", "statements": [{"assignments": [null, 7051, null], "declarations": [null, {"constant": false, "id": 7051, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 7077, "src": "3020:25:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7049, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3020:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7050, "nodeType": "ArrayTypeName", "src": "3020:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, null], "id": 7058, "initialValue": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 7055, "name": "getPoolId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4208, "src": "3076:9:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$", "typeString": "function () view returns (bytes32)"}}, "id": 7056, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3076:11:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 7052, "name": "getVault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18192, "src": "3051:8:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IVault_$22556_$", "typeString": "function () view returns (contract IVault)"}}, "id": 7053, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3051:10:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IVault_$22556", "typeString": "contract IVault"}}, "id": 7054, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getPoolTokens", "nodeType": "MemberAccess", "referencedDeclaration": 22312, "src": "3051:24:10", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_array$_t_contract$_IERC20_$24138_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$", "typeString": "function (bytes32) view external returns (contract IERC20[] memory,uint256[] memory,uint256)"}}, "id": 7057, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3051:37:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_array$_t_contract$_IERC20_$24138_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$", "typeString": "tuple(contract IERC20[] memory,uint256[] memory,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "3017:71:10"}, {"expression": {"id": 7075, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [null, {"baseExpression": {"id": 7059, "name": "virtualParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7045, "src": "3221:13:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7061, "indexExpression": {"hexValue": "30", "id": 7060, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3235:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "3221:16:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 7062, "name": "virtualParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7045, "src": "3239:13:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7064, "indexExpression": {"hexValue": "31", "id": 7063, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3253:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "3239:16:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 7065, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "3218:38:10", "typeDescriptions": {"typeIdentifier": "t_tuple$__$_t_uint256_$_t_uint256_$", "typeString": "tuple(,uint256,uint256)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"baseExpression": {"id": 7067, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7051, "src": "3283:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7069, "indexExpression": {"hexValue": "30", "id": 7068, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3292:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3283:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 7070, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7051, "src": "3296:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7072, "indexExpression": {"hexValue": "31", "id": 7071, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3305:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3296:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "74727565", "id": 7073, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3309:4:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 7066, "name": "_calculateCurrentValues", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7550, "src": "3259:23:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256,bool) view returns (uint256,uint256,uint256)"}}, "id": 7074, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3259:55:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256,uint256)"}}, "src": "3218:96:10", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 7076, "nodeType": "ExpressionStatement", "src": "3218:96:10"}]}, "documentation": {"id": 7041, "nodeType": "StructuredDocumentation", "src": "2818:97:10", "text": "@dev Returns virtual offsets a and b for reserves x and y respectively, as in (x+a)*(y+b)=L^2"}, "functionSelector": "8dd9f89d", "id": 7078, "implemented": true, "kind": "function", "modifiers": [], "name": "getVirtualParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 7042, "nodeType": "ParameterList", "parameters": [], "src": "2949:2:10"}, "returnParameters": {"id": 7046, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7045, "mutability": "mutable", "name": "virtualParams", "nodeType": "VariableDeclaration", "scope": 7078, "src": "2975:30:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7043, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2975:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7044, "nodeType": "ArrayTypeName", "src": "2975:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "2974:32:10"}, "scope": 8352, "src": "2920:401:10", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 7126, "nodeType": "Block", "src": "3455:272:10", "statements": [{"assignments": [7093], "declarations": [{"constant": false, "id": 7093, "mutability": "mutable", "name": "virtualParameters", "nodeType": "VariableDeclaration", "scope": 7126, "src": "3465:34:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7091, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3465:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7092, "nodeType": "ArrayTypeName", "src": "3465:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 7099, "initialValue": {"arguments": [{"hexValue": "32", "id": 7097, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3516:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 7096, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "3502:13:10", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 7094, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3506:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7095, "nodeType": "ArrayTypeName", "src": "3506:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 7098, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3502:16:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "3465:53:10"}, {"expression": {"id": 7110, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 7100, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7093, "src": "3529:17:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7102, "indexExpression": {"hexValue": "30", "id": 7101, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3547:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "3529:20:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "74727565", "id": 7104, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3571:4:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, {"baseExpression": {"id": 7105, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7081, "src": "3577:10:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7107, "indexExpression": {"hexValue": "31", "id": 7106, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3588:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3577:13:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7108, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7083, "src": "3592:9:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 7103, "name": "_virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7154, "src": "3552:18:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (bool,uint256,uint256) view returns (uint256)"}}, "id": 7109, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3552:50:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3529:73:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7111, "nodeType": "ExpressionStatement", "src": "3529:73:10"}, {"expression": {"id": 7122, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 7112, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7093, "src": "3612:17:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7114, "indexExpression": {"hexValue": "31", "id": 7113, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3630:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "3612:20:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "66616c7365", "id": 7116, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3654:5:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, {"baseExpression": {"id": 7117, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7081, "src": "3661:10:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7119, "indexExpression": {"hexValue": "30", "id": 7118, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3672:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3661:13:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7120, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7083, "src": "3676:9:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 7115, "name": "_virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7154, "src": "3635:18:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (bool,uint256,uint256) view returns (uint256)"}}, "id": 7121, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3635:51:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3612:74:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7123, "nodeType": "ExpressionStatement", "src": "3612:74:10"}, {"expression": {"id": 7124, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7093, "src": "3703:17:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "functionReturnParameters": 7088, "id": 7125, "nodeType": "Return", "src": "3696:24:10"}]}, "id": 7127, "implemented": true, "kind": "function", "modifiers": [], "name": "_getVirtualParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 7084, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7081, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 7127, "src": "3358:27:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7079, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3358:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7080, "nodeType": "ArrayTypeName", "src": "3358:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 7083, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 7127, "src": "3387:17:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7082, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3387:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3357:48:10"}, "returnParameters": {"id": 7088, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7087, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7127, "src": "3437:16:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7085, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3437:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7086, "nodeType": "ArrayTypeName", "src": "3437:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "3436:18:10"}, "scope": 8352, "src": "3327:400:10", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"body": {"id": 7153, "nodeType": "Block", "src": "3886:210:10", "statements": [{"expression": {"condition": {"id": 7138, "name": "parameter0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7129, "src": "3915:10:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"components": [{"arguments": [{"id": 7147, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7133, "src": "4067:9:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7148, "name": "sqrtParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7131, "src": "4078:9:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 7145, "name": "GyroTwoMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6782, "src": "4027:11:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroTwoMath_$6782_$", "typeString": "type(library GyroTwoMath)"}}, "id": 7146, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateVirtualParameter1", "nodeType": "MemberAccess", "referencedDeclaration": 6781, "src": "4027:39:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 7149, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4027:61:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 7150, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4026:63:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7151, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "3915:174:10", "trueExpression": {"components": [{"arguments": [{"id": 7141, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7133, "src": "3985:9:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7142, "name": "sqrtParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7131, "src": "3996:9:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 7139, "name": "GyroTwoMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6782, "src": "3945:11:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroTwoMath_$6782_$", "typeString": "type(library GyroTwoMath)"}}, "id": 7140, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateVirtualParameter0", "nodeType": "MemberAccess", "referencedDeclaration": 6765, "src": "3945:39:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 7143, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3945:61:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 7144, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "3944:63:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 7137, "id": 7152, "nodeType": "Return", "src": "3896:193:10"}]}, "id": 7154, "implemented": true, "kind": "function", "modifiers": [], "name": "_virtualParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 7134, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7129, "mutability": "mutable", "name": "parameter0", "nodeType": "VariableDeclaration", "scope": 7154, "src": "3770:15:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 7128, "name": "bool", "nodeType": "ElementaryTypeName", "src": "3770:4:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 7131, "mutability": "mutable", "name": "sqrtParam", "nodeType": "VariableDeclaration", "scope": 7154, "src": "3795:17:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7130, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3795:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7133, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 7154, "src": "3822:17:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7132, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3822:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3760:85:10"}, "returnParameters": {"id": 7137, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7136, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7154, "src": "3877:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7135, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3877:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3876:9:10"}, "scope": 8352, "src": "3733:363:10", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"baseFunctions": [4503], "body": {"id": 7196, "nodeType": "Block", "src": "4237:388:10", "statements": [{"assignments": [null, 7165, null], "declarations": [null, {"constant": false, "id": 7165, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 7196, "src": "4250:25:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7163, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4250:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7164, "nodeType": "ArrayTypeName", "src": "4250:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, null], "id": 7172, "initialValue": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 7169, "name": "getPoolId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4208, "src": "4306:9:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$", "typeString": "function () view returns (bytes32)"}}, "id": 7170, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4306:11:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 7166, "name": "getVault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18192, "src": "4281:8:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IVault_$22556_$", "typeString": "function () view returns (contract IVault)"}}, "id": 7167, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4281:10:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IVault_$22556", "typeString": "contract IVault"}}, "id": 7168, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getPoolTokens", "nodeType": "MemberAccess", "referencedDeclaration": 22312, "src": "4281:24:10", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_array$_t_contract$_IERC20_$24138_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$", "typeString": "function (bytes32) view external returns (contract IERC20[] memory,uint256[] memory,uint256)"}}, "id": 7171, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4281:37:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_array$_t_contract$_IERC20_$24138_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$", "typeString": "tuple(contract IERC20[] memory,uint256[] memory,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "4247:71:10"}, {"assignments": [7177], "declarations": [{"constant": false, "id": 7177, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 7196, "src": "4328:27:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7175, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4328:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7176, "nodeType": "ArrayTypeName", "src": "4328:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 7180, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 7178, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [7027, 7040], "referencedDeclaration": 7027, "src": "4358:15:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function () view returns (uint256[] memory)"}}, "id": 7179, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4358:17:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "4328:47:10"}, {"expression": {"arguments": [{"id": 7182, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7165, "src": "4520:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}], "id": 7181, "name": "_upscaleArray", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6080, "src": "4506:13:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$", "typeString": "function (uint256[] memory) view"}}, "id": 7183, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4506:23:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 7184, "nodeType": "ExpressionStatement", "src": "4506:23:10"}, {"expression": {"arguments": [{"id": 7187, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7165, "src": "4579:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"baseExpression": {"id": 7188, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7177, "src": "4589:10:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7190, "indexExpression": {"hexValue": "30", "id": 7189, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4600:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4589:13:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 7191, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7177, "src": "4604:10:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7193, "indexExpression": {"hexValue": "31", "id": 7192, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4615:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4604:13:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 7185, "name": "GyroTwoMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6782, "src": "4547:11:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroTwoMath_$6782_$", "typeString": "type(library GyroTwoMath)"}}, "id": 7186, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 6369, "src": "4547:31:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256)"}}, "id": 7194, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4547:71:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 7160, "id": 7195, "nodeType": "Return", "src": "4540:78:10"}]}, "documentation": {"id": 7155, "nodeType": "StructuredDocumentation", "src": "4102:67:10", "text": " @dev Returns the current value of the invariant."}, "functionSelector": "c0ff1a15", "id": 7197, "implemented": true, "kind": "function", "modifiers": [], "name": "getInvariant", "nodeType": "FunctionDefinition", "overrides": {"id": 7157, "nodeType": "OverrideSpecifier", "overrides": [], "src": "4210:8:10"}, "parameters": {"id": 7156, "nodeType": "ParameterList", "parameters": [], "src": "4195:2:10"}, "returnParameters": {"id": 7160, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7159, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7197, "src": "4228:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7158, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4228:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4227:9:10"}, "scope": 8352, "src": "4174:451:10", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"baseFunctions": [4663], "body": {"id": 7365, "nodeType": "Block", "src": "4855:2542:10", "statements": [{"assignments": [7216], "declarations": [{"constant": false, "id": 7216, "mutability": "mutable", "name": "tokenInIsToken0", "nodeType": "VariableDeclaration", "scope": 7365, "src": "4865:20:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 7215, "name": "bool", "nodeType": "ElementaryTypeName", "src": "4865:4:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "id": 7221, "initialValue": {"commonType": {"typeIdentifier": "t_contract$_IERC20_$24138", "typeString": "contract IERC20"}, "id": 7220, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 7217, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7199, "src": "4888:7:10", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$24248_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 7218, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenIn", "nodeType": "MemberAccess", "referencedDeclaration": 24233, "src": "4888:15:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$24138", "typeString": "contract IERC20"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 7219, "name": "_token0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3947, "src": "4907:7:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$24138", "typeString": "contract IERC20"}}, "src": "4888:26:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "VariableDeclarationStatement", "src": "4865:49:10"}, {"assignments": [7223], "declarations": [{"constant": false, "id": 7223, "mutability": "mutable", "name": "scalingFactorTokenIn", "nodeType": "VariableDeclaration", "scope": 7365, "src": "4925:28:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7222, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4925:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 7227, "initialValue": {"arguments": [{"id": 7225, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7216, "src": "4971:15:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 7224, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6027, "src": "4956:14:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 7226, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4956:31:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "4925:62:10"}, {"assignments": [7229], "declarations": [{"constant": false, "id": 7229, "mutability": "mutable", "name": "scalingFactorTokenOut", "nodeType": "VariableDeclaration", "scope": 7365, "src": "4997:29:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7228, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4997:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 7234, "initialValue": {"arguments": [{"id": 7232, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "5044:16:10", "subExpression": {"id": 7231, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7216, "src": "5045:15:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 7230, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6027, "src": "5029:14:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 7233, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5029:32:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "4997:64:10"}, {"expression": {"id": 7240, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 7235, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7201, "src": "5115:14:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 7237, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7201, "src": "5141:14:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7238, "name": "scalingFactorTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7223, "src": "5157:20:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 7236, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6044, "src": "5132:8:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 7239, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5132:46:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5115:63:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7241, "nodeType": "ExpressionStatement", "src": "5115:63:10"}, {"expression": {"id": 7247, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 7242, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7203, "src": "5188:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 7244, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7203, "src": "5215:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7245, "name": "scalingFactorTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7229, "src": "5232:21:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 7243, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6044, "src": "5206:8:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 7246, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5206:48:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5188:66:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7248, "nodeType": "ExpressionStatement", "src": "5188:66:10"}, {"assignments": [7250, 7252, 7254], "declarations": [{"constant": false, "id": 7250, "mutability": "mutable", "name": "currentInvariant", "nodeType": "VariableDeclaration", "scope": 7365, "src": "5344:24:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7249, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5344:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7252, "mutability": "mutable", "name": "virtualParamIn", "nodeType": "VariableDeclaration", "scope": 7365, "src": "5370:22:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7251, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5370:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7254, "mutability": "mutable", "name": "virtualParamOut", "nodeType": "VariableDeclaration", "scope": 7365, "src": "5394:23:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7253, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5394:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 7260, "initialValue": {"arguments": [{"id": 7256, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7201, "src": "5458:14:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7257, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7203, "src": "5486:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7258, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7216, "src": "5515:15:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 7255, "name": "_calculateCurrentValues", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7550, "src": "5421:23:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256,bool) view returns (uint256,uint256,uint256)"}}, "id": 7259, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5421:119:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "5343:197:10"}, {"expression": {"arguments": [{"expression": {"id": 7262, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7199, "src": "5636:7:10", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$24248_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 7263, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "lastChangeBlock", "nodeType": "MemberAccess", "referencedDeclaration": 24241, "src": "5636:23:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"condition": {"id": 7264, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7216, "src": "5673:15:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 7266, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7203, "src": "5708:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7267, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "5673:50:10", "trueExpression": {"id": 7265, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7201, "src": "5691:14:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"condition": {"id": 7268, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7216, "src": "5737:15:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 7270, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7201, "src": "5773:14:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7271, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "5737:50:10", "trueExpression": {"id": 7269, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7203, "src": "5755:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"condition": {"id": 7272, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7216, "src": "5801:15:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 7274, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7254, "src": "5836:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7275, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "5801:50:10", "trueExpression": {"id": 7273, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7252, "src": "5819:14:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"condition": {"id": 7276, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7216, "src": "5865:15:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 7278, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7252, "src": "5901:14:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7279, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "5865:50:10", "trueExpression": {"id": 7277, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7254, "src": "5883:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 7261, "name": "_updateOracle", "nodeType": "Identifier", "overloadedDeclarations": [8339, 8351], "referencedDeclaration": 8339, "src": "5609:13:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256,uint256,uint256,uint256)"}}, "id": 7280, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5609:316:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 7281, "nodeType": "ExpressionStatement", "src": "5609:316:10"}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_SwapKind_$22380", "typeString": "enum IVault.SwapKind"}, "id": 7287, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 7282, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7199, "src": "5940:7:10", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$24248_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 7283, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kind", "nodeType": "MemberAccess", "referencedDeclaration": 24231, "src": "5940:12:10", "typeDescriptions": {"typeIdentifier": "t_enum$_SwapKind_$22380", "typeString": "enum IVault.SwapKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 7284, "name": "IVault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22556, "src": "5956:6:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IVault_$22556_$", "typeString": "type(contract IVault)"}}, "id": 7285, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "SwapKind", "nodeType": "MemberAccess", "referencedDeclaration": 22380, "src": "5956:15:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_SwapKind_$22380_$", "typeString": "type(enum IVault.SwapKind)"}}, "id": 7286, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "GIVEN_IN", "nodeType": "MemberAccess", "src": "5956:24:10", "typeDescriptions": {"typeIdentifier": "t_enum$_SwapKind_$22380", "typeString": "enum IVault.SwapKind"}}, "src": "5940:40:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 7363, "nodeType": "Block", "src": "6742:649:10", "statements": [{"expression": {"id": 7335, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 7327, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7199, "src": "6756:7:10", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$24248_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 7329, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 24237, "src": "6756:14:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 7331, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7199, "src": "6782:7:10", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$24248_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 7332, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 24237, "src": "6782:14:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7333, "name": "scalingFactorTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7229, "src": "6798:21:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 7330, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6044, "src": "6773:8:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 7334, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6773:47:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6756:64:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7336, "nodeType": "ExpressionStatement", "src": "6756:64:10"}, {"assignments": [7338], "declarations": [{"constant": false, "id": 7338, "mutability": "mutable", "name": "amountIn", "nodeType": "VariableDeclaration", "scope": 7363, "src": "6835:16:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7337, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6835:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 7347, "initialValue": {"arguments": [{"id": 7340, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7199, "src": "6870:7:10", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$24248_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, {"id": 7341, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7201, "src": "6879:14:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7342, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7203, "src": "6895:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7343, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7252, "src": "6912:14:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7344, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7254, "src": "6928:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7345, "name": "currentInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7250, "src": "6945:16:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_SwapRequest_$24248_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 7339, "name": "_onSwapGivenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7422, "src": "6854:15:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_SwapRequest_$24248_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (struct IPoolSwapStructs.SwapRequest memory,uint256,uint256,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 7346, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6854:108:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6835:127:10"}, {"expression": {"id": 7353, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 7348, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7338, "src": "7047:8:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 7350, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7338, "src": "7071:8:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7351, "name": "scalingFactorTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7223, "src": "7081:20:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 7349, "name": "_downscaleUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6150, "src": "7058:12:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 7352, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7058:44:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7047:55:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7354, "nodeType": "ExpressionStatement", "src": "7047:55:10"}, {"expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 7357, "name": "getSwapFeePercentage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4274, "src": "7344:20:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 7358, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7344:22:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7359, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "complement", "nodeType": "MemberAccess", "referencedDeclaration": 16146, "src": "7344:33:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256) pure returns (uint256)"}}, "id": 7360, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7344:35:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 7355, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7338, "src": "7329:8:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7356, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "divUp", "nodeType": "MemberAccess", "referencedDeclaration": 16050, "src": "7329:14:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 7361, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7329:51:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 7214, "id": 7362, "nodeType": "Return", "src": "7322:58:10"}]}, "id": 7364, "nodeType": "IfStatement", "src": "5936:1455:10", "trueBody": {"id": 7326, "nodeType": "Block", "src": "5982:754:10", "statements": [{"assignments": [7289], "declarations": [{"constant": false, "id": 7289, "mutability": "mutable", "name": "feeAmount", "nodeType": "VariableDeclaration", "scope": 7326, "src": "6199:17:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7288, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6199:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 7296, "initialValue": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 7293, "name": "getSwapFeePercentage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4274, "src": "6240:20:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 7294, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6240:22:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"id": 7290, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7199, "src": "6219:7:10", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$24248_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 7291, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 24237, "src": "6219:14:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7292, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mulUp", "nodeType": "MemberAccess", "referencedDeclaration": 15964, "src": "6219:20:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 7295, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6219:44:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6199:64:10"}, {"expression": {"id": 7308, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 7297, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7199, "src": "6363:7:10", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$24248_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 7299, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 24237, "src": "6363:14:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [{"id": 7304, "name": "feeAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7289, "src": "6408:9:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"id": 7301, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7199, "src": "6389:7:10", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$24248_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 7302, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 24237, "src": "6389:14:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7303, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 15882, "src": "6389:18:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 7305, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6389:29:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7306, "name": "scalingFactorTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7223, "src": "6420:20:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 7300, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6044, "src": "6380:8:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 7307, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6380:61:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6363:78:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7309, "nodeType": "ExpressionStatement", "src": "6363:78:10"}, {"assignments": [7311], "declarations": [{"constant": false, "id": 7311, "mutability": "mutable", "name": "amountOut", "nodeType": "VariableDeclaration", "scope": 7326, "src": "6456:17:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7310, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6456:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 7320, "initialValue": {"arguments": [{"id": 7313, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7199, "src": "6491:7:10", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$24248_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, {"id": 7314, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7201, "src": "6500:14:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7315, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7203, "src": "6516:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7316, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7252, "src": "6533:14:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7317, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7254, "src": "6549:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7318, "name": "currentInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7250, "src": "6566:16:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_SwapRequest_$24248_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 7312, "name": "_onSwapGivenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7394, "src": "6476:14:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_SwapRequest_$24248_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (struct IPoolSwapStructs.SwapRequest memory,uint256,uint256,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 7319, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6476:107:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6456:127:10"}, {"expression": {"arguments": [{"id": 7322, "name": "amountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7311, "src": "6692:9:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7323, "name": "scalingFactorTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7229, "src": "6703:21:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 7321, "name": "_downscaleDown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6097, "src": "6677:14:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 7324, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6677:48:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 7214, "id": 7325, "nodeType": "Return", "src": "6670:55:10"}]}}]}, "functionSelector": "9d2c110c", "id": 7366, "implemented": true, "kind": "function", "modifiers": [{"id": 7207, "modifierName": {"id": 7206, "name": "whenNotPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21339, "src": "4797:13:10", "typeDescriptions": {"typeIdentifier": "t_modifier$__$", "typeString": "modifier ()"}}, "nodeType": "ModifierInvocation", "src": "4797:13:10"}, {"arguments": [{"expression": {"id": 7209, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7199, "src": "4821:7:10", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$24248_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 7210, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "poolId", "nodeType": "MemberAccess", "referencedDeclaration": 24239, "src": "4821:14:10", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "id": 7211, "modifierName": {"id": 7208, "name": "onlyVault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3995, "src": "4811:9:10", "typeDescriptions": {"typeIdentifier": "t_modifier$_t_bytes32_$", "typeString": "modifier (bytes32)"}}, "nodeType": "ModifierInvocation", "src": "4811:25:10"}], "name": "onSwap", "nodeType": "FunctionDefinition", "overrides": {"id": 7205, "nodeType": "OverrideSpecifier", "overrides": [], "src": "4788:8:10"}, "parameters": {"id": 7204, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7199, "mutability": "mutable", "name": "request", "nodeType": "VariableDeclaration", "scope": 7366, "src": "4675:26:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$24248_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 7198, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 24248, "src": "4675:11:10", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$24248_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 7201, "mutability": "mutable", "name": "balanceTokenIn", "nodeType": "VariableDeclaration", "scope": 7366, "src": "4711:22:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7200, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4711:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7203, "mutability": "mutable", "name": "balanceTokenOut", "nodeType": "VariableDeclaration", "scope": 7366, "src": "4743:23:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7202, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4743:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4665:107:10"}, "returnParameters": {"id": 7214, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7213, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7366, "src": "4846:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7212, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4846:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4845:9:10"}, "scope": 8352, "src": "4650:2747:10", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"body": {"id": 7393, "nodeType": "Block", "src": "7724:211:10", "statements": [{"expression": {"arguments": [{"id": 7385, "name": "currentBalanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7370, "src": "7829:21:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7386, "name": "currentBalanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7372, "src": "7852:22:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 7387, "name": "swapRequest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7368, "src": "7876:11:10", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$24248_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 7388, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 24237, "src": "7876:18:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7389, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7374, "src": "7896:14:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7390, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7376, "src": "7912:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 7383, "name": "GyroTwoMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6782, "src": "7801:11:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroTwoMath_$6782_$", "typeString": "type(library GyroTwoMath)"}}, "id": 7384, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcOutGivenIn", "nodeType": "MemberAccess", "referencedDeclaration": 6662, "src": "7801:27:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 7391, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7801:127:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 7382, "id": 7392, "nodeType": "Return", "src": "7794:134:10"}]}, "id": 7394, "implemented": true, "kind": "function", "modifiers": [], "name": "_onSwapGivenIn", "nodeType": "FunctionDefinition", "parameters": {"id": 7379, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7368, "mutability": "mutable", "name": "swapRequest", "nodeType": "VariableDeclaration", "scope": 7394, "src": "7436:30:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$24248_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 7367, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 24248, "src": "7436:11:10", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$24248_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 7370, "mutability": "mutable", "name": "currentBalanceTokenIn", "nodeType": "VariableDeclaration", "scope": 7394, "src": "7476:29:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7369, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7476:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7372, "mutability": "mutable", "name": "currentBalanceTokenOut", "nodeType": "VariableDeclaration", "scope": 7394, "src": "7515:30:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7371, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7515:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7374, "mutability": "mutable", "name": "virtualParamIn", "nodeType": "VariableDeclaration", "scope": 7394, "src": "7555:22:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7373, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7555:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7376, "mutability": "mutable", "name": "virtualParamOut", "nodeType": "VariableDeclaration", "scope": 7394, "src": "7587:23:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7375, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7587:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7378, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7394, "src": "7620:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7377, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7620:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7426:266:10"}, "returnParameters": {"id": 7382, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7381, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7394, "src": "7715:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7380, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7715:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7714:9:10"}, "scope": 8352, "src": "7403:532:10", "stateMutability": "pure", "virtual": false, "visibility": "private"}, {"body": {"id": 7421, "nodeType": "Block", "src": "8263:211:10", "statements": [{"expression": {"arguments": [{"id": 7413, "name": "currentBalanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7398, "src": "8368:21:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7414, "name": "currentBalanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7400, "src": "8391:22:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 7415, "name": "swapRequest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7396, "src": "8415:11:10", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$24248_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 7416, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 24237, "src": "8415:18:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7417, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7402, "src": "8435:14:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7418, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7404, "src": "8451:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 7411, "name": "GyroTwoMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6782, "src": "8340:11:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroTwoMath_$6782_$", "typeString": "type(library GyroTwoMath)"}}, "id": 7412, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcInGivenOut", "nodeType": "MemberAccess", "referencedDeclaration": 6749, "src": "8340:27:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 7419, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8340:127:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 7410, "id": 7420, "nodeType": "Return", "src": "8333:134:10"}]}, "id": 7422, "implemented": true, "kind": "function", "modifiers": [], "name": "_onSwapGivenOut", "nodeType": "FunctionDefinition", "parameters": {"id": 7407, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7396, "mutability": "mutable", "name": "swapRequest", "nodeType": "VariableDeclaration", "scope": 7422, "src": "7975:30:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$24248_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 7395, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 24248, "src": "7975:11:10", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$24248_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 7398, "mutability": "mutable", "name": "currentBalanceTokenIn", "nodeType": "VariableDeclaration", "scope": 7422, "src": "8015:29:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7397, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8015:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7400, "mutability": "mutable", "name": "currentBalanceTokenOut", "nodeType": "VariableDeclaration", "scope": 7422, "src": "8054:30:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7399, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8054:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7402, "mutability": "mutable", "name": "virtualParamIn", "nodeType": "VariableDeclaration", "scope": 7422, "src": "8094:22:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7401, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8094:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7404, "mutability": "mutable", "name": "virtualParamOut", "nodeType": "VariableDeclaration", "scope": 7422, "src": "8126:23:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7403, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8126:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7406, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7422, "src": "8159:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7405, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8159:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7965:266:10"}, "returnParameters": {"id": 7410, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7409, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7422, "src": "8254:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7408, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8254:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "8253:9:10"}, "scope": 8352, "src": "7941:533:10", "stateMutability": "pure", "virtual": false, "visibility": "private"}, {"body": {"id": 7443, "nodeType": "Block", "src": "8783:97:10", "statements": [{"expression": {"arguments": [{"id": 7438, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7424, "src": "8824:14:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7439, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7426, "src": "8840:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7440, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7428, "src": "8857:15:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 7437, "name": "_calculateCurrentValues", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7550, "src": "8800:23:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256,bool) view returns (uint256,uint256,uint256)"}}, "id": 7441, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8800:73:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256,uint256)"}}, "functionReturnParameters": 7436, "id": 7442, "nodeType": "Return", "src": "8793:80:10"}]}, "functionSelector": "3c4dd5bb", "id": 7444, "implemented": true, "kind": "function", "modifiers": [], "name": "calculateCurrentValues", "nodeType": "FunctionDefinition", "parameters": {"id": 7429, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7424, "mutability": "mutable", "name": "balanceTokenIn", "nodeType": "VariableDeclaration", "scope": 7444, "src": "8521:22:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7423, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8521:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7426, "mutability": "mutable", "name": "balanceTokenOut", "nodeType": "VariableDeclaration", "scope": 7444, "src": "8553:23:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7425, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8553:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7428, "mutability": "mutable", "name": "tokenInIsToken0", "nodeType": "VariableDeclaration", "scope": 7444, "src": "8586:20:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 7427, "name": "bool", "nodeType": "ElementaryTypeName", "src": "8586:4:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "8511:101:10"}, "returnParameters": {"id": 7436, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7431, "mutability": "mutable", "name": "currentInvariant", "nodeType": "VariableDeclaration", "scope": 7444, "src": "8671:24:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7430, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8671:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7433, "mutability": "mutable", "name": "virtualParamIn", "nodeType": "VariableDeclaration", "scope": 7444, "src": "8709:22:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7432, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8709:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7435, "mutability": "mutable", "name": "virtualParamOut", "nodeType": "VariableDeclaration", "scope": 7444, "src": "8745:23:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7434, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8745:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "8657:121:10"}, "scope": 8352, "src": "8480:400:10", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 7549, "nodeType": "Block", "src": "9192:744:10", "statements": [{"assignments": [7463], "declarations": [{"constant": false, "id": 7463, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 7549, "src": "9285:25:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7461, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9285:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7462, "nodeType": "ArrayTypeName", "src": "9285:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 7469, "initialValue": {"arguments": [{"hexValue": "32", "id": 7467, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9327:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 7466, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "9313:13:10", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 7464, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9317:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7465, "nodeType": "ArrayTypeName", "src": "9317:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 7468, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9313:16:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "9285:44:10"}, {"expression": {"id": 7477, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 7470, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7463, "src": "9339:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7472, "indexExpression": {"hexValue": "30", "id": 7471, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9348:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "9339:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"id": 7473, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7450, "src": "9353:15:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 7475, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7448, "src": "9388:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7476, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "9353:50:10", "trueExpression": {"id": 7474, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7446, "src": "9371:14:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9339:64:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7478, "nodeType": "ExpressionStatement", "src": "9339:64:10"}, {"expression": {"id": 7486, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 7479, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7463, "src": "9413:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7481, "indexExpression": {"hexValue": "31", "id": 7480, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9422:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "9413:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"id": 7482, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7450, "src": "9427:15:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 7484, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7446, "src": "9463:14:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7485, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "9427:50:10", "trueExpression": {"id": 7483, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7448, "src": "9445:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9413:64:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7487, "nodeType": "ExpressionStatement", "src": "9413:64:10"}, {"assignments": [7492], "declarations": [{"constant": false, "id": 7492, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 7549, "src": "9488:27:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7490, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9488:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7491, "nodeType": "ArrayTypeName", "src": "9488:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 7495, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 7493, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [7027, 7040], "referencedDeclaration": 7027, "src": "9518:15:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function () view returns (uint256[] memory)"}}, "id": 7494, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9518:17:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "9488:47:10"}, {"expression": {"id": 7507, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 7496, "name": "currentInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7453, "src": "9546:16:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 7499, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7463, "src": "9597:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"baseExpression": {"id": 7500, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7492, "src": "9607:10:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7502, "indexExpression": {"hexValue": "30", "id": 7501, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9618:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9607:13:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 7503, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7492, "src": "9622:10:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7505, "indexExpression": {"hexValue": "31", "id": 7504, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9633:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9622:13:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 7497, "name": "GyroTwoMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6782, "src": "9565:11:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroTwoMath_$6782_$", "typeString": "type(library GyroTwoMath)"}}, "id": 7498, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 6369, "src": "9565:31:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256)"}}, "id": 7506, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9565:71:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9546:90:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7508, "nodeType": "ExpressionStatement", "src": "9546:90:10"}, {"assignments": [7513], "declarations": [{"constant": false, "id": 7513, "mutability": "mutable", "name": "virtualParam", "nodeType": "VariableDeclaration", "scope": 7549, "src": "9647:29:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7511, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9647:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7512, "nodeType": "ArrayTypeName", "src": "9647:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 7519, "initialValue": {"arguments": [{"hexValue": "32", "id": 7517, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9693:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 7516, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "9679:13:10", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 7514, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9683:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7515, "nodeType": "ArrayTypeName", "src": "9683:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 7518, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9679:16:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "9647:48:10"}, {"expression": {"id": 7525, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 7520, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7513, "src": "9705:12:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 7522, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7492, "src": "9742:10:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 7523, "name": "currentInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7453, "src": "9754:16:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 7521, "name": "_getVirtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7127, "src": "9720:21:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,uint256) view returns (uint256[] memory)"}}, "id": 7524, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9720:51:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "src": "9705:66:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7526, "nodeType": "ExpressionStatement", "src": "9705:66:10"}, {"expression": {"id": 7536, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 7527, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7455, "src": "9782:14:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"id": 7528, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7450, "src": "9799:15:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"baseExpression": {"id": 7532, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7513, "src": "9835:12:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7534, "indexExpression": {"hexValue": "31", "id": 7533, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9848:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9835:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7535, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "9799:51:10", "trueExpression": {"baseExpression": {"id": 7529, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7513, "src": "9817:12:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7531, "indexExpression": {"hexValue": "30", "id": 7530, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9830:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9817:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9782:68:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7537, "nodeType": "ExpressionStatement", "src": "9782:68:10"}, {"expression": {"id": 7547, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 7538, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7457, "src": "9860:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"id": 7539, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7450, "src": "9878:15:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"baseExpression": {"id": 7543, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7513, "src": "9914:12:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7545, "indexExpression": {"hexValue": "30", "id": 7544, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9927:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9914:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7546, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "9878:51:10", "trueExpression": {"baseExpression": {"id": 7540, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7513, "src": "9896:12:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7542, "indexExpression": {"hexValue": "31", "id": 7541, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9909:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9896:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9860:69:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7548, "nodeType": "ExpressionStatement", "src": "9860:69:10"}]}, "id": 7550, "implemented": true, "kind": "function", "modifiers": [], "name": "_calculateCurrentValues", "nodeType": "FunctionDefinition", "parameters": {"id": 7451, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7446, "mutability": "mutable", "name": "balanceTokenIn", "nodeType": "VariableDeclaration", "scope": 7550, "src": "8928:22:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7445, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8928:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7448, "mutability": "mutable", "name": "balanceTokenOut", "nodeType": "VariableDeclaration", "scope": 7550, "src": "8960:23:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7447, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8960:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7450, "mutability": "mutable", "name": "tokenInIsToken0", "nodeType": "VariableDeclaration", "scope": 7550, "src": "8993:20:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 7449, "name": "bool", "nodeType": "ElementaryTypeName", "src": "8993:4:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "8918:101:10"}, "returnParameters": {"id": 7458, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7453, "mutability": "mutable", "name": "currentInvariant", "nodeType": "VariableDeclaration", "scope": 7550, "src": "9080:24:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7452, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9080:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7455, "mutability": "mutable", "name": "virtualParamIn", "nodeType": "VariableDeclaration", "scope": 7550, "src": "9118:22:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7454, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9118:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7457, "mutability": "mutable", "name": "virtualParamOut", "nodeType": "VariableDeclaration", "scope": 7550, "src": "9154:23:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7456, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9154:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "9066:121:10"}, "scope": 8352, "src": "8886:1050:10", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [4936], "body": {"id": 7644, "nodeType": "Block", "src": "10982:846:10", "statements": [{"assignments": [7571], "declarations": [{"constant": false, "id": 7571, "mutability": "mutable", "name": "kind", "nodeType": "VariableDeclaration", "scope": 7644, "src": "10992:30:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$27506", "typeString": "enum BaseWeightedPool.JoinKind"}, "typeName": {"id": 7570, "name": "BaseWeightedPool.JoinKind", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 27506, "src": "10992:25:10", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$27506", "typeString": "enum BaseWeightedPool.JoinKind"}}, "visibility": "internal"}], "id": 7575, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 7572, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7559, "src": "11025:8:10", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 7573, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "joinKind", "nodeType": "MemberAccess", "referencedDeclaration": 17931, "src": "11025:17:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_enum$_JoinKind_$27506_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (enum BaseWeightedPool.JoinKind)"}}, "id": 7574, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11025:19:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$27506", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "VariableDeclarationStatement", "src": "10992:52:10"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_JoinKind_$27506", "typeString": "enum BaseWeightedPool.JoinKind"}, "id": 7581, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 7577, "name": "kind", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7571, "src": "11063:4:10", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$27506", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 7578, "name": "BaseWeightedPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 28707, "src": "11071:16:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BaseWeightedPool_$28707_$", "typeString": "type(contract BaseWeightedPool)"}}, "id": 7579, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "JoinKind", "nodeType": "MemberAccess", "referencedDeclaration": 27506, "src": "11071:25:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_JoinKind_$27506_$", "typeString": "type(enum BaseWeightedPool.JoinKind)"}}, "id": 7580, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "INIT", "nodeType": "MemberAccess", "src": "11071:30:10", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$27506", "typeString": "enum BaseWeightedPool.JoinKind"}}, "src": "11063:38:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 7582, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23314, "src": "11103:6:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$23314_$", "typeString": "type(library Errors)"}}, "id": 7583, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNINITIALIZED", "nodeType": "MemberAccess", "referencedDeclaration": 22983, "src": "11103:20:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 7576, "name": "_require", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22909, "src": "11054:8:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 7584, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11054:70:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 7585, "nodeType": "ExpressionStatement", "src": "11054:70:10"}, {"assignments": [7590], "declarations": [{"constant": false, "id": 7590, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 7644, "src": "11135:26:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7588, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11135:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7589, "nodeType": "ArrayTypeName", "src": "11135:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 7594, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 7591, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7559, "src": "11164:8:10", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 7592, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "initialAmountsIn", "nodeType": "MemberAccess", "referencedDeclaration": 17970, "src": "11164:25:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (uint256[] memory)"}}, "id": 7593, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11164:27:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "11135:56:10"}, {"expression": {"arguments": [{"expression": {"id": 7598, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7590, "src": "11237:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7599, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "11237:16:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "32", "id": 7600, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11255:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "expression": {"id": 7595, "name": "InputHelpers", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15817, "src": "11201:12:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_InputHelpers_$15817_$", "typeString": "type(library InputHelpers)"}}, "id": 7597, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ensureInputLengthMatch", "nodeType": "MemberAccess", "referencedDeclaration": 15725, "src": "11201:35:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256) pure"}}, "id": 7601, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11201:56:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 7602, "nodeType": "ExpressionStatement", "src": "11201:56:10"}, {"expression": {"arguments": [{"id": 7604, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7590, "src": "11281:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}], "id": 7603, "name": "_upscaleArray", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6080, "src": "11267:13:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$", "typeString": "function (uint256[] memory) view"}}, "id": 7605, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11267:24:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 7606, "nodeType": "ExpressionStatement", "src": "11267:24:10"}, {"assignments": [7611], "declarations": [{"constant": false, "id": 7611, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 7644, "src": "11302:27:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7609, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11302:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7610, "nodeType": "ArrayTypeName", "src": "11302:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 7614, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 7612, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [7027, 7040], "referencedDeclaration": 7027, "src": "11332:15:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function () view returns (uint256[] memory)"}}, "id": 7613, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11332:17:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "11302:47:10"}, {"assignments": [7616], "declarations": [{"constant": false, "id": 7616, "mutability": "mutable", "name": "invariantAfterJoin", "nodeType": "VariableDeclaration", "scope": 7644, "src": "11360:26:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7615, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11360:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 7627, "initialValue": {"arguments": [{"id": 7619, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7590, "src": "11421:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"baseExpression": {"id": 7620, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7611, "src": "11432:10:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7622, "indexExpression": {"hexValue": "30", "id": 7621, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11443:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "11432:13:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 7623, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7611, "src": "11447:10:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7625, "indexExpression": {"hexValue": "31", "id": 7624, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11458:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "11447:13:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 7617, "name": "GyroTwoMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6782, "src": "11389:11:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroTwoMath_$6782_$", "typeString": "type(library GyroTwoMath)"}}, "id": 7618, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 6369, "src": "11389:31:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256)"}}, "id": 7626, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11389:72:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "11360:101:10"}, {"assignments": [7629], "declarations": [{"constant": false, "id": 7629, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 7644, "src": "11678:20:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7628, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11678:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 7635, "initialValue": {"arguments": [{"id": 7632, "name": "invariantAfterJoin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7616, "src": "11710:18:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "32", "id": 7633, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11730:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "expression": {"id": 7630, "name": "Math", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16436, "src": "11701:4:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Math_$16436_$", "typeString": "type(library Math)"}}, "id": 7631, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mul", "nodeType": "MemberAccess", "referencedDeclaration": 16355, "src": "11701:8:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 7634, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11701:31:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "11678:54:10"}, {"expression": {"id": 7638, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 7636, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3943, "src": "11743:14:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 7637, "name": "invariantAfterJoin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7616, "src": "11760:18:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11743:35:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7639, "nodeType": "ExpressionStatement", "src": "11743:35:10"}, {"expression": {"components": [{"id": 7640, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7629, "src": "11797:12:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7641, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7590, "src": "11811:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 7642, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "11796:25:10", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "functionReturnParameters": 7567, "id": 7643, "nodeType": "Return", "src": "11789:32:10"}]}, "documentation": {"id": 7551, "nodeType": "StructuredDocumentation", "src": "10007:801:10", "text": " @dev Called when the Pool is joined for the first time; that is, when the BPT total supply is zero.\n Returns the amount of BPT to mint, and the token amounts the Pool will receive in return.\n Minted BPT will be sent to `recipient`, except for _MINIMUM_BPT, which will be deducted from this amount and sent\n to the zero address instead. This will cause that BPT to remain forever locked there, preventing total BTP from\n ever dropping below that value, and ensuring `_onInitializePool` can only be called once in the entire Pool's\n lifetime.\n The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n be downscaled (rounding up) before being returned to the Vault."}, "id": 7645, "implemented": true, "kind": "function", "modifiers": [], "name": "_onInitializePool", "nodeType": "FunctionDefinition", "overrides": {"id": 7561, "nodeType": "OverrideSpecifier", "overrides": [], "src": "10937:8:10"}, "parameters": {"id": 7560, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7553, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7645, "src": "10849:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 7552, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "10849:7:10", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 7555, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7645, "src": "10866:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 7554, "name": "address", "nodeType": "ElementaryTypeName", "src": "10866:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 7557, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7645, "src": "10883:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 7556, "name": "address", "nodeType": "ElementaryTypeName", "src": "10883:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 7559, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 7645, "src": "10900:21:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 7558, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "10900:5:10", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "10839:88:10"}, "returnParameters": {"id": 7567, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7563, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7645, "src": "10955:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7562, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10955:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7566, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7645, "src": "10964:16:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7564, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10964:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7565, "nodeType": "ArrayTypeName", "src": "10964:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "10954:27:10"}, "scope": 8352, "src": "10813:1015:10", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [5031], "body": {"id": 7754, "nodeType": "Block", "src": "13594:1872:10", "statements": [{"assignments": [7677], "declarations": [{"constant": false, "id": 7677, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 7754, "src": "13892:27:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7675, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13892:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7676, "nodeType": "ArrayTypeName", "src": "13892:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 7680, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 7678, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [7027, 7040], "referencedDeclaration": 7027, "src": "13922:15:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function () view returns (uint256[] memory)"}}, "id": 7679, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13922:17:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "13892:47:10"}, {"assignments": [7682], "declarations": [{"constant": false, "id": 7682, "mutability": "mutable", "name": "invariantBeforeAction", "nodeType": "VariableDeclaration", "scope": 7754, "src": "14244:29:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7681, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14244:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 7693, "initialValue": {"arguments": [{"id": 7685, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7655, "src": "14308:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"baseExpression": {"id": 7686, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7677, "src": "14318:10:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7688, "indexExpression": {"hexValue": "30", "id": 7687, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14329:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "14318:13:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 7689, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7677, "src": "14333:10:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7691, "indexExpression": {"hexValue": "31", "id": 7690, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14344:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "14333:13:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 7683, "name": "GyroTwoMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6782, "src": "14276:11:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroTwoMath_$6782_$", "typeString": "type(library GyroTwoMath)"}}, "id": 7684, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 6369, "src": "14276:31:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256)"}}, "id": 7692, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14276:71:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "14244:103:10"}, {"assignments": [7698], "declarations": [{"constant": false, "id": 7698, "mutability": "mutable", "name": "virtualParam", "nodeType": "VariableDeclaration", "scope": 7754, "src": "14357:29:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7696, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14357:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7697, "nodeType": "ArrayTypeName", "src": "14357:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 7703, "initialValue": {"arguments": [{"id": 7700, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7677, "src": "14411:10:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 7701, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7682, "src": "14423:21:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 7699, "name": "_getVirtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7127, "src": "14389:21:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,uint256) view returns (uint256[] memory)"}}, "id": 7702, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14389:56:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "14357:88:10"}, {"expression": {"arguments": [{"id": 7705, "name": "lastChangeBlock", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7657, "src": "14524:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 7706, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7655, "src": "14541:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7708, "indexExpression": {"hexValue": "30", "id": 7707, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14550:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "14541:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 7709, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7655, "src": "14554:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7711, "indexExpression": {"hexValue": "31", "id": 7710, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14563:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "14554:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 7712, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7698, "src": "14567:12:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7714, "indexExpression": {"hexValue": "30", "id": 7713, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14580:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "14567:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 7715, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7698, "src": "14584:12:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7717, "indexExpression": {"hexValue": "31", "id": 7716, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14597:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "14584:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 7704, "name": "_updateOracle", "nodeType": "Identifier", "overloadedDeclarations": [8339, 8351], "referencedDeclaration": 8339, "src": "14510:13:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256,uint256,uint256,uint256)"}}, "id": 7718, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14510:90:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 7719, "nodeType": "ExpressionStatement", "src": "14510:90:10"}, {"expression": {"arguments": [{"id": 7721, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7682, "src": "14627:21:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 7720, "name": "_distributeFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8089, "src": "14611:15:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 7722, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14611:38:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 7723, "nodeType": "ExpressionStatement", "src": "14611:38:10"}, {"assignments": [7725, 7728], "declarations": [{"constant": false, "id": 7725, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 7754, "src": "14661:20:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7724, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14661:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7728, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 7754, "src": "14683:26:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7726, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14683:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7727, "nodeType": "ArrayTypeName", "src": "14683:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 7733, "initialValue": {"arguments": [{"id": 7730, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7655, "src": "14721:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 7731, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7661, "src": "14731:8:10", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 7729, "name": "_doJoin", "nodeType": "Identifier", "overloadedDeclarations": [7799, 5100], "referencedDeclaration": 7799, "src": "14713:7:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 7732, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14713:27:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "14660:80:10"}, {"expression": {"id": 7743, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 7734, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3943, "src": "15174:14:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 7737, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7682, "src": "15229:21:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7738, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7725, "src": "15252:12:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 7739, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21538, "src": "15266:11:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 7740, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15266:13:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "74727565", "id": 7741, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "15281:4:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "expression": {"id": 7735, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17696, "src": "15191:12:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$17696_$", "typeString": "type(library GyroPoolMath)"}}, "id": 7736, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "liquidityInvariantUpdate", "nodeType": "MemberAccess", "referencedDeclaration": 17615, "src": "15191:37:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,bool) pure returns (uint256)"}}, "id": 7742, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15191:95:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "15174:112:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7744, "nodeType": "ExpressionStatement", "src": "15174:112:10"}, {"expression": {"components": [{"id": 7745, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7725, "src": "15417:12:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7746, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7728, "src": "15431:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"arguments": [{"hexValue": "32", "id": 7750, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15456:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 7749, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "15442:13:10", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 7747, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15446:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7748, "nodeType": "ArrayTypeName", "src": "15446:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 7751, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15442:16:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 7752, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "15416:43:10", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory,uint256[] memory)"}}, "functionReturnParameters": 7672, "id": 7753, "nodeType": "Return", "src": "15409:50:10"}]}, "documentation": {"id": 7646, "nodeType": "StructuredDocumentation", "src": "11834:1386:10", "text": " @dev Called whenever the Pool is joined after the first initialization join (see `_onInitializePool`).\n Returns the amount of BPT to mint, the token amounts that the Pool will receive in return, and the number of\n tokens to pay in protocol swap fees.\n Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n Minted BPT will be sent to `recipient`.\n The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n be downscaled (rounding up) before being returned to the Vault.\n Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onJoinPool`). These\n amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way\n Responsibility for updating the oracle has been moved from `onJoinPool()` (without the underscore) to this function. That is because both this function and `_updateOracle()` need access to the invariant and this way we can share the computation."}, "id": 7755, "implemented": true, "kind": "function", "modifiers": [], "name": "_onJoinPool", "nodeType": "FunctionDefinition", "overrides": {"id": 7663, "nodeType": "OverrideSpecifier", "overrides": [], "src": "13473:8:10"}, "parameters": {"id": 7662, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7648, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7755, "src": "13255:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 7647, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "13255:7:10", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 7650, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7755, "src": "13272:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 7649, "name": "address", "nodeType": "ElementaryTypeName", "src": "13272:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 7652, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7755, "src": "13289:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 7651, "name": "address", "nodeType": "ElementaryTypeName", "src": "13289:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 7655, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 7755, "src": "13306:25:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7653, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13306:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7654, "nodeType": "ArrayTypeName", "src": "13306:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 7657, "mutability": "mutable", "name": "lastChangeBlock", "nodeType": "VariableDeclaration", "scope": 7755, "src": "13341:23:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7656, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13341:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7659, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7755, "src": "13374:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7658, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13374:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7661, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 7755, "src": "13420:21:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 7660, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "13420:5:10", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "13245:202:10"}, "returnParameters": {"id": 7672, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7665, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7755, "src": "13512:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7664, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13512:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7668, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7755, "src": "13533:16:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7666, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13533:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7667, "nodeType": "ArrayTypeName", "src": "13533:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 7671, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7755, "src": "13563:16:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7669, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13563:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7670, "nodeType": "ArrayTypeName", "src": "13563:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "13498:91:10"}, "scope": 8352, "src": "13225:2241:10", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 7798, "nodeType": "Block", "src": "15612:441:10", "statements": [{"assignments": [7771], "declarations": [{"constant": false, "id": 7771, "mutability": "mutable", "name": "kind", "nodeType": "VariableDeclaration", "scope": 7798, "src": "15622:30:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$27506", "typeString": "enum BaseWeightedPool.JoinKind"}, "typeName": {"id": 7770, "name": "BaseWeightedPool.JoinKind", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 27506, "src": "15622:25:10", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$27506", "typeString": "enum BaseWeightedPool.JoinKind"}}, "visibility": "internal"}], "id": 7775, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 7772, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7760, "src": "15655:8:10", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 7773, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "joinKind", "nodeType": "MemberAccess", "referencedDeclaration": 17931, "src": "15655:17:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_enum$_JoinKind_$27506_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (enum BaseWeightedPool.JoinKind)"}}, "id": 7774, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15655:19:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$27506", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "VariableDeclarationStatement", "src": "15622:52:10"}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_JoinKind_$27506", "typeString": "enum BaseWeightedPool.JoinKind"}, "id": 7780, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 7776, "name": "kind", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7771, "src": "15811:4:10", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$27506", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 7777, "name": "BaseWeightedPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 28707, "src": "15819:16:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BaseWeightedPool_$28707_$", "typeString": "type(contract BaseWeightedPool)"}}, "id": 7778, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "JoinKind", "nodeType": "MemberAccess", "referencedDeclaration": 27506, "src": "15819:25:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_JoinKind_$27506_$", "typeString": "type(enum BaseWeightedPool.JoinKind)"}}, "id": 7779, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "ALL_TOKENS_IN_FOR_EXACT_BPT_OUT", "nodeType": "MemberAccess", "src": "15819:57:10", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$27506", "typeString": "enum BaseWeightedPool.JoinKind"}}, "src": "15811:65:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 7796, "nodeType": "Block", "src": "15987:60:10", "statements": [{"expression": {"arguments": [{"expression": {"id": 7792, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23314, "src": "16009:6:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$23314_$", "typeString": "type(library Errors)"}}, "id": 7793, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNHANDLED_JOIN_KIND", "nodeType": "MemberAccess", "referencedDeclaration": 23028, "src": "16009:26:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 7791, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22917, "src": "16001:7:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$", "typeString": "function (uint256) pure"}}, "id": 7794, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16001:35:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 7795, "nodeType": "ExpressionStatement", "src": "16001:35:10"}]}, "id": 7797, "nodeType": "IfStatement", "src": "15807:240:10", "trueBody": {"id": 7790, "nodeType": "Block", "src": "15878:103:10", "statements": [{"expression": {"id": 7788, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 7781, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7763, "src": "15893:12:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7782, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7766, "src": "15907:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 7783, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "15892:25:10", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 7785, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7758, "src": "15951:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 7786, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7760, "src": "15961:8:10", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 7784, "name": "_joinAllTokensInForExactBPTOut", "nodeType": "Identifier", "overloadedDeclarations": [7837], "referencedDeclaration": 7837, "src": "15920:30:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 7787, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15920:50:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "15892:78:10", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 7789, "nodeType": "ExpressionStatement", "src": "15892:78:10"}]}}]}, "id": 7799, "implemented": true, "kind": "function", "modifiers": [], "name": "_doJoin", "nodeType": "FunctionDefinition", "parameters": {"id": 7761, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7758, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 7799, "src": "15489:25:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7756, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15489:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7757, "nodeType": "ArrayTypeName", "src": "15489:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 7760, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 7799, "src": "15516:21:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 7759, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "15516:5:10", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "15488:50:10"}, "returnParameters": {"id": 7767, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7763, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 7799, "src": "15562:20:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7762, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15562:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7766, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 7799, "src": "15584:26:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7764, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15584:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7765, "nodeType": "ArrayTypeName", "src": "15584:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "15561:50:10"}, "scope": 8352, "src": "15472:581:10", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [5270], "body": {"id": 7836, "nodeType": "Block", "src": "16244:343:10", "statements": [{"assignments": [7814], "declarations": [{"constant": false, "id": 7814, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 7836, "src": "16254:20:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7813, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16254:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 7818, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 7815, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7804, "src": "16277:8:10", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 7816, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "allTokensInForExactBptOut", "nodeType": "MemberAccess", "referencedDeclaration": 18045, "src": "16277:34:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (uint256)"}}, "id": 7817, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16277:36:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "16254:59:10"}, {"assignments": [7823], "declarations": [{"constant": false, "id": 7823, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 7836, "src": "16424:26:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7821, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16424:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7822, "nodeType": "ArrayTypeName", "src": "16424:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 7831, "initialValue": {"arguments": [{"id": 7826, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7802, "src": "16499:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 7827, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7814, "src": "16509:12:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 7828, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21538, "src": "16523:11:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 7829, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16523:13:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 7824, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17696, "src": "16453:12:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$17696_$", "typeString": "type(library GyroPoolMath)"}}, "id": 7825, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcAllTokensInGivenExactBptOut", "nodeType": "MemberAccess", "referencedDeclaration": 16988, "src": "16453:45:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256[] memory)"}}, "id": 7830, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16453:84:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "16424:113:10"}, {"expression": {"components": [{"id": 7832, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7814, "src": "16556:12:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7833, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7823, "src": "16570:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 7834, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "16555:25:10", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "functionReturnParameters": 7812, "id": 7835, "nodeType": "Return", "src": "16548:32:10"}]}, "id": 7837, "implemented": true, "kind": "function", "modifiers": [], "name": "_joinAllTokensInForExactBPTOut", "nodeType": "FunctionDefinition", "overrides": {"id": 7806, "nodeType": "OverrideSpecifier", "overrides": [], "src": "16187:8:10"}, "parameters": {"id": 7805, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7802, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 7837, "src": "16099:25:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7800, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16099:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7801, "nodeType": "ArrayTypeName", "src": "16099:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 7804, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 7837, "src": "16126:21:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 7803, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "16126:5:10", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "16098:50:10"}, "returnParameters": {"id": 7812, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7808, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7837, "src": "16213:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7807, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16213:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7811, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7837, "src": "16222:16:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7809, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16222:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7810, "nodeType": "ArrayTypeName", "src": "16222:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "16212:27:10"}, "scope": 8352, "src": "16059:528:10", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [5459], "body": {"id": 7979, "nodeType": "Block", "src": "18067:2571:10", "statements": [{"assignments": [7869], "declarations": [{"constant": false, "id": 7869, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 7979, "src": "18232:27:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7867, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18232:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7868, "nodeType": "ArrayTypeName", "src": "18232:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 7872, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 7870, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [7027, 7040], "referencedDeclaration": 7027, "src": "18262:15:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function () view returns (uint256[] memory)"}}, "id": 7871, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18262:17:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "18232:47:10"}, {"condition": {"arguments": [], "expression": {"argumentTypes": [], "id": 7873, "name": "_isNotPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21434, "src": "18486:12:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$", "typeString": "function () view returns (bool)"}}, "id": 7874, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18486:14:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 7968, "nodeType": "Block", "src": "19904:555:10", "statements": [{"expression": {"id": 7946, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 7939, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7857, "src": "20119:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7940, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7860, "src": "20132:10:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 7941, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "20118:25:10", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 7943, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7847, "src": "20154:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 7944, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7853, "src": "20164:8:10", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 7942, "name": "_doExit", "nodeType": "Identifier", "overloadedDeclarations": [8024, 5528], "referencedDeclaration": 8024, "src": "20146:7:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 7945, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20146:27:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "20118:55:10", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 7947, "nodeType": "ExpressionStatement", "src": "20118:55:10"}, {"expression": {"arguments": [{"id": 7949, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7847, "src": "20309:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 7950, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7860, "src": "20319:10:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"expression": {"id": 7951, "name": "FixedPoint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16147, "src": "20331:10:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_FixedPoint_$16147_$", "typeString": "type(library FixedPoint)"}}, "id": 7952, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 15882, "src": "20331:14:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}], "id": 7948, "name": "_mutateAmounts", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5963, "src": "20294:14:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$returns$__$", "typeString": "function (uint256[] memory,uint256[] memory,function (uint256,uint256) pure returns (uint256)) pure"}}, "id": 7953, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20294:52:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 7954, "nodeType": "ExpressionStatement", "src": "20294:52:10"}, {"expression": {"id": 7966, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 7955, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3943, "src": "20360:14:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 7958, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7847, "src": "20409:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"baseExpression": {"id": 7959, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7869, "src": "20419:10:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7961, "indexExpression": {"hexValue": "30", "id": 7960, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20430:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "20419:13:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 7962, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7869, "src": "20434:10:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7964, "indexExpression": {"hexValue": "31", "id": 7963, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20445:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "20434:13:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 7956, "name": "GyroTwoMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6782, "src": "20377:11:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroTwoMath_$6782_$", "typeString": "type(library GyroTwoMath)"}}, "id": 7957, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 6369, "src": "20377:31:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256)"}}, "id": 7965, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20377:71:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "20360:88:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7967, "nodeType": "ExpressionStatement", "src": "20360:88:10"}]}, "id": 7969, "nodeType": "IfStatement", "src": "18482:1977:10", "trueBody": {"id": 7938, "nodeType": "Block", "src": "18502:1396:10", "statements": [{"assignments": [7876], "declarations": [{"constant": false, "id": 7876, "mutability": "mutable", "name": "invariantBeforeAction", "nodeType": "VariableDeclaration", "scope": 7938, "src": "18822:29:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7875, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18822:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 7887, "initialValue": {"arguments": [{"id": 7879, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7847, "src": "18886:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"baseExpression": {"id": 7880, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7869, "src": "18896:10:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7882, "indexExpression": {"hexValue": "30", "id": 7881, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "18907:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "18896:13:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 7883, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7869, "src": "18911:10:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7885, "indexExpression": {"hexValue": "31", "id": 7884, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "18922:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "18911:13:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 7877, "name": "GyroTwoMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6782, "src": "18854:11:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroTwoMath_$6782_$", "typeString": "type(library GyroTwoMath)"}}, "id": 7878, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 6369, "src": "18854:31:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256)"}}, "id": 7886, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18854:71:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "18822:103:10"}, {"assignments": [7892], "declarations": [{"constant": false, "id": 7892, "mutability": "mutable", "name": "virtualParam", "nodeType": "VariableDeclaration", "scope": 7938, "src": "18939:29:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7890, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18939:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7891, "nodeType": "ArrayTypeName", "src": "18939:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 7897, "initialValue": {"arguments": [{"id": 7894, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7869, "src": "18993:10:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 7895, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7876, "src": "19005:21:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 7893, "name": "_getVirtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7127, "src": "18971:21:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,uint256) view returns (uint256[] memory)"}}, "id": 7896, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18971:56:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "18939:88:10"}, {"expression": {"arguments": [{"id": 7899, "name": "lastChangeBlock", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7849, "src": "19118:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 7900, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7847, "src": "19135:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7902, "indexExpression": {"hexValue": "30", "id": 7901, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "19144:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "19135:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 7903, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7847, "src": "19148:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7905, "indexExpression": {"hexValue": "31", "id": 7904, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "19157:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "19148:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 7906, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7892, "src": "19161:12:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7908, "indexExpression": {"hexValue": "30", "id": 7907, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "19174:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "19161:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 7909, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7892, "src": "19178:12:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 7911, "indexExpression": {"hexValue": "31", "id": 7910, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "19191:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "19178:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 7898, "name": "_updateOracle", "nodeType": "Identifier", "overloadedDeclarations": [8339, 8351], "referencedDeclaration": 8339, "src": "19104:13:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256,uint256,uint256,uint256)"}}, "id": 7912, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19104:90:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 7913, "nodeType": "ExpressionStatement", "src": "19104:90:10"}, {"expression": {"arguments": [{"id": 7915, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7876, "src": "19225:21:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 7914, "name": "_distributeFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8089, "src": "19209:15:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 7916, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19209:38:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 7917, "nodeType": "ExpressionStatement", "src": "19209:38:10"}, {"expression": {"id": 7925, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 7918, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7857, "src": "19263:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7919, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7860, "src": "19276:10:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 7920, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "19262:25:10", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 7922, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7847, "src": "19298:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 7923, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7853, "src": "19308:8:10", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 7921, "name": "_doExit", "nodeType": "Identifier", "overloadedDeclarations": [8024, 5528], "referencedDeclaration": 8024, "src": "19290:7:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 7924, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19290:27:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "19262:55:10", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 7926, "nodeType": "ExpressionStatement", "src": "19262:55:10"}, {"expression": {"id": 7936, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 7927, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3943, "src": "19775:14:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 7930, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7876, "src": "19830:21:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7931, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7857, "src": "19853:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 7932, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21538, "src": "19866:11:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 7933, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19866:13:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "66616c7365", "id": 7934, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "19881:5:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "expression": {"id": 7928, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17696, "src": "19792:12:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$17696_$", "typeString": "type(library GyroPoolMath)"}}, "id": 7929, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "liquidityInvariantUpdate", "nodeType": "MemberAccess", "referencedDeclaration": 17615, "src": "19792:37:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,bool) pure returns (uint256)"}}, "id": 7935, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19792:95:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "19775:112:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7937, "nodeType": "ExpressionStatement", "src": "19775:112:10"}]}}, {"expression": {"components": [{"id": 7970, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7857, "src": "20589:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 7971, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7860, "src": "20602:10:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"arguments": [{"hexValue": "32", "id": 7975, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20628:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 7974, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "20614:13:10", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 7972, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20618:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7973, "nodeType": "ArrayTypeName", "src": "20618:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 7976, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20614:16:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 7977, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "20588:43:10", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory,uint256[] memory)"}}, "functionReturnParameters": 7864, "id": 7978, "nodeType": "Return", "src": "20581:50:10"}]}, "documentation": {"id": 7838, "nodeType": "StructuredDocumentation", "src": "16593:1054:10", "text": " @dev Called whenever the Pool is exited.\n Returns the amount of BPT to burn, the token amounts for each Pool token that the Pool will grant in return, and\n the number of tokens to pay in protocol swap fees.\n Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n BPT will be burnt from `sender`.\n The Pool will grant tokens to `recipient`. These amounts are considered upscaled and will be downscaled\n (rounding down) before being returned to the Vault.\n Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onExitPool`). These\n amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way"}, "id": 7980, "implemented": true, "kind": "function", "modifiers": [], "name": "_onExitPool", "nodeType": "FunctionDefinition", "overrides": {"id": 7855, "nodeType": "OverrideSpecifier", "overrides": [], "src": "17901:8:10"}, "parameters": {"id": 7854, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7840, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7980, "src": "17682:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 7839, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "17682:7:10", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 7842, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7980, "src": "17699:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 7841, "name": "address", "nodeType": "ElementaryTypeName", "src": "17699:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 7844, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7980, "src": "17716:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 7843, "name": "address", "nodeType": "ElementaryTypeName", "src": "17716:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 7847, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 7980, "src": "17733:25:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7845, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17733:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7846, "nodeType": "ArrayTypeName", "src": "17733:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 7849, "mutability": "mutable", "name": "lastChangeBlock", "nodeType": "VariableDeclaration", "scope": 7980, "src": "17768:23:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7848, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17768:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7851, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 7980, "src": "17801:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7850, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17801:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7853, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 7980, "src": "17848:21:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 7852, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "17848:5:10", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "17672:203:10"}, "returnParameters": {"id": 7864, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7857, "mutability": "mutable", "name": "bptAmountIn", "nodeType": "VariableDeclaration", "scope": 7980, "src": "17940:19:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7856, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17940:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7860, "mutability": "mutable", "name": "amountsOut", "nodeType": "VariableDeclaration", "scope": 7980, "src": "17973:27:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7858, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17973:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7859, "nodeType": "ArrayTypeName", "src": "17973:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 7863, "mutability": "mutable", "name": "dueProtocolFeeAmounts", "nodeType": "VariableDeclaration", "scope": 7980, "src": "18014:38:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7861, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18014:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7862, "nodeType": "ArrayTypeName", "src": "18014:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "17926:136:10"}, "scope": 8352, "src": "17652:2986:10", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 8023, "nodeType": "Block", "src": "20784:452:10", "statements": [{"assignments": [7996], "declarations": [{"constant": false, "id": 7996, "mutability": "mutable", "name": "kind", "nodeType": "VariableDeclaration", "scope": 8023, "src": "20794:30:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$27511", "typeString": "enum BaseWeightedPool.ExitKind"}, "typeName": {"id": 7995, "name": "BaseWeightedPool.ExitKind", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 27511, "src": "20794:25:10", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$27511", "typeString": "enum BaseWeightedPool.ExitKind"}}, "visibility": "internal"}], "id": 8000, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 7997, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7985, "src": "20827:8:10", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 7998, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "exitKind", "nodeType": "MemberAccess", "referencedDeclaration": 17947, "src": "20827:17:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_enum$_ExitKind_$27511_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (enum BaseWeightedPool.ExitKind)"}}, "id": 7999, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20827:19:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$27511", "typeString": "enum BaseWeightedPool.ExitKind"}}, "nodeType": "VariableDeclarationStatement", "src": "20794:52:10"}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_ExitKind_$27511", "typeString": "enum BaseWeightedPool.ExitKind"}, "id": 8005, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 8001, "name": "kind", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7996, "src": "21001:4:10", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$27511", "typeString": "enum BaseWeightedPool.ExitKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 8002, "name": "BaseWeightedPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 28707, "src": "21009:16:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BaseWeightedPool_$28707_$", "typeString": "type(contract BaseWeightedPool)"}}, "id": 8003, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ExitKind", "nodeType": "MemberAccess", "referencedDeclaration": 27511, "src": "21009:25:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_ExitKind_$27511_$", "typeString": "type(enum BaseWeightedPool.ExitKind)"}}, "id": 8004, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "EXACT_BPT_IN_FOR_TOKENS_OUT", "nodeType": "MemberAccess", "src": "21009:53:10", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$27511", "typeString": "enum BaseWeightedPool.ExitKind"}}, "src": "21001:61:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 8021, "nodeType": "Block", "src": "21170:60:10", "statements": [{"expression": {"arguments": [{"expression": {"id": 8017, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23314, "src": "21192:6:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$23314_$", "typeString": "type(library Errors)"}}, "id": 8018, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNHANDLED_EXIT_KIND", "nodeType": "MemberAccess", "referencedDeclaration": 23106, "src": "21192:26:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 8016, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22917, "src": "21184:7:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$", "typeString": "function (uint256) pure"}}, "id": 8019, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21184:35:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 8020, "nodeType": "ExpressionStatement", "src": "21184:35:10"}]}, "id": 8022, "nodeType": "IfStatement", "src": "20997:233:10", "trueBody": {"id": 8015, "nodeType": "Block", "src": "21064:100:10", "statements": [{"expression": {"id": 8013, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 8006, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7988, "src": "21079:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8007, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7991, "src": "21092:10:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 8008, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "21078:25:10", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 8010, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7983, "src": "21134:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 8011, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7985, "src": "21144:8:10", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 8009, "name": "_exitExactBPTInForTokensOut", "nodeType": "Identifier", "overloadedDeclarations": [8062], "referencedDeclaration": 8062, "src": "21106:27:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 8012, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21106:47:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "21078:75:10", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 8014, "nodeType": "ExpressionStatement", "src": "21078:75:10"}]}}]}, "id": 8024, "implemented": true, "kind": "function", "modifiers": [], "name": "_doExit", "nodeType": "FunctionDefinition", "parameters": {"id": 7986, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7983, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 8024, "src": "20661:25:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7981, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20661:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7982, "nodeType": "ArrayTypeName", "src": "20661:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 7985, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 8024, "src": "20688:21:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 7984, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "20688:5:10", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "20660:50:10"}, "returnParameters": {"id": 7992, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7988, "mutability": "mutable", "name": "bptAmountIn", "nodeType": "VariableDeclaration", "scope": 8024, "src": "20734:19:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7987, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20734:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7991, "mutability": "mutable", "name": "amountsOut", "nodeType": "VariableDeclaration", "scope": 8024, "src": "20755:27:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 7989, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20755:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 7990, "nodeType": "ArrayTypeName", "src": "20755:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "20733:50:10"}, "scope": 8352, "src": "20644:592:10", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [5635], "body": {"id": 8061, "nodeType": "Block", "src": "21424:746:10", "statements": [{"assignments": [8039], "declarations": [{"constant": false, "id": 8039, "mutability": "mutable", "name": "bptAmountIn", "nodeType": "VariableDeclaration", "scope": 8061, "src": "21845:19:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8038, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21845:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 8043, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 8040, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8029, "src": "21867:8:10", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 8041, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "exactBptInForTokensOut", "nodeType": "MemberAccess", "referencedDeclaration": 18092, "src": "21867:31:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (uint256)"}}, "id": 8042, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21867:33:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "21845:55:10"}, {"assignments": [8048], "declarations": [{"constant": false, "id": 8048, "mutability": "mutable", "name": "amountsOut", "nodeType": "VariableDeclaration", "scope": 8061, "src": "22011:27:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 8046, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22011:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 8047, "nodeType": "ArrayTypeName", "src": "22011:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 8056, "initialValue": {"arguments": [{"id": 8051, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8027, "src": "22084:8:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 8052, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8039, "src": "22094:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 8053, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21538, "src": "22107:11:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 8054, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22107:13:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 8049, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17696, "src": "22041:12:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$17696_$", "typeString": "type(library GyroPoolMath)"}}, "id": 8050, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcTokensOutGivenExactBptIn", "nodeType": "MemberAccess", "referencedDeclaration": 17047, "src": "22041:42:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256[] memory)"}}, "id": 8055, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22041:80:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "22011:110:10"}, {"expression": {"components": [{"id": 8057, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8039, "src": "22139:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8058, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8048, "src": "22152:10:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 8059, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "22138:25:10", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "functionReturnParameters": 8037, "id": 8060, "nodeType": "Return", "src": "22131:32:10"}]}, "id": 8062, "implemented": true, "kind": "function", "modifiers": [], "name": "_exitExactBPTInForTokensOut", "nodeType": "FunctionDefinition", "overrides": {"id": 8031, "nodeType": "OverrideSpecifier", "overrides": [], "src": "21367:8:10"}, "parameters": {"id": 8030, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 8027, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 8062, "src": "21279:25:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 8025, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21279:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 8026, "nodeType": "ArrayTypeName", "src": "21279:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 8029, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 8062, "src": "21306:21:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 8028, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "21306:5:10", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "21278:50:10"}, "returnParameters": {"id": 8037, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 8033, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8062, "src": "21393:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8032, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21393:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8036, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8062, "src": "21402:16:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 8034, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21402:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 8035, "nodeType": "ArrayTypeName", "src": "21402:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "21392:27:10"}, "scope": 8352, "src": "21242:928:10", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 8088, "nodeType": "Block", "src": "22516:518:10", "statements": [{"assignments": [8069, 8071, 8073, 8075], "declarations": [{"constant": false, "id": 8069, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 8088, "src": "22744:16:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8068, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22744:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8071, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 8088, "src": "22762:20:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8070, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22762:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8073, "mutability": "mutable", "name": "gyroTreasury", "nodeType": "VariableDeclaration", "scope": 8088, "src": "22784:20:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 8072, "name": "address", "nodeType": "ElementaryTypeName", "src": "22784:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 8075, "mutability": "mutable", "name": "balTreasury", "nodeType": "VariableDeclaration", "scope": 8088, "src": "22806:19:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 8074, "name": "address", "nodeType": "ElementaryTypeName", "src": "22806:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 8080, "initialValue": {"arguments": [{"id": 8077, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3943, "src": "22868:14:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8078, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8065, "src": "22896:21:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 8076, "name": "_getDueProtocolFeeAmounts", "nodeType": "Identifier", "overloadedDeclarations": [8114, 8173], "referencedDeclaration": 8173, "src": "22829:25:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "function (uint256,uint256) view returns (uint256,uint256,address,address)"}}, "id": 8079, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22829:98:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "nodeType": "VariableDeclarationStatement", "src": "22743:184:10"}, {"expression": {"arguments": [{"id": 8082, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8069, "src": "22977:8:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8083, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8071, "src": "22987:12:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8084, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8073, "src": "23001:12:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 8085, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8075, "src": "23015:11:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 8081, "name": "_payFeesBpt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8205, "src": "22965:11:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$", "typeString": "function (uint256,uint256,address,address)"}}, "id": 8086, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22965:62:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 8087, "nodeType": "ExpressionStatement", "src": "22965:62:10"}]}, "documentation": {"id": 8063, "nodeType": "StructuredDocumentation", "src": "22192:253:10", "text": " @dev Computes and distributes fees between the Balancer and the Gyro treasury\n The fees are computed and distributed in BPT rather than using the\n Balancer regular distribution mechanism which would pay these in underlying"}, "id": 8089, "implemented": true, "kind": "function", "modifiers": [], "name": "_distributeFees", "nodeType": "FunctionDefinition", "parameters": {"id": 8066, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 8065, "mutability": "mutable", "name": "invariantBeforeAction", "nodeType": "VariableDeclaration", "scope": 8089, "src": "22476:29:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8064, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22476:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "22475:31:10"}, "returnParameters": {"id": 8067, "nodeType": "ParameterList", "parameters": [], "src": "22516:0:10"}, "scope": 8352, "src": "22451:583:10", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [5916], "body": {"id": 8113, "nodeType": "Block", "src": "23442:42:10", "statements": [{"expression": {"arguments": [{"hexValue": "4e6f7420696d706c656d656e746564", "id": 8110, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "23459:17:10", "typeDescriptions": {"typeIdentifier": "t_stringliteral_9f5474d7a5849b3f79e8aee7ea2c60bcd36a60a08b4fa41f97e2fccf1c4df98b", "typeString": "literal_string \"Not implemented\""}, "value": "Not implemented"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_9f5474d7a5849b3f79e8aee7ea2c60bcd36a60a08b4fa41f97e2fccf1c4df98b", "typeString": "literal_string \"Not implemented\""}], "id": 8109, "name": "revert", "nodeType": "Identifier", "overloadedDeclarations": [-19, -19], "referencedDeclaration": -19, "src": "23452:6:10", "typeDescriptions": {"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory) pure"}}, "id": 8111, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23452:25:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 8112, "nodeType": "ExpressionStatement", "src": "23452:25:10"}]}, "documentation": {"id": 8090, "nodeType": "StructuredDocumentation", "src": "23040:96:10", "text": " @dev this function overrides inherited function to make sure it is never used"}, "id": 8114, "implemented": true, "kind": "function", "modifiers": [], "name": "_getDueProtocolFeeAmounts", "nodeType": "FunctionDefinition", "overrides": {"id": 8104, "nodeType": "OverrideSpecifier", "overrides": [], "src": "23406:8:10"}, "parameters": {"id": 8103, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 8093, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8114, "src": "23185:16:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 8091, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23185:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 8092, "nodeType": "ArrayTypeName", "src": "23185:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 8096, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8114, "src": "23224:16:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 8094, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23224:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 8095, "nodeType": "ArrayTypeName", "src": "23224:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 8098, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8114, "src": "23272:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8097, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23272:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8100, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8114, "src": "23311:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8099, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23311:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8102, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8114, "src": "23349:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8101, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23349:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "23175:216:10"}, "returnParameters": {"id": 8108, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 8107, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8114, "src": "23424:16:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 8105, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23424:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 8106, "nodeType": "ArrayTypeName", "src": "23424:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "23423:18:10"}, "scope": 8352, "src": "23141:343:10", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 8172, "nodeType": "Block", "src": "24100:681:10", "statements": [{"assignments": [8131, 8133, 8135, 8137], "declarations": [{"constant": false, "id": 8131, "mutability": "mutable", "name": "protocolSwapFeePerc", "nodeType": "VariableDeclaration", "scope": 8172, "src": "24111:27:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8130, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24111:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8133, "mutability": "mutable", "name": "protocolFeeGyroPortion", "nodeType": "VariableDeclaration", "scope": 8172, "src": "24140:30:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8132, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24140:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8135, "mutability": "mutable", "name": "gyroTreasury", "nodeType": "VariableDeclaration", "scope": 8172, "src": "24172:20:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 8134, "name": "address", "nodeType": "ElementaryTypeName", "src": "24172:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 8137, "mutability": "mutable", "name": "balTreasury", "nodeType": "VariableDeclaration", "scope": 8172, "src": "24194:19:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 8136, "name": "address", "nodeType": "ElementaryTypeName", "src": "24194:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 8140, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 8138, "name": "_getFeesMetadata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8239, "src": "24217:16:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "function () view returns (uint256,uint256,address,address)"}}, "id": 8139, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24217:18:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "nodeType": "VariableDeclarationStatement", "src": "24110:125:10"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 8143, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 8141, "name": "protocolSwapFeePerc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8131, "src": "24331:19:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 8142, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "24354:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "24331:24:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 8151, "nodeType": "IfStatement", "src": "24327:95:10", "trueBody": {"id": 8150, "nodeType": "Block", "src": "24357:65:10", "statements": [{"expression": {"components": [{"hexValue": "30", "id": 8144, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "24379:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"hexValue": "30", "id": 8145, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "24382:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"id": 8146, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8135, "src": "24385:12:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 8147, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8137, "src": "24399:11:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 8148, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "24378:33:10", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_address_$_t_address_$", "typeString": "tuple(int_const 0,int_const 0,address,address)"}}, "functionReturnParameters": 8129, "id": 8149, "nodeType": "Return", "src": "24371:40:10"}]}}, {"assignments": [8153, 8155], "declarations": [{"constant": false, "id": 8153, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 8172, "src": "24466:16:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8152, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24466:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8155, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 8172, "src": "24484:20:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8154, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24484:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 8165, "initialValue": {"arguments": [{"id": 8158, "name": "previousInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8117, "src": "24552:17:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8159, "name": "currentInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8119, "src": "24583:16:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 8160, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21538, "src": "24613:11:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 8161, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24613:13:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8162, "name": "protocolSwapFeePerc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8131, "src": "24640:19:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8163, "name": "protocolFeeGyroPortion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8133, "src": "24673:22:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 8156, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17696, "src": "24508:12:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$17696_$", "typeString": "type(library GyroPoolMath)"}}, "id": 8157, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcProtocolFees", "nodeType": "MemberAccess", "referencedDeclaration": 17131, "src": "24508:30:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,uint256,uint256) pure returns (uint256,uint256)"}}, "id": 8164, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24508:197:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "24465:240:10"}, {"expression": {"components": [{"id": 8166, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8153, "src": "24724:8:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8167, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8155, "src": "24734:12:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8168, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8135, "src": "24748:12:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 8169, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8137, "src": "24762:11:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 8170, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "24723:51:10", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "functionReturnParameters": 8129, "id": 8171, "nodeType": "Return", "src": "24716:58:10"}]}, "documentation": {"id": 8115, "nodeType": "StructuredDocumentation", "src": "23490:372:10", "text": " @dev Calculates protocol fee amounts in BPT terms\n Overrides an inherited function and some arguments are intentionally not used (balances, normalizedWeights)\n protocolSwapFeePercentage is not used b/c we take parameters from GyroConfig instead\n Returns dueFees, where dueFees[0] = BPT due to Gyro, and dueFees[1] = BPT due to Balancer"}, "id": 8173, "implemented": true, "kind": "function", "modifiers": [], "name": "_getDueProtocolFeeAmounts", "nodeType": "FunctionDefinition", "parameters": {"id": 8120, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 8117, "mutability": "mutable", "name": "previousInvariant", "nodeType": "VariableDeclaration", "scope": 8173, "src": "23902:25:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8116, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23902:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8119, "mutability": "mutable", "name": "currentInvariant", "nodeType": "VariableDeclaration", "scope": 8173, "src": "23929:24:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8118, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23929:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "23901:53:10"}, "returnParameters": {"id": 8129, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 8122, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8173, "src": "24015:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8121, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24015:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8124, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8173, "src": "24036:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8123, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24036:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8126, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8173, "src": "24057:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 8125, "name": "address", "nodeType": "ElementaryTypeName", "src": "24057:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 8128, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8173, "src": "24078:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 8127, "name": "address", "nodeType": "ElementaryTypeName", "src": "24078:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "24001:94:10"}, "scope": 8352, "src": "23867:914:10", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 8204, "nodeType": "Block", "src": "24938:283:10", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 8186, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 8184, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8175, "src": "24996:8:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 8185, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "25007:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "24996:12:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 8193, "nodeType": "IfStatement", "src": "24992:82:10", "trueBody": {"id": 8192, "nodeType": "Block", "src": "25010:64:10", "statements": [{"expression": {"arguments": [{"id": 8188, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8179, "src": "25040:12:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 8189, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8175, "src": "25054:8:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 8187, "name": "_mintPoolTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18349, "src": "25024:15:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 8190, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25024:39:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 8191, "nodeType": "ExpressionStatement", "src": "25024:39:10"}]}}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 8196, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 8194, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8177, "src": "25130:12:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 8195, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "25145:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "25130:16:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 8203, "nodeType": "IfStatement", "src": "25126:89:10", "trueBody": {"id": 8202, "nodeType": "Block", "src": "25148:67:10", "statements": [{"expression": {"arguments": [{"id": 8198, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8181, "src": "25178:11:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 8199, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8177, "src": "25191:12:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 8197, "name": "_mintPoolTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18349, "src": "25162:15:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 8200, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25162:42:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 8201, "nodeType": "ExpressionStatement", "src": "25162:42:10"}]}}]}, "id": 8205, "implemented": true, "kind": "function", "modifiers": [], "name": "_payFeesBpt", "nodeType": "FunctionDefinition", "parameters": {"id": 8182, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 8175, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 8205, "src": "24817:16:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8174, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24817:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8177, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 8205, "src": "24843:20:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8176, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24843:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8179, "mutability": "mutable", "name": "gyroTreasury", "nodeType": "VariableDeclaration", "scope": 8205, "src": "24873:20:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 8178, "name": "address", "nodeType": "ElementaryTypeName", "src": "24873:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 8181, "mutability": "mutable", "name": "balTreasury", "nodeType": "VariableDeclaration", "scope": 8205, "src": "24903:19:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 8180, "name": "address", "nodeType": "ElementaryTypeName", "src": "24903:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "24807:121:10"}, "returnParameters": {"id": 8183, "nodeType": "ParameterList", "parameters": [], "src": "24938:0:10"}, "scope": 8352, "src": "24787:434:10", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 8238, "nodeType": "Block", "src": "25400:324:10", "statements": [{"expression": {"components": [{"arguments": [{"expression": {"id": 8218, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16891, "src": "25450:14:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$16891_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 8219, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "PROTOCOL_SWAP_FEE_PERC_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 16881, "src": "25450:41:10", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 8216, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6936, "src": "25431:10:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$16876", "typeString": "contract IGyroConfig"}}, "id": 8217, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getUint", "nodeType": "MemberAccess", "referencedDeclaration": 16851, "src": "25431:18:10", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_uint256_$", "typeString": "function (bytes32) view external returns (uint256)"}}, "id": 8220, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25431:61:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"expression": {"id": 8223, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16891, "src": "25525:14:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$16891_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 8224, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "PROTOCOL_FEE_GYRO_PORTION_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 16884, "src": "25525:44:10", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 8221, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6936, "src": "25506:10:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$16876", "typeString": "contract IGyroConfig"}}, "id": 8222, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getUint", "nodeType": "MemberAccess", "referencedDeclaration": 16851, "src": "25506:18:10", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_uint256_$", "typeString": "function (bytes32) view external returns (uint256)"}}, "id": 8225, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25506:64:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"expression": {"id": 8228, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16891, "src": "25606:14:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$16891_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 8229, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "GYRO_TREASURY_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 16887, "src": "25606:32:10", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 8226, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6936, "src": "25584:10:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$16876", "typeString": "contract IGyroConfig"}}, "id": 8227, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getAddress", "nodeType": "MemberAccess", "referencedDeclaration": 16859, "src": "25584:21:10", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$", "typeString": "function (bytes32) view external returns (address)"}}, "id": 8230, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25584:55:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"expression": {"id": 8233, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16891, "src": "25675:14:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$16891_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 8234, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "BAL_TREASURY_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 16890, "src": "25675:31:10", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 8231, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6936, "src": "25653:10:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$16876", "typeString": "contract IGyroConfig"}}, "id": 8232, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getAddress", "nodeType": "MemberAccess", "referencedDeclaration": 16859, "src": "25653:21:10", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$", "typeString": "function (bytes32) view external returns (address)"}}, "id": 8235, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25653:54:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 8236, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "25417:300:10", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "functionReturnParameters": 8215, "id": 8237, "nodeType": "Return", "src": "25410:307:10"}]}, "id": 8239, "implemented": true, "kind": "function", "modifiers": [], "name": "_getFeesMetadata", "nodeType": "FunctionDefinition", "parameters": {"id": 8206, "nodeType": "ParameterList", "parameters": [], "src": "25252:2:10"}, "returnParameters": {"id": 8215, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 8208, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8239, "src": "25315:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8207, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25315:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8210, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8239, "src": "25336:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8209, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25336:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8212, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8239, "src": "25357:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 8211, "name": "address", "nodeType": "ElementaryTypeName", "src": "25357:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 8214, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 8239, "src": "25378:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 8213, "name": "address", "nodeType": "ElementaryTypeName", "src": "25378:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "25301:94:10"}, "scope": 8352, "src": "25227:497:10", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 8338, "nodeType": "Block", "src": "26263:1264:10", "statements": [{"assignments": [8254], "declarations": [{"constant": false, "id": 8254, "mutability": "mutable", "name": "miscData", "nodeType": "VariableDeclaration", "scope": 8338, "src": "26273:16:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 8253, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "26273:7:10", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 8256, "initialValue": {"id": 8255, "name": "_miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3941, "src": "26292:9:10", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "26273:28:10"}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 8264, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 8257, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8254, "src": "26315:8:10", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 8258, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "oracleEnabled", "nodeType": "MemberAccess", "referencedDeclaration": 17794, "src": "26315:22:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bool_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (bool)"}}, "id": 8259, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26315:24:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 8263, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 8260, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "26343:5:10", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 8261, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "number", "nodeType": "MemberAccess", "src": "26343:12:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"id": 8262, "name": "lastChangeBlock", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8242, "src": "26358:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "26343:30:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "26315:58:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 8337, "nodeType": "IfStatement", "src": "26311:1210:10", "trueBody": {"id": 8336, "nodeType": "Block", "src": "26375:1146:10", "statements": [{"assignments": [8266], "declarations": [{"constant": false, "id": 8266, "mutability": "mutable", "name": "logSpotPrice", "nodeType": "VariableDeclaration", "scope": 8336, "src": "26389:19:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 8265, "name": "int256", "nodeType": "ElementaryTypeName", "src": "26389:6:10", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 8274, "initialValue": {"arguments": [{"id": 8269, "name": "balanceToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8244, "src": "26447:13:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8270, "name": "virtualParam0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8248, "src": "26462:13:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8271, "name": "balanceToken1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8246, "src": "26477:13:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8272, "name": "virtualParam1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8250, "src": "26492:13:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 8267, "name": "GyroTwoOracleMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6904, "src": "26411:17:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroTwoOracleMath_$6904_$", "typeString": "type(contract GyroTwoOracleMath)"}}, "id": 8268, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcLogSpotPrice", "nodeType": "MemberAccess", "referencedDeclaration": 6856, "src": "26411:35:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_int256_$", "typeString": "function (uint256,uint256,uint256,uint256) pure returns (int256)"}}, "id": 8273, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26411:95:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "VariableDeclarationStatement", "src": "26389:117:10"}, {"assignments": [8276], "declarations": [{"constant": false, "id": 8276, "mutability": "mutable", "name": "logBPTPrice", "nodeType": "VariableDeclaration", "scope": 8336, "src": "26521:18:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 8275, "name": "int256", "nodeType": "ElementaryTypeName", "src": "26521:6:10", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 8287, "initialValue": {"arguments": [{"id": 8279, "name": "balanceToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8244, "src": "26594:13:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8280, "name": "virtualParam0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8248, "src": "26625:13:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8281, "name": "balanceToken1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8246, "src": "26656:13:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8282, "name": "virtualParam1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8250, "src": "26687:13:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 8283, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8254, "src": "26718:8:10", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 8284, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "logTotalSupply", "nodeType": "MemberAccess", "referencedDeclaration": 17752, "src": "26718:23:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_int256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (int256)"}}, "id": 8285, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26718:25:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 8277, "name": "GyroTwoOracleMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6904, "src": "26542:17:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroTwoOracleMath_$6904_$", "typeString": "type(contract GyroTwoOracleMath)"}}, "id": 8278, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcLogBPTPrice", "nodeType": "MemberAccess", "referencedDeclaration": 6903, "src": "26542:34:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_int256_$returns$_t_int256_$", "typeString": "function (uint256,uint256,uint256,uint256,int256) pure returns (int256)"}}, "id": 8286, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26542:215:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "VariableDeclarationStatement", "src": "26521:236:10"}, {"assignments": [8289], "declarations": [{"constant": false, "id": 8289, "mutability": "mutable", "name": "oracleCurrentIndex", "nodeType": "VariableDeclaration", "scope": 8336, "src": "26772:26:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8288, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26772:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 8293, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 8290, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8254, "src": "26801:8:10", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 8291, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "oracleIndex", "nodeType": "MemberAccess", "referencedDeclaration": 17780, "src": "26801:20:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (uint256)"}}, "id": 8292, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26801:22:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "26772:51:10"}, {"assignments": [8295], "declarations": [{"constant": false, "id": 8295, "mutability": "mutable", "name": "oracleCurrentSampleInitialTimestamp", "nodeType": "VariableDeclaration", "scope": 8336, "src": "26837:43:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8294, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26837:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 8299, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 8296, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8254, "src": "26883:8:10", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 8297, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "oracleSampleCreationTimestamp", "nodeType": "MemberAccess", "referencedDeclaration": 17766, "src": "26883:38:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (uint256)"}}, "id": 8298, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26883:40:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "26837:86:10"}, {"assignments": [8301], "declarations": [{"constant": false, "id": 8301, "mutability": "mutable", "name": "oracleUpdatedIndex", "nodeType": "VariableDeclaration", "scope": 8336, "src": "26937:26:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8300, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26937:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 8311, "initialValue": {"arguments": [{"id": 8303, "name": "oracleCurrentSampleInitialTimestamp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8295, "src": "27001:35:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8304, "name": "oracleCurrentIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8289, "src": "27054:18:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 8305, "name": "logSpotPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8266, "src": "27090:12:10", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 8306, "name": "logBPTPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8276, "src": "27120:11:10", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 8307, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8254, "src": "27149:8:10", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 8308, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "logInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 17738, "src": "27149:21:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_int256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (int256)"}}, "id": 8309, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27149:23:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "id": 8302, "name": "_processPriceData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20039, "src": "26966:17:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_int256_$_t_int256_$_t_int256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,int256,int256,int256) returns (uint256)"}}, "id": 8310, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26966:220:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "26937:249:10"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 8314, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 8312, "name": "oracleCurrentIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8289, "src": "27205:18:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"id": 8313, "name": "oracleUpdatedIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8301, "src": "27227:18:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "27205:40:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 8335, "nodeType": "IfStatement", "src": "27201:310:10", "trueBody": {"id": 8334, "nodeType": "Block", "src": "27247:264:10", "statements": [{"expression": {"id": 8320, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 8315, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8254, "src": "27317:8:10", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 8318, "name": "oracleUpdatedIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8301, "src": "27352:18:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 8316, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8254, "src": "27328:8:10", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 8317, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "setOracleIndex", "nodeType": "MemberAccess", "referencedDeclaration": 17876, "src": "27328:23:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_bytes32_$", "typeString": "function (bytes32,uint256) pure returns (bytes32)"}}, "id": 8319, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27328:43:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "27317:54:10", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 8321, "nodeType": "ExpressionStatement", "src": "27317:54:10"}, {"expression": {"id": 8328, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 8322, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8254, "src": "27389:8:10", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 8325, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "27442:5:10", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 8326, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "27442:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 8323, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8254, "src": "27400:8:10", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 8324, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "setOracleSampleCreationTimestamp", "nodeType": "MemberAccess", "referencedDeclaration": 17859, "src": "27400:41:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_bytes32_$", "typeString": "function (bytes32,uint256) pure returns (bytes32)"}}, "id": 8327, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27400:58:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "27389:69:10", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 8329, "nodeType": "ExpressionStatement", "src": "27389:69:10"}, {"expression": {"id": 8332, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 8330, "name": "_miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3941, "src": "27476:9:10", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 8331, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8254, "src": "27488:8:10", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "27476:20:10", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 8333, "nodeType": "ExpressionStatement", "src": "27476:20:10"}]}}]}}]}, "documentation": {"id": 8240, "nodeType": "StructuredDocumentation", "src": "25730:333:10", "text": " @dev Updates the Price Oracle based on the Pool's current state (balances, BPT supply and invariant). Must be\n called on *all* state-changing functions with the balances *before* the state change happens, and with\n `lastChangeBlock` as the number of the block in which any of the balances last changed."}, "id": 8339, "implemented": true, "kind": "function", "modifiers": [], "name": "_updateOracle", "nodeType": "FunctionDefinition", "parameters": {"id": 8251, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 8242, "mutability": "mutable", "name": "lastChangeBlock", "nodeType": "VariableDeclaration", "scope": 8339, "src": "26100:23:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8241, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26100:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8244, "mutability": "mutable", "name": "balanceToken0", "nodeType": "VariableDeclaration", "scope": 8339, "src": "26133:21:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8243, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26133:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8246, "mutability": "mutable", "name": "balanceToken1", "nodeType": "VariableDeclaration", "scope": 8339, "src": "26164:21:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8245, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26164:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8248, "mutability": "mutable", "name": "virtualParam0", "nodeType": "VariableDeclaration", "scope": 8339, "src": "26195:21:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8247, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26195:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8250, "mutability": "mutable", "name": "virtualParam1", "nodeType": "VariableDeclaration", "scope": 8339, "src": "26226:21:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8249, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26226:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "26090:163:10"}, "returnParameters": {"id": 8252, "nodeType": "ParameterList", "parameters": [], "src": "26263:0:10"}, "scope": 8352, "src": "26068:1459:10", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [5712], "body": {"id": 8350, "nodeType": "Block", "src": "27954:30:10", "statements": []}, "documentation": {"id": 8340, "nodeType": "StructuredDocumentation", "src": "27533:274:10", "text": " @dev this variant of the function, called from `onJoinPool()` and `onExitPool()`, which we inherit, is a no-op. We instead have moved responsibility for updating the oracle to `_onJoinPool()` and `_onExitPool()` and the above version is called from there."}, "id": 8351, "implemented": true, "kind": "function", "modifiers": [], "name": "_updateOracle", "nodeType": "FunctionDefinition", "overrides": {"id": 8348, "nodeType": "OverrideSpecifier", "overrides": [], "src": "27945:8:10"}, "parameters": {"id": 8347, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 8342, "mutability": "mutable", "name": "lastChangeBlock", "nodeType": "VariableDeclaration", "scope": 8351, "src": "27844:23:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8341, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27844:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8344, "mutability": "mutable", "name": "balanceToken0", "nodeType": "VariableDeclaration", "scope": 8351, "src": "27877:21:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8343, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27877:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 8346, "mutability": "mutable", "name": "balanceToken1", "nodeType": "VariableDeclaration", "scope": 8351, "src": "27908:21:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8345, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27908:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "27834:101:10"}, "returnParameters": {"id": 8349, "nodeType": "ParameterList", "parameters": [], "src": "27954:0:10"}, "scope": 8352, "src": "27812:172:10", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}], "scope": 8353, "src": "1263:26723:10"}], "src": "688:27299:10"}, "bytecode": "6102e06040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9610120523480156200003757600080fd5b50604051620058d9380380620058d98339810160408190526200005a916200087e565b81516101008101516101208201516020808401516040808601518651825180840190935260018352603160f81b838601526101608801513360805260601b6001600160601b03191660a05283519394919390928592839283918791620000c7916003919085019062000711565b508051620000dd90600490602084019062000711565b505060058054601260ff1990911617905550815160209283012060c052805191012060e052507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6101005260601b6001600160601b03191661014052506200015090506276a7008311156101946200047c565b6200016462278d008211156101956200047c565b429091016101608190520161018052610140810151620001849062000491565b60e08101516200019490620004ed565b80516040516309b2760f60e01b81526000916001600160a01b0316906309b2760f90620001c79060029060040162000add565b602060405180830381600087803b158015620001e257600080fd5b505af1158015620001f7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200021d919062000865565b6040805160028082526060808301845293945090916020830190803683370190505090508260600151816000815181106200025457fe5b60200260200101906001600160a01b031690816001600160a01b0316815250508260800151816001815181106200028757fe5b6001600160a01b0392831660209182029290920101528351166366a9c7d283836002604051908082528060200260200182016040528015620002d3578160200160208202803683370190505b506040518463ffffffff1660e01b8152600401620002f49392919062000a41565b600060405180830381600087803b1580156200030f57600080fd5b505af115801562000324573d6000803e3d6000fd5b5050506101a083905250606080840180516001600160601b031990831b81166101c052608086015190921b9091166101e0525162000362906200056b565b61026052608083015162000376906200056b565b6102805260a08301516200039790662386f26fc10000111561012e6200047c565b620003b9662386f26fc100008460c00151101561012e6200047c60201b60201c565b6000620003dd8460c001518560a001516200060d60201b620014bf1790919060201c565b9050620003f7670de0b6b3a764000082146101346200047c565b60a0840180516102005260c0850180516102205251905110156200041d57600162000420565b60005b60ff1661024052505050604083015160208401516200044492501061015e6200047c565b60208201516102a0526040909101516102c052600b80546001600160a01b0319166001600160a01b0390921691909117905562000b2e565b816200048d576200048d816200062a565b5050565b620004ad816009546200067d60201b620014d81790919060201c565b6009556040517f3e350b41e86a8e10f804ade6d35340d620be35569cc75ac943e8bb14ab80ead190620004e290839062000a36565b60405180910390a150565b6200050264e8d4a5100082101560cb6200047c565b6200051a67016345785d8a000082111560ca6200047c565b62000536816009546200069c60201b620014e61790919060201c565b6009556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc90620004e290839062000af2565b600080826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015620005a857600080fd5b505afa158015620005bd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005e3919062000a13565b60ff169050600062000602601283620006bb60201b620014f41760201c565b600a0a949350505050565b60008282016200062184821015836200047c565b90505b92915050565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b60006200062182605585620006d360201b6200150a179092919060201c565b60006200062182605685620006fc60201b62001531179092919060201c565b6000620006cd8383111560016200047c565b50900390565b60006001821b1984168284620006eb576000620006ee565b60015b60ff16901b17949350505050565b6001600160401b03811b1992909216911b1790565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200075457805160ff191683800117855562000784565b8280016001018555821562000784579182015b828111156200078457825182559160200191906001019062000767565b506200079292915062000796565b5090565b5b8082111562000792576000815560010162000797565b80516001600160a01b03811681146200062457600080fd5b805180151581146200062457600080fd5b600082601f830112620007e7578081fd5b81516001600160401b03811115620007fd578182fd5b602062000813601f8301601f1916820162000afb565b925081835284818386010111156200082a57600080fd5b60005b828110156200084a5784810182015184820183015281016200082d565b828111156200085c5760008284860101525b50505092915050565b60006020828403121562000877578081fd5b5051919050565b6000806040838503121562000891578081fd5b82516001600160401b0380821115620008a8578283fd5b9084019060608287031215620008bc578283fd5b620008c8606062000afb565b825182811115620008d7578485fd5b8301610180818903811315620008eb578586fd5b620008f68162000afb565b9050620009048983620007ad565b815260208201518481111562000918578687fd5b620009268a828501620007d6565b6020830152506040820151848111156200093e578687fd5b6200094c8a828501620007d6565b604083015250620009618960608401620007ad565b6060820152620009758960808401620007ad565b608082015260a0828101519082015260c0808301519082015260e08083015190820152610100808301519082015261012080830151908201526101409350620009c189858401620007c5565b848201526101609350620009d889858401620007ad565b848201528083525050602083015160208201526040830151604082015280945050505062000a0a8460208501620007ad565b90509250929050565b60006020828403121562000a25578081fd5b815160ff8116811462000621578182fd5b901515815260200190565b60006060820185835260206060818501528186518084526080860191508288019350845b8181101562000a8d5762000a7a855162000b22565b8352938301939183019160010162000a65565b505084810360408601528551808252908201925081860190845b8181101562000acf5762000abc835162000b22565b8552938301939183019160010162000aa7565b509298975050505050505050565b602081016003831062000aec57fe5b91905290565b90815260200190565b6040518181016001600160401b038111828210171562000b1a57600080fd5b604052919050565b6001600160a01b031690565b60805160a05160601c60c05160e05161010051610120516101405160601c61016051610180516101a0516101c05160601c6101e05160601c61020051610220516102405161026051610280516102a0516102c051614cdd62000bfc60003980612a14525080612a3b5250806121a65250806121cd5250508061304f52508061307652505080610e9452508061091452508061169d525080611679525080610ce252508061123d5250806118c952508061190b5250806118ea525080610cbe525080610c495250614cdd6000f3fe608060405234801561001057600080fd5b506004361061027f5760003560e01c8063707dcd1e1161015c5780639d2c110c116100ce578063c0ff1a1511610087578063c0ff1a151461055d578063d505accf14610565578063d5c096c414610578578063dd62ed3e1461058b578063f89f27ed1461059e578063ffd088eb146105a65761027f565b80639d2c110c14610501578063a457c2d714610514578063a9059cbb14610527578063aaabadc51461053a578063b10be73914610542578063b48b5b40146105555761027f565b806387ec68171161012057806387ec6817146104c6578063893d20e8146104d95780638d928af8146104e15780638dd9f89d146104e957806395d89b41146104f15780639b02cdde146104f95761027f565b8063707dcd1e1461046457806370a082311461046c57806374f3b0091461047f5780637ecebe00146104a0578063851c1bb3146104b35761027f565b806338e9922e116101f55780634a6b0b15116101b95780634a6b0b15146103d357806355c67628146103ed5780636028bfd4146103f557806360d1507c14610416578063679aefce1461043c5780636b843239146104445761027f565b806338e9922e1461036e57806338fff2d01461038157806339509351146103895780633c4dd5bb1461039c57806344bbdb55146103be5761027f565b80631dccd830116102475780631dccd8301461030357806323b872dd14610323578063292c914a14610336578063313ce5671461033e5780633331bc36146103535780633644e515146103665761027f565b806306fdde0314610284578063095ea7b3146102a257806316c38b3c146102c257806318160ddd146102d75780631c0de051146102ec575b600080fd5b61028c6105ae565b6040516102999190614b72565b60405180910390f35b6102b56102b03660046142ba565b610644565b60405161029991906149c7565b6102d56102d0366004614528565b61065b565b005b6102df61066f565b60405161029991906149ea565b6102f4610675565b604051610299939291906149d2565b61031661031136600461446e565b61069e565b604051610299919061498f565b6102b5610331366004614205565b6107c1565b6102d5610835565b610346610869565b6040516102999190614c1a565b6102d5610361366004614861565b610872565b6102df6108ea565b6102d561037c366004614849565b6108f9565b6102df610912565b6102b56103973660046142ba565b610936565b6103af6103aa366004614882565b610971565b60405161029993929190614c04565b6103c6610990565b6040516102999190614937565b6103db61099f565b60405161029996959493929190614ac0565b6102df6109fa565b610408610403366004614560565b610a07565b604051610299929190614beb565b610429610424366004614849565b610a38565b6040516102999796959493929190614a90565b6102df610a81565b6104576104523660046143b0565b610aa6565b604051610299919061494b565b610316610b5c565b6102df61047a366004614195565b610b66565b61049261048d366004614560565b610b85565b6040516102999291906149a2565b6102df6104ae366004614195565b610c2a565b6102df6104c136600461465c565b610c45565b6104086104d4366004614560565b610c97565b6103c6610cbc565b6103c6610ce0565b610316610d04565b61028c610e04565b6102df610e65565b6102df61050f36600461474e565b610e6b565b6102b56105223660046142ba565b611033565b6102b56105353660046142ba565b611071565b6103c661107e565b6102df61055036600461471b565b611088565b6102df61111d565b6102df611123565b6102d5610573366004614245565b611208565b610492610586366004614560565b611351565b6102df6105993660046141cd565b611471565b6103166114ae565b6102df6114b8565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561063a5780601f1061060f5761010080835404028352916020019161063a565b820191906000526020600020905b81548152906001019060200180831161061d57829003601f168201915b5050505050905090565b6000610651338484611546565b5060015b92915050565b6106636115ae565b61066c816115dc565b50565b60025490565b600080600061068261165a565b15925061068d611677565b915061069761169b565b9050909192565b606081516001600160401b03811180156106b757600080fd5b506040519080825280602002602001820160405280156106e1578160200160208202803683370190505b50905060006106ee6116bf565b905060005b83518110156107ba5773__QueryProcessor________________________6379eaef82600886848151811061072457fe5b6020026020010151856040518463ffffffff1660e01b815260040161074b93929190614b36565b60206040518083038186803b15801561076357600080fd5b505af4158015610777573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079b9190614736565b8382815181106107a757fe5b60209081029190910101526001016106f3565b5050919050565b6000806107ce8533611471565b90506107f2336001600160a01b03871614806107ea5750838210155b61019e6116cc565b6107fd8585856116de565b336001600160a01b0386161480159061081857506000198114155b1561082a5761082a8533858403611546565b506001949350505050565b61083d6117be565b6108456115ae565b61084f60016117d1565b600061085961066f565b111561086757610867611811565b565b60055460ff1690565b61088d818310801561088657506104008211155b60646116cc565b60006108a26001600080600080600080611859565b9050825b828110156108e4576000818152600860205260409020546108c6906118b9565b6108dc5760008181526008602052604090208290555b6001016108a6565b50505050565b60006108f46118c5565b905090565b6109016115ae565b6109096117be565b61066c81611962565b7f000000000000000000000000000000000000000000000000000000000000000090565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161065191859061096c90866114bf565b611546565b60008060006109818686866119cb565b92509250925093509350939050565b600b546001600160a01b031681565b600080600080600080600060095490506109b881611b06565b96506109c381611b12565b95506109ce81611b1f565b94506109d981611b2c565b93506109e481611b39565b92506109ef81611b46565b915050909192939495565b60006108f4600954611b46565b60006060610a1786516002611b53565b610a2c89898989898989611b60611cb1611d2f565b97509795505050505050565b6000806000806000806000610a53610400891061013b6116cc565b6000610a5e89611e43565b9050610a6981611e55565b959f949e50929c50909a509850965090945092505050565b60006108f4610a8e61066f565b610aa0610a99611123565b6002611eb8565b90611edc565b606081516001600160401b0381118015610abf57600080fd5b50604051908082528060200260200182016040528015610ae9578160200160208202803683370190505b5090506000610af66116bf565b9050610b0061407f565b60005b8451811015610b5457848181518110610b1857fe5b60200260200101519150610b358260000151848460200151611f1b565b848281518110610b4157fe5b6020908102919091010152600101610b03565b505050919050565b60606108f4611fb4565b6001600160a01b0381166000908152602081905260409020545b919050565b60608088610baf610b94610ce0565b6001600160a01b0316336001600160a01b03161460cd6116cc565b610bc4610bba610912565b82146101f46116cc565b610bcd87612022565b6000606080610be18d8d8d8d8d8d8d611b60565b925092509250610bf18c84612084565b610bfa82611cb1565b610c0381611cb1565b610c0b61165a565b15610c1857610c18611811565b909c909b509950505050505050505050565b6001600160a01b031660009081526006602052604090205490565b60007f000000000000000000000000000000000000000000000000000000000000000082604051602001610c7a9291906148f4565b604051602081830303815290604052805190602001209050919050565b60006060610ca786516002611b53565b610a2c8989898989898961208e61213f611d2f565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b606080610d0f610ce0565b6001600160a01b031663f94d4668610d25610912565b6040518263ffffffff1660e01b8152600401610d4191906149ea565b60006040518083038186803b158015610d5957600080fd5b505afa158015610d6d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d9591908101906142e5565b50915050610dcd81600081518110610da957fe5b602002602001015182600181518110610dbe57fe5b602002602001015160016119cb565b90915083600081518110610ddd57fe5b6020026020010184600181518110610df157fe5b6020908102919091010191909152525090565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561063a5780601f1061060f5761010080835404028352916020019161063a565b600a5490565b6000610e756117be565b8360800151610e85610b94610ce0565b610e90610bba610912565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031686602001516001600160a01b03161490506000610ed88261219d565b90506000610ee6831561219d565b9050610ef287836121f1565b9650610efe86826121f1565b95506000806000610f108a8a886119cb565b925092509250610f578b60a0015187610f29578a610f2b565b8b5b88610f36578c610f38565b8b5b89610f435784610f45565b855b8a610f505786610f52565b855b6121fd565b60008b516001811115610f6657fe5b1415610fd6576000610f84610f796109fa565b60608e0151906122a7565b9050610fa6610fa0828e606001516114f490919063ffffffff16565b876121f1565b60608d01526000610fbb8d8d8d87878a6122eb565b9050610fc78187612309565b9950505050505050505061102b565b610fe48b60600151856121f1565b60608c01526000610ff98c8c8c868689612315565b90506110058187612328565b905061102161101a6110156109fa565b612334565b829061235a565b9850505050505050505b509392505050565b6000806110403385611471565b905080831061105a5761105533856000611546565b611067565b6110673385858403611546565b5060019392505050565b60006106513384846116de565b60006108f46123a5565b600073__QueryProcessor________________________630397bee06008846110af6116bf565b6040518463ffffffff1660e01b81526004016110cd93929190614aea565b60206040518083038186803b1580156110e557600080fd5b505af41580156110f9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106559190614736565b61040090565b6000606061112f610ce0565b6001600160a01b031663f94d4668611145610912565b6040518263ffffffff1660e01b815260040161116191906149ea565b60006040518083038186803b15801561117957600080fd5b505afa15801561118d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111b591908101906142e5565b5091505060606111c3611fb4565b90506111ce82612022565b61120182826000815181106111df57fe5b6020026020010151836001815181106111f457fe5b602002602001015161241f565b9250505090565b6112168442111560d16116cc565b6001600160a01b038716600090815260066020908152604080832054905190929161126d917f0000000000000000000000000000000000000000000000000000000000000000918c918c918c9188918d9101614a12565b604051602081830303815290604052805190602001209050600061129082612452565b90506000600182888888604051600081526020016040526040516112b79493929190614a72565b6020604051602081039080840390855afa1580156112d9573d6000803e3d6000fd5b5050604051601f190151915061131b90506001600160a01b0382161580159061131357508b6001600160a01b0316826001600160a01b0316145b6101f86116cc565b6001600160a01b038b1660009081526006602052604090206001850190556113448b8b8b611546565b5050505050505050505050565b60608088611360610b94610ce0565b61136b610bba610912565b6113736117be565b600061137d61066f565b6113ed5761138d8b8b8b8861246e565b945090506113a2620f424082101560cc6116cc565b6113b06000620f42406124fe565b6113bf89620f424083036124fe565b6113c88461213f565b604080516002808252606082018352909160208301908036833701905050925061145b565b6113f688612022565b611429878960008151811061140757fe5b60200260200101518a60018151811061141c57fe5b6020026020010151612508565b6114388b8b8b8b8b8b8b61208e565b9095509350905061144989826124fe565b6114528461213f565b61145b83611cb1565b611463611811565b505097509795505050505050565b600061147b610ce0565b6001600160a01b0316826001600160a01b0316141561149d5750600019610655565b6114a7838361250d565b9050610655565b60606108f4612538565b6201de2090565b60008282016114d184821015836116cc565b9392505050565b60006114d18383605561150a565b60006114d183836056611531565b60006115048383111560016116cc565b50900390565b60006001821b1984168284611520576000611523565b60015b60ff16901b17949350505050565b6001600160401b03811b1992909216911b1790565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906115a19085906149ea565b60405180910390a3505050565b60006115c56000356001600160e01b031916610c45565b905061066c6115d48233612589565b6101916116cc565b80156115fc576115f76115ed611677565b42106101936116cc565b611611565b61161161160761169b565b42106101a96116cc565b6007805460ff19168215151790556040517f9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be649061164f9083906149c7565b60405180910390a150565b600061166461169b565b4211806108f457505060075460ff161590565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b60006108f4600954611b2c565b816116da576116da81612672565b5050565b6116f56001600160a01b03841615156101986116cc565b61170c6001600160a01b03831615156101996116cc565b611717838383612508565b6001600160a01b03831660009081526020819052604090205461173d90826101a06126c5565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461176c90826114bf565b6001600160a01b0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906115a19085906149ea565b6108676117c961165a565b6101926116cc565b6009546117de90826114d8565b6009556040517f3e350b41e86a8e10f804ade6d35340d620be35569cc75ac943e8bb14ab80ead19061164f9083906149c7565b60095461181d81611b39565b1561066c57611837611830600a546126db565b829061271b565b905061185361184c61184761066f565b6126db565b8290612728565b60095550565b60006118658282612736565b61187084601f61273a565b61187b86605461274b565b61188688606a61273a565b6118918a609f61274b565b61189c8c60b561273a565b6118a78e60ea61274b565b17171717171798975050505050505050565b60006106558282612758565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611932612762565b30604051602001611947959493929190614a46565b60405160208183030381529060405280519060200120905090565b61197564e8d4a5100082101560cb6116cc565b61198b67016345785d8a000082111560ca6116cc565b60095461199890826114e6565b6009556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc9061164f9083906149ea565b60408051600280825260608083018452600093849384939091602083019080368337019050509050846119fe5785611a00565b865b81600081518110611a0d57fe5b60200260200101818152505084611a245786611a26565b855b81600181518110611a3357fe5b6020026020010181815250506060611a49611fb4565b9050611a5c82826000815181106111df57fe5b604080516002808252606080830184529398509091602083019080368337019050509050611a8a8287612766565b905086611aab5780600181518110611a9e57fe5b6020026020010151611ac1565b80600081518110611ab857fe5b60200260200101515b945086611ae25780600081518110611ad557fe5b6020026020010151611af8565b80600181518110611aef57fe5b60200260200101515b935050505093509350939050565b600061065582826127f4565b60006106558260166127f4565b600061065582602c612758565b600061065582604b61281b565b6000610655826055612823565b600061065582605661282d565b6116da81831460676116cc565b60006060806060611b6f611fb4565b9050611b7961165a565b15611c4a576000611ba68983600081518110611b9157fe5b6020026020010151846001815181106111f457fe5b90506060611bb48383612766565b9050611c13898b600081518110611bc757fe5b60200260200101518c600181518110611bdc57fe5b602002602001015184600081518110611bf157fe5b602002602001015185600181518110611c0657fe5b60200260200101516121fd565b611c1c8261283a565b611c268a88612867565b9096509450611c3f8287611c3861066f565b60006128b3565b600a5550611c7b9050565b611c548886612867565b9094509250611c6688846114f461290b565b611c7788826000815181106111df57fe5b600a555b60408051600280825260608201835286928692919060208301908036833701905050935093509350509750975097945050505050565b611cd881600081518110611cc157fe5b6020026020010151611cd3600161219d565b61299d565b81600081518110611ce557fe5b602002602001018181525050611d1381600181518110611d0157fe5b6020026020010151611cd3600061219d565b81600181518110611d2057fe5b60200260200101818152505050565b333014611ded576000306001600160a01b0316600036604051611d5392919061490c565b6000604051808303816000865af19150503d8060008114611d90576040519150601f19603f3d011682016040523d82523d6000602084013e611d95565b606091505b505090508060008114611da457fe5b60046000803e6000516001600160e01b0319166343adbafb60e01b8114611dcf573d6000803e3d6000fd5b506020600460003e604060205260243d03602460403e601c3d016000f35b611df686612022565b60006060611e0d8b8b8b8b8b8b8b8b63ffffffff16565b5091509150611e1f818463ffffffff16565b8051601f1982018390526343adbafb603f1983015260200260231982016044820181fd5b60009081526008602052604090205490565b6000806000806000806000611e69886129bd565b9650611e74886129ca565b9550611e7f886129d7565b9450611e8a886129e4565b9350611e95886129f1565b9250611ea0886129fe565b9150611eab886118b9565b9050919395979092949650565b60008282026114d1841580611ed5575083858381611ed257fe5b04145b60036116cc565b600081611ee857600080fd5b670de0b6b3a764000083810290848281611efe57fe5b0414611f0957600080fd5b828181611f1257fe5b04949350505050565b6040516334171a8560e01b815260009073__QueryProcessor________________________906334171a8590611f5c90600890889088908890600401614b0b565b60206040518083038186803b158015611f7457600080fd5b505af4158015611f88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fac9190614736565b949350505050565b604080516002808252606080830184529283929190602083019080368337019050509050611fe26001612a0b565b81600081518110611fef57fe5b6020026020010181815250506120056000612a0b565b8160018151811061201257fe5b6020908102919091010152905090565b6120498160008151811061203257fe5b6020026020010151612044600161219d565b611eb8565b8160008151811061205657fe5b602002602001018181525050611d138160018151811061207257fe5b6020026020010151612044600061219d565b6116da8282612a5f565b6000606080606061209d611fb4565b905060006120b28983600081518110611b9157fe5b905060606120c08383612766565b90506120d3898b600081518110611bc757fe5b6120dc8261283a565b600060606120ea8c8a612b1b565b9150915061210284836120fb61066f565b60016128b3565b600a556040805160028082526060820183528492849291906020830190803683370190505097509750975050505050509750975097945050505050565b6121668160008151811061214f57fe5b6020026020010151612161600161219d565b612b55565b8160008151811061217357fe5b602002602001018181525050611d138160018151811061218f57fe5b602002602001015161216160005b6000816121ca577f0000000000000000000000000000000000000000000000000000000000000000610655565b507f0000000000000000000000000000000000000000000000000000000000000000919050565b60006114d18383611eb8565b60095461220981611b39565b801561221457508543115b1561229f57600061222786858786612b88565b905060006122408786888761223b88611b12565b612ba2565b9050600061224d84611b2c565b9050600061225a85611b1f565b905060006122738284878761226e8b611b06565b612be8565b9050808314611344576122868682612c3f565b95506122928642612c4d565b6009819055955050505050505b505050505050565b60008282026122c1841580611ed5575083858381611ed257fe5b806122d0576000915050610655565b670de0b6b3a764000060001982015b04600101915050610655565b60006122fe868689606001518787612c5b565b979650505050505050565b60006114d1838361299d565b60006122fe868689606001518787612cff565b60006114d18383612b55565b6000670de0b6b3a7640000821061234c576000610655565b50670de0b6b3a76400000390565b600061236982151560046116cc565b8261237657506000610655565b670de0b6b3a7640000838102906123999085838161239057fe5b041460056116cc565b8260018203816122df57fe5b60006123af610ce0565b6001600160a01b031663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b1580156123e757600080fd5b505afa1580156123fb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f491906141b1565b6000806000806000612432888888612d9e565b935093509350935061244684848484612f18565b98975050505050505050565b600061245c6118c5565b82604051602001610c7a92919061491c565b60006060600061247d84612f8c565b9050612498600082600381111561249057fe5b1460ce6116cc565b60606124a385612fa2565b90506124b181516002611b53565b6124ba81612022565b60606124c4611fb4565b905060006124d98383600081518110611b9157fe5b905060006124e8826002611eb8565b600a929092555099919850909650505050505050565b6116da8282612fb8565b505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6040805160028082526060808301845292839291906020830190803683370190505090506125666001613046565b8160008151811061257357fe5b6020026020010181815250506120056000613046565b600073ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b6125a8610cbc565b6001600160a01b0316141580156125c357506125c38361309a565b156125eb576125d0610cbc565b6001600160a01b0316336001600160a01b0316149050610655565b6125f36123a5565b6001600160a01b0316639be2a8848484306040518463ffffffff1660e01b8152600401612622939291906149f3565b60206040518083038186803b15801561263a57600080fd5b505afa15801561264e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a79190614544565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b60006126d484841115836116cc565b5050900390565b6000806126e7836130cc565b9050600080821361270057652d79883d2000820361270a565b652d79883d200082015b655af3107a40009005949350505050565b60006114d1838383613130565b60006114d183836016613130565b1b90565b661fffffffffffff91909116901b90565b623fffff91909116901b90565b1c637fffffff1690565b4690565b6040805160028082526060808301845292839291906020830190803683370190505090506127aa60018560018151811061279c57fe5b602002602001015185613147565b816000815181106127b757fe5b6020026020010181815250506127d560008560008151811061279c57fe5b816001815181106127e257fe5b60209081029190910101529392505050565b600082821c623fffff16621fffff811361280e5780611fac565b623fffff19179392505050565b1c6103ff1690565b1c60019081161490565b1c6001600160401b031690565b60008060008061284c600a5486613167565b9350935093509350612860848484846131d0565b5050505050565b60006060600061287684612f8c565b9050600181600381111561288657fe5b14156128a05761289685856131f0565b90935091506128ab565b6128ab610150612672565b509250929050565b600081156128e55760006128d1846128cb88886122a7565b9061235a565b90506128dd86826114bf565b915050611fac565b60006128f584610aa08888613222565b905061290186826114f4565b9695505050505050565b6129418360008151811061291b57fe5b60200260200101518360008151811061293057fe5b60200260200101518363ffffffff16565b8360008151811061294e57fe5b60200260200101818152505061297f8360018151811061296a57fe5b60200260200101518360018151811061293057fe5b8360018151811061298c57fe5b602002602001018181525050505050565b60006129ac82151560046116cc565b8183816129b557fe5b049392505050565b60006106558260ea6127f4565b60006106558260b561324b565b600061065582609f6127f4565b600061065582606a61324b565b60006106558260546127f4565b600061065582601f61324b565b600081612a38577f0000000000000000000000000000000000000000000000000000000000000000610655565b507f0000000000000000000000000000000000000000000000000000000000000000919050565b612a766001600160a01b038316151561019b6116cc565b612a8282600083612508565b6001600160a01b038216600090815260208190526040902054612aa890826101a16126c5565b6001600160a01b038316600090815260208190526040902055600254612ace908261327e565b6002556040516000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90612b0f9085906149ea565b60405180910390a35050565b600060606000612b2a84612f8c565b90506003816003811115612b3a57fe5b1415612b4a57612896858561328c565b6128ab610136612672565b6000612b6482151560046116cc565b82612b7157506000610655565b816001840381612b7d57fe5b046001019050610655565b600080612b97868686866132b1565b9050612901816126db565b600080612bb1878787876132b1565b90506000612bc9612bc287846122a7565b89906114bf565b90506000612bd6826126db565b85900393505050505b95945050505050565b600080612c0485858542612bfb8b611e43565b939291906132d9565b9050607842889003101580612c195786612c22565b612c228761332b565b600081815260086020526040902092909255509695505050505050565b60006114d18383604b613338565b60006114d18383602c613348565b6000612c7d612c7287670429d069189e0000613222565b8511156101306116cc565b6000612c9b612c9485670de0b6b3a76400026122a7565b88906114bf565b90506000612cb4612c9485670de0b6b3a763ffff613222565b9050612ccd612cc383886114bf565b610aa08389613222565b92505050612cdf8582106101656116cc565b612bdf612cf486670429d069189e0000613222565b8211156101316116cc565b6000612d0f8585106101656116cc565b612d2f612d2486670429d069189e0000613222565b8511156101316116cc565b6000612d46612c9485670de0b6b3a76400026122a7565b90506000612d5f612c9485670de0b6b3a763ffff613222565b9050612d78612d6e82886114f4565b6128cb84896122a7565b9250612bdf9150612d93905087670429d069189e0000613222565b8211156101306116cc565b6000808080612dbf612db08787611edc565b670de0b6b3a7640000906114f4565b93506000612dea8689600181518110612dd457fe5b6020026020010151611edc90919063ffffffff16565b90506000612e15888a600081518110612dff57fe5b602002602001015161322290919063ffffffff16565b9050612e2182826114bf565b9450612e4889600181518110612e3357fe5b60200260200101518a600081518110612dff57fe5b92505050612e7f86612e7988612e798b600081518110612e6457fe5b60200260200101518c600081518110612dff57fe5b90613222565b91506000612ebf86610aa089612e79670de0b6b3a7640000600202612e798e600181518110612eaa57fe5b60200260200101518f600081518110612dff57fe5b90506000612ef5612ed088806122a7565b610aa08b600181518110612ee057fe5b60200260200101518c600181518110612dff57fe5b9050612f0b81612f0586856114bf565b906114bf565b9350505093509350935093565b600080612f2d86671bc16d674ec800006122a7565b90506000612f4787612e7986673782dace9d900000613222565b90506000612f5586836114bf565b90506000612f6482600561335a565b90506000612f7289836114bf565b9050612f7e8186611edc565b9a9950505050505050505050565b6000818060200190518101906106559190614684565b6060818060200190518101906114d191906146cd565b612fc460008383612508565b600254612fd190826114bf565b6002556001600160a01b038216600090815260208190526040902054612ff790826114bf565b6001600160a01b0383166000818152602081905260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90612b0f9085906149ea565b600081613073577f0000000000000000000000000000000000000000000000000000000000000000610655565b507f0000000000000000000000000000000000000000000000000000000000000000919050565b60006130ac631c74c91760e11b610c45565b82148061065557506130c46350dd6ed960e01b610c45565b909114919050565b60006130dc6000831360646116cc565b670c7d713b49da0000821380156130fa5750670f43fc2c04ee000082125b1561312057670de0b6b3a7640000613111836134cd565b8161311857fe5b059050610b80565b613129826135eb565b9050610b80565b623fffff828116821b90821b198416179392505050565b60008361315d57613158828461398a565b611fac565b611fac8284613996565b60008060008060008060008061317b6139a2565b935093509350935083600014156131a0576000975087965090945092506131c7915050565b6000806131b78c8c6131b061066f565b8989613c11565b909a509850929650909450505050505b92959194509250565b83156131e0576131e082856124fe565b82156108e4576108e481846124fe565b6000606060006131ff84613ca6565b90506060613215868361321061066f565b613cbc565b9196919550909350505050565b600082820261323c841580611ed5575083858381611ed257fe5b670de0b6b3a764000081611f12565b600082821c661fffffffffffff16660fffffffffffff811361326d5780611fac565b661fffffffffffff19179392505050565b60006114d1838360016126c5565b60006060600061329b84613ca6565b9050606061321586836132ac61066f565b613d57565b60006706f05b59d3b200006129016132cd826128cb87876114bf565b6128cb83818a8a6114bf565b6000806132e5876118b9565b8303905060008187026132f7896129ca565b01905060008287026133088a6129e4565b01905060008387026133198b6129fe565b019050612f7e89848a858b868c611859565b6000610655826001613dfe565b6103ff811b1992909216911b1790565b637fffffff811b1992909216911b1790565b60008261336957506000610655565b600061337484613e06565b9050600281670de0b6b3a764000086028161338b57fe5b0482018161339557fe5b049050600281670de0b6b3a76400008602816133ad57fe5b048201816133b757fe5b049050600281670de0b6b3a76400008602816133cf57fe5b048201816133d957fe5b049050600281670de0b6b3a76400008602816133f157fe5b048201816133fb57fe5b049050600281670de0b6b3a764000086028161341357fe5b0482018161341d57fe5b049050600281670de0b6b3a764000086028161343557fe5b0482018161343f57fe5b049050600281670de0b6b3a764000086028161345757fe5b0482018161346157fe5b04905060006134708280613222565b905061348661347f83866122a7565b86906114bf565b81111580156134a857506134a461349d83866122a7565b86906114f4565b8110155b61102b5760405162461bcd60e51b81526004016134c490614bc5565b60405180910390fd5b670de0b6b3a7640000026000806a0c097ce7bc90715b34b9f160241b808401906ec097ce7bc90715b34b9f0fffffffff198501028161350857fe5b05905060006a0c097ce7bc90715b34b9f160241b82800205905081806a0c097ce7bc90715b34b9f160241b81840205915060038205016a0c097ce7bc90715b34b9f160241b82840205915060058205016a0c097ce7bc90715b34b9f160241b82840205915060078205016a0c097ce7bc90715b34b9f160241b82840205915060098205016a0c097ce7bc90715b34b9f160241b828402059150600b8205016a0c097ce7bc90715b34b9f160241b828402059150600d8205016a0c097ce7bc90715b34b9f160241b828402059150600f826002919005919091010295945050505050565b6000670de0b6b3a76400008212156136275761361d826a0c097ce7bc90715b34b9f160241b8161361757fe5b056135eb565b6000039050610b80565b60007e1600ef3172e58d2e933ec884fde10064c63b5372d805e203c0000000000000831261367857770195e54c5dd42177f53a27172fa9ec630262827000000000830592506806f05b59d3b2000000015b73011798004d755d3c8bc8e03204cf44619e00000083126136b0576b1425982cf597cd205cef7380830592506803782dace9d9000000015b606492830292026e01855144814a7ff805980ff008400083126136f8576e01855144814a7ff805980ff008400068056bc75e2d63100000840205925068ad78ebc5ac62000000015b6b02df0ab5a80a22c61ab5a7008312613733576b02df0ab5a80a22c61ab5a70068056bc75e2d6310000084020592506856bc75e2d631000000015b693f1fce3da636ea5cf850831261376a57693f1fce3da636ea5cf85068056bc75e2d631000008402059250682b5e3af16b18800000015b690127fa27722cc06cc5e283126137a157690127fa27722cc06cc5e268056bc75e2d6310000084020592506815af1d78b58c400000015b68280e60114edb805d0383126137d65768280e60114edb805d0368056bc75e2d631000008402059250680ad78ebc5ac6200000015b680ebc5fb41746121110831261380157680ebc5fb4174612111068056bc75e2d631000009384020592015b6808f00f760a4b2db55d8312613836576808f00f760a4b2db55d68056bc75e2d6310000084020592506802b5e3af16b1880000015b6806f5f1775788937937831261386b576806f5f177578893793768056bc75e2d63100000840205925068015af1d78b58c40000015b6806248f33704b286603831261389f576806248f33704b28660368056bc75e2d63100000840205925067ad78ebc5ac620000015b6805c548670b9510e7ac83126138d3576805c548670b9510e7ac68056bc75e2d6310000084020592506756bc75e2d6310000015b600068056bc75e2d63100000840168056bc75e2d6310000080860302816138f657fe5b059050600068056bc75e2d63100000828002059050818068056bc75e2d63100000818402059150600382050168056bc75e2d63100000828402059150600582050168056bc75e2d63100000828402059150600782050168056bc75e2d63100000828402059150600982050168056bc75e2d63100000828402059150600b820501600202606485820105979650505050505050565b60006114d18383613222565b60006114d18383611edc565b600b5460405163bd02d0f560e01b81526000918291829182916001600160a01b039091169063bd02d0f5906139f4907550524f544f434f4c5f535741505f4645455f5045524360501b906004016149ea565b60206040518083038186803b158015613a0c57600080fd5b505afa158015613a20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a449190614736565b600b5460405163bd02d0f560e01b81526001600160a01b039091169063bd02d0f590613a94907f50524f544f434f4c5f4645455f4759524f5f504f5254494f4e00000000000000906004016149ea565b60206040518083038186803b158015613aac57600080fd5b505afa158015613ac0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613ae49190614736565b600b546040516321f8a72160e01b81526001600160a01b03909116906321f8a72190613b24906c4759524f5f545245415355525960981b906004016149ea565b60206040518083038186803b158015613b3c57600080fd5b505afa158015613b50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b7491906141b1565b600b546040516321f8a72160e01b81526001600160a01b03909116906321f8a72190613bb3906b42414c5f545245415355525960a01b906004016149ea565b60206040518083038186803b158015613bcb57600080fd5b505afa158015613bdf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c0391906141b1565b935093509350935090919293565b600080868611613c2657506000905080613c9c565b6000613c4085612e79613c398a8c6114f4565b8990613222565b90506000613c58613c51898b6114f4565b8790613222565b90506000613c6689836114f4565b90506000613c748483611edc565b90506000613c828883613222565b90506000613c9083836114f4565b91975090955050505050505b9550959350505050565b6000818060200190518101906114d191906146a0565b60606000613cca8484611edc565b9050606085516001600160401b0381118015613ce557600080fd5b50604051908082528060200260200182016040528015613d0f578160200160208202803683370190505b50905060005b8651811015613d4d57613d2e83888381518110612dff57fe5b828281518110613d3a57fe5b6020908102919091010152600101613d15565b5095945050505050565b60606000613d65848461235a565b9050606085516001600160401b0381118015613d8057600080fd5b50604051908082528060200260200182016040528015613daa578160200160208202803683370190505b50905060005b8651811015613d4d57613ddf83888381518110613dc957fe5b60200260200101516122a790919063ffffffff16565b828281518110613deb57fe5b6020908102919091010152600101613db0565b016103ff1690565b6000670de0b6b3a76400008210613e3357670de0b6b3a7640000613e2b818404613fe9565b1b9050610b80565b600a821015613e4757506312d940b6610b80565b6064821015613e5c57506402540be400610b80565b6103e8821015613e72575064075cdd4719610b80565b612710821015613e88575064174876e800610b80565b620186a0821015613e9f57506449a0a4c700610b80565b620f4240821015613eb6575064e8d4a51000610b80565b62989680821015613ece57506502e0466fc608610b80565b6305f5e100821015613ee757506509184e72a000610b80565b633b9aca00821015613f005750651cc2c05dbc53610b80565b6402540be400821015613f1a5750655af3107a4000610b80565b64174876e800821015613f35575066011f9b83a95b45610b80565b64e8d4a51000821015613f50575066038d7ea4c68000610b80565b6509184e72a000821015613f6c5750660b3c13249d90bb610b80565b655af3107a4000821015613f885750662386f26fc10000610b80565b66038d7ea4c68000821015613fa55750667058bf6e27a751610b80565b662386f26fc10000821015613fc3575067016345785d8a0000610b80565b67016345785d8a0000821015613fe25750670463777a4d8c892d610b80565b5080610b80565b6000600160801b82106140015760809190911c906040015b68010000000000000000821061401c5760409190911c906020015b64010000000082106140335760209190911c906010015b6201000082106140485760109190911c906008015b610100821061405c5760089190911c906004015b6010821061406f5760049190911c906002015b60048210610b8057600101919050565b604080518082019091526000808252602082015290565b803561065581614c77565b600082601f8301126140b1578081fd5b81516140c46140bf82614c4e565b614c28565b8181529150602080830190848101818402860182018710156140e557600080fd5b60005b84811015614104578151845292820192908201906001016140e8565b505050505092915050565b600082601f83011261411f578081fd5b81356001600160401b03811115614134578182fd5b614147601f8201601f1916602001614c28565b915080825283602082850101111561415e57600080fd5b8060208401602084013760009082016020015292915050565b80356002811061065557600080fd5b80356003811061065557600080fd5b6000602082840312156141a6578081fd5b81356114d181614c77565b6000602082840312156141c2578081fd5b81516114d181614c77565b600080604083850312156141df578081fd5b82356141ea81614c77565b915060208301356141fa81614c77565b809150509250929050565b600080600060608486031215614219578081fd5b833561422481614c77565b9250602084013561423481614c77565b929592945050506040919091013590565b600080600080600080600060e0888a03121561425f578485fd5b873561426a81614c77565b9650602088013561427a81614c77565b95506040880135945060608801359350608088013560ff8116811461429d578384fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156142cc578182fd5b82356142d781614c77565b946020939093013593505050565b6000806000606084860312156142f9578081fd5b83516001600160401b038082111561430f578283fd5b818601915086601f830112614322578283fd5b81516143306140bf82614c4e565b80828252602080830192508086018b828387028901011115614350578788fd5b8796505b8487101561437b57805161436781614c77565b845260019690960195928101928101614354565b508901519097509350505080821115614392578283fd5b5061439f868287016140a1565b925050604084015190509250925092565b600060208083850312156143c2578182fd5b82356001600160401b038111156143d7578283fd5b8301601f810185136143e7578283fd5b80356143f56140bf82614c4e565b818152838101908385016040808502860187018a1015614413578788fd5b8795505b848610156144605780828b03121561442d578788fd5b61443681614c28565b6144408b84614186565b815282880135888201528452600195909501949286019290810190614417565b509098975050505050505050565b60006020808385031215614480578182fd5b82356001600160401b03811115614495578283fd5b8301601f810185136144a5578283fd5b80356144b36140bf82614c4e565b818152838101908385016060808502860187018a10156144d1578788fd5b8795505b848610156144605780828b0312156144eb578788fd5b6144f481614c28565b6144fe8b84614186565b815282880135888201526040808401359082015284526001959095019492860192908101906144d5565b600060208284031215614539578081fd5b81356114d181614c8c565b600060208284031215614555578081fd5b81516114d181614c8c565b600080600080600080600060e0888a03121561457a578081fd5b8735965060208089013561458d81614c77565b9650604089013561459d81614c77565b955060608901356001600160401b03808211156145b8578384fd5b818b0191508b601f8301126145cb578384fd5b81356145d96140bf82614c4e565b8082825285820191508585018f8788860288010111156145f7578788fd5b8795505b838610156146195780358352600195909501949186019186016145fb565b509850505060808b0135955060a08b0135945060c08b013592508083111561463f578384fd5b505061464d8a828b0161410f565b91505092959891949750929550565b60006020828403121561466d578081fd5b81356001600160e01b0319811681146114d1578182fd5b600060208284031215614695578081fd5b81516114d181614c9a565b600080604083850312156146b2578182fd5b82516146bd81614c9a565b6020939093015192949293505050565b600080604083850312156146df578182fd5b82516146ea81614c9a565b60208401519092506001600160401b03811115614705578182fd5b614711858286016140a1565b9150509250929050565b60006020828403121561472c578081fd5b6114d18383614186565b600060208284031215614747578081fd5b5051919050565b600080600060608486031215614762578081fd5b83356001600160401b0380821115614778578283fd5b818601915061012080838903121561478e578384fd5b61479781614c28565b90506147a38884614177565b81526147b28860208501614096565b60208201526147c48860408501614096565b6040820152606083013560608201526080830135608082015260a083013560a08201526147f48860c08501614096565b60c08201526148068860e08501614096565b60e0820152610100808401358381111561481e578586fd5b61482a8a82870161410f565b9183019190915250976020870135975060409096013595945050505050565b60006020828403121561485a578081fd5b5035919050565b60008060408385031215614873578182fd5b50508035926020909101359150565b600080600060608486031215614896578081fd5b833592506020840135915060408401356148af81614c8c565b809150509250925092565b6000815180845260208085019450808401835b838110156148e9578151875295820195908201906001016148cd565b509495945050505050565b9182526001600160e01b031916602082015260240190565b6000828483379101908152919050565b61190160f01b81526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6020808252825182820181905260009190848201906040850190845b8181101561498357835183529284019291840191600101614967565b50909695505050505050565b6000602082526114d160208301846148ba565b6000604082526149b560408301856148ba565b8281036020840152612bdf81856148ba565b901515815260200190565b92151583526020830191909152604082015260600190565b90815260200190565b9283526001600160a01b03918216602084015216604082015260600190565b9586526001600160a01b0394851660208701529290931660408501526060840152608083019190915260a082015260c00190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b93845260ff9290921660208401526040830152606082015260800190565b968752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b9586526020860194909452604085019290925260608401521515608083015260a082015260c00190565b83815260608101614afa84614c6d565b602082019390935260400152919050565b84815260808101614b1b85614c6d565b84602083015283604083015282606083015295945050505050565b838152825160a0820190614b4981614c6d565b806020840152506020840151604083015260408401516060830152826080830152949350505050565b6000602080835283518082850152825b81811015614b9e57858101830151858201604001528201614b82565b81811115614baf5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252600c908201526b17dcdc5c9d0811905253115160a21b604082015260600190565b600083825260406020830152611fac60408301846148ba565b9283526020830191909152604082015260600190565b60ff91909116815260200190565b6040518181016001600160401b0381118282101715614c4657600080fd5b604052919050565b60006001600160401b03821115614c63578081fd5b5060209081020190565b6003811061066c57fe5b6001600160a01b038116811461066c57600080fd5b801515811461066c57600080fd5b6004811061066c57600080fdfea2646970667358221220aac763e46c6ded7f138ef24a7bca19ca00123477927b5c41d802a4885764bc8064736f6c63430007010033", "bytecodeSha1": "49a80ff94aa893c0082cf54801646a25e6c188b0", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.7.1+commit.f4a555be"}, "contractName": "GyroTwoPool", "coverageMap": {"branches": {"10": {"GyroTwoPool._calculateCurrentValues": {"415": [9353, 9368, true], "416": [9427, 9442, true], "417": [9799, 9814, true], "418": [9878, 9893, true]}, "GyroTwoPool._doExit": {"423": [21001, 21062, false]}, "GyroTwoPool._doJoin": {"425": [15811, 15876, false]}, "GyroTwoPool._getDueProtocolFeeAmounts": {"427": [24331, 24355, false]}, "GyroTwoPool._onExitPool": {"419": [18486, 18500, false]}, "GyroTwoPool._payFeesBpt": {"428": [24996, 25008, false], "429": [25130, 25146, false]}, "GyroTwoPool._sqrtParameters": {"424": [2770, 2780, true]}, "GyroTwoPool._updateOracle": {"420": [26315, 26339, false], "421": [26343, 26373, false], "422": [27205, 27245, false]}, "GyroTwoPool._virtualParameters": {"426": [3915, 3925, true]}, "GyroTwoPool.onSwap": {"410": [5673, 5688, true], "411": [5737, 5752, true], "412": [5801, 5816, true], "413": [5865, 5880, true], "414": [5940, 5980, false]}}, "100": {}, "101": {}, "102": {}, "104": {}, "105": {}, "106": {}, "107": {}, "30": {}, "31": {}, "32": {"GyroPoolMath._calcProtocolFees": {"449": [5784, 5821, false]}, "GyroPoolMath._intLog2Halved": {"468": [10486, 10499, false], "469": [10569, 10581, false], "470": [10650, 10662, false], "471": [10731, 10743, false], "472": [10811, 10822, false], "473": [10889, 10900, false]}, "GyroPoolMath._makeInitialGuess": {"450": [8879, 8902, false], "451": [9024, 9034, false], "452": [9107, 9118, false], "453": [9181, 9192, false], "454": [9265, 9276, false], "455": [9339, 9350, false], "456": [9423, 9434, false], "457": [9497, 9508, false], "458": [9581, 9592, false], "459": [9655, 9666, false], "460": [9738, 9750, false], "461": [9813, 9825, false], "462": [9897, 9909, false], "463": [9972, 9984, false], "464": [10056, 10068, false], "465": [10131, 10143, false], "466": [10215, 10227, false], "467": [10290, 10302, false]}, "GyroPoolMath._sqrt": {"446": [7313, 7323, false], "447": [8054, 8103, false], "448": [8107, 8156, true]}, "GyroPoolMath.liquidityInvariantUpdate": {"445": [11657, 11670, false]}}, "35": {"BalancerPoolToken.allowance": {"433": [2364, 2394, false]}, "BalancerPoolToken.decreaseAllowance": {"432": [3611, 3637, false]}, "BalancerPoolToken.transferFrom": {"430": [3030, 3050, false], "431": [3054, 3085, false]}}, "38": {"BasePoolAuthorization._canPerform": {"434": [2112, 2140, false]}}, "41": {}, "42": {}, "43": {}, "44": {}, "45": {}, "46": {}, "48": {}, "50": {}, "51": {}, "52": {}, "53": {}, "56": {}, "57": {}, "58": {}, "59": {}, "6": {"ExtensibleWeightedPool2Tokens._cacheInvariantAndSupply": {"437": [35371, 35395, false]}, "ExtensibleWeightedPool2Tokens._normalizedWeights": {"440": [9870, 9876, true]}, "ExtensibleWeightedPool2Tokens._queryAction": {"438": [45142, 45169, false]}, "ExtensibleWeightedPool2Tokens._scalingFactor": {"439": [41718, 41724, true]}, "ExtensibleWeightedPool2Tokens.enableOracle": {"435": [8947, 8964, false]}, "ExtensibleWeightedPool2Tokens.onExitPool": {"436": [25748, 25762, false]}}, "60": {}, "62": {"TemporarilyPausable._setPaused": {"488": [3849, 3855, false]}}, "63": {"WordCodec.decodeInt22": {"490": [12558, 12577, true]}, "WordCodec.decodeInt53": {"491": [13167, 13186, true]}, "WordCodec.insertBool": {"489": [3342, 3347, true]}}, "64": {"FixedPoint.divDown": {"441": [2574, 2580, true], "442": [2645, 2665, true]}, "FixedPoint.divUp": {"444": [2862, 2868, false]}, "FixedPoint.mulUp": {"443": [2046, 2058, false]}}, "65": {"LogExpMath._ln": {"476": [14218, 14228, false], "477": [15949, 15965, false], "478": [16073, 16089, false], "479": [16469, 16476, false], "480": [16561, 16568, false], "481": [16653, 16660, false], "482": [16745, 16752, false], "483": [16837, 16844, false], "484": [16929, 16936, false], "485": [17113, 17120, false], "486": [17300, 17308, false]}, "LogExpMath.ln": {"474": [13889, 13910, false], "475": [13914, 13935, false]}}, "66": {"Math.divUp": {"487": [2443, 2449, false]}}, "67": {}, "7": {}, "70": {}, "71": {}, "72": {}, "75": {}, "76": {}, "8": {}, "80": {}, "9": {}, "99": {}}, "statements": {"10": {"GyroTwoPool._calculateCurrentValues": {"134": [9339, 9403], "135": [9413, 9477], "136": [9546, 9636], "137": [9705, 9771], "138": [9782, 9850], "139": [9860, 9929]}, "GyroTwoPool._distributeFees": {"230": [22965, 23027]}, "GyroTwoPool._doExit": {"231": [21078, 21153], "232": [21184, 21219]}, "GyroTwoPool._doJoin": {"251": [15892, 15970], "252": [16001, 16036]}, "GyroTwoPool._exitExactBPTInForTokensOut": {"293": [22131, 22163]}, "GyroTwoPool._getDueProtocolFeeAmounts": {"289": [24371, 24411], "290": [24716, 24774]}, "GyroTwoPool._getFeesMetadata": {"368": [25410, 25717]}, "GyroTwoPool._getVirtualParameters": {"223": [3529, 3602], "224": [3612, 3686], "225": [3696, 3720]}, "GyroTwoPool._onExitPool": {"147": [19104, 19194], "148": [19209, 19247], "149": [19262, 19317], "150": [19775, 19887], "151": [20118, 20173], "152": [20294, 20346], "153": [20360, 20448], "154": [20581, 20631]}, "GyroTwoPool._onInitializePool": {"204": [11054, 11124], "205": [11201, 11257], "206": [11267, 11291], "207": [11743, 11778], "208": [11789, 11821]}, "GyroTwoPool._onJoinPool": {"178": [14510, 14600], "179": [14611, 14649], "180": [15174, 15286], "181": [15409, 15459]}, "GyroTwoPool._onSwapGivenIn": {"192": [7794, 7928]}, "GyroTwoPool._onSwapGivenOut": {"194": [8333, 8467]}, "GyroTwoPool._payFeesBpt": {"291": [25024, 25063], "292": [25162, 25204]}, "GyroTwoPool._sqrtParameters": {"172": [2525, 2569], "173": [2579, 2624], "174": [2634, 2658], "245": [2763, 2805]}, "GyroTwoPool._updateOracle": {"186": [27317, 27371], "187": [27389, 27458], "188": [27476, 27496]}, "GyroTwoPool._virtualParameters": {"288": [3896, 4089]}, "GyroTwoPool.calculateCurrentValues": {"25": [8793, 8873]}, "GyroTwoPool.getInvariant": {"73": [4506, 4529], "74": [4540, 4618]}, "GyroTwoPool.getSqrtParameters": {"42": [2339, 2363]}, "GyroTwoPool.getVirtualParameters": {"56": [3218, 3314]}, "GyroTwoPool.onSwap": {"59": [5115, 5178], "60": [5188, 5254], "61": [5609, 5925], "62": [6363, 6441], "63": [6670, 6725], "64": [6756, 6820], "65": [7047, 7102], "66": [7322, 7380]}}, "100": {}, "101": {}, "102": {}, "104": {}, "105": {}, "106": {}, "107": {}, "30": {}, "31": {}, "32": {"GyroPoolMath._calcAllTokensInGivenExactBptOut": {"375": [2867, 2909], "376": [2848, 2851]}, "GyroPoolMath._calcProtocolFees": {"369": [6073, 6086], "370": [7071, 7102]}, "GyroPoolMath._calcTokensOutGivenExactBptIn": {"372": [4404, 4449], "373": [4385, 4388], "374": [4470, 4487]}, "GyroPoolMath._intLog2Halved": {"397": [10515, 10524], "398": [10538, 10545], "399": [10597, 10605], "400": [10619, 10626], "401": [10678, 10686], "402": [10700, 10707], "403": [10759, 10767], "404": [10781, 10787], "405": [10838, 10845], "406": [10859, 10865], "407": [10916, 10923], "408": [10937, 10943], "409": [11015, 11021]}, "GyroPoolMath._makeInitialGuess": {"378": [8918, 8989], "379": [9054, 9075], "380": [9138, 9149], "381": [9212, 9233], "382": [9296, 9307], "383": [9370, 9391], "384": [9454, 9465], "385": [9528, 9549], "386": [9612, 9623], "387": [9686, 9706], "388": [9770, 9781], "389": [9845, 9865], "390": [9929, 9940], "391": [10004, 10024], "392": [10088, 10099], "393": [10163, 10183], "394": [10247, 10258], "395": [10322, 10342], "396": [10370, 10382]}, "GyroPoolMath._sqrt": {"303": [7339, 7347], "304": [7443, 7499], "305": [7509, 7565], "306": [7575, 7631], "307": [7641, 7697], "308": [7707, 7763], "309": [7773, 7829], "310": [7839, 7895], "311": [8046, 8173]}, "GyroPoolMath.liquidityInvariantUpdate": {"233": [11844, 11878], "234": [12094, 12128]}}, "35": {"BalancerPoolToken._burnPoolTokens": {"177": [4092, 4113]}, "BalancerPoolToken._mintPoolTokens": {"209": [3979, 4003]}, "BalancerPoolToken.allowance": {"92": [2410, 2428], "93": [2459, 2497]}, "BalancerPoolToken.decreaseAllowance": {"67": [3653, 3685], "68": [3772, 3828], "69": [3849, 3860]}, "BalancerPoolToken.getVault": {"55": [1938, 1951]}, "BalancerPoolToken.transferFrom": {"11": [2867, 2968], "12": [2979, 3015], "13": [3218, 3273], "14": [3294, 3305]}}, "38": {"BasePoolAuthorization._canPerform": {"213": [2251, 2282], "214": [2428, 2496]}, "BasePoolAuthorization.getAuthorizer": {"71": [1933, 1956]}, "BasePoolAuthorization.getOwner": {"54": [1836, 1849]}}, "41": {}, "42": {}, "43": {"Buffer.add": {"377": [1504, 1534]}, "Buffer.next": {"300": [1276, 1296]}}, "44": {"PoolPriceOracle._getPastAccumulator": {"171": [6913, 6991]}, "PoolPriceOracle._getSample": {"159": [7580, 7602]}, "PoolPriceOracle._processPriceData": {"258": [6562, 6620], "259": [6675, 6705]}, "PoolPriceOracle.dirtyUninitializedOracleSamples": {"18": [3512, 3592], "19": [3947, 3971], "20": [3876, 3879]}, "PoolPriceOracle.getLargestSafeQueryWindow": {"95": [4117, 4132]}, "PoolPriceOracle.getLatest": {"72": [4234, 4310]}, "PoolPriceOracle.getPastAccumulators": {"38": [4935, 4973], "39": [5137, 5155], "40": [5169, 5241], "41": [5118, 5121]}, "PoolPriceOracle.getSample": {"35": [2874, 2932], "36": [2987, 3009]}, "PoolPriceOracle.getTimeWeightedAverage": {"8": [4496, 4535], "9": [4654, 4739], "10": [4635, 4638]}}, "45": {}, "46": {"Samples._accLogBptPrice": {"242": [6629, 6681]}, "Samples._accLogInvariant": {"244": [7116, 7168]}, "Samples._accLogPairPrice": {"240": [6143, 6196]}, "Samples._instLogBptPrice": {"241": [6388, 6441]}, "Samples._instLogInvariant": {"243": [6874, 6927]}, "Samples._instLogPairPrice": {"239": [5899, 5953]}, "Samples.pack": {"127": [7553, 8032]}, "Samples.timestamp": {"128": [5660, 5705]}, "Samples.unpack": {"160": [8468, 8508], "161": [8518, 8560], "162": [8570, 8608], "163": [8618, 8658], "164": [8668, 8708], "165": [8718, 8760], "166": [8770, 8800]}, "Samples.update": {"299": [4143, 4413]}}, "48": {}, "50": {"WeightedPool2TokensMiscData.logInvariant": {"140": [2316, 2362]}, "WeightedPool2TokensMiscData.logTotalSupply": {"141": [2532, 2581]}, "WeightedPool2TokensMiscData.oracleEnabled": {"144": [3221, 3267]}, "WeightedPool2TokensMiscData.oracleIndex": {"143": [3019, 3065]}, "WeightedPool2TokensMiscData.oracleSampleCreationTimestamp": {"142": [2786, 2852]}, "WeightedPool2TokensMiscData.setLogInvariant": {"217": [3697, 3758]}, "WeightedPool2TokensMiscData.setLogTotalSupply": {"218": [3985, 4051]}, "WeightedPool2TokensMiscData.setOracleEnabled": {"98": [4911, 4973]}, "WeightedPool2TokensMiscData.setOracleIndex": {"260": [4636, 4696]}, "WeightedPool2TokensMiscData.setOracleSampleCreationTimestamp": {"261": [4322, 4407]}, "WeightedPool2TokensMiscData.setSwapFeePercentage": {"99": [5197, 5270]}, "WeightedPool2TokensMiscData.swapFeePercentage": {"145": [3424, 3477]}}, "51": {"WeightedPoolUserDataHelpers.exactBptInForTokensOut": {"371": [2448, 2520]}, "WeightedPoolUserDataHelpers.initialAmountsIn": {"277": [1311, 1383]}, "WeightedPoolUserDataHelpers.joinKind": {"276": [964, 1016]}}, "52": {"Authentication._authenticateCaller": {"105": [2404, 2474]}, "Authentication.getActionId": {"51": [2842, 2910]}}, "53": {"_require": {"114": [946, 964]}}, "56": {}, "57": {}, "58": {}, "59": {"InputHelpers.ensureInputLengthMatch": {"146": [888, 934]}}, "6": {"ExtensibleWeightedPool2Tokens._cacheInvariantAndSupply": {"124": [35411, 35490], "125": [35504, 35584], "126": [35598, 35618]}, "ExtensibleWeightedPool2Tokens._downscaleDown": {"193": [42770, 42812]}, "ExtensibleWeightedPool2Tokens._downscaleDownArray": {"155": [43091, 43150], "156": [43160, 43220]}, "ExtensibleWeightedPool2Tokens._downscaleUp": {"195": [43532, 43572]}, "ExtensibleWeightedPool2Tokens._downscaleUpArray": {"182": [43847, 43904], "183": [43914, 43972]}, "ExtensibleWeightedPool2Tokens._getAuthorizer": {"201": [44433, 44466]}, "ExtensibleWeightedPool2Tokens._getOracleIndex": {"113": [35719, 35749]}, "ExtensibleWeightedPool2Tokens._isOwnerOnlyAction": {"283": [8256, 8426]}, "ExtensibleWeightedPool2Tokens._mutateAmounts": {"235": [40379, 40428], "236": [40438, 40487]}, "ExtensibleWeightedPool2Tokens._normalizedWeights": {"211": [9620, 9667], "212": [9677, 9725], "282": [9863, 9918]}, "ExtensibleWeightedPool2Tokens._queryAction": {"157": [49343, 49366], "158": [49675, 49704]}, "ExtensibleWeightedPool2Tokens._scalingFactor": {"184": [41711, 41760]}, "ExtensibleWeightedPool2Tokens._setOracleEnabled": {"122": [9089, 9136], "123": [9146, 9180]}, "ExtensibleWeightedPool2Tokens._setSwapFeePercentage": {"130": [7827, 7914], "131": [7924, 8011], "132": [8022, 8083], "133": [8093, 8141]}, "ExtensibleWeightedPool2Tokens._upscale": {"185": [42028, 42066]}, "ExtensibleWeightedPool2Tokens._upscaleArray": {"175": [42333, 42388], "176": [42398, 42454]}, "ExtensibleWeightedPool2Tokens.enableOracle": {"15": [8834, 8857], "16": [8980, 9006]}, "ExtensibleWeightedPool2Tokens.getLastInvariant": {"58": [10001, 10022]}, "ExtensibleWeightedPool2Tokens.getMiscData": {"26": [7036, 7074], "27": [7084, 7126], "28": [7136, 7208], "29": [7218, 7254], "30": [7264, 7304], "31": [7314, 7362]}, "ExtensibleWeightedPool2Tokens.getNormalizedWeights": {"94": [9428, 9455]}, "ExtensibleWeightedPool2Tokens.getPoolId": {"23": [6654, 6668]}, "ExtensibleWeightedPool2Tokens.getRate": {"37": [40829, 40886]}, "ExtensibleWeightedPool2Tokens.getSwapFeePercentage": {"32": [7447, 7483]}, "ExtensibleWeightedPool2Tokens.onExitPool": {"44": [24777, 24800], "45": [25284, 25320], "46": [25432, 25463], "47": [25473, 25515], "48": [25778, 25804], "49": [25825, 25867]}, "ExtensibleWeightedPool2Tokens.onJoinPool": {"79": [14942, 15024], "80": [15319, 15377], "81": [15391, 15432], "82": [15446, 15501], "83": [15588, 15616], "84": [15706, 15746], "85": [15777, 15800], "86": [15877, 15933], "87": [15948, 16227], "88": [16341, 16381], "89": [16468, 16496], "90": [16595, 16637], "91": [16799, 16825]}, "ExtensibleWeightedPool2Tokens.queryExit": {"33": [38232, 38287], "34": [38298, 38553]}, "ExtensibleWeightedPool2Tokens.queryJoin": {"52": [36723, 36778], "53": [36789, 37042]}, "ExtensibleWeightedPool2Tokens.setPaused": {"3": [9314, 9332]}, "ExtensibleWeightedPool2Tokens.setSwapFeePercentage": {"22": [7698, 7738]}}, "60": {"LogCompression.toLowResLog": {"216": [2298, 2342]}}, "62": {"TemporarilyPausable._ensureNotPaused": {"121": [4272, 4311]}, "TemporarilyPausable._getBufferPeriodEndTime": {"112": [5084, 5111]}, "TemporarilyPausable._getPauseWindowEndTime": {"111": [4969, 4995]}, "TemporarilyPausable._isNotPaused": {"110": [4712, 4774]}, "TemporarilyPausable._setPaused": {"106": [3871, 3952], "107": [3983, 4066], "108": [4087, 4103], "109": [4113, 4144]}, "TemporarilyPausable.getPausedState": {"5": [3374, 3398], "6": [3408, 3453], "7": [3463, 3510]}}, "63": {"WordCodec.decodeBool": {"228": [9819, 9866]}, "WordCodec.decodeInt22": {"226": [12551, 12615]}, "WordCodec.decodeInt53": {"296": [13160, 13224]}, "WordCodec.decodeUint10": {"227": [10628, 10669]}, "WordCodec.decodeUint31": {"222": [11156, 11197]}, "WordCodec.decodeUint64": {"229": [11684, 11725]}, "WordCodec.encodeInt22": {"221": [9118, 9171]}, "WordCodec.encodeInt53": {"220": [9547, 9600]}, "WordCodec.encodeUint": {"219": [8696, 8727]}, "WordCodec.insertBool": {"101": [3305, 3367]}, "WordCodec.insertInt22": {"287": [7697, 7764]}, "WordCodec.insertUint10": {"301": [4969, 5014]}, "WordCodec.insertUint31": {"302": [6012, 6057]}, "WordCodec.insertUint64": {"102": [7104, 7149]}}, "64": {"FixedPoint.add": {"96": [1334, 1371], "97": [1381, 1389]}, "FixedPoint.complement": {"196": [4769, 4801]}, "FixedPoint.divDown": {"168": [2566, 2581], "169": [2637, 2666], "170": [2697, 2717]}, "FixedPoint.divUp": {"197": [2809, 2847], "198": [2884, 2892], "199": [2964, 3015], "200": [3363, 3395]}, "FixedPoint.mulDown": {"294": [1761, 1818], "295": [1829, 1849]}, "FixedPoint.mulUp": {"189": [1974, 2031], "190": [2074, 2082], "191": [2430, 2462]}}, "65": {"LogExpMath._ln": {"328": [14549, 14585], "329": [15981, 15988], "330": [16039, 16048], "331": [16163, 16172], "332": [16314, 16324], "333": [16334, 16342], "334": [16492, 16513], "335": [16527, 16536], "336": [16584, 16605], "337": [16619, 16628], "338": [16676, 16697], "339": [16711, 16720], "340": [16768, 16789], "341": [16803, 16812], "342": [16860, 16881], "343": [16895, 16904], "344": [16952, 16973], "345": [16987, 16996], "346": [17044, 17065], "347": [17079, 17088], "348": [17136, 17157], "349": [17171, 17180], "350": [17229, 17251], "351": [17265, 17275], "352": [17324, 17346], "353": [17360, 17370], "354": [18279, 18311], "355": [18321, 18341], "356": [18352, 18384], "357": [18394, 18414], "358": [18425, 18457], "359": [18467, 18487], "360": [18498, 18530], "361": [18540, 18560], "362": [18571, 18603], "363": [18613, 18634], "364": [18793, 18807], "365": [19073, 19103]}, "LogExpMath._ln_36": {"312": [19646, 19657], "313": [21063, 21083], "314": [20456, 20476], "315": [20414, 20446], "316": [20529, 20549], "317": [20487, 20519], "318": [20602, 20622], "319": [20560, 20592], "320": [20675, 20695], "321": [20633, 20665], "322": [20748, 20769], "323": [20706, 20738], "324": [20822, 20843], "325": [20780, 20812], "326": [20896, 20917], "327": [20854, 20886]}, "LogExpMath.ln": {"284": [13838, 13875], "285": [13951, 13976], "286": [14007, 14020]}}, "66": {"Math.divDown": {"237": [2238, 2276], "238": [2286, 2298]}, "Math.divUp": {"253": [2390, 2428], "254": [2465, 2473], "255": [2504, 2526]}, "Math.mul": {"167": [1897, 1948]}, "Math.sub": {"100": [1025, 1062]}}, "67": {}, "7": {}, "70": {"EIP712._domainSeparatorV4": {"129": [2466, 2567]}, "EIP712._hashTypedDataV4": {"203": [3295, 3375]}}, "71": {"ERC20._approve": {"103": [9468, 9504], "104": [9514, 9551]}, "ERC20._burn": {"246": [8587, 8655], "247": [8666, 8715], "248": [8726, 8814], "249": [8824, 8863], "250": [8873, 8915]}, "ERC20._mint": {"278": [7973, 8022], "279": [8033, 8072], "280": [8082, 8133], "281": [8143, 8185]}, "ERC20._transfer": {"115": [7195, 7266], "116": [7276, 7348], "117": [7359, 7406], "118": [7417, 7505], "119": [7515, 7570], "120": [7580, 7620]}, "ERC20.allowance": {"210": [3993, 4027]}, "ERC20.approve": {"1": [4271, 4308], "2": [4318, 4329]}, "ERC20.balanceOf": {"43": [3422, 3447]}, "ERC20.decimals": {"17": [3098, 3114]}, "ERC20.increaseAllowance": {"24": [5688, 5767]}, "ERC20.name": {"0": [2200, 2212]}, "ERC20.symbol": {"57": [2396, 2410]}, "ERC20.totalSupply": {"4": [3253, 3272]}, "ERC20.transfer": {"70": [3759, 3799]}}, "72": {"ERC20Permit.DOMAIN_SEPARATOR": {"21": [2438, 2465]}, "ERC20Permit.nonces": {"50": [2207, 2228]}, "ERC20Permit.permit": {"75": [1575, 1635], "76": [1902, 1981], "77": [1992, 2018], "78": [2028, 2059]}}, "75": {}, "76": {}, "8": {"GyroTwoMath._calcInGivenOut": {"266": [12818, 12889], "267": [12899, 12978], "268": [13355, 13428], "269": [13449, 13524]}, "GyroTwoMath._calcOutGivenIn": {"262": [9922, 9997], "263": [10374, 10450], "264": [10471, 10542], "265": [10615, 10694]}, "GyroTwoMath._calculateInvariant": {"202": [4409, 4455]}, "GyroTwoMath._calculateQuadratic": {"275": [7054, 7096]}, "GyroTwoMath._calculateQuadraticTerms": {"270": [5011, 5062], "271": [5197, 5220], "272": [5234, 5271], "273": [5464, 5546], "274": [5773, 5810]}, "GyroTwoMath._calculateVirtualParameter0": {"367": [13740, 13775]}, "GyroTwoMath._calculateVirtualParameter1": {"366": [13992, 14028]}}, "80": {"SafeMath.sub": {"215": [1861, 1888], "297": [1430, 1467]}}, "9": {"GyroTwoOracleMath._calcLogBPTPrice": {"257": [5362, 5406]}, "GyroTwoOracleMath._calcLogSpotPrice": {"256": [3405, 3449]}, "GyroTwoOracleMath._calcSpotPrice": {"298": [1966, 2137]}}, "99": {}}}, "dependencies": ["Authentication", "BalancerPoolToken", "BasePoolAuthorization", "Buffer", "EIP712", "ERC20", "ERC20Permit", "Errors", "ExtensibleWeightedPool2Tokens", "FixedPoint", "Gyro2PoolErrors", "GyroConfigKeys", "GyroPoolMath", "GyroTwoMath", "GyroTwoOracleMath", "IAsset", "IAuthentication", "IAuthorizer", "IBasePool", "IERC20", "IERC20Permit", "IFlashLoanRecipient", "IGyroConfig", "IMinimalSwapInfoPool", "IPoolPriceOracle", "IPoolSwapStructs", "IPriceOracle", "IProtocolFeesCollector", "ISignaturesValidator", "ITemporarilyPausable", "IVault", "IWETH", "InputHelpers", "LogCompression", "LogExpMath", "Math", "PoolPriceOracle", "QueryProcessor", "SafeMath", "Samples", "TemporarilyPausable", "WeightedMath", "WeightedPool2TokensMiscData", "WeightedPoolUserDataHelpers", "WordCodec"], "deployedBytecode": "608060405234801561001057600080fd5b506004361061027f5760003560e01c8063707dcd1e1161015c5780639d2c110c116100ce578063c0ff1a1511610087578063c0ff1a151461055d578063d505accf14610565578063d5c096c414610578578063dd62ed3e1461058b578063f89f27ed1461059e578063ffd088eb146105a65761027f565b80639d2c110c14610501578063a457c2d714610514578063a9059cbb14610527578063aaabadc51461053a578063b10be73914610542578063b48b5b40146105555761027f565b806387ec68171161012057806387ec6817146104c6578063893d20e8146104d95780638d928af8146104e15780638dd9f89d146104e957806395d89b41146104f15780639b02cdde146104f95761027f565b8063707dcd1e1461046457806370a082311461046c57806374f3b0091461047f5780637ecebe00146104a0578063851c1bb3146104b35761027f565b806338e9922e116101f55780634a6b0b15116101b95780634a6b0b15146103d357806355c67628146103ed5780636028bfd4146103f557806360d1507c14610416578063679aefce1461043c5780636b843239146104445761027f565b806338e9922e1461036e57806338fff2d01461038157806339509351146103895780633c4dd5bb1461039c57806344bbdb55146103be5761027f565b80631dccd830116102475780631dccd8301461030357806323b872dd14610323578063292c914a14610336578063313ce5671461033e5780633331bc36146103535780633644e515146103665761027f565b806306fdde0314610284578063095ea7b3146102a257806316c38b3c146102c257806318160ddd146102d75780631c0de051146102ec575b600080fd5b61028c6105ae565b6040516102999190614b72565b60405180910390f35b6102b56102b03660046142ba565b610644565b60405161029991906149c7565b6102d56102d0366004614528565b61065b565b005b6102df61066f565b60405161029991906149ea565b6102f4610675565b604051610299939291906149d2565b61031661031136600461446e565b61069e565b604051610299919061498f565b6102b5610331366004614205565b6107c1565b6102d5610835565b610346610869565b6040516102999190614c1a565b6102d5610361366004614861565b610872565b6102df6108ea565b6102d561037c366004614849565b6108f9565b6102df610912565b6102b56103973660046142ba565b610936565b6103af6103aa366004614882565b610971565b60405161029993929190614c04565b6103c6610990565b6040516102999190614937565b6103db61099f565b60405161029996959493929190614ac0565b6102df6109fa565b610408610403366004614560565b610a07565b604051610299929190614beb565b610429610424366004614849565b610a38565b6040516102999796959493929190614a90565b6102df610a81565b6104576104523660046143b0565b610aa6565b604051610299919061494b565b610316610b5c565b6102df61047a366004614195565b610b66565b61049261048d366004614560565b610b85565b6040516102999291906149a2565b6102df6104ae366004614195565b610c2a565b6102df6104c136600461465c565b610c45565b6104086104d4366004614560565b610c97565b6103c6610cbc565b6103c6610ce0565b610316610d04565b61028c610e04565b6102df610e65565b6102df61050f36600461474e565b610e6b565b6102b56105223660046142ba565b611033565b6102b56105353660046142ba565b611071565b6103c661107e565b6102df61055036600461471b565b611088565b6102df61111d565b6102df611123565b6102d5610573366004614245565b611208565b610492610586366004614560565b611351565b6102df6105993660046141cd565b611471565b6103166114ae565b6102df6114b8565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561063a5780601f1061060f5761010080835404028352916020019161063a565b820191906000526020600020905b81548152906001019060200180831161061d57829003601f168201915b5050505050905090565b6000610651338484611546565b5060015b92915050565b6106636115ae565b61066c816115dc565b50565b60025490565b600080600061068261165a565b15925061068d611677565b915061069761169b565b9050909192565b606081516001600160401b03811180156106b757600080fd5b506040519080825280602002602001820160405280156106e1578160200160208202803683370190505b50905060006106ee6116bf565b905060005b83518110156107ba5773__$85f042f43089d976c21d0d184f206dc395$__6379eaef82600886848151811061072457fe5b6020026020010151856040518463ffffffff1660e01b815260040161074b93929190614b36565b60206040518083038186803b15801561076357600080fd5b505af4158015610777573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079b9190614736565b8382815181106107a757fe5b60209081029190910101526001016106f3565b5050919050565b6000806107ce8533611471565b90506107f2336001600160a01b03871614806107ea5750838210155b61019e6116cc565b6107fd8585856116de565b336001600160a01b0386161480159061081857506000198114155b1561082a5761082a8533858403611546565b506001949350505050565b61083d6117be565b6108456115ae565b61084f60016117d1565b600061085961066f565b111561086757610867611811565b565b60055460ff1690565b61088d818310801561088657506104008211155b60646116cc565b60006108a26001600080600080600080611859565b9050825b828110156108e4576000818152600860205260409020546108c6906118b9565b6108dc5760008181526008602052604090208290555b6001016108a6565b50505050565b60006108f46118c5565b905090565b6109016115ae565b6109096117be565b61066c81611962565b7f000000000000000000000000000000000000000000000000000000000000000090565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161065191859061096c90866114bf565b611546565b60008060006109818686866119cb565b92509250925093509350939050565b600b546001600160a01b031681565b600080600080600080600060095490506109b881611b06565b96506109c381611b12565b95506109ce81611b1f565b94506109d981611b2c565b93506109e481611b39565b92506109ef81611b46565b915050909192939495565b60006108f4600954611b46565b60006060610a1786516002611b53565b610a2c89898989898989611b60611cb1611d2f565b97509795505050505050565b6000806000806000806000610a53610400891061013b6116cc565b6000610a5e89611e43565b9050610a6981611e55565b959f949e50929c50909a509850965090945092505050565b60006108f4610a8e61066f565b610aa0610a99611123565b6002611eb8565b90611edc565b606081516001600160401b0381118015610abf57600080fd5b50604051908082528060200260200182016040528015610ae9578160200160208202803683370190505b5090506000610af66116bf565b9050610b0061407f565b60005b8451811015610b5457848181518110610b1857fe5b60200260200101519150610b358260000151848460200151611f1b565b848281518110610b4157fe5b6020908102919091010152600101610b03565b505050919050565b60606108f4611fb4565b6001600160a01b0381166000908152602081905260409020545b919050565b60608088610baf610b94610ce0565b6001600160a01b0316336001600160a01b03161460cd6116cc565b610bc4610bba610912565b82146101f46116cc565b610bcd87612022565b6000606080610be18d8d8d8d8d8d8d611b60565b925092509250610bf18c84612084565b610bfa82611cb1565b610c0381611cb1565b610c0b61165a565b15610c1857610c18611811565b909c909b509950505050505050505050565b6001600160a01b031660009081526006602052604090205490565b60007f000000000000000000000000000000000000000000000000000000000000000082604051602001610c7a9291906148f4565b604051602081830303815290604052805190602001209050919050565b60006060610ca786516002611b53565b610a2c8989898989898961208e61213f611d2f565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b606080610d0f610ce0565b6001600160a01b031663f94d4668610d25610912565b6040518263ffffffff1660e01b8152600401610d4191906149ea565b60006040518083038186803b158015610d5957600080fd5b505afa158015610d6d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d9591908101906142e5565b50915050610dcd81600081518110610da957fe5b602002602001015182600181518110610dbe57fe5b602002602001015160016119cb565b90915083600081518110610ddd57fe5b6020026020010184600181518110610df157fe5b6020908102919091010191909152525090565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561063a5780601f1061060f5761010080835404028352916020019161063a565b600a5490565b6000610e756117be565b8360800151610e85610b94610ce0565b610e90610bba610912565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031686602001516001600160a01b03161490506000610ed88261219d565b90506000610ee6831561219d565b9050610ef287836121f1565b9650610efe86826121f1565b95506000806000610f108a8a886119cb565b925092509250610f578b60a0015187610f29578a610f2b565b8b5b88610f36578c610f38565b8b5b89610f435784610f45565b855b8a610f505786610f52565b855b6121fd565b60008b516001811115610f6657fe5b1415610fd6576000610f84610f796109fa565b60608e0151906122a7565b9050610fa6610fa0828e606001516114f490919063ffffffff16565b876121f1565b60608d01526000610fbb8d8d8d87878a6122eb565b9050610fc78187612309565b9950505050505050505061102b565b610fe48b60600151856121f1565b60608c01526000610ff98c8c8c868689612315565b90506110058187612328565b905061102161101a6110156109fa565b612334565b829061235a565b9850505050505050505b509392505050565b6000806110403385611471565b905080831061105a5761105533856000611546565b611067565b6110673385858403611546565b5060019392505050565b60006106513384846116de565b60006108f46123a5565b600073__$85f042f43089d976c21d0d184f206dc395$__630397bee06008846110af6116bf565b6040518463ffffffff1660e01b81526004016110cd93929190614aea565b60206040518083038186803b1580156110e557600080fd5b505af41580156110f9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106559190614736565b61040090565b6000606061112f610ce0565b6001600160a01b031663f94d4668611145610912565b6040518263ffffffff1660e01b815260040161116191906149ea565b60006040518083038186803b15801561117957600080fd5b505afa15801561118d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111b591908101906142e5565b5091505060606111c3611fb4565b90506111ce82612022565b61120182826000815181106111df57fe5b6020026020010151836001815181106111f457fe5b602002602001015161241f565b9250505090565b6112168442111560d16116cc565b6001600160a01b038716600090815260066020908152604080832054905190929161126d917f0000000000000000000000000000000000000000000000000000000000000000918c918c918c9188918d9101614a12565b604051602081830303815290604052805190602001209050600061129082612452565b90506000600182888888604051600081526020016040526040516112b79493929190614a72565b6020604051602081039080840390855afa1580156112d9573d6000803e3d6000fd5b5050604051601f190151915061131b90506001600160a01b0382161580159061131357508b6001600160a01b0316826001600160a01b0316145b6101f86116cc565b6001600160a01b038b1660009081526006602052604090206001850190556113448b8b8b611546565b5050505050505050505050565b60608088611360610b94610ce0565b61136b610bba610912565b6113736117be565b600061137d61066f565b6113ed5761138d8b8b8b8861246e565b945090506113a2620f424082101560cc6116cc565b6113b06000620f42406124fe565b6113bf89620f424083036124fe565b6113c88461213f565b604080516002808252606082018352909160208301908036833701905050925061145b565b6113f688612022565b611429878960008151811061140757fe5b60200260200101518a60018151811061141c57fe5b6020026020010151612508565b6114388b8b8b8b8b8b8b61208e565b9095509350905061144989826124fe565b6114528461213f565b61145b83611cb1565b611463611811565b505097509795505050505050565b600061147b610ce0565b6001600160a01b0316826001600160a01b0316141561149d5750600019610655565b6114a7838361250d565b9050610655565b60606108f4612538565b6201de2090565b60008282016114d184821015836116cc565b9392505050565b60006114d18383605561150a565b60006114d183836056611531565b60006115048383111560016116cc565b50900390565b60006001821b1984168284611520576000611523565b60015b60ff16901b17949350505050565b6001600160401b03811b1992909216911b1790565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906115a19085906149ea565b60405180910390a3505050565b60006115c56000356001600160e01b031916610c45565b905061066c6115d48233612589565b6101916116cc565b80156115fc576115f76115ed611677565b42106101936116cc565b611611565b61161161160761169b565b42106101a96116cc565b6007805460ff19168215151790556040517f9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be649061164f9083906149c7565b60405180910390a150565b600061166461169b565b4211806108f457505060075460ff161590565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b60006108f4600954611b2c565b816116da576116da81612672565b5050565b6116f56001600160a01b03841615156101986116cc565b61170c6001600160a01b03831615156101996116cc565b611717838383612508565b6001600160a01b03831660009081526020819052604090205461173d90826101a06126c5565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461176c90826114bf565b6001600160a01b0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906115a19085906149ea565b6108676117c961165a565b6101926116cc565b6009546117de90826114d8565b6009556040517f3e350b41e86a8e10f804ade6d35340d620be35569cc75ac943e8bb14ab80ead19061164f9083906149c7565b60095461181d81611b39565b1561066c57611837611830600a546126db565b829061271b565b905061185361184c61184761066f565b6126db565b8290612728565b60095550565b60006118658282612736565b61187084601f61273a565b61187b86605461274b565b61188688606a61273a565b6118918a609f61274b565b61189c8c60b561273a565b6118a78e60ea61274b565b17171717171798975050505050505050565b60006106558282612758565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611932612762565b30604051602001611947959493929190614a46565b60405160208183030381529060405280519060200120905090565b61197564e8d4a5100082101560cb6116cc565b61198b67016345785d8a000082111560ca6116cc565b60095461199890826114e6565b6009556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc9061164f9083906149ea565b60408051600280825260608083018452600093849384939091602083019080368337019050509050846119fe5785611a00565b865b81600081518110611a0d57fe5b60200260200101818152505084611a245786611a26565b855b81600181518110611a3357fe5b6020026020010181815250506060611a49611fb4565b9050611a5c82826000815181106111df57fe5b604080516002808252606080830184529398509091602083019080368337019050509050611a8a8287612766565b905086611aab5780600181518110611a9e57fe5b6020026020010151611ac1565b80600081518110611ab857fe5b60200260200101515b945086611ae25780600081518110611ad557fe5b6020026020010151611af8565b80600181518110611aef57fe5b60200260200101515b935050505093509350939050565b600061065582826127f4565b60006106558260166127f4565b600061065582602c612758565b600061065582604b61281b565b6000610655826055612823565b600061065582605661282d565b6116da81831460676116cc565b60006060806060611b6f611fb4565b9050611b7961165a565b15611c4a576000611ba68983600081518110611b9157fe5b6020026020010151846001815181106111f457fe5b90506060611bb48383612766565b9050611c13898b600081518110611bc757fe5b60200260200101518c600181518110611bdc57fe5b602002602001015184600081518110611bf157fe5b602002602001015185600181518110611c0657fe5b60200260200101516121fd565b611c1c8261283a565b611c268a88612867565b9096509450611c3f8287611c3861066f565b60006128b3565b600a5550611c7b9050565b611c548886612867565b9094509250611c6688846114f461290b565b611c7788826000815181106111df57fe5b600a555b60408051600280825260608201835286928692919060208301908036833701905050935093509350509750975097945050505050565b611cd881600081518110611cc157fe5b6020026020010151611cd3600161219d565b61299d565b81600081518110611ce557fe5b602002602001018181525050611d1381600181518110611d0157fe5b6020026020010151611cd3600061219d565b81600181518110611d2057fe5b60200260200101818152505050565b333014611ded576000306001600160a01b0316600036604051611d5392919061490c565b6000604051808303816000865af19150503d8060008114611d90576040519150601f19603f3d011682016040523d82523d6000602084013e611d95565b606091505b505090508060008114611da457fe5b60046000803e6000516001600160e01b0319166343adbafb60e01b8114611dcf573d6000803e3d6000fd5b506020600460003e604060205260243d03602460403e601c3d016000f35b611df686612022565b60006060611e0d8b8b8b8b8b8b8b8b63ffffffff16565b5091509150611e1f818463ffffffff16565b8051601f1982018390526343adbafb603f1983015260200260231982016044820181fd5b60009081526008602052604090205490565b6000806000806000806000611e69886129bd565b9650611e74886129ca565b9550611e7f886129d7565b9450611e8a886129e4565b9350611e95886129f1565b9250611ea0886129fe565b9150611eab886118b9565b9050919395979092949650565b60008282026114d1841580611ed5575083858381611ed257fe5b04145b60036116cc565b600081611ee857600080fd5b670de0b6b3a764000083810290848281611efe57fe5b0414611f0957600080fd5b828181611f1257fe5b04949350505050565b6040516334171a8560e01b815260009073__$85f042f43089d976c21d0d184f206dc395$__906334171a8590611f5c90600890889088908890600401614b0b565b60206040518083038186803b158015611f7457600080fd5b505af4158015611f88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fac9190614736565b949350505050565b604080516002808252606080830184529283929190602083019080368337019050509050611fe26001612a0b565b81600081518110611fef57fe5b6020026020010181815250506120056000612a0b565b8160018151811061201257fe5b6020908102919091010152905090565b6120498160008151811061203257fe5b6020026020010151612044600161219d565b611eb8565b8160008151811061205657fe5b602002602001018181525050611d138160018151811061207257fe5b6020026020010151612044600061219d565b6116da8282612a5f565b6000606080606061209d611fb4565b905060006120b28983600081518110611b9157fe5b905060606120c08383612766565b90506120d3898b600081518110611bc757fe5b6120dc8261283a565b600060606120ea8c8a612b1b565b9150915061210284836120fb61066f565b60016128b3565b600a556040805160028082526060820183528492849291906020830190803683370190505097509750975050505050509750975097945050505050565b6121668160008151811061214f57fe5b6020026020010151612161600161219d565b612b55565b8160008151811061217357fe5b602002602001018181525050611d138160018151811061218f57fe5b602002602001015161216160005b6000816121ca577f0000000000000000000000000000000000000000000000000000000000000000610655565b507f0000000000000000000000000000000000000000000000000000000000000000919050565b60006114d18383611eb8565b60095461220981611b39565b801561221457508543115b1561229f57600061222786858786612b88565b905060006122408786888761223b88611b12565b612ba2565b9050600061224d84611b2c565b9050600061225a85611b1f565b905060006122738284878761226e8b611b06565b612be8565b9050808314611344576122868682612c3f565b95506122928642612c4d565b6009819055955050505050505b505050505050565b60008282026122c1841580611ed5575083858381611ed257fe5b806122d0576000915050610655565b670de0b6b3a764000060001982015b04600101915050610655565b60006122fe868689606001518787612c5b565b979650505050505050565b60006114d1838361299d565b60006122fe868689606001518787612cff565b60006114d18383612b55565b6000670de0b6b3a7640000821061234c576000610655565b50670de0b6b3a76400000390565b600061236982151560046116cc565b8261237657506000610655565b670de0b6b3a7640000838102906123999085838161239057fe5b041460056116cc565b8260018203816122df57fe5b60006123af610ce0565b6001600160a01b031663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b1580156123e757600080fd5b505afa1580156123fb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f491906141b1565b6000806000806000612432888888612d9e565b935093509350935061244684848484612f18565b98975050505050505050565b600061245c6118c5565b82604051602001610c7a92919061491c565b60006060600061247d84612f8c565b9050612498600082600381111561249057fe5b1460ce6116cc565b60606124a385612fa2565b90506124b181516002611b53565b6124ba81612022565b60606124c4611fb4565b905060006124d98383600081518110611b9157fe5b905060006124e8826002611eb8565b600a929092555099919850909650505050505050565b6116da8282612fb8565b505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6040805160028082526060808301845292839291906020830190803683370190505090506125666001613046565b8160008151811061257357fe5b6020026020010181815250506120056000613046565b600073ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b6125a8610cbc565b6001600160a01b0316141580156125c357506125c38361309a565b156125eb576125d0610cbc565b6001600160a01b0316336001600160a01b0316149050610655565b6125f36123a5565b6001600160a01b0316639be2a8848484306040518463ffffffff1660e01b8152600401612622939291906149f3565b60206040518083038186803b15801561263a57600080fd5b505afa15801561264e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a79190614544565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b60006126d484841115836116cc565b5050900390565b6000806126e7836130cc565b9050600080821361270057652d79883d2000820361270a565b652d79883d200082015b655af3107a40009005949350505050565b60006114d1838383613130565b60006114d183836016613130565b1b90565b661fffffffffffff91909116901b90565b623fffff91909116901b90565b1c637fffffff1690565b4690565b6040805160028082526060808301845292839291906020830190803683370190505090506127aa60018560018151811061279c57fe5b602002602001015185613147565b816000815181106127b757fe5b6020026020010181815250506127d560008560008151811061279c57fe5b816001815181106127e257fe5b60209081029190910101529392505050565b600082821c623fffff16621fffff811361280e5780611fac565b623fffff19179392505050565b1c6103ff1690565b1c60019081161490565b1c6001600160401b031690565b60008060008061284c600a5486613167565b9350935093509350612860848484846131d0565b5050505050565b60006060600061287684612f8c565b9050600181600381111561288657fe5b14156128a05761289685856131f0565b90935091506128ab565b6128ab610150612672565b509250929050565b600081156128e55760006128d1846128cb88886122a7565b9061235a565b90506128dd86826114bf565b915050611fac565b60006128f584610aa08888613222565b905061290186826114f4565b9695505050505050565b6129418360008151811061291b57fe5b60200260200101518360008151811061293057fe5b60200260200101518363ffffffff16565b8360008151811061294e57fe5b60200260200101818152505061297f8360018151811061296a57fe5b60200260200101518360018151811061293057fe5b8360018151811061298c57fe5b602002602001018181525050505050565b60006129ac82151560046116cc565b8183816129b557fe5b049392505050565b60006106558260ea6127f4565b60006106558260b561324b565b600061065582609f6127f4565b600061065582606a61324b565b60006106558260546127f4565b600061065582601f61324b565b600081612a38577f0000000000000000000000000000000000000000000000000000000000000000610655565b507f0000000000000000000000000000000000000000000000000000000000000000919050565b612a766001600160a01b038316151561019b6116cc565b612a8282600083612508565b6001600160a01b038216600090815260208190526040902054612aa890826101a16126c5565b6001600160a01b038316600090815260208190526040902055600254612ace908261327e565b6002556040516000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90612b0f9085906149ea565b60405180910390a35050565b600060606000612b2a84612f8c565b90506003816003811115612b3a57fe5b1415612b4a57612896858561328c565b6128ab610136612672565b6000612b6482151560046116cc565b82612b7157506000610655565b816001840381612b7d57fe5b046001019050610655565b600080612b97868686866132b1565b9050612901816126db565b600080612bb1878787876132b1565b90506000612bc9612bc287846122a7565b89906114bf565b90506000612bd6826126db565b85900393505050505b95945050505050565b600080612c0485858542612bfb8b611e43565b939291906132d9565b9050607842889003101580612c195786612c22565b612c228761332b565b600081815260086020526040902092909255509695505050505050565b60006114d18383604b613338565b60006114d18383602c613348565b6000612c7d612c7287670429d069189e0000613222565b8511156101306116cc565b6000612c9b612c9485670de0b6b3a76400026122a7565b88906114bf565b90506000612cb4612c9485670de0b6b3a763ffff613222565b9050612ccd612cc383886114bf565b610aa08389613222565b92505050612cdf8582106101656116cc565b612bdf612cf486670429d069189e0000613222565b8211156101316116cc565b6000612d0f8585106101656116cc565b612d2f612d2486670429d069189e0000613222565b8511156101316116cc565b6000612d46612c9485670de0b6b3a76400026122a7565b90506000612d5f612c9485670de0b6b3a763ffff613222565b9050612d78612d6e82886114f4565b6128cb84896122a7565b9250612bdf9150612d93905087670429d069189e0000613222565b8211156101306116cc565b6000808080612dbf612db08787611edc565b670de0b6b3a7640000906114f4565b93506000612dea8689600181518110612dd457fe5b6020026020010151611edc90919063ffffffff16565b90506000612e15888a600081518110612dff57fe5b602002602001015161322290919063ffffffff16565b9050612e2182826114bf565b9450612e4889600181518110612e3357fe5b60200260200101518a600081518110612dff57fe5b92505050612e7f86612e7988612e798b600081518110612e6457fe5b60200260200101518c600081518110612dff57fe5b90613222565b91506000612ebf86610aa089612e79670de0b6b3a7640000600202612e798e600181518110612eaa57fe5b60200260200101518f600081518110612dff57fe5b90506000612ef5612ed088806122a7565b610aa08b600181518110612ee057fe5b60200260200101518c600181518110612dff57fe5b9050612f0b81612f0586856114bf565b906114bf565b9350505093509350935093565b600080612f2d86671bc16d674ec800006122a7565b90506000612f4787612e7986673782dace9d900000613222565b90506000612f5586836114bf565b90506000612f6482600561335a565b90506000612f7289836114bf565b9050612f7e8186611edc565b9a9950505050505050505050565b6000818060200190518101906106559190614684565b6060818060200190518101906114d191906146cd565b612fc460008383612508565b600254612fd190826114bf565b6002556001600160a01b038216600090815260208190526040902054612ff790826114bf565b6001600160a01b0383166000818152602081905260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90612b0f9085906149ea565b600081613073577f0000000000000000000000000000000000000000000000000000000000000000610655565b507f0000000000000000000000000000000000000000000000000000000000000000919050565b60006130ac631c74c91760e11b610c45565b82148061065557506130c46350dd6ed960e01b610c45565b909114919050565b60006130dc6000831360646116cc565b670c7d713b49da0000821380156130fa5750670f43fc2c04ee000082125b1561312057670de0b6b3a7640000613111836134cd565b8161311857fe5b059050610b80565b613129826135eb565b9050610b80565b623fffff828116821b90821b198416179392505050565b60008361315d57613158828461398a565b611fac565b611fac8284613996565b60008060008060008060008061317b6139a2565b935093509350935083600014156131a0576000975087965090945092506131c7915050565b6000806131b78c8c6131b061066f565b8989613c11565b909a509850929650909450505050505b92959194509250565b83156131e0576131e082856124fe565b82156108e4576108e481846124fe565b6000606060006131ff84613ca6565b90506060613215868361321061066f565b613cbc565b9196919550909350505050565b600082820261323c841580611ed5575083858381611ed257fe5b670de0b6b3a764000081611f12565b600082821c661fffffffffffff16660fffffffffffff811361326d5780611fac565b661fffffffffffff19179392505050565b60006114d1838360016126c5565b60006060600061329b84613ca6565b9050606061321586836132ac61066f565b613d57565b60006706f05b59d3b200006129016132cd826128cb87876114bf565b6128cb83818a8a6114bf565b6000806132e5876118b9565b8303905060008187026132f7896129ca565b01905060008287026133088a6129e4565b01905060008387026133198b6129fe565b019050612f7e89848a858b868c611859565b6000610655826001613dfe565b6103ff811b1992909216911b1790565b637fffffff811b1992909216911b1790565b60008261336957506000610655565b600061337484613e06565b9050600281670de0b6b3a764000086028161338b57fe5b0482018161339557fe5b049050600281670de0b6b3a76400008602816133ad57fe5b048201816133b757fe5b049050600281670de0b6b3a76400008602816133cf57fe5b048201816133d957fe5b049050600281670de0b6b3a76400008602816133f157fe5b048201816133fb57fe5b049050600281670de0b6b3a764000086028161341357fe5b0482018161341d57fe5b049050600281670de0b6b3a764000086028161343557fe5b0482018161343f57fe5b049050600281670de0b6b3a764000086028161345757fe5b0482018161346157fe5b04905060006134708280613222565b905061348661347f83866122a7565b86906114bf565b81111580156134a857506134a461349d83866122a7565b86906114f4565b8110155b61102b5760405162461bcd60e51b81526004016134c490614bc5565b60405180910390fd5b670de0b6b3a7640000026000806a0c097ce7bc90715b34b9f160241b808401906ec097ce7bc90715b34b9f0fffffffff198501028161350857fe5b05905060006a0c097ce7bc90715b34b9f160241b82800205905081806a0c097ce7bc90715b34b9f160241b81840205915060038205016a0c097ce7bc90715b34b9f160241b82840205915060058205016a0c097ce7bc90715b34b9f160241b82840205915060078205016a0c097ce7bc90715b34b9f160241b82840205915060098205016a0c097ce7bc90715b34b9f160241b828402059150600b8205016a0c097ce7bc90715b34b9f160241b828402059150600d8205016a0c097ce7bc90715b34b9f160241b828402059150600f826002919005919091010295945050505050565b6000670de0b6b3a76400008212156136275761361d826a0c097ce7bc90715b34b9f160241b8161361757fe5b056135eb565b6000039050610b80565b60007e1600ef3172e58d2e933ec884fde10064c63b5372d805e203c0000000000000831261367857770195e54c5dd42177f53a27172fa9ec630262827000000000830592506806f05b59d3b2000000015b73011798004d755d3c8bc8e03204cf44619e00000083126136b0576b1425982cf597cd205cef7380830592506803782dace9d9000000015b606492830292026e01855144814a7ff805980ff008400083126136f8576e01855144814a7ff805980ff008400068056bc75e2d63100000840205925068ad78ebc5ac62000000015b6b02df0ab5a80a22c61ab5a7008312613733576b02df0ab5a80a22c61ab5a70068056bc75e2d6310000084020592506856bc75e2d631000000015b693f1fce3da636ea5cf850831261376a57693f1fce3da636ea5cf85068056bc75e2d631000008402059250682b5e3af16b18800000015b690127fa27722cc06cc5e283126137a157690127fa27722cc06cc5e268056bc75e2d6310000084020592506815af1d78b58c400000015b68280e60114edb805d0383126137d65768280e60114edb805d0368056bc75e2d631000008402059250680ad78ebc5ac6200000015b680ebc5fb41746121110831261380157680ebc5fb4174612111068056bc75e2d631000009384020592015b6808f00f760a4b2db55d8312613836576808f00f760a4b2db55d68056bc75e2d6310000084020592506802b5e3af16b1880000015b6806f5f1775788937937831261386b576806f5f177578893793768056bc75e2d63100000840205925068015af1d78b58c40000015b6806248f33704b286603831261389f576806248f33704b28660368056bc75e2d63100000840205925067ad78ebc5ac620000015b6805c548670b9510e7ac83126138d3576805c548670b9510e7ac68056bc75e2d6310000084020592506756bc75e2d6310000015b600068056bc75e2d63100000840168056bc75e2d6310000080860302816138f657fe5b059050600068056bc75e2d63100000828002059050818068056bc75e2d63100000818402059150600382050168056bc75e2d63100000828402059150600582050168056bc75e2d63100000828402059150600782050168056bc75e2d63100000828402059150600982050168056bc75e2d63100000828402059150600b820501600202606485820105979650505050505050565b60006114d18383613222565b60006114d18383611edc565b600b5460405163bd02d0f560e01b81526000918291829182916001600160a01b039091169063bd02d0f5906139f4907550524f544f434f4c5f535741505f4645455f5045524360501b906004016149ea565b60206040518083038186803b158015613a0c57600080fd5b505afa158015613a20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a449190614736565b600b5460405163bd02d0f560e01b81526001600160a01b039091169063bd02d0f590613a94907f50524f544f434f4c5f4645455f4759524f5f504f5254494f4e00000000000000906004016149ea565b60206040518083038186803b158015613aac57600080fd5b505afa158015613ac0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613ae49190614736565b600b546040516321f8a72160e01b81526001600160a01b03909116906321f8a72190613b24906c4759524f5f545245415355525960981b906004016149ea565b60206040518083038186803b158015613b3c57600080fd5b505afa158015613b50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b7491906141b1565b600b546040516321f8a72160e01b81526001600160a01b03909116906321f8a72190613bb3906b42414c5f545245415355525960a01b906004016149ea565b60206040518083038186803b158015613bcb57600080fd5b505afa158015613bdf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c0391906141b1565b935093509350935090919293565b600080868611613c2657506000905080613c9c565b6000613c4085612e79613c398a8c6114f4565b8990613222565b90506000613c58613c51898b6114f4565b8790613222565b90506000613c6689836114f4565b90506000613c748483611edc565b90506000613c828883613222565b90506000613c9083836114f4565b91975090955050505050505b9550959350505050565b6000818060200190518101906114d191906146a0565b60606000613cca8484611edc565b9050606085516001600160401b0381118015613ce557600080fd5b50604051908082528060200260200182016040528015613d0f578160200160208202803683370190505b50905060005b8651811015613d4d57613d2e83888381518110612dff57fe5b828281518110613d3a57fe5b6020908102919091010152600101613d15565b5095945050505050565b60606000613d65848461235a565b9050606085516001600160401b0381118015613d8057600080fd5b50604051908082528060200260200182016040528015613daa578160200160208202803683370190505b50905060005b8651811015613d4d57613ddf83888381518110613dc957fe5b60200260200101516122a790919063ffffffff16565b828281518110613deb57fe5b6020908102919091010152600101613db0565b016103ff1690565b6000670de0b6b3a76400008210613e3357670de0b6b3a7640000613e2b818404613fe9565b1b9050610b80565b600a821015613e4757506312d940b6610b80565b6064821015613e5c57506402540be400610b80565b6103e8821015613e72575064075cdd4719610b80565b612710821015613e88575064174876e800610b80565b620186a0821015613e9f57506449a0a4c700610b80565b620f4240821015613eb6575064e8d4a51000610b80565b62989680821015613ece57506502e0466fc608610b80565b6305f5e100821015613ee757506509184e72a000610b80565b633b9aca00821015613f005750651cc2c05dbc53610b80565b6402540be400821015613f1a5750655af3107a4000610b80565b64174876e800821015613f35575066011f9b83a95b45610b80565b64e8d4a51000821015613f50575066038d7ea4c68000610b80565b6509184e72a000821015613f6c5750660b3c13249d90bb610b80565b655af3107a4000821015613f885750662386f26fc10000610b80565b66038d7ea4c68000821015613fa55750667058bf6e27a751610b80565b662386f26fc10000821015613fc3575067016345785d8a0000610b80565b67016345785d8a0000821015613fe25750670463777a4d8c892d610b80565b5080610b80565b6000600160801b82106140015760809190911c906040015b68010000000000000000821061401c5760409190911c906020015b64010000000082106140335760209190911c906010015b6201000082106140485760109190911c906008015b610100821061405c5760089190911c906004015b6010821061406f5760049190911c906002015b60048210610b8057600101919050565b604080518082019091526000808252602082015290565b803561065581614c77565b600082601f8301126140b1578081fd5b81516140c46140bf82614c4e565b614c28565b8181529150602080830190848101818402860182018710156140e557600080fd5b60005b84811015614104578151845292820192908201906001016140e8565b505050505092915050565b600082601f83011261411f578081fd5b81356001600160401b03811115614134578182fd5b614147601f8201601f1916602001614c28565b915080825283602082850101111561415e57600080fd5b8060208401602084013760009082016020015292915050565b80356002811061065557600080fd5b80356003811061065557600080fd5b6000602082840312156141a6578081fd5b81356114d181614c77565b6000602082840312156141c2578081fd5b81516114d181614c77565b600080604083850312156141df578081fd5b82356141ea81614c77565b915060208301356141fa81614c77565b809150509250929050565b600080600060608486031215614219578081fd5b833561422481614c77565b9250602084013561423481614c77565b929592945050506040919091013590565b600080600080600080600060e0888a03121561425f578485fd5b873561426a81614c77565b9650602088013561427a81614c77565b95506040880135945060608801359350608088013560ff8116811461429d578384fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156142cc578182fd5b82356142d781614c77565b946020939093013593505050565b6000806000606084860312156142f9578081fd5b83516001600160401b038082111561430f578283fd5b818601915086601f830112614322578283fd5b81516143306140bf82614c4e565b80828252602080830192508086018b828387028901011115614350578788fd5b8796505b8487101561437b57805161436781614c77565b845260019690960195928101928101614354565b508901519097509350505080821115614392578283fd5b5061439f868287016140a1565b925050604084015190509250925092565b600060208083850312156143c2578182fd5b82356001600160401b038111156143d7578283fd5b8301601f810185136143e7578283fd5b80356143f56140bf82614c4e565b818152838101908385016040808502860187018a1015614413578788fd5b8795505b848610156144605780828b03121561442d578788fd5b61443681614c28565b6144408b84614186565b815282880135888201528452600195909501949286019290810190614417565b509098975050505050505050565b60006020808385031215614480578182fd5b82356001600160401b03811115614495578283fd5b8301601f810185136144a5578283fd5b80356144b36140bf82614c4e565b818152838101908385016060808502860187018a10156144d1578788fd5b8795505b848610156144605780828b0312156144eb578788fd5b6144f481614c28565b6144fe8b84614186565b815282880135888201526040808401359082015284526001959095019492860192908101906144d5565b600060208284031215614539578081fd5b81356114d181614c8c565b600060208284031215614555578081fd5b81516114d181614c8c565b600080600080600080600060e0888a03121561457a578081fd5b8735965060208089013561458d81614c77565b9650604089013561459d81614c77565b955060608901356001600160401b03808211156145b8578384fd5b818b0191508b601f8301126145cb578384fd5b81356145d96140bf82614c4e565b8082825285820191508585018f8788860288010111156145f7578788fd5b8795505b838610156146195780358352600195909501949186019186016145fb565b509850505060808b0135955060a08b0135945060c08b013592508083111561463f578384fd5b505061464d8a828b0161410f565b91505092959891949750929550565b60006020828403121561466d578081fd5b81356001600160e01b0319811681146114d1578182fd5b600060208284031215614695578081fd5b81516114d181614c9a565b600080604083850312156146b2578182fd5b82516146bd81614c9a565b6020939093015192949293505050565b600080604083850312156146df578182fd5b82516146ea81614c9a565b60208401519092506001600160401b03811115614705578182fd5b614711858286016140a1565b9150509250929050565b60006020828403121561472c578081fd5b6114d18383614186565b600060208284031215614747578081fd5b5051919050565b600080600060608486031215614762578081fd5b83356001600160401b0380821115614778578283fd5b818601915061012080838903121561478e578384fd5b61479781614c28565b90506147a38884614177565b81526147b28860208501614096565b60208201526147c48860408501614096565b6040820152606083013560608201526080830135608082015260a083013560a08201526147f48860c08501614096565b60c08201526148068860e08501614096565b60e0820152610100808401358381111561481e578586fd5b61482a8a82870161410f565b9183019190915250976020870135975060409096013595945050505050565b60006020828403121561485a578081fd5b5035919050565b60008060408385031215614873578182fd5b50508035926020909101359150565b600080600060608486031215614896578081fd5b833592506020840135915060408401356148af81614c8c565b809150509250925092565b6000815180845260208085019450808401835b838110156148e9578151875295820195908201906001016148cd565b509495945050505050565b9182526001600160e01b031916602082015260240190565b6000828483379101908152919050565b61190160f01b81526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6020808252825182820181905260009190848201906040850190845b8181101561498357835183529284019291840191600101614967565b50909695505050505050565b6000602082526114d160208301846148ba565b6000604082526149b560408301856148ba565b8281036020840152612bdf81856148ba565b901515815260200190565b92151583526020830191909152604082015260600190565b90815260200190565b9283526001600160a01b03918216602084015216604082015260600190565b9586526001600160a01b0394851660208701529290931660408501526060840152608083019190915260a082015260c00190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b93845260ff9290921660208401526040830152606082015260800190565b968752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b9586526020860194909452604085019290925260608401521515608083015260a082015260c00190565b83815260608101614afa84614c6d565b602082019390935260400152919050565b84815260808101614b1b85614c6d565b84602083015283604083015282606083015295945050505050565b838152825160a0820190614b4981614c6d565b806020840152506020840151604083015260408401516060830152826080830152949350505050565b6000602080835283518082850152825b81811015614b9e57858101830151858201604001528201614b82565b81811115614baf5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252600c908201526b17dcdc5c9d0811905253115160a21b604082015260600190565b600083825260406020830152611fac60408301846148ba565b9283526020830191909152604082015260600190565b60ff91909116815260200190565b6040518181016001600160401b0381118282101715614c4657600080fd5b604052919050565b60006001600160401b03821115614c63578081fd5b5060209081020190565b6003811061066c57fe5b6001600160a01b038116811461066c57600080fd5b801515811461066c57600080fd5b6004811061066c57600080fdfea2646970667358221220aac763e46c6ded7f138ef24a7bca19ca00123477927b5c41d802a4885764bc8064736f6c63430007010033", "deployedSourceMap": "1263:26723:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2138:81:71;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4172:164;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;9250:89:6:-;;;;;;:::i;:::-;;:::i;:::-;;3181:98:71;;;:::i;:::-;;;;;;;:::i;3154:363:62:-;;;:::i;:::-;;;;;;;;;:::i;4323:433:44:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2657:655:35:-;;;;;;:::i;:::-;;:::i;8764:259:6:-;;;:::i;3040:81:71:-;;;:::i;:::-;;;;;;;:::i;3414:588:44:-;;;;;;:::i;:::-;;:::i;2359:113:72:-;;;:::i;7553:192:6:-;;;;;;:::i;:::-;;:::i;6584:91::-;;;:::i;5584:211:71:-;;;;;;:::i;:::-;;:::i;8480:400:10:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;1561:29::-;;;:::i;:::-;;;;;;;:::i;6681:688:6:-;;;:::i;:::-;;;;;;;;;;;;:::i;7375:115::-;;;:::i;37918:888::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2516:500:44:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;40682:211:6:-;;;:::i;4762:496:44:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2259:111:10:-;;;:::i;3337:117:71:-;;;;;;:::i;:::-;;:::i;24437:1437:6:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2127:108:72:-;;;;;;:::i;:::-;;:::i;2487:430:52:-;;;;;;:::i;:::-;;:::i;36409:886:6:-;;;;;;:::i;:::-;;:::i;1776:80:38:-;;;:::i;1879:79:35:-;;;:::i;2920:401:10:-;;;:::i;2332:85:71:-;;;:::i;9931:98:6:-;;;:::i;4650:2747:10:-;;;;;;:::i;:::-;;:::i;3438:429:35:-;;;;;;:::i;:::-;;:::i;3657:170:71:-;;;;;;:::i;:::-;;:::i;1862:101:38:-;;;:::i;4145:172:44:-;;;;;;:::i;:::-;;:::i;3022:103::-;;;:::i;4174:451:10:-;;;:::i;1313:753:72:-;;;;;;:::i;:::-;;:::i;14343:2489:6:-;;;;;;:::i;:::-;;:::i;2260:254:35:-;;;;;;:::i;:::-;;:::i;9345:117:6:-;;;:::i;4029:110:44:-;;;:::i;2138:81:71:-;2207:5;2200:12;;;;;;;;;;;;;-1:-1:-1;;2200:12:71;;;;;;;;;;;;;;;;;;;;;;;;;;2175:13;;2200:12;;2207:5;;2200:12;;;2207:5;2200:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2138:81;:::o;4172:164::-;4255:4;4271:37;4280:10;4292:7;4301:6;4271:8;:37::i;:::-;-1:-1:-1;4325:4:71;4172:164;;;;;:::o;9250:89:6:-;2156:21:52;:19;:21::i;:::-;9314:18:6::1;9325:6;9314:10;:18::i;:::-;9250:89:::0;:::o;3181:98:71:-;3260:12;;3181:98;:::o;3154:363:62:-;3257:11;3282:26;3322:27;3384:14;:12;:14::i;:::-;3383:15;3374:24;;3429;:22;:24::i;:::-;3408:45;;3485:25;:23;:25::i;:::-;3463:47;;3154:363;;;:::o;4323:433:44:-;4520:14;;4456:24;;-1:-1:-1;;;;;4506:29:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4506:29:44;;4496:39;;4545:19;4567:17;:15;:17::i;:::-;4545:39;;4600:9;4595:155;4619:7;:14;4615:1;:18;4595:155;;;4667:14;:37;4705:8;4715:7;4723:1;4715:10;;;;;;;;;;;;;;4727:11;4667:72;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4654:7;4662:1;4654:10;;;;;;;;;;;;;;;;;:85;4635:3;;4595:155;;;;4323:433;;;;:::o;2657:655:35:-;2785:4;2801:24;2828:29;2838:6;2846:10;2828:9;:29::i;:::-;2801:56;-1:-1:-1;2867:101:35;-1:-1:-1;;;;;2876:20:35;;:10;:20;;:50;;;2920:6;2900:16;:26;;2876:50;9174:3:53;2867:8:35;:101::i;:::-;2979:36;2989:6;2997:9;3008:6;2979:9;:36::i;:::-;-1:-1:-1;;;;;3030:20:35;;:10;:20;;;;:55;;-1:-1:-1;;;3054:31:35;;;3030:55;3026:258;;;3218:55;3227:6;3235:10;3266:6;3247:16;:25;3218:8;:55::i;:::-;-1:-1:-1;3301:4:35;;2657:655;-1:-1:-1;;;;2657:655:35:o;8764:259:6:-;2970:18:62;:16;:18::i;:::-;2156:21:52::1;:19;:21::i;:::-;8834:23:6::2;8852:4;8834:17;:23::i;:::-;8963:1;8947:13;:11;:13::i;:::-;:17;8943:74;;;8980:26;:24;:26::i;:::-;8764:259::o:0;3040:81:71:-;3105:9;;;;3040:81;:::o;3414:588:44:-;3512:80;3534:8;3521:10;:21;:48;;;;;899:4:43;3546:8:44;:23;;3521:48;4838:3:53;3512:8:44;:80::i;:::-;3769:18;3790:33;3803:1;3806;3809;3812;3815;3818;3821;3790:12;:33::i;:::-;3769:54;-1:-1:-1;3850:10:44;3833:163;3866:8;3862:1;:12;3833:163;;;3899:11;;;;:8;:11;;;;;;:23;;:21;:23::i;:::-;3895:91;;3947:11;;;;:8;:11;;;;;:24;;;3895:91;3876:3;;3833:163;;;;3414:588;;;:::o;2359:113:72:-;2419:7;2445:20;:18;:20::i;:::-;2438:27;;2359:113;:::o;7553:192:6:-;2156:21:52;:19;:21::i;:::-;2970:18:62::1;:16;:18::i;:::-;7698:40:6::2;7720:17;7698:21;:40::i;6584:91::-:0;6661:7;6584:91;:::o;5584:211:71:-;5697:10;5672:4;5718:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;5718:32:71;;;;;;;;;;5672:4;;5688:79;;5718:32;;:48;;5755:10;5718:36;:48::i;:::-;5688:8;:79::i;8480:400:10:-;8671:24;8709:22;8745:23;8800:73;8824:14;8840:15;8857;8800:23;:73::i;:::-;8793:80;;;;;;8480:400;;;;;;;:::o;1561:29::-;;;-1:-1:-1;;;;;1561:29:10;;:::o;6681:688:6:-;6764:19;6797:21;6832:37;6883:19;6916:18;6948:25;6998:16;7017:9;;6998:28;;7051:23;:8;:21;:23::i;:::-;7036:38;;7101:25;:8;:23;:25::i;:::-;7084:42;;7168:40;:8;:38;:40::i;:::-;7136:72;;7232:22;:8;:20;:22::i;:::-;7218:36;;7280:24;:8;:22;:24::i;:::-;7264:40;;7334:28;:8;:26;:28::i;:::-;7314:48;;6681:688;;;;;;;:::o;7375:115::-;7428:7;7454:29;:9;;:27;:29::i;37918:888::-;38178:13;38193:27;38232:55;38268:8;:15;38285:1;38232:35;:55::i;:::-;38298:255;38324:6;38344;38364:9;38387:8;38409:15;38438:25;38477:8;38499:11;38524:19;38298:12;:255::i;:::-;37918:888;;;;;;;;;;:::o;2516:500:44:-;2627:19;2660:22;2696:18;2728:21;2763:19;2796:22;2832:17;2874:58;899:4:43;2883:5:44;:19;6557:3:53;2874:8:44;:58::i;:::-;2943:14;2960:17;2971:5;2960:10;:17::i;:::-;2943:34;;2994:15;:6;:13;:15::i;:::-;2987:22;;;;-1:-1:-1;2987:22:44;;-1:-1:-1;2987:22:44;;-1:-1:-1;2987:22:44;-1:-1:-1;2987:22:44;-1:-1:-1;2987:22:44;;-1:-1:-1;2516:500:44;-1:-1:-1;;;2516:500:44:o;40682:211:6:-;40722:7;40836:50;40872:13;:11;:13::i;:::-;40836:27;40845:14;:12;:14::i;:::-;40861:1;40836:8;:27::i;:::-;:35;;:50::i;4762:496:44:-;4958:14;;4896:23;;-1:-1:-1;;;;;4945:28:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4945:28:44;;4935:38;;4983:19;5005:17;:15;:17::i;:::-;4983:39;;5033:35;;:::i;:::-;5083:9;5078:174;5102:7;:14;5098:1;:18;5078:174;;;5145:7;5153:1;5145:10;;;;;;;;;;;;;;5137:18;;5182:59;5202:5;:14;;;5218:11;5231:5;:9;;;5182:19;:59::i;:::-;5169:7;5177:1;5169:10;;;;;;;;;;;;;;;;;:72;5118:3;;5078:174;;;;4762:496;;;;;:::o;2259:111:10:-;2311:16;2346:17;:15;:17::i;3337:117:71:-;-1:-1:-1;;;;;3429:18:71;;3403:7;3429:18;;;;;;;;;;;3337:117;;;;:::o;24437:1437:6:-;24731:16;24749;24714:6;3703:68;3734:10;:8;:10::i;:::-;-1:-1:-1;;;;;3712:33:6;:10;:33;5392:3:53;3703:8:6;:68::i;:::-;3781:55;3800:11;:9;:11::i;:::-;3790:6;:21;10241:3:53;3781:8:6;:55::i;:::-;24777:23:::1;24791:8;24777:13;:23::i;:::-;24825:19;24858:27;24899:38:::0;24950:228:::1;24979:6;25003;25027:9;25054:8;25080:15;25113:25;25156:8;24950:11;:228::i;:::-;24811:367;;;;;;25284:36;25300:6;25308:11;25284:15;:36::i;:::-;25432:31;25452:10;25432:19;:31::i;:::-;25473:42;25493:21;25473:19;:42::i;:::-;25748:14;:12;:14::i;:::-;25744:71;;;25778:26;:24;:26::i;:::-;25833:10:::0;;;;-1:-1:-1;24437:1437:6;-1:-1:-1;;;;;;;;;;24437:1437:6:o;2127:108:72:-;-1:-1:-1;;;;;2214:14:72;2188:7;2214:14;;;:7;:14;;;;;;;2127:108::o;2487:430:52:-;2555:7;2876:22;2900:8;2859:50;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2849:61;;;;;;2842:68;;2487:430;;;:::o;36409:886:6:-;36669:14;36685:26;36723:55;36759:8;:15;36776:1;36723:35;:55::i;:::-;36789:253;36815:6;36835;36855:9;36878:8;36900:15;36929:25;36968:8;36990:11;37015:17;36789:12;:253::i;1776:80:38:-;1843:6;1776:80;:::o;1879:79:35:-;1945:6;1879:79;:::o;2920:401:10:-;2975:30;3020:25;3051:10;:8;:10::i;:::-;-1:-1:-1;;;;;3051:24:10;;3076:11;:9;:11::i;:::-;3051:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3051:37:10;;;;;;;;;;;;:::i;:::-;3017:71;;;;3259:55;3283:8;3292:1;3283:11;;;;;;;;;;;;;;3296:8;3305:1;3296:11;;;;;;;;;;;;;;3309:4;3259:23;:55::i;:::-;3218:96;;;3221:13;3235:1;3221:16;;;;;;;;;;;;;3239:13;3253:1;3239:16;;;;;;;;;;;;;;;;;3218:96;;;;;-1:-1:-1;2920:401:10;:::o;2332:85:71:-;2403:7;2396:14;;;;;;;;;;;;;-1:-1:-1;;2396:14:71;;;;;;;;;;;;;;;;;;;;;;;;;;2371:13;;2396:14;;2403:7;;2396:14;;;2403:7;2396:14;;;;;;;;;;;;;;;;;;;;;;;;9931:98:6;10008:14;;9931:98;:::o;4650:2747:10:-;4846:7;2970:18:62;:16;:18::i;:::-;4821:7:10::1;:14;;;3703:68:6;3734:10;:8;:10::i;3703:68::-;3781:55;3800:11;:9;:11::i;3781:55::-;4888:15:10::2;::::0;::::2;::::0;4907:7:::2;-1:-1:-1::0;;;;;4888:26:10;;::::2;::::0;::::2;;4865:20;4956:31;4888:26:::0;4956:14:::2;:31::i;:::-;4925:62;;4997:29;5029:32;5045:15;5044:16;5029:14;:32::i;:::-;4997:64;;5132:46;5141:14;5157:20;5132:8;:46::i;:::-;5115:63;;5206:48;5215:15;5232:21;5206:8;:48::i;:::-;5188:66;;5344:24;5370:22:::0;5394:23:::2;5421:119;5458:14;5486:15;5515;5421:23;:119::i;:::-;5343:197;;;;;;5609:316;5636:7;:23;;;5673:15;:50;;5708:15;5673:50;;;5691:14;5673:50;5737:15;:50;;5773:14;5737:50;;;5755:15;5737:50;5801:15;:50;;5836:15;5801:50;;;5819:14;5801:50;5865:15;:50;;5901:14;5865:50;;;5883:15;5865:50;5609:13;:316::i;:::-;5956:24;5940:12:::0;;:40:::2;::::0;::::2;;;;;;;5936:1455;;;6199:17;6219:44;6240:22;:20;:22::i;:::-;6219:14;::::0;::::2;::::0;;:20:::2;:44::i;:::-;6199:64;;6380:61;6389:29;6408:9;6389:7;:14;;;:18;;:29;;;;:::i;:::-;6420:20;6380:8;:61::i;:::-;6363:14;::::0;::::2;:78:::0;6456:17:::2;6476:107;6363:7:::0;6500:14;6516:15;6533:14;6549:15;6566:16;6476:14:::2;:107::i;:::-;6456:127;;6677:48;6692:9;6703:21;6677:14;:48::i;:::-;6670:55;;;;;;;;;;;;5936:1455;6773:47;6782:7;:14;;;6798:21;6773:8;:47::i;:::-;6756:14;::::0;::::2;:64:::0;6835:16:::2;6854:108;6756:7:::0;6879:14;6895:15;6912:14;6928:15;6945:16;6854:15:::2;:108::i;:::-;6835:127;;7058:44;7071:8;7081:20;7058:12;:44::i;:::-;7047:55;;7329:51;7344:35;:22;:20;:22::i;:::-;:33;:35::i;:::-;7329:8:::0;;:14:::2;:51::i;:::-;7322:58;;;;;;;;;3846:1:6;2998::62::1;4650:2747:10::0;;;;;:::o;3438:429:35:-;3523:4;3539:24;3566:30;3576:10;3588:7;3566:9;:30::i;:::-;3539:57;;3621:16;3611:6;:26;3607:232;;3653:32;3662:10;3674:7;3683:1;3653:8;:32::i;:::-;3607:232;;;3772:56;3781:10;3793:7;3821:6;3802:16;:25;3772:8;:56::i;:::-;-1:-1:-1;3856:4:35;;3438:429;-1:-1:-1;;;3438:429:35:o;3657:170:71:-;3743:4;3759:40;3769:10;3781:9;3792:6;3759:9;:40::i;1862:101:38:-;1910:11;1940:16;:14;:16::i;4145:172:44:-;4215:7;4241:14;:30;4272:8;4282;4292:17;:15;:17::i;:::-;4241:69;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3022:103::-;899:4:43;3022:103:44;:::o;4174:451:10:-;4228:7;4250:25;4281:10;:8;:10::i;:::-;-1:-1:-1;;;;;4281:24:10;;4306:11;:9;:11::i;:::-;4281:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4281:37:10;;;;;;;;;;;;:::i;:::-;4247:71;;;;4328:27;4358:17;:15;:17::i;:::-;4328:47;;4506:23;4520:8;4506:13;:23::i;:::-;4547:71;4579:8;4589:10;4600:1;4589:13;;;;;;;;;;;;;;4604:10;4615:1;4604:13;;;;;;;;;;;;;;4547:31;:71::i;:::-;4540:78;;;;4174:451;:::o;1313:753:72:-;1575:60;1603:8;1584:15;:27;;5606:3:53;1575:8:72;:60::i;:::-;-1:-1:-1;;;;;1662:14:72;;1646:13;1662:14;;;:7;:14;;;;;;;;;1717:68;;1662:14;;1646:13;1717:68;;1728:16;;1662:14;;1753:7;;1762:5;;1662:14;;1776:8;;1717:68;;:::i;:::-;;;;;;;;;;;;;1707:79;;;;;;1686:100;;1797:12;1812:28;1829:10;1812:16;:28::i;:::-;1797:43;;1851:14;1868:24;1878:4;1884:1;1887;1890;1868:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1868:24:72;;-1:-1:-1;;1868:24:72;;;-1:-1:-1;1902:79:72;;-1:-1:-1;;;;;;1912:20:72;;;;;;1911:43;;-1:-1:-1;;;;;;1938:15:72;;;;;;;1911:43;10474:3:53;1902:8:72;:79::i;:::-;-1:-1:-1;;;;;1992:14:72;;;;;;:7;:14;;;;;-1:-1:-1;2009:9:72;;1992:26;;2028:31;1992:14;2044:7;2053:5;2028:8;:31::i;:::-;1313:753;;;;;;;;;;;:::o;14343:2489:6:-;14699:26;14727:38;14652:6;3703:68;3734:10;:8;:10::i;3703:68::-;3781:55;3800:11;:9;:11::i;3781:55::-;2970:18:62::1;:16;:18::i;:::-;14874:20:6::2;14908:13;:11;:13::i;:::-;14904:1744;;14970:54;14988:6;14996;15004:9;15015:8;14970:17;:54::i;:::-;14942:82:::0;-1:-1:-1;14942:82:6;-1:-1:-1;15319:58:6::2;2239:3;15328:28:::0;::::2;;5338:3:53;15319:8:6;:58::i;:::-;15391:41;15415:1;2239:3;15391:15;:41::i;:::-;15446:55;15462:9;2239:3;15473:12;:27;15446:15;:55::i;:::-;15588:28;15606:9;15588:17;:28::i;:::-;15730:16;::::0;;15744:1:::2;15730:16:::0;;;;;::::2;::::0;;;;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;;::::0;-1:-1:-1;15730:16:6::2;15706:40;;14904:1744;;;15777:23;15791:8;15777:13;:23::i;:::-;15877:56;15891:15;15908:8;15917:1;15908:11;;;;;;;;;;;;;;15921:8;15930:1;15921:11;;;;;;;;;;;;;;15877:13;:56::i;:::-;15999:228;16028:6;16052;16076:9;16103:8;16129:15;16162:25;16205:8;15999:11;:228::i;:::-;15948:279:::0;;-1:-1:-1;15948:279:6;-1:-1:-1;15948:279:6;-1:-1:-1;16341:40:6::2;16357:9:::0;15948:279;16341:15:::2;:40::i;:::-;16468:28;16486:9;16468:17;:28::i;:::-;16595:42;16615:21;16595:19;:42::i;:::-;16799:26;:24;:26::i;:::-;2998:1:62;14343:2489:6::0;;;;;;;;;;;:::o;2260:254:35:-;2341:7;2383:10;:8;:10::i;:::-;-1:-1:-1;;;;;2364:30:35;;;;;;2360:148;;;-1:-1:-1;;;2410:18:35;;2360:148;2466:31;2482:5;2489:7;2466:15;:31::i;:::-;2459:38;;;;9345:117:6;9400:16;9435:20;:18;:20::i;4029:110:44:-;4124:8;4029:110;:::o;1157:239:64:-;1215:7;1319:5;;;1334:37;1343:6;;;;1215:7;1334:8;:37::i;:::-;1388:1;1157:239;-1:-1:-1;;;1157:239:64:o;4808:172:50:-;4892:7;4918:55;:4;4934:14;2092:2;4918:15;:55::i;5083:194::-;5178:7;5204:66;:4;5222:18;2155:2;5204:17;:66::i;948:166:66:-;1006:7;1025:37;1039:1;1034;:6;;4370:1:53;1025:8:66;:37::i;:::-;-1:-1:-1;1084:5:66;;;948:166::o;3094:280:63:-;3209:7;2126:10;3276:17;;3274:20;3258:36;;3287:6;3342:5;:13;;3354:1;3342:13;;;3350:1;3342:13;3334:22;;:32;;3312:55;;3094:280;-1:-1:-1;;;;3094:280:63:o;6887:269::-;-1:-1:-1;;;;;7074:18:63;;7072:21;7056:37;;;;7133:15;;7111:38;;6887:269::o;9345:213:71:-;-1:-1:-1;;;;;9468:18:71;;;;;;;-1:-1:-1;9468:18:71;;;;;;;;:27;;;;;;;;;;;;;;:36;;;9519:32;;;;;9468:36;;9519:32;:::i;:::-;;;;;;;;9345:213;;;:::o;2300:181:52:-;2355:16;2374:20;-1:-1:-1;;;;;;2386:7:52;;;2374:11;:20::i;:::-;2355:39;;2404:70;2413:33;2425:8;2435:10;2413:11;:33::i;:::-;8353:3:53;2404:8:52;:70::i;3793:358:62:-;3849:6;3845:232;;;3871:81;3898:24;:22;:24::i;:::-;3880:15;:42;8455:3:53;3871:8:62;:81::i;:::-;3845:232;;;3983:83;4010:25;:23;:25::i;:::-;3992:15;:43;9885:3:53;3983:8:62;:83::i;:::-;4087:7;:16;;-1:-1:-1;;4087:16:62;;;;;;;4118:26;;;;;;4087:16;;4118:26;:::i;:::-;;;;;;;;3793:358;:::o;4544:237::-;4591:4;4737:25;:23;:25::i;:::-;4719:15;:43;:55;;;-1:-1:-1;;4767:7:62;;;;4766:8;;4544:237::o;4894:108::-;4976:19;4894:108;:::o;5008:110::-;5091:20;5008:110;:::o;35641:115:6:-;35700:7;35726:23;:9;;:21;:23::i;866:101:53:-;935:9;930:34;;946:18;954:9;946:7;:18::i;:::-;866:101;;:::o;7068:559:71:-;7195:71;-1:-1:-1;;;;;7204:20:71;;;;8770:3:53;7195:8:71;:71::i;:::-;7276:72;-1:-1:-1;;;;;7285:23:71;;;;8838:3:53;7276:8:71;:72::i;:::-;7359:47;7380:6;7388:9;7399:6;7359:20;:47::i;:::-;-1:-1:-1;;;;;7437:17:71;;:9;:17;;;;;;;;;;;:68;;7459:6;9316:3:53;7437:21:71;:68::i;:::-;-1:-1:-1;;;;;7417:17:71;;;:9;:17;;;;;;;;;;;:88;;;;7538:20;;;;;;;:32;;7563:6;7538:24;:32::i;:::-;-1:-1:-1;;;;;7515:20:71;;;:9;:20;;;;;;;;;;;;:55;;;;7585:35;;;;;;;;;;7613:6;;7585:35;:::i;4220:98:62:-;4272:39;4281:14;:12;:14::i;:::-;8397:3:53;4272:8:62;:39::i;9029:158:6:-;9101:9;;:35;;9128:7;9101:26;:35::i;:::-;9089:9;:47;9151:29;;;;;;9172:7;;9151:29;:::i;35274:361::-;35348:9;;35371:24;35348:9;35371:22;:24::i;:::-;35367:262;;;35422:68;35447:42;35474:14;;35447:26;:42::i;:::-;35422:8;;:24;:68::i;:::-;35411:79;;35515:69;35542:41;35569:13;:11;:13::i;:::-;35542:26;:41::i;:::-;35515:8;;:26;:69::i;:::-;35598:9;:20;-1:-1:-1;35274:361:6:o;7270:786:46:-;7534:7;7992:40;:10;7534:7;7992:21;:40::i;:::-;7923:54;:15;2605:2;7923:27;:54::i;:::-;7852:56;:16;2668:2;7852:28;:56::i;:::-;7784:53;:14;2730:3;7784:26;:53::i;:::-;7714:55;:15;2794:3;7714:27;:55::i;:::-;7644;:15;2858:3;7644:27;:55::i;:::-;7572:57;:16;2923:3;7572:28;:57::i;:::-;:127;:197;:265;:336;:405;:460;;7270:786;-1:-1:-1;;;;;;;;7270:786:46:o;5583:129::-;5641:7;5667:38;:6;5641:7;5667:19;:38::i;2386:188:70:-;2447:7;2494:10;2506:12;2520:15;2537:13;:11;:13::i;:::-;2560:4;2483:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2473:94;;;;;;2466:101;;2386:188;:::o;7751:397:6:-;7827:87;2347:4;7836:17;:45;;5289:3:53;7827:8:6;:87::i;:::-;7924;2420:4;7933:17;:45;;5228:3:53;7924:8:6;:87::i;:::-;8034:9;;:49;;8065:17;8034:30;:49::i;:::-;8022:9;:61;8098:43;;;;;;8123:17;;8098:43;:::i;8886:1050:10:-;9313:16;;;9327:1;9313:16;;;9285:25;9313:16;;;;;9080:24;;;;;;9313:16;;;;;;;;;;;;-1:-1:-1;9313:16:10;9285:44;;9353:15;:50;;9388:15;9353:50;;;9371:14;9353:50;9339:8;9348:1;9339:11;;;;;;;;;;;;;:64;;;;;9427:15;:50;;9463:14;9427:50;;;9445:15;9427:50;9413:8;9422:1;9413:11;;;;;;;;;;;;;:64;;;;;9488:27;9518:17;:15;:17::i;:::-;9488:47;;9565:71;9597:8;9607:10;9618:1;9607:13;;;;;;;9565:71;9679:16;;;9693:1;9679:16;;;9647:29;9679:16;;;;;9546:90;;-1:-1:-1;9679:16:10;;;;;;;;;;;;-1:-1:-1;9679:16:10;9647:48;;9720:51;9742:10;9754:16;9720:21;:51::i;:::-;9705:66;;9799:15;:51;;9835:12;9848:1;9835:15;;;;;;;;;;;;;;9799:51;;;9817:12;9830:1;9817:15;;;;;;;;;;;;;;9799:51;9782:68;;9878:15;:51;;9914:12;9927:1;9914:15;;;;;;;;;;;;;;9878:51;;;9896:12;9909:1;9896:15;;;;;;;;;;;;;;9878:51;9860:69;;8886:1050;;;;;;;;;;:::o;2239:130:50:-;2298:6;2323:39;:4;2298:6;2323:16;:39::i;2453:135::-;2514:6;2539:42;:4;1902:2;2539:16;:42::i;2691:168::-;2767:7;2793:59;:4;1978:2;2793:17;:59::i;2942:130::-;3000:7;3026:39;:4;2034:2;3026:17;:39::i;3145:129::-;3205:4;3228:39;:4;2092:2;3228:15;:39::i;3341:143::-;3405:7;3431:46;:4;2155:2;3431:17;:46::i;810:131:59:-;888:46;902:1;897;:6;5002:3:53;888:8:59;:46::i;17652:2986:10:-;17940:19;17973:27;18014:38;18232:27;18262:17;:15;:17::i;:::-;18232:47;;18486:14;:12;:14::i;:::-;18482:1977;;;18822:29;18854:71;18886:8;18896:10;18907:1;18896:13;;;;;;;;;;;;;;18911:10;18922:1;18911:13;;;;;;;18854:71;18822:103;;18939:29;18971:56;18993:10;19005:21;18971;:56::i;:::-;18939:88;;19104:90;19118:15;19135:8;19144:1;19135:11;;;;;;;;;;;;;;19148:8;19157:1;19148:11;;;;;;;;;;;;;;19161:12;19174:1;19161:15;;;;;;;;;;;;;;19178:12;19191:1;19178:15;;;;;;;;;;;;;;19104:13;:90::i;:::-;19209:38;19225:21;19209:15;:38::i;:::-;19290:27;19298:8;19308;19290:7;:27::i;:::-;19262:55;;-1:-1:-1;19262:55:10;-1:-1:-1;19792:95:10;19830:21;19262:55;19866:13;:11;:13::i;:::-;19881:5;19792:37;:95::i;:::-;19775:14;:112;-1:-1:-1;18482:1977:10;;-1:-1:-1;18482:1977:10;;20146:27;20154:8;20164;20146:7;:27::i;:::-;20118:55;;-1:-1:-1;20118:55:10;-1:-1:-1;20294:52:10;20309:8;20118:55;20331:14;20294;:52::i;:::-;20377:71;20409:8;20419:10;20430:1;20419:13;;;;;;;20377:71;20360:14;:88;18482:1977;20614:16;;;20628:1;20614:16;;;;;;;;20589:11;;20602:10;;20614:16;20628:1;20614:16;;;;;;;;;;-1:-1:-1;20614:16:10;20581:50;;;;;;;17652:2986;;;;;;;;;;;:::o;43012:215:6:-;43104:46;43117:7;43125:1;43117:10;;;;;;;;;;;;;;43129:20;43144:4;43129:14;:20::i;:::-;43104:12;:46::i;:::-;43091:7;43099:1;43091:10;;;;;;;;;;;;;:59;;;;;43173:47;43186:7;43194:1;43186:10;;;;;;;;;;;;;;43198:21;43213:5;43198:14;:21::i;43173:47::-;43160:7;43168:1;43160:10;;;;;;;;;;;;;:60;;;;;43012:215;:::o;44479:6817::-;45142:10;45164:4;45142:27;45138:6152;;45456:28;;45438:12;;45464:4;;45456:28;;45438:12;;45475:8;;45456:28;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;45437:47;;;45702:7;45731:1;45726:3398;;;;49272:9;45726:3398;46182:4;46179:1;46176;46161:26;46256:1;46250:8;-1:-1:-1;;;;;;46221:151:6;-1:-1:-1;;;46540:159:6;;46509:2;;46796:16;46793:1;46790;46775:38;46848:16;46845:1;46838:27;46509:2;;48187;48181:4;48178:1;48163:27;48372:2;48366:4;48359:16;48780:2;48762:16;48758:25;48752:4;48746;48731:53;49102:2;49084:16;49080:25;49077:1;49070:36;45568:3745;49343:23;49357:8;49343:13;:23::i;:::-;49382:17;49401:29;49436:224;49461:6;49485;49509:9;49536:8;49562:15;49595:25;49638:8;49436:7;:224;;:::i;:::-;49381:279;;;;;49675:29;49691:12;49675:15;:29;;:::i;:::-;50185:19;;-1:-1:-1;;50572:23:6;;50612:24;;;50899:66;-1:-1:-1;;50861:16:6;;50833:150;-1:-1:-1;50181:28:6;-1:-1:-1;;51009:16:6;;51262:2;51252:13;;51009:16;51238:28;7503:106:44;7561:7;7587:15;;;:8;:15;;;;;;;7503:106::o;8128:679:46:-;8220:19;8253:22;8289:18;8321:21;8356:19;8389:22;8425:18;8483:25;8501:6;8483:17;:25::i;:::-;8468:40;;8536:24;8553:6;8536:16;:24::i;:::-;8518:42;;8584:24;8601:6;8584:16;:24::i;:::-;8570:38;;8635:23;8651:6;8635:15;:23::i;:::-;8618:40;;8683:25;8701:6;8683:17;:25::i;:::-;8668:40;;8736:24;8753:6;8736:16;:24::i;:::-;8718:42;;8783:17;8793:6;8783:9;:17::i;:::-;8770:30;;8128:679;;;;;;;;;:::o;1793:180:66:-;1851:7;1882:5;;;1897:51;1906:6;;;:20;;;1925:1;1920;1916;:5;;;;;;:10;1906:20;4467:1:53;1897:8:66;:51::i;2485:239:64:-;2547:7;2574:6;2566:15;;;;;;893:4;2616:7;;;;:1;:7;:1;2645:13;;;;;:20;2637:29;;;;;;2716:1;2704:9;:13;;;;;;;2485:239;-1:-1:-1;;;;2485:239:64:o;6747:251:44:-;6920:71;;-1:-1:-1;;;6920:71:44;;6895:6;;6920:14;;-1:-1:-1;;6920:71:44;;6954:8;;6964;;6974:11;;6987:3;;6920:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6913:78;6747:251;-1:-1:-1;;;;6747:251:44:o;2376:289:10:-;2499:16;;;2513:1;2499:16;;;2434;2499;;;;;2434;;;2499;2513:1;2499:16;;;;;;;;;;-1:-1:-1;2499:16:10;2462:53;;2548:21;2564:4;2548:15;:21::i;:::-;2525:17;2543:1;2525:20;;;;;;;;;;;;;:44;;;;;2602:22;2618:5;2602:15;:22::i;:::-;2579:17;2597:1;2579:20;;;;;;;;;;;;;;;;;:45;2641:17;-1:-1:-1;2376:289:10;:::o;42260:201:6:-;42346:42;42355:7;42363:1;42355:10;;;;;;;;;;;;;;42367:20;42382:4;42367:14;:20::i;:::-;42346:8;:42::i;:::-;42333:7;42341:1;42333:10;;;;;;;;;;;;;:55;;;;;42411:43;42420:7;42428:1;42420:10;;;;;;;;;;;;;;42432:21;42447:5;42432:14;:21::i;4016:104:35:-;4092:21;4098:6;4106;4092:5;:21::i;13225:2241:10:-;13512:7;13533:16;13563;13892:27;13922:17;:15;:17::i;:::-;13892:47;;14244:29;14276:71;14308:8;14318:10;14329:1;14318:13;;;;;;;14276:71;14244:103;;14357:29;14389:56;14411:10;14423:21;14389;:56::i;:::-;14357:88;;14510:90;14524:15;14541:8;14550:1;14541:11;;;;;;;14510:90;14611:38;14627:21;14611:15;:38::i;:::-;14661:20;14683:26;14713:27;14721:8;14731;14713:7;:27::i;:::-;14660:80;;;;15191:95;15229:21;15252:12;15266:13;:11;:13::i;:::-;15281:4;15191:37;:95::i;:::-;15174:14;:112;15442:16;;;15456:1;15442:16;;;;;;;;15417:12;;15431:9;;15442:16;15456:1;15442:16;;;;;;;;;;-1:-1:-1;15442:16:10;15409:50;;;;;;;;;;;13225:2241;;;;;;;;;;;:::o;43770:209:6:-;43860:44;43871:7;43879:1;43871:10;;;;;;;;;;;;;;43883:20;43898:4;43883:14;:20::i;:::-;43860:10;:44::i;:::-;43847:7;43855:1;43847:10;;;;;;;;;;;;;:57;;;;;43927:45;43938:7;43946:1;43938:10;;;;;;;;;;;;;;43950:21;43965:5;41632:135;41692:7;41718:6;:42;;41745:15;41718:42;;;-1:-1:-1;41727:15:6;;41632:135;-1:-1:-1;41632:135:6:o;41929:144::-;42009:7;42035:31;42044:6;42052:13;42035:8;:31::i;26068:1459:10:-;26292:9;;26315:24;26292:9;26315:22;:24::i;:::-;:58;;;;;26358:15;26343:12;:30;26315:58;26311:1210;;;26389:19;26411:95;26447:13;26462;26477;26492;26411:35;:95::i;:::-;26389:117;;26521:18;26542:215;26594:13;26625;26656;26687;26718:25;:8;:23;:25::i;:::-;26542:34;:215::i;:::-;26521:236;;26772:26;26801:22;:8;:20;:22::i;:::-;26772:51;;26837:43;26883:40;:8;:38;:40::i;:::-;26837:86;;26937:26;26966:220;27001:35;27054:18;27090:12;27120:11;27149:23;:8;:21;:23::i;:::-;26966:17;:220::i;:::-;26937:249;;27227:18;27205;:40;27201:310;;27328:43;:8;27352:18;27328:23;:43::i;:::-;27317:54;-1:-1:-1;27400:58:10;27317:54;27442:15;27400:41;:58::i;:::-;27476:9;:20;;;27389:69;-1:-1:-1;26311:1210:10;;;;;;26068:1459;;;;;;:::o;1862:617:64:-;1922:7;1959:5;;;1974:57;1983:6;;;:26;;;2008:1;2003;1993:7;:11;;;;1974:57;2046:12;2042:431;;2081:1;2074:8;;;;;2042:431;893:4;-1:-1:-1;;2439:11:64;;2438:19;;2461:1;2437:25;2430:32;;;;;7403:532:10;7715:7;7801:127;7829:21;7852:22;7876:11;:18;;;7896:14;7912:15;7801:27;:127::i;:::-;7794:134;7403:532;-1:-1:-1;;;;;;;7403:532:10:o;42665:154:6:-;42751:7;42777:35;42790:6;42798:13;42777:12;:35::i;7941:533:10:-;8254:7;8340:127;8368:21;8391:22;8415:11;:18;;;8435:14;8451:15;8340:27;:127::i;43429:150:6:-;43513:7;43539:33;43550:6;43558:13;43539:10;:33::i;4696:112:64:-;4750:7;893:4;4777:1;:7;4776:25;;4800:1;4776:25;;;-1:-1:-1;893:4:64;4789:7;;4696:112::o;2730:682::-;2790:7;2809:38;2818:6;;;4516:1:53;2809:8:64;:38::i;:::-;2862:6;2858:548;;-1:-1:-1;2891:1:64;2884:8;;2858:548;893:4;2943:7;;;;2964:51;;2943:1;:7;:1;2973:13;;;;;:20;4564:1:53;2964:8:64;:51::i;:::-;3389:1;3384;3372:9;:13;3371:19;;;;43985:488:6;44043:11;44440:10;:8;:10::i;:::-;-1:-1:-1;;;;;44440:24:6;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3224:1238:8:-;3370:7;4290:9;4301:10;4313:15;4330:10;4344:55;4369:8;4379:9;4390:8;4344:24;:55::i;:::-;4289:110;;;;;;;;4416:39;4436:1;4439:2;4443:7;4452:2;4416:19;:39::i;:::-;4409:46;3224:1238;-1:-1:-1;;;;;;;;3224:1238:8:o;3199:183:70:-;3276:7;3341:20;:18;:20::i;:::-;3363:10;3312:62;;;;;;;;;:::i;10813:1015:10:-;10955:7;10964:16;10992:30;11025:19;:8;:17;:19::i;:::-;10992:52;-1:-1:-1;11054:70:10;11071:30;11063:4;:38;;;;;;;;;5443:3:53;11054:8:10;:70::i;:::-;11135:26;11164:27;:8;:25;:27::i;:::-;11135:56;;11201;11237:9;:16;11255:1;11201:35;:56::i;:::-;11267:24;11281:9;11267:13;:24::i;:::-;11302:27;11332:17;:15;:17::i;:::-;11302:47;;11360:26;11389:72;11421:9;11432:10;11443:1;11432:13;;;;;;;11389:72;11360:101;;11678:20;11701:31;11710:18;11730:1;11701:8;:31::i;:::-;11743:14;:35;;;;-1:-1:-1;11743:35:10;11811:9;;-1:-1:-1;10813:1015:10;;-1:-1:-1;;;;;;;10813:1015:10:o;3900:110:35:-;3979:24;3985:9;3996:6;3979:5;:24::i;27812:172:10:-;;;;:::o;3885:149:71:-;-1:-1:-1;;;;;4000:18:71;;;3974:7;4000:18;;;-1:-1:-1;4000:18:71;;;;;;;;:27;;;;;;;;;;;;;3885:149::o;9468:298:6:-;9594:16;;;9608:1;9594:16;;;9529;9594;;;;;9529;;;9594;9608:1;9594:16;;;;;;;;;;-1:-1:-1;9594:16:6;9557:53;;9643:24;9662:4;9643:18;:24::i;:::-;9620:17;9638:1;9620:20;;;;;;;;;;;;;:47;;;;;9700:25;9719:5;9700:18;:25::i;1969:544:38:-;2057:4;1663:42;2078:10;:8;:10::i;:::-;-1:-1:-1;;;;;2078:29:38;;;;;2077:63;;;2112:28;2131:8;2112:18;:28::i;:::-;2073:434;;;2272:10;:8;:10::i;:::-;-1:-1:-1;;;;;2258:24:38;:10;:24;;-1:-1:-1;2251:31:38;;2073:434;2435:16;:14;:16::i;:::-;:61;;-1:-1:-1;;;2435:61:38;;-1:-1:-1;;;;;2435:27:38;;;;;;;:61;;2463:8;;2473:7;;2490:4;;2435:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1074:3172:53:-;-1:-1:-1;;;3588:3:53;3581:79;;;3799:66;3793:4;3786:80;3941:1;3935:4;3928:15;2210:2;2243:18;;;2336;;;2383;;;2215:4;2379:29;;;3057:2;3053:17;2195:18;;;;2288;;;;2284:29;;;;3040:1;3036:14;3025:26;;;;3021:50;;;;2999:73;;2994:3;2990:83;4008:4;4001:26;4234:3;;4224:14;1765:176:80;1842:7;1861:27;1875:1;1870;:6;;1878:9;1861:8;:27::i;:::-;-1:-1:-1;;1910:5:80;;;1765:176::o;2009:340:60:-;2068:6;2086:9;2098:28;2119:5;2098:13;:28::i;:::-;2086:40;;2187:18;2214:1;2209:2;:6;:78;;1324:6;2254:2;:33;2209:78;;;1324:6;2218:2;:33;2209:78;1259:4;2305:37;;;;-1:-1:-1;;;;2009:340:60:o;3594:171:50:-;3678:7;3704:54;:4;3721:13;3678:7;3704:16;:54::i;3878:180::-;3966:7;3992:59;:4;4009:15;1902:2;3992:16;:59::i;8603:131:63:-;8711:15;;8603:131::o;9370:237::-;2545:11;9563:25;;;;9562:37;;;9370:237::o;8941:::-;2386:11;9134:25;;;;9133:37;;;8941:237::o;11062:142::-;11171:14;2439:11;11163:34;;11062:142::o;3388:427:70:-;3790:9;;3765:44::o;3327:400:10:-;3502:16;;;3516:1;3502:16;;;3437;3502;;;;;3437;;;3502;3516:1;3502:16;;;;;;;;;;-1:-1:-1;3502:16:10;3465:53;;3552:50;3571:4;3577:10;3588:1;3577:13;;;;;;;;;;;;;;3592:9;3552:18;:50::i;:::-;3529:17;3547:1;3529:20;;;;;;;;;;;;;:73;;;;;3635:51;3654:5;3661:10;3672:1;3661:13;;;;;;;3635:51;3612:17;3630:1;3612:20;;;;;;;;;;;;;;;;;:74;3703:17;3327:400;-1:-1:-1;;;3327:400:10:o;12135:487:63:-;12209:6;12257:14;;;2386:11;12249:34;2846:11;12558:19;;:57;;12610:5;12558:57;;;-1:-1:-1;;12581:25:63;;;-1:-1:-1;;;12135:487:63:o;10534:142::-;10643:14;2280:11;10635:34;;10534:142::o;9730:143::-;9835:14;2126:10;9827:33;;;9826:40;;9730:143::o;11590:142::-;11699:14;-1:-1:-1;;;;;11691:34:63;;11590:142::o;22451:583:10:-;22744:16;22762:20;22784;22806:19;22829:98;22868:14;;22896:21;22829:25;:98::i;:::-;22743:184;;;;;;;;22965:62;22977:8;22987:12;23001;23015:11;22965;:62::i;:::-;22451:583;;;;;:::o;20644:592::-;20734:19;20755:27;20794:30;20827:19;:8;:17;:19::i;:::-;20794:52;-1:-1:-1;21009:53:10;21001:4;:61;;;;;;;;;20997:233;;;21106:47;21134:8;21144;21106:27;:47::i;:::-;21078:75;;-1:-1:-1;21078:75:10;-1:-1:-1;20997:233:10;;;21184:35;7850:3:53;21184:7:10;:35::i;:::-;20644:592;;;;;;:::o;11402:743:32:-;11588:21;11657:13;11653:486;;;11760:10;11773:57;11813:16;11773:33;:10;11790:15;11773:16;:33::i;:::-;:39;;:57::i;:::-;11760:70;-1:-1:-1;11860:18:32;:10;11760:70;11860:14;:18::i;:::-;11844:34;;11653:486;;;;12006:10;12019:61;12063:16;12019:35;:10;12038:15;12019:18;:35::i;:61::-;12006:74;-1:-1:-1;12110:18:32;:10;12006:74;12110:14;:18::i;:::-;12094:34;11402:743;-1:-1:-1;;;;;;11402:743:32:o;40186:308:6:-;40393:35;40402:8;40411:1;40402:11;;;;;;;;;;;;;;40415:9;40425:1;40415:12;;;;;;;;;;;;;;40393:8;:35;;:::i;:::-;40379:8;40388:1;40379:11;;;;;;;;;;;;;:49;;;;;40452:35;40461:8;40470:1;40461:11;;;;;;;;;;;;;;40474:9;40484:1;40474:12;;;;;;;40452:35;40438:8;40447:1;40438:11;;;;;;;;;;;;;:49;;;;;40186:308;;;:::o;2157:148:66:-;2219:7;2238:38;2247:6;;;4516:1:53;2238:8:66;:38::i;:::-;2297:1;2293;:5;;;;;;;2157:148;-1:-1:-1;;;2157:148:66:o;5816:144:46:-;5881:6;5906:47;:6;2923:3;5906:18;:47::i;6061:142::-;6125:6;6150:46;:6;2858:3;6150:18;:46::i;6306:142::-;6370:6;6395:46;:6;2794:3;6395:18;:46::i;6548:140::-;6611:6;6636:45;:6;2730:3;6636:18;:45::i;6791:143::-;6856:6;6881:46;:6;2668:2;6881:18;:46::i;7034:141::-;7098:6;7123:45;:6;2605:2;7123:18;:45::i;2671:141:10:-;2744:7;2770:10;:35;;2796:9;2770:35;;;-1:-1:-1;2783:10:10;;2671:141;-1:-1:-1;2671:141:10:o;8512:410:71:-;8587:68;-1:-1:-1;;;;;8596:21:71;;;;8968:3:53;8587:8:71;:68::i;:::-;8666:49;8687:7;8704:1;8708:6;8666:20;:49::i;:::-;-1:-1:-1;;;;;8747:18:71;;:9;:18;;;;;;;;;;;:67;;8770:6;9382:3:53;8747:22:71;:67::i;:::-;-1:-1:-1;;;;;8726:18:71;;:9;:18;;;;;;;;;;:88;8839:12;;:24;;8856:6;8839:16;:24::i;:::-;8824:12;:39;8878:37;;8904:1;;-1:-1:-1;;;;;8878:37:71;;;;;;;8908:6;;8878:37;:::i;:::-;;;;;;;;8512:410;;:::o;15472:581:10:-;15562:20;15584:26;15622:30;15655:19;:8;:17;:19::i;:::-;15622:52;-1:-1:-1;15819:57:10;15811:4;:65;;;;;;;;;15807:240;;;15920:50;15951:8;15961;15920:30;:50::i;15807:240::-;16001:35;6263:3:53;16001:7:10;:35::i;2311:232:66:-;2371:7;2390:38;2399:6;;;4516:1:53;2390:8:66;:38::i;:::-;2443:6;2439:98;;-1:-1:-1;2472:1:66;2465:8;;2439:98;2525:1;2520;2516;:5;2515:11;;;;;;2511:1;:15;2504:22;;;;2609:847:9;2787:6;3245:17;3265:130;3293:8;3315:17;3346:8;3368:17;3265:14;:130::i;:::-;3245:150;;3412:37;3439:9;3412:26;:37::i;3954:1459::-;4165:6;4849:17;4869:130;4897:8;4919:17;4950:8;4972:17;4869:14;:130::i;:::-;4849:150;-1:-1:-1;5009:22:9;5034:39;5047:25;:8;4849:150;5047:14;:25::i;:::-;5034:8;;:12;:39::i;:::-;5009:64;;5083:24;5110:42;5137:14;5110:26;:42::i;:::-;5369:37;;;;-1:-1:-1;;;;3954:1459:9;;;;;;;;:::o;5786:955:44:-;5999:7;6119:14;6136:88;6167:12;6181:11;6194:12;6208:15;6136:23;6147:11;6136:10;:23::i;:::-;:30;:88;;;:30;:88::i;:::-;6119:105;-1:-1:-1;2237:9:44;6481:15;:47;;;:71;;;6576:44;;6609:11;6576:44;;;6588:18;:11;:16;:18::i;:::-;6675:21;;;;:8;:21;;;;;:30;;;;-1:-1:-1;6675:21:44;5786:955;-1:-1:-1;;;;;;5786:955:44:o;4534:169:50:-;4617:7;4643:53;:4;4661:12;2034:2;4643:17;:53::i;4197:217::-;4303:7;4329:78;:4;4347:17;1978:2;4329:17;:78::i;8155:2546:8:-;8357:17;9922:75;9943:32;:9;2015:6;9943:17;:32::i;:::-;9931:8;:44;;5915:3:53;9922:8:8;:75::i;:::-;10183:18;10206:56;10220:41;:15;10242:18;10220:21;:41::i;:::-;10206:9;;:13;:56::i;:::-;10183:79;-1:-1:-1;10276:20:8;10299:60;10314:44;:16;10339:18;10314:24;:44::i;10299:60::-;10276:83;-1:-1:-1;10386:64:8;10425:24;:10;10440:8;10425:14;:24::i;:::-;10386:30;:12;10407:8;10386:20;:30::i;:64::-;10374:76;;8155:2546;;10471:71;10492:10;10480:9;:22;880:3:7;10471:8:8;:71::i;:::-;10615:79;10637:34;:10;2070:6;10637:18;:34::i;:::-;10624:9;:47;;5966:3:53;10615:8:8;:79::i;11052:2479::-;11255:16;12818:71;12839:10;12827:9;:22;880:3:7;12818:8:8;:71::i;:::-;12899:79;12921:34;:10;2070:6;12921:18;:34::i;:::-;12908:9;:47;;5966:3:53;12899:8:8;:79::i;:::-;13164:18;13187:56;13201:41;:15;13223:18;13201:21;:41::i;13187:56::-;13164:79;-1:-1:-1;13257:20:8;13280:60;13295:44;:16;13320:18;13295:24;:44::i;13280:60::-;13257:83;-1:-1:-1;13366:62:8;13400:27;13257:83;13417:9;13400:16;:27::i;:::-;13366;:10;13383:9;13366:16;:27::i;:62::-;13355:73;-1:-1:-1;13449:75:8;;-1:-1:-1;13470:32:8;;-1:-1:-1;13470:9:8;2015:6;13470:17;:32::i;:::-;13458:8;:44;;5915:3:53;13449:8:8;:75::i;4698:1119::-;4886:9;;;;5015:47;5034:27;:9;5052:8;5034:17;:27::i;:::-;893:4:64;;5015:18:8;:47::i;:::-;5011:51;;5076:14;5093:29;5113:8;5093;5102:1;5093:11;;;;;;;;;;;;;;:19;;:29;;;;:::i;:::-;5076:46;;5136:14;5153:30;5173:9;5153:8;5162:1;5153:11;;;;;;;;;;;;;;:19;;:30;;;;:::i;:::-;5136:47;-1:-1:-1;5202:18:8;:6;5136:47;5202:10;:18::i;:::-;5197:23;;5239:32;5259:8;5268:1;5259:11;;;;;;;;;;;;;;5239:8;5248:1;5239:11;;;;;;;:32;5234:37;;4698:1119;;5474:72;5536:9;5474:53;5517:9;5475:32;5495:8;5504:1;5495:11;;;;;;;;;;;;;;5475:8;5484:1;5475:11;;;;;;;:32;5474:42;;:53::i;:72::-;5464:82;;5556:12;5571:99;5661:8;5571:81;5642:9;5571:62;893:4:64;5614:1:8;:18;5572:32;5592:8;5601:1;5592:11;;;;;;;;;;;;;;5572:8;5581:1;5572:11;;;;;;;5571:99;5556:114;-1:-1:-1;5680:12:8;5695:68;5738:24;5753:8;;5738:14;:24::i;:::-;5696:32;5716:8;5725:1;5716:11;;;;;;;;;;;;;;5696:8;5705:1;5696:11;;;;;;;5695:68;5680:83;-1:-1:-1;5783:27:8;5680:83;5783:17;:7;5795:4;5783:11;:17::i;:::-;:21;;:27::i;:::-;5773:37;;4698:1119;;;;;;;;;:::o;6319:784::-;6517:17;;6568:27;:1;6576:18;6568:7;:27::i;:::-;6546:49;-1:-1:-1;6664:15:8;6682:43;6723:1;6683:30;:2;6694:18;6683:10;:30::i;6682:43::-;6664:61;-1:-1:-1;6821:16:8;6840:20;:7;6664:61;6840:11;:20::i;:::-;6821:39;;6870:17;6890:31;6909:8;6919:1;6890:18;:31::i;:::-;6870:51;-1:-1:-1;7007:17:8;7027;:2;6870:51;7027:6;:17::i;:::-;7007:37;-1:-1:-1;7066:30:8;7007:37;7084:11;7066:17;:30::i;:::-;7054:42;6319:784;-1:-1:-1;;;;;;;;;;6319:784:8:o;867:156:51:-;927:25;982:4;971:45;;;;;;;;;;;;:::i;1205:185::-;1273:26;1338:4;1327:56;;;;;;;;;;;;:::i;7898:294:71:-;7973:49;8002:1;8006:7;8015:6;7973:20;:49::i;:::-;8048:12;;:24;;8065:6;8048:16;:24::i;:::-;8033:12;:39;-1:-1:-1;;;;;8103:18:71;;:9;:18;;;;;;;;;;;:30;;8126:6;8103:22;:30::i;:::-;-1:-1:-1;;;;;8082:18:71;;:9;:18;;;;;;;;;;;:51;;;;8148:37;;8082:18;;:9;8148:37;;;;8178:6;;8148:37;:::i;9772:153:6:-;9844:7;9870:6;:48;;9900:18;9870:48;;;-1:-1:-1;9879:18:6;;9772:153;-1:-1:-1;9772:153:6:o;8154:279::-;8240:4;8288:51;-1:-1:-1;;;8288:11:6;:51::i;:::-;8276:8;:63;8275:151;;;-1:-1:-1;8369:56:6;-1:-1:-1;;;8369:11:6;:56::i;:::-;8357:68;;;;8154:279;-1:-1:-1;8154:279:6:o;13692:345:65:-;13737:6;13838:37;13851:1;13847;:5;4838:3:53;13838:8:65;:37::i;:::-;2964:13;13889:21;-1:-1:-1;13889:46:65;;;;-1:-1:-1;3019:13:65;13914:21;;13889:46;13885:146;;;1935:4;13958:9;13965:1;13958:6;:9::i;:::-;:18;;;;;;13951:25;;;;13885:146;14014:6;14018:1;14014:3;:6::i;:::-;14007:13;;;;7398:373:63;2386:11;7727:25;;;7726:37;;7583:18;;;7581:21;7565:37;;7704:60;7398:373;;;;;:::o;3733:363:10:-;3877:7;3915:10;:174;;4027:61;4067:9;4078;4027:39;:61::i;:::-;3915:174;;;3945:61;3985:9;3996;3945:39;:61::i;23867:914::-;24015:7;24036;24057;24078;24111:27;24140:30;24172:20;24194:19;24217:18;:16;:18::i;:::-;24110:125;;;;;;;;24331:19;24354:1;24331:24;24327:95;;;24379:1;;-1:-1:-1;24379:1:10;;-1:-1:-1;24385:12:10;;-1:-1:-1;24399:11:10;-1:-1:-1;24371:40:10;;-1:-1:-1;;24371:40:10;24327:95;24466:16;24484:20;24508:197;24552:17;24583:16;24613:13;:11;:13::i;:::-;24640:19;24673:22;24508:30;:197::i;:::-;24465:240;;-1:-1:-1;24465:240:10;-1:-1:-1;24748:12:10;;-1:-1:-1;24762:11:10;;-1:-1:-1;;;;;23867:914:10;;;;;;;;:::o;24787:434::-;24996:12;;24992:82;;25024:39;25040:12;25054:8;25024:15;:39::i;:::-;25130:16;;25126:89;;25162:42;25178:11;25191:12;25162:15;:42::i;21242:928::-;21393:7;21402:16;21845:19;21867:33;:8;:31;:33::i;:::-;21845:55;;22011:27;22041:80;22084:8;22094:11;22107:13;:11;:13::i;:::-;22041:42;:80::i;:::-;22139:11;;;;-1:-1:-1;21242:928:10;;-1:-1:-1;;;;21242:928:10:o;1647:209:64:-;1709:7;1746:5;;;1761:57;1770:6;;;:26;;;1795:1;1790;1780:7;:11;;;;1761:57;893:4;1836:7;:13;;12743:488:63;12817:6;12865:14;;;2545:11;12857:34;2901:11;13167:19;;:57;;13219:5;13167:57;;;-1:-1:-1;;13190:25:63;;;-1:-1:-1;;;12743:488:63:o;1353:121:80:-;1411:7;1437:30;1441:1;1444;4370::53;1437:3:80;:30::i;16059:528:10:-;16213:7;16222:16;16254:20;16277:36;:8;:34;:36::i;:::-;16254:59;;16424:26;16453:84;16499:8;16509:12;16523:13;:11;:13::i;:::-;16453:45;:84::i;1244:900:9:-;1419:7;1952:4;1985:152;2066:57;1952:4;2067:31;:8;2080:17;2067:12;:31::i;2066:57::-;1985;2025:16;1985:57;1986:8;1999:17;1986:12;:31::i;3387:1033:46:-;3588:7;3810:14;3853:17;3863:6;3853:9;:17::i;:::-;3834:16;:36;3810:61;;3881:22;3952:7;3933:16;:26;3906:24;3923:6;3906:16;:24::i;:::-;:53;3881:78;;3969:21;4037:7;4019:15;:25;3993:23;4009:6;3993:15;:23::i;:::-;:51;3969:75;;4054:22;4125:7;4106:16;:26;4079:24;4096:6;4079:16;:24::i;:::-;:53;4054:78;;4162:251;4184:16;4218:15;4251;4284:14;4316:16;4350:15;4383:16;4162:4;:251::i;1205:98:43:-;1257:7;1283:13;1287:5;1294:1;1283:3;:13::i;4752:269:63:-;2280:11;4939:18;;4937:21;4921:37;;;;4998:15;;4976:38;;4752:269::o;5795:::-;2439:11;5982:18;;5980:21;5964:37;;;;6041:15;;6019:38;;5795:269::o;7218:985:32:-;7290:7;7313:10;7309:49;;-1:-1:-1;7346:1:32;7339:8;;7309:49;7368:13;7384:24;7402:5;7384:17;:24::i;:::-;7368:40;;7498:1;7488:5;893:4:64;7462:5:32;:22;7461:32;;;;;;7452:5;:42;7451:48;;;;;;7443:56;;7564:1;7554:5;893:4:64;7528:5:32;:22;7527:32;;;;;;7518:5;:42;7517:48;;;;;;7509:56;;7630:1;7620:5;893:4:64;7594:5:32;:22;7593:32;;;;;;7584:5;:42;7583:48;;;;;;7575:56;;7696:1;7686:5;893:4:64;7660:5:32;:22;7659:32;;;;;;7650:5;:42;7649:48;;;;;;7641:56;;7762:1;7752:5;893:4:64;7726:5:32;:22;7725:32;;;;;;7716:5;:42;7715:48;;;;;;7707:56;;7828:1;7818:5;893:4:64;7792:5:32;:22;7791:32;;;;;;7782:5;:42;7781:48;;;;;;7773:56;;7894:1;7884:5;893:4:64;7858:5:32;:22;7857:32;;;;;;7848:5;:42;7847:48;;;;;;;-1:-1:-1;7993:20:32;8016;7847:48;;8016:13;:20::i;:::-;7993:43;-1:-1:-1;8070:33:32;8080:22;:5;8092:9;8080:11;:22::i;:::-;8070:5;;:9;:33::i;:::-;8054:12;:49;;:102;;;;-1:-1:-1;8123:33:32;8133:22;:5;8145:9;8133:11;:22::i;:::-;8123:5;;:9;:33::i;:::-;8107:12;:49;;8054:102;8046:127;;;;-1:-1:-1;;;8046:127:32;;;;;;;:::i;:::-;;;;;;;;19376:1714:65;1935:4;19646:11;19424:6;;-1:-1:-1;20056:10:65;;;;-1:-1:-1;;20031:10:65;;20030:21;20056:10;20029:38;;;;21082:1;20475;-1:-1:-1;20029:38:65;;;;20097:5;;;20096:16;;;20421:15;;;20420:26;;;20469:7;;;20456:20;;;20548:1;20494:15;;;20493:26;;;20542:7;;;20529:20;20621:1;20567:15;;;20566:26;;;20615:7;;;20602:20;20694:1;20640:15;;;20639:26;;;20688:7;;;20675:20;20767:2;20713:15;;;20712:26;;;20761:8;;;20748:21;20841:2;20787:15;;;20786:26;;;20835:8;;;20822:21;20915:2;20861:15;;;;20860:26;;;;20909:8;;;;20896:21;;;;21070:13;;;-1:-1:-1;;;19376:1714:65:o;14151:4959::-;14196:6;1935:4;14218:1;:10;14214:382;;;14558:26;14582:1;-1:-1:-1;14582:1:65;14562:21;;;;;14558:3;:26::i;:::-;14557:27;;14549:36;;;;14214:382;15921:10;15954:11;15949:16;;15945:114;;3214:56;15981:7;;;-1:-1:-1;3158:21:65;16039:9;15945:114;16078:11;16073:16;;16069:114;;3377:28;16105:7;;;-1:-1:-1;3322:20:65;16163:9;16069:114;16321:3;16334:8;;;;16314:10;3543:34;16469:7;;16465:82;;3543:34;2125:4;16497:10;;16496:17;;-1:-1:-1;3486:22:65;16527:9;16465:82;3672:27;16561:1;:7;16557:82;;3672:27;2125:4;16589:10;;16588:17;;-1:-1:-1;3615:22:65;16619:9;16557:82;3793:24;16653:1;:7;16649:82;;3793:24;2125:4;16681:10;;16680:17;;-1:-1:-1;3737:21:65;16711:9;16649:82;3911:22;16745:1;:7;16741:82;;3911:22;2125:4;16773:10;;16772:17;;-1:-1:-1;3855:21:65;16803:9;16741:82;4027:21;16837:1;:7;16833:82;;4027:21;2125:4;16865:10;;16864:17;;-1:-1:-1;3971:21:65;16895:9;16833:82;4142:21;16929:1;:7;16925:82;;4142:21;2125:4;16957:10;;;16956:17;;16987:9;16925:82;4257:21;17021:1;:7;17017:82;;4257:21;2125:4;17049:10;;17048:17;;-1:-1:-1;4201:20:65;17079:9;17017:82;4372:21;17113:1;:7;17109:82;;4372:21;2125:4;17141:10;;17140:17;;-1:-1:-1;4316:20:65;17171:9;17109:82;4489:21;17205:1;:8;17201:85;;4489:21;2125:4;17234:10;;17233:18;;-1:-1:-1;4432:20:65;17265:10;17201:85;4606:21;17300:1;:8;17296:85;;4606:21;2125:4;17329:10;;17328:18;;-1:-1:-1;4550:19:65;17360:10;17296:85;17883:8;2125:4;17921:1;:10;2125:4;;17896:1;:10;17895:21;17894:38;;;;;;;-1:-1:-1;17942:16:65;2125:4;17962:5;;;17961:16;;-1:-1:-1;18071:1:65;;2125:4;18286:15;;;18285:26;;-1:-1:-1;18340:1:65;18285:26;18334:7;18321:20;2125:4;18359:15;;;18358:26;;-1:-1:-1;18413:1:65;18358:26;18407:7;18394:20;2125:4;18432:15;;;18431:26;;-1:-1:-1;18486:1:65;18431:26;18480:7;18467:20;2125:4;18505:15;;;18504:26;;-1:-1:-1;18559:1:65;18504:26;18553:7;18540:20;2125:4;18578:15;;;18577:26;;-1:-1:-1;18632:2:65;18577:26;18626:8;18613:21;18806:1;18793:14;19100:3;19081:15;;;19080:23;;14151:4959;-1:-1:-1;;;;;;;14151:4959:65:o;13874:161:8:-;13973:7;13999:29;:9;14017:10;13999:17;:29::i;13623:159::-;13721:7;13747:28;:9;13765;13747:17;:28::i;25227:497:10:-;25431:10;;:61;;-1:-1:-1;;;25431:61:10;;25315:7;;;;;;;;-1:-1:-1;;;;;25431:10:10;;;;-1:-1:-1;;25431:61:10;;-1:-1:-1;;;;25431:61:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25506:10;;:64;;-1:-1:-1;;;25506:64:10;;-1:-1:-1;;;;;25506:10:10;;;;-1:-1:-1;;25506:64:10;;25525:44;;25506:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25584:10;;:55;;-1:-1:-1;;;25584:55:10;;-1:-1:-1;;;;;25584:10:10;;;;-1:-1:-1;;25584:55:10;;-1:-1:-1;;;;25584:55:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25653:10;;:54;;-1:-1:-1;;;25653:54:10;;-1:-1:-1;;;;;25653:10:10;;;;-1:-1:-1;;25653:54:10;;-1:-1:-1;;;;25653:54:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25410:307;;;;;;;;25227:497;;;;:::o;4825:2284:32:-;5061:7;5070;5804:17;5784:16;:37;5780:317;;-1:-1:-1;6081:1:32;;-1:-1:-1;6081:1:32;6073:13;;5780:317;6549:17;6569:96;6645:19;6570:65;6595:39;:16;6616:17;6595:20;:39::i;:::-;6570:16;;:24;:65::i;6569:96::-;6549:116;-1:-1:-1;6675:21:32;6699:68;6727:39;:16;6748:17;6727:20;:39::i;:::-;6699:19;;:27;:68::i;:::-;6675:92;-1:-1:-1;6777:19:32;6799:35;:16;6675:92;6799:20;:35::i;:::-;6777:57;-1:-1:-1;6844:14:32;6861:30;:9;6777:57;6861:17;:30::i;:::-;6844:47;-1:-1:-1;6950:16:32;6969:38;:22;6844:47;6969:30;:38::i;:::-;6950:57;-1:-1:-1;7017:20:32;7040;:6;6950:57;7040:10;:20::i;:::-;7079:8;;-1:-1:-1;7017:43:32;;-1:-1:-1;;;;;;4825:2284:32;;;;;;;;;:::o;2343:184:51:-;2417:19;2477:4;2466:54;;;;;;;;;;;;:::i;3047:1447:32:-;3205:16;4215;4234:29;:11;4254:8;4234:19;:29::i;:::-;4318:15;;4215:48;;-1:-1:-1;4274:27:32;;-1:-1:-1;;;;;4304:30:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4304:30:32;;4274:60;;4349:9;4344:116;4368:8;:15;4364:1;:19;4344:116;;;4420:29;4440:8;4420;4429:1;4420:11;;;;;;;:29;4404:10;4415:1;4404:13;;;;;;;;;;;;;;;;;:45;4385:3;;4344:116;;;-1:-1:-1;4477:10:32;3047:1447;-1:-1:-1;;;;;3047:1447:32:o;1691:1262::-;1853:16;2680;2699:28;:12;2718:8;2699:18;:28::i;:::-;2781:15;;2680:47;;-1:-1:-1;2738:26:32;;-1:-1:-1;;;;;2767:30:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2767:30:32;;2738:59;;2812:9;2807:113;2831:8;:15;2827:1;:19;2807:113;;;2882:27;2900:8;2882;2891:1;2882:11;;;;;;;;;;;;;;:17;;:27;;;;:::i;:::-;2867:9;2877:1;2867:12;;;;;;;;;;;;;;;;;:42;2848:3;;2807:113;;1418:123:43;1512:14;1511:23;;;1418:123::o;8791:1608:32:-;8856:7;893:4:64;8879:5:32;:23;8875:1518;;893:4:64;8932:38:32;893:4:64;8947:5:32;:22;8932:14;:38::i;:::-;8925:64;;-1:-1:-1;8918:71:32;;8875:1518;9032:2;9024:5;:10;9020:70;;;-1:-1:-1;1531:9:32;9054:21;;9020:70;9115:3;9107:5;:11;9103:61;;;-1:-1:-1;9145:4:32;9138:11;;9103:61;9189:3;9181:5;:11;9177:71;;;-1:-1:-1;1472:11:32;9212:21;;9177:71;9273:3;9265:5;:11;9261:61;;;-1:-1:-1;9303:4:32;9296:11;;9261:61;9347:3;9339:5;:11;9335:71;;;-1:-1:-1;1412:12:32;9370:21;;9335:71;9431:3;9423:5;:11;9419:61;;;-1:-1:-1;9461:4:32;9454:11;;9419:61;9505:3;9497:5;:11;9493:71;;;-1:-1:-1;1351:13:32;9528:21;;9493:71;9589:3;9581:5;:11;9577:61;;;-1:-1:-1;9619:4:32;9612:11;;9577:61;9663:3;9655:5;:11;9651:70;;;-1:-1:-1;1289:14:32;9686:20;;9651:70;9746:4;9738:5;:12;9734:62;;;-1:-1:-1;9777:4:32;9770:11;;9734:62;9821:4;9813:5;:12;9809:71;;;-1:-1:-1;1227:15:32;9845:20;;9809:71;9905:4;9897:5;:12;9893:62;;;-1:-1:-1;9936:4:32;9929:11;;9893:62;9980:4;9972:5;:12;9968:71;;;-1:-1:-1;1164:16:32;10004:20;;9968:71;10064:4;10056:5;:12;10052:62;;;-1:-1:-1;10095:4:32;10088:11;;10052:62;10139:4;10131:5;:12;10127:71;;;-1:-1:-1;1100:17:32;10163:20;;10127:71;10223:4;10215:5;:12;10211:62;;;-1:-1:-1;10254:4:32;10247:11;;10211:62;10298:4;10290:5;:12;10286:71;;;-1:-1:-1;1035:18:32;10322:20;;10286:71;-1:-1:-1;10377:5:32;10370:12;;10405:633;10461:9;-1:-1:-1;;;10486:13:32;;10482:74;;10521:3;10515:9;;;;;10543:2;10538:7;10482:74;10574:7;10569:1;:12;10565:72;;10603:2;10597:8;;;;;10624:2;10619:7;10565:72;10655:7;10650:1;:12;10646:72;;10684:2;10678:8;;;;;10705:2;10700:7;10646:72;10736:7;10731:1;:12;10727:71;;10765:2;10759:8;;;;;10786:1;10781:6;10727:71;10816:6;10811:1;:11;10807:69;;10844:1;10838:7;;;;;10864:1;10859:6;10807:69;10894:6;10889:1;:11;10885:69;;10922:1;10916:7;;;;;10942:1;10937:6;10885:69;10972:6;10967:1;:11;10963:69;;11020:1;11015:6;;10405:633;-1:-1:-1;10405:633:32:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;:::o;5:130::-;72:20;;97:33;72:20;97:33;:::i;3604:722::-;;3732:3;3725:4;3717:6;3713:17;3709:27;3699:2;;-1:-1;;3740:12;3699:2;3780:6;3774:13;3802:80;3817:64;3874:6;3817:64;:::i;:::-;3802:80;:::i;:::-;3910:21;;;3793:89;-1:-1;3954:4;3967:14;;;;3942:17;;;4056;;;4047:27;;;;4044:36;-1:-1;4041:2;;;4093:1;;4083:12;4041:2;4118:1;4103:217;4128:6;4125:1;4122:13;4103:217;;;9821:13;;4196:61;;4271:14;;;;4299;;;;4150:1;4143:9;4103:217;;;4107:14;;;;;3692:634;;;;:::o;4873:440::-;;4974:3;4967:4;4959:6;4955:17;4951:27;4941:2;;-1:-1;;4982:12;4941:2;5016:20;;-1:-1;;;;;42461:30;;42458:2;;;-1:-1;;42494:12;42458:2;5051:64;42635:4;-1:-1;;42567:9;42548:17;;42544:33;42625:15;5051:64;:::i;:::-;5042:73;;5135:6;5128:5;5121:21;5239:3;42635:4;5230:6;5163;5221:16;;5218:25;5215:2;;;5256:1;;5246:12;5215:2;46762:6;42635:4;5163:6;5159:17;42635:4;5197:5;5193:16;46739:30;46818:1;46800:16;;;42635:4;46800:16;46793:27;5197:5;4934:379;-1:-1;;4934:379::o;6184:158::-;6265:20;;48612:1;48602:12;;48592:2;;48628:1;;48618:12;6349:158;6430:20;;48727:1;48717:12;;48707:2;;48743:1;;48733:12;10017:241;;10121:2;10109:9;10100:7;10096:23;10092:32;10089:2;;;-1:-1;;10127:12;10089:2;85:6;72:20;97:33;124:5;97:33;:::i;10265:263::-;;10380:2;10368:9;10359:7;10355:23;10351:32;10348:2;;;-1:-1;;10386:12;10348:2;226:6;220:13;238:33;265:5;238:33;:::i;10535:366::-;;;10656:2;10644:9;10635:7;10631:23;10627:32;10624:2;;;-1:-1;;10662:12;10624:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;10714:63;-1:-1;10814:2;10853:22;;72:20;97:33;72:20;97:33;:::i;:::-;10822:63;;;;10618:283;;;;;:::o;10908:491::-;;;;11046:2;11034:9;11025:7;11021:23;11017:32;11014:2;;;-1:-1;;11052:12;11014:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;11104:63;-1:-1;11204:2;11243:22;;72:20;97:33;72:20;97:33;:::i;:::-;11008:391;;11212:63;;-1:-1;;;11312:2;11351:22;;;;9673:20;;11008:391::o;11406:991::-;;;;;;;;11610:3;11598:9;11589:7;11585:23;11581:33;11578:2;;;-1:-1;;11617:12;11578:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;11669:63;-1:-1;11769:2;11808:22;;72:20;97:33;72:20;97:33;:::i;:::-;11777:63;-1:-1;11877:2;11916:22;;9673:20;;-1:-1;11985:2;12024:22;;9673:20;;-1:-1;12093:3;12131:22;;9949:20;45619:4;45608:16;;49062:33;;49052:2;;-1:-1;;49099:12;49052:2;11572:825;;;;-1:-1;11572:825;;;;12102:61;12200:3;12240:22;;4667:20;;-1:-1;12309:3;12349:22;;;4667:20;;11572:825;-1:-1;;11572:825::o;12404:366::-;;;12525:2;12513:9;12504:7;12500:23;12496:32;12493:2;;;-1:-1;;12531:12;12493:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;12583:63;12683:2;12722:22;;;;9673:20;;-1:-1;;;12487:283::o;12777:825::-;;;;12992:2;12980:9;12971:7;12967:23;12963:32;12960:2;;;-1:-1;;12998:12;12960:2;13043:24;;-1:-1;;;;;13076:30;;;13073:2;;;-1:-1;;13109:12;13073:2;13227:6;13216:9;13212:22;;;453:3;446:4;438:6;434:17;430:27;420:2;;-1:-1;;461:12;420:2;501:6;495:13;523:96;538:80;611:6;538:80;:::i;523:96::-;625:16;661:6;654:5;647:21;691:4;;708:3;704:14;697:21;;691:4;683:6;679:17;813:3;691:4;;797:6;793:17;683:6;784:27;;781:36;778:2;;;-1:-1;;820:12;778:2;-1:-1;846:10;;840:233;865:6;862:1;859:13;840:233;;;5773:6;5767:13;5785:49;5828:5;5785:49;:::i;:::-;933:77;;887:1;880:9;;;;;1024:14;;;;1052;;840:233;;;-1:-1;13287:18;;13281:25;13129:115;;-1:-1;13281:25;-1:-1;;;13315:30;;;13312:2;;;-1:-1;;13348:12;13312:2;;13378:89;13459:7;13450:6;13439:9;13435:22;13378:89;:::i;:::-;13368:99;;;13504:2;13558:9;13554:22;9821:13;13512:74;;12954:648;;;;;:::o;13609:459::-;;13779:2;;13767:9;13758:7;13754:23;13750:32;13747:2;;;-1:-1;;13785:12;13747:2;13830:31;;-1:-1;;;;;13870:30;;13867:2;;;-1:-1;;13903:12;13867:2;14020:22;;1291:4;1279:17;;1275:27;-1:-1;1265:2;;-1:-1;;1306:12;1265:2;1353:6;1340:20;1375:121;1390:105;1488:6;1390:105;:::i;1375:121::-;1524:21;;;1581:14;;;;1556:17;;;1682:4;1670:17;;;1661:27;;;;1658:36;-1:-1;1655:2;;;-1:-1;;1697:12;1655:2;-1:-1;1723:10;;1717:247;1742:6;1739:1;1736:13;1717:247;;;1682:4;6820:9;6815:3;6811:19;6807:30;6804:2;;;-1:-1;;6840:12;6804:2;6868:20;1682:4;6868:20;:::i;:::-;6974:63;7033:3;7009:22;6974:63;:::i;:::-;6949:89;;7152:22;;;9673:20;7113:16;;;7106:75;1810:91;;1764:1;1757:9;;;;;1915:14;;;;1943;;;;1717:247;;;-1:-1;13923:129;;13741:327;-1:-1;;;;;;;;13741:327::o;14075:451::-;;14241:2;;14229:9;14220:7;14216:23;14212:32;14209:2;;;-1:-1;;14247:12;14209:2;14292:31;;-1:-1;;;;;14332:30;;14329:2;;;-1:-1;;14365:12;14329:2;14478:22;;2174:4;2162:17;;2158:27;-1:-1;2148:2;;-1:-1;;2189:12;2148:2;2236:6;2223:20;2258:117;2273:101;2367:6;2273:101;:::i;2258:117::-;2403:21;;;2460:14;;;;2435:17;;;2561:4;2549:17;;;2540:27;;;;2537:36;-1:-1;2534:2;;;-1:-1;;2576:12;2534:2;-1:-1;2602:10;;2596:243;2621:6;2618:1;2615:13;2596:243;;;2561:4;7368:9;7363:3;7359:19;7355:30;7352:2;;;-1:-1;;7388:12;7352:2;7416:20;2561:4;7416:20;:::i;:::-;7522:63;7581:3;7557:22;7522:63;:::i;:::-;7497:89;;7701:22;;;9673:20;7662:16;;;7655:75;7790:2;7844:22;;;9673:20;7805:16;;;7798:75;2689:87;;2643:1;2636:9;;;;;2790:14;;;;2818;;;;2596:243;;14533:235;;14634:2;14622:9;14613:7;14609:23;14605:32;14602:2;;;-1:-1;;14640:12;14602:2;4411:6;4398:20;4423:30;4447:5;4423:30;:::i;14775:257::-;;14887:2;14875:9;14866:7;14862:23;14858:32;14855:2;;;-1:-1;;14893:12;14855:2;4546:6;4540:13;4558:30;4582:5;4558:30;:::i;15039:1235::-;;;;;;;;15279:3;15267:9;15258:7;15254:23;15250:33;15247:2;;;-1:-1;;15286:12;15247:2;4680:6;4667:20;15338:63;;15438:2;;15481:9;15477:22;72:20;97:33;124:5;97:33;:::i;:::-;15446:63;-1:-1;15546:2;15585:22;;72:20;97:33;72:20;97:33;:::i;:::-;15554:63;-1:-1;15682:2;15667:18;;15654:32;-1:-1;;;;;15695:30;;;15692:2;;;-1:-1;;15728:12;15692:2;15819:6;15808:9;15804:22;;;2988:3;2981:4;2973:6;2969:17;2965:27;2955:2;;-1:-1;;2996:12;2955:2;3043:6;3030:20;3065:80;3080:64;3137:6;3080:64;:::i;3065:80::-;3151:16;3187:6;3180:5;3173:21;15438:2;3234:3;3230:14;3223:21;;15438:2;3209:6;3205:17;3339:3;15438:2;;3323:6;3319:17;3209:6;3310:27;;3307:36;3304:2;;;-1:-1;;3346:12;3304:2;-1:-1;3372:10;;3366:206;3391:6;3388:1;3385:13;3366:206;;;9673:20;;3459:50;;3413:1;3406:9;;;;;3523:14;;;;3551;;3366:206;;;-1:-1;15748:88;-1:-1;;;15873:3;15913:22;;9673:20;;-1:-1;15982:3;16022:22;;9673:20;;-1:-1;16119:3;16104:19;;16091:33;;-1:-1;16133:30;;;16130:2;;;-1:-1;;16166:12;16130:2;;;16196:62;16250:7;16241:6;16230:9;16226:22;16196:62;:::i;:::-;16186:72;;;15241:1033;;;;;;;;;;:::o;16281:239::-;;16384:2;16372:9;16363:7;16359:23;16355:32;16352:2;;;-1:-1;;16390:12;16352:2;4803:20;;-1:-1;;;;;;44799:78;;47913:34;;47903:2;;-1:-1;;47951:12;16839:291;;16968:2;16956:9;16947:7;16943:23;16939:32;16936:2;;;-1:-1;;16974:12;16936:2;5944:6;5938:13;5956:47;5997:5;5956:47;:::i;17137:427::-;;;17283:2;17271:9;17262:7;17258:23;17254:32;17251:2;;;-1:-1;;17289:12;17251:2;5944:6;5938:13;5956:47;5997:5;5956:47;:::i;:::-;17466:2;17516:22;;;;9821:13;17341:88;;9821:13;;-1:-1;;;17245:319::o;17869:556::-;;;18040:2;18028:9;18019:7;18015:23;18011:32;18008:2;;;-1:-1;;18046:12;18008:2;5944:6;5938:13;5956:47;5997:5;5956:47;:::i;:::-;18244:2;18229:18;;18223:25;18098:88;;-1:-1;;;;;;18257:30;;18254:2;;;-1:-1;;18290:12;18254:2;18320:89;18401:7;18392:6;18381:9;18377:22;18320:89;:::i;:::-;18310:99;;;18002:423;;;;;:::o;18866:269::-;;18984:2;18972:9;18963:7;18959:23;18955:32;18952:2;;;-1:-1;;18990:12;18952:2;19052:67;19111:7;19087:22;19052:67;:::i;19142:261::-;;19256:2;19244:9;19235:7;19231:23;19227:32;19224:2;;;-1:-1;;19262:12;19224:2;-1:-1;6591:13;;19218:185;-1:-1;19218:185::o;19410:637::-;;;;19578:2;19566:9;19557:7;19553:23;19549:32;19546:2;;;-1:-1;;19584:12;19546:2;19629:31;;-1:-1;;;;;19669:30;;;19666:2;;;-1:-1;;19702:12;19666:2;19798:6;19787:9;19783:22;;;8062:6;;8050:9;8045:3;8041:19;8037:32;8034:2;;;-1:-1;;8072:12;8034:2;8100:22;8062:6;8100:22;:::i;:::-;8091:31;;8204:63;8263:3;8239:22;8204:63;:::i;:::-;8186:16;8179:89;8365:65;8426:3;8332:2;8406:9;8402:22;8365:65;:::i;:::-;8332:2;8351:5;8347:16;8340:91;8529:65;8590:3;8496:2;8570:9;8566:22;8529:65;:::i;:::-;8496:2;8515:5;8511:16;8504:91;19578:2;8716:9;8712:22;9673:20;19578:2;8677:5;8673:16;8666:75;8804:3;8863:9;8859:22;4667:20;8804:3;8824:5;8820:16;8813:75;8960:3;9019:9;9015:22;9673:20;8960:3;8980:5;8976:16;8969:75;9139:49;9184:3;9105;9164:9;9160:22;9139:49;:::i;:::-;9105:3;9125:5;9121:16;9114:75;9282:49;9327:3;9248;9307:9;9303:22;9282:49;:::i;:::-;9248:3;9268:5;9264:16;9257:75;9425:3;;9414:9;9410:19;9397:33;19680:18;9442:6;9439:30;9436:2;;;-1:-1;;9472:12;9436:2;9519:58;9573:3;9564:6;9553:9;9549:22;9519:58;:::i;:::-;9499:18;;;9492:86;;;;-1:-1;9503:5;8332:2;19891:22;;9673:20;;-1:-1;8496:2;19999:22;;;9673:20;;19540:507;-1:-1;;;;;19540:507::o;20054:241::-;;20158:2;20146:9;20137:7;20133:23;20129:32;20126:2;;;-1:-1;;20164:12;20126:2;-1:-1;9673:20;;20120:175;-1:-1;20120:175::o;20572:366::-;;;20693:2;20681:9;20672:7;20668:23;20664:32;20661:2;;;-1:-1;;20699:12;20661:2;-1:-1;;9673:20;;;20851:2;20890:22;;;9673:20;;-1:-1;20655:283::o;20945:485::-;;;;21080:2;21068:9;21059:7;21055:23;21051:32;21048:2;;;-1:-1;;21086:12;21048:2;9686:6;9673:20;21138:63;;21238:2;21281:9;21277:22;9673:20;21246:63;;21346:2;21386:9;21382:22;4398:20;4423:30;4447:5;4423:30;:::i;:::-;21354:60;;;;21042:388;;;;;:::o;22667:690::-;;22860:5;43074:12;43747:6;43742:3;43735:19;43784:4;;43779:3;43775:14;22872:93;;43784:4;23036:5;42771:14;-1:-1;23075:260;23100:6;23097:1;23094:13;23075:260;;;23161:13;;23547:37;;21769:14;;;;43476;;;;23122:1;23115:9;23075:260;;;-1:-1;23341:10;;22791:566;-1:-1;;;;;22791:566::o;27911:387::-;23547:37;;;-1:-1;;;;;;44799:78;28162:2;28153:12;;23842:56;28262:11;;;28053:245::o;28305:291::-;;46762:6;46757:3;46752;46739:30;46800:16;;46793:27;;;46800:16;28449:147;-1:-1;28449:147::o;28603:659::-;-1:-1;;;26074:87;;26059:1;26180:11;;23547:37;;;;29114:12;;;23547:37;29225:12;;;28848:414::o;29269:222::-;-1:-1;;;;;45403:54;;;;21868:37;;29396:2;29381:18;;29367:124::o;29498:366::-;29673:2;29687:47;;;43074:12;;29658:18;;;43735:19;;;29498:366;;29673:2;42771:14;;;;43775;;;;29498:366;22349:257;22374:6;22371:1;22368:13;22349:257;;;22435:13;;23547:37;;43476:14;;;;21587;;;;22396:1;22389:9;22349:257;;;-1:-1;29740:114;;29644:220;-1:-1;;;;;;29644:220::o;29871:370::-;;30048:2;30069:17;30062:47;30123:108;30048:2;30037:9;30033:18;30217:6;30123:108;:::i;30248:629::-;;30503:2;30524:17;30517:47;30578:108;30503:2;30492:9;30488:18;30672:6;30578:108;:::i;:::-;30734:9;30728:4;30724:20;30719:2;30708:9;30704:18;30697:48;30759:108;30862:4;30853:6;30759:108;:::i;30884:210::-;44633:13;;44626:21;23430:34;;31005:2;30990:18;;30976:118::o;31101:432::-;44633:13;;44626:21;23430:34;;31436:2;31421:18;;23547:37;;;;31519:2;31504:18;;23547:37;31278:2;31263:18;;31249:284::o;31540:222::-;23547:37;;;31667:2;31652:18;;31638:124::o;31769:444::-;23547:37;;;-1:-1;;;;;45403:54;;;32116:2;32101:18;;21868:37;45403:54;32199:2;32184:18;;21868:37;31952:2;31937:18;;31923:290::o;32220:780::-;23547:37;;;-1:-1;;;;;45403:54;;;32652:2;32637:18;;21868:37;45403:54;;;;32735:2;32720:18;;21868:37;32818:2;32803:18;;23547:37;32901:3;32886:19;;23547:37;;;;-1:-1;32970:19;;23547:37;32487:3;32472:19;;32458:542::o;33007:668::-;23547:37;;;33411:2;33396:18;;23547:37;;;;33494:2;33479:18;;23547:37;;;;33577:2;33562:18;;23547:37;-1:-1;;;;;45403:54;33660:3;33645:19;;21868:37;-1:-1;33231:19;;33217:458::o;33682:548::-;23547:37;;;45619:4;45608:16;;;;34050:2;34035:18;;27864:35;34133:2;34118:18;;23547:37;34216:2;34201:18;;23547:37;33889:3;33874:19;;33860:370::o;35040:868::-;23547:37;;;35484:2;35469:18;;23547:37;;;;35565:2;35550:18;;23547:37;;;;35646:2;35631:18;;23547:37;;;;35727:3;35712:19;;23547:37;35809:3;35794:19;;23547:37;35893:3;35878:19;;23547:37;35323:3;35308:19;;35294:614::o;35915:760::-;23547:37;;;36333:2;36318:18;;23547:37;;;;36416:2;36401:18;;23547:37;;;;36499:2;36484:18;;23547:37;44633:13;44626:21;36576:3;36561:19;;23430:34;36660:3;36645:19;;23547:37;36172:3;36157:19;;36143:532::o;36682:550::-;23547:37;;;36910:2;36895:18;;45204:47;45245:5;45204:47;:::i;:::-;37127:2;37112:18;;24857:62;;;;37218:2;37203:18;23547:37;36881:351;;-1:-1;36881:351::o;37239:670::-;23547:37;;;37495:3;37480:19;;45204:47;45245:5;45204:47;:::i;:::-;46630:38;37713:2;37702:9;37698:18;24857:62;23577:5;37804:2;37793:9;37789:18;23547:37;23577:5;37895:2;37884:9;37880:18;23547:37;37466:443;;;;;;;:::o;37916:676::-;23547:37;;;26858:23;;38206:3;38191:19;;;45204:47;26858:23;45204:47;:::i;:::-;46630:38;38486:2;38475:9;38471:18;24857:62;;38486:2;27042:5;27038:16;27032:23;27117:14;38475:9;27117:14;23547:37;27117:14;27203:5;27199:16;27193:23;27278:14;38475:9;27278:14;23547:37;23577:5;38577:3;38566:9;38562:19;23547:37;38177:415;;;;;;:::o;38599:310::-;;38746:2;;38767:17;38760:47;25589:5;43074:12;43747:6;38746:2;38735:9;38731:18;43735:19;-1:-1;46907:101;46921:6;46918:1;46915:13;46907:101;;;46988:11;;;;;46982:18;46969:11;;;43775:14;46969:11;46962:39;46936:10;;46907:101;;;47023:6;47020:1;47017:13;47014:2;;;-1:-1;43775:14;47079:6;38735:9;47070:16;;47063:27;47014:2;-1:-1;42567:9;47340:14;-1:-1;;47336:28;25747:39;;;;43775:14;25747:39;;38717:192;-1:-1;;;38717:192::o;38916:416::-;39116:2;39130:47;;;26430:2;39101:18;;;43735:19;-1:-1;;;43775:14;;;26446:35;26500:12;;;39087:245::o;39568:481::-;;23577:5;23554:3;23547:37;39773:2;39891;39880:9;39876:18;39869:48;39931:108;39773:2;39762:9;39758:18;40025:6;39931:108;:::i;40056:444::-;23547:37;;;40403:2;40388:18;;23547:37;;;;40486:2;40471:18;;23547:37;40239:2;40224:18;;40210:290::o;40507:214::-;45619:4;45608:16;;;;27864:35;;40630:2;40615:18;;40601:120::o;40728:256::-;40790:2;40784:9;40816:17;;;40912:22;;;-1:-1;;;;;40876:34;;40873:62;40870:2;;;40948:1;;40938:12;40870:2;40790;40957:22;40768:216;;-1:-1;40768:216::o;40991:320::-;;-1:-1;;;;;41155:30;;41152:2;;;-1:-1;;41188:12;41152:2;-1:-1;41233:4;41221:17;;;41286:15;;41089:222::o;47377:105::-;47460:1;47453:5;47450:12;47440:2;;47466:9;47489:117;-1:-1;;;;;45403:54;;47548:35;;47538:2;;47597:1;;47587:12;47613:111;47694:5;44633:13;44626:21;47672:5;47669:32;47659:2;;47715:1;;47705:12;48299:108;48382:1;48375:5;48372:12;48362:2;;48398:1;;48388:12", "language": "Solidity", "natspec": {"kind": "dev", "methods": {"DOMAIN_SEPARATOR()": {"details": "See {IERC20Permit-DOMAIN_SEPARATOR}."}, "allowance(address,address)": {"details": "Override to grant the Vault infinite allowance, causing for Pool Tokens to not require approval. This is sound as the Vault already provides authorization mechanisms when initiation token transfers, which this contract inherits."}, "approve(address,uint256)": {"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."}, "balanceOf(address)": {"details": "See {IERC20-balanceOf}."}, "decimals()": {"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."}, "decreaseAllowance(address,uint256)": {"details": "Override to allow decreasing allowance by more than the current amount (setting it to zero)"}, "dirtyUninitializedOracleSamples(uint256,uint256)": {"details": "Manually dirty oracle sample storage slots with dummy data, to reduce the gas cost of the future swaps that will initialize them. This function is only useful before the oracle has been fully initialized. `endIndex` is non-inclusive."}, "enableOracle()": {"details": "Balancer Governance can always enable the Oracle, even if it was originally not enabled. This allows for Pools that unexpectedly drive much more volume and liquidity than expected to serve as Price Oracles. Note that the Oracle can only be enabled - it can never be disabled."}, "getActionId(bytes4)": {"details": "Returns the action identifier associated with the external function described by `selector`."}, "getInvariant()": {"details": "Returns the current value of the invariant."}, "getLargestSafeQueryWindow()": {"details": "Returns largest time window that can be safely queried, where 'safely' means the Oracle is guaranteed to be able to produce a result and not revert. If a query has a non-zero `ago` value, then `secs + ago` (the oldest point in time) must be smaller than this value for 'safe' queries."}, "getLatest(uint8)": {"details": "Returns latest sample of `variable`. Prices are represented as 18 decimal fixed point values."}, "getPastAccumulators((uint8,uint256)[])": {"details": "Returns the accumulators corresponding to each of `queries`."}, "getPausedState()": {"details": "Returns the current contract pause status, as well as the end times of the Pause Window and Buffer Period."}, "getRate()": {"details": "This function returns the appreciation of one BPT relative to the underlying tokens. This starts at 1 when the pool is created and grows over time"}, "getSample(uint256)": {"details": "Returns the raw data of the sample at `index`."}, "getTimeWeightedAverage((uint8,uint256,uint256)[])": {"details": "Returns the time average weighted price corresponding to each of `queries`. Prices are represented as 18 decimal fixed point values."}, "getTotalSamples()": {"details": "Returns the total number of samples."}, "getVirtualParameters()": {"details": "Returns virtual offsets a and b for reserves x and y respectively, as in (x+a)*(y+b)=L^2"}, "increaseAllowance(address,uint256)": {"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."}, "name()": {"details": "Returns the name of the token."}, "nonces(address)": {"details": "See {IERC20Permit-nonces}."}, "onExitPool(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Called by the Vault when a user calls `IVault.exitPool` to remove liquidity from this Pool. Returns how many tokens the Vault should deduct from the Pool's balances, as well as the amount of protocol fees the Pool owes to the Vault. The Vault will then take tokens from the Pool's balances and send them to `recipient`, as well as collect the reported amount in protocol fees, which the Pool should calculate based on `protocolSwapFeePercentage`. Protocol fees are charged on exit events to guarantee that users exiting the Pool have paid their share. `sender` is the account performing the exit (typically the pool shareholder), and `recipient` is the account to which the Vault will send the proceeds. `balances` contains the total token balances for each token the Pool registered in the Vault, in the same order that `IVault.getPoolTokens` would return. `lastChangeBlock` is the last block in which *any* of the Pool's registered tokens last changed its total balance. `userData` contains any pool-specific instructions needed to perform the calculations, such as the type of exit (e.g., proportional given an amount of pool shares, single-asset, multi-asset, etc.) Contracts implementing this function should check that the caller is indeed the Vault before performing any state-changing operations, such as burning pool shares."}, "onJoinPool(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Called by the Vault when a user calls `IVault.joinPool` to add liquidity to this Pool. Returns how many of each registered token the user should provide, as well as the amount of protocol fees the Pool owes to the Vault. The Vault will then take tokens from `sender` and add them to the Pool's balances, as well as collect the reported amount in protocol fees, which the pool should calculate based on `protocolSwapFeePercentage`. Protocol fees are reported and charged on join events so that the Pool is free of debt whenever new users join. `sender` is the account performing the join (from which tokens will be withdrawn), and `recipient` is the account designated to receive any benefits (typically pool shares). `balances` contains the total balances for each token the Pool registered in the Vault, in the same order that `IVault.getPoolTokens` would return. `lastChangeBlock` is the last block in which *any* of the Pool's registered tokens last changed its total balance. `userData` contains any pool-specific instructions needed to perform the calculations, such as the type of join (e.g., proportional given an amount of pool shares, single-asset, multi-asset, etc.) Contracts implementing this function should check that the caller is indeed the Vault before performing any state-changing operations, such as minting pool shares."}, "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {"details": "See {IERC20Permit-permit}."}, "queryExit(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Returns the amount of BPT that would be burned from `sender` if the `onExitPool` hook were called by the Vault with the same arguments, along with the number of tokens `recipient` would receive. This function is not meant to be called directly, but rather from a helper contract that fetches current Vault data, such as the protocol swap fee percentage and Pool balances. Like `IVault.queryBatchSwap`, this function is not view due to internal implementation details: the caller must explicitly use eth_call instead of eth_sendTransaction."}, "queryJoin(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Returns the amount of BPT that would be granted to `recipient` if the `onJoinPool` hook were called by the Vault with the same arguments, along with the number of tokens `sender` would have to supply. This function is not meant to be called directly, but rather from a helper contract that fetches current Vault data, such as the protocol swap fee percentage and Pool balances. Like `IVault.queryBatchSwap`, this function is not view due to internal implementation details: the caller must explicitly use eth_call instead of eth_sendTransaction."}, "symbol()": {"details": "Returns the symbol of the token, usually a shorter version of the name."}, "totalSupply()": {"details": "See {IERC20-totalSupply}."}, "transfer(address,uint256)": {"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."}, "transferFrom(address,address,uint256)": {"details": "Override to allow for 'infinite allowance' and let the token owner use `transferFrom` with no self-allowance"}}, "version": 1}, "offset": [1263, 27986], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x27F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x707DCD1E GT PUSH2 0x15C JUMPI DUP1 PUSH4 0x9D2C110C GT PUSH2 0xCE JUMPI DUP1 PUSH4 0xC0FF1A15 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xC0FF1A15 EQ PUSH2 0x55D JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x565 JUMPI DUP1 PUSH4 0xD5C096C4 EQ PUSH2 0x578 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x58B JUMPI DUP1 PUSH4 0xF89F27ED EQ PUSH2 0x59E JUMPI DUP1 PUSH4 0xFFD088EB EQ PUSH2 0x5A6 JUMPI PUSH2 0x27F JUMP JUMPDEST DUP1 PUSH4 0x9D2C110C EQ PUSH2 0x501 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x514 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x527 JUMPI DUP1 PUSH4 0xAAABADC5 EQ PUSH2 0x53A JUMPI DUP1 PUSH4 0xB10BE739 EQ PUSH2 0x542 JUMPI DUP1 PUSH4 0xB48B5B40 EQ PUSH2 0x555 JUMPI PUSH2 0x27F JUMP JUMPDEST DUP1 PUSH4 0x87EC6817 GT PUSH2 0x120 JUMPI DUP1 PUSH4 0x87EC6817 EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x4D9 JUMPI DUP1 PUSH4 0x8D928AF8 EQ PUSH2 0x4E1 JUMPI DUP1 PUSH4 0x8DD9F89D EQ PUSH2 0x4E9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4F1 JUMPI DUP1 PUSH4 0x9B02CDDE EQ PUSH2 0x4F9 JUMPI PUSH2 0x27F JUMP JUMPDEST DUP1 PUSH4 0x707DCD1E EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x46C JUMPI DUP1 PUSH4 0x74F3B009 EQ PUSH2 0x47F JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x4A0 JUMPI DUP1 PUSH4 0x851C1BB3 EQ PUSH2 0x4B3 JUMPI PUSH2 0x27F JUMP JUMPDEST DUP1 PUSH4 0x38E9922E GT PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x4A6B0B15 GT PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x4A6B0B15 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0x55C67628 EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0x6028BFD4 EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0x60D1507C EQ PUSH2 0x416 JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x6B843239 EQ PUSH2 0x444 JUMPI PUSH2 0x27F JUMP JUMPDEST DUP1 PUSH4 0x38E9922E EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0x38FFF2D0 EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0x3C4DD5BB EQ PUSH2 0x39C JUMPI DUP1 PUSH4 0x44BBDB55 EQ PUSH2 0x3BE JUMPI PUSH2 0x27F JUMP JUMPDEST DUP1 PUSH4 0x1DCCD830 GT PUSH2 0x247 JUMPI DUP1 PUSH4 0x1DCCD830 EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x292C914A EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x3331BC36 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x366 JUMPI PUSH2 0x27F JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x1C0DE051 EQ PUSH2 0x2EC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28C PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x4B72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B5 PUSH2 0x2B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x42BA JUMP JUMPDEST PUSH2 0x644 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x49C7 JUMP JUMPDEST PUSH2 0x2D5 PUSH2 0x2D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4528 JUMP JUMPDEST PUSH2 0x65B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DF PUSH2 0x66F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x49EA JUMP JUMPDEST PUSH2 0x2F4 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x49D2 JUMP JUMPDEST PUSH2 0x316 PUSH2 0x311 CALLDATASIZE PUSH1 0x4 PUSH2 0x446E JUMP JUMPDEST PUSH2 0x69E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x498F JUMP JUMPDEST PUSH2 0x2B5 PUSH2 0x331 CALLDATASIZE PUSH1 0x4 PUSH2 0x4205 JUMP JUMPDEST PUSH2 0x7C1 JUMP JUMPDEST PUSH2 0x2D5 PUSH2 0x835 JUMP JUMPDEST PUSH2 0x346 PUSH2 0x869 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x4C1A JUMP JUMPDEST PUSH2 0x2D5 PUSH2 0x361 CALLDATASIZE PUSH1 0x4 PUSH2 0x4861 JUMP JUMPDEST PUSH2 0x872 JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x8EA JUMP JUMPDEST PUSH2 0x2D5 PUSH2 0x37C CALLDATASIZE PUSH1 0x4 PUSH2 0x4849 JUMP JUMPDEST PUSH2 0x8F9 JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x912 JUMP JUMPDEST PUSH2 0x2B5 PUSH2 0x397 CALLDATASIZE PUSH1 0x4 PUSH2 0x42BA JUMP JUMPDEST PUSH2 0x936 JUMP JUMPDEST PUSH2 0x3AF PUSH2 0x3AA CALLDATASIZE PUSH1 0x4 PUSH2 0x4882 JUMP JUMPDEST PUSH2 0x971 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4C04 JUMP JUMPDEST PUSH2 0x3C6 PUSH2 0x990 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x4937 JUMP JUMPDEST PUSH2 0x3DB PUSH2 0x99F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4AC0 JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x9FA JUMP JUMPDEST PUSH2 0x408 PUSH2 0x403 CALLDATASIZE PUSH1 0x4 PUSH2 0x4560 JUMP JUMPDEST PUSH2 0xA07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP3 SWAP2 SWAP1 PUSH2 0x4BEB JUMP JUMPDEST PUSH2 0x429 PUSH2 0x424 CALLDATASIZE PUSH1 0x4 PUSH2 0x4849 JUMP JUMPDEST PUSH2 0xA38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4A90 JUMP JUMPDEST PUSH2 0x2DF PUSH2 0xA81 JUMP JUMPDEST PUSH2 0x457 PUSH2 0x452 CALLDATASIZE PUSH1 0x4 PUSH2 0x43B0 JUMP JUMPDEST PUSH2 0xAA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x494B JUMP JUMPDEST PUSH2 0x316 PUSH2 0xB5C JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x47A CALLDATASIZE PUSH1 0x4 PUSH2 0x4195 JUMP JUMPDEST PUSH2 0xB66 JUMP JUMPDEST PUSH2 0x492 PUSH2 0x48D CALLDATASIZE PUSH1 0x4 PUSH2 0x4560 JUMP JUMPDEST PUSH2 0xB85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP3 SWAP2 SWAP1 PUSH2 0x49A2 JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x4AE CALLDATASIZE PUSH1 0x4 PUSH2 0x4195 JUMP JUMPDEST PUSH2 0xC2A JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x4C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x465C JUMP JUMPDEST PUSH2 0xC45 JUMP JUMPDEST PUSH2 0x408 PUSH2 0x4D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x4560 JUMP JUMPDEST PUSH2 0xC97 JUMP JUMPDEST PUSH2 0x3C6 PUSH2 0xCBC JUMP JUMPDEST PUSH2 0x3C6 PUSH2 0xCE0 JUMP JUMPDEST PUSH2 0x316 PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x28C PUSH2 0xE04 JUMP JUMPDEST PUSH2 0x2DF PUSH2 0xE65 JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x50F CALLDATASIZE PUSH1 0x4 PUSH2 0x474E JUMP JUMPDEST PUSH2 0xE6B JUMP JUMPDEST PUSH2 0x2B5 PUSH2 0x522 CALLDATASIZE PUSH1 0x4 PUSH2 0x42BA JUMP JUMPDEST PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x2B5 PUSH2 0x535 CALLDATASIZE PUSH1 0x4 PUSH2 0x42BA JUMP JUMPDEST PUSH2 0x1071 JUMP JUMPDEST PUSH2 0x3C6 PUSH2 0x107E JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x550 CALLDATASIZE PUSH1 0x4 PUSH2 0x471B JUMP JUMPDEST PUSH2 0x1088 JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x111D JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x1123 JUMP JUMPDEST PUSH2 0x2D5 PUSH2 0x573 CALLDATASIZE PUSH1 0x4 PUSH2 0x4245 JUMP JUMPDEST PUSH2 0x1208 JUMP JUMPDEST PUSH2 0x492 PUSH2 0x586 CALLDATASIZE PUSH1 0x4 PUSH2 0x4560 JUMP JUMPDEST PUSH2 0x1351 JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x599 CALLDATASIZE PUSH1 0x4 PUSH2 0x41CD JUMP JUMPDEST PUSH2 0x1471 JUMP JUMPDEST PUSH2 0x316 PUSH2 0x14AE JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x63A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x60F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x63A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x61D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x651 CALLER DUP5 DUP5 PUSH2 0x1546 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x663 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0x66C DUP2 PUSH2 0x15DC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x682 PUSH2 0x165A JUMP JUMPDEST ISZERO SWAP3 POP PUSH2 0x68D PUSH2 0x1677 JUMP JUMPDEST SWAP2 POP PUSH2 0x697 PUSH2 0x169B JUMP JUMPDEST SWAP1 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x6B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6E1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH2 0x6EE PUSH2 0x16BF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x7BA JUMPI PUSH20 0x0 PUSH4 0x79EAEF82 PUSH1 0x8 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x724 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4B36 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x763 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x777 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x79B SWAP2 SWAP1 PUSH2 0x4736 JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7A7 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x6F3 JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7CE DUP6 CALLER PUSH2 0x1471 JUMP JUMPDEST SWAP1 POP PUSH2 0x7F2 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND EQ DUP1 PUSH2 0x7EA JUMPI POP DUP4 DUP3 LT ISZERO JUMPDEST PUSH2 0x19E PUSH2 0x16CC JUMP JUMPDEST PUSH2 0x7FD DUP6 DUP6 DUP6 PUSH2 0x16DE JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x818 JUMPI POP PUSH1 0x0 NOT DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x82A JUMPI PUSH2 0x82A DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x1546 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x83D PUSH2 0x17BE JUMP JUMPDEST PUSH2 0x845 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0x84F PUSH1 0x1 PUSH2 0x17D1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x859 PUSH2 0x66F JUMP JUMPDEST GT ISZERO PUSH2 0x867 JUMPI PUSH2 0x867 PUSH2 0x1811 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x88D DUP2 DUP4 LT DUP1 ISZERO PUSH2 0x886 JUMPI POP PUSH2 0x400 DUP3 GT ISZERO JUMPDEST PUSH1 0x64 PUSH2 0x16CC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A2 PUSH1 0x1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1859 JUMP JUMPDEST SWAP1 POP DUP3 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x8E4 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x8C6 SWAP1 PUSH2 0x18B9 JUMP JUMPDEST PUSH2 0x8DC JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE JUMPDEST PUSH1 0x1 ADD PUSH2 0x8A6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F4 PUSH2 0x18C5 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x901 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0x909 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0x66C DUP2 PUSH2 0x1962 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x651 SWAP2 DUP6 SWAP1 PUSH2 0x96C SWAP1 DUP7 PUSH2 0x14BF JUMP JUMPDEST PUSH2 0x1546 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x981 DUP7 DUP7 DUP7 PUSH2 0x19CB JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x9 SLOAD SWAP1 POP PUSH2 0x9B8 DUP2 PUSH2 0x1B06 JUMP JUMPDEST SWAP7 POP PUSH2 0x9C3 DUP2 PUSH2 0x1B12 JUMP JUMPDEST SWAP6 POP PUSH2 0x9CE DUP2 PUSH2 0x1B1F JUMP JUMPDEST SWAP5 POP PUSH2 0x9D9 DUP2 PUSH2 0x1B2C JUMP JUMPDEST SWAP4 POP PUSH2 0x9E4 DUP2 PUSH2 0x1B39 JUMP JUMPDEST SWAP3 POP PUSH2 0x9EF DUP2 PUSH2 0x1B46 JUMP JUMPDEST SWAP2 POP POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F4 PUSH1 0x9 SLOAD PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0xA17 DUP7 MLOAD PUSH1 0x2 PUSH2 0x1B53 JUMP JUMPDEST PUSH2 0xA2C DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x1B60 PUSH2 0x1CB1 PUSH2 0x1D2F JUMP JUMPDEST SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xA53 PUSH2 0x400 DUP10 LT PUSH2 0x13B PUSH2 0x16CC JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA5E DUP10 PUSH2 0x1E43 JUMP JUMPDEST SWAP1 POP PUSH2 0xA69 DUP2 PUSH2 0x1E55 JUMP JUMPDEST SWAP6 SWAP16 SWAP5 SWAP15 POP SWAP3 SWAP13 POP SWAP1 SWAP11 POP SWAP9 POP SWAP7 POP SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F4 PUSH2 0xA8E PUSH2 0x66F JUMP JUMPDEST PUSH2 0xAA0 PUSH2 0xA99 PUSH2 0x1123 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x1EB8 JUMP JUMPDEST SWAP1 PUSH2 0x1EDC JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0xABF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAE9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH2 0xAF6 PUSH2 0x16BF JUMP JUMPDEST SWAP1 POP PUSH2 0xB00 PUSH2 0x407F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xB54 JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xB18 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP PUSH2 0xB35 DUP3 PUSH1 0x0 ADD MLOAD DUP5 DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x1F1B JUMP JUMPDEST DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB41 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0xB03 JUMP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8F4 PUSH2 0x1FB4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP9 PUSH2 0xBAF PUSH2 0xB94 PUSH2 0xCE0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH1 0xCD PUSH2 0x16CC JUMP JUMPDEST PUSH2 0xBC4 PUSH2 0xBBA PUSH2 0x912 JUMP JUMPDEST DUP3 EQ PUSH2 0x1F4 PUSH2 0x16CC JUMP JUMPDEST PUSH2 0xBCD DUP8 PUSH2 0x2022 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH2 0xBE1 DUP14 DUP14 DUP14 DUP14 DUP14 DUP14 DUP14 PUSH2 0x1B60 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xBF1 DUP13 DUP5 PUSH2 0x2084 JUMP JUMPDEST PUSH2 0xBFA DUP3 PUSH2 0x1CB1 JUMP JUMPDEST PUSH2 0xC03 DUP2 PUSH2 0x1CB1 JUMP JUMPDEST PUSH2 0xC0B PUSH2 0x165A JUMP JUMPDEST ISZERO PUSH2 0xC18 JUMPI PUSH2 0xC18 PUSH2 0x1811 JUMP JUMPDEST SWAP1 SWAP13 SWAP1 SWAP12 POP SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC7A SWAP3 SWAP2 SWAP1 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0xCA7 DUP7 MLOAD PUSH1 0x2 PUSH2 0x1B53 JUMP JUMPDEST PUSH2 0xA2C DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x208E PUSH2 0x213F PUSH2 0x1D2F JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH2 0xD0F PUSH2 0xCE0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF94D4668 PUSH2 0xD25 PUSH2 0x912 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD41 SWAP2 SWAP1 PUSH2 0x49EA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD6D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xD95 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x42E5 JUMP JUMPDEST POP SWAP2 POP POP PUSH2 0xDCD DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xDA9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xDBE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH2 0x19CB JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xDDD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP5 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xDF1 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD SWAP2 SWAP1 SWAP2 MSTORE MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x63A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x60F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x63A JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE75 PUSH2 0x17BE JUMP JUMPDEST DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0xE85 PUSH2 0xB94 PUSH2 0xCE0 JUMP JUMPDEST PUSH2 0xE90 PUSH2 0xBBA PUSH2 0x912 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP PUSH1 0x0 PUSH2 0xED8 DUP3 PUSH2 0x219D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xEE6 DUP4 ISZERO PUSH2 0x219D JUMP JUMPDEST SWAP1 POP PUSH2 0xEF2 DUP8 DUP4 PUSH2 0x21F1 JUMP JUMPDEST SWAP7 POP PUSH2 0xEFE DUP7 DUP3 PUSH2 0x21F1 JUMP JUMPDEST SWAP6 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xF10 DUP11 DUP11 DUP9 PUSH2 0x19CB JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xF57 DUP12 PUSH1 0xA0 ADD MLOAD DUP8 PUSH2 0xF29 JUMPI DUP11 PUSH2 0xF2B JUMP JUMPDEST DUP12 JUMPDEST DUP9 PUSH2 0xF36 JUMPI DUP13 PUSH2 0xF38 JUMP JUMPDEST DUP12 JUMPDEST DUP10 PUSH2 0xF43 JUMPI DUP5 PUSH2 0xF45 JUMP JUMPDEST DUP6 JUMPDEST DUP11 PUSH2 0xF50 JUMPI DUP7 PUSH2 0xF52 JUMP JUMPDEST DUP6 JUMPDEST PUSH2 0x21FD JUMP JUMPDEST PUSH1 0x0 DUP12 MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xF66 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xFD6 JUMPI PUSH1 0x0 PUSH2 0xF84 PUSH2 0xF79 PUSH2 0x9FA JUMP JUMPDEST PUSH1 0x60 DUP15 ADD MLOAD SWAP1 PUSH2 0x22A7 JUMP JUMPDEST SWAP1 POP PUSH2 0xFA6 PUSH2 0xFA0 DUP3 DUP15 PUSH1 0x60 ADD MLOAD PUSH2 0x14F4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH2 0x21F1 JUMP JUMPDEST PUSH1 0x60 DUP14 ADD MSTORE PUSH1 0x0 PUSH2 0xFBB DUP14 DUP14 DUP14 DUP8 DUP8 DUP11 PUSH2 0x22EB JUMP JUMPDEST SWAP1 POP PUSH2 0xFC7 DUP2 DUP8 PUSH2 0x2309 JUMP JUMPDEST SWAP10 POP POP POP POP POP POP POP POP POP PUSH2 0x102B JUMP JUMPDEST PUSH2 0xFE4 DUP12 PUSH1 0x60 ADD MLOAD DUP6 PUSH2 0x21F1 JUMP JUMPDEST PUSH1 0x60 DUP13 ADD MSTORE PUSH1 0x0 PUSH2 0xFF9 DUP13 DUP13 DUP13 DUP7 DUP7 DUP10 PUSH2 0x2315 JUMP JUMPDEST SWAP1 POP PUSH2 0x1005 DUP2 DUP8 PUSH2 0x2328 JUMP JUMPDEST SWAP1 POP PUSH2 0x1021 PUSH2 0x101A PUSH2 0x1015 PUSH2 0x9FA JUMP JUMPDEST PUSH2 0x2334 JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x235A JUMP JUMPDEST SWAP9 POP POP POP POP POP POP POP POP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1040 CALLER DUP6 PUSH2 0x1471 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 LT PUSH2 0x105A JUMPI PUSH2 0x1055 CALLER DUP6 PUSH1 0x0 PUSH2 0x1546 JUMP JUMPDEST PUSH2 0x1067 JUMP JUMPDEST PUSH2 0x1067 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x1546 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x651 CALLER DUP5 DUP5 PUSH2 0x16DE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F4 PUSH2 0x23A5 JUMP JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0x397BEE0 PUSH1 0x8 DUP5 PUSH2 0x10AF PUSH2 0x16BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10CD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4AEA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x10F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x655 SWAP2 SWAP1 PUSH2 0x4736 JUMP JUMPDEST PUSH2 0x400 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x112F PUSH2 0xCE0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF94D4668 PUSH2 0x1145 PUSH2 0x912 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1161 SWAP2 SWAP1 PUSH2 0x49EA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x118D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x11B5 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x42E5 JUMP JUMPDEST POP SWAP2 POP POP PUSH1 0x60 PUSH2 0x11C3 PUSH2 0x1FB4 JUMP JUMPDEST SWAP1 POP PUSH2 0x11CE DUP3 PUSH2 0x2022 JUMP JUMPDEST PUSH2 0x1201 DUP3 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x11DF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x11F4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x241F JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1216 DUP5 TIMESTAMP GT ISZERO PUSH1 0xD1 PUSH2 0x16CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 SWAP3 SWAP2 PUSH2 0x126D SWAP2 PUSH32 0x0 SWAP2 DUP13 SWAP2 DUP13 SWAP2 DUP13 SWAP2 DUP9 SWAP2 DUP14 SWAP2 ADD PUSH2 0x4A12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1290 DUP3 PUSH2 0x2452 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x12B7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4A72 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP PUSH2 0x131B SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1313 JUMPI POP DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1F8 PUSH2 0x16CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP6 ADD SWAP1 SSTORE PUSH2 0x1344 DUP12 DUP12 DUP12 PUSH2 0x1546 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP9 PUSH2 0x1360 PUSH2 0xB94 PUSH2 0xCE0 JUMP JUMPDEST PUSH2 0x136B PUSH2 0xBBA PUSH2 0x912 JUMP JUMPDEST PUSH2 0x1373 PUSH2 0x17BE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x137D PUSH2 0x66F JUMP JUMPDEST PUSH2 0x13ED JUMPI PUSH2 0x138D DUP12 DUP12 DUP12 DUP9 PUSH2 0x246E JUMP JUMPDEST SWAP5 POP SWAP1 POP PUSH2 0x13A2 PUSH3 0xF4240 DUP3 LT ISZERO PUSH1 0xCC PUSH2 0x16CC JUMP JUMPDEST PUSH2 0x13B0 PUSH1 0x0 PUSH3 0xF4240 PUSH2 0x24FE JUMP JUMPDEST PUSH2 0x13BF DUP10 PUSH3 0xF4240 DUP4 SUB PUSH2 0x24FE JUMP JUMPDEST PUSH2 0x13C8 DUP5 PUSH2 0x213F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE SWAP1 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP3 POP PUSH2 0x145B JUMP JUMPDEST PUSH2 0x13F6 DUP9 PUSH2 0x2022 JUMP JUMPDEST PUSH2 0x1429 DUP8 DUP10 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1407 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP11 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x141C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2508 JUMP JUMPDEST PUSH2 0x1438 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH2 0x208E JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP SWAP1 POP PUSH2 0x1449 DUP10 DUP3 PUSH2 0x24FE JUMP JUMPDEST PUSH2 0x1452 DUP5 PUSH2 0x213F JUMP JUMPDEST PUSH2 0x145B DUP4 PUSH2 0x1CB1 JUMP JUMPDEST PUSH2 0x1463 PUSH2 0x1811 JUMP JUMPDEST POP POP SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x147B PUSH2 0xCE0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x149D JUMPI POP PUSH1 0x0 NOT PUSH2 0x655 JUMP JUMPDEST PUSH2 0x14A7 DUP4 DUP4 PUSH2 0x250D JUMP JUMPDEST SWAP1 POP PUSH2 0x655 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8F4 PUSH2 0x2538 JUMP JUMPDEST PUSH3 0x1DE20 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH2 0x14D1 DUP5 DUP3 LT ISZERO DUP4 PUSH2 0x16CC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14D1 DUP4 DUP4 PUSH1 0x55 PUSH2 0x150A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14D1 DUP4 DUP4 PUSH1 0x56 PUSH2 0x1531 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1504 DUP4 DUP4 GT ISZERO PUSH1 0x1 PUSH2 0x16CC JUMP JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 SHL NOT DUP5 AND DUP3 DUP5 PUSH2 0x1520 JUMPI PUSH1 0x0 PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND SWAP1 SHL OR SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 SHL NOT SWAP3 SWAP1 SWAP3 AND SWAP2 SHL OR SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x15A1 SWAP1 DUP6 SWAP1 PUSH2 0x49EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15C5 PUSH1 0x0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0xC45 JUMP JUMPDEST SWAP1 POP PUSH2 0x66C PUSH2 0x15D4 DUP3 CALLER PUSH2 0x2589 JUMP JUMPDEST PUSH2 0x191 PUSH2 0x16CC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x15FC JUMPI PUSH2 0x15F7 PUSH2 0x15ED PUSH2 0x1677 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x193 PUSH2 0x16CC JUMP JUMPDEST PUSH2 0x1611 JUMP JUMPDEST PUSH2 0x1611 PUSH2 0x1607 PUSH2 0x169B JUMP JUMPDEST TIMESTAMP LT PUSH2 0x1A9 PUSH2 0x16CC JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO ISZERO OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x9E3A5E37224532DEA67B89FACE185703738A228A6E8A23DEE546960180D3BE64 SWAP1 PUSH2 0x164F SWAP1 DUP4 SWAP1 PUSH2 0x49C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1664 PUSH2 0x169B JUMP JUMPDEST TIMESTAMP GT DUP1 PUSH2 0x8F4 JUMPI POP POP PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F4 PUSH1 0x9 SLOAD PUSH2 0x1B2C JUMP JUMPDEST DUP2 PUSH2 0x16DA JUMPI PUSH2 0x16DA DUP2 PUSH2 0x2672 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x16F5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO ISZERO PUSH2 0x198 PUSH2 0x16CC JUMP JUMPDEST PUSH2 0x170C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x199 PUSH2 0x16CC JUMP JUMPDEST PUSH2 0x1717 DUP4 DUP4 DUP4 PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x173D SWAP1 DUP3 PUSH2 0x1A0 PUSH2 0x26C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x176C SWAP1 DUP3 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x15A1 SWAP1 DUP6 SWAP1 PUSH2 0x49EA JUMP JUMPDEST PUSH2 0x867 PUSH2 0x17C9 PUSH2 0x165A JUMP JUMPDEST PUSH2 0x192 PUSH2 0x16CC JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x17DE SWAP1 DUP3 PUSH2 0x14D8 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD PUSH32 0x3E350B41E86A8E10F804ADE6D35340D620BE35569CC75AC943E8BB14AB80EAD1 SWAP1 PUSH2 0x164F SWAP1 DUP4 SWAP1 PUSH2 0x49C7 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x181D DUP2 PUSH2 0x1B39 JUMP JUMPDEST ISZERO PUSH2 0x66C JUMPI PUSH2 0x1837 PUSH2 0x1830 PUSH1 0xA SLOAD PUSH2 0x26DB JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x271B JUMP JUMPDEST SWAP1 POP PUSH2 0x1853 PUSH2 0x184C PUSH2 0x1847 PUSH2 0x66F JUMP JUMPDEST PUSH2 0x26DB JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x2728 JUMP JUMPDEST PUSH1 0x9 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1865 DUP3 DUP3 PUSH2 0x2736 JUMP JUMPDEST PUSH2 0x1870 DUP5 PUSH1 0x1F PUSH2 0x273A JUMP JUMPDEST PUSH2 0x187B DUP7 PUSH1 0x54 PUSH2 0x274B JUMP JUMPDEST PUSH2 0x1886 DUP9 PUSH1 0x6A PUSH2 0x273A JUMP JUMPDEST PUSH2 0x1891 DUP11 PUSH1 0x9F PUSH2 0x274B JUMP JUMPDEST PUSH2 0x189C DUP13 PUSH1 0xB5 PUSH2 0x273A JUMP JUMPDEST PUSH2 0x18A7 DUP15 PUSH1 0xEA PUSH2 0x274B JUMP JUMPDEST OR OR OR OR OR OR SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x655 DUP3 DUP3 PUSH2 0x2758 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x1932 PUSH2 0x2762 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1947 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4A46 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1975 PUSH5 0xE8D4A51000 DUP3 LT ISZERO PUSH1 0xCB PUSH2 0x16CC JUMP JUMPDEST PUSH2 0x198B PUSH8 0x16345785D8A0000 DUP3 GT ISZERO PUSH1 0xCA PUSH2 0x16CC JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1998 SWAP1 DUP3 PUSH2 0x14E6 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD PUSH32 0xA9BA3FFE0B6C366B81232CAAB38605A0699AD5398D6CCE76F91EE809E322DAFC SWAP1 PUSH2 0x164F SWAP1 DUP4 SWAP1 PUSH2 0x49EA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE PUSH1 0x0 SWAP4 DUP5 SWAP4 DUP5 SWAP4 SWAP1 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP5 PUSH2 0x19FE JUMPI DUP6 PUSH2 0x1A00 JUMP JUMPDEST DUP7 JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1A0D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP5 PUSH2 0x1A24 JUMPI DUP7 PUSH2 0x1A26 JUMP JUMPDEST DUP6 JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1A33 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x60 PUSH2 0x1A49 PUSH2 0x1FB4 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A5C DUP3 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x11DF JUMPI INVALID JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP4 SWAP9 POP SWAP1 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH2 0x1A8A DUP3 DUP8 PUSH2 0x2766 JUMP JUMPDEST SWAP1 POP DUP7 PUSH2 0x1AAB JUMPI DUP1 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1A9E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1AC1 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1AB8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP5 POP DUP7 PUSH2 0x1AE2 JUMPI DUP1 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1AD5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1AF8 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1AEF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP4 POP POP POP POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x655 DUP3 DUP3 PUSH2 0x27F4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x655 DUP3 PUSH1 0x16 PUSH2 0x27F4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x655 DUP3 PUSH1 0x2C PUSH2 0x2758 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x655 DUP3 PUSH1 0x4B PUSH2 0x281B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x655 DUP3 PUSH1 0x55 PUSH2 0x2823 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x655 DUP3 PUSH1 0x56 PUSH2 0x282D JUMP JUMPDEST PUSH2 0x16DA DUP2 DUP4 EQ PUSH1 0x67 PUSH2 0x16CC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x60 PUSH2 0x1B6F PUSH2 0x1FB4 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B79 PUSH2 0x165A JUMP JUMPDEST ISZERO PUSH2 0x1C4A JUMPI PUSH1 0x0 PUSH2 0x1BA6 DUP10 DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1B91 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x11F4 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x1BB4 DUP4 DUP4 PUSH2 0x2766 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C13 DUP10 DUP12 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1BC7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP13 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1BDC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1BF1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1C06 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x21FD JUMP JUMPDEST PUSH2 0x1C1C DUP3 PUSH2 0x283A JUMP JUMPDEST PUSH2 0x1C26 DUP11 DUP9 PUSH2 0x2867 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH2 0x1C3F DUP3 DUP8 PUSH2 0x1C38 PUSH2 0x66F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0xA SSTORE POP PUSH2 0x1C7B SWAP1 POP JUMP JUMPDEST PUSH2 0x1C54 DUP9 DUP7 PUSH2 0x2867 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x1C66 DUP9 DUP5 PUSH2 0x14F4 PUSH2 0x290B JUMP JUMPDEST PUSH2 0x1C77 DUP9 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x11DF JUMPI INVALID JUMPDEST PUSH1 0xA SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE DUP7 SWAP3 DUP7 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP8 POP SWAP8 POP SWAP8 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1CD8 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1CC1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1CD3 PUSH1 0x1 PUSH2 0x219D JUMP JUMPDEST PUSH2 0x299D JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1CE5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x1D13 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1D01 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1CD3 PUSH1 0x0 PUSH2 0x219D JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1D20 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x1DED JUMPI PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD PUSH2 0x1D53 SWAP3 SWAP2 SWAP1 PUSH2 0x490C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D90 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D95 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1DA4 JUMPI INVALID JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x43ADBAFB PUSH1 0xE0 SHL DUP2 EQ PUSH2 0x1DCF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x4 PUSH1 0x0 RETURNDATACOPY PUSH1 0x40 PUSH1 0x20 MSTORE PUSH1 0x24 RETURNDATASIZE SUB PUSH1 0x24 PUSH1 0x40 RETURNDATACOPY PUSH1 0x1C RETURNDATASIZE ADD PUSH1 0x0 RETURN JUMPDEST PUSH2 0x1DF6 DUP7 PUSH2 0x2022 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x1E0D DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1E1F DUP2 DUP5 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1F NOT DUP3 ADD DUP4 SWAP1 MSTORE PUSH4 0x43ADBAFB PUSH1 0x3F NOT DUP4 ADD MSTORE PUSH1 0x20 MUL PUSH1 0x23 NOT DUP3 ADD PUSH1 0x44 DUP3 ADD DUP2 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1E69 DUP9 PUSH2 0x29BD JUMP JUMPDEST SWAP7 POP PUSH2 0x1E74 DUP9 PUSH2 0x29CA JUMP JUMPDEST SWAP6 POP PUSH2 0x1E7F DUP9 PUSH2 0x29D7 JUMP JUMPDEST SWAP5 POP PUSH2 0x1E8A DUP9 PUSH2 0x29E4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E95 DUP9 PUSH2 0x29F1 JUMP JUMPDEST SWAP3 POP PUSH2 0x1EA0 DUP9 PUSH2 0x29FE JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAB DUP9 PUSH2 0x18B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP1 SWAP3 SWAP5 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL PUSH2 0x14D1 DUP5 ISZERO DUP1 PUSH2 0x1ED5 JUMPI POP DUP4 DUP6 DUP4 DUP2 PUSH2 0x1ED2 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH1 0x3 PUSH2 0x16CC JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1EE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 DUP2 MUL SWAP1 DUP5 DUP3 DUP2 PUSH2 0x1EFE JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1F09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP2 DUP2 PUSH2 0x1F12 JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x34171A85 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0x34171A85 SWAP1 PUSH2 0x1F5C SWAP1 PUSH1 0x8 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x4B0B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1F88 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FAC SWAP2 SWAP1 PUSH2 0x4736 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 DUP4 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH2 0x1FE2 PUSH1 0x1 PUSH2 0x2A0B JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1FEF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2005 PUSH1 0x0 PUSH2 0x2A0B JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2012 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2049 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2032 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2044 PUSH1 0x1 PUSH2 0x219D JUMP JUMPDEST PUSH2 0x1EB8 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2056 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x1D13 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2072 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2044 PUSH1 0x0 PUSH2 0x219D JUMP JUMPDEST PUSH2 0x16DA DUP3 DUP3 PUSH2 0x2A5F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x60 PUSH2 0x209D PUSH2 0x1FB4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x20B2 DUP10 DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1B91 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x20C0 DUP4 DUP4 PUSH2 0x2766 JUMP JUMPDEST SWAP1 POP PUSH2 0x20D3 DUP10 DUP12 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1BC7 JUMPI INVALID JUMPDEST PUSH2 0x20DC DUP3 PUSH2 0x283A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x20EA DUP13 DUP11 PUSH2 0x2B1B JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x2102 DUP5 DUP4 PUSH2 0x20FB PUSH2 0x66F JUMP JUMPDEST PUSH1 0x1 PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0xA SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE DUP5 SWAP3 DUP5 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP8 POP SWAP8 POP SWAP8 POP POP POP POP POP POP SWAP8 POP SWAP8 POP SWAP8 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2166 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x214F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2161 PUSH1 0x1 PUSH2 0x219D JUMP JUMPDEST PUSH2 0x2B55 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2173 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x1D13 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x218F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2161 PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x21CA JUMPI PUSH32 0x0 PUSH2 0x655 JUMP JUMPDEST POP PUSH32 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14D1 DUP4 DUP4 PUSH2 0x1EB8 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x2209 DUP2 PUSH2 0x1B39 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2214 JUMPI POP DUP6 NUMBER GT JUMPDEST ISZERO PUSH2 0x229F JUMPI PUSH1 0x0 PUSH2 0x2227 DUP7 DUP6 DUP8 DUP7 PUSH2 0x2B88 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2240 DUP8 DUP7 DUP9 DUP8 PUSH2 0x223B DUP9 PUSH2 0x1B12 JUMP JUMPDEST PUSH2 0x2BA2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x224D DUP5 PUSH2 0x1B2C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x225A DUP6 PUSH2 0x1B1F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2273 DUP3 DUP5 DUP8 DUP8 PUSH2 0x226E DUP12 PUSH2 0x1B06 JUMP JUMPDEST PUSH2 0x2BE8 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 EQ PUSH2 0x1344 JUMPI PUSH2 0x2286 DUP7 DUP3 PUSH2 0x2C3F JUMP JUMPDEST SWAP6 POP PUSH2 0x2292 DUP7 TIMESTAMP PUSH2 0x2C4D JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE SWAP6 POP POP POP POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL PUSH2 0x22C1 DUP5 ISZERO DUP1 PUSH2 0x1ED5 JUMPI POP DUP4 DUP6 DUP4 DUP2 PUSH2 0x1ED2 JUMPI INVALID JUMPDEST DUP1 PUSH2 0x22D0 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x655 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH1 0x0 NOT DUP3 ADD JUMPDEST DIV PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x655 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22FE DUP7 DUP7 DUP10 PUSH1 0x60 ADD MLOAD DUP8 DUP8 PUSH2 0x2C5B JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14D1 DUP4 DUP4 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22FE DUP7 DUP7 DUP10 PUSH1 0x60 ADD MLOAD DUP8 DUP8 PUSH2 0x2CFF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14D1 DUP4 DUP4 PUSH2 0x2B55 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 LT PUSH2 0x234C JUMPI PUSH1 0x0 PUSH2 0x655 JUMP JUMPDEST POP PUSH8 0xDE0B6B3A7640000 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2369 DUP3 ISZERO ISZERO PUSH1 0x4 PUSH2 0x16CC JUMP JUMPDEST DUP3 PUSH2 0x2376 JUMPI POP PUSH1 0x0 PUSH2 0x655 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 DUP2 MUL SWAP1 PUSH2 0x2399 SWAP1 DUP6 DUP4 DUP2 PUSH2 0x2390 JUMPI INVALID JUMPDEST DIV EQ PUSH1 0x5 PUSH2 0x16CC JUMP JUMPDEST DUP3 PUSH1 0x1 DUP3 SUB DUP2 PUSH2 0x22DF JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH2 0x23AF PUSH2 0xCE0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAAABADC5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x23E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x23FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8F4 SWAP2 SWAP1 PUSH2 0x41B1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2432 DUP9 DUP9 DUP9 PUSH2 0x2D9E JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH2 0x2446 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2F18 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x245C PUSH2 0x18C5 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC7A SWAP3 SWAP2 SWAP1 PUSH2 0x491C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x247D DUP5 PUSH2 0x2F8C JUMP JUMPDEST SWAP1 POP PUSH2 0x2498 PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2490 JUMPI INVALID JUMPDEST EQ PUSH1 0xCE PUSH2 0x16CC JUMP JUMPDEST PUSH1 0x60 PUSH2 0x24A3 DUP6 PUSH2 0x2FA2 JUMP JUMPDEST SWAP1 POP PUSH2 0x24B1 DUP2 MLOAD PUSH1 0x2 PUSH2 0x1B53 JUMP JUMPDEST PUSH2 0x24BA DUP2 PUSH2 0x2022 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x24C4 PUSH2 0x1FB4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x24D9 DUP4 DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1B91 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x24E8 DUP3 PUSH1 0x2 PUSH2 0x1EB8 JUMP JUMPDEST PUSH1 0xA SWAP3 SWAP1 SWAP3 SSTORE POP SWAP10 SWAP2 SWAP9 POP SWAP1 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x16DA DUP3 DUP3 PUSH2 0x2FB8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 DUP4 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH2 0x2566 PUSH1 0x1 PUSH2 0x3046 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2573 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2005 PUSH1 0x0 PUSH2 0x3046 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xBA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1B PUSH2 0x25A8 PUSH2 0xCBC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x25C3 JUMPI POP PUSH2 0x25C3 DUP4 PUSH2 0x309A JUMP JUMPDEST ISZERO PUSH2 0x25EB JUMPI PUSH2 0x25D0 PUSH2 0xCBC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP PUSH2 0x655 JUMP JUMPDEST PUSH2 0x25F3 PUSH2 0x23A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9BE2A884 DUP5 DUP5 ADDRESS PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2622 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x49F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x263A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x264E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14A7 SWAP2 SWAP1 PUSH2 0x4544 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH7 0x42414C23000030 PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD SWAP1 SWAP5 ADD PUSH1 0x10 SHL SWAP4 SWAP1 SWAP4 ADD ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x26D4 DUP5 DUP5 GT ISZERO DUP4 PUSH2 0x16CC JUMP JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x26E7 DUP4 PUSH2 0x30CC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 SGT PUSH2 0x2700 JUMPI PUSH6 0x2D79883D2000 DUP3 SUB PUSH2 0x270A JUMP JUMPDEST PUSH6 0x2D79883D2000 DUP3 ADD JUMPDEST PUSH6 0x5AF3107A4000 SWAP1 SDIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14D1 DUP4 DUP4 DUP4 PUSH2 0x3130 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14D1 DUP4 DUP4 PUSH1 0x16 PUSH2 0x3130 JUMP JUMPDEST SHL SWAP1 JUMP JUMPDEST PUSH7 0x1FFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND SWAP1 SHL SWAP1 JUMP JUMPDEST PUSH3 0x3FFFFF SWAP2 SWAP1 SWAP2 AND SWAP1 SHL SWAP1 JUMP JUMPDEST SHR PUSH4 0x7FFFFFFF AND SWAP1 JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 DUP4 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH2 0x27AA PUSH1 0x1 DUP6 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x279C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH2 0x3147 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x27B7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x27D5 PUSH1 0x0 DUP6 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x279C JUMPI INVALID JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x27E2 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR PUSH3 0x3FFFFF AND PUSH3 0x1FFFFF DUP2 SGT PUSH2 0x280E JUMPI DUP1 PUSH2 0x1FAC JUMP JUMPDEST PUSH3 0x3FFFFF NOT OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST SHR PUSH2 0x3FF AND SWAP1 JUMP JUMPDEST SHR PUSH1 0x1 SWAP1 DUP2 AND EQ SWAP1 JUMP JUMPDEST SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x284C PUSH1 0xA SLOAD DUP7 PUSH2 0x3167 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH2 0x2860 DUP5 DUP5 DUP5 DUP5 PUSH2 0x31D0 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x2876 DUP5 PUSH2 0x2F8C JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2886 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x28A0 JUMPI PUSH2 0x2896 DUP6 DUP6 PUSH2 0x31F0 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH2 0x28AB JUMP JUMPDEST PUSH2 0x28AB PUSH2 0x150 PUSH2 0x2672 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO PUSH2 0x28E5 JUMPI PUSH1 0x0 PUSH2 0x28D1 DUP5 PUSH2 0x28CB DUP9 DUP9 PUSH2 0x22A7 JUMP JUMPDEST SWAP1 PUSH2 0x235A JUMP JUMPDEST SWAP1 POP PUSH2 0x28DD DUP7 DUP3 PUSH2 0x14BF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1FAC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28F5 DUP5 PUSH2 0xAA0 DUP9 DUP9 PUSH2 0x3222 JUMP JUMPDEST SWAP1 POP PUSH2 0x2901 DUP7 DUP3 PUSH2 0x14F4 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2941 DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x291B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2930 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x294E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x297F DUP4 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x296A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2930 JUMPI INVALID JUMPDEST DUP4 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x298C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29AC DUP3 ISZERO ISZERO PUSH1 0x4 PUSH2 0x16CC JUMP JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x29B5 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x655 DUP3 PUSH1 0xEA PUSH2 0x27F4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x655 DUP3 PUSH1 0xB5 PUSH2 0x324B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x655 DUP3 PUSH1 0x9F PUSH2 0x27F4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x655 DUP3 PUSH1 0x6A PUSH2 0x324B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x655 DUP3 PUSH1 0x54 PUSH2 0x27F4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x655 DUP3 PUSH1 0x1F PUSH2 0x324B JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2A38 JUMPI PUSH32 0x0 PUSH2 0x655 JUMP JUMPDEST POP PUSH32 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A76 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x19B PUSH2 0x16CC JUMP JUMPDEST PUSH2 0x2A82 DUP3 PUSH1 0x0 DUP4 PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2AA8 SWAP1 DUP3 PUSH2 0x1A1 PUSH2 0x26C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x2ACE SWAP1 DUP3 PUSH2 0x327E JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x2B0F SWAP1 DUP6 SWAP1 PUSH2 0x49EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x2B2A DUP5 PUSH2 0x2F8C JUMP JUMPDEST SWAP1 POP PUSH1 0x3 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2B3A JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x2B4A JUMPI PUSH2 0x2896 DUP6 DUP6 PUSH2 0x328C JUMP JUMPDEST PUSH2 0x28AB PUSH2 0x136 PUSH2 0x2672 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B64 DUP3 ISZERO ISZERO PUSH1 0x4 PUSH2 0x16CC JUMP JUMPDEST DUP3 PUSH2 0x2B71 JUMPI POP PUSH1 0x0 PUSH2 0x655 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP5 SUB DUP2 PUSH2 0x2B7D JUMPI INVALID JUMPDEST DIV PUSH1 0x1 ADD SWAP1 POP PUSH2 0x655 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2B97 DUP7 DUP7 DUP7 DUP7 PUSH2 0x32B1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2901 DUP2 PUSH2 0x26DB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2BB1 DUP8 DUP8 DUP8 DUP8 PUSH2 0x32B1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2BC9 PUSH2 0x2BC2 DUP8 DUP5 PUSH2 0x22A7 JUMP JUMPDEST DUP10 SWAP1 PUSH2 0x14BF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2BD6 DUP3 PUSH2 0x26DB JUMP JUMPDEST DUP6 SWAP1 SUB SWAP4 POP POP POP POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2C04 DUP6 DUP6 DUP6 TIMESTAMP PUSH2 0x2BFB DUP12 PUSH2 0x1E43 JUMP JUMPDEST SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32D9 JUMP JUMPDEST SWAP1 POP PUSH1 0x78 TIMESTAMP DUP9 SWAP1 SUB LT ISZERO DUP1 PUSH2 0x2C19 JUMPI DUP7 PUSH2 0x2C22 JUMP JUMPDEST PUSH2 0x2C22 DUP8 PUSH2 0x332B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14D1 DUP4 DUP4 PUSH1 0x4B PUSH2 0x3338 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14D1 DUP4 DUP4 PUSH1 0x2C PUSH2 0x3348 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C7D PUSH2 0x2C72 DUP8 PUSH8 0x429D069189E0000 PUSH2 0x3222 JUMP JUMPDEST DUP6 GT ISZERO PUSH2 0x130 PUSH2 0x16CC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C9B PUSH2 0x2C94 DUP6 PUSH8 0xDE0B6B3A7640002 PUSH2 0x22A7 JUMP JUMPDEST DUP9 SWAP1 PUSH2 0x14BF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2CB4 PUSH2 0x2C94 DUP6 PUSH8 0xDE0B6B3A763FFFF PUSH2 0x3222 JUMP JUMPDEST SWAP1 POP PUSH2 0x2CCD PUSH2 0x2CC3 DUP4 DUP9 PUSH2 0x14BF JUMP JUMPDEST PUSH2 0xAA0 DUP4 DUP10 PUSH2 0x3222 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x2CDF DUP6 DUP3 LT PUSH2 0x165 PUSH2 0x16CC JUMP JUMPDEST PUSH2 0x2BDF PUSH2 0x2CF4 DUP7 PUSH8 0x429D069189E0000 PUSH2 0x3222 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x131 PUSH2 0x16CC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D0F DUP6 DUP6 LT PUSH2 0x165 PUSH2 0x16CC JUMP JUMPDEST PUSH2 0x2D2F PUSH2 0x2D24 DUP7 PUSH8 0x429D069189E0000 PUSH2 0x3222 JUMP JUMPDEST DUP6 GT ISZERO PUSH2 0x131 PUSH2 0x16CC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D46 PUSH2 0x2C94 DUP6 PUSH8 0xDE0B6B3A7640002 PUSH2 0x22A7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2D5F PUSH2 0x2C94 DUP6 PUSH8 0xDE0B6B3A763FFFF PUSH2 0x3222 JUMP JUMPDEST SWAP1 POP PUSH2 0x2D78 PUSH2 0x2D6E DUP3 DUP9 PUSH2 0x14F4 JUMP JUMPDEST PUSH2 0x28CB DUP5 DUP10 PUSH2 0x22A7 JUMP JUMPDEST SWAP3 POP PUSH2 0x2BDF SWAP2 POP PUSH2 0x2D93 SWAP1 POP DUP8 PUSH8 0x429D069189E0000 PUSH2 0x3222 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x130 PUSH2 0x16CC JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x2DBF PUSH2 0x2DB0 DUP8 DUP8 PUSH2 0x1EDC JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x14F4 JUMP JUMPDEST SWAP4 POP PUSH1 0x0 PUSH2 0x2DEA DUP7 DUP10 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2DD4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1EDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2E15 DUP9 DUP11 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2DFF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3222 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x2E21 DUP3 DUP3 PUSH2 0x14BF JUMP JUMPDEST SWAP5 POP PUSH2 0x2E48 DUP10 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2E33 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP11 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2DFF JUMPI INVALID JUMPDEST SWAP3 POP POP POP PUSH2 0x2E7F DUP7 PUSH2 0x2E79 DUP9 PUSH2 0x2E79 DUP12 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2E64 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP13 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2DFF JUMPI INVALID JUMPDEST SWAP1 PUSH2 0x3222 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 PUSH2 0x2EBF DUP7 PUSH2 0xAA0 DUP10 PUSH2 0x2E79 PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 MUL PUSH2 0x2E79 DUP15 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2EAA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP16 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2DFF JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2EF5 PUSH2 0x2ED0 DUP9 DUP1 PUSH2 0x22A7 JUMP JUMPDEST PUSH2 0xAA0 DUP12 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2EE0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP13 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2DFF JUMPI INVALID JUMPDEST SWAP1 POP PUSH2 0x2F0B DUP2 PUSH2 0x2F05 DUP7 DUP6 PUSH2 0x14BF JUMP JUMPDEST SWAP1 PUSH2 0x14BF JUMP JUMPDEST SWAP4 POP POP POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2F2D DUP7 PUSH8 0x1BC16D674EC80000 PUSH2 0x22A7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2F47 DUP8 PUSH2 0x2E79 DUP7 PUSH8 0x3782DACE9D900000 PUSH2 0x3222 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2F55 DUP7 DUP4 PUSH2 0x14BF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2F64 DUP3 PUSH1 0x5 PUSH2 0x335A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2F72 DUP10 DUP4 PUSH2 0x14BF JUMP JUMPDEST SWAP1 POP PUSH2 0x2F7E DUP2 DUP7 PUSH2 0x1EDC JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x655 SWAP2 SWAP1 PUSH2 0x4684 JUMP JUMPDEST PUSH1 0x60 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x14D1 SWAP2 SWAP1 PUSH2 0x46CD JUMP JUMPDEST PUSH2 0x2FC4 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x2FD1 SWAP1 DUP3 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2FF7 SWAP1 DUP3 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x2B0F SWAP1 DUP6 SWAP1 PUSH2 0x49EA JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x3073 JUMPI PUSH32 0x0 PUSH2 0x655 JUMP JUMPDEST POP PUSH32 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30AC PUSH4 0x1C74C917 PUSH1 0xE1 SHL PUSH2 0xC45 JUMP JUMPDEST DUP3 EQ DUP1 PUSH2 0x655 JUMPI POP PUSH2 0x30C4 PUSH4 0x50DD6ED9 PUSH1 0xE0 SHL PUSH2 0xC45 JUMP JUMPDEST SWAP1 SWAP2 EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30DC PUSH1 0x0 DUP4 SGT PUSH1 0x64 PUSH2 0x16CC JUMP JUMPDEST PUSH8 0xC7D713B49DA0000 DUP3 SGT DUP1 ISZERO PUSH2 0x30FA JUMPI POP PUSH8 0xF43FC2C04EE0000 DUP3 SLT JUMPDEST ISZERO PUSH2 0x3120 JUMPI PUSH8 0xDE0B6B3A7640000 PUSH2 0x3111 DUP4 PUSH2 0x34CD JUMP JUMPDEST DUP2 PUSH2 0x3118 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH2 0xB80 JUMP JUMPDEST PUSH2 0x3129 DUP3 PUSH2 0x35EB JUMP JUMPDEST SWAP1 POP PUSH2 0xB80 JUMP JUMPDEST PUSH3 0x3FFFFF DUP3 DUP2 AND DUP3 SHL SWAP1 DUP3 SHL NOT DUP5 AND OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x315D JUMPI PUSH2 0x3158 DUP3 DUP5 PUSH2 0x398A JUMP JUMPDEST PUSH2 0x1FAC JUMP JUMPDEST PUSH2 0x1FAC DUP3 DUP5 PUSH2 0x3996 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x317B PUSH2 0x39A2 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP DUP4 PUSH1 0x0 EQ ISZERO PUSH2 0x31A0 JUMPI PUSH1 0x0 SWAP8 POP DUP8 SWAP7 POP SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x31C7 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x31B7 DUP13 DUP13 PUSH2 0x31B0 PUSH2 0x66F JUMP JUMPDEST DUP10 DUP10 PUSH2 0x3C11 JUMP JUMPDEST SWAP1 SWAP11 POP SWAP9 POP SWAP3 SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP JUMPDEST SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST DUP4 ISZERO PUSH2 0x31E0 JUMPI PUSH2 0x31E0 DUP3 DUP6 PUSH2 0x24FE JUMP JUMPDEST DUP3 ISZERO PUSH2 0x8E4 JUMPI PUSH2 0x8E4 DUP2 DUP5 PUSH2 0x24FE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x31FF DUP5 PUSH2 0x3CA6 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x3215 DUP7 DUP4 PUSH2 0x3210 PUSH2 0x66F JUMP JUMPDEST PUSH2 0x3CBC JUMP JUMPDEST SWAP2 SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL PUSH2 0x323C DUP5 ISZERO DUP1 PUSH2 0x1ED5 JUMPI POP DUP4 DUP6 DUP4 DUP2 PUSH2 0x1ED2 JUMPI INVALID JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x1F12 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR PUSH7 0x1FFFFFFFFFFFFF AND PUSH7 0xFFFFFFFFFFFFF DUP2 SGT PUSH2 0x326D JUMPI DUP1 PUSH2 0x1FAC JUMP JUMPDEST PUSH7 0x1FFFFFFFFFFFFF NOT OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14D1 DUP4 DUP4 PUSH1 0x1 PUSH2 0x26C5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x329B DUP5 PUSH2 0x3CA6 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x3215 DUP7 DUP4 PUSH2 0x32AC PUSH2 0x66F JUMP JUMPDEST PUSH2 0x3D57 JUMP JUMPDEST PUSH1 0x0 PUSH8 0x6F05B59D3B20000 PUSH2 0x2901 PUSH2 0x32CD DUP3 PUSH2 0x28CB DUP8 DUP8 PUSH2 0x14BF JUMP JUMPDEST PUSH2 0x28CB DUP4 DUP2 DUP11 DUP11 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x32E5 DUP8 PUSH2 0x18B9 JUMP JUMPDEST DUP4 SUB SWAP1 POP PUSH1 0x0 DUP2 DUP8 MUL PUSH2 0x32F7 DUP10 PUSH2 0x29CA JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP3 DUP8 MUL PUSH2 0x3308 DUP11 PUSH2 0x29E4 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP4 DUP8 MUL PUSH2 0x3319 DUP12 PUSH2 0x29FE JUMP JUMPDEST ADD SWAP1 POP PUSH2 0x2F7E DUP10 DUP5 DUP11 DUP6 DUP12 DUP7 DUP13 PUSH2 0x1859 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x655 DUP3 PUSH1 0x1 PUSH2 0x3DFE JUMP JUMPDEST PUSH2 0x3FF DUP2 SHL NOT SWAP3 SWAP1 SWAP3 AND SWAP2 SHL OR SWAP1 JUMP JUMPDEST PUSH4 0x7FFFFFFF DUP2 SHL NOT SWAP3 SWAP1 SWAP3 AND SWAP2 SHL OR SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3369 JUMPI POP PUSH1 0x0 PUSH2 0x655 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3374 DUP5 PUSH2 0x3E06 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x338B JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x3395 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x33AD JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x33B7 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x33CF JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x33D9 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x33F1 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x33FB JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x3413 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x341D JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x3435 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x343F JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x3457 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x3461 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH2 0x3470 DUP3 DUP1 PUSH2 0x3222 JUMP JUMPDEST SWAP1 POP PUSH2 0x3486 PUSH2 0x347F DUP4 DUP7 PUSH2 0x22A7 JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x14BF JUMP JUMPDEST DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x34A8 JUMPI POP PUSH2 0x34A4 PUSH2 0x349D DUP4 DUP7 PUSH2 0x22A7 JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x14F4 JUMP JUMPDEST DUP2 LT ISZERO JUMPDEST PUSH2 0x102B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34C4 SWAP1 PUSH2 0x4BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 MUL PUSH1 0x0 DUP1 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP1 DUP5 ADD SWAP1 PUSH15 0xC097CE7BC90715B34B9F0FFFFFFFFF NOT DUP6 ADD MUL DUP2 PUSH2 0x3508 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x0 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 DUP1 MUL SDIV SWAP1 POP DUP2 DUP1 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP2 DUP5 MUL SDIV SWAP2 POP PUSH1 0x3 DUP3 SDIV ADD PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x5 DUP3 SDIV ADD PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x7 DUP3 SDIV ADD PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x9 DUP3 SDIV ADD PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0xB DUP3 SDIV ADD PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0xD DUP3 SDIV ADD PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0xF DUP3 PUSH1 0x2 SWAP2 SWAP1 SDIV SWAP2 SWAP1 SWAP2 ADD MUL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 SLT ISZERO PUSH2 0x3627 JUMPI PUSH2 0x361D DUP3 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP2 PUSH2 0x3617 JUMPI INVALID JUMPDEST SDIV PUSH2 0x35EB JUMP JUMPDEST PUSH1 0x0 SUB SWAP1 POP PUSH2 0xB80 JUMP JUMPDEST PUSH1 0x0 PUSH31 0x1600EF3172E58D2E933EC884FDE10064C63B5372D805E203C0000000000000 DUP4 SLT PUSH2 0x3678 JUMPI PUSH24 0x195E54C5DD42177F53A27172FA9EC630262827000000000 DUP4 SDIV SWAP3 POP PUSH9 0x6F05B59D3B2000000 ADD JUMPDEST PUSH20 0x11798004D755D3C8BC8E03204CF44619E000000 DUP4 SLT PUSH2 0x36B0 JUMPI PUSH12 0x1425982CF597CD205CEF7380 DUP4 SDIV SWAP3 POP PUSH9 0x3782DACE9D9000000 ADD JUMPDEST PUSH1 0x64 SWAP3 DUP4 MUL SWAP3 MUL PUSH15 0x1855144814A7FF805980FF0084000 DUP4 SLT PUSH2 0x36F8 JUMPI PUSH15 0x1855144814A7FF805980FF0084000 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0xAD78EBC5AC62000000 ADD JUMPDEST PUSH12 0x2DF0AB5A80A22C61AB5A700 DUP4 SLT PUSH2 0x3733 JUMPI PUSH12 0x2DF0AB5A80A22C61AB5A700 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x56BC75E2D631000000 ADD JUMPDEST PUSH10 0x3F1FCE3DA636EA5CF850 DUP4 SLT PUSH2 0x376A JUMPI PUSH10 0x3F1FCE3DA636EA5CF850 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x2B5E3AF16B18800000 ADD JUMPDEST PUSH10 0x127FA27722CC06CC5E2 DUP4 SLT PUSH2 0x37A1 JUMPI PUSH10 0x127FA27722CC06CC5E2 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x15AF1D78B58C400000 ADD JUMPDEST PUSH9 0x280E60114EDB805D03 DUP4 SLT PUSH2 0x37D6 JUMPI PUSH9 0x280E60114EDB805D03 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0xAD78EBC5AC6200000 ADD JUMPDEST PUSH9 0xEBC5FB41746121110 DUP4 SLT PUSH2 0x3801 JUMPI PUSH9 0xEBC5FB41746121110 PUSH9 0x56BC75E2D63100000 SWAP4 DUP5 MUL SDIV SWAP3 ADD JUMPDEST PUSH9 0x8F00F760A4B2DB55D DUP4 SLT PUSH2 0x3836 JUMPI PUSH9 0x8F00F760A4B2DB55D PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x2B5E3AF16B1880000 ADD JUMPDEST PUSH9 0x6F5F1775788937937 DUP4 SLT PUSH2 0x386B JUMPI PUSH9 0x6F5F1775788937937 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x15AF1D78B58C40000 ADD JUMPDEST PUSH9 0x6248F33704B286603 DUP4 SLT PUSH2 0x389F JUMPI PUSH9 0x6248F33704B286603 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH8 0xAD78EBC5AC620000 ADD JUMPDEST PUSH9 0x5C548670B9510E7AC DUP4 SLT PUSH2 0x38D3 JUMPI PUSH9 0x5C548670B9510E7AC PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH8 0x56BC75E2D6310000 ADD JUMPDEST PUSH1 0x0 PUSH9 0x56BC75E2D63100000 DUP5 ADD PUSH9 0x56BC75E2D63100000 DUP1 DUP7 SUB MUL DUP2 PUSH2 0x38F6 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x0 PUSH9 0x56BC75E2D63100000 DUP3 DUP1 MUL SDIV SWAP1 POP DUP2 DUP1 PUSH9 0x56BC75E2D63100000 DUP2 DUP5 MUL SDIV SWAP2 POP PUSH1 0x3 DUP3 SDIV ADD PUSH9 0x56BC75E2D63100000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x5 DUP3 SDIV ADD PUSH9 0x56BC75E2D63100000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x7 DUP3 SDIV ADD PUSH9 0x56BC75E2D63100000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x9 DUP3 SDIV ADD PUSH9 0x56BC75E2D63100000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0xB DUP3 SDIV ADD PUSH1 0x2 MUL PUSH1 0x64 DUP6 DUP3 ADD SDIV SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14D1 DUP4 DUP4 PUSH2 0x3222 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14D1 DUP4 DUP4 PUSH2 0x1EDC JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0xBD02D0F5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xBD02D0F5 SWAP1 PUSH2 0x39F4 SWAP1 PUSH22 0x50524F544F434F4C5F535741505F4645455F50455243 PUSH1 0x50 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0x49EA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3A0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A20 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3A44 SWAP2 SWAP1 PUSH2 0x4736 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0xBD02D0F5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xBD02D0F5 SWAP1 PUSH2 0x3A94 SWAP1 PUSH32 0x50524F544F434F4C5F4645455F4759524F5F504F5254494F4E00000000000000 SWAP1 PUSH1 0x4 ADD PUSH2 0x49EA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3AAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3AC0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3AE4 SWAP2 SWAP1 PUSH2 0x4736 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x21F8A721 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x21F8A721 SWAP1 PUSH2 0x3B24 SWAP1 PUSH13 0x4759524F5F5452454153555259 PUSH1 0x98 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0x49EA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3B3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3B50 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B74 SWAP2 SWAP1 PUSH2 0x41B1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x21F8A721 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x21F8A721 SWAP1 PUSH2 0x3BB3 SWAP1 PUSH12 0x42414C5F5452454153555259 PUSH1 0xA0 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0x49EA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3BCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3BDF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C03 SWAP2 SWAP1 PUSH2 0x41B1 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 DUP7 GT PUSH2 0x3C26 JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x3C9C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C40 DUP6 PUSH2 0x2E79 PUSH2 0x3C39 DUP11 DUP13 PUSH2 0x14F4 JUMP JUMPDEST DUP10 SWAP1 PUSH2 0x3222 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3C58 PUSH2 0x3C51 DUP10 DUP12 PUSH2 0x14F4 JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x3222 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3C66 DUP10 DUP4 PUSH2 0x14F4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3C74 DUP5 DUP4 PUSH2 0x1EDC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3C82 DUP9 DUP4 PUSH2 0x3222 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3C90 DUP4 DUP4 PUSH2 0x14F4 JUMP JUMPDEST SWAP2 SWAP8 POP SWAP1 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x14D1 SWAP2 SWAP1 PUSH2 0x46A0 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x3CCA DUP5 DUP5 PUSH2 0x1EDC JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x3CE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3D0F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x3D4D JUMPI PUSH2 0x3D2E DUP4 DUP9 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2DFF JUMPI INVALID JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3D3A JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x3D15 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x3D65 DUP5 DUP5 PUSH2 0x235A JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x3D80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3DAA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x3D4D JUMPI PUSH2 0x3DDF DUP4 DUP9 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3DC9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x22A7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3DEB JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x3DB0 JUMP JUMPDEST ADD PUSH2 0x3FF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 LT PUSH2 0x3E33 JUMPI PUSH8 0xDE0B6B3A7640000 PUSH2 0x3E2B DUP2 DUP5 DIV PUSH2 0x3FE9 JUMP JUMPDEST SHL SWAP1 POP PUSH2 0xB80 JUMP JUMPDEST PUSH1 0xA DUP3 LT ISZERO PUSH2 0x3E47 JUMPI POP PUSH4 0x12D940B6 PUSH2 0xB80 JUMP JUMPDEST PUSH1 0x64 DUP3 LT ISZERO PUSH2 0x3E5C JUMPI POP PUSH5 0x2540BE400 PUSH2 0xB80 JUMP JUMPDEST PUSH2 0x3E8 DUP3 LT ISZERO PUSH2 0x3E72 JUMPI POP PUSH5 0x75CDD4719 PUSH2 0xB80 JUMP JUMPDEST PUSH2 0x2710 DUP3 LT ISZERO PUSH2 0x3E88 JUMPI POP PUSH5 0x174876E800 PUSH2 0xB80 JUMP JUMPDEST PUSH3 0x186A0 DUP3 LT ISZERO PUSH2 0x3E9F JUMPI POP PUSH5 0x49A0A4C700 PUSH2 0xB80 JUMP JUMPDEST PUSH3 0xF4240 DUP3 LT ISZERO PUSH2 0x3EB6 JUMPI POP PUSH5 0xE8D4A51000 PUSH2 0xB80 JUMP JUMPDEST PUSH3 0x989680 DUP3 LT ISZERO PUSH2 0x3ECE JUMPI POP PUSH6 0x2E0466FC608 PUSH2 0xB80 JUMP JUMPDEST PUSH4 0x5F5E100 DUP3 LT ISZERO PUSH2 0x3EE7 JUMPI POP PUSH6 0x9184E72A000 PUSH2 0xB80 JUMP JUMPDEST PUSH4 0x3B9ACA00 DUP3 LT ISZERO PUSH2 0x3F00 JUMPI POP PUSH6 0x1CC2C05DBC53 PUSH2 0xB80 JUMP JUMPDEST PUSH5 0x2540BE400 DUP3 LT ISZERO PUSH2 0x3F1A JUMPI POP PUSH6 0x5AF3107A4000 PUSH2 0xB80 JUMP JUMPDEST PUSH5 0x174876E800 DUP3 LT ISZERO PUSH2 0x3F35 JUMPI POP PUSH7 0x11F9B83A95B45 PUSH2 0xB80 JUMP JUMPDEST PUSH5 0xE8D4A51000 DUP3 LT ISZERO PUSH2 0x3F50 JUMPI POP PUSH7 0x38D7EA4C68000 PUSH2 0xB80 JUMP JUMPDEST PUSH6 0x9184E72A000 DUP3 LT ISZERO PUSH2 0x3F6C JUMPI POP PUSH7 0xB3C13249D90BB PUSH2 0xB80 JUMP JUMPDEST PUSH6 0x5AF3107A4000 DUP3 LT ISZERO PUSH2 0x3F88 JUMPI POP PUSH7 0x2386F26FC10000 PUSH2 0xB80 JUMP JUMPDEST PUSH7 0x38D7EA4C68000 DUP3 LT ISZERO PUSH2 0x3FA5 JUMPI POP PUSH7 0x7058BF6E27A751 PUSH2 0xB80 JUMP JUMPDEST PUSH7 0x2386F26FC10000 DUP3 LT ISZERO PUSH2 0x3FC3 JUMPI POP PUSH8 0x16345785D8A0000 PUSH2 0xB80 JUMP JUMPDEST PUSH8 0x16345785D8A0000 DUP3 LT ISZERO PUSH2 0x3FE2 JUMPI POP PUSH8 0x463777A4D8C892D PUSH2 0xB80 JUMP JUMPDEST POP DUP1 PUSH2 0xB80 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x80 SHL DUP3 LT PUSH2 0x4001 JUMPI PUSH1 0x80 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x40 ADD JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0x401C JUMPI PUSH1 0x40 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0x4033 JUMPI PUSH1 0x20 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x10 ADD JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0x4048 JUMPI PUSH1 0x10 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x8 ADD JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x405C JUMPI PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x4 ADD JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x406F JUMPI PUSH1 0x4 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x2 ADD JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0xB80 JUMPI PUSH1 0x1 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x655 DUP2 PUSH2 0x4C77 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x40B1 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x40C4 PUSH2 0x40BF DUP3 PUSH2 0x4C4E JUMP JUMPDEST PUSH2 0x4C28 JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 POP PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP5 DUP2 ADD DUP2 DUP5 MUL DUP7 ADD DUP3 ADD DUP8 LT ISZERO PUSH2 0x40E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x4104 JUMPI DUP2 MLOAD DUP5 MSTORE SWAP3 DUP3 ADD SWAP3 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x40E8 JUMP JUMPDEST POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x411F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4134 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x4147 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x4C28 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x415E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x0 SWAP1 DUP3 ADD PUSH1 0x20 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0x655 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x655 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x41A6 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14D1 DUP2 PUSH2 0x4C77 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x41C2 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x14D1 DUP2 PUSH2 0x4C77 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x41DF JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x41EA DUP2 PUSH2 0x4C77 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x41FA DUP2 PUSH2 0x4C77 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4219 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x4224 DUP2 PUSH2 0x4C77 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x4234 DUP2 PUSH2 0x4C77 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x425F JUMPI DUP5 DUP6 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x426A DUP2 PUSH2 0x4C77 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x427A DUP2 PUSH2 0x4C77 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x429D JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x42CC JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x42D7 DUP2 PUSH2 0x4C77 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x42F9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x430F JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4322 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x4330 PUSH2 0x40BF DUP3 PUSH2 0x4C4E JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP3 POP DUP1 DUP7 ADD DUP12 DUP3 DUP4 DUP8 MUL DUP10 ADD ADD GT ISZERO PUSH2 0x4350 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x437B JUMPI DUP1 MLOAD PUSH2 0x4367 DUP2 PUSH2 0x4C77 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP3 DUP2 ADD SWAP3 DUP2 ADD PUSH2 0x4354 JUMP JUMPDEST POP DUP10 ADD MLOAD SWAP1 SWAP8 POP SWAP4 POP POP POP DUP1 DUP3 GT ISZERO PUSH2 0x4392 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x439F DUP7 DUP3 DUP8 ADD PUSH2 0x40A1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x43C2 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x43D7 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x43E7 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x43F5 PUSH2 0x40BF DUP3 PUSH2 0x4C4E JUMP JUMPDEST DUP2 DUP2 MSTORE DUP4 DUP2 ADD SWAP1 DUP4 DUP6 ADD PUSH1 0x40 DUP1 DUP6 MUL DUP7 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0x4413 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP6 POP JUMPDEST DUP5 DUP7 LT ISZERO PUSH2 0x4460 JUMPI DUP1 DUP3 DUP12 SUB SLT ISZERO PUSH2 0x442D JUMPI DUP8 DUP9 REVERT JUMPDEST PUSH2 0x4436 DUP2 PUSH2 0x4C28 JUMP JUMPDEST PUSH2 0x4440 DUP12 DUP5 PUSH2 0x4186 JUMP JUMPDEST DUP2 MSTORE DUP3 DUP9 ADD CALLDATALOAD DUP9 DUP3 ADD MSTORE DUP5 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP3 DUP7 ADD SWAP3 SWAP1 DUP2 ADD SWAP1 PUSH2 0x4417 JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4480 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4495 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x44A5 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x44B3 PUSH2 0x40BF DUP3 PUSH2 0x4C4E JUMP JUMPDEST DUP2 DUP2 MSTORE DUP4 DUP2 ADD SWAP1 DUP4 DUP6 ADD PUSH1 0x60 DUP1 DUP6 MUL DUP7 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0x44D1 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP6 POP JUMPDEST DUP5 DUP7 LT ISZERO PUSH2 0x4460 JUMPI DUP1 DUP3 DUP12 SUB SLT ISZERO PUSH2 0x44EB JUMPI DUP8 DUP9 REVERT JUMPDEST PUSH2 0x44F4 DUP2 PUSH2 0x4C28 JUMP JUMPDEST PUSH2 0x44FE DUP12 DUP5 PUSH2 0x4186 JUMP JUMPDEST DUP2 MSTORE DUP3 DUP9 ADD CALLDATALOAD DUP9 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP5 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE DUP5 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP3 DUP7 ADD SWAP3 SWAP1 DUP2 ADD SWAP1 PUSH2 0x44D5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4539 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14D1 DUP2 PUSH2 0x4C8C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4555 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x14D1 DUP2 PUSH2 0x4C8C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x457A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP8 CALLDATALOAD SWAP7 POP PUSH1 0x20 DUP1 DUP10 ADD CALLDATALOAD PUSH2 0x458D DUP2 PUSH2 0x4C77 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x459D DUP2 PUSH2 0x4C77 JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x45B8 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP12 ADD SWAP2 POP DUP12 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x45CB JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x45D9 PUSH2 0x40BF DUP3 PUSH2 0x4C4E JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP6 DUP3 ADD SWAP2 POP DUP6 DUP6 ADD DUP16 DUP8 DUP9 DUP7 MUL DUP9 ADD ADD GT ISZERO PUSH2 0x45F7 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x4619 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x45FB JUMP JUMPDEST POP SWAP9 POP POP POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP6 POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 DUP12 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x463F JUMPI DUP4 DUP5 REVERT JUMPDEST POP POP PUSH2 0x464D DUP11 DUP3 DUP12 ADD PUSH2 0x410F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x466D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x14D1 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4695 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x14D1 DUP2 PUSH2 0x4C9A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x46B2 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x46BD DUP2 PUSH2 0x4C9A JUMP JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD MLOAD SWAP3 SWAP5 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x46DF JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x46EA DUP2 PUSH2 0x4C9A JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4705 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x4711 DUP6 DUP3 DUP7 ADD PUSH2 0x40A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x472C JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x14D1 DUP4 DUP4 PUSH2 0x4186 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4747 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4762 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4778 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP PUSH2 0x120 DUP1 DUP4 DUP10 SUB SLT ISZERO PUSH2 0x478E JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x4797 DUP2 PUSH2 0x4C28 JUMP JUMPDEST SWAP1 POP PUSH2 0x47A3 DUP9 DUP5 PUSH2 0x4177 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x47B2 DUP9 PUSH1 0x20 DUP6 ADD PUSH2 0x4096 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x47C4 DUP9 PUSH1 0x40 DUP6 ADD PUSH2 0x4096 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x47F4 DUP9 PUSH1 0xC0 DUP6 ADD PUSH2 0x4096 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x4806 DUP9 PUSH1 0xE0 DUP6 ADD PUSH2 0x4096 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD CALLDATALOAD DUP4 DUP2 GT ISZERO PUSH2 0x481E JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH2 0x482A DUP11 DUP3 DUP8 ADD PUSH2 0x410F JUMP JUMPDEST SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP8 PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP8 POP PUSH1 0x40 SWAP1 SWAP7 ADD CALLDATALOAD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x485A JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4873 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4896 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x48AF DUP2 PUSH2 0x4C8C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x48E9 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x48CD JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x24 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP4 CALLDATACOPY SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4983 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x4967 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x14D1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x48BA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0x49B5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x48BA JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2BDF DUP2 DUP6 PUSH2 0x48BA JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x20 DUP8 ADD MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x40 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x60 DUP2 ADD PUSH2 0x4AFA DUP5 PUSH2 0x4C6D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x80 DUP2 ADD PUSH2 0x4B1B DUP6 PUSH2 0x4C6D JUMP JUMPDEST DUP5 PUSH1 0x20 DUP4 ADD MSTORE DUP4 PUSH1 0x40 DUP4 ADD MSTORE DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 MLOAD PUSH1 0xA0 DUP3 ADD SWAP1 PUSH2 0x4B49 DUP2 PUSH2 0x4C6D JUMP JUMPDEST DUP1 PUSH1 0x20 DUP5 ADD MSTORE POP PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE DUP3 PUSH1 0x80 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4B9E JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x4B82 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x4BAF JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x17DCDC5C9D08119052531151 PUSH1 0xA2 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1FAC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x48BA JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4C46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x4C63 JUMPI DUP1 DUP2 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x66C JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x66C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x66C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x66C JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA 0xC7 PUSH4 0xE46C6DED PUSH32 0x138EF24A7BCA19CA00123477927B5C41D802A4885764BC8064736F6C63430007 ADD STOP CALLER ", "sha1": "d44bf9429d1f7a44b3da0a3994eb230e1e2d3520", "source": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\npragma experimental ABIEncoderV2;\n\nimport \"@balancer-labs/v2-solidity-utils/contracts/math/FixedPoint.sol\";\n\nimport \"@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol\";\nimport \"@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol\";\n\nimport \"../../libraries/GyroConfigKeys.sol\";\nimport \"../../interfaces/IGyroConfig.sol\";\nimport \"../../libraries/GyroPoolMath.sol\";\n\nimport \"./ExtensibleWeightedPool2Tokens.sol\";\nimport \"./Gyro2PoolErrors.sol\";\nimport \"./GyroTwoMath.sol\";\nimport \"./GyroTwoOracleMath.sol\";\n\ncontract GyroTwoPool is ExtensibleWeightedPool2Tokens, GyroTwoOracleMath {\n    using FixedPoint for uint256;\n    using WeightedPoolUserDataHelpers for bytes;\n    using WeightedPool2TokensMiscData for bytes32;\n\n    uint256 private immutable _sqrtAlpha;\n    uint256 private immutable _sqrtBeta;\n\n    IGyroConfig public gyroConfig;\n\n    struct GyroParams {\n        NewPoolParams baseParams;\n        uint256 sqrtAlpha; // A: Should already be upscaled\n        uint256 sqrtBeta; // A: Should already be upscaled. Could be passed as an array[](2)\n    }\n\n    constructor(GyroParams memory params, address configAddress) ExtensibleWeightedPool2Tokens(params.baseParams) {\n        _require(params.sqrtAlpha < params.sqrtBeta, Gyro2PoolErrors.SQRT_PARAMS_WRONG);\n        _sqrtAlpha = params.sqrtAlpha;\n        _sqrtBeta = params.sqrtBeta;\n\n        gyroConfig = IGyroConfig(configAddress);\n    }\n\n    // Returns sqrtAlpha and sqrtBeta (square roots of lower and upper price bounds of p_x respectively)\n\n    function getSqrtParameters() external view returns (uint256[] memory) {\n        return _sqrtParameters();\n    }\n\n    function _sqrtParameters() internal view virtual returns (uint256[] memory) {\n        uint256[] memory virtualParameters = new uint256[](2);\n        virtualParameters[0] = _sqrtParameters(true);\n        virtualParameters[1] = _sqrtParameters(false);\n        return virtualParameters;\n    }\n\n    function _sqrtParameters(bool parameter0) internal view virtual returns (uint256) {\n        return parameter0 ? _sqrtAlpha : _sqrtBeta;\n    }\n\n    /// @dev Returns virtual offsets a and b for reserves x and y respectively, as in (x+a)*(y+b)=L^2\n    function getVirtualParameters() external view returns (uint256[] memory virtualParams) {\n        (, uint256[] memory balances, ) = getVault().getPoolTokens(getPoolId());\n        // _calculateCurrentValues() is defined in terms of an in/out pair, but we just map this to the 0/1 (x/y) pair.\n        (, virtualParams[0], virtualParams[1]) = _calculateCurrentValues(balances[0], balances[1], true);\n    }\n\n    function _getVirtualParameters(uint256[] memory sqrtParams, uint256 invariant) internal view virtual returns (uint256[] memory) {\n        uint256[] memory virtualParameters = new uint256[](2);\n\n        virtualParameters[0] = _virtualParameters(true, sqrtParams[1], invariant);\n        virtualParameters[1] = _virtualParameters(false, sqrtParams[0], invariant);\n        return virtualParameters;\n    }\n\n    function _virtualParameters(\n        bool parameter0,\n        uint256 sqrtParam,\n        uint256 invariant\n    ) internal view virtual returns (uint256) {\n        return\n            parameter0\n                ? (GyroTwoMath._calculateVirtualParameter0(invariant, sqrtParam))\n                : (GyroTwoMath._calculateVirtualParameter1(invariant, sqrtParam));\n    }\n\n    /**\n     * @dev Returns the current value of the invariant.\n     */\n    function getInvariant() public view override returns (uint256) {\n        (, uint256[] memory balances, ) = getVault().getPoolTokens(getPoolId());\n        uint256[] memory sqrtParams = _sqrtParameters();\n\n        // Since the Pool hooks always work with upscaled balances, we manually\n        // upscale here for consistency\n        _upscaleArray(balances);\n\n        return GyroTwoMath._calculateInvariant(balances, sqrtParams[0], sqrtParams[1]);\n    }\n\n    // Swap Hooks\n\n    function onSwap(\n        SwapRequest memory request,\n        uint256 balanceTokenIn,\n        uint256 balanceTokenOut\n    ) public virtual override whenNotPaused onlyVault(request.poolId) returns (uint256) {\n        bool tokenInIsToken0 = request.tokenIn == _token0;\n\n        uint256 scalingFactorTokenIn = _scalingFactor(tokenInIsToken0);\n        uint256 scalingFactorTokenOut = _scalingFactor(!tokenInIsToken0);\n\n        // All token amounts are upscaled.\n        balanceTokenIn = _upscale(balanceTokenIn, scalingFactorTokenIn);\n        balanceTokenOut = _upscale(balanceTokenOut, scalingFactorTokenOut);\n\n        // All the calculations in one function to avoid Error Stack Too Deep\n        (uint256 currentInvariant, uint256 virtualParamIn, uint256 virtualParamOut) = _calculateCurrentValues(\n            balanceTokenIn,\n            balanceTokenOut,\n            tokenInIsToken0\n        );\n\n        // Update price oracle with the pre-swap balances\n        _updateOracle(\n            request.lastChangeBlock,\n            tokenInIsToken0 ? balanceTokenIn : balanceTokenOut,\n            tokenInIsToken0 ? balanceTokenOut : balanceTokenIn,\n            tokenInIsToken0 ? virtualParamIn : virtualParamOut,\n            tokenInIsToken0 ? virtualParamOut : virtualParamIn\n        );\n\n        if (request.kind == IVault.SwapKind.GIVEN_IN) {\n            // Fees are subtracted before scaling, to reduce the complexity of the rounding direction analysis.\n            // This is amount - fee amount, so we round up (favoring a higher fee amount).\n            uint256 feeAmount = request.amount.mulUp(getSwapFeePercentage());\n            // TODO check this call: why do we need to upscale? Should we downscale??\n            request.amount = _upscale(request.amount.sub(feeAmount), scalingFactorTokenIn);\n\n            uint256 amountOut = _onSwapGivenIn(request, balanceTokenIn, balanceTokenOut, virtualParamIn, virtualParamOut, currentInvariant);\n\n            // amountOut tokens are exiting the Pool, so we round down.\n            return _downscaleDown(amountOut, scalingFactorTokenOut);\n        } else {\n            request.amount = _upscale(request.amount, scalingFactorTokenOut);\n\n            uint256 amountIn = _onSwapGivenOut(request, balanceTokenIn, balanceTokenOut, virtualParamIn, virtualParamOut, currentInvariant);\n\n            // amountIn tokens are entering the Pool, so we round up.\n            amountIn = _downscaleUp(amountIn, scalingFactorTokenIn);\n\n            // Fees are added after scaling happens, to reduce the complexity of the rounding direction analysis.\n            // This is amount + fee amount, so we round up (favoring a higher fee amount).\n            return amountIn.divUp(getSwapFeePercentage().complement());\n        }\n    }\n\n    function _onSwapGivenIn(\n        SwapRequest memory swapRequest,\n        uint256 currentBalanceTokenIn,\n        uint256 currentBalanceTokenOut,\n        uint256 virtualParamIn,\n        uint256 virtualParamOut,\n        uint256 // not used but avoids collision with inherited private fn\n    ) private pure returns (uint256) {\n        // Swaps are disabled while the contract is paused.\n        return GyroTwoMath._calcOutGivenIn(currentBalanceTokenIn, currentBalanceTokenOut, swapRequest.amount, virtualParamIn, virtualParamOut);\n    }\n\n    function _onSwapGivenOut(\n        SwapRequest memory swapRequest,\n        uint256 currentBalanceTokenIn,\n        uint256 currentBalanceTokenOut,\n        uint256 virtualParamIn,\n        uint256 virtualParamOut,\n        uint256 // not used but avoids collision with inherited private fn\n    ) private pure returns (uint256) {\n        // Swaps are disabled while the contract is paused.\n        return GyroTwoMath._calcInGivenOut(currentBalanceTokenIn, currentBalanceTokenOut, swapRequest.amount, virtualParamIn, virtualParamOut);\n    }\n\n    function calculateCurrentValues(\n        uint256 balanceTokenIn,\n        uint256 balanceTokenOut,\n        bool tokenInIsToken0\n    )\n        public\n        view\n        returns (\n            uint256 currentInvariant,\n            uint256 virtualParamIn,\n            uint256 virtualParamOut\n        )\n    {\n        return _calculateCurrentValues(balanceTokenIn, balanceTokenOut, tokenInIsToken0);\n    }\n\n    function _calculateCurrentValues(\n        uint256 balanceTokenIn,\n        uint256 balanceTokenOut,\n        bool tokenInIsToken0\n    )\n        internal\n        view\n        returns (\n            uint256 currentInvariant,\n            uint256 virtualParamIn,\n            uint256 virtualParamOut\n        )\n    {\n        // if we have more tokens we might need to get the balances from the Vault\n        uint256[] memory balances = new uint256[](2);\n        balances[0] = tokenInIsToken0 ? balanceTokenIn : balanceTokenOut;\n        balances[1] = tokenInIsToken0 ? balanceTokenOut : balanceTokenIn;\n\n        uint256[] memory sqrtParams = _sqrtParameters();\n\n        currentInvariant = GyroTwoMath._calculateInvariant(balances, sqrtParams[0], sqrtParams[1]);\n\n        uint256[] memory virtualParam = new uint256[](2);\n        virtualParam = _getVirtualParameters(sqrtParams, currentInvariant);\n\n        virtualParamIn = tokenInIsToken0 ? virtualParam[0] : virtualParam[1];\n        virtualParamOut = tokenInIsToken0 ? virtualParam[1] : virtualParam[0];\n    }\n\n    //Note: is public visibility ok for the following function?\n\n    /**\n     * @dev Called when the Pool is joined for the first time; that is, when the BPT total supply is zero.\n     *\n     * Returns the amount of BPT to mint, and the token amounts the Pool will receive in return.\n     *\n     * Minted BPT will be sent to `recipient`, except for _MINIMUM_BPT, which will be deducted from this amount and sent\n     * to the zero address instead. This will cause that BPT to remain forever locked there, preventing total BTP from\n     * ever dropping below that value, and ensuring `_onInitializePool` can only be called once in the entire Pool's\n     * lifetime.\n     *\n     * The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n     * be downscaled (rounding up) before being returned to the Vault.\n     */\n    function _onInitializePool(\n        bytes32,\n        address,\n        address,\n        bytes memory userData\n    ) internal override returns (uint256, uint256[] memory) {\n        BaseWeightedPool.JoinKind kind = userData.joinKind();\n        _require(kind == BaseWeightedPool.JoinKind.INIT, Errors.UNINITIALIZED);\n\n        uint256[] memory amountsIn = userData.initialAmountsIn();\n        InputHelpers.ensureInputLengthMatch(amountsIn.length, 2);\n        _upscaleArray(amountsIn);\n\n        uint256[] memory sqrtParams = _sqrtParameters();\n\n        uint256 invariantAfterJoin = GyroTwoMath._calculateInvariant(amountsIn, sqrtParams[0], sqrtParams[1]);\n\n        // Set the initial BPT to the value of the invariant times the number of tokens. This makes BPT supply more\n        // consistent in Pools with similar compositions but different number of tokens.\n\n        uint256 bptAmountOut = Math.mul(invariantAfterJoin, 2);\n\n        _lastInvariant = invariantAfterJoin;\n\n        return (bptAmountOut, amountsIn);\n    }\n\n    /**\n     * @dev Called whenever the Pool is joined after the first initialization join (see `_onInitializePool`).\n     *\n     * Returns the amount of BPT to mint, the token amounts that the Pool will receive in return, and the number of\n     * tokens to pay in protocol swap fees.\n     *\n     * Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n     * performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n     *\n     * Minted BPT will be sent to `recipient`.\n     *\n     * The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n     * be downscaled (rounding up) before being returned to the Vault.\n     *\n     * Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onJoinPool`). These\n     * amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n     *\n     * protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way\n     *\n     * Responsibility for updating the oracle has been moved from `onJoinPool()` (without the underscore) to this function. That is because both this function and `_updateOracle()` need access to the invariant and this way we can share the computation.\n     */\n    function _onJoinPool(\n        bytes32,\n        address,\n        address,\n        uint256[] memory balances,\n        uint256 lastChangeBlock,\n        uint256, //protocolSwapFeePercentage,\n        bytes memory userData\n    )\n        internal\n        override\n        returns (\n            uint256,\n            uint256[] memory,\n            uint256[] memory\n        )\n    {\n        // Due protocol swap fee amounts are computed by measuring the growth of the invariant between the previous join\n        // or exit event and now - the invariant's growth is due exclusively to swap fees. This avoids spending gas\n        // computing them on each individual swap\n\n        uint256[] memory sqrtParams = _sqrtParameters();\n\n        // Due protocol swap fee amounts are computed by measuring the growth of the invariant between the previous\n        // join or exit event and now - the invariant's growth is due exclusively to swap fees. This avoids\n        // spending gas calculating the fees on each individual swap.\n        uint256 invariantBeforeAction = GyroTwoMath._calculateInvariant(balances, sqrtParams[0], sqrtParams[1]);\n        uint256[] memory virtualParam = _getVirtualParameters(sqrtParams, invariantBeforeAction);\n\n        // Update price oracle with pre-join balances\n        _updateOracle(lastChangeBlock, balances[0], balances[1], virtualParam[0], virtualParam[1]);\n\n        _distributeFees(invariantBeforeAction);\n\n        (uint256 bptAmountOut, uint256[] memory amountsIn) = _doJoin(balances, userData);\n\n        // Since we pay fees in BPT, they have not changed the invariant and 'invariantBeforeAction' is still consistent with\n        // 'balances'. Therefore, we can use a simplified method to update the invariant that does not require a full\n        // re-computation.\n        // Note: Should this be changed in the future, we also need to reduce the invariant proportionally by the total\n        // protocol fee factor.\n        _lastInvariant = GyroPoolMath.liquidityInvariantUpdate(invariantBeforeAction, bptAmountOut, totalSupply(), true);\n\n        // returns a new uint256[](2) b/c Balancer vault is expecting a fee array, but fees paid in BPT instead\n        return (bptAmountOut, amountsIn, new uint256[](2));\n    }\n\n    function _doJoin(uint256[] memory balances, bytes memory userData) internal view returns (uint256 bptAmountOut, uint256[] memory amountsIn) {\n        BaseWeightedPool.JoinKind kind = userData.joinKind();\n\n        // We do NOT currently support unbalanced update, i.e., EXACT_TOKENS_IN_FOR_BPT_OUT or TOKEN_IN_FOR_EXACT_BPT_OUT\n        if (kind == BaseWeightedPool.JoinKind.ALL_TOKENS_IN_FOR_EXACT_BPT_OUT) {\n            (bptAmountOut, amountsIn) = _joinAllTokensInForExactBPTOut(balances, userData);\n        } else {\n            _revert(Errors.UNHANDLED_JOIN_KIND);\n        }\n    }\n\n    function _joinAllTokensInForExactBPTOut(uint256[] memory balances, bytes memory userData)\n        internal\n        view\n        override\n        returns (uint256, uint256[] memory)\n    {\n        uint256 bptAmountOut = userData.allTokensInForExactBptOut();\n        // Note that there is no maximum amountsIn parameter: this is handled by `IVault.joinPool`.\n\n        uint256[] memory amountsIn = GyroPoolMath._calcAllTokensInGivenExactBptOut(balances, bptAmountOut, totalSupply());\n\n        return (bptAmountOut, amountsIn);\n    }\n\n    /**\n     * @dev Called whenever the Pool is exited.\n     *\n     * Returns the amount of BPT to burn, the token amounts for each Pool token that the Pool will grant in return, and\n     * the number of tokens to pay in protocol swap fees.\n     *\n     * Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n     * performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n     *\n     * BPT will be burnt from `sender`.\n     *\n     * The Pool will grant tokens to `recipient`. These amounts are considered upscaled and will be downscaled\n     * (rounding down) before being returned to the Vault.\n     *\n     * Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onExitPool`). These\n     * amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n     *\n     * protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way\n     */\n    function _onExitPool(\n        bytes32,\n        address,\n        address,\n        uint256[] memory balances,\n        uint256 lastChangeBlock,\n        uint256, // protocolSwapFeePercentage,\n        bytes memory userData\n    )\n        internal\n        override\n        returns (\n            uint256 bptAmountIn,\n            uint256[] memory amountsOut,\n            uint256[] memory dueProtocolFeeAmounts\n        )\n    {\n        // Exits are not completely disabled while the contract is paused: proportional exits (exact BPT in for tokens\n        // out) remain functional.\n\n        uint256[] memory sqrtParams = _sqrtParameters();\n\n        // Note: If the contract is paused, swap protocol fee amounts are not charged and the oracle is not updated\n        // to avoid extra calculations and reduce the potential for errors.\n        if (_isNotPaused()) {\n            // Due protocol swap fee amounts are computed by measuring the growth of the invariant between the previous\n            // join or exit event and now - the invariant's growth is due exclusively to swap fees. This avoids\n            // spending gas calculating the fees on each individual swap.\n            uint256 invariantBeforeAction = GyroTwoMath._calculateInvariant(balances, sqrtParams[0], sqrtParams[1]);\n            uint256[] memory virtualParam = _getVirtualParameters(sqrtParams, invariantBeforeAction);\n\n            // Update price oracle with the pre-exit balances\n            _updateOracle(lastChangeBlock, balances[0], balances[1], virtualParam[0], virtualParam[1]);\n\n            _distributeFees(invariantBeforeAction);\n\n            (bptAmountIn, amountsOut) = _doExit(balances, userData);\n\n            // Since we pay fees in BPT, they have not changed the invariant and 'invariantBeforeAction' is still consistent with\n            // 'balances'. Therefore, we can use a simplified method to update the invariant that does not require a full\n            // re-computation.\n            // Note: Should this be changed in the future, we also need to reduce the invariant proportionally by the total\n            // protocol fee factor.\n            _lastInvariant = GyroPoolMath.liquidityInvariantUpdate(invariantBeforeAction, bptAmountIn, totalSupply(), false);\n        } else {\n            // Note: If the contract is paused, swap protocol fee amounts are not charged and the oracle is not updated\n            // to avoid extra calculations and reduce the potential for errors.\n            (bptAmountIn, amountsOut) = _doExit(balances, userData);\n\n            // We need to re-calculate the invariant with the updated balances from scratch in this case.\n            _mutateAmounts(balances, amountsOut, FixedPoint.sub);\n            _lastInvariant = GyroTwoMath._calculateInvariant(balances, sqrtParams[0], sqrtParams[1]);\n        }\n\n        // returns a new uint256[](2) b/c Balancer vault is expecting a fee array, but fees paid in BPT instead\n        return (bptAmountIn, amountsOut, new uint256[](2));\n    }\n\n    function _doExit(uint256[] memory balances, bytes memory userData) internal view returns (uint256 bptAmountIn, uint256[] memory amountsOut) {\n        BaseWeightedPool.ExitKind kind = userData.exitKind();\n\n        // We do NOT support unbalanced exit at the moment, i.e., EXACT_BPT_IN_FOR_ONE_TOKEN_OUT or\n        // BPT_IN_FOR_EXACT_TOKENS_OUT.\n        if (kind == BaseWeightedPool.ExitKind.EXACT_BPT_IN_FOR_TOKENS_OUT) {\n            (bptAmountIn, amountsOut) = _exitExactBPTInForTokensOut(balances, userData);\n        } else {\n            _revert(Errors.UNHANDLED_EXIT_KIND);\n        }\n    }\n\n    function _exitExactBPTInForTokensOut(uint256[] memory balances, bytes memory userData)\n        internal\n        view\n        override\n        returns (uint256, uint256[] memory)\n    {\n        // This exit function is the only one that is not disabled if the contract is paused: it remains unrestricted\n        // in an attempt to provide users with a mechanism to retrieve their tokens in case of an emergency.\n        // This particular exit function is the only one that remains available because it is the simplest one, and\n        // therefore the one with the lowest likelihood of errors.\n\n        uint256 bptAmountIn = userData.exactBptInForTokensOut();\n        // Note that there is no minimum amountOut parameter: this is handled by `IVault.exitPool`.\n\n        uint256[] memory amountsOut = GyroPoolMath._calcTokensOutGivenExactBptIn(balances, bptAmountIn, totalSupply());\n        return (bptAmountIn, amountsOut);\n    }\n\n    // Helpers\n\n    /**\n     * @dev Computes and distributes fees between the Balancer and the Gyro treasury\n     * The fees are computed and distributed in BPT rather than using the\n     * Balancer regular distribution mechanism which would pay these in underlying\n     */\n\n    function _distributeFees(uint256 invariantBeforeAction) internal {\n        // calculate Protocol fees in BPT\n        // lastInvariant is the invariant logged at the end of the last liquidity update\n        // protocol fees are calculated on swap fees earned between liquidity updates\n        (uint256 gyroFees, uint256 balancerFees, address gyroTreasury, address balTreasury) = _getDueProtocolFeeAmounts(\n            _lastInvariant,\n            invariantBeforeAction\n        );\n\n        // Pay fees in BPT\n        _payFeesBpt(gyroFees, balancerFees, gyroTreasury, balTreasury);\n    }\n\n    /**\n     * @dev this function overrides inherited function to make sure it is never used\n     */\n    function _getDueProtocolFeeAmounts(\n        uint256[] memory, // balances,\n        uint256[] memory, // normalizedWeights,\n        uint256, // previousInvariant,\n        uint256, // currentInvariant,\n        uint256 // protocolSwapFeePercentage\n    ) internal pure override returns (uint256[] memory) {\n        revert(\"Not implemented\");\n    }\n\n    /**\n     * @dev Calculates protocol fee amounts in BPT terms\n     * Overrides an inherited function and some arguments are intentionally not used (balances, normalizedWeights)\n     * protocolSwapFeePercentage is not used b/c we take parameters from GyroConfig instead\n     * Returns dueFees, where dueFees[0] = BPT due to Gyro, and dueFees[1] = BPT due to Balancer\n     */\n    function _getDueProtocolFeeAmounts(uint256 previousInvariant, uint256 currentInvariant)\n        internal\n        view\n        returns (\n            uint256,\n            uint256,\n            address,\n            address\n        )\n    {\n        (uint256 protocolSwapFeePerc, uint256 protocolFeeGyroPortion, address gyroTreasury, address balTreasury) = _getFeesMetadata();\n\n        // Early return if the protocol swap fee percentage is zero, saving gas.\n        if (protocolSwapFeePerc == 0) {\n            return (0, 0, gyroTreasury, balTreasury);\n        }\n\n        // Calculate fees in BPT\n        (uint256 gyroFees, uint256 balancerFees) = GyroPoolMath._calcProtocolFees(\n            previousInvariant,\n            currentInvariant,\n            totalSupply(),\n            protocolSwapFeePerc,\n            protocolFeeGyroPortion\n        );\n\n        return (gyroFees, balancerFees, gyroTreasury, balTreasury);\n    }\n\n    function _payFeesBpt(\n        uint256 gyroFees,\n        uint256 balancerFees,\n        address gyroTreasury,\n        address balTreasury\n    ) internal {\n        // Pay fees in BPT to gyro treasury\n        if (gyroFees > 0) {\n            _mintPoolTokens(gyroTreasury, gyroFees);\n        }\n        // Pay fees in BPT to bal treasury\n        if (balancerFees > 0) {\n            _mintPoolTokens(balTreasury, balancerFees);\n        }\n    }\n\n    function _getFeesMetadata()\n        internal\n        view\n        returns (\n            uint256,\n            uint256,\n            address,\n            address\n        )\n    {\n        return (\n            gyroConfig.getUint(GyroConfigKeys.PROTOCOL_SWAP_FEE_PERC_KEY),\n            gyroConfig.getUint(GyroConfigKeys.PROTOCOL_FEE_GYRO_PORTION_KEY),\n            gyroConfig.getAddress(GyroConfigKeys.GYRO_TREASURY_KEY),\n            gyroConfig.getAddress(GyroConfigKeys.BAL_TREASURY_KEY)\n        );\n    }\n\n    /**\n     * @dev Updates the Price Oracle based on the Pool's current state (balances, BPT supply and invariant). Must be\n     * called on *all* state-changing functions with the balances *before* the state change happens, and with\n     * `lastChangeBlock` as the number of the block in which any of the balances last changed.\n     */\n    function _updateOracle(\n        uint256 lastChangeBlock,\n        uint256 balanceToken0,\n        uint256 balanceToken1,\n        uint256 virtualParam0,\n        uint256 virtualParam1\n    ) internal {\n        bytes32 miscData = _miscData;\n        if (miscData.oracleEnabled() && block.number > lastChangeBlock) {\n            int256 logSpotPrice = GyroTwoOracleMath._calcLogSpotPrice(balanceToken0, virtualParam0, balanceToken1, virtualParam1);\n\n            int256 logBPTPrice = GyroTwoOracleMath._calcLogBPTPrice(\n                balanceToken0,\n                virtualParam0,\n                balanceToken1,\n                virtualParam1,\n                miscData.logTotalSupply()\n            );\n\n            uint256 oracleCurrentIndex = miscData.oracleIndex();\n            uint256 oracleCurrentSampleInitialTimestamp = miscData.oracleSampleCreationTimestamp();\n            uint256 oracleUpdatedIndex = _processPriceData(\n                oracleCurrentSampleInitialTimestamp,\n                oracleCurrentIndex,\n                logSpotPrice,\n                logBPTPrice,\n                miscData.logInvariant()\n            );\n\n            if (oracleCurrentIndex != oracleUpdatedIndex) {\n                // solhint-disable not-rely-on-time\n                miscData = miscData.setOracleIndex(oracleUpdatedIndex);\n                miscData = miscData.setOracleSampleCreationTimestamp(block.timestamp);\n                _miscData = miscData;\n            }\n        }\n    }\n\n    /**\n     * @dev this variant of the function, called from `onJoinPool()` and `onExitPool()`, which we inherit, is a no-op. We instead have moved responsibility for updating the oracle to `_onJoinPool()` and `_onExitPool()` and the above version is called from there.\n     */\n    function _updateOracle(\n        uint256 lastChangeBlock,\n        uint256 balanceToken0,\n        uint256 balanceToken1\n    ) internal override {\n        // Do nothing.\n    }\n}\n", "sourceMap": "1263:26723:10:-:0;;;873:95:72;820:148;;1815:332:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1906:17;;5001:26:6;;;;5029:27;;;;4887:11;;;;;4900:13;;;;;4915:12;;2020:280:70;;;;;;;;;;;-1:-1:-1;;;2020:280:70;;;;4959:12:6;;;;4847:10;1929:46:52;;1749:14:38;;-1:-1:-1;;;;;;1749:14:38;;;2002:13:71;;4887:11:6;;4900:13;;4915:12;;4887:11;;;;;;4900:13;;2002::71;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2025:17:71;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2052:9:71;:14;;2064:2;-1:-1:-1;;2052:14:71;;;;;;-1:-1:-1;2100:22:70;;;;;;;2085:37;;2150:25;;;;;2132:43;;-1:-1:-1;2198:95:70;2052:14:71;2185:108:70;1852:14:35::2;::::0;-1:-1:-1;;;;;;1852:14:35;::::2;::::0;-1:-1:-1;2458:93:62;;-1:-1:-1;2164:7:62;2467:49;;;8518:3:53;2458:8:62;:93::i;:::-;2561:96;2232:7;2570:51;;;8582:3:53;2561:8:62;:96::i;:::-;2697:15;:37;;;2745:40;;;;2818:41;2795:64;;5090:20:6::4;::::0;::::4;::::0;5072:39:::4;::::0;:17:::4;:39::i;:::-;5143:24;::::0;::::4;::::0;5121:47:::4;::::0;:21:::4;:47::i;:::-;5196:12:::0;;:62:::4;::::0;-1:-1:-1;;;5196:62:6;;5179:14:::4;::::0;-1:-1:-1;;;;;5196:25:6::4;::::0;-1:-1:-1;;5196:62:6::4;::::0;5222:35:::4;::::0;5196:62:::4;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5347:15;::::0;;5360:1:::4;5347:15:::0;;;5322:22:::4;5347:15:::0;;::::4;::::0;;5179:79;;-1:-1:-1;5347:15:6;;::::4;::::0;::::4;::::0;;::::4;::::0;::::4;;::::0;-1:-1:-1;5347:15:6::4;5322:40;;5384:6;:13;;;5372:6;5379:1;5372:9;;;;;;;;-1:-1:-1::0;;;;;5372:25:6;;::::4;:9;::::0;;::::4;::::0;;;;;;;:25;5419:13:::4;::::0;::::4;::::0;5407:9;;:6;;-1:-1:-1;;5407:9:6;::::4;;;;;-1:-1:-1::0;;;;;5407:25:6;;::::4;:9;::::0;;::::4;::::0;;;;;:25;5442:12;;5486:16:::4;::::0;;5500:1:::4;5486:16:::0;;;;;::::4;::::0;;;5442:27;;;::::4;::::0;::::4;::::0;5470:6;;5478;;5486:16;::::4;;;;;;;;;;;::::0;-1:-1:-1;5486:16:6::4;5442:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;::::0;::::4;;;;;-1:-1:-1::0;;;5603:16:6::4;::::0;;;-1:-1:-1;5640:13:6::4;::::0;;::::4;::::0;;5630:23;;-1:-1:-1;;;;;;5630:23:6;;;::::4;::::0;5673:13:::4;::::0;::::4;::::0;5663:23;;;;;;::::4;::::0;5737:13;5715:36:::4;::::0;:21:::4;:36::i;:::-;5697:54;::::0;5801:13:::4;::::0;::::4;::::0;5779:36:::4;::::0;:21:::4;:36::i;:::-;5761:54;::::0;5945:24:::4;::::0;::::4;::::0;5936:81:::4;::::0;1411:7:48::4;-1:-1:-1::0;5945:52:6::4;5810:3:53;5936:8:6;:81::i;:::-;6027;1411:7:48;6036:6:6;:24;;;:52;;5810:3:53;6027:8:6;;;:81;;:::i;:::-;6176:21;6200:54;6229:6;:24;;;6200:6;:24;;;:28;;;;;;:54;;;;:::i;:::-;6176:78:::0;-1:-1:-1;6264:77:6::4;893:4:64;6273:31:6::0;::::4;6155:3:53;6264:8:6;:77::i;:::-;6373:24;::::0;::::4;::::0;;6352:45:::4;::::0;6428:24:::4;::::0;::::4;::::0;;6407:45:::4;::::0;6513:24;6485;;:52:::4;;:60;;6544:1;6485:60;;;6540:1;6485:60;6462:83;;;::::0;-1:-1:-1;;;1963:15:10::1;::::0;::::1;::::0;1944:16:::1;::::0;::::1;::::0;1935:79:::1;::::0;-1:-1:-1;1944:34:10::1;821:3:7;1935:8:10;:79::i;:::-;2037:16;::::0;::::1;::::0;2024:29:::1;::::0;2075:15:::1;::::0;;::::1;::::0;2063:27:::1;::::0;2101:10:::1;:39:::0;;-1:-1:-1;;;;;;2101:39:10::1;-1:-1:-1::0;;;;;2101:39:10;;::::1;::::0;;;::::1;::::0;;1263:26723;;866:101:53;935:9;930:34;;946:18;954:9;946:7;:18::i;:::-;866:101;;:::o;9029:158:6:-;9101:35;9128:7;9101:9;;:26;;;;;;:35;;;;:::i;:::-;9089:9;:47;9151:29;;;;;;9172:7;;9151:29;:::i;:::-;;;;;;;;9029:158;:::o;7751:397::-;7827:87;2347:4;7836:45;;;5289:3:53;7827:8:6;:87::i;:::-;7924;2420:4;7933:45;;;5228:3:53;7924:8:6;:87::i;:::-;8034:49;8065:17;8034:9;;:30;;;;;;:49;;;;:::i;:::-;8022:9;:61;8098:43;;;;;;8123:17;;8098:43;:::i;41077:399::-;41144:7;41243:21;41281:5;-1:-1:-1;;;;;41267:30:6;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;41243:56;;;;41374:26;41403:27;41412:2;41416:13;41403:8;;;;;:27;;:::i;:::-;41447:2;:22;;41077:399;-1:-1:-1;;;;41077:399:6:o;1157:239:64:-;1215:7;1319:5;;;1334:37;1343:6;;;;1215:7;1334:8;:37::i;:::-;1388:1;-1:-1:-1;1157:239:64;;;;;:::o;1074:3172:53:-;-1:-1:-1;;;3588:3:53;3581:79;;;3799:66;3793:4;3786:80;3941:1;3935:4;3928:15;2210:2;2243:18;;;2336;;;2383;;;2215:4;2379:29;;;3057:2;3053:17;2195:18;;;;2288;;;;2284:29;;;;3040:1;3036:14;3025:26;;;;3021:50;;;;2999:73;;2994:3;2990:83;4008:4;4001:26;4234:3;;4224:14;4808:172:50;4892:7;4918:55;4934:14;2092:2;4918:4;:15;;;;;;:55;;;;;:::i;5083:194::-;5178:7;5204:66;5222:18;2155:2;5204:4;:17;;;;;;:66;;;;;:::i;948:166:66:-;1006:7;1025:37;1034:6;;;;4370:1:53;1025:8:66;:37::i;:::-;-1:-1:-1;1084:5:66;;;948:166::o;3094:280:63:-;3209:7;2126:10;3276:17;;3274:20;3258:36;;3287:6;3342:5;:13;;3354:1;3342:13;;;3350:1;3342:13;3334:22;;:32;;3312:55;;3094:280;-1:-1:-1;;;;3094:280:63:o;6887:269::-;-1:-1:-1;7074:18:63;;7072:21;7056:37;;;;7133:15;;7111:38;;6887:269::o;1263:26723:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1263:26723:10;;;-1:-1:-1;1263:26723:10;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;5:134:-1;83:13;;-1:-1;;;;;12466:54;;13609:35;;13599:2;;13658:1;;13648:12;146:128;221:13;;11910;;11903:21;13730:32;;13720:2;;13776:1;;13766:12;769:444;;882:3;875:4;867:6;863:17;859:27;849:2;;-1:-1;;890:12;849:2;924:13;;-1:-1;10481:30;;10478:2;;;-1:-1;;10514:12;10478:2;10655:4;952:65;-1:-1;;10587:9;10568:17;;10564:33;10645:15;;952:65;:::i;:::-;943:74;;1037:6;1030:5;1023:21;1141:3;10655:4;1132:6;1065;1123:16;;1120:25;1117:2;;;1158:1;;1148:12;1117:2;13217:1;13224:101;13238:6;13235:1;13232:13;13224:101;;;13305:11;;;;;13299:18;13286:11;;;;;13279:39;13253:10;;13224:101;;;13340:6;13337:1;13334:13;13331:2;;;13217:1;10655:4;13396:6;1099:5;13387:16;;13380:27;13331:2;;;;842:371;;;;:::o;4775:263::-;;4890:2;4878:9;4869:7;4865:23;4861:32;4858:2;;;-1:-1;;4896:12;4858:2;-1:-1;359:13;;4852:186;-1:-1;4852:186::o;5045:534::-;;;5205:2;5193:9;5184:7;5180:23;5176:32;5173:2;;;-1:-1;;5211:12;5173:2;5256:24;;-1:-1;5289:30;;;5286:2;;;-1:-1;;5322:12;5286:2;5412:22;;;;1385:4;1364:19;;;1360:30;1357:2;;;-1:-1;;1393:12;1357:2;1421:20;1385:4;1421:20;:::i;:::-;1503:17;1497:24;5300:18;1533:6;1530:30;1527:2;;;-1:-1;;1563:12;1527:2;1671:22;;2235:6;2214:19;;;2210:32;-1:-1;2207:2;;;-1:-1;;2245:12;2207:2;2273:22;2235:6;2273:22;:::i;:::-;2264:31;;2378:76;2450:3;2426:22;2378:76;:::i;:::-;2360:16;2353:102;2537:2;2526:9;2522:18;2516:25;5300:18;2553:6;2550:30;2547:2;;;-1:-1;;2583:12;2547:2;2628:70;2694:3;2685:6;2674:9;2670:22;2628:70;:::i;:::-;2537:2;2614:5;2610:16;2603:96;;5205:2;2772:9;2768:18;2762:25;5300:18;2799:6;2796:30;2793:2;;;-1:-1;;2829:12;2793:2;2874:70;2940:3;2931:6;2920:9;2916:22;2874:70;:::i;:::-;5205:2;2860:5;2856:16;2849:96;;3041:76;3113:3;1385:4;3093:9;3089:22;3041:76;:::i;:::-;1385:4;3027:5;3023:16;3016:102;3215:76;3287:3;3181;3267:9;3263:22;3215:76;:::i;:::-;3181:3;3197:16;;3190:102;3366:3;3432:22;;;4575:13;3382:16;;;3375:86;3535:3;3601:22;;;4575:13;3551:16;;;3544:86;3704:3;3770:22;;;4575:13;3720:16;;;3713:86;3875:3;3943:22;;;4575:13;3891:18;;;3884:88;4049:3;4117:22;;;4575:13;4065:18;;;4058:88;4216:3;;-1:-1;4252:57;4305:3;4281:22;;;4252:57;:::i;:::-;4216:3;4236:5;4232:18;4225:85;4372:3;;;4408:60;4464:3;4372;4444:9;4440:22;4408:60;:::i;:::-;4372:3;4392:5;4388:18;4381:88;1608:91;1590:16;1583:117;;;2537:2;1835:9;1831:22;4575:13;2537:2;1785:5;1781:16;1774:86;5205:2;1994:9;1990:22;4575:13;5205:2;1944:5;1940:16;1933:86;5342:102;;;;;;5499:64;5555:7;2537:2;5535:9;5531:22;5499:64;:::i;:::-;5489:74;;5167:412;;;;;:::o;5586:259::-;;5699:2;5687:9;5678:7;5674:23;5670:32;5667:2;;;-1:-1;;5705:12;5667:2;4720:6;4714:13;12682:4;14435:5;12671:16;14412:5;14409:33;14399:2;;-1:-1;;14446:12;8587:210;11910:13;;11903:21;7969:34;;8708:2;8693:18;;8679:118::o;8804:772::-;;9103:2;9092:9;9088:18;8116:5;8093:3;8086:37;9221:2;9103;9221;9210:9;9206:18;9199:48;9261:124;7351:5;11112:12;11690:6;11685:3;11678:19;11718:14;9092:9;11718:14;7363:93;;9221:2;7543:5;10792:14;7555:21;;-1:-1;7582:292;7607:6;7604:1;7601:13;7582:292;;;12794:53;7674:6;7668:13;12794:53;:::i;:::-;8212:66;;11402:14;;;;6220;;;;7629:1;7622:9;7582:292;;;-1:-1;;9423:20;;;9418:2;9403:18;;9396:48;11112:12;;11678:19;;;11718:14;;;;-1:-1;10792:14;;;;-1:-1;6797:260;6822:6;6819:1;6816:13;6797:260;;;11808:24;6889:6;6883:13;11808:24;:::i;:::-;6309:37;;6006:14;;;;11402;;;;7629:1;6837:9;6797:260;;;-1:-1;9450:116;;9074:502;-1:-1;;;;;;;;9074:502::o;9583:266::-;9732:2;9717:18;;13521:1;13511:12;;13501:2;;13527:9;13501:2;8383:72;;;9703:146;:::o;9856:222::-;8086:37;;;9983:2;9968:18;;9954:124::o;10085:256::-;10147:2;10141:9;10173:17;;;10269:22;;;-1:-1;10233:34;;10230:62;10227:2;;;10305:1;;10295:12;10227:2;10147;10314:22;10125:216;;-1:-1;10125:216::o;11746:91::-;-1:-1;;;;;12466:54;;11791:46::o;:::-;1263:26723:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/cpmmv-2/GyroTwoPool.sol", "type": "contract", "deployment": {"address": "0xf353Be94205776387c0C8162b424806b00fCa93f", "chainid": "137", "blockHeight": 26860028}}