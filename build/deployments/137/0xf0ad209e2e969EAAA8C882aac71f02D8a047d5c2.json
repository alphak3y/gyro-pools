{"abi": [{"inputs": [{"components": [{"components": [{"internalType": "contract IVault", "name": "vault", "type": "address"}, {"internalType": "string", "name": "name", "type": "string"}, {"internalType": "string", "name": "symbol", "type": "string"}, {"internalType": "contract IERC20", "name": "token0", "type": "address"}, {"internalType": "contract IERC20", "name": "token1", "type": "address"}, {"internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}, {"internalType": "uint256", "name": "pauseWindowDuration", "type": "uint256"}, {"internalType": "uint256", "name": "bufferPeriodDuration", "type": "uint256"}, {"internalType": "address", "name": "owner", "type": "address"}], "internalType": "struct ExtensibleWeightedPool2Tokens.NewPoolParams", "name": "baseParams", "type": "tuple"}, {"components": [{"internalType": "int256", "name": "alpha", "type": "int256"}, {"internalType": "int256", "name": "beta", "type": "int256"}, {"internalType": "int256", "name": "c", "type": "int256"}, {"internalType": "int256", "name": "s", "type": "int256"}, {"internalType": "int256", "name": "lambda", "type": "int256"}], "internalType": "struct GyroECLPMath.Params", "name": "eclpParams", "type": "tuple"}, {"components": [{"components": [{"internalType": "int256", "name": "x", "type": "int256"}, {"internalType": "int256", "name": "y", "type": "int256"}], "internalType": "struct GyroECLPMath.Vector2", "name": "tauAlpha", "type": "tuple"}, {"components": [{"internalType": "int256", "name": "x", "type": "int256"}, {"internalType": "int256", "name": "y", "type": "int256"}], "internalType": "struct GyroECLPMath.Vector2", "name": "tauBeta", "type": "tuple"}, {"internalType": "int256", "name": "u", "type": "int256"}, {"internalType": "int256", "name": "v", "type": "int256"}, {"internalType": "int256", "name": "w", "type": "int256"}, {"internalType": "int256", "name": "z", "type": "int256"}, {"internalType": "int256", "name": "dSq", "type": "int256"}], "internalType": "struct GyroECLPMath.DerivedParams", "name": "derivedEclpParams", "type": "tuple"}, {"internalType": "address", "name": "rateProvider0", "type": "address"}, {"internalType": "address", "name": "rateProvider1", "type": "address"}, {"internalType": "address", "name": "capManager", "type": "address"}, {"components": [{"internalType": "bool", "name": "capEnabled", "type": "bool"}, {"internalType": "uint120", "name": "perAddressCap", "type": "uint120"}, {"internalType": "uint128", "name": "globalCap", "type": "uint128"}], "internalType": "struct ICappedLiquidity.CapParams", "name": "capParams", "type": "tuple"}, {"internalType": "address", "name": "pauseManager", "type": "address"}], "internalType": "struct GyroECLPPool.GyroParams", "name": "params", "type": "tuple"}, {"internalType": "address", "name": "configAddress", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "owner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "spender", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Approval", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "capManager", "type": "address"}], "name": "CapManagerUpdated", "type": "event"}, {"anonymous": false, "inputs": [{"components": [{"internalType": "bool", "name": "capEnabled", "type": "bool"}, {"internalType": "uint120", "name": "perAddressCap", "type": "uint120"}, {"internalType": "uint128", "name": "globalCap", "type": "uint128"}], "indexed": false, "internalType": "struct ICappedLiquidity.CapParams", "name": "params", "type": "tuple"}], "name": "CapParamsUpdated", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bool", "name": "derivedParamsValidated", "type": "bool"}], "name": "ECLPDerivedParamsValidated", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bool", "name": "paramsValidated", "type": "bool"}], "name": "ECLPParamsValidated", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "invariantAfterJoin", "type": "uint256"}], "name": "InvariantAterInitializeJoin", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "oldInvariant", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "newInvariant", "type": "uint256"}], "name": "InvariantOldAndNew", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "oldPauseManager", "type": "address"}, {"indexed": false, "internalType": "address", "name": "newPauseManager", "type": "address"}], "name": "PauseManagerChanged", "type": "event"}, {"anonymous": false, "inputs": [], "name": "PausedLocally", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bool", "name": "paused", "type": "bool"}], "name": "PausedStateChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}], "name": "SwapFeePercentageChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"components": [{"internalType": "int256", "name": "x", "type": "int256"}, {"internalType": "int256", "name": "y", "type": "int256"}], "indexed": false, "internalType": "struct GyroECLPMath.Vector2", "name": "invariant", "type": "tuple"}, {"indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "SwapParams", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "from", "type": "address"}, {"indexed": true, "internalType": "address", "name": "to", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Transfer", "type": "event"}, {"anonymous": false, "inputs": [], "name": "UnpausedLocally", "type": "event"}, {"inputs": [], "name": "DOMAIN_SEPARATOR", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "spender", "type": "address"}], "name": "allowance", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "approve", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "balanceOf", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "capManager", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "capParams", "outputs": [{"components": [{"internalType": "bool", "name": "capEnabled", "type": "bool"}, {"internalType": "uint120", "name": "perAddressCap", "type": "uint120"}, {"internalType": "uint128", "name": "globalCap", "type": "uint128"}], "internalType": "struct ICappedLiquidity.CapParams", "name": "", "type": "tuple"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_pauseManager", "type": "address"}], "name": "changePauseManager", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "decimals", "outputs": [{"internalType": "uint8", "name": "", "type": "uint8"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "decreaseAllowance", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes4", "name": "selector", "type": "bytes4"}], "name": "getActionId", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getAuthorizer", "outputs": [{"internalType": "contract IAuthorizer", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getECLPParams", "outputs": [{"components": [{"internalType": "int256", "name": "alpha", "type": "int256"}, {"internalType": "int256", "name": "beta", "type": "int256"}, {"internalType": "int256", "name": "c", "type": "int256"}, {"internalType": "int256", "name": "s", "type": "int256"}, {"internalType": "int256", "name": "lambda", "type": "int256"}], "internalType": "struct GyroECLPMath.Params", "name": "params", "type": "tuple"}, {"components": [{"components": [{"internalType": "int256", "name": "x", "type": "int256"}, {"internalType": "int256", "name": "y", "type": "int256"}], "internalType": "struct GyroECLPMath.Vector2", "name": "tauAlpha", "type": "tuple"}, {"components": [{"internalType": "int256", "name": "x", "type": "int256"}, {"internalType": "int256", "name": "y", "type": "int256"}], "internalType": "struct GyroECLPMath.Vector2", "name": "tauBeta", "type": "tuple"}, {"internalType": "int256", "name": "u", "type": "int256"}, {"internalType": "int256", "name": "v", "type": "int256"}, {"internalType": "int256", "name": "w", "type": "int256"}, {"internalType": "int256", "name": "z", "type": "int256"}, {"internalType": "int256", "name": "dSq", "type": "int256"}], "internalType": "struct GyroECLPMath.DerivedParams", "name": "d", "type": "tuple"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getInvariant", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getLastInvariant", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getMiscData", "outputs": [{"internalType": "int256", "name": "logInvariant", "type": "int256"}, {"internalType": "int256", "name": "logTotalSupply", "type": "int256"}, {"internalType": "uint256", "name": "oracleSampleCreationTimestamp", "type": "uint256"}, {"internalType": "uint256", "name": "oracleIndex", "type": "uint256"}, {"internalType": "bool", "name": "oracleEnabled", "type": "bool"}, {"internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getNormalizedWeights", "outputs": [{"internalType": "uint256[]", "name": "", "type": "uint256[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getOwner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getPausedState", "outputs": [{"internalType": "bool", "name": "paused", "type": "bool"}, {"internalType": "uint256", "name": "pauseWindowEndTime", "type": "uint256"}, {"internalType": "uint256", "name": "bufferPeriodEndTime", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getPoolId", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getPrice", "outputs": [{"internalType": "uint256", "name": "spotPrice", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getRate", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getSwapFeePercentage", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getTokenRates", "outputs": [{"internalType": "uint256", "name": "rate0", "type": "uint256"}, {"internalType": "uint256", "name": "rate1", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getVault", "outputs": [{"internalType": "contract IVault", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "gyroConfig", "outputs": [{"internalType": "contract IGyroConfig", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "addedValue", "type": "uint256"}], "name": "increaseAllowance", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "name", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}], "name": "nonces", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "onExitPool", "outputs": [{"internalType": "uint256[]", "name": "", "type": "uint256[]"}, {"internalType": "uint256[]", "name": "", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "onJoinPool", "outputs": [{"internalType": "uint256[]", "name": "amountsIn", "type": "uint256[]"}, {"internalType": "uint256[]", "name": "dueProtocolFeeAmounts", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"components": [{"internalType": "enum IVault.SwapKind", "name": "kind", "type": "uint8"}, {"internalType": "contract IERC20", "name": "tokenIn", "type": "address"}, {"internalType": "contract IERC20", "name": "tokenOut", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}, {"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "address", "name": "from", "type": "address"}, {"internalType": "address", "name": "to", "type": "address"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "internalType": "struct IPoolSwapStructs.SwapRequest", "name": "request", "type": "tuple"}, {"internalType": "uint256", "name": "balanceTokenIn", "type": "uint256"}, {"internalType": "uint256", "name": "balanceTokenOut", "type": "uint256"}], "name": "onSwap", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "pause", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "pauseManager", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "value", "type": "uint256"}, {"internalType": "uint256", "name": "deadline", "type": "uint256"}, {"internalType": "uint8", "name": "v", "type": "uint8"}, {"internalType": "bytes32", "name": "r", "type": "bytes32"}, {"internalType": "bytes32", "name": "s", "type": "bytes32"}], "name": "permit", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "queryExit", "outputs": [{"internalType": "uint256", "name": "bptIn", "type": "uint256"}, {"internalType": "uint256[]", "name": "amountsOut", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "queryJoin", "outputs": [{"internalType": "uint256", "name": "bptOut", "type": "uint256"}, {"internalType": "uint256[]", "name": "amountsIn", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "rateProvider0", "outputs": [{"internalType": "contract IRateProvider", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "rateProvider1", "outputs": [{"internalType": "contract IRateProvider", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_capManager", "type": "address"}], "name": "setCapManager", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"components": [{"internalType": "bool", "name": "capEnabled", "type": "bool"}, {"internalType": "uint120", "name": "perAddressCap", "type": "uint120"}, {"internalType": "uint128", "name": "globalCap", "type": "uint128"}], "internalType": "struct ICappedLiquidity.CapParams", "name": "params", "type": "tuple"}], "name": "setCapParams", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bool", "name": "paused", "type": "bool"}], "name": "setPaused", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}], "name": "setSwapFeePercentage", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "symbol", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "totalSupply", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transfer", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transferFrom", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "unpause", "outputs": [], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"1": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-pool-utils/contracts/BalancerPoolToken.sol", "10": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol", "11": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol", "12": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/Authentication.sol", "13": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol", "16": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol", "17": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/ISignaturesValidator.sol", "18": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol", "19": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/InputHelpers.sol", "21": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/TemporarilyPausable.sol", "22": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/WordCodec.sol", "23": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/math/FixedPoint.sol", "24": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/math/LogExpMath.sol", "25": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/math/Math.sol", "26": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/misc/IWETH.sol", "27": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/EIP712.sol", "28": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ERC20.sol", "29": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ERC20Permit.sol", "30": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol", "31": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20Permit.sol", "32": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/SafeMath.sol", "33": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IAsset.sol", "34": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IAuthorizer.sol", "35": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IBasePool.sol", "36": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IFlashLoanRecipient.sol", "37": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IMinimalSwapInfoPool.sol", "38": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IPoolSwapStructs.sol", "39": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IProtocolFeesCollector.sol", "4": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-pool-utils/contracts/BasePoolAuthorization.sol", "40": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IVault.sol", "41": "/Users/daniel/.brownie/packages/node_modules/@openzeppelin/contracts/utils/SafeCast.sol", "42": "contracts/CappedLiquidity.sol", "43": "contracts/ExtensibleWeightedPool2Tokens.sol", "44": "contracts/LocallyPausable.sol", "45": "contracts/eclp/GyroECLPMath.sol", "46": "contracts/eclp/GyroECLPPool.sol", "47": "contracts/eclp/GyroECLPPoolErrors.sol", "50": "interfaces/ICappedLiquidity.sol", "51": "interfaces/IGyroConfig.sol", "53": "interfaces/ILocallyPausable.sol", "54": "libraries/GyroConfigHelpers.sol", "55": "libraries/GyroConfigKeys.sol", "56": "libraries/GyroErrors.sol", "57": "libraries/GyroFixedPoint.sol", "58": "libraries/GyroPoolMath.sol", "59": "libraries/SignedFixedPoint.sol", "7": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-pool-utils/contracts/interfaces/IRateProvider.sol", "9": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedMath.sol"}, "ast": {"absolutePath": "contracts/eclp/GyroECLPPool.sol", "exportedSymbols": {"Authentication": [21031], "BalancerPoolToken": [16521], "BasePool": [17701], "BasePoolAuthorization": [17794], "BaseWeightedPool": [16298], "CappedLiquidity": [9247], "EIP712": [21235], "ERC20": [19617], "ERC20Permit": [20808], "Errors": [12856], "ExtensibleWeightedPool2Tokens": [11456], "FixedPoint": [20655], "GyroConfigHelpers": [11740], "GyroConfigKeys": [11755], "GyroECLPMath": [2864], "GyroECLPPool": [4566], "GyroECLPPoolErrors": [6107], "GyroErrors": [6180], "GyroFixedPoint": [6840], "GyroPoolMath": [7628], "IAsset": [19942], "IAssetManager": [20890], "IAuthentication": [16309], "IAuthorizer": [19957], "IBasePool": [20954], "ICappedLiquidity": [12397], "IERC20": [12934], "IERC20Permit": [21271], "IFlashLoanRecipient": [19976], "IGyroConfig": [11634], "ILocallyPausable": [19663], "IMinimalSwapInfoPool": [19636], "IPoolSwapStructs": [21296], "IProtocolFeesCollector": [20041], "IRateProvider": [8636], "ISignaturesValidator": [19904], "ITemporarilyPausable": [19923], "IVault": [12363], "IWETH": [19938], "InputHelpers": [5460], "LocallyPausable": [11566], "LogCompression": [18959], "LogExpMath": [14232], "Math": [5749], "SafeCast": [6062], "SafeMath": [21109], "SignedFixedPoint": [8628], "TemporarilyPausable": [19139], "WeightedMath": [18892], "WeightedPool2TokensMiscData": [8851], "WeightedPoolUserDataHelpers": [9061], "WordCodec": [15073], "_grequire": [6125, 6144], "_grevert": [6156, 6176], "_require": [12451], "_revert": [12459]}, "id": 4567, "license": "LicenseRef-Gyro-1.0", "nodeType": "SourceUnit", "nodes": [{"id": 2866, "literals": ["solidity", "0.7", ".6"], "nodeType": "PragmaDirective", "src": "178:22:46"}, {"id": 2867, "literals": ["experimental", "ABIEncoderV2"], "nodeType": "PragmaDirective", "src": "201:33:46"}, {"absolutePath": "libraries/GyroFixedPoint.sol", "file": "../../libraries/GyroFixedPoint.sol", "id": 2868, "nodeType": "ImportDirective", "scope": 4567, "sourceUnit": 6841, "src": "312:44:46", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol", "file": "@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol", "id": 2869, "nodeType": "ImportDirective", "scope": 4567, "sourceUnit": 9062, "src": "358:83:46", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol", "file": "@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol", "id": 2870, "nodeType": "ImportDirective", "scope": 4567, "sourceUnit": 8852, "src": "442:83:46", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/Users/daniel/.brownie/packages/node_modules/@balancer-labs/v2-pool-utils/contracts/interfaces/IRateProvider.sol", "file": "@balancer-labs/v2-pool-utils/contracts/interfaces/IRateProvider.sol", "id": 2871, "nodeType": "ImportDirective", "scope": 4567, "sourceUnit": 8637, "src": "526:77:46", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/GyroConfigKeys.sol", "file": "../../libraries/GyroConfigKeys.sol", "id": 2872, "nodeType": "ImportDirective", "scope": 4567, "sourceUnit": 11756, "src": "605:44:46", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/GyroConfigHelpers.sol", "file": "../../libraries/GyroConfigHelpers.sol", "id": 2873, "nodeType": "ImportDirective", "scope": 4567, "sourceUnit": 11741, "src": "650:47:46", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/GyroErrors.sol", "file": "../../libraries/GyroErrors.sol", "id": 2874, "nodeType": "ImportDirective", "scope": 4567, "sourceUnit": 6181, "src": "698:40:46", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/IGyroConfig.sol", "file": "../../interfaces/IGyroConfig.sol", "id": 2875, "nodeType": "ImportDirective", "scope": 4567, "sourceUnit": 11635, "src": "739:42:46", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/GyroPoolMath.sol", "file": "../../libraries/GyroPoolMath.sol", "id": 2876, "nodeType": "ImportDirective", "scope": 4567, "sourceUnit": 7629, "src": "782:42:46", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/ExtensibleWeightedPool2Tokens.sol", "file": "../ExtensibleWeightedPool2Tokens.sol", "id": 2877, "nodeType": "ImportDirective", "scope": 4567, "sourceUnit": 11457, "src": "826:46:46", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/eclp/GyroECLPMath.sol", "file": "./GyroECLPMath.sol", "id": 2878, "nodeType": "ImportDirective", "scope": 4567, "sourceUnit": 2865, "src": "873:28:46", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/CappedLiquidity.sol", "file": "../CappedLiquidity.sol", "id": 2879, "nodeType": "ImportDirective", "scope": 4567, "sourceUnit": 9248, "src": "902:32:46", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/LocallyPausable.sol", "file": "../LocallyPausable.sol", "id": 2880, "nodeType": "ImportDirective", "scope": 4567, "sourceUnit": 11567, "src": "935:32:46", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 2881, "name": "ExtensibleWeightedPool2Tokens", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 11456, "src": "994:29:46", "typeDescriptions": {"typeIdentifier": "t_contract$_ExtensibleWeightedPool2Tokens_$11456", "typeString": "contract ExtensibleWeightedPool2Tokens"}}, "id": 2882, "nodeType": "InheritanceSpecifier", "src": "994:29:46"}, {"baseName": {"id": 2883, "name": "CappedLiquidity", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9247, "src": "1025:15:46", "typeDescriptions": {"typeIdentifier": "t_contract$_CappedLiquidity_$9247", "typeString": "contract CappedLiquidity"}}, "id": 2884, "nodeType": "InheritanceSpecifier", "src": "1025:15:46"}, {"baseName": {"id": 2885, "name": "LocallyPausable", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 11566, "src": "1042:15:46", "typeDescriptions": {"typeIdentifier": "t_contract$_LocallyPausable_$11566", "typeString": "contract LocallyPausable"}}, "id": 2886, "nodeType": "InheritanceSpecifier", "src": "1042:15:46"}], "contractDependencies": [9247, 11456, 11566, 12397, 12934, 16309, 16521, 17794, 19139, 19617, 19636, 19663, 19923, 20808, 20954, 21031, 21235, 21271, 21296], "contractKind": "contract", "fullyImplemented": true, "id": 4566, "linearizedBaseContracts": [4566, 11566, 19663, 9247, 12397, 11456, 19139, 19923, 16521, 20808, 21235, 21271, 19617, 12934, 17794, 21031, 16309, 19636, 20954, 21296], "name": "GyroECLPPool", "nodeType": "ContractDefinition", "nodes": [{"id": 2889, "libraryName": {"id": 2887, "name": "GyroFixedPoint", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 6840, "src": "1070:14:46", "typeDescriptions": {"typeIdentifier": "t_contract$_GyroFixedPoint_$6840", "typeString": "library GyroFixedPoint"}}, "nodeType": "UsingForDirective", "src": "1064:33:46", "typeName": {"id": 2888, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1089:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"id": 2892, "libraryName": {"id": 2890, "name": "WeightedPoolUserDataHelpers", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9061, "src": "1108:27:46", "typeDescriptions": {"typeIdentifier": "t_contract$_WeightedPoolUserDataHelpers_$9061", "typeString": "library WeightedPoolUserDataHelpers"}}, "nodeType": "UsingForDirective", "src": "1102:44:46", "typeName": {"id": 2891, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "1140:5:46", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}}, {"id": 2895, "libraryName": {"id": 2893, "name": "WeightedPool2TokensMiscData", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 8851, "src": "1157:27:46", "typeDescriptions": {"typeIdentifier": "t_contract$_WeightedPool2TokensMiscData_$8851", "typeString": "library WeightedPool2TokensMiscData"}}, "nodeType": "UsingForDirective", "src": "1151:46:46", "typeName": {"id": 2894, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1189:7:46", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}}, {"id": 2898, "libraryName": {"id": 2896, "name": "SafeCast", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 6062, "src": "1208:8:46", "typeDescriptions": {"typeIdentifier": "t_contract$_SafeCast_$6062", "typeString": "library SafeCast"}}, "nodeType": "UsingForDirective", "src": "1202:26:46", "typeName": {"id": 2897, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1221:6:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}}, {"id": 2901, "libraryName": {"id": 2899, "name": "SafeCast", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 6062, "src": "1239:8:46", "typeDescriptions": {"typeIdentifier": "t_contract$_SafeCast_$6062", "typeString": "library SafeCast"}}, "nodeType": "UsingForDirective", "src": "1233:27:46", "typeName": {"id": 2900, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1252:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"id": 2904, "libraryName": {"id": 2902, "name": "GyroConfigHelpers", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 11740, "src": "1271:17:46", "typeDescriptions": {"typeIdentifier": "t_contract$_GyroConfigHelpers_$11740", "typeString": "library GyroConfigHelpers"}}, "nodeType": "UsingForDirective", "src": "1265:40:46", "typeName": {"id": 2903, "name": "IGyroConfig", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 11634, "src": "1293:11:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$11634", "typeString": "contract IGyroConfig"}}}, {"constant": true, "id": 2907, "mutability": "constant", "name": "_MINIMUM_BPT", "nodeType": "VariableDeclaration", "scope": 4566, "src": "1311:43:46", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2905, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1311:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "316536", "id": 2906, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1351:3:46", "typeDescriptions": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}, "value": "1e6"}, "visibility": "private"}, {"constant": true, "id": 2910, "mutability": "constant", "name": "POOL_TYPE", "nodeType": "VariableDeclaration", "scope": 4566, "src": "1360:43:46", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 2908, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1360:7:46", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "value": {"hexValue": "45434c50", "id": 2909, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1397:6:46", "typeDescriptions": {"typeIdentifier": "t_stringliteral_8dbd83a43a5010f737e1030b874ea8c2e3ce89e5c2c6c0d68716e7b6c28aef4d", "typeString": "literal_string \"ECLP\""}, "value": "ECLP"}, "visibility": "private"}, {"constant": false, "documentation": {"id": 2911, "nodeType": "StructuredDocumentation", "src": "1410:36:46", "text": "@dev Parameters of the ECLP pool"}, "id": 2913, "mutability": "immutable", "name": "_paramsAlpha", "nodeType": "VariableDeclaration", "scope": 4566, "src": "1451:38:46", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 2912, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1451:6:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 2915, "mutability": "immutable", "name": "_paramsBeta", "nodeType": "VariableDeclaration", "scope": 4566, "src": "1495:37:46", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 2914, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1495:6:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 2917, "mutability": "immutable", "name": "_paramsC", "nodeType": "VariableDeclaration", "scope": 4566, "src": "1538:34:46", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 2916, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1538:6:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 2919, "mutability": "immutable", "name": "_paramsS", "nodeType": "VariableDeclaration", "scope": 4566, "src": "1578:34:46", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 2918, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1578:6:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 2921, "mutability": "immutable", "name": "_paramsLambda", "nodeType": "VariableDeclaration", "scope": 4566, "src": "1618:39:46", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 2920, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1618:6:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 2923, "mutability": "immutable", "name": "_tauAlphaX", "nodeType": "VariableDeclaration", "scope": 4566, "src": "1663:36:46", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 2922, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1663:6:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 2925, "mutability": "immutable", "name": "_tauAlphaY", "nodeType": "VariableDeclaration", "scope": 4566, "src": "1705:36:46", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 2924, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1705:6:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 2927, "mutability": "immutable", "name": "_tauBetaX", "nodeType": "VariableDeclaration", "scope": 4566, "src": "1747:35:46", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 2926, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1747:6:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 2929, "mutability": "immutable", "name": "_tauBetaY", "nodeType": "VariableDeclaration", "scope": 4566, "src": "1788:35:46", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 2928, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1788:6:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 2931, "mutability": "immutable", "name": "_u", "nodeType": "VariableDeclaration", "scope": 4566, "src": "1829:28:46", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 2930, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1829:6:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 2933, "mutability": "immutable", "name": "_v", "nodeType": "VariableDeclaration", "scope": 4566, "src": "1863:28:46", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 2932, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1863:6:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 2935, "mutability": "immutable", "name": "_w", "nodeType": "VariableDeclaration", "scope": 4566, "src": "1897:28:46", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 2934, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1897:6:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 2937, "mutability": "immutable", "name": "_z", "nodeType": "VariableDeclaration", "scope": 4566, "src": "1931:28:46", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 2936, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1931:6:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 2939, "mutability": "immutable", "name": "_dSq", "nodeType": "VariableDeclaration", "scope": 4566, "src": "1965:30:46", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 2938, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1965:6:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "functionSelector": "44bbdb55", "id": 2941, "mutability": "mutable", "name": "gyroConfig", "nodeType": "VariableDeclaration", "scope": 4566, "src": "2002:29:46", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$11634", "typeString": "contract IGyroConfig"}, "typeName": {"id": 2940, "name": "IGyroConfig", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 11634, "src": "2002:11:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$11634", "typeString": "contract IGyroConfig"}}, "visibility": "public"}, {"constant": false, "documentation": {"id": 2942, "nodeType": "StructuredDocumentation", "src": "2038:25:46", "text": "@dev for rate scaling"}, "functionSelector": "828a7c34", "id": 2944, "mutability": "immutable", "name": "rateProvider0", "nodeType": "VariableDeclaration", "scope": 4566, "src": "2068:44:46", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$8636", "typeString": "contract IRateProvider"}, "typeName": {"id": 2943, "name": "IRateProvider", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 8636, "src": "2068:13:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$8636", "typeString": "contract IRateProvider"}}, "visibility": "public"}, {"constant": false, "functionSelector": "62ced092", "id": 2946, "mutability": "immutable", "name": "rateProvider1", "nodeType": "VariableDeclaration", "scope": 4566, "src": "2118:44:46", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$8636", "typeString": "contract IRateProvider"}, "typeName": {"id": 2945, "name": "IRateProvider", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 8636, "src": "2118:13:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$8636", "typeString": "contract IRateProvider"}}, "visibility": "public"}, {"canonicalName": "GyroECLPPool.GyroParams", "id": 2963, "members": [{"constant": false, "id": 2948, "mutability": "mutable", "name": "baseParams", "nodeType": "VariableDeclaration", "scope": 2963, "src": "2197:24:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$9363_storage_ptr", "typeString": "struct ExtensibleWeightedPool2Tokens.NewPoolParams"}, "typeName": {"id": 2947, "name": "NewPoolParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9363, "src": "2197:13:46", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$9363_storage_ptr", "typeString": "struct ExtensibleWeightedPool2Tokens.NewPoolParams"}}, "visibility": "internal"}, {"constant": false, "id": 2950, "mutability": "mutable", "name": "eclpParams", "nodeType": "VariableDeclaration", "scope": 2963, "src": "2231:30:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_storage_ptr", "typeString": "struct GyroECLPMath.Params"}, "typeName": {"id": 2949, "name": "GyroECLPMath.Params", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 64, "src": "2231:19:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_storage_ptr", "typeString": "struct GyroECLPMath.Params"}}, "visibility": "internal"}, {"constant": false, "id": 2952, "mutability": "mutable", "name": "derivedEclpParams", "nodeType": "VariableDeclaration", "scope": 2963, "src": "2271:44:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_storage_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}, "typeName": {"id": 2951, "name": "GyroECLPMath.DerivedParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 79, "src": "2271:26:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_storage_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}}, "visibility": "internal"}, {"constant": false, "id": 2954, "mutability": "mutable", "name": "rateProvider0", "nodeType": "VariableDeclaration", "scope": 2963, "src": "2325:21:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2953, "name": "address", "nodeType": "ElementaryTypeName", "src": "2325:7:46", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 2956, "mutability": "mutable", "name": "rateProvider1", "nodeType": "VariableDeclaration", "scope": 2963, "src": "2356:21:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2955, "name": "address", "nodeType": "ElementaryTypeName", "src": "2356:7:46", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 2958, "mutability": "mutable", "name": "capManager", "nodeType": "VariableDeclaration", "scope": 2963, "src": "2387:18:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2957, "name": "address", "nodeType": "ElementaryTypeName", "src": "2387:7:46", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 2960, "mutability": "mutable", "name": "capParams", "nodeType": "VariableDeclaration", "scope": 2963, "src": "2415:19:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_CapParams_$12381_storage_ptr", "typeString": "struct ICappedLiquidity.CapParams"}, "typeName": {"id": 2959, "name": "CapParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 12381, "src": "2415:9:46", "typeDescriptions": {"typeIdentifier": "t_struct$_CapParams_$12381_storage_ptr", "typeString": "struct ICappedLiquidity.CapParams"}}, "visibility": "internal"}, {"constant": false, "id": 2962, "mutability": "mutable", "name": "pauseManager", "nodeType": "VariableDeclaration", "scope": 2963, "src": "2444:20:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2961, "name": "address", "nodeType": "ElementaryTypeName", "src": "2444:7:46", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "name": "GyroParams", "nodeType": "StructDefinition", "scope": 4566, "src": "2169:302:46", "visibility": "public"}, {"anonymous": false, "id": 2967, "name": "ECLPParamsValidated", "nodeType": "EventDefinition", "parameters": {"id": 2966, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2965, "indexed": false, "mutability": "mutable", "name": "paramsValidated", "nodeType": "VariableDeclaration", "scope": 2967, "src": "2503:20:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 2964, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2503:4:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "2502:22:46"}, "src": "2477:48:46"}, {"anonymous": false, "id": 2971, "name": "ECLPDerivedParamsValidated", "nodeType": "EventDefinition", "parameters": {"id": 2970, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2969, "indexed": false, "mutability": "mutable", "name": "derivedParamsValidated", "nodeType": "VariableDeclaration", "scope": 2971, "src": "2563:27:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 2968, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2563:4:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "2562:29:46"}, "src": "2530:62:46"}, {"anonymous": false, "id": 2975, "name": "InvariantAterInitializeJoin", "nodeType": "EventDefinition", "parameters": {"id": 2974, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2973, "indexed": false, "mutability": "mutable", "name": "invariantAfterJoin", "nodeType": "VariableDeclaration", "scope": 2975, "src": "2632:26:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2972, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2632:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2631:28:46"}, "src": "2598:62:46"}, {"anonymous": false, "id": 2981, "name": "InvariantOldAndNew", "nodeType": "EventDefinition", "parameters": {"id": 2980, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2977, "indexed": false, "mutability": "mutable", "name": "oldInvariant", "nodeType": "VariableDeclaration", "scope": 2981, "src": "2690:20:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2976, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2690:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 2979, "indexed": false, "mutability": "mutable", "name": "newInvariant", "nodeType": "VariableDeclaration", "scope": 2981, "src": "2712:20:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2978, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2712:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2689:44:46"}, "src": "2665:69:46"}, {"anonymous": false, "id": 2990, "name": "SwapParams", "nodeType": "EventDefinition", "parameters": {"id": 2989, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2984, "indexed": false, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 2990, "src": "2757:18:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 2982, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2757:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2983, "nodeType": "ArrayTypeName", "src": "2757:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 2986, "indexed": false, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 2990, "src": "2777:30:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$84_memory_ptr", "typeString": "struct GyroECLPMath.Vector2"}, "typeName": {"id": 2985, "name": "GyroECLPMath.Vector2", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 84, "src": "2777:20:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$84_storage_ptr", "typeString": "struct GyroECLPMath.Vector2"}}, "visibility": "internal"}, {"constant": false, "id": 2988, "indexed": false, "mutability": "mutable", "name": "amount", "nodeType": "VariableDeclaration", "scope": 2990, "src": "2809:14:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2987, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2809:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2756:68:46"}, "src": "2740:85:46"}, {"body": {"id": 3134, "nodeType": "Block", "src": "3059:1265:46", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 3017, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 3012, "name": "configAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2994, "src": "3079:13:46", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "307830", "id": 3015, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3104:3:46", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0x0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 3014, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3096:7:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 3013, "name": "address", "nodeType": "ElementaryTypeName", "src": "3096:7:46", "typeDescriptions": {}}}, "id": 3016, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3096:12:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "3079:29:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 3018, "name": "GyroECLPPoolErrors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6107, "src": "3110:18:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPPoolErrors_$6107_$", "typeString": "type(library GyroECLPPoolErrors)"}}, "id": 3019, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ADDRESS_IS_ZERO_ADDRESS", "nodeType": "MemberAccess", "referencedDeclaration": 6067, "src": "3110:42:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 3011, "name": "_grequire", "nodeType": "Identifier", "overloadedDeclarations": [6125, 6144], "referencedDeclaration": 6125, "src": "3069:9:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 3020, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3069:84:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 3021, "nodeType": "ExpressionStatement", "src": "3069:84:46"}, {"expression": {"arguments": [{"expression": {"id": 3025, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2992, "src": "3192:6:46", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$2963_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 3026, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "eclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 2950, "src": "3192:17:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}], "expression": {"id": 3022, "name": "GyroECLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2864, "src": "3164:12:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPMath_$2864_$", "typeString": "type(library GyroECLPMath)"}}, "id": 3024, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "validateParams", "nodeType": "MemberAccess", "referencedDeclaration": 172, "src": "3164:27:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_Params_$64_memory_ptr_$returns$__$", "typeString": "function (struct GyroECLPMath.Params memory) pure"}}, "id": 3027, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3164:46:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 3028, "nodeType": "ExpressionStatement", "src": "3164:46:46"}, {"eventCall": {"arguments": [{"hexValue": "74727565", "id": 3030, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3245:4:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 3029, "name": "ECLPParamsValidated", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2967, "src": "3225:19:46", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$", "typeString": "function (bool)"}}, "id": 3031, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3225:25:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 3032, "nodeType": "EmitStatement", "src": "3220:30:46"}, {"expression": {"arguments": [{"expression": {"id": 3036, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2992, "src": "3302:6:46", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$2963_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 3037, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "eclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 2950, "src": "3302:17:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"expression": {"id": 3038, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2992, "src": "3321:6:46", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$2963_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 3039, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "derivedEclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 2952, "src": "3321:24:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}], "expression": {"id": 3033, "name": "GyroECLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2864, "src": "3261:12:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPMath_$2864_$", "typeString": "type(library GyroECLPMath)"}}, "id": 3035, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "validateDerivedParamsLimits", "nodeType": "MemberAccess", "referencedDeclaration": 308, "src": "3261:40:46", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_struct$_Params_$64_memory_ptr_$_t_struct$_DerivedParams_$79_memory_ptr_$returns$__$", "typeString": "function (struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory) pure"}}, "id": 3040, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3261:85:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 3041, "nodeType": "ExpressionStatement", "src": "3261:85:46"}, {"eventCall": {"arguments": [{"hexValue": "74727565", "id": 3043, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3388:4:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 3042, "name": "ECLPDerivedParamsValidated", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2971, "src": "3361:26:46", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$", "typeString": "function (bool)"}}, "id": 3044, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3361:32:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 3045, "nodeType": "EmitStatement", "src": "3356:37:46"}, {"expression": {"id": 3068, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 3046, "name": "_paramsAlpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2913, "src": "3405:12:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 3047, "name": "_paramsBeta", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2915, "src": "3419:11:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 3048, "name": "_paramsC", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2917, "src": "3432:8:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 3049, "name": "_paramsS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2919, "src": "3442:8:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 3050, "name": "_paramsLambda", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2921, "src": "3452:13:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 3051, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "3404:62:46", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256,int256,int256,int256)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"components": [{"expression": {"expression": {"id": 3052, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2992, "src": "3483:6:46", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$2963_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 3053, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "eclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 2950, "src": "3483:17:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, "id": 3054, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "alpha", "nodeType": "MemberAccess", "referencedDeclaration": 55, "src": "3483:23:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"id": 3055, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2992, "src": "3520:6:46", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$2963_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 3056, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "eclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 2950, "src": "3520:17:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, "id": 3057, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "beta", "nodeType": "MemberAccess", "referencedDeclaration": 57, "src": "3520:22:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"id": 3058, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2992, "src": "3556:6:46", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$2963_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 3059, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "eclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 2950, "src": "3556:17:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, "id": 3060, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "c", "nodeType": "MemberAccess", "referencedDeclaration": 59, "src": "3556:19:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"id": 3061, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2992, "src": "3589:6:46", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$2963_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 3062, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "eclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 2950, "src": "3589:17:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, "id": 3063, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "s", "nodeType": "MemberAccess", "referencedDeclaration": 61, "src": "3589:19:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"id": 3064, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2992, "src": "3622:6:46", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$2963_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 3065, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "eclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 2950, "src": "3622:17:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, "id": 3066, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "lambda", "nodeType": "MemberAccess", "referencedDeclaration": 63, "src": "3622:24:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 3067, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "3469:187:46", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256,int256,int256,int256)"}}, "src": "3404:252:46", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 3069, "nodeType": "ExpressionStatement", "src": "3404:252:46"}, {"expression": {"id": 3112, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 3070, "name": "_tauAlphaX", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2923, "src": "3668:10:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 3071, "name": "_tauAlphaY", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2925, "src": "3680:10:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 3072, "name": "_tauBetaX", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2927, "src": "3692:9:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 3073, "name": "_tauBetaY", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2929, "src": "3703:9:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 3074, "name": "_u", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2931, "src": "3714:2:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 3075, "name": "_v", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2933, "src": "3718:2:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 3076, "name": "_w", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2935, "src": "3722:2:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 3077, "name": "_z", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2937, "src": "3726:2:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 3078, "name": "_dSq", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2939, "src": "3730:4:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 3079, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "3667:68:46", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256,int256,int256,int256,int256,int256,int256,int256)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"components": [{"expression": {"expression": {"expression": {"id": 3080, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2992, "src": "3752:6:46", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$2963_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 3081, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "derivedEclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 2952, "src": "3752:24:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 3082, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tauAlpha", "nodeType": "MemberAccess", "referencedDeclaration": 66, "src": "3752:33:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$84_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, "id": 3083, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "x", "nodeType": "MemberAccess", "referencedDeclaration": 81, "src": "3752:35:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"expression": {"id": 3084, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2992, "src": "3801:6:46", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$2963_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 3085, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "derivedEclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 2952, "src": "3801:24:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 3086, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tauAlpha", "nodeType": "MemberAccess", "referencedDeclaration": 66, "src": "3801:33:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$84_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, "id": 3087, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "y", "nodeType": "MemberAccess", "referencedDeclaration": 83, "src": "3801:35:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"expression": {"id": 3088, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2992, "src": "3850:6:46", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$2963_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 3089, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "derivedEclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 2952, "src": "3850:24:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 3090, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tauBeta", "nodeType": "MemberAccess", "referencedDeclaration": 68, "src": "3850:32:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$84_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, "id": 3091, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "x", "nodeType": "MemberAccess", "referencedDeclaration": 81, "src": "3850:34:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"expression": {"id": 3092, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2992, "src": "3898:6:46", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$2963_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 3093, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "derivedEclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 2952, "src": "3898:24:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 3094, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tauBeta", "nodeType": "MemberAccess", "referencedDeclaration": 68, "src": "3898:32:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$84_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, "id": 3095, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "y", "nodeType": "MemberAccess", "referencedDeclaration": 83, "src": "3898:34:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"id": 3096, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2992, "src": "3946:6:46", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$2963_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 3097, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "derivedEclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 2952, "src": "3946:24:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 3098, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "u", "nodeType": "MemberAccess", "referencedDeclaration": 70, "src": "3946:26:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"id": 3099, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2992, "src": "3986:6:46", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$2963_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 3100, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "derivedEclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 2952, "src": "3986:24:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 3101, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "v", "nodeType": "MemberAccess", "referencedDeclaration": 72, "src": "3986:26:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"id": 3102, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2992, "src": "4026:6:46", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$2963_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 3103, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "derivedEclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 2952, "src": "4026:24:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 3104, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "w", "nodeType": "MemberAccess", "referencedDeclaration": 74, "src": "4026:26:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"id": 3105, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2992, "src": "4066:6:46", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$2963_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 3106, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "derivedEclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 2952, "src": "4066:24:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 3107, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "z", "nodeType": "MemberAccess", "referencedDeclaration": 76, "src": "4066:26:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"id": 3108, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2992, "src": "4106:6:46", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$2963_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 3109, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "derivedEclpParams", "nodeType": "MemberAccess", "referencedDeclaration": 2952, "src": "4106:24:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 3110, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "dSq", "nodeType": "MemberAccess", "referencedDeclaration": 78, "src": "4106:28:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 3111, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "3738:406:46", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256,int256,int256,int256,int256,int256,int256,int256)"}}, "src": "3667:477:46", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 3113, "nodeType": "ExpressionStatement", "src": "3667:477:46"}, {"expression": {"id": 3118, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 3114, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2941, "src": "4155:10:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$11634", "typeString": "contract IGyroConfig"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 3116, "name": "configAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2994, "src": "4180:13:46", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 3115, "name": "IGyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11634, "src": "4168:11:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IGyroConfig_$11634_$", "typeString": "type(contract IGyroConfig)"}}, "id": 3117, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4168:26:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$11634", "typeString": "contract IGyroConfig"}}, "src": "4155:39:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$11634", "typeString": "contract IGyroConfig"}}, "id": 3119, "nodeType": "ExpressionStatement", "src": "4155:39:46"}, {"expression": {"id": 3125, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 3120, "name": "rateProvider0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2944, "src": "4205:13:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$8636", "typeString": "contract IRateProvider"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 3122, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2992, "src": "4235:6:46", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$2963_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 3123, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "rateProvider0", "nodeType": "MemberAccess", "referencedDeclaration": 2954, "src": "4235:20:46", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 3121, "name": "IRateProvider", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8636, "src": "4221:13:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IRateProvider_$8636_$", "typeString": "type(contract IRateProvider)"}}, "id": 3124, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4221:35:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$8636", "typeString": "contract IRateProvider"}}, "src": "4205:51:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$8636", "typeString": "contract IRateProvider"}}, "id": 3126, "nodeType": "ExpressionStatement", "src": "4205:51:46"}, {"expression": {"id": 3132, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 3127, "name": "rateProvider1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2946, "src": "4266:13:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$8636", "typeString": "contract IRateProvider"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 3129, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2992, "src": "4296:6:46", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$2963_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 3130, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "rateProvider1", "nodeType": "MemberAccess", "referencedDeclaration": 2956, "src": "4296:20:46", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 3128, "name": "IRateProvider", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8636, "src": "4282:13:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IRateProvider_$8636_$", "typeString": "type(contract IRateProvider)"}}, "id": 3131, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4282:35:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$8636", "typeString": "contract IRateProvider"}}, "src": "4266:51:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$8636", "typeString": "contract IRateProvider"}}, "id": 3133, "nodeType": "ExpressionStatement", "src": "4266:51:46"}]}, "id": 3135, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"expression": {"id": 2997, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2992, "src": "2930:6:46", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$2963_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 2998, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "baseParams", "nodeType": "MemberAccess", "referencedDeclaration": 2948, "src": "2930:17:46", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$9363_memory_ptr", "typeString": "struct ExtensibleWeightedPool2Tokens.NewPoolParams memory"}}], "id": 2999, "modifierName": {"id": 2996, "name": "ExtensibleWeightedPool2Tokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11456, "src": "2900:29:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ExtensibleWeightedPool2Tokens_$11456_$", "typeString": "type(contract ExtensibleWeightedPool2Tokens)"}}, "nodeType": "ModifierInvocation", "src": "2900:48:46"}, {"arguments": [{"expression": {"id": 3001, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2992, "src": "2973:6:46", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$2963_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 3002, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "capManager", "nodeType": "MemberAccess", "referencedDeclaration": 2958, "src": "2973:17:46", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 3003, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2992, "src": "2992:6:46", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$2963_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 3004, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "capParams", "nodeType": "MemberAccess", "referencedDeclaration": 2960, "src": "2992:16:46", "typeDescriptions": {"typeIdentifier": "t_struct$_CapParams_$12381_memory_ptr", "typeString": "struct ICappedLiquidity.CapParams memory"}}], "id": 3005, "modifierName": {"id": 3000, "name": "CappedLiquidity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9247, "src": "2957:15:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_CappedLiquidity_$9247_$", "typeString": "type(contract CappedLiquidity)"}}, "nodeType": "ModifierInvocation", "src": "2957:52:46"}, {"arguments": [{"expression": {"id": 3007, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2992, "src": "3034:6:46", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$2963_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams memory"}}, "id": 3008, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "pauseManager", "nodeType": "MemberAccess", "referencedDeclaration": 2962, "src": "3034:19:46", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 3009, "modifierName": {"id": 3006, "name": "LocallyPausable", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11566, "src": "3018:15:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_LocallyPausable_$11566_$", "typeString": "type(contract LocallyPausable)"}}, "nodeType": "ModifierInvocation", "src": "3018:36:46"}], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 2995, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2992, "mutability": "mutable", "name": "params", "nodeType": "VariableDeclaration", "scope": 3135, "src": "2843:24:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$2963_memory_ptr", "typeString": "struct GyroECLPPool.GyroParams"}, "typeName": {"id": 2991, "name": "GyroParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 2963, "src": "2843:10:46", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$2963_storage_ptr", "typeString": "struct GyroECLPPool.GyroParams"}}, "visibility": "internal"}, {"constant": false, "id": 2994, "mutability": "mutable", "name": "configAddress", "nodeType": "VariableDeclaration", "scope": 3135, "src": "2869:21:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2993, "name": "address", "nodeType": "ElementaryTypeName", "src": "2869:7:46", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "2842:49:46"}, "returnParameters": {"id": 3010, "nodeType": "ParameterList", "parameters": [], "src": "3059:0:46"}, "scope": 4566, "src": "2831:1493:46", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 3205, "nodeType": "Block", "src": "4529:319:46", "statements": [{"expression": {"id": 3161, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"expression": {"id": 3143, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3139, "src": "4540:6:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, "id": 3145, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "alpha", "nodeType": "MemberAccess", "referencedDeclaration": 55, "src": "4540:12:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"id": 3146, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3139, "src": "4554:6:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, "id": 3147, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "beta", "nodeType": "MemberAccess", "referencedDeclaration": 57, "src": "4554:11:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"id": 3148, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3139, "src": "4567:6:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, "id": 3149, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "c", "nodeType": "MemberAccess", "referencedDeclaration": 59, "src": "4567:8:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"id": 3150, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3139, "src": "4577:6:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, "id": 3151, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "s", "nodeType": "MemberAccess", "referencedDeclaration": 61, "src": "4577:8:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"id": 3152, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3139, "src": "4587:6:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, "id": 3153, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "lambda", "nodeType": "MemberAccess", "referencedDeclaration": 63, "src": "4587:13:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 3154, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "4539:62:46", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256,int256,int256,int256)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"components": [{"id": 3155, "name": "_paramsAlpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2913, "src": "4605:12:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 3156, "name": "_paramsBeta", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2915, "src": "4619:11:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 3157, "name": "_paramsC", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2917, "src": "4632:8:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 3158, "name": "_paramsS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2919, "src": "4642:8:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 3159, "name": "_paramsLambda", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2921, "src": "4652:13:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 3160, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4604:62:46", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256,int256,int256,int256)"}}, "src": "4539:127:46", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 3162, "nodeType": "ExpressionStatement", "src": "4539:127:46"}, {"expression": {"id": 3183, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"expression": {"expression": {"id": 3163, "name": "d", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3141, "src": "4677:1:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 3166, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tauAlpha", "nodeType": "MemberAccess", "referencedDeclaration": 66, "src": "4677:10:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$84_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, "id": 3167, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "x", "nodeType": "MemberAccess", "referencedDeclaration": 81, "src": "4677:12:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"id": 3168, "name": "d", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3141, "src": "4691:1:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 3169, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tauAlpha", "nodeType": "MemberAccess", "referencedDeclaration": 66, "src": "4691:10:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$84_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, "id": 3170, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "y", "nodeType": "MemberAccess", "referencedDeclaration": 83, "src": "4691:12:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"id": 3171, "name": "d", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3141, "src": "4705:1:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 3172, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tauBeta", "nodeType": "MemberAccess", "referencedDeclaration": 68, "src": "4705:9:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$84_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, "id": 3173, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "x", "nodeType": "MemberAccess", "referencedDeclaration": 81, "src": "4705:11:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"expression": {"id": 3174, "name": "d", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3141, "src": "4718:1:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 3175, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tauBeta", "nodeType": "MemberAccess", "referencedDeclaration": 68, "src": "4718:9:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$84_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, "id": 3176, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "y", "nodeType": "MemberAccess", "referencedDeclaration": 83, "src": "4718:11:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 3177, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "4676:54:46", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256,int256,int256)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"components": [{"id": 3178, "name": "_tauAlphaX", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2923, "src": "4734:10:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 3179, "name": "_tauAlphaY", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2925, "src": "4746:10:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 3180, "name": "_tauBetaX", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2927, "src": "4758:9:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 3181, "name": "_tauBetaY", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2929, "src": "4769:9:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 3182, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4733:46:46", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256,int256,int256)"}}, "src": "4676:103:46", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 3184, "nodeType": "ExpressionStatement", "src": "4676:103:46"}, {"expression": {"id": 3203, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"expression": {"id": 3185, "name": "d", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3141, "src": "4790:1:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 3187, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "u", "nodeType": "MemberAccess", "referencedDeclaration": 70, "src": "4790:3:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"id": 3188, "name": "d", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3141, "src": "4795:1:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 3189, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "v", "nodeType": "MemberAccess", "referencedDeclaration": 72, "src": "4795:3:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"id": 3190, "name": "d", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3141, "src": "4800:1:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 3191, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "w", "nodeType": "MemberAccess", "referencedDeclaration": 74, "src": "4800:3:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"id": 3192, "name": "d", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3141, "src": "4805:1:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 3193, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "z", "nodeType": "MemberAccess", "referencedDeclaration": 76, "src": "4805:3:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"id": 3194, "name": "d", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3141, "src": "4810:1:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, "id": 3195, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "dSq", "nodeType": "MemberAccess", "referencedDeclaration": 78, "src": "4810:5:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 3196, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "4789:27:46", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256,int256,int256,int256)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"components": [{"id": 3197, "name": "_u", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2931, "src": "4820:2:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 3198, "name": "_v", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2933, "src": "4824:2:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 3199, "name": "_w", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2935, "src": "4828:2:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 3200, "name": "_z", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2937, "src": "4832:2:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 3201, "name": "_dSq", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2939, "src": "4836:4:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 3202, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4819:22:46", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_int256_$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256,int256,int256,int256)"}}, "src": "4789:52:46", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 3204, "nodeType": "ExpressionStatement", "src": "4789:52:46"}]}, "documentation": {"id": 3136, "nodeType": "StructuredDocumentation", "src": "4330:66:46", "text": "@dev reconstructs ECLP params structs from immutable arrays "}, "id": 3206, "implemented": true, "kind": "function", "modifiers": [], "name": "reconstructECLPParams", "nodeType": "FunctionDefinition", "parameters": {"id": 3137, "nodeType": "ParameterList", "parameters": [], "src": "4431:2:46"}, "returnParameters": {"id": 3142, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 3139, "mutability": "mutable", "name": "params", "nodeType": "VariableDeclaration", "scope": 3206, "src": "4457:33:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params"}, "typeName": {"id": 3138, "name": "GyroECLPMath.Params", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 64, "src": "4457:19:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_storage_ptr", "typeString": "struct GyroECLPMath.Params"}}, "visibility": "internal"}, {"constant": false, "id": 3141, "mutability": "mutable", "name": "d", "nodeType": "VariableDeclaration", "scope": 3206, "src": "4492:35:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}, "typeName": {"id": 3140, "name": "GyroECLPMath.DerivedParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 79, "src": "4492:26:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_storage_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}}, "visibility": "internal"}], "src": "4456:72:46"}, "scope": 4566, "src": "4401:447:46", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 3216, "nodeType": "Block", "src": "4974:47:46", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 3213, "name": "reconstructECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3206, "src": "4991:21:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_Params_$64_memory_ptr_$_t_struct$_DerivedParams_$79_memory_ptr_$", "typeString": "function () view returns (struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "id": 3214, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4991:23:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_struct$_Params_$64_memory_ptr_$_t_struct$_DerivedParams_$79_memory_ptr_$", "typeString": "tuple(struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "functionReturnParameters": 3212, "id": 3215, "nodeType": "Return", "src": "4984:30:46"}]}, "functionSelector": "7be219a2", "id": 3217, "implemented": true, "kind": "function", "modifiers": [], "name": "getECLPParams", "nodeType": "FunctionDefinition", "parameters": {"id": 3207, "nodeType": "ParameterList", "parameters": [], "src": "4876:2:46"}, "returnParameters": {"id": 3212, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 3209, "mutability": "mutable", "name": "params", "nodeType": "VariableDeclaration", "scope": 3217, "src": "4902:33:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params"}, "typeName": {"id": 3208, "name": "GyroECLPMath.Params", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 64, "src": "4902:19:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_storage_ptr", "typeString": "struct GyroECLPMath.Params"}}, "visibility": "internal"}, {"constant": false, "id": 3211, "mutability": "mutable", "name": "d", "nodeType": "VariableDeclaration", "scope": 3217, "src": "4937:35:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}, "typeName": {"id": 3210, "name": "GyroECLPMath.DerivedParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 79, "src": "4937:26:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_storage_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}}, "visibility": "internal"}], "src": "4901:72:46"}, "scope": 4566, "src": "4854:167:46", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 3252, "nodeType": "Block", "src": "5507:479:46", "statements": [{"assignments": [3228, 3230, null, null], "declarations": [{"constant": false, "id": 3228, "mutability": "mutable", "name": "cash", "nodeType": "VariableDeclaration", "scope": 3252, "src": "5735:12:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 3227, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5735:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 3230, "mutability": "mutable", "name": "managed", "nodeType": "VariableDeclaration", "scope": 3252, "src": "5749:15:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 3229, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5749:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, null, null], "id": 3238, "initialValue": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 3234, "name": "getPoolId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9493, "src": "5800:9:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$", "typeString": "function () view returns (bytes32)"}}, "id": 3235, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5800:11:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 3236, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3220, "src": "5813:5:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$12934", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_contract$_IERC20_$12934", "typeString": "contract IERC20"}], "expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 3231, "name": "getVault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16350, "src": "5772:8:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IVault_$12363_$", "typeString": "function () view returns (contract IVault)"}}, "id": 3232, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5772:10:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IVault_$12363", "typeString": "contract IVault"}}, "id": 3233, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getPoolTokenInfo", "nodeType": "MemberAccess", "referencedDeclaration": 12105, "src": "5772:27:46", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$_t_contract$_IERC20_$12934_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$", "typeString": "function (bytes32,contract IERC20) view external returns (uint256,uint256,uint256,address)"}}, "id": 3237, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5772:47:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$", "typeString": "tuple(uint256,uint256,uint256,address)"}}, "nodeType": "VariableDeclarationStatement", "src": "5734:85:46"}, {"expression": {"id": 3243, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 3239, "name": "balance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3225, "src": "5829:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 3242, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 3240, "name": "cash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3228, "src": "5839:4:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 3241, "name": "managed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3230, "src": "5846:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5839:14:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5829:24:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3244, "nodeType": "ExpressionStatement", "src": "5829:24:46"}, {"expression": {"id": 3250, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 3245, "name": "balance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3225, "src": "5939:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 3248, "name": "scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3222, "src": "5965:13:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 3246, "name": "balance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3225, "src": "5949:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3247, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mulDown", "nodeType": "MemberAccess", "referencedDeclaration": 6298, "src": "5949:15:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 3249, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5949:30:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5939:40:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3251, "nodeType": "ExpressionStatement", "src": "5939:40:46"}]}, "documentation": {"id": 3218, "nodeType": "StructuredDocumentation", "src": "5027:366:46", "text": "@dev Reads the balance of a token from the balancer vault and returns the scaled amount. Smaller storage access\n compared to getVault().getPoolTokens().\n Copied from the 3CLP *except* that for the 2CLP, the scalingFactor is interpreted as a regular integer, not a\n FixedPoint number. This is an inconsistency between the base contracts."}, "id": 3253, "implemented": true, "kind": "function", "modifiers": [], "name": "_getScaledTokenBalance", "nodeType": "FunctionDefinition", "parameters": {"id": 3223, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 3220, "mutability": "mutable", "name": "token", "nodeType": "VariableDeclaration", "scope": 3253, "src": "5430:12:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$12934", "typeString": "contract IERC20"}, "typeName": {"id": 3219, "name": "IERC20", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 12934, "src": "5430:6:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$12934", "typeString": "contract IERC20"}}, "visibility": "internal"}, {"constant": false, "id": 3222, "mutability": "mutable", "name": "scalingFactor", "nodeType": "VariableDeclaration", "scope": 3253, "src": "5444:21:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 3221, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5444:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5429:37:46"}, "returnParameters": {"id": 3226, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 3225, "mutability": "mutable", "name": "balance", "nodeType": "VariableDeclaration", "scope": 3253, "src": "5490:15:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 3224, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5490:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5489:17:46"}, "scope": 4566, "src": "5398:588:46", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 3292, "nodeType": "Block", "src": "6239:446:46", "statements": [{"expression": {"id": 3266, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 3260, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3258, "src": "6471:8:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "32", "id": 3264, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6496:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 3263, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "6482:13:46", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 3261, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6486:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3262, "nodeType": "ArrayTypeName", "src": "6486:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 3265, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6482:16:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "src": "6471:27:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 3267, "nodeType": "ExpressionStatement", "src": "6471:27:46"}, {"expression": {"id": 3277, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 3268, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3258, "src": "6508:8:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 3270, "indexExpression": {"hexValue": "30", "id": 3269, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6517:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "6508:11:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 3272, "name": "_token0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9297, "src": "6545:7:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$12934", "typeString": "contract IERC20"}}, {"arguments": [{"hexValue": "74727565", "id": 3274, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "6569:4:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 3273, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [4471], "referencedDeclaration": 4471, "src": "6554:14:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 3275, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6554:20:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$12934", "typeString": "contract IERC20"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 3271, "name": "_getScaledTokenBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3253, "src": "6522:22:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$12934_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (contract IERC20,uint256) view returns (uint256)"}}, "id": 3276, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6522:53:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6508:67:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3278, "nodeType": "ExpressionStatement", "src": "6508:67:46"}, {"expression": {"id": 3288, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 3279, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3258, "src": "6585:8:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 3281, "indexExpression": {"hexValue": "31", "id": 3280, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6594:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "6585:11:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 3283, "name": "_token1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9299, "src": "6622:7:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$12934", "typeString": "contract IERC20"}}, {"arguments": [{"hexValue": "66616c7365", "id": 3285, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "6646:5:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 3284, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [4471], "referencedDeclaration": 4471, "src": "6631:14:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 3286, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6631:21:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$12934", "typeString": "contract IERC20"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 3282, "name": "_getScaledTokenBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3253, "src": "6599:22:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$12934_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (contract IERC20,uint256) view returns (uint256)"}}, "id": 3287, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6599:54:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6585:68:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3289, "nodeType": "ExpressionStatement", "src": "6585:68:46"}, {"expression": {"id": 3290, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3258, "src": "6670:8:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "functionReturnParameters": 3259, "id": 3291, "nodeType": "Return", "src": "6663:15:46"}]}, "documentation": {"id": 3254, "nodeType": "StructuredDocumentation", "src": "5992:165:46", "text": "@dev Get all balances in the pool, scaled by the appropriate scaling factors, in a relatively gas-efficient way.\n Essentially copied from the 3CLP."}, "id": 3293, "implemented": true, "kind": "function", "modifiers": [], "name": "_getAllBalances", "nodeType": "FunctionDefinition", "parameters": {"id": 3255, "nodeType": "ParameterList", "parameters": [], "src": "6186:2:46"}, "returnParameters": {"id": 3259, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 3258, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 3293, "src": "6212:25:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 3256, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6212:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3257, "nodeType": "ArrayTypeName", "src": "6212:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "6211:27:46"}, "scope": 4566, "src": "6162:523:46", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [9750], "body": {"id": 3324, "nodeType": "Block", "src": "6935:279:46", "statements": [{"assignments": [3304], "declarations": [{"constant": false, "id": 3304, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 3324, "src": "6945:25:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 3302, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6945:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3303, "nodeType": "ArrayTypeName", "src": "6945:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 3307, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 3305, "name": "_getAllBalances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3293, "src": "6973:15:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function () view returns (uint256[] memory)"}}, "id": 3306, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6973:17:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "6945:45:46"}, {"assignments": [3311, 3313], "declarations": [{"constant": false, "id": 3311, "mutability": "mutable", "name": "eclpParams", "nodeType": "VariableDeclaration", "scope": 3324, "src": "7001:37:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params"}, "typeName": {"id": 3310, "name": "GyroECLPMath.Params", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 64, "src": "7001:19:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_storage_ptr", "typeString": "struct GyroECLPMath.Params"}}, "visibility": "internal"}, {"constant": false, "id": 3313, "mutability": "mutable", "name": "derivedECLPParams", "nodeType": "VariableDeclaration", "scope": 3324, "src": "7040:51:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}, "typeName": {"id": 3312, "name": "GyroECLPMath.DerivedParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 79, "src": "7040:26:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_storage_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}}, "visibility": "internal"}], "id": 3316, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 3314, "name": "reconstructECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3206, "src": "7095:21:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_Params_$64_memory_ptr_$_t_struct$_DerivedParams_$79_memory_ptr_$", "typeString": "function () view returns (struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "id": 3315, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7095:23:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_struct$_Params_$64_memory_ptr_$_t_struct$_DerivedParams_$79_memory_ptr_$", "typeString": "tuple(struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "7000:118:46"}, {"expression": {"arguments": [{"id": 3319, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3304, "src": "7167:8:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 3320, "name": "eclpParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3311, "src": "7177:10:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"id": 3321, "name": "derivedECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3313, "src": "7189:17:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}], "expression": {"id": 3317, "name": "GyroECLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2864, "src": "7135:12:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPMath_$2864_$", "typeString": "type(library GyroECLPMath)"}}, "id": 3318, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 964, "src": "7135:31:46", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_struct$_Params_$64_memory_ptr_$_t_struct$_DerivedParams_$79_memory_ptr_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory) pure returns (uint256)"}}, "id": 3322, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7135:72:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 3299, "id": 3323, "nodeType": "Return", "src": "7128:79:46"}]}, "documentation": {"id": 3294, "nodeType": "StructuredDocumentation", "src": "6691:176:46", "text": " @dev Returns the current value of the invariant.\n Note: This function is not used internally; it's public, not external, so we can override it cleanly."}, "functionSelector": "c0ff1a15", "id": 3325, "implemented": true, "kind": "function", "modifiers": [], "name": "getInvariant", "nodeType": "FunctionDefinition", "overrides": {"id": 3296, "nodeType": "OverrideSpecifier", "overrides": [], "src": "6908:8:46"}, "parameters": {"id": 3295, "nodeType": "ParameterList", "parameters": [], "src": "6893:2:46"}, "returnParameters": {"id": 3299, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 3298, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 3325, "src": "6926:7:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 3297, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6926:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6925:9:46"}, "scope": 4566, "src": "6872:342:46", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 3352, "nodeType": "Block", "src": "7682:122:46", "statements": [{"expression": {"id": 3350, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 3340, "name": "spotPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3338, "src": "7692:9:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 3343, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3329, "src": "7735:8:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 3344, "name": "eclpParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3333, "src": "7745:10:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"id": 3345, "name": "derivedECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3335, "src": "7757:17:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 3346, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3331, "src": "7776:9:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3347, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "toInt256", "nodeType": "MemberAccess", "referencedDeclaration": 6061, "src": "7776:18:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$", "typeString": "function (uint256) pure returns (int256)"}}, "id": 3348, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7776:20:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 3341, "name": "GyroECLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2864, "src": "7704:12:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPMath_$2864_$", "typeString": "type(library GyroECLPMath)"}}, "id": 3342, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "calcSpotPrice0in1", "nodeType": "MemberAccess", "referencedDeclaration": 1832, "src": "7704:30:46", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_struct$_Params_$64_memory_ptr_$_t_struct$_DerivedParams_$79_memory_ptr_$_t_int256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory,int256) pure returns (uint256)"}}, "id": 3349, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7704:93:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7692:105:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3351, "nodeType": "ExpressionStatement", "src": "7692:105:46"}]}, "documentation": {"id": 3326, "nodeType": "StructuredDocumentation", "src": "7220:220:46", "text": "When rateProvider{0,1} is provided, this returns the *scaled* price, suitable to compare *rate scaled* balances.\n  To compare (decimal- but) not-rate-scaled balances, apply _adjustPrice() to the result."}, "id": 3353, "implemented": true, "kind": "function", "modifiers": [], "name": "_getPrice", "nodeType": "FunctionDefinition", "parameters": {"id": 3336, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 3329, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 3353, "src": "7473:25:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 3327, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7473:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3328, "nodeType": "ArrayTypeName", "src": "7473:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 3331, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 3353, "src": "7508:17:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 3330, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7508:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 3333, "mutability": "mutable", "name": "eclpParams", "nodeType": "VariableDeclaration", "scope": 3353, "src": "7535:37:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params"}, "typeName": {"id": 3332, "name": "GyroECLPMath.Params", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 64, "src": "7535:19:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_storage_ptr", "typeString": "struct GyroECLPMath.Params"}}, "visibility": "internal"}, {"constant": false, "id": 3335, "mutability": "mutable", "name": "derivedECLPParams", "nodeType": "VariableDeclaration", "scope": 3353, "src": "7582:51:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}, "typeName": {"id": 3334, "name": "GyroECLPMath.DerivedParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 79, "src": "7582:26:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_storage_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}}, "visibility": "internal"}], "src": "7463:176:46"}, "returnParameters": {"id": 3339, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 3338, "mutability": "mutable", "name": "spotPrice", "nodeType": "VariableDeclaration", "scope": 3353, "src": "7663:17:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 3337, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7663:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7662:19:46"}, "scope": 4566, "src": "7445:359:46", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 3400, "nodeType": "Block", "src": "8063:420:46", "statements": [{"assignments": [3363], "declarations": [{"constant": false, "id": 3363, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 3400, "src": "8073:25:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 3361, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8073:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3362, "nodeType": "ArrayTypeName", "src": "8073:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 3366, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 3364, "name": "_getAllBalances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3293, "src": "8101:15:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function () view returns (uint256[] memory)"}}, "id": 3365, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8101:17:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "8073:45:46"}, {"assignments": [3370, 3372], "declarations": [{"constant": false, "id": 3370, "mutability": "mutable", "name": "eclpParams", "nodeType": "VariableDeclaration", "scope": 3400, "src": "8129:37:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params"}, "typeName": {"id": 3369, "name": "GyroECLPMath.Params", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 64, "src": "8129:19:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_storage_ptr", "typeString": "struct GyroECLPMath.Params"}}, "visibility": "internal"}, {"constant": false, "id": 3372, "mutability": "mutable", "name": "derivedECLPParams", "nodeType": "VariableDeclaration", "scope": 3400, "src": "8168:51:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}, "typeName": {"id": 3371, "name": "GyroECLPMath.DerivedParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 79, "src": "8168:26:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_storage_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}}, "visibility": "internal"}], "id": 3375, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 3373, "name": "reconstructECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3206, "src": "8223:21:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_Params_$64_memory_ptr_$_t_struct$_DerivedParams_$79_memory_ptr_$", "typeString": "function () view returns (struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "id": 3374, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8223:23:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_struct$_Params_$64_memory_ptr_$_t_struct$_DerivedParams_$79_memory_ptr_$", "typeString": "tuple(struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "8128:118:46"}, {"assignments": [3377], "declarations": [{"constant": false, "id": 3377, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 3400, "src": "8256:17:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 3376, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8256:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 3384, "initialValue": {"arguments": [{"id": 3380, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3363, "src": "8308:8:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 3381, "name": "eclpParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3370, "src": "8318:10:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"id": 3382, "name": "derivedECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3372, "src": "8330:17:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}], "expression": {"id": 3378, "name": "GyroECLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2864, "src": "8276:12:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPMath_$2864_$", "typeString": "type(library GyroECLPMath)"}}, "id": 3379, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 964, "src": "8276:31:46", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_struct$_Params_$64_memory_ptr_$_t_struct$_DerivedParams_$79_memory_ptr_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory) pure returns (uint256)"}}, "id": 3383, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8276:72:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "8256:92:46"}, {"expression": {"id": 3392, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 3385, "name": "spotPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3357, "src": "8358:9:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 3387, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3363, "src": "8380:8:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 3388, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3377, "src": "8390:9:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 3389, "name": "eclpParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3370, "src": "8401:10:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"id": 3390, "name": "derivedECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3372, "src": "8413:17:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}], "id": 3386, "name": "_getPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3353, "src": "8370:9:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_struct$_Params_$64_memory_ptr_$_t_struct$_DerivedParams_$79_memory_ptr_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory) view returns (uint256)"}}, "id": 3391, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8370:61:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8358:73:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3393, "nodeType": "ExpressionStatement", "src": "8358:73:46"}, {"expression": {"id": 3398, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 3394, "name": "spotPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3357, "src": "8441:9:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 3396, "name": "spotPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3357, "src": "8466:9:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 3395, "name": "_adjustPrice", "nodeType": "Identifier", "overloadedDeclarations": [4520], "referencedDeclaration": 4520, "src": "8453:12:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view returns (uint256)"}}, "id": 3397, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8453:23:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8441:35:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3399, "nodeType": "ExpressionStatement", "src": "8441:35:46"}]}, "documentation": {"id": 3354, "nodeType": "StructuredDocumentation", "src": "7810:186:46", "text": "Returns the current spot price of token0 quoted in units of token1. When rateProvider{0,1} is provided, the\n returned price corresponds to tokens *before* rate scaling."}, "functionSelector": "98d5fdca", "id": 3401, "implemented": true, "kind": "function", "modifiers": [], "name": "getPrice", "nodeType": "FunctionDefinition", "parameters": {"id": 3355, "nodeType": "ParameterList", "parameters": [], "src": "8018:2:46"}, "returnParameters": {"id": 3358, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 3357, "mutability": "mutable", "name": "spotPrice", "nodeType": "VariableDeclaration", "scope": 3401, "src": "8044:17:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 3356, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8044:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "8043:19:46"}, "scope": 4566, "src": "8001:482:46", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"baseFunctions": [9897], "body": {"id": 3629, "nodeType": "Block", "src": "8713:3084:46", "statements": [{"assignments": [3420], "declarations": [{"constant": false, "id": 3420, "mutability": "mutable", "name": "tokenInIsToken0", "nodeType": "VariableDeclaration", "scope": 3629, "src": "8723:20:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 3419, "name": "bool", "nodeType": "ElementaryTypeName", "src": "8723:4:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "id": 3421, "nodeType": "VariableDeclarationStatement", "src": "8723:20:46"}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 3430, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_contract$_IERC20_$12934", "typeString": "contract IERC20"}, "id": 3425, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 3422, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3403, "src": "8758:7:46", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$21295_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 3423, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenIn", "nodeType": "MemberAccess", "referencedDeclaration": 21280, "src": "8758:15:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$12934", "typeString": "contract IERC20"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 3424, "name": "_token0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9297, "src": "8777:7:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$12934", "typeString": "contract IERC20"}}, "src": "8758:26:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_contract$_IERC20_$12934", "typeString": "contract IERC20"}, "id": 3429, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 3426, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3403, "src": "8788:7:46", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$21295_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 3427, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenOut", "nodeType": "MemberAccess", "referencedDeclaration": 21282, "src": "8788:16:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$12934", "typeString": "contract IERC20"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 3428, "name": "_token1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9299, "src": "8808:7:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$12934", "typeString": "contract IERC20"}}, "src": "8788:27:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "8758:57:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 3444, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_contract$_IERC20_$12934", "typeString": "contract IERC20"}, "id": 3439, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 3436, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3403, "src": "8874:7:46", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$21295_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 3437, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenIn", "nodeType": "MemberAccess", "referencedDeclaration": 21280, "src": "8874:15:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$12934", "typeString": "contract IERC20"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 3438, "name": "_token1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9299, "src": "8893:7:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$12934", "typeString": "contract IERC20"}}, "src": "8874:26:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_contract$_IERC20_$12934", "typeString": "contract IERC20"}, "id": 3443, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 3440, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3403, "src": "8904:7:46", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$21295_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 3441, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenOut", "nodeType": "MemberAccess", "referencedDeclaration": 21282, "src": "8904:16:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$12934", "typeString": "contract IERC20"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 3442, "name": "_token0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9297, "src": "8924:7:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$12934", "typeString": "contract IERC20"}}, "src": "8904:27:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "8874:57:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 3455, "nodeType": "Block", "src": "8987:76:46", "statements": [{"expression": {"arguments": [{"expression": {"id": 3451, "name": "GyroECLPPoolErrors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6107, "src": "9009:18:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPPoolErrors_$6107_$", "typeString": "type(library GyroECLPPoolErrors)"}}, "id": 3452, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "TOKEN_IN_IS_NOT_TOKEN_0", "nodeType": "MemberAccess", "referencedDeclaration": 6070, "src": "9009:42:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 3450, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12459, "src": "9001:7:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$", "typeString": "function (uint256) pure"}}, "id": 3453, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9001:51:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 3454, "nodeType": "ExpressionStatement", "src": "9001:51:46"}]}, "id": 3456, "nodeType": "IfStatement", "src": "8870:193:46", "trueBody": {"id": 3449, "nodeType": "Block", "src": "8933:48:46", "statements": [{"expression": {"id": 3447, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 3445, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3420, "src": "8947:15:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "66616c7365", "id": 3446, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "8965:5:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "src": "8947:23:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 3448, "nodeType": "ExpressionStatement", "src": "8947:23:46"}]}}, "id": 3457, "nodeType": "IfStatement", "src": "8754:309:46", "trueBody": {"id": 3435, "nodeType": "Block", "src": "8817:47:46", "statements": [{"expression": {"id": 3433, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 3431, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3420, "src": "8831:15:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 3432, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "8849:4:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "8831:22:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 3434, "nodeType": "ExpressionStatement", "src": "8831:22:46"}]}}, {"assignments": [3459], "declarations": [{"constant": false, "id": 3459, "mutability": "mutable", "name": "scalingFactorTokenIn", "nodeType": "VariableDeclaration", "scope": 3629, "src": "9073:28:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 3458, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9073:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 3463, "initialValue": {"arguments": [{"id": 3461, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3420, "src": "9119:15:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 3460, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [4471], "referencedDeclaration": 4471, "src": "9104:14:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 3462, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9104:31:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "9073:62:46"}, {"assignments": [3465], "declarations": [{"constant": false, "id": 3465, "mutability": "mutable", "name": "scalingFactorTokenOut", "nodeType": "VariableDeclaration", "scope": 3629, "src": "9145:29:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 3464, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9145:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 3470, "initialValue": {"arguments": [{"id": 3468, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "9192:16:46", "subExpression": {"id": 3467, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3420, "src": "9193:15:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 3466, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [4471], "referencedDeclaration": 4471, "src": "9177:14:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 3469, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9177:32:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "9145:64:46"}, {"expression": {"id": 3476, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 3471, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3405, "src": "9263:14:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 3473, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3405, "src": "9289:14:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 3474, "name": "scalingFactorTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3459, "src": "9305:20:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 3472, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11202, "src": "9280:8:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 3475, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9280:46:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9263:63:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3477, "nodeType": "ExpressionStatement", "src": "9263:63:46"}, {"expression": {"id": 3483, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 3478, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3407, "src": "9336:15:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 3480, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3407, "src": "9363:15:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 3481, "name": "scalingFactorTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3465, "src": "9380:21:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 3479, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11202, "src": "9354:8:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 3482, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9354:48:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9336:66:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3484, "nodeType": "ExpressionStatement", "src": "9336:66:46"}, {"assignments": [3489], "declarations": [{"constant": false, "id": 3489, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 3629, "src": "9600:25:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 3487, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9600:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3488, "nodeType": "ArrayTypeName", "src": "9600:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 3495, "initialValue": {"arguments": [{"id": 3491, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3405, "src": "9652:14:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 3492, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3407, "src": "9668:15:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 3493, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3420, "src": "9685:15:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 3490, "name": "_balancesFromTokenInOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4221, "src": "9628:23:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256,uint256,bool) pure returns (uint256[] memory)"}}, "id": 3494, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9628:73:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "9600:101:46"}, {"assignments": [3499, 3501], "declarations": [{"constant": false, "id": 3499, "mutability": "mutable", "name": "eclpParams", "nodeType": "VariableDeclaration", "scope": 3629, "src": "9713:37:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params"}, "typeName": {"id": 3498, "name": "GyroECLPMath.Params", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 64, "src": "9713:19:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_storage_ptr", "typeString": "struct GyroECLPMath.Params"}}, "visibility": "internal"}, {"constant": false, "id": 3501, "mutability": "mutable", "name": "derivedECLPParams", "nodeType": "VariableDeclaration", "scope": 3629, "src": "9752:51:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}, "typeName": {"id": 3500, "name": "GyroECLPMath.DerivedParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 79, "src": "9752:26:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_storage_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}}, "visibility": "internal"}], "id": 3504, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 3502, "name": "reconstructECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3206, "src": "9807:21:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_Params_$64_memory_ptr_$_t_struct$_DerivedParams_$79_memory_ptr_$", "typeString": "function () view returns (struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "id": 3503, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9807:23:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_struct$_Params_$64_memory_ptr_$_t_struct$_DerivedParams_$79_memory_ptr_$", "typeString": "tuple(struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "9712:118:46"}, {"assignments": [3508], "declarations": [{"constant": false, "id": 3508, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 3629, "src": "9840:37:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$84_memory_ptr", "typeString": "struct GyroECLPMath.Vector2"}, "typeName": {"id": 3507, "name": "GyroECLPMath.Vector2", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 84, "src": "9840:20:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$84_storage_ptr", "typeString": "struct GyroECLPMath.Vector2"}}, "visibility": "internal"}], "id": 3509, "nodeType": "VariableDeclarationStatement", "src": "9840:37:46"}, {"id": 3533, "nodeType": "Block", "src": "9887:432:46", "statements": [{"assignments": [3511, 3513], "declarations": [{"constant": false, "id": 3511, "mutability": "mutable", "name": "currentInvariant", "nodeType": "VariableDeclaration", "scope": 3533, "src": "9902:23:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 3510, "name": "int256", "nodeType": "ElementaryTypeName", "src": "9902:6:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 3513, "mutability": "mutable", "name": "invErr", "nodeType": "VariableDeclaration", "scope": 3533, "src": "9927:13:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 3512, "name": "int256", "nodeType": "ElementaryTypeName", "src": "9927:6:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 3520, "initialValue": {"arguments": [{"id": 3516, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3489, "src": "9985:8:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 3517, "name": "eclpParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3499, "src": "9995:10:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"id": 3518, "name": "derivedECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3501, "src": "10007:17:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}], "expression": {"id": 3514, "name": "GyroECLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2864, "src": "9944:12:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPMath_$2864_$", "typeString": "type(library GyroECLPMath)"}}, "id": 3515, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "calculateInvariantWithError", "nodeType": "MemberAccess", "referencedDeclaration": 937, "src": "9944:40:46", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_struct$_Params_$64_memory_ptr_$_t_struct$_DerivedParams_$79_memory_ptr_$returns$_t_int256_$_t_int256_$", "typeString": "function (uint256[] memory,struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory) pure returns (int256,int256)"}}, "id": 3519, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9944:81:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256)"}}, "nodeType": "VariableDeclarationStatement", "src": "9901:124:46"}, {"expression": {"id": 3531, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 3521, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3508, "src": "10227:9:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$84_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 3528, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 3524, "name": "currentInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3511, "src": "10260:16:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 3527, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"hexValue": "32", "id": 3525, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10279:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 3526, "name": "invErr", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3513, "src": "10283:6:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "10279:10:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "10260:29:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 3529, "name": "currentInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3511, "src": "10291:16:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 3522, "name": "GyroECLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2864, "src": "10239:12:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPMath_$2864_$", "typeString": "type(library GyroECLPMath)"}}, "id": 3523, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "Vector2", "nodeType": "MemberAccess", "referencedDeclaration": 84, "src": "10239:20:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_struct$_Vector2_$84_storage_ptr_$", "typeString": "type(struct GyroECLPMath.Vector2 storage pointer)"}}, "id": 3530, "isConstant": false, "isLValue": false, "isPure": false, "kind": "structConstructorCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10239:69:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$84_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, "src": "10227:81:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$84_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, "id": 3532, "nodeType": "ExpressionStatement", "src": "10227:81:46"}]}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_SwapKind_$12187", "typeString": "enum IVault.SwapKind"}, "id": 3539, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 3534, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3403, "src": "10333:7:46", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$21295_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 3535, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kind", "nodeType": "MemberAccess", "referencedDeclaration": 21278, "src": "10333:12:46", "typeDescriptions": {"typeIdentifier": "t_enum$_SwapKind_$12187", "typeString": "enum IVault.SwapKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 3536, "name": "IVault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12363, "src": "10349:6:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IVault_$12363_$", "typeString": "type(contract IVault)"}}, "id": 3537, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "SwapKind", "nodeType": "MemberAccess", "referencedDeclaration": 12187, "src": "10349:15:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_SwapKind_$12187_$", "typeString": "type(enum IVault.SwapKind)"}}, "id": 3538, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "GIVEN_IN", "nodeType": "MemberAccess", "src": "10349:24:46", "typeDescriptions": {"typeIdentifier": "t_enum$_SwapKind_$12187", "typeString": "enum IVault.SwapKind"}}, "src": "10333:40:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 3627, "nodeType": "Block", "src": "11096:695:46", "statements": [{"expression": {"id": 3593, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 3585, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3403, "src": "11110:7:46", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$21295_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 3587, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 21284, "src": "11110:14:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 3589, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3403, "src": "11136:7:46", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$21295_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 3590, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 21284, "src": "11136:14:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 3591, "name": "scalingFactorTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3465, "src": "11152:21:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 3588, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11202, "src": "11127:8:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 3592, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11127:47:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11110:64:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3594, "nodeType": "ExpressionStatement", "src": "11110:64:46"}, {"assignments": [3596], "declarations": [{"constant": false, "id": 3596, "mutability": "mutable", "name": "amountIn", "nodeType": "VariableDeclaration", "scope": 3627, "src": "11189:16:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 3595, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11189:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 3605, "initialValue": {"arguments": [{"id": 3598, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3403, "src": "11224:7:46", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$21295_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, {"id": 3599, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3489, "src": "11233:8:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 3600, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3420, "src": "11243:15:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"id": 3601, "name": "eclpParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3499, "src": "11260:10:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"id": 3602, "name": "derivedECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3501, "src": "11272:17:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, {"id": 3603, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3508, "src": "11291:9:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$84_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_SwapRequest_$21295_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}, {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}, {"typeIdentifier": "t_struct$_Vector2_$84_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}], "id": 3597, "name": "_onSwapGivenOut", "nodeType": "Identifier", "overloadedDeclarations": [3690, 9949], "referencedDeclaration": 3690, "src": "11208:15:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_SwapRequest_$21295_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bool_$_t_struct$_Params_$64_memory_ptr_$_t_struct$_DerivedParams_$79_memory_ptr_$_t_struct$_Vector2_$84_memory_ptr_$returns$_t_uint256_$", "typeString": "function (struct IPoolSwapStructs.SwapRequest memory,uint256[] memory,bool,struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory,struct GyroECLPMath.Vector2 memory) pure returns (uint256)"}}, "id": 3604, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11208:93:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "11189:112:46"}, {"eventCall": {"arguments": [{"id": 3607, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3489, "src": "11332:8:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 3608, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3508, "src": "11342:9:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$84_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, {"id": 3609, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3596, "src": "11353:8:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_struct$_Vector2_$84_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 3606, "name": "SwapParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2990, "src": "11321:10:46", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_struct$_Vector2_$84_memory_ptr_$_t_uint256_$returns$__$", "typeString": "function (uint256[] memory,struct GyroECLPMath.Vector2 memory,uint256)"}}, "id": 3610, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11321:41:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 3611, "nodeType": "EmitStatement", "src": "11316:46:46"}, {"expression": {"id": 3617, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 3612, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3596, "src": "11447:8:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 3614, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3596, "src": "11471:8:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 3615, "name": "scalingFactorTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3459, "src": "11481:20:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 3613, "name": "_downscaleUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11308, "src": "11458:12:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 3616, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11458:44:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11447:55:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3618, "nodeType": "ExpressionStatement", "src": "11447:55:46"}, {"expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 3621, "name": "getSwapFeePercentage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9560, "src": "11744:20:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 3622, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11744:22:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3623, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "complement", "nodeType": "MemberAccess", "referencedDeclaration": 6839, "src": "11744:33:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256) pure returns (uint256)"}}, "id": 3624, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11744:35:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 3619, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3596, "src": "11729:8:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3620, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "divUp", "nodeType": "MemberAccess", "referencedDeclaration": 6545, "src": "11729:14:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 3625, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11729:51:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 3418, "id": 3626, "nodeType": "Return", "src": "11722:58:46"}]}, "id": 3628, "nodeType": "IfStatement", "src": "10329:1462:46", "trueBody": {"id": 3584, "nodeType": "Block", "src": "10375:715:46", "statements": [{"assignments": [3541], "declarations": [{"constant": false, "id": 3541, "mutability": "mutable", "name": "feeAmount", "nodeType": "VariableDeclaration", "scope": 3584, "src": "10592:17:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 3540, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10592:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 3548, "initialValue": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 3545, "name": "getSwapFeePercentage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9560, "src": "10633:20:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 3546, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10633:22:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"id": 3542, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3403, "src": "10612:7:46", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$21295_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 3543, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 21284, "src": "10612:14:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3544, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mulUp", "nodeType": "MemberAccess", "referencedDeclaration": 6368, "src": "10612:20:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 3547, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10612:44:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "10592:64:46"}, {"expression": {"id": 3560, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 3549, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3403, "src": "10670:7:46", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$21295_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 3551, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 21284, "src": "10670:14:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [{"id": 3556, "name": "feeAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3541, "src": "10715:9:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"id": 3553, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3403, "src": "10696:7:46", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$21295_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 3554, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 21284, "src": "10696:14:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3555, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 6259, "src": "10696:18:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 3557, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10696:29:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 3558, "name": "scalingFactorTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3459, "src": "10727:20:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 3552, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11202, "src": "10687:8:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 3559, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10687:61:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10670:78:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3561, "nodeType": "ExpressionStatement", "src": "10670:78:46"}, {"assignments": [3563], "declarations": [{"constant": false, "id": 3563, "mutability": "mutable", "name": "amountOut", "nodeType": "VariableDeclaration", "scope": 3584, "src": "10763:17:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 3562, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10763:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 3572, "initialValue": {"arguments": [{"id": 3565, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3403, "src": "10798:7:46", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$21295_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, {"id": 3566, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3489, "src": "10807:8:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 3567, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3420, "src": "10817:15:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"id": 3568, "name": "eclpParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3499, "src": "10834:10:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"id": 3569, "name": "derivedECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3501, "src": "10846:17:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, {"id": 3570, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3508, "src": "10865:9:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$84_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_SwapRequest_$21295_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}, {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}, {"typeIdentifier": "t_struct$_Vector2_$84_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}], "id": 3564, "name": "_onSwapGivenIn", "nodeType": "Identifier", "overloadedDeclarations": [3660, 9923], "referencedDeclaration": 3660, "src": "10783:14:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_SwapRequest_$21295_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bool_$_t_struct$_Params_$64_memory_ptr_$_t_struct$_DerivedParams_$79_memory_ptr_$_t_struct$_Vector2_$84_memory_ptr_$returns$_t_uint256_$", "typeString": "function (struct IPoolSwapStructs.SwapRequest memory,uint256[] memory,bool,struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory,struct GyroECLPMath.Vector2 memory) pure returns (uint256)"}}, "id": 3571, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10783:92:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "10763:112:46"}, {"eventCall": {"arguments": [{"id": 3574, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3489, "src": "10906:8:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 3575, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3508, "src": "10916:9:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$84_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}, {"id": 3576, "name": "amountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3563, "src": "10927:9:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_struct$_Vector2_$84_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 3573, "name": "SwapParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2990, "src": "10895:10:46", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_struct$_Vector2_$84_memory_ptr_$_t_uint256_$returns$__$", "typeString": "function (uint256[] memory,struct GyroECLPMath.Vector2 memory,uint256)"}}, "id": 3577, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10895:42:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 3578, "nodeType": "EmitStatement", "src": "10890:47:46"}, {"expression": {"arguments": [{"id": 3580, "name": "amountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3563, "src": "11046:9:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 3581, "name": "scalingFactorTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3465, "src": "11057:21:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 3579, "name": "_downscaleDown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11255, "src": "11031:14:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 3582, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11031:48:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 3418, "id": 3583, "nodeType": "Return", "src": "11024:55:46"}]}}]}, "functionSelector": "9d2c110c", "id": 3630, "implemented": true, "kind": "function", "modifiers": [{"id": 3411, "modifierName": {"id": 3410, "name": "whenNotPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19027, "src": "8655:13:46", "typeDescriptions": {"typeIdentifier": "t_modifier$__$", "typeString": "modifier ()"}}, "nodeType": "ModifierInvocation", "src": "8655:13:46"}, {"arguments": [{"expression": {"id": 3413, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3403, "src": "8679:7:46", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$21295_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 3414, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "poolId", "nodeType": "MemberAccess", "referencedDeclaration": 21286, "src": "8679:14:46", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "id": 3415, "modifierName": {"id": 3412, "name": "onlyVault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9344, "src": "8669:9:46", "typeDescriptions": {"typeIdentifier": "t_modifier$_t_bytes32_$", "typeString": "modifier (bytes32)"}}, "nodeType": "ModifierInvocation", "src": "8669:25:46"}], "name": "onSwap", "nodeType": "FunctionDefinition", "overrides": {"id": 3409, "nodeType": "OverrideSpecifier", "overrides": [], "src": "8646:8:46"}, "parameters": {"id": 3408, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 3403, "mutability": "mutable", "name": "request", "nodeType": "VariableDeclaration", "scope": 3630, "src": "8533:26:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$21295_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 3402, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 21295, "src": "8533:11:46", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$21295_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 3405, "mutability": "mutable", "name": "balanceTokenIn", "nodeType": "VariableDeclaration", "scope": 3630, "src": "8569:22:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 3404, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8569:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 3407, "mutability": "mutable", "name": "balanceTokenOut", "nodeType": "VariableDeclaration", "scope": 3630, "src": "8601:23:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 3406, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8601:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "8523:107:46"}, "returnParameters": {"id": 3418, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 3417, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 3630, "src": "8704:7:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 3416, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8704:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "8703:9:46"}, "scope": 4566, "src": "8508:3289:46", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"body": {"id": 3659, "nodeType": "Block", "src": "12124:200:46", "statements": [{"expression": {"arguments": [{"id": 3650, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3635, "src": "12229:8:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"expression": {"id": 3651, "name": "swapRequest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3632, "src": "12239:11:46", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$21295_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 3652, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 21284, "src": "12239:18:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 3653, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3637, "src": "12259:15:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"id": 3654, "name": "eclpParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3639, "src": "12276:10:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"id": 3655, "name": "derivedECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3641, "src": "12288:17:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, {"id": 3656, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3643, "src": "12307:9:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$84_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}, {"typeIdentifier": "t_struct$_Vector2_$84_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}], "expression": {"id": 3648, "name": "GyroECLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2864, "src": "12201:12:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPMath_$2864_$", "typeString": "type(library GyroECLPMath)"}}, "id": 3649, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "calcOutGivenIn", "nodeType": "MemberAccess", "referencedDeclaration": 2009, "src": "12201:27:46", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bool_$_t_struct$_Params_$64_memory_ptr_$_t_struct$_DerivedParams_$79_memory_ptr_$_t_struct$_Vector2_$84_memory_ptr_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,bool,struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory,struct GyroECLPMath.Vector2 memory) pure returns (uint256)"}}, "id": 3657, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12201:116:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 3647, "id": 3658, "nodeType": "Return", "src": "12194:123:46"}]}, "id": 3660, "implemented": true, "kind": "function", "modifiers": [], "name": "_onSwapGivenIn", "nodeType": "FunctionDefinition", "parameters": {"id": 3644, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 3632, "mutability": "mutable", "name": "swapRequest", "nodeType": "VariableDeclaration", "scope": 3660, "src": "11836:30:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$21295_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 3631, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 21295, "src": "11836:11:46", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$21295_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 3635, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 3660, "src": "11876:25:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 3633, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11876:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3634, "nodeType": "ArrayTypeName", "src": "11876:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 3637, "mutability": "mutable", "name": "tokenInIsToken0", "nodeType": "VariableDeclaration", "scope": 3660, "src": "11911:20:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 3636, "name": "bool", "nodeType": "ElementaryTypeName", "src": "11911:4:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 3639, "mutability": "mutable", "name": "eclpParams", "nodeType": "VariableDeclaration", "scope": 3660, "src": "11941:37:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params"}, "typeName": {"id": 3638, "name": "GyroECLPMath.Params", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 64, "src": "11941:19:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_storage_ptr", "typeString": "struct GyroECLPMath.Params"}}, "visibility": "internal"}, {"constant": false, "id": 3641, "mutability": "mutable", "name": "derivedECLPParams", "nodeType": "VariableDeclaration", "scope": 3660, "src": "11988:51:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}, "typeName": {"id": 3640, "name": "GyroECLPMath.DerivedParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 79, "src": "11988:26:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_storage_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}}, "visibility": "internal"}, {"constant": false, "id": 3643, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 3660, "src": "12049:37:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$84_memory_ptr", "typeString": "struct GyroECLPMath.Vector2"}, "typeName": {"id": 3642, "name": "GyroECLPMath.Vector2", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 84, "src": "12049:20:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$84_storage_ptr", "typeString": "struct GyroECLPMath.Vector2"}}, "visibility": "internal"}], "src": "11826:266:46"}, "returnParameters": {"id": 3647, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 3646, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 3660, "src": "12115:7:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 3645, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12115:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "12114:9:46"}, "scope": 4566, "src": "11803:521:46", "stateMutability": "pure", "virtual": false, "visibility": "private"}, {"body": {"id": 3689, "nodeType": "Block", "src": "12652:200:46", "statements": [{"expression": {"arguments": [{"id": 3680, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3665, "src": "12757:8:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"expression": {"id": 3681, "name": "swapRequest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3662, "src": "12767:11:46", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$21295_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 3682, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 21284, "src": "12767:18:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 3683, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3667, "src": "12787:15:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"id": 3684, "name": "eclpParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3669, "src": "12804:10:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"id": 3685, "name": "derivedECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3671, "src": "12816:17:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}, {"id": 3686, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3673, "src": "12835:9:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$84_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}, {"typeIdentifier": "t_struct$_Vector2_$84_memory_ptr", "typeString": "struct GyroECLPMath.Vector2 memory"}], "expression": {"id": 3678, "name": "GyroECLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2864, "src": "12729:12:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPMath_$2864_$", "typeString": "type(library GyroECLPMath)"}}, "id": 3679, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "calcInGivenOut", "nodeType": "MemberAccess", "referencedDeclaration": 2130, "src": "12729:27:46", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bool_$_t_struct$_Params_$64_memory_ptr_$_t_struct$_DerivedParams_$79_memory_ptr_$_t_struct$_Vector2_$84_memory_ptr_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,bool,struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory,struct GyroECLPMath.Vector2 memory) pure returns (uint256)"}}, "id": 3687, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12729:116:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 3677, "id": 3688, "nodeType": "Return", "src": "12722:123:46"}]}, "id": 3690, "implemented": true, "kind": "function", "modifiers": [], "name": "_onSwapGivenOut", "nodeType": "FunctionDefinition", "parameters": {"id": 3674, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 3662, "mutability": "mutable", "name": "swapRequest", "nodeType": "VariableDeclaration", "scope": 3690, "src": "12364:30:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$21295_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 3661, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 21295, "src": "12364:11:46", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$21295_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 3665, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 3690, "src": "12404:25:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 3663, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12404:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3664, "nodeType": "ArrayTypeName", "src": "12404:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 3667, "mutability": "mutable", "name": "tokenInIsToken0", "nodeType": "VariableDeclaration", "scope": 3690, "src": "12439:20:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 3666, "name": "bool", "nodeType": "ElementaryTypeName", "src": "12439:4:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 3669, "mutability": "mutable", "name": "eclpParams", "nodeType": "VariableDeclaration", "scope": 3690, "src": "12469:37:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params"}, "typeName": {"id": 3668, "name": "GyroECLPMath.Params", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 64, "src": "12469:19:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_storage_ptr", "typeString": "struct GyroECLPMath.Params"}}, "visibility": "internal"}, {"constant": false, "id": 3671, "mutability": "mutable", "name": "derivedECLPParams", "nodeType": "VariableDeclaration", "scope": 3690, "src": "12516:51:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}, "typeName": {"id": 3670, "name": "GyroECLPMath.DerivedParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 79, "src": "12516:26:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_storage_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}}, "visibility": "internal"}, {"constant": false, "id": 3673, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 3690, "src": "12577:37:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$84_memory_ptr", "typeString": "struct GyroECLPMath.Vector2"}, "typeName": {"id": 3672, "name": "GyroECLPMath.Vector2", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 84, "src": "12577:20:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Vector2_$84_storage_ptr", "typeString": "struct GyroECLPMath.Vector2"}}, "visibility": "internal"}], "src": "12354:266:46"}, "returnParameters": {"id": 3677, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 3676, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 3690, "src": "12643:7:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 3675, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12643:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "12642:9:46"}, "scope": 4566, "src": "12330:522:46", "stateMutability": "pure", "virtual": false, "visibility": "private"}, {"baseFunctions": [10157], "body": {"id": 3801, "nodeType": "Block", "src": "13833:1178:46", "statements": [{"assignments": [3711], "declarations": [{"constant": false, "id": 3711, "mutability": "mutable", "name": "kind", "nodeType": "VariableDeclaration", "scope": 3801, "src": "13843:30:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$15097", "typeString": "enum BaseWeightedPool.JoinKind"}, "typeName": {"id": 3710, "name": "BaseWeightedPool.JoinKind", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 15097, "src": "13843:25:46", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$15097", "typeString": "enum BaseWeightedPool.JoinKind"}}, "visibility": "internal"}], "id": 3715, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 3712, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3699, "src": "13876:8:46", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 3713, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "joinKind", "nodeType": "MemberAccess", "referencedDeclaration": 8871, "src": "13876:17:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_enum$_JoinKind_$15097_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (enum BaseWeightedPool.JoinKind)"}}, "id": 3714, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13876:19:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$15097", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "VariableDeclarationStatement", "src": "13843:52:46"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_JoinKind_$15097", "typeString": "enum BaseWeightedPool.JoinKind"}, "id": 3721, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 3717, "name": "kind", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3711, "src": "13914:4:46", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$15097", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 3718, "name": "BaseWeightedPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16298, "src": "13922:16:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BaseWeightedPool_$16298_$", "typeString": "type(contract BaseWeightedPool)"}}, "id": 3719, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "JoinKind", "nodeType": "MemberAccess", "referencedDeclaration": 15097, "src": "13922:25:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_JoinKind_$15097_$", "typeString": "type(enum BaseWeightedPool.JoinKind)"}}, "id": 3720, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "INIT", "nodeType": "MemberAccess", "src": "13922:30:46", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$15097", "typeString": "enum BaseWeightedPool.JoinKind"}}, "src": "13914:38:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 3722, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12856, "src": "13954:6:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$12856_$", "typeString": "type(library Errors)"}}, "id": 3723, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNINITIALIZED", "nodeType": "MemberAccess", "referencedDeclaration": 12525, "src": "13954:20:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 3716, "name": "_require", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12451, "src": "13905:8:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 3724, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13905:70:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 3725, "nodeType": "ExpressionStatement", "src": "13905:70:46"}, {"assignments": [3730], "declarations": [{"constant": false, "id": 3730, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 3801, "src": "13986:26:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 3728, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13986:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3729, "nodeType": "ArrayTypeName", "src": "13986:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 3734, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 3731, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3699, "src": "14015:8:46", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 3732, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "initialAmountsIn", "nodeType": "MemberAccess", "referencedDeclaration": 8910, "src": "14015:25:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (uint256[] memory)"}}, "id": 3733, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14015:27:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "13986:56:46"}, {"expression": {"arguments": [{"expression": {"id": 3738, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3730, "src": "14088:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 3739, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "14088:16:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "32", "id": 3740, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14106:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "expression": {"id": 3735, "name": "InputHelpers", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5460, "src": "14052:12:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_InputHelpers_$5460_$", "typeString": "type(library InputHelpers)"}}, "id": 3737, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ensureInputLengthMatch", "nodeType": "MemberAccess", "referencedDeclaration": 5368, "src": "14052:35:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256) pure"}}, "id": 3741, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14052:56:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 3742, "nodeType": "ExpressionStatement", "src": "14052:56:46"}, {"expression": {"arguments": [{"id": 3744, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3730, "src": "14132:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}], "id": 3743, "name": "_upscaleArray", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11238, "src": "14118:13:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$", "typeString": "function (uint256[] memory) view"}}, "id": 3745, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14118:24:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 3746, "nodeType": "ExpressionStatement", "src": "14118:24:46"}, {"assignments": [3750, 3752], "declarations": [{"constant": false, "id": 3750, "mutability": "mutable", "name": "eclpParams", "nodeType": "VariableDeclaration", "scope": 3801, "src": "14154:37:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params"}, "typeName": {"id": 3749, "name": "GyroECLPMath.Params", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 64, "src": "14154:19:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_storage_ptr", "typeString": "struct GyroECLPMath.Params"}}, "visibility": "internal"}, {"constant": false, "id": 3752, "mutability": "mutable", "name": "derivedECLPParams", "nodeType": "VariableDeclaration", "scope": 3801, "src": "14193:51:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}, "typeName": {"id": 3751, "name": "GyroECLPMath.DerivedParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 79, "src": "14193:26:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_storage_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}}, "visibility": "internal"}], "id": 3755, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 3753, "name": "reconstructECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3206, "src": "14248:21:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_Params_$64_memory_ptr_$_t_struct$_DerivedParams_$79_memory_ptr_$", "typeString": "function () view returns (struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "id": 3754, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14248:23:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_struct$_Params_$64_memory_ptr_$_t_struct$_DerivedParams_$79_memory_ptr_$", "typeString": "tuple(struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "14153:118:46"}, {"assignments": [3757], "declarations": [{"constant": false, "id": 3757, "mutability": "mutable", "name": "invariantAfterJoin", "nodeType": "VariableDeclaration", "scope": 3801, "src": "14281:26:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 3756, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14281:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 3764, "initialValue": {"arguments": [{"id": 3760, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3730, "src": "14342:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 3761, "name": "eclpParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3750, "src": "14353:10:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"id": 3762, "name": "derivedECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3752, "src": "14365:17:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}], "expression": {"id": 3758, "name": "GyroECLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2864, "src": "14310:12:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPMath_$2864_$", "typeString": "type(library GyroECLPMath)"}}, "id": 3759, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 964, "src": "14310:31:46", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_struct$_Params_$64_memory_ptr_$_t_struct$_DerivedParams_$79_memory_ptr_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory) pure returns (uint256)"}}, "id": 3763, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14310:73:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "14281:102:46"}, {"eventCall": {"arguments": [{"id": 3766, "name": "invariantAfterJoin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3757, "src": "14427:18:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 3765, "name": "InvariantAterInitializeJoin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2975, "src": "14399:27:46", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 3767, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14399:47:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 3768, "nodeType": "EmitStatement", "src": "14394:52:46"}, {"assignments": [3770], "declarations": [{"constant": false, "id": 3770, "mutability": "mutable", "name": "spotPrice", "nodeType": "VariableDeclaration", "scope": 3801, "src": "14736:17:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 3769, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14736:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 3777, "initialValue": {"arguments": [{"id": 3772, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3730, "src": "14766:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 3773, "name": "invariantAfterJoin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3757, "src": "14777:18:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 3774, "name": "eclpParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3750, "src": "14797:10:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"id": 3775, "name": "derivedECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3752, "src": "14809:17:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}], "id": 3771, "name": "_getPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3353, "src": "14756:9:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_struct$_Params_$64_memory_ptr_$_t_struct$_DerivedParams_$79_memory_ptr_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory) view returns (uint256)"}}, "id": 3776, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14756:71:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "14736:91:46"}, {"assignments": [3779], "declarations": [{"constant": false, "id": 3779, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 3801, "src": "14837:20:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 3778, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14837:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 3792, "initialValue": {"arguments": [{"arguments": [{"id": 3786, "name": "spotPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3770, "src": "14890:9:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"baseExpression": {"id": 3782, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3730, "src": "14869:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 3784, "indexExpression": {"hexValue": "30", "id": 3783, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14879:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "14869:12:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3785, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mulDown", "nodeType": "MemberAccess", "referencedDeclaration": 6298, "src": "14869:20:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 3787, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14869:31:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 3788, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3730, "src": "14902:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 3790, "indexExpression": {"hexValue": "31", "id": 3789, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14912:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "14902:12:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 3780, "name": "Math", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5749, "src": "14860:4:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Math_$5749_$", "typeString": "type(library Math)"}}, "id": 3781, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 5491, "src": "14860:8:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 3791, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14860:55:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "14837:78:46"}, {"expression": {"id": 3795, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 3793, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9293, "src": "14926:14:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 3794, "name": "invariantAfterJoin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3757, "src": "14943:18:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "14926:35:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3796, "nodeType": "ExpressionStatement", "src": "14926:35:46"}, {"expression": {"components": [{"id": 3797, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3779, "src": "14980:12:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 3798, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3730, "src": "14994:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 3799, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "14979:25:46", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "functionReturnParameters": 3707, "id": 3800, "nodeType": "Return", "src": "14972:32:46"}]}, "documentation": {"id": 3691, "nodeType": "StructuredDocumentation", "src": "12858:801:46", "text": " @dev Called when the Pool is joined for the first time; that is, when the BPT total supply is zero.\n Returns the amount of BPT to mint, and the token amounts the Pool will receive in return.\n Minted BPT will be sent to `recipient`, except for _MINIMUM_BPT, which will be deducted from this amount and sent\n to the zero address instead. This will cause that BPT to remain forever locked there, preventing total BTP from\n ever dropping below that value, and ensuring `_onInitializePool` can only be called once in the entire Pool's\n lifetime.\n The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n be downscaled (rounding up) before being returned to the Vault."}, "id": 3802, "implemented": true, "kind": "function", "modifiers": [], "name": "_onInitializePool", "nodeType": "FunctionDefinition", "overrides": {"id": 3701, "nodeType": "OverrideSpecifier", "overrides": [], "src": "13788:8:46"}, "parameters": {"id": 3700, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 3693, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 3802, "src": "13700:7:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 3692, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "13700:7:46", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 3695, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 3802, "src": "13717:7:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 3694, "name": "address", "nodeType": "ElementaryTypeName", "src": "13717:7:46", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 3697, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 3802, "src": "13734:7:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 3696, "name": "address", "nodeType": "ElementaryTypeName", "src": "13734:7:46", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 3699, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 3802, "src": "13751:21:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 3698, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "13751:5:46", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "13690:88:46"}, "returnParameters": {"id": 3707, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 3703, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 3802, "src": "13806:7:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 3702, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13806:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 3706, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 3802, "src": "13815:16:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 3704, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13815:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3705, "nodeType": "ArrayTypeName", "src": "13815:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "13805:27:46"}, "scope": 4566, "src": "13664:1347:46", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [10252], "body": {"id": 3900, "nodeType": "Block", "src": "16527:1591:46", "statements": [{"assignments": [3833, 3835], "declarations": [{"constant": false, "id": 3833, "mutability": "mutable", "name": "eclpParams", "nodeType": "VariableDeclaration", "scope": 3900, "src": "16825:37:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params"}, "typeName": {"id": 3832, "name": "GyroECLPMath.Params", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 64, "src": "16825:19:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_storage_ptr", "typeString": "struct GyroECLPMath.Params"}}, "visibility": "internal"}, {"constant": false, "id": 3835, "mutability": "mutable", "name": "derivedECLPParams", "nodeType": "VariableDeclaration", "scope": 3900, "src": "16864:51:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}, "typeName": {"id": 3834, "name": "GyroECLPMath.DerivedParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 79, "src": "16864:26:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_storage_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}}, "visibility": "internal"}], "id": 3838, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 3836, "name": "reconstructECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3206, "src": "16919:21:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_Params_$64_memory_ptr_$_t_struct$_DerivedParams_$79_memory_ptr_$", "typeString": "function () view returns (struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "id": 3837, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16919:23:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_struct$_Params_$64_memory_ptr_$_t_struct$_DerivedParams_$79_memory_ptr_$", "typeString": "tuple(struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "16824:118:46"}, {"assignments": [3840], "declarations": [{"constant": false, "id": 3840, "mutability": "mutable", "name": "invariantBeforeAction", "nodeType": "VariableDeclaration", "scope": 3900, "src": "16952:29:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 3839, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16952:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 3847, "initialValue": {"arguments": [{"id": 3843, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3812, "src": "17016:8:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 3844, "name": "eclpParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3833, "src": "17026:10:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"id": 3845, "name": "derivedECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3835, "src": "17038:17:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}], "expression": {"id": 3841, "name": "GyroECLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2864, "src": "16984:12:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPMath_$2864_$", "typeString": "type(library GyroECLPMath)"}}, "id": 3842, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 964, "src": "16984:31:46", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_struct$_Params_$64_memory_ptr_$_t_struct$_DerivedParams_$79_memory_ptr_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory) pure returns (uint256)"}}, "id": 3846, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16984:72:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "16952:104:46"}, {"expression": {"arguments": [{"id": 3849, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3840, "src": "17083:21:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 3848, "name": "_distributeFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4248, "src": "17067:15:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 3850, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17067:38:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 3851, "nodeType": "ExpressionStatement", "src": "17067:38:46"}, {"assignments": [3853, 3856], "declarations": [{"constant": false, "id": 3853, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 3900, "src": "17117:20:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 3852, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17117:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 3856, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 3900, "src": "17139:26:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 3854, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17139:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3855, "nodeType": "ArrayTypeName", "src": "17139:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 3861, "initialValue": {"arguments": [{"id": 3858, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3812, "src": "17177:8:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 3859, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3818, "src": "17187:8:46", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 3857, "name": "_doJoin", "nodeType": "Identifier", "overloadedDeclarations": [3945, 10321], "referencedDeclaration": 3945, "src": "17169:7:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 3860, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17169:27:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "17116:80:46"}, {"condition": {"expression": {"id": 3862, "name": "_capParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9087, "src": "17211:10:46", "typeDescriptions": {"typeIdentifier": "t_struct$_CapParams_$12381_storage", "typeString": "struct ICappedLiquidity.CapParams storage ref"}}, "id": 3863, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "capEnabled", "nodeType": "MemberAccess", "referencedDeclaration": 12376, "src": "17211:21:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 3874, "nodeType": "IfStatement", "src": "17207:113:46", "trueBody": {"id": 3873, "nodeType": "Block", "src": "17234:86:46", "statements": [{"expression": {"arguments": [{"id": 3865, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3853, "src": "17259:12:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"id": 3867, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3809, "src": "17283:9:46", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 3866, "name": "balanceOf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19240, "src": "17273:9:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view returns (uint256)"}}, "id": 3868, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17273:20:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 3869, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19226, "src": "17295:11:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 3870, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17295:13:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 3864, "name": "_ensureCap", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9246, "src": "17248:10:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256,uint256) view"}}, "id": 3871, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17248:61:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 3872, "nodeType": "ExpressionStatement", "src": "17248:61:46"}]}}, {"expression": {"id": 3884, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 3875, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9293, "src": "17753:14:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 3878, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3840, "src": "17808:21:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 3879, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3853, "src": "17831:12:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 3880, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19226, "src": "17845:11:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 3881, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17845:13:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "74727565", "id": 3882, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "17860:4:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "expression": {"id": 3876, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7628, "src": "17770:12:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$7628_$", "typeString": "type(library GyroPoolMath)"}}, "id": 3877, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "liquidityInvariantUpdate", "nodeType": "MemberAccess", "referencedDeclaration": 7547, "src": "17770:37:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,bool) pure returns (uint256)"}}, "id": 3883, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17770:95:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "17753:112:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3885, "nodeType": "ExpressionStatement", "src": "17753:112:46"}, {"eventCall": {"arguments": [{"id": 3887, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3840, "src": "17900:21:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 3888, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9293, "src": "17923:14:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 3886, "name": "InvariantOldAndNew", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2981, "src": "17881:18:46", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256)"}}, "id": 3889, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17881:57:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 3890, "nodeType": "EmitStatement", "src": "17876:62:46"}, {"expression": {"components": [{"id": 3891, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3853, "src": "18069:12:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 3892, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3856, "src": "18083:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"arguments": [{"hexValue": "32", "id": 3896, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "18108:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 3895, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "18094:13:46", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 3893, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18098:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3894, "nodeType": "ArrayTypeName", "src": "18098:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 3897, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18094:16:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 3898, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "18068:43:46", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory,uint256[] memory)"}}, "functionReturnParameters": 3829, "id": 3899, "nodeType": "Return", "src": "18061:50:46"}]}, "documentation": {"id": 3803, "nodeType": "StructuredDocumentation", "src": "15017:1126:46", "text": " @dev Called whenever the Pool is joined after the first initialization join (see `_onInitializePool`).\n Returns the amount of BPT to mint, the token amounts that the Pool will receive in return, and the number of\n tokens to pay in protocol swap fees.\n Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n Minted BPT will be sent to `recipient`.\n The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n be downscaled (rounding up) before being returned to the Vault.\n Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onJoinPool`). These\n amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way"}, "id": 3901, "implemented": true, "kind": "function", "modifiers": [], "name": "_onJoinPool", "nodeType": "FunctionDefinition", "overrides": {"id": 3820, "nodeType": "OverrideSpecifier", "overrides": [], "src": "16406:8:46"}, "parameters": {"id": 3819, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 3805, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 3901, "src": "16178:7:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 3804, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "16178:7:46", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 3807, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 3901, "src": "16195:7:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 3806, "name": "address", "nodeType": "ElementaryTypeName", "src": "16195:7:46", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 3809, "mutability": "mutable", "name": "recipient", "nodeType": "VariableDeclaration", "scope": 3901, "src": "16212:17:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 3808, "name": "address", "nodeType": "ElementaryTypeName", "src": "16212:7:46", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 3812, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 3901, "src": "16239:25:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 3810, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16239:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3811, "nodeType": "ArrayTypeName", "src": "16239:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 3814, "mutability": "mutable", "name": "lastChangeBlock", "nodeType": "VariableDeclaration", "scope": 3901, "src": "16274:23:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 3813, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16274:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 3816, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 3901, "src": "16307:7:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 3815, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16307:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 3818, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 3901, "src": "16353:21:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 3817, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "16353:5:46", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "16168:212:46"}, "returnParameters": {"id": 3829, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 3822, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 3901, "src": "16445:7:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 3821, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16445:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 3825, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 3901, "src": "16466:16:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 3823, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16466:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3824, "nodeType": "ArrayTypeName", "src": "16466:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 3828, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 3901, "src": "16496:16:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 3826, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16496:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3827, "nodeType": "ArrayTypeName", "src": "16496:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "16431:91:46"}, "scope": 4566, "src": "16148:1970:46", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 3944, "nodeType": "Block", "src": "18264:441:46", "statements": [{"assignments": [3917], "declarations": [{"constant": false, "id": 3917, "mutability": "mutable", "name": "kind", "nodeType": "VariableDeclaration", "scope": 3944, "src": "18274:30:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$15097", "typeString": "enum BaseWeightedPool.JoinKind"}, "typeName": {"id": 3916, "name": "BaseWeightedPool.JoinKind", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 15097, "src": "18274:25:46", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$15097", "typeString": "enum BaseWeightedPool.JoinKind"}}, "visibility": "internal"}], "id": 3921, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 3918, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3906, "src": "18307:8:46", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 3919, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "joinKind", "nodeType": "MemberAccess", "referencedDeclaration": 8871, "src": "18307:17:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_enum$_JoinKind_$15097_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (enum BaseWeightedPool.JoinKind)"}}, "id": 3920, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18307:19:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$15097", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "VariableDeclarationStatement", "src": "18274:52:46"}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_JoinKind_$15097", "typeString": "enum BaseWeightedPool.JoinKind"}, "id": 3926, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 3922, "name": "kind", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3917, "src": "18463:4:46", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$15097", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 3923, "name": "BaseWeightedPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16298, "src": "18471:16:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BaseWeightedPool_$16298_$", "typeString": "type(contract BaseWeightedPool)"}}, "id": 3924, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "JoinKind", "nodeType": "MemberAccess", "referencedDeclaration": 15097, "src": "18471:25:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_JoinKind_$15097_$", "typeString": "type(enum BaseWeightedPool.JoinKind)"}}, "id": 3925, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "ALL_TOKENS_IN_FOR_EXACT_BPT_OUT", "nodeType": "MemberAccess", "src": "18471:57:46", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$15097", "typeString": "enum BaseWeightedPool.JoinKind"}}, "src": "18463:65:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 3942, "nodeType": "Block", "src": "18639:60:46", "statements": [{"expression": {"arguments": [{"expression": {"id": 3938, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12856, "src": "18661:6:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$12856_$", "typeString": "type(library Errors)"}}, "id": 3939, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNHANDLED_JOIN_KIND", "nodeType": "MemberAccess", "referencedDeclaration": 12570, "src": "18661:26:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 3937, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12459, "src": "18653:7:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$", "typeString": "function (uint256) pure"}}, "id": 3940, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18653:35:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 3941, "nodeType": "ExpressionStatement", "src": "18653:35:46"}]}, "id": 3943, "nodeType": "IfStatement", "src": "18459:240:46", "trueBody": {"id": 3936, "nodeType": "Block", "src": "18530:103:46", "statements": [{"expression": {"id": 3934, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 3927, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3909, "src": "18545:12:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 3928, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3912, "src": "18559:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 3929, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "18544:25:46", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 3931, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3904, "src": "18603:8:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 3932, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3906, "src": "18613:8:46", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 3930, "name": "_joinAllTokensInForExactBPTOut", "nodeType": "Identifier", "overloadedDeclarations": [3983], "referencedDeclaration": 3983, "src": "18572:30:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 3933, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18572:50:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "18544:78:46", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 3935, "nodeType": "ExpressionStatement", "src": "18544:78:46"}]}}]}, "id": 3945, "implemented": true, "kind": "function", "modifiers": [], "name": "_doJoin", "nodeType": "FunctionDefinition", "parameters": {"id": 3907, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 3904, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 3945, "src": "18141:25:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 3902, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18141:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3903, "nodeType": "ArrayTypeName", "src": "18141:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 3906, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 3945, "src": "18168:21:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 3905, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "18168:5:46", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "18140:50:46"}, "returnParameters": {"id": 3913, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 3909, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 3945, "src": "18214:20:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 3908, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18214:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 3912, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 3945, "src": "18236:26:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 3910, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18236:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3911, "nodeType": "ArrayTypeName", "src": "18236:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "18213:50:46"}, "scope": 4566, "src": "18124:581:46", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [10491], "body": {"id": 3982, "nodeType": "Block", "src": "18896:343:46", "statements": [{"assignments": [3960], "declarations": [{"constant": false, "id": 3960, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 3982, "src": "18906:20:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 3959, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18906:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 3964, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 3961, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3950, "src": "18929:8:46", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 3962, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "allTokensInForExactBptOut", "nodeType": "MemberAccess", "referencedDeclaration": 8985, "src": "18929:34:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (uint256)"}}, "id": 3963, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18929:36:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "18906:59:46"}, {"assignments": [3969], "declarations": [{"constant": false, "id": 3969, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 3982, "src": "19076:26:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 3967, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19076:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3968, "nodeType": "ArrayTypeName", "src": "19076:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 3977, "initialValue": {"arguments": [{"id": 3972, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3948, "src": "19151:8:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 3973, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3960, "src": "19161:12:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 3974, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19226, "src": "19175:11:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 3975, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19175:13:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 3970, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7628, "src": "19105:12:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$7628_$", "typeString": "type(library GyroPoolMath)"}}, "id": 3971, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcAllTokensInGivenExactBptOut", "nodeType": "MemberAccess", "referencedDeclaration": 6927, "src": "19105:45:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256[] memory)"}}, "id": 3976, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19105:84:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "19076:113:46"}, {"expression": {"components": [{"id": 3978, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3960, "src": "19208:12:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 3979, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3969, "src": "19222:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 3980, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "19207:25:46", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "functionReturnParameters": 3958, "id": 3981, "nodeType": "Return", "src": "19200:32:46"}]}, "id": 3983, "implemented": true, "kind": "function", "modifiers": [], "name": "_joinAllTokensInForExactBPTOut", "nodeType": "FunctionDefinition", "overrides": {"id": 3952, "nodeType": "OverrideSpecifier", "overrides": [], "src": "18839:8:46"}, "parameters": {"id": 3951, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 3948, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 3983, "src": "18751:25:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 3946, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18751:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3947, "nodeType": "ArrayTypeName", "src": "18751:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 3950, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 3983, "src": "18778:21:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 3949, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "18778:5:46", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "18750:50:46"}, "returnParameters": {"id": 3958, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 3954, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 3983, "src": "18865:7:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 3953, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18865:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 3957, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 3983, "src": "18874:16:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 3955, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18874:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3956, "nodeType": "ArrayTypeName", "src": "18874:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "18864:27:46"}, "scope": 4566, "src": "18711:528:46", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [10663], "body": {"id": 4089, "nodeType": "Block", "src": "20719:2494:46", "statements": [{"assignments": [4014, 4016], "declarations": [{"constant": false, "id": 4014, "mutability": "mutable", "name": "eclpParams", "nodeType": "VariableDeclaration", "scope": 4089, "src": "20884:37:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params"}, "typeName": {"id": 4013, "name": "GyroECLPMath.Params", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 64, "src": "20884:19:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_storage_ptr", "typeString": "struct GyroECLPMath.Params"}}, "visibility": "internal"}, {"constant": false, "id": 4016, "mutability": "mutable", "name": "derivedECLPParams", "nodeType": "VariableDeclaration", "scope": 4089, "src": "20923:51:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}, "typeName": {"id": 4015, "name": "GyroECLPMath.DerivedParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 79, "src": "20923:26:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_storage_ptr", "typeString": "struct GyroECLPMath.DerivedParams"}}, "visibility": "internal"}], "id": 4019, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 4017, "name": "reconstructECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3206, "src": "20978:21:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_Params_$64_memory_ptr_$_t_struct$_DerivedParams_$79_memory_ptr_$", "typeString": "function () view returns (struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "id": 4018, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20978:23:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_struct$_Params_$64_memory_ptr_$_t_struct$_DerivedParams_$79_memory_ptr_$", "typeString": "tuple(struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "20883:118:46"}, {"condition": {"arguments": [], "expression": {"argumentTypes": [], "id": 4020, "name": "_isNotPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19122, "src": "21178:12:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$", "typeString": "function () view returns (bool)"}}, "id": 4021, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21178:14:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 4078, "nodeType": "Block", "src": "22405:629:46", "statements": [{"expression": {"id": 4068, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 4061, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4003, "src": "22590:11:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 4062, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4006, "src": "22603:10:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 4063, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "22589:25:46", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 4065, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3993, "src": "22625:8:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 4066, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3999, "src": "22635:8:46", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 4064, "name": "_doExit", "nodeType": "Identifier", "overloadedDeclarations": [4134, 10732], "referencedDeclaration": 4134, "src": "22617:7:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 4067, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22617:27:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "22589:55:46", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4069, "nodeType": "ExpressionStatement", "src": "22589:55:46"}, {"expression": {"id": 4076, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4070, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9293, "src": "22989:14:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"arguments": [{"id": 4073, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "23011:7:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 4072, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23011:7:46", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}], "id": 4071, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "23006:4:46", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 4074, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23006:13:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint256", "typeString": "type(uint256)"}}, "id": 4075, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "23006:17:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "22989:34:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4077, "nodeType": "ExpressionStatement", "src": "22989:34:46"}]}, "id": 4079, "nodeType": "IfStatement", "src": "21174:1860:46", "trueBody": {"id": 4060, "nodeType": "Block", "src": "21194:1205:46", "statements": [{"assignments": [4023], "declarations": [{"constant": false, "id": 4023, "mutability": "mutable", "name": "invariantBeforeAction", "nodeType": "VariableDeclaration", "scope": 4060, "src": "21514:29:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4022, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21514:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 4030, "initialValue": {"arguments": [{"id": 4026, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3993, "src": "21578:8:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 4027, "name": "eclpParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4014, "src": "21588:10:46", "typeDescriptions": {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}}, {"id": 4028, "name": "derivedECLPParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4016, "src": "21600:17:46", "typeDescriptions": {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_struct$_Params_$64_memory_ptr", "typeString": "struct GyroECLPMath.Params memory"}, {"typeIdentifier": "t_struct$_DerivedParams_$79_memory_ptr", "typeString": "struct GyroECLPMath.DerivedParams memory"}], "expression": {"id": 4024, "name": "GyroECLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2864, "src": "21546:12:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroECLPMath_$2864_$", "typeString": "type(library GyroECLPMath)"}}, "id": 4025, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 964, "src": "21546:31:46", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_struct$_Params_$64_memory_ptr_$_t_struct$_DerivedParams_$79_memory_ptr_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,struct GyroECLPMath.Params memory,struct GyroECLPMath.DerivedParams memory) pure returns (uint256)"}}, "id": 4029, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21546:72:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "21514:104:46"}, {"expression": {"arguments": [{"id": 4032, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4023, "src": "21649:21:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 4031, "name": "_distributeFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4248, "src": "21633:15:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 4033, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21633:38:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4034, "nodeType": "ExpressionStatement", "src": "21633:38:46"}, {"expression": {"id": 4042, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 4035, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4003, "src": "21687:11:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 4036, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4006, "src": "21700:10:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 4037, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "21686:25:46", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 4039, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3993, "src": "21722:8:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 4040, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3999, "src": "21732:8:46", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 4038, "name": "_doExit", "nodeType": "Identifier", "overloadedDeclarations": [4134, 10732], "referencedDeclaration": 4134, "src": "21714:7:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 4041, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21714:27:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "21686:55:46", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4043, "nodeType": "ExpressionStatement", "src": "21686:55:46"}, {"expression": {"id": 4053, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4044, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9293, "src": "22199:14:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 4047, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4023, "src": "22254:21:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 4048, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4003, "src": "22277:11:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 4049, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19226, "src": "22290:11:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 4050, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22290:13:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "66616c7365", "id": 4051, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "22305:5:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "expression": {"id": 4045, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7628, "src": "22216:12:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$7628_$", "typeString": "type(library GyroPoolMath)"}}, "id": 4046, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "liquidityInvariantUpdate", "nodeType": "MemberAccess", "referencedDeclaration": 7547, "src": "22216:37:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,bool) pure returns (uint256)"}}, "id": 4052, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22216:95:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "22199:112:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4054, "nodeType": "ExpressionStatement", "src": "22199:112:46"}, {"eventCall": {"arguments": [{"id": 4056, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4023, "src": "22350:21:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 4057, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9293, "src": "22373:14:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 4055, "name": "InvariantOldAndNew", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2981, "src": "22331:18:46", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256)"}}, "id": 4058, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22331:57:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4059, "nodeType": "EmitStatement", "src": "22326:62:46"}]}}, {"expression": {"components": [{"id": 4080, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4003, "src": "23164:11:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 4081, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4006, "src": "23177:10:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"arguments": [{"hexValue": "32", "id": 4085, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "23203:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 4084, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "23189:13:46", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 4082, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23193:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4083, "nodeType": "ArrayTypeName", "src": "23193:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 4086, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23189:16:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 4087, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "23163:43:46", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory,uint256[] memory)"}}, "functionReturnParameters": 4010, "id": 4088, "nodeType": "Return", "src": "23156:50:46"}]}, "documentation": {"id": 3984, "nodeType": "StructuredDocumentation", "src": "19245:1054:46", "text": " @dev Called whenever the Pool is exited.\n Returns the amount of BPT to burn, the token amounts for each Pool token that the Pool will grant in return, and\n the number of tokens to pay in protocol swap fees.\n Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n BPT will be burnt from `sender`.\n The Pool will grant tokens to `recipient`. These amounts are considered upscaled and will be downscaled\n (rounding down) before being returned to the Vault.\n Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onExitPool`). These\n amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way"}, "id": 4090, "implemented": true, "kind": "function", "modifiers": [], "name": "_onExitPool", "nodeType": "FunctionDefinition", "overrides": {"id": 4001, "nodeType": "OverrideSpecifier", "overrides": [], "src": "20553:8:46"}, "parameters": {"id": 4000, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 3986, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 4090, "src": "20334:7:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 3985, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "20334:7:46", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 3988, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 4090, "src": "20351:7:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 3987, "name": "address", "nodeType": "ElementaryTypeName", "src": "20351:7:46", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 3990, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 4090, "src": "20368:7:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 3989, "name": "address", "nodeType": "ElementaryTypeName", "src": "20368:7:46", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 3993, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 4090, "src": "20385:25:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 3991, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20385:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 3992, "nodeType": "ArrayTypeName", "src": "20385:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 3995, "mutability": "mutable", "name": "lastChangeBlock", "nodeType": "VariableDeclaration", "scope": 4090, "src": "20420:23:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 3994, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20420:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 3997, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 4090, "src": "20453:7:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 3996, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20453:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 3999, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 4090, "src": "20500:21:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 3998, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "20500:5:46", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "20324:203:46"}, "returnParameters": {"id": 4010, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4003, "mutability": "mutable", "name": "bptAmountIn", "nodeType": "VariableDeclaration", "scope": 4090, "src": "20592:19:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4002, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20592:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4006, "mutability": "mutable", "name": "amountsOut", "nodeType": "VariableDeclaration", "scope": 4090, "src": "20625:27:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 4004, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20625:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4005, "nodeType": "ArrayTypeName", "src": "20625:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 4009, "mutability": "mutable", "name": "dueProtocolFeeAmounts", "nodeType": "VariableDeclaration", "scope": 4090, "src": "20666:38:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 4007, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20666:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4008, "nodeType": "ArrayTypeName", "src": "20666:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "20578:136:46"}, "scope": 4566, "src": "20304:2909:46", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 4133, "nodeType": "Block", "src": "23359:452:46", "statements": [{"assignments": [4106], "declarations": [{"constant": false, "id": 4106, "mutability": "mutable", "name": "kind", "nodeType": "VariableDeclaration", "scope": 4133, "src": "23369:30:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$15102", "typeString": "enum BaseWeightedPool.ExitKind"}, "typeName": {"id": 4105, "name": "BaseWeightedPool.ExitKind", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 15102, "src": "23369:25:46", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$15102", "typeString": "enum BaseWeightedPool.ExitKind"}}, "visibility": "internal"}], "id": 4110, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 4107, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4095, "src": "23402:8:46", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 4108, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "exitKind", "nodeType": "MemberAccess", "referencedDeclaration": 8887, "src": "23402:17:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_enum$_ExitKind_$15102_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (enum BaseWeightedPool.ExitKind)"}}, "id": 4109, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23402:19:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$15102", "typeString": "enum BaseWeightedPool.ExitKind"}}, "nodeType": "VariableDeclarationStatement", "src": "23369:52:46"}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_ExitKind_$15102", "typeString": "enum BaseWeightedPool.ExitKind"}, "id": 4115, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4111, "name": "kind", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4106, "src": "23576:4:46", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$15102", "typeString": "enum BaseWeightedPool.ExitKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 4112, "name": "BaseWeightedPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16298, "src": "23584:16:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BaseWeightedPool_$16298_$", "typeString": "type(contract BaseWeightedPool)"}}, "id": 4113, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ExitKind", "nodeType": "MemberAccess", "referencedDeclaration": 15102, "src": "23584:25:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_ExitKind_$15102_$", "typeString": "type(enum BaseWeightedPool.ExitKind)"}}, "id": 4114, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "EXACT_BPT_IN_FOR_TOKENS_OUT", "nodeType": "MemberAccess", "src": "23584:53:46", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$15102", "typeString": "enum BaseWeightedPool.ExitKind"}}, "src": "23576:61:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 4131, "nodeType": "Block", "src": "23745:60:46", "statements": [{"expression": {"arguments": [{"expression": {"id": 4127, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12856, "src": "23767:6:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$12856_$", "typeString": "type(library Errors)"}}, "id": 4128, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNHANDLED_EXIT_KIND", "nodeType": "MemberAccess", "referencedDeclaration": 12648, "src": "23767:26:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 4126, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12459, "src": "23759:7:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$", "typeString": "function (uint256) pure"}}, "id": 4129, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23759:35:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4130, "nodeType": "ExpressionStatement", "src": "23759:35:46"}]}, "id": 4132, "nodeType": "IfStatement", "src": "23572:233:46", "trueBody": {"id": 4125, "nodeType": "Block", "src": "23639:100:46", "statements": [{"expression": {"id": 4123, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 4116, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4098, "src": "23654:11:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 4117, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4101, "src": "23667:10:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 4118, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "23653:25:46", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 4120, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4093, "src": "23709:8:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 4121, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4095, "src": "23719:8:46", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 4119, "name": "_exitExactBPTInForTokensOut", "nodeType": "Identifier", "overloadedDeclarations": [4172], "referencedDeclaration": 4172, "src": "23681:27:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 4122, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23681:47:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "23653:75:46", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4124, "nodeType": "ExpressionStatement", "src": "23653:75:46"}]}}]}, "id": 4134, "implemented": true, "kind": "function", "modifiers": [], "name": "_doExit", "nodeType": "FunctionDefinition", "parameters": {"id": 4096, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4093, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 4134, "src": "23236:25:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 4091, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23236:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4092, "nodeType": "ArrayTypeName", "src": "23236:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 4095, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 4134, "src": "23263:21:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 4094, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "23263:5:46", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "23235:50:46"}, "returnParameters": {"id": 4102, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4098, "mutability": "mutable", "name": "bptAmountIn", "nodeType": "VariableDeclaration", "scope": 4134, "src": "23309:19:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4097, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23309:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4101, "mutability": "mutable", "name": "amountsOut", "nodeType": "VariableDeclaration", "scope": 4134, "src": "23330:27:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 4099, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23330:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4100, "nodeType": "ArrayTypeName", "src": "23330:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "23308:50:46"}, "scope": 4566, "src": "23219:592:46", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [10839], "body": {"id": 4171, "nodeType": "Block", "src": "23999:746:46", "statements": [{"assignments": [4149], "declarations": [{"constant": false, "id": 4149, "mutability": "mutable", "name": "bptAmountIn", "nodeType": "VariableDeclaration", "scope": 4171, "src": "24420:19:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4148, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24420:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 4153, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 4150, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4139, "src": "24442:8:46", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 4151, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "exactBptInForTokensOut", "nodeType": "MemberAccess", "referencedDeclaration": 9032, "src": "24442:31:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (uint256)"}}, "id": 4152, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24442:33:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "24420:55:46"}, {"assignments": [4158], "declarations": [{"constant": false, "id": 4158, "mutability": "mutable", "name": "amountsOut", "nodeType": "VariableDeclaration", "scope": 4171, "src": "24586:27:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 4156, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24586:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4157, "nodeType": "ArrayTypeName", "src": "24586:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 4166, "initialValue": {"arguments": [{"id": 4161, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4137, "src": "24659:8:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 4162, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4149, "src": "24669:11:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 4163, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19226, "src": "24682:11:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 4164, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24682:13:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 4159, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7628, "src": "24616:12:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$7628_$", "typeString": "type(library GyroPoolMath)"}}, "id": 4160, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcTokensOutGivenExactBptIn", "nodeType": "MemberAccess", "referencedDeclaration": 6979, "src": "24616:42:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256[] memory)"}}, "id": 4165, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24616:80:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "24586:110:46"}, {"expression": {"components": [{"id": 4167, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4149, "src": "24714:11:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 4168, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4158, "src": "24727:10:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 4169, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "24713:25:46", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "functionReturnParameters": 4147, "id": 4170, "nodeType": "Return", "src": "24706:32:46"}]}, "id": 4172, "implemented": true, "kind": "function", "modifiers": [], "name": "_exitExactBPTInForTokensOut", "nodeType": "FunctionDefinition", "overrides": {"id": 4141, "nodeType": "OverrideSpecifier", "overrides": [], "src": "23942:8:46"}, "parameters": {"id": 4140, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4137, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 4172, "src": "23854:25:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 4135, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23854:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4136, "nodeType": "ArrayTypeName", "src": "23854:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 4139, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 4172, "src": "23881:21:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 4138, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "23881:5:46", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "23853:50:46"}, "returnParameters": {"id": 4147, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4143, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 4172, "src": "23968:7:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4142, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23968:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4146, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 4172, "src": "23977:16:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 4144, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23977:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4145, "nodeType": "ArrayTypeName", "src": "23977:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "23967:27:46"}, "scope": 4566, "src": "23817:928:46", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 4220, "nodeType": "Block", "src": "24952:272:46", "statements": [{"expression": {"id": 4190, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4184, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4182, "src": "24962:8:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "32", "id": 4188, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "24987:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 4187, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "24973:13:46", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 4185, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24977:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4186, "nodeType": "ArrayTypeName", "src": "24977:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 4189, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24973:16:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "src": "24962:27:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 4191, "nodeType": "ExpressionStatement", "src": "24962:27:46"}, {"condition": {"id": 4192, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4178, "src": "25003:15:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 4218, "nodeType": "Block", "src": "25122:96:46", "statements": [{"expression": {"id": 4210, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 4206, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4182, "src": "25136:8:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 4208, "indexExpression": {"hexValue": "30", "id": 4207, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "25145:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "25136:11:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 4209, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4176, "src": "25150:15:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "25136:29:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4211, "nodeType": "ExpressionStatement", "src": "25136:29:46"}, {"expression": {"id": 4216, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 4212, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4182, "src": "25179:8:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 4214, "indexExpression": {"hexValue": "31", "id": 4213, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "25188:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "25179:11:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 4215, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4174, "src": "25193:14:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "25179:28:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4217, "nodeType": "ExpressionStatement", "src": "25179:28:46"}]}, "id": 4219, "nodeType": "IfStatement", "src": "24999:219:46", "trueBody": {"id": 4205, "nodeType": "Block", "src": "25020:96:46", "statements": [{"expression": {"id": 4197, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 4193, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4182, "src": "25034:8:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 4195, "indexExpression": {"hexValue": "30", "id": 4194, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "25043:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "25034:11:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 4196, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4174, "src": "25048:14:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "25034:28:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4198, "nodeType": "ExpressionStatement", "src": "25034:28:46"}, {"expression": {"id": 4203, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 4199, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4182, "src": "25076:8:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 4201, "indexExpression": {"hexValue": "31", "id": 4200, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "25085:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "25076:11:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 4202, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4176, "src": "25090:15:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "25076:29:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4204, "nodeType": "ExpressionStatement", "src": "25076:29:46"}]}}]}, "id": 4221, "implemented": true, "kind": "function", "modifiers": [], "name": "_balancesFromTokenInOut", "nodeType": "FunctionDefinition", "parameters": {"id": 4179, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4174, "mutability": "mutable", "name": "balanceTokenIn", "nodeType": "VariableDeclaration", "scope": 4221, "src": "24810:22:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4173, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24810:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4176, "mutability": "mutable", "name": "balanceTokenOut", "nodeType": "VariableDeclaration", "scope": 4221, "src": "24842:23:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4175, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24842:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4178, "mutability": "mutable", "name": "tokenInIsToken0", "nodeType": "VariableDeclaration", "scope": 4221, "src": "24875:20:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 4177, "name": "bool", "nodeType": "ElementaryTypeName", "src": "24875:4:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "24800:101:46"}, "returnParameters": {"id": 4183, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4182, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 4221, "src": "24925:25:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 4180, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24925:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4181, "nodeType": "ArrayTypeName", "src": "24925:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "24924:27:46"}, "scope": 4566, "src": "24768:456:46", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 4247, "nodeType": "Block", "src": "25749:518:46", "statements": [{"assignments": [4228, 4230, 4232, 4234], "declarations": [{"constant": false, "id": 4228, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 4247, "src": "25977:16:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4227, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25977:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4230, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 4247, "src": "25995:20:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4229, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25995:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4232, "mutability": "mutable", "name": "gyroTreasury", "nodeType": "VariableDeclaration", "scope": 4247, "src": "26017:20:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4231, "name": "address", "nodeType": "ElementaryTypeName", "src": "26017:7:46", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 4234, "mutability": "mutable", "name": "balTreasury", "nodeType": "VariableDeclaration", "scope": 4247, "src": "26039:19:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4233, "name": "address", "nodeType": "ElementaryTypeName", "src": "26039:7:46", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 4239, "initialValue": {"arguments": [{"id": 4236, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9293, "src": "26101:14:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 4237, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4224, "src": "26129:21:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 4235, "name": "_getDueProtocolFeeAmounts", "nodeType": "Identifier", "overloadedDeclarations": [4273, 4332], "referencedDeclaration": 4332, "src": "26062:25:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "function (uint256,uint256) view returns (uint256,uint256,address,address)"}}, "id": 4238, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26062:98:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "nodeType": "VariableDeclarationStatement", "src": "25976:184:46"}, {"expression": {"arguments": [{"id": 4241, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4228, "src": "26210:8:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 4242, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4230, "src": "26220:12:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 4243, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4232, "src": "26234:12:46", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 4244, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4234, "src": "26248:11:46", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 4240, "name": "_payFeesBpt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4364, "src": "26198:11:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$", "typeString": "function (uint256,uint256,address,address)"}}, "id": 4245, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26198:62:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4246, "nodeType": "ExpressionStatement", "src": "26198:62:46"}]}, "documentation": {"id": 4222, "nodeType": "StructuredDocumentation", "src": "25352:326:46", "text": " Note: This function is identical to that used in Gyro2CLPPool.sol\n @dev Computes and distributes fees between the Balancer and the Gyro treasury\n The fees are computed and distributed in BPT rather than using the\n Balancer regular distribution mechanism which would pay these in underlying"}, "id": 4248, "implemented": true, "kind": "function", "modifiers": [], "name": "_distributeFees", "nodeType": "FunctionDefinition", "parameters": {"id": 4225, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4224, "mutability": "mutable", "name": "invariantBeforeAction", "nodeType": "VariableDeclaration", "scope": 4248, "src": "25709:29:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4223, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25709:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "25708:31:46"}, "returnParameters": {"id": 4226, "nodeType": "ParameterList", "parameters": [], "src": "25749:0:46"}, "scope": 4566, "src": "25684:583:46", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [11071], "body": {"id": 4272, "nodeType": "Block", "src": "26748:42:46", "statements": [{"expression": {"arguments": [{"hexValue": "4e6f7420696d706c656d656e746564", "id": 4269, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "26765:17:46", "typeDescriptions": {"typeIdentifier": "t_stringliteral_9f5474d7a5849b3f79e8aee7ea2c60bcd36a60a08b4fa41f97e2fccf1c4df98b", "typeString": "literal_string \"Not implemented\""}, "value": "Not implemented"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_9f5474d7a5849b3f79e8aee7ea2c60bcd36a60a08b4fa41f97e2fccf1c4df98b", "typeString": "literal_string \"Not implemented\""}], "id": 4268, "name": "revert", "nodeType": "Identifier", "overloadedDeclarations": [-19, -19], "referencedDeclaration": -19, "src": "26758:6:46", "typeDescriptions": {"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory) pure"}}, "id": 4270, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26758:25:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4271, "nodeType": "ExpressionStatement", "src": "26758:25:46"}]}, "documentation": {"id": 4249, "nodeType": "StructuredDocumentation", "src": "26273:169:46", "text": " Note: This function is identical to that used in Gyro2CLPPool.sol\n @dev this function overrides inherited function to make sure it is never used"}, "id": 4273, "implemented": true, "kind": "function", "modifiers": [], "name": "_getDueProtocolFeeAmounts", "nodeType": "FunctionDefinition", "overrides": {"id": 4263, "nodeType": "OverrideSpecifier", "overrides": [], "src": "26712:8:46"}, "parameters": {"id": 4262, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4252, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 4273, "src": "26491:16:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 4250, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26491:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4251, "nodeType": "ArrayTypeName", "src": "26491:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 4255, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 4273, "src": "26530:16:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 4253, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26530:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4254, "nodeType": "ArrayTypeName", "src": "26530:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 4257, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 4273, "src": "26578:7:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4256, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26578:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4259, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 4273, "src": "26617:7:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4258, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26617:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4261, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 4273, "src": "26655:7:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4260, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26655:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "26481:216:46"}, "returnParameters": {"id": 4267, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4266, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 4273, "src": "26730:16:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 4264, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26730:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4265, "nodeType": "ArrayTypeName", "src": "26730:9:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "26729:18:46"}, "scope": 4566, "src": "26447:343:46", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 4331, "nodeType": "Block", "src": "27413:681:46", "statements": [{"assignments": [4290, 4292, 4294, 4296], "declarations": [{"constant": false, "id": 4290, "mutability": "mutable", "name": "protocolSwapFeePerc", "nodeType": "VariableDeclaration", "scope": 4331, "src": "27424:27:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4289, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27424:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4292, "mutability": "mutable", "name": "protocolFeeGyroPortion", "nodeType": "VariableDeclaration", "scope": 4331, "src": "27453:30:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4291, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27453:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4294, "mutability": "mutable", "name": "gyroTreasury", "nodeType": "VariableDeclaration", "scope": 4331, "src": "27485:20:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4293, "name": "address", "nodeType": "ElementaryTypeName", "src": "27485:7:46", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 4296, "mutability": "mutable", "name": "balTreasury", "nodeType": "VariableDeclaration", "scope": 4331, "src": "27507:19:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4295, "name": "address", "nodeType": "ElementaryTypeName", "src": "27507:7:46", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 4299, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 4297, "name": "_getFeesMetadata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4404, "src": "27530:16:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "function () view returns (uint256,uint256,address,address)"}}, "id": 4298, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27530:18:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "nodeType": "VariableDeclarationStatement", "src": "27423:125:46"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4302, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4300, "name": "protocolSwapFeePerc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4290, "src": "27644:19:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 4301, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "27667:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "27644:24:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4310, "nodeType": "IfStatement", "src": "27640:95:46", "trueBody": {"id": 4309, "nodeType": "Block", "src": "27670:65:46", "statements": [{"expression": {"components": [{"hexValue": "30", "id": 4303, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "27692:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"hexValue": "30", "id": 4304, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "27695:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"id": 4305, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4294, "src": "27698:12:46", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 4306, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4296, "src": "27712:11:46", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 4307, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "27691:33:46", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_address_$_t_address_$", "typeString": "tuple(int_const 0,int_const 0,address,address)"}}, "functionReturnParameters": 4288, "id": 4308, "nodeType": "Return", "src": "27684:40:46"}]}}, {"assignments": [4312, 4314], "declarations": [{"constant": false, "id": 4312, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 4331, "src": "27779:16:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4311, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27779:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4314, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 4331, "src": "27797:20:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4313, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27797:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 4324, "initialValue": {"arguments": [{"id": 4317, "name": "previousInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4276, "src": "27865:17:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 4318, "name": "currentInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4278, "src": "27896:16:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 4319, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19226, "src": "27926:11:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 4320, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27926:13:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 4321, "name": "protocolSwapFeePerc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4290, "src": "27953:19:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 4322, "name": "protocolFeeGyroPortion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4292, "src": "27986:22:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 4315, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7628, "src": "27821:12:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$7628_$", "typeString": "type(library GyroPoolMath)"}}, "id": 4316, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcProtocolFees", "nodeType": "MemberAccess", "referencedDeclaration": 7063, "src": "27821:30:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,uint256,uint256) pure returns (uint256,uint256)"}}, "id": 4323, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27821:197:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "27778:240:46"}, {"expression": {"components": [{"id": 4325, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4312, "src": "28037:8:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 4326, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4314, "src": "28047:12:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 4327, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4294, "src": "28061:12:46", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 4328, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4296, "src": "28075:11:46", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 4329, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "28036:51:46", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "functionReturnParameters": 4288, "id": 4330, "nodeType": "Return", "src": "28029:58:46"}]}, "documentation": {"id": 4274, "nodeType": "StructuredDocumentation", "src": "26796:379:46", "text": " @dev\n Note: This function is identical to that used in Gyro2CLPPool.sol.\n Calculates protocol fee amounts in BPT terms.\n protocolSwapFeePercentage is not used here b/c we take parameters from GyroConfig instead.\n Returns: BPT due to Gyro, BPT due to Balancer, receiving address for Gyro fees, receiving address for Balancer\n fees."}, "id": 4332, "implemented": true, "kind": "function", "modifiers": [], "name": "_getDueProtocolFeeAmounts", "nodeType": "FunctionDefinition", "parameters": {"id": 4279, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4276, "mutability": "mutable", "name": "previousInvariant", "nodeType": "VariableDeclaration", "scope": 4332, "src": "27215:25:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4275, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27215:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4278, "mutability": "mutable", "name": "currentInvariant", "nodeType": "VariableDeclaration", "scope": 4332, "src": "27242:24:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4277, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27242:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "27214:53:46"}, "returnParameters": {"id": 4288, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4281, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 4332, "src": "27328:7:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4280, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27328:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4283, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 4332, "src": "27349:7:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4282, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27349:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4285, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 4332, "src": "27370:7:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4284, "name": "address", "nodeType": "ElementaryTypeName", "src": "27370:7:46", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 4287, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 4332, "src": "27391:7:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4286, "name": "address", "nodeType": "ElementaryTypeName", "src": "27391:7:46", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "27314:94:46"}, "scope": 4566, "src": "27180:914:46", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 4363, "nodeType": "Block", "src": "28324:283:46", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4345, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4343, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4334, "src": "28382:8:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 4344, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "28393:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "28382:12:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4352, "nodeType": "IfStatement", "src": "28378:82:46", "trueBody": {"id": 4351, "nodeType": "Block", "src": "28396:64:46", "statements": [{"expression": {"arguments": [{"id": 4347, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4338, "src": "28426:12:46", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 4348, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4334, "src": "28440:8:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 4346, "name": "_mintPoolTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16507, "src": "28410:15:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 4349, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28410:39:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4350, "nodeType": "ExpressionStatement", "src": "28410:39:46"}]}}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4355, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4353, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4336, "src": "28516:12:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 4354, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "28531:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "28516:16:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4362, "nodeType": "IfStatement", "src": "28512:89:46", "trueBody": {"id": 4361, "nodeType": "Block", "src": "28534:67:46", "statements": [{"expression": {"arguments": [{"id": 4357, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4340, "src": "28564:11:46", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 4358, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4336, "src": "28577:12:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 4356, "name": "_mintPoolTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16507, "src": "28548:15:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 4359, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28548:42:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4360, "nodeType": "ExpressionStatement", "src": "28548:42:46"}]}}]}, "id": 4364, "implemented": true, "kind": "function", "modifiers": [], "name": "_payFeesBpt", "nodeType": "FunctionDefinition", "parameters": {"id": 4341, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4334, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 4364, "src": "28203:16:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4333, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28203:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4336, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 4364, "src": "28229:20:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4335, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28229:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4338, "mutability": "mutable", "name": "gyroTreasury", "nodeType": "VariableDeclaration", "scope": 4364, "src": "28259:20:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4337, "name": "address", "nodeType": "ElementaryTypeName", "src": "28259:7:46", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 4340, "mutability": "mutable", "name": "balTreasury", "nodeType": "VariableDeclaration", "scope": 4364, "src": "28289:19:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4339, "name": "address", "nodeType": "ElementaryTypeName", "src": "28289:7:46", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "28193:121:46"}, "returnParameters": {"id": 4342, "nodeType": "ParameterList", "parameters": [], "src": "28324:0:46"}, "scope": 4566, "src": "28173:434:46", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 4403, "nodeType": "Block", "src": "28859:326:46", "statements": [{"expression": {"components": [{"arguments": [{"arguments": [{"id": 4379, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "28931:4:46", "typeDescriptions": {"typeIdentifier": "t_contract$_GyroECLPPool_$4566", "typeString": "contract GyroECLPPool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_GyroECLPPool_$4566", "typeString": "contract GyroECLPPool"}], "id": 4378, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "28923:7:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 4377, "name": "address", "nodeType": "ElementaryTypeName", "src": "28923:7:46", "typeDescriptions": {}}}, "id": 4380, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28923:13:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 4381, "name": "POOL_TYPE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2910, "src": "28938:9:46", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 4375, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2941, "src": "28890:10:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$11634", "typeString": "contract IGyroConfig"}}, "id": 4376, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getSwapFeePercForPool", "nodeType": "MemberAccess", "referencedDeclaration": 11658, "src": "28890:32:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IGyroConfig_$11634_$_t_address_$_t_bytes32_$returns$_t_uint256_$bound_to$_t_contract$_IGyroConfig_$11634_$", "typeString": "function (contract IGyroConfig,address,bytes32) view returns (uint256)"}}, "id": 4382, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28890:58:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"arguments": [{"id": 4387, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "29014:4:46", "typeDescriptions": {"typeIdentifier": "t_contract$_GyroECLPPool_$4566", "typeString": "contract GyroECLPPool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_GyroECLPPool_$4566", "typeString": "contract GyroECLPPool"}], "id": 4386, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "29006:7:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 4385, "name": "address", "nodeType": "ElementaryTypeName", "src": "29006:7:46", "typeDescriptions": {}}}, "id": 4388, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29006:13:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 4389, "name": "POOL_TYPE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2910, "src": "29021:9:46", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 4383, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2941, "src": "28962:10:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$11634", "typeString": "contract IGyroConfig"}}, "id": 4384, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getProtocolFeeGyroPortionForPool", "nodeType": "MemberAccess", "referencedDeclaration": 11678, "src": "28962:43:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IGyroConfig_$11634_$_t_address_$_t_bytes32_$returns$_t_uint256_$bound_to$_t_contract$_IGyroConfig_$11634_$", "typeString": "function (contract IGyroConfig,address,bytes32) view returns (uint256)"}}, "id": 4390, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28962:69:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"expression": {"id": 4393, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11755, "src": "29067:14:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$11755_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 4394, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "GYRO_TREASURY_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 11751, "src": "29067:32:46", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 4391, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2941, "src": "29045:10:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$11634", "typeString": "contract IGyroConfig"}}, "id": 4392, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getAddress", "nodeType": "MemberAccess", "referencedDeclaration": 11609, "src": "29045:21:46", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$", "typeString": "function (bytes32) view external returns (address)"}}, "id": 4395, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29045:55:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"expression": {"id": 4398, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11755, "src": "29136:14:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$11755_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 4399, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "BAL_TREASURY_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 11754, "src": "29136:31:46", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 4396, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2941, "src": "29114:10:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$11634", "typeString": "contract IGyroConfig"}}, "id": 4397, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getAddress", "nodeType": "MemberAccess", "referencedDeclaration": 11609, "src": "29114:21:46", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$", "typeString": "function (bytes32) view external returns (address)"}}, "id": 4400, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29114:54:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 4401, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "28876:302:46", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "functionReturnParameters": 4374, "id": 4402, "nodeType": "Return", "src": "28869:309:46"}]}, "id": 4404, "implemented": true, "kind": "function", "modifiers": [], "name": "_getFeesMetadata", "nodeType": "FunctionDefinition", "parameters": {"id": 4365, "nodeType": "ParameterList", "parameters": [], "src": "28711:2:46"}, "returnParameters": {"id": 4374, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4367, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 4404, "src": "28774:7:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4366, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28774:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4369, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 4404, "src": "28795:7:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4368, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28795:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4371, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 4404, "src": "28816:7:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4370, "name": "address", "nodeType": "ElementaryTypeName", "src": "28816:7:46", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 4373, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 4404, "src": "28837:7:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4372, "name": "address", "nodeType": "ElementaryTypeName", "src": "28837:7:46", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "28760:94:46"}, "scope": 4566, "src": "28686:499:46", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [11565], "body": {"id": 4414, "nodeType": "Block", "src": "29247:35:46", "statements": [{"expression": {"arguments": [{"id": 4411, "name": "paused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4406, "src": "29268:6:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 4410, "name": "_setPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19094, "src": "29257:10:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$", "typeString": "function (bool)"}}, "id": 4412, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29257:18:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4413, "nodeType": "ExpressionStatement", "src": "29257:18:46"}]}, "id": 4415, "implemented": true, "kind": "function", "modifiers": [], "name": "_setPausedState", "nodeType": "FunctionDefinition", "overrides": {"id": 4408, "nodeType": "OverrideSpecifier", "overrides": [], "src": "29238:8:46"}, "parameters": {"id": 4407, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4406, "mutability": "mutable", "name": "paused", "nodeType": "VariableDeclaration", "scope": 4415, "src": "29216:11:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 4405, "name": "bool", "nodeType": "ElementaryTypeName", "src": "29216:4:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "29215:13:46"}, "returnParameters": {"id": 4409, "nodeType": "ParameterList", "parameters": [], "src": "29247:0:46"}, "scope": 4566, "src": "29191:91:46", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [11185], "body": {"id": 4470, "nodeType": "Block", "src": "29387:439:46", "statements": [{"assignments": [4424], "declarations": [{"constant": false, "id": 4424, "mutability": "mutable", "name": "rateProvider", "nodeType": "VariableDeclaration", "scope": 4470, "src": "29397:26:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$8636", "typeString": "contract IRateProvider"}, "typeName": {"id": 4423, "name": "IRateProvider", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 8636, "src": "29397:13:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$8636", "typeString": "contract IRateProvider"}}, "visibility": "internal"}], "id": 4425, "nodeType": "VariableDeclarationStatement", "src": "29397:26:46"}, {"assignments": [4427], "declarations": [{"constant": false, "id": 4427, "mutability": "mutable", "name": "scalingFactor", "nodeType": "VariableDeclaration", "scope": 4470, "src": "29433:21:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4426, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "29433:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 4428, "nodeType": "VariableDeclarationStatement", "src": "29433:21:46"}, {"condition": {"id": 4429, "name": "token0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4417, "src": "29468:6:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 4447, "nodeType": "Block", "src": "29580:98:46", "statements": [{"expression": {"id": 4441, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4439, "name": "rateProvider", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4424, "src": "29594:12:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$8636", "typeString": "contract IRateProvider"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 4440, "name": "rateProvider1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2946, "src": "29609:13:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$8636", "typeString": "contract IRateProvider"}}, "src": "29594:28:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$8636", "typeString": "contract IRateProvider"}}, "id": 4442, "nodeType": "ExpressionStatement", "src": "29594:28:46"}, {"expression": {"id": 4445, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4443, "name": "scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4427, "src": "29636:13:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 4444, "name": "_scalingFactor1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9312, "src": "29652:15:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "29636:31:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4446, "nodeType": "ExpressionStatement", "src": "29636:31:46"}]}, "id": 4448, "nodeType": "IfStatement", "src": "29464:214:46", "trueBody": {"id": 4438, "nodeType": "Block", "src": "29476:98:46", "statements": [{"expression": {"id": 4432, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4430, "name": "rateProvider", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4424, "src": "29490:12:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$8636", "typeString": "contract IRateProvider"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 4431, "name": "rateProvider0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2944, "src": "29505:13:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$8636", "typeString": "contract IRateProvider"}}, "src": "29490:28:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$8636", "typeString": "contract IRateProvider"}}, "id": 4433, "nodeType": "ExpressionStatement", "src": "29490:28:46"}, {"expression": {"id": 4436, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4434, "name": "scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4427, "src": "29532:13:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 4435, "name": "_scalingFactor0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9310, "src": "29548:15:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "29532:31:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4437, "nodeType": "ExpressionStatement", "src": "29532:31:46"}]}}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 4457, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 4451, "name": "rateProvider", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4424, "src": "29699:12:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$8636", "typeString": "contract IRateProvider"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IRateProvider_$8636", "typeString": "contract IRateProvider"}], "id": 4450, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "29691:7:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 4449, "name": "address", "nodeType": "ElementaryTypeName", "src": "29691:7:46", "typeDescriptions": {}}}, "id": 4452, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29691:21:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 4455, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "29724:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 4454, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "29716:7:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 4453, "name": "address", "nodeType": "ElementaryTypeName", "src": "29716:7:46", "typeDescriptions": {}}}, "id": 4456, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29716:10:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "29691:35:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4467, "nodeType": "IfStatement", "src": "29687:102:46", "trueBody": {"expression": {"id": 4465, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4458, "name": "scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4427, "src": "29728:13:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 4461, "name": "rateProvider", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4424, "src": "29766:12:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$8636", "typeString": "contract IRateProvider"}}, "id": 4462, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getRate", "nodeType": "MemberAccess", "referencedDeclaration": 8635, "src": "29766:20:46", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 4463, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29766:22:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 4459, "name": "scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4427, "src": "29744:13:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4460, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mulDown", "nodeType": "MemberAccess", "referencedDeclaration": 6298, "src": "29744:21:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 4464, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29744:45:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "29728:61:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4466, "nodeType": "ExpressionStatement", "src": "29728:61:46"}}, {"expression": {"id": 4468, "name": "scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4427, "src": "29806:13:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 4422, "id": 4469, "nodeType": "Return", "src": "29799:20:46"}]}, "id": 4471, "implemented": true, "kind": "function", "modifiers": [], "name": "_scalingFactor", "nodeType": "FunctionDefinition", "overrides": {"id": 4419, "nodeType": "OverrideSpecifier", "overrides": [], "src": "29360:8:46"}, "parameters": {"id": 4418, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4417, "mutability": "mutable", "name": "token0", "nodeType": "VariableDeclaration", "scope": 4471, "src": "29333:11:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 4416, "name": "bool", "nodeType": "ElementaryTypeName", "src": "29333:4:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "29332:13:46"}, "returnParameters": {"id": 4422, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4421, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 4471, "src": "29378:7:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4420, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "29378:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "29377:9:46"}, "scope": 4566, "src": "29309:517:46", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [10917], "body": {"id": 4519, "nodeType": "Block", "src": "29914:245:46", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 4487, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 4481, "name": "rateProvider0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2944, "src": "29936:13:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$8636", "typeString": "contract IRateProvider"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IRateProvider_$8636", "typeString": "contract IRateProvider"}], "id": 4480, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "29928:7:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 4479, "name": "address", "nodeType": "ElementaryTypeName", "src": "29928:7:46", "typeDescriptions": {}}}, "id": 4482, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29928:22:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 4485, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "29962:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 4484, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "29954:7:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 4483, "name": "address", "nodeType": "ElementaryTypeName", "src": "29954:7:46", "typeDescriptions": {}}}, "id": 4486, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29954:10:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "29928:36:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4497, "nodeType": "IfStatement", "src": "29924:96:46", "trueBody": {"expression": {"id": 4495, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4488, "name": "spotPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4473, "src": "29966:9:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 4491, "name": "rateProvider0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2944, "src": "29996:13:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$8636", "typeString": "contract IRateProvider"}}, "id": 4492, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getRate", "nodeType": "MemberAccess", "referencedDeclaration": 8635, "src": "29996:21:46", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 4493, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29996:23:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 4489, "name": "spotPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4473, "src": "29978:9:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4490, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mulDown", "nodeType": "MemberAccess", "referencedDeclaration": 6298, "src": "29978:17:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 4494, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29978:42:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "29966:54:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4496, "nodeType": "ExpressionStatement", "src": "29966:54:46"}}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 4506, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 4500, "name": "rateProvider1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2946, "src": "30042:13:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$8636", "typeString": "contract IRateProvider"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IRateProvider_$8636", "typeString": "contract IRateProvider"}], "id": 4499, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "30034:7:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 4498, "name": "address", "nodeType": "ElementaryTypeName", "src": "30034:7:46", "typeDescriptions": {}}}, "id": 4501, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30034:22:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 4504, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "30068:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 4503, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "30060:7:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 4502, "name": "address", "nodeType": "ElementaryTypeName", "src": "30060:7:46", "typeDescriptions": {}}}, "id": 4505, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30060:10:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "30034:36:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4516, "nodeType": "IfStatement", "src": "30030:96:46", "trueBody": {"expression": {"id": 4514, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4507, "name": "spotPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4473, "src": "30072:9:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 4510, "name": "rateProvider1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2946, "src": "30102:13:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$8636", "typeString": "contract IRateProvider"}}, "id": 4511, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getRate", "nodeType": "MemberAccess", "referencedDeclaration": 8635, "src": "30102:21:46", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 4512, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30102:23:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 4508, "name": "spotPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4473, "src": "30084:9:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4509, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "divDown", "nodeType": "MemberAccess", "referencedDeclaration": 6454, "src": "30084:17:46", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 4513, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30084:42:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "30072:54:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4515, "nodeType": "ExpressionStatement", "src": "30072:54:46"}}, {"expression": {"id": 4517, "name": "spotPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4473, "src": "30143:9:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 4478, "id": 4518, "nodeType": "Return", "src": "30136:16:46"}]}, "id": 4520, "implemented": true, "kind": "function", "modifiers": [], "name": "_adjustPrice", "nodeType": "FunctionDefinition", "overrides": {"id": 4475, "nodeType": "OverrideSpecifier", "overrides": [], "src": "29887:8:46"}, "parameters": {"id": 4474, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4473, "mutability": "mutable", "name": "spotPrice", "nodeType": "VariableDeclaration", "scope": 4520, "src": "29854:17:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4472, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "29854:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "29853:19:46"}, "returnParameters": {"id": 4478, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4477, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 4520, "src": "29905:7:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4476, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "29905:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "29904:9:46"}, "scope": 4566, "src": "29832:327:46", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 4564, "nodeType": "Block", "src": "30521:209:46", "statements": [{"expression": {"id": 4544, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4528, "name": "rate0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4524, "src": "30531:5:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 4537, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 4531, "name": "rateProvider0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2944, "src": "30547:13:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$8636", "typeString": "contract IRateProvider"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IRateProvider_$8636", "typeString": "contract IRateProvider"}], "id": 4530, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "30539:7:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 4529, "name": "address", "nodeType": "ElementaryTypeName", "src": "30539:7:46", "typeDescriptions": {}}}, "id": 4532, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30539:22:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 4535, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "30573:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 4534, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "30565:7:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 4533, "name": "address", "nodeType": "ElementaryTypeName", "src": "30565:7:46", "typeDescriptions": {}}}, "id": 4536, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30565:10:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "30539:36:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"expression": {"id": 4541, "name": "GyroFixedPoint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6840, "src": "30604:14:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroFixedPoint_$6840_$", "typeString": "type(library GyroFixedPoint)"}}, "id": 4542, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ONE", "nodeType": "MemberAccess", "referencedDeclaration": 6188, "src": "30604:18:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4543, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "30539:83:46", "trueExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 4538, "name": "rateProvider0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2944, "src": "30578:13:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$8636", "typeString": "contract IRateProvider"}}, "id": 4539, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getRate", "nodeType": "MemberAccess", "referencedDeclaration": 8635, "src": "30578:21:46", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 4540, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30578:23:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "30531:91:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4545, "nodeType": "ExpressionStatement", "src": "30531:91:46"}, {"expression": {"id": 4562, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4546, "name": "rate1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4526, "src": "30632:5:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 4555, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 4549, "name": "rateProvider1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2946, "src": "30648:13:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$8636", "typeString": "contract IRateProvider"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IRateProvider_$8636", "typeString": "contract IRateProvider"}], "id": 4548, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "30640:7:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 4547, "name": "address", "nodeType": "ElementaryTypeName", "src": "30640:7:46", "typeDescriptions": {}}}, "id": 4550, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30640:22:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 4553, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "30674:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 4552, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "30666:7:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 4551, "name": "address", "nodeType": "ElementaryTypeName", "src": "30666:7:46", "typeDescriptions": {}}}, "id": 4554, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30666:10:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "30640:36:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"expression": {"id": 4559, "name": "GyroFixedPoint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6840, "src": "30705:14:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroFixedPoint_$6840_$", "typeString": "type(library GyroFixedPoint)"}}, "id": 4560, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ONE", "nodeType": "MemberAccess", "referencedDeclaration": 6188, "src": "30705:18:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4561, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "30640:83:46", "trueExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 4556, "name": "rateProvider1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2946, "src": "30679:13:46", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$8636", "typeString": "contract IRateProvider"}}, "id": 4557, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getRate", "nodeType": "MemberAccess", "referencedDeclaration": 8635, "src": "30679:21:46", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 4558, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30679:23:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "30632:91:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4563, "nodeType": "ExpressionStatement", "src": "30632:91:46"}]}, "documentation": {"id": 4521, "nodeType": "StructuredDocumentation", "src": "30165:275:46", "text": "@notice Convenience function to fetch the two rates used for scaling the two tokens, as of rateProvider{0,1}.\n Note that these rates do *not* contain scaling to account for differences in the number of decimals. The rates\n themselves are always 18-decimals."}, "functionSelector": "702ec091", "id": 4565, "implemented": true, "kind": "function", "modifiers": [], "name": "getTokenRates", "nodeType": "FunctionDefinition", "parameters": {"id": 4522, "nodeType": "ParameterList", "parameters": [], "src": "30467:2:46"}, "returnParameters": {"id": 4527, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4524, "mutability": "mutable", "name": "rate0", "nodeType": "VariableDeclaration", "scope": 4565, "src": "30491:13:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4523, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "30491:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4526, "mutability": "mutable", "name": "rate1", "nodeType": "VariableDeclaration", "scope": 4565, "src": "30506:13:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4525, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "30506:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "30490:30:46"}, "scope": 4566, "src": "30445:285:46", "stateMutability": "view", "virtual": false, "visibility": "public"}], "scope": 4567, "src": "969:29763:46"}], "src": "178:30555:46"}, "bytecode": "6104a06040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9610120526706f05b59d3b20000610200819052610220526000610240523480156200005057600080fd5b5060405162005f8438038062005f84833981016040819052620000739162000f8a565b8160e001518260a001518360c0015184600001518060c001518160e001518260200151836040015184600001518280604051806040016040528060018152602001603160f81b81525085858a6101000151336001600160a01b031660001b806080818152505050806001600160a01b031660a0816001600160a01b031660601b815250505081600390805190602001906200011092919062000b87565b5080516200012690600490602084019062000b87565b505060058054601260ff1990911617905550815160209283012060c052805191012060e052507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6101005260601b6001600160601b03191661014052506200019990506276a700831115610194620006ca565b620001ad62278d00821115610195620006ca565b42919091016101608190520161018052604080516002808252606082018352600092602083019080368337019050509050816060015181600081518110620001f157fe5b60200260200101906001600160a01b031690816001600160a01b0316815250508160800151816001815181106200022457fe5b60200260200101906001600160a01b031690816001600160a01b0316815250506200025a81620006df60201b620019531760201c565b60a08201516200026a90620006eb565b81516040516309b2760f60e01b81526000916001600160a01b0316906309b2760f906200029d9060029060040162001176565b602060405180830381600087803b158015620002b857600080fd5b505af1158015620002cd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002f3919062000f71565b83516040805160028082526060820183529394506001600160a01b03909216926366a9c7d2928592879290602083019080368337019050506040518463ffffffff1660e01b81526004016200034b93929190620010dc565b600060405180830381600087803b1580156200036657600080fd5b505af11580156200037b573d6000803e3d6000fd5b5050506101a082905250606080840180516001600160601b031990831b81166101c052608086015190921b9091166101e05251620003b99062000774565b610260526080830151620003cd9062000774565b61028052505060408051808201909152600e81526d1b9bdd08185d5d1a1bdc9a5e995960921b602082015290506001600160a01b0383166200042d5760405162461bcd60e51b81526004016200042491906200118b565b60405180910390fd5b50600b80546001600160a01b0319166001600160a01b039384161790558051600a8054602084015160409094015160ff1990911692151592909217610100600160801b0319166101006001600160781b0390941693909302929092176001600160801b03908116600160801b9190921602179055620004b29082161515606962000822565b600c80546001600160a01b0319166001600160a01b03928316179055620004df9082161515607862000822565b620004f982602001516200083360201b620019611760201c565b7ff468331437e1ec2fec64fc27f23a28b085a09e90f385338d4b58cb638607977760016040516200052b9190620010d1565b60405180910390a160208201516040808401519051636e70c2ef60e01b815273__GyroECLPMath__________________________92636e70c2ef926200057492600401620011c0565b60006040518083038186803b1580156200058d57600080fd5b505af4158015620005a2573d6000803e3d6000fd5b505050507f614fd1489cdee8181582fbbc1933d6870cd06c6f22d314b97a650ffa547c6ccd6001604051620005d89190620010d1565b60405180910390a160208281015180518183015160408084015160608086015160809687015161032052610300526102e0919091526102c0929092526102a09290925281860151805180519086015182870151805197015194830151838501518488015160a086015160c0909601516104405261042095909552610400949094526103e0939093526103c0929092526103a093909352610380949094526103609390935261034052600d80546001600160a01b0319166001600160a01b03949094169390931790925580830151811b6001600160601b031990811661046052919092015190911b1661048052620012b8565b81620006db57620006db816200091e565b5050565b80620006db8162000971565b6200070064e8d4a5100082101560cb620006ca565b6200071867016345785d8a000082111560ca620006ca565b6200073481600854620009fb60201b62001a3e1790919060201c565b6008556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc906200076990839062001258565b60405180910390a150565b600080826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015620007b157600080fd5b505afa158015620007c6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007ec91906200109f565b60ff16905060006200080b60128362000a2160201b62001a4c1760201c565b600a0a670de0b6b3a764000002925050505b919050565b81620006db57620006db8162000a39565b620008628160600151600013158015620008595750670de0b6b3a7640000826060015113155b61016362000822565b620008908160400151600013158015620008595750670de0b6b3a76400008260400151131561016362000822565b604080518082018252606083015181529082015160208201526000620008b7828062000a4b565b9050620008e7670de0b6b3a763fc188212801590620008de5750670de0b6b3a76403e88213155b61016462000822565b6200091983608001516000131580156200091057506a52b7d2dcc80cd2e4000000846080015113155b61016862000822565b505050565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6002815110156200098257620009f8565b6000816000815181106200099257fe5b602002602001015190506000600190505b825181101562000919576000838281518110620009bc57fe5b60200260200101519050620009ed816001600160a01b0316846001600160a01b0316106065620006ca60201b60201c565b9150600101620009a3565b50565b600062000a1a8260568562000aa260201b62001a62179092919060201c565b9392505050565b600062000a33838311156001620006ca565b50900390565b620009f8816223aca960e91b62000ab7565b600062000a1a62000a738360200151856020015162000b1860201b62001a781790919060201c565b8351855162000a8e9162000b18602090811b62001a7817901c565b62000b5960201b62001ab41790919060201c565b6001600160401b03811b1992909216911b1790565b62461bcd60e51b600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fd5b600082820283158062000b3457508284828162000b3157fe5b05145b62000b475762000b4760006003620006ca565b670de0b6b3a764000090059392505050565b60008282018183121562000b705783811262000b75565b838112155b62000a1a5762000a1a600080620006ca565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928262000bbf576000855562000c0a565b82601f1062000bda57805160ff191683800117855562000c0a565b8280016001018555821562000c0a579182015b8281111562000c0a57825182559160200191906001019062000bed565b5062000c1892915062000c1c565b5090565b5b8082111562000c18576000815560010162000c1d565b80516001600160a01b03811681146200081d57600080fd5b600082601f83011262000c5c578081fd5b81516001600160401b0381111562000c7057fe5b62000c85601f8201601f191660200162001261565b81815284602083860101111562000c9a578283fd5b62000cad82602083016020870162001285565b949350505050565b60006060828403121562000cc7578081fd5b604051606081016001600160401b038111828210171562000ce457fe5b80604052508091508251801515811462000cfd57600080fd5b815260208301516001600160781b038116811462000d1a57600080fd5b602082015260408301516001600160801b038116811462000d3a57600080fd5b6040919091015292915050565b6000610120828403121562000d5a578081fd5b60405160e081016001600160401b038111828210171562000d7757fe5b60405290508062000d89848462000f28565b815262000d9a846040850162000f28565b60208201526080830151604082015260a0830151606082015260c0830151608082015260e083015160a082015261010083015160c08201525092915050565b600061012080838503121562000ded578182fd5b62000df88162001261565b91505062000e068262000c33565b815260208201516001600160401b038082111562000e2357600080fd5b62000e318583860162000c4b565b6020840152604084015191508082111562000e4b57600080fd5b5062000e5a8482850162000c4b565b60408301525062000e6e6060830162000c33565b606082015262000e816080830162000c33565b608082015260a082015160a082015260c082015160c082015260e082015160e082015261010062000eb481840162000c33565b9082015292915050565b600060a0828403121562000ed0578081fd5b60405160a081016001600160401b038111828210171562000eed57fe5b806040525080915082518152602083015160208201526040830151604082015260608301516060820152608083015160808201525092915050565b60006040828403121562000f3a578081fd5b604080519081016001600160401b038111828210171562000f5757fe5b604052825181526020928301519281019290925250919050565b60006020828403121562000f83578081fd5b5051919050565b6000806040838503121562000f9d578081fd5b82516001600160401b038082111562000fb4578283fd5b908401906102c0828703121562000fc9578283fd5b62000fd661010062001261565b82518281111562000fe5578485fd5b62000ff38882860162000dd9565b82525062001005876020850162000ebe565b6020820152620010198760c0850162000d47565b60408201526200102d6101e0840162000c33565b606082015262001041610200840162000c33565b608082015262001055610220840162000c33565b60a08201526200106a87610240850162000cb5565b60c08201526200107e6102a0840162000c33565b60e08201529350620010969150506020840162000c33565b90509250929050565b600060208284031215620010b1578081fd5b815160ff8116811462000a1a578182fd5b80518252602090810151910152565b901515815260200190565b60006060820185835260206060818501528186518084526080860191508288019350845b81811015620011275784516001600160a01b03168352938301939183019160010162001100565b505084810360408601528551808252908201925081860190845b81811015620011685782516001600160a01b03168552938301939183019160010162001141565b509298975050505050505050565b60208101600383106200118557fe5b91905290565b6000602082528251806020840152620011ac81604085016020870162001285565b601f01601f19169190910160400192915050565b60006101c08201905083518252602084015160208301526040840151604083015260608401516060830152608084015160808301526200120560a083018451620010c2565b60208301516200121960e0840182620010c2565b5060408301516101208301526060830151610140830152608083015161016083015260a083015161018083015260c08301516101a08301529392505050565b90815260200190565b6040518181016001600160401b03811182821017156200127d57fe5b604052919050565b60005b83811015620012a257818101518382015260200162001288565b83811115620012b2576000848401525b50505050565b60805160a05160601c60c05160e05161010051610120516101405160601c61016051610180516101a0516101c05160601c6101e05160601c61020051610220516102405161026051610280516102a0516102c0516102e05161030051610320516103405161036051610380516103a0516103c0516103e0516104005161042051610440516104605160601c6104805160601c614b216200146360003980610a3e5280610b685280610ba4528061290352806129355280612a7d525080610a995280610ad55280610f32528061283652806128685280612a3352508061244b5250806124715250806124975250806124bf5250806124e45250806123b85250806123dd5250806124005250806124285250806122e752508061231152508061233b52508061236552508061238f525080612aa0525080612a565250508061387c5250806138a352508061126d52806112b4528061274d52508061122d52806112f452806127015250806107f7525080611c2c525080611c085250806110b05250806116e6525080611d48525080611d8a525080611d6952508061108c5250806110125250614b216000f3fe608060405234801561001057600080fd5b50600436106102955760003560e01c806374f3b0091161016757806398d5fdca116100ce578063abd13afe11610087578063abd13afe1461054f578063c0ff1a1514610557578063d505accf1461055f578063d5c096c414610572578063dd62ed3e14610585578063f89f27ed1461059857610295565b806398d5fdca146104fe5780639b02cdde146105065780639d2c110c1461050e578063a457c2d714610521578063a9059cbb14610534578063aaabadc51461054757610295565b80638456cb59116101205780638456cb59146104b8578063851c1bb3146104c057806387ec6817146104d3578063893d20e8146104e65780638d928af8146104ee57806395d89b41146104f657610295565b806374f3b0091461044057806376e54a46146104615780637be219a2146104745780637ecebe001461048a5780638002df181461049d578063828a7c34146104b057610295565b8063395093511161020b5780636028bfd4116101c45780636028bfd4146103de57806362ced092146103ff578063679aefce146104075780636d785a871461040f578063702ec0911461041757806370a082311461042d57610295565b806339509351146103775780633aeae0d31461038a5780633f4ba83a1461039f57806344bbdb55146103a75780634a6b0b15146103bc57806355c67628146103d657610295565b80631c0de0511161025d5780631c0de0511461031557806323b872dd1461032c578063313ce5671461033f5780633644e5151461035457806338e9922e1461035c57806338fff2d01461036f57610295565b806306fdde031461029a578063095ea7b3146102b85780630e608b30146102d857806316c38b3c146102ed57806318160ddd14610300575b600080fd5b6102a26105ad565b6040516102af9190614934565b60405180910390f35b6102cb6102c636600461432b565b610643565b6040516102af91906148c7565b6102eb6102e6366004614206565b61065a565b005b6102eb6102fb366004614356565b61070b565b61030861071f565b6040516102af91906148ea565b61031d610725565b6040516102af939291906148d2565b6102cb61033a366004614276565b61074e565b6103476107c4565b6040516102af9190614a7c565b6103086107cd565b6102eb61036a36600461463d565b6107dc565b6103086107f5565b6102cb61038536600461432b565b610819565b610392610854565b6040516102af9190614987565b6102eb61089f565b6103af610994565b6040516102af919061478b565b6103c46109a3565b6040516102af9695949392919061490a565b6103086109fe565b6103f16103ec366004614370565b610a0b565b6040516102af929190614a55565b6103af610a3c565b610308610a60565b6103af610a85565b61041f610a94565b6040516102af929190614a6e565b61030861043b366004614206565b610c39565b61045361044e366004614370565b610c58565b6040516102af9291906147b2565b6102eb61046f3660046144c7565b610ce8565b61047c610e0f565b6040516102af9291906149e7565b610308610498366004614206565b610e2f565b6102eb6104ab366004614206565b610e4a565b6103af610f30565b6102eb610f54565b6103086104ce36600461447c565b61100c565b6103f16104e1366004614370565b611065565b6103af61108a565b6103af6110ae565b6102a26110d2565b610308611133565b6103086111fe565b61030861051c366004614546565b611204565b6102cb61052f36600461432b565b6115a3565b6102cb61054236600461432b565b6115e1565b6103af6115ee565b6103af6115f8565b610308611607565b6102eb61056d3660046142b6565b6116b7565b610453610580366004614370565b611827565b61030861059336600461423e565b61190c565b6105a0611949565b6040516102af919061479f565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106395780601f1061060e57610100808354040283529160200191610639565b820191906000526020600020905b81548152906001019060200180831161061c57829003601f168201915b5050505050905090565b6000610650338484611add565b5060015b92915050565b600b5460408051808201909152600e81526d1b9bdd08185d5d1a1bdc9a5e995960921b6020820152906001600160a01b031633146106b45760405162461bcd60e51b81526004016106ab9190614934565b60405180910390fd5b50600b80546001600160a01b0319166001600160a01b0383161790556040517fb8fd9afc34c38fcd13b9a3b7646482eb1fddcefb40af2c70609972816eba32089061070090839061478b565b60405180910390a150565b610713611b3f565b61071c81611b6d565b50565b60025490565b6000806000610732611be9565b15925061073d611c06565b9150610747611c2a565b9050909192565b60008061075b853361190c565b905061077f336001600160a01b03871614806107775750838210155b61019e611c4e565b61078a858585611c5c565b336001600160a01b038616148015906107a557506000198114155b156107b7576107b78533858403611add565b60019150505b9392505050565b60055460ff1690565b60006107d7611d44565b905090565b6107e4611b3f565b6107ec611e02565b61071c81611e17565b7f000000000000000000000000000000000000000000000000000000000000000090565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161065091859061084f9086611e80565b611add565b61085c6140c5565b5060408051606081018252600a5460ff81161515825261010081046001600160781b03166020830152600160801b90046001600160801b03169181019190915290565b600c546040805180820190915260118152703737ba103830bab9b29036b0b730b3b2b960791b6020820152906001600160a01b0316331461095e5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561092357818101518382015260200161090b565b50505050905090810190601f1680156109505780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506109696000610713565b6040517f215385c8bfc731925ec8068d7baa50f6b6f34417cc7804f7273dc2c0b3db279090600090a1565b600d546001600160a01b031681565b600080600080600080600060085490506109bc81611e92565b96506109c781611e9e565b95506109d281611eab565b94506109dd81611eb8565b93506109e881611ec5565b92506109f381611ed2565b915050909192939495565b60006107d7600854611ed2565b60006060610a1b86516002611edf565b610a3089898989898989611eec61205a6120d8565b97509795505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006107d7610a6d61071f565b610a7f610a78611607565b60026121eb565b9061220f565b600b546001600160a01b031681565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610ad357670de0b6b3a7640000610b64565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663679aefce6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b2c57600080fd5b505afa158015610b40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b649190614655565b91507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610ba257670de0b6b3a7640000610c33565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663679aefce6040518163ffffffff1660e01b815260040160206040518083038186803b158015610bfb57600080fd5b505afa158015610c0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c339190614655565b90509091565b6001600160a01b0381166000908152602081905260409020545b919050565b60608088610c82610c676110ae565b6001600160a01b0316336001600160a01b03161460cd611c4e565b610c97610c8d6107f5565b82146101f4611c4e565b610ca087612269565b6000806000610cb48d8d8d8d8d8d8d611eec565b925092509250610cc48c846122cb565b610ccd8261205a565b610cd68161205a565b909c909b509950505050505050505050565b600b5460408051808201909152600e81526d1b9bdd08185d5d1a1bdc9a5e995960921b6020820152906001600160a01b03163314610d395760405162461bcd60e51b81526004016106ab9190614934565b50600a5460408051808201909152601081526f1c1bdbdb081a5cc81d5b98d85c1c195960821b60208201529060ff16610d855760405162461bcd60e51b81526004016106ab9190614934565b508051600a8054602084015160408086015160ff19909316941515949094176fffffffffffffffffffffffffffffff0019166101006001600160781b0390921691909102176001600160801b03908116600160801b919092160217815590517f2abf5970d7bc1a2b36eaae52dd2cc353edb0337c7284ef8a01973081b4e0442491610700916149bc565b610e176140e5565b610e1f614114565b610e276122d5565b915091509091565b6001600160a01b031660009081526006602052604090205490565b600c546040805180820190915260118152703737ba103830bab9b29036b0b730b3b2b960791b60208201526001600160a01b0390911690338214610ecf5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561092357818101518382015260200161090b565b50600c80546001600160a01b0319166001600160a01b03848116918217909255604080519284168352602083019190915280517f1ffccd1fa96f4fb3415df8048a0fd107344e262d2d246c85105e2a3f8f3e81989281900390910190a15050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600c546040805180820190915260118152703737ba103830bab9b29036b0b730b3b2b960791b6020820152906001600160a01b03163314610fd65760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561092357818101518382015260200161090b565b50610fe16001610713565b6040517f681eace576127d0553b224436a09801fb47d042942cbff59d7d4ff04d8fa03d790600090a1565b604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091526001600160e01b03198416828401528251602481840301815260449092019092528051910120919050565b6000606061107586516002611edf565b610a308989898989898961250b61267a6120d8565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106395780601f1061060e57610100808354040283529160200191610639565b60008061113e6126dc565b905060008061114b6122d5565b91509150600073__GyroECLPMath__________________________63d83ca8628585856040518463ffffffff1660e01b815260040161118c939291906147d7565b60206040518083038186803b1580156111a457600080fd5b505af41580156111b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111dc9190614655565b90506111ea84828585612792565b94506111f585612832565b94505050505090565b60095490565b600061120e611e02565b836080015161121e610c676110ae565b611229610c8d6107f5565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031686602001516001600160a01b03161480156112a557507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031686604001516001600160a01b0316145b156112b257506001611343565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031686602001516001600160a01b031614801561132c57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031686604001516001600160a01b0316145b1561133957506000611343565b61134360796129d2565b600061134e82612a25565b9050600061135c8315612a25565b90506113688783612b52565b96506113748682612b52565b95506000611383888886612b5e565b90506000806113906122d5565b9150915061139c61415d565b60008073__GyroECLPMath__________________________6378ace8578787876040518463ffffffff1660e01b81526004016113da939291906147d7565b604080518083038186803b1580156113f157600080fd5b505af4158015611405573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142991906144a4565b6040805180820190915260029091028201815260208101919091529250600091506114519050565b8c51600181111561145e57fe5b141561150a57600061147c6114716109fe565b60608f015190612bf8565b905061149e611498828f60600151612c4d90919063ffffffff16565b88612b52565b60608e015260006114b38e878b888888612c63565b90507f4e1d56f7310a8c32b2267f756b19ba65019b4890068ce114a25009abe54de5ba8684836040516114e893929190614849565b60405180910390a16114fa8188612d06565b9a5050505050505050505061159b565b6115188c6060015186612b52565b60608d0152600061152d8d868a878787612d12565b90507f4e1d56f7310a8c32b2267f756b19ba65019b4890068ce114a25009abe54de5ba85838360405161156293929190614849565b60405180910390a16115748188612d5a565b90506115906115896115846109fe565b612d66565b8290612d8c565b995050505050505050505b509392505050565b6000806115b0338561190c565b90508083106115ca576115c533856000611add565b6115d7565b6115d73385858403611add565b5060019392505050565b6000610650338484611c5c565b60006107d7612df2565b600c546001600160a01b031681565b6000806116126126dc565b905060008061161f6122d5565b604051636c1e543160e11b8152919350915073__GyroECLPMath__________________________9063d83ca8629061165f908690869086906004016147d7565b60206040518083038186803b15801561167757600080fd5b505af415801561168b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116af9190614655565b935050505090565b6116c58442111560d1611c4e565b6001600160a01b0380881660008181526006602090815260408083205481517f00000000000000000000000000000000000000000000000000000000000000008185015280830195909552948b166060850152608084018a905260a0840185905260c08085018a90528151808603909101815260e0909401905282519201919091209061175182612e6c565b9050600060018288888860405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156117af573d6000803e3d6000fd5b5050604051601f19015191506117f190506001600160a01b038216158015906117e957508b6001600160a01b0316826001600160a01b0316145b6101f8611c4e565b6001600160a01b038b16600090815260066020526040902060018501905561181a8b8b8b611add565b5050505050505050505050565b60608088611836610c676110ae565b611841610c8d6107f5565b611849611e02565b600061185361071f565b6118c3576118638b8b8b88612eb8565b94509050611878620f424082101560cc611c4e565b6118866000620f4240613048565b61189589620f42408303613048565b61189e8461267a565b60408051600280825260608201835290916020830190803683370190505092506118fe565b6118cc88612269565b6118db8b8b8b8b8b8b8b61250b565b909550935090506118ec8982613048565b6118f58461267a565b6118fe8361205a565b505097509795505050505050565b60006119166110ae565b6001600160a01b0316826001600160a01b031614156119385750600019610654565b6119428383613052565b9050610654565b60606107d761307d565b8061195d816130ec565b5050565b61198d81606001516000131580156119855750670de0b6b3a7640000826060015113155b610163613165565b6119b881604001516000131580156119855750670de0b6b3a764000082604001511315610163613165565b6040805180820182526060830151815290820151602082015260006119dd8280613173565b9050611a0a670de0b6b3a763fc188212801590611a025750670de0b6b3a76403e88213155b610164613165565b611a398360800151600013158015611a3157506a52b7d2dcc80cd2e4000000846080015113155b610168613165565b505050565b60006107bd83836056611a62565b6000611a5c838311156001611c4e565b50900390565b67ffffffffffffffff811b1992909216911b1790565b6000828202831580611a92575082848281611a8f57fe5b05145b611aa257611aa260006003611c4e565b670de0b6b3a764000090059392505050565b600082820181831215611ac957838112611ace565b838112155b6107bd576107bd600080611c4e565b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6000611b566000356001600160e01b03191661100c565b905061071c611b6582336131a6565b610191611c4e565b8015611b8d57611b88611b7e611c06565b4210610193611c4e565b611ba2565b611ba2611b98611c2a565b42106101a9611c4e565b6007805482151560ff19909116811790915560408051918252517f9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be649181900360200190a150565b6000611bf3611c2a565b4211806107d757505060075460ff161590565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b8161195d5761195d816129d2565b611c736001600160a01b0384161515610198611c4e565b611c8a6001600160a01b0383161515610199611c4e565b611c95838383611a39565b6001600160a01b038316600090815260208190526040902054611cbb90826101a06132a8565b6001600160a01b038085166000908152602081905260408082209390935590841681522054611cea9082611e80565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611db16132be565b3060405160200180868152602001858152602001848152602001838152602001826001600160a01b031681526020019550505050505060405160208183030381529060405280519060200120905090565b611e15611e0d611be9565b610192611c4e565b565b611e2a64e8d4a5100082101560cb611c4e565b611e4067016345785d8a000082111560ca611c4e565b600854611e4d9082611a3e565b6008556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc906107009083906148ea565b60008282016107bd8482101583611c4e565b600061065482826132c2565b60006106548260166132c2565b600061065482602c6132e9565b600061065482604b6132f3565b60006106548260556132fb565b6000610654826056613305565b61195d8183146067611c4e565b6000606080600080611efc6122d5565b91509150611f08611be9565b1561200d57604051636c1e543160e11b815260009073__GyroECLPMath__________________________9063d83ca86290611f4b908d90879087906004016147d7565b60206040518083038186803b158015611f6357600080fd5b505af4158015611f77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f9b9190614655565b9050611fa681613313565b611fb08a88613340565b9096509450611fc98187611fc261071f565b600061338c565b60098190556040517fe1d39caf039c7dc6f364b1e29d1e67c4e330003a43f4991d50cf3e8840d95eac91611fff91849190614a6e565b60405180910390a150612023565b6120178987613340565b60001960095590955093505b6040805160028082526060820183528792879291906020830190803683370190505094509450945050509750975097945050505050565b6120818160008151811061206a57fe5b602002602001015161207c6001612a25565b61220f565b8160008151811061208e57fe5b6020026020010181815250506120bc816001815181106120aa57fe5b602002602001015161207c6000612a25565b816001815181106120c957fe5b60200260200101818152505050565b333014612196576000306001600160a01b03166000366040516120fc92919061477b565b6000604051808303816000865af19150503d8060008114612139576040519150601f19603f3d011682016040523d82523d6000602084013e61213e565b606091505b50509050806000811461214d57fe5b60046000803e6000516001600160e01b0319166343adbafb60e01b8114612178573d6000803e3d6000fd5b506020600460003e604060205260243d03602460403e601c3d016000f35b61219f86612269565b6000806121b58b8b8b8b8b8b8b8b63ffffffff16565b50915091506121c7818463ffffffff16565b8051601f1982018390526343adbafb603f1983015260200260231982016044820181fd5b60008282026107bd84158061220857508385838161220557fe5b04145b6003611c4e565b6000816122225761222260006004611c4e565b8261222f57506000610654565b670de0b6b3a76400008381029084828161224557fe5b04146122575761225760006005611c4e565b82818161226057fe5b04949350505050565b6122908160008151811061227957fe5b602002602001015161228b6001612a25565b6133e4565b8160008151811061229d57fe5b6020026020010181815250506120bc816001815181106122b957fe5b602002602001015161228b6000612a25565b61195d828261341d565b6122dd6140e5565b6122e5614114565b7f00000000000000000000000000000000000000000000000000000000000000006080808401919091527f00000000000000000000000000000000000000000000000000000000000000006060808501919091527f00000000000000000000000000000000000000000000000000000000000000006040808601919091527f00000000000000000000000000000000000000000000000000000000000000006020808701919091527f000000000000000000000000000000000000000000000000000000000000000086528451858201517f0000000000000000000000000000000000000000000000000000000000000000818401527f000000000000000000000000000000000000000000000000000000000000000090527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000090527f000000000000000000000000000000000000000000000000000000000000000060c08501527f000000000000000000000000000000000000000000000000000000000000000060a08501527f0000000000000000000000000000000000000000000000000000000000000000928401929092527f0000000000000000000000000000000000000000000000000000000000000000908301527f0000000000000000000000000000000000000000000000000000000000000000908201529091565b600060608060008061251b6122d5565b91509150600073__GyroECLPMath__________________________63d83ca8628b85856040518463ffffffff1660e01b815260040161255c939291906147d7565b60206040518083038186803b15801561257457600080fd5b505af4158015612588573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125ac9190614655565b90506125b781613313565b6000806125c48c8a6134d4565b600a54919350915060ff16156125ee576125ee826125e18f610c39565b6125e961071f565b61350e565b61260283836125fb61071f565b600161338c565b60098190556040517fe1d39caf039c7dc6f364b1e29d1e67c4e330003a43f4991d50cf3e8840d95eac9161263891869190614a6e565b60405180910390a16040805160028082526060820183528492849291906020830190803683370190505097509750975050505050509750975097945050505050565b6126a18160008151811061268a57fe5b602002602001015161269c6001612a25565b612d8c565b816000815181106126ae57fe5b6020026020010181815250506120bc816001815181106126ca57fe5b602002602001015161269c6000612a25565b604080516002808252606080830184529260208301908036833701905050905061272f7f000000000000000000000000000000000000000000000000000000000000000061272a6001612a25565b613620565b8160008151811061273c57fe5b6020026020010181815250506127767f000000000000000000000000000000000000000000000000000000000000000061272a6000612a25565b8160018151811061278357fe5b60200260200101818152505090565b600073__GyroECLPMath__________________________63c7fe78d08685856127ba896136c7565b6040518563ffffffff1660e01b81526004016127d99493929190614808565b60206040518083038186803b1580156127f157600080fd5b505af4158015612805573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128299190614655565b95945050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615612901576128fe7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663679aefce6040518163ffffffff1660e01b815260040160206040518083038186803b1580156128bf57600080fd5b505afa1580156128d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128f79190614655565b83906133e4565b91505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316156129ce576129cb7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663679aefce6040518163ffffffff1660e01b815260040160206040518083038186803b15801561298c57600080fd5b505afa1580156129a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129c49190614655565b839061220f565b91505b5090565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b60008060008315612a7a57507f000000000000000000000000000000000000000000000000000000000000000090507f0000000000000000000000000000000000000000000000000000000000000000612ac0565b507f000000000000000000000000000000000000000000000000000000000000000090507f00000000000000000000000000000000000000000000000000000000000000005b6001600160a01b038216156107bd57612b4a826001600160a01b031663679aefce6040518163ffffffff1660e01b815260040160206040518083038186803b158015612b0b57600080fd5b505afa158015612b1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b439190614655565b82906133e4565b949350505050565b60006107bd83836133e4565b60408051600280825260608083018452926020830190803683370190505090508115612bbd578381600081518110612b9257fe5b6020026020010181815250508281600181518110612bac57fe5b6020026020010181815250506107bd565b8281600081518110612bcb57fe5b6020026020010181815250508381600181518110612be557fe5b6020026020010181815250509392505050565b6000828202831580612c12575082848281612c0f57fe5b04145b612c2257612c2260006003611c4e565b80612c31576000915050610654565b670de0b6b3a764000060001982015b0460010191505092915050565b600082821115611a5c57611a5c60006001611c4e565b60608601516040516330ffa11b60e11b815260009173__GyroECLPMath__________________________916361ff423691612cab918a91908a908a908a908a90600401614879565b60206040518083038186803b158015612cc357600080fd5b505af4158015612cd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cfb9190614655565b979650505050505050565b60006107bd838361220f565b6060860151604051633b18ce7b60e21b815260009173__GyroECLPMath__________________________9163ec6339ec91612cab918a91908a908a908a908a90600401614879565b60006107bd8383612d8c565b6000670de0b6b3a76400008210612d7e576000610654565b50670de0b6b3a76400000390565b600081612d9f57612d9f60006004611c4e565b82612dac57506000610654565b670de0b6b3a764000083810290848281612dc257fe5b0414612de657612de6670de0b6b3a7640000858381612ddd57fe5b04146005611c4e565b826001820381612c4057fe5b6000612dfc6110ae565b6001600160a01b031663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b158015612e3457600080fd5b505afa158015612e48573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d79190614222565b6000612e76611d44565b82604051602001808061190160f01b81525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b600060606000612ec78461370b565b9050612ee26000826003811115612eda57fe5b1460ce611c4e565b6000612eed8561372a565b9050612efb81516002611edf565b612f0481612269565b600080612f0f6122d5565b91509150600073__GyroECLPMath__________________________63d83ca8628585856040518463ffffffff1660e01b8152600401612f50939291906147d7565b60206040518083038186803b158015612f6857600080fd5b505af4158015612f7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fa09190614655565b90507faf65f1a72bf4f8bc48e8153858e1f7b307ce39c88361a677c0a79c2a1ae571ef81604051612fd191906148ea565b60405180910390a16000612fe785838686612792565b9050600061302f6130158388600081518110612fff57fe5b60200260200101516133e490919063ffffffff16565b8760018151811061302257fe5b6020026020010151611e80565b60099390935550909b939a509298505050505050505050565b61195d82826137de565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b604080516002808252606080830184529260009291906020830190803683370190505090506130ac6001613873565b816000815181106130b957fe5b6020026020010181815250506130cf6000613873565b816001815181106130dc57fe5b6020908102919091010152905090565b6002815110156130fb5761071c565b60008160008151811061310a57fe5b602002602001015190506000600190505b8251811015611a3957600083828151811061313257fe5b6020026020010151905061315b816001600160a01b0316846001600160a01b0316106065611c4e565b915060010161311b565b8161195d5761195d816138c7565b60006107bd61319383602001518560200151611a7890919063ffffffff16565b835185516131a091611a78565b90611ab4565b600073ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b6131c561108a565b6001600160a01b0316141580156131e057506131e0836138d7565b15613208576131ed61108a565b6001600160a01b0316336001600160a01b0316149050610654565b613210612df2565b6001600160a01b0316639be2a8848484306040518463ffffffff1660e01b815260040180848152602001836001600160a01b03168152602001826001600160a01b03168152602001935050505060206040518083038186803b15801561327557600080fd5b505afa158015613289573d6000803e3d6000fd5b505050506040513d602081101561329f57600080fd5b50519050610654565b60006132b78484111583611c4e565b5050900390565b4690565b600082821c623fffff16621fffff81136132dc5780612b4a565b623fffff19179392505050565b1c637fffffff1690565b1c6103ff1690565b1c60019081161490565b1c67ffffffffffffffff1690565b60008060008061332560095486613909565b935093509350935061333984848484613972565b5050505050565b60006060600061334f8461370b565b9050600181600381111561335f57fe5b14156133795761336f8585613998565b9093509150613384565b6133846101506129d2565b509250929050565b600081156133be5760006133aa846133a48888612bf8565b90612d8c565b90506133b686826139ca565b915050612b4a565b60006133ce84610a7f88886133e4565b90506133da8682612c4d565b9695505050505050565b60008282028315806133fe5750828482816133fb57fe5b04145b61340e5761340e60006003611c4e565b670de0b6b3a764000081612260565b6134346001600160a01b038316151561019b611c4e565b61344082600083611a39565b6001600160a01b03821660009081526020819052604090205461346690826101a16132a8565b6001600160a01b03831660009081526020819052604090205560025461348c90826139e2565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6000606060006134e38461370b565b905060038160038111156134f357fe5b14156135035761336f85856139f0565b6133846101366129d2565b60408051606081018252600a5460ff81161515825261010081046001600160781b031660208301819052600160801b9091046001600160801b0316928201929092529061355b85856139ca565b11156040518060400160405280601a81526020017f6f7665722061646472657373206c697175696469747920636170000000000000815250906135b15760405162461bcd60e51b81526004016106ab9190614934565b5060408101516001600160801b03166135ca85846139ca565b11156040518060400160405280601981526020017f6f76657220676c6f62616c206c69717569646974792063617000000000000000815250906133395760405162461bcd60e51b81526004016106ab9190614934565b600080600061362d6110ae565b6001600160a01b031663b05f8e486136436107f5565b876040518363ffffffff1660e01b81526004016136619291906148f3565b60806040518083038186803b15801561367957600080fd5b505afa15801561368d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136b1919061466d565b50508181019450909250905061282983856133e4565b6000600160ff1b82106129ce5760405162461bcd60e51b8152600401808060200182810382526028815260200180614ac46028913960400191505060405180910390fd5b600081806020019051602081101561372257600080fd5b505192915050565b606081806020019051604081101561374157600080fd5b81516020830180516040519294929383019291908464010000000082111561376857600080fd5b90830190602082018581111561377d57600080fd5b825186602082028301116401000000008211171561379a57600080fd5b82525081516020918201928201910280838360005b838110156137c75781810151838201526020016137af565b505050509190910160405250929695505050505050565b6137ea60008383611a39565b6002546137f79082611e80565b6002556001600160a01b03821660009081526020819052604090205461381d9082611e80565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000816138a0577f0000000000000000000000000000000000000000000000000000000000000000610654565b507f0000000000000000000000000000000000000000000000000000000000000000919050565b61071c816223aca960e91b613a15565b60006138e9631c74c91760e11b61100c565b82148061065457506139016350dd6ed960e01b61100c565b909114919050565b60008060008060008060008061391d613a76565b9350935093509350836000141561394257600097508796509094509250613969915050565b6000806139598c8c61395261071f565b8989613be8565b909a509850929650909450505050505b92959194509250565b8315613982576139828285613048565b8215613992576139928184613048565b50505050565b6000606060006139a784613c83565b905060006139bd86836139b861071f565b613ca5565b9196919550909350505050565b6000828201838110156107bd576107bd600080611c4e565b60006107bd838360016132a8565b6000606060006139ff84613c83565b905060006139bd8683613a1061071f565b613d2b565b62461bcd60e51b600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fd5b600d54600090819081908190613a9d906001600160a01b03163063045434c560e41b613dc7565b600d54613abb906001600160a01b03163063045434c560e41b613dee565b600d546040516321f8a72160e01b81526001600160a01b03909116906321f8a72190613afb906c4759524f5f545245415355525960981b906004016148ea565b60206040518083038186803b158015613b1357600080fd5b505afa158015613b27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b4b9190614222565b600d546040516321f8a72160e01b81526001600160a01b03909116906321f8a72190613b8a906b42414c5f545245415355525960a01b906004016148ea565b60206040518083038186803b158015613ba257600080fd5b505afa158015613bb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613bda9190614222565b935093509350935090919293565b600080868611613bfd57506000905080613c79565b6000613c1d85613c17613c108a8c612c4d565b89906133e4565b906133e4565b90506000613c35613c2e898b612c4d565b87906133e4565b90506000613c438983612c4d565b90506000613c51848361220f565b90506000613c5f88836133e4565b90506000613c6d8383612c4d565b91975090955050505050505b9550959350505050565b6000818060200190516040811015613c9a57600080fd5b506020015192915050565b6060835167ffffffffffffffff81118015613cbf57600080fd5b50604051908082528060200260200182016040528015613ce9578160200160208202803683370190505b50905060005b845181101561159b57613d0c83610a7f86888581518110612fff57fe5b828281518110613d1857fe5b6020908102919091010152600101613cef565b6060835167ffffffffffffffff81118015613d4557600080fd5b50604051908082528060200260200182016040528015613d6f578160200160208202803683370190505b50905060005b845181101561159b57613da8836133a486888581518110613d9257fe5b6020026020010151612bf890919063ffffffff16565b828281518110613db457fe5b6020908102919091010152600101613d75565b6000612b4a847550524f544f434f4c5f535741505f4645455f5045524360501b8486613e18565b6000612b4a847f50524f544f434f4c5f4645455f4759524f5f504f5254494f4e0000000000000084865b6040805160208082018690526001600160a01b03808516838501528351808403850181526060840180865281519184019190912063696eb37560e01b909152606484018190529351600094939189169263696eb3759260848082019391829003018186803b158015613e8957600080fd5b505afa158015613e9d573d6000803e3d6000fd5b505050506040513d6020811015613eb357600080fd5b505115613f3357856001600160a01b031663bd02d0f5826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613efe57600080fd5b505afa158015613f12573d6000803e3d6000fd5b505050506040513d6020811015613f2857600080fd5b50519150612b4a9050565b6040805160208082018890528183018790528251808303840181526060830180855281519183019190912063696eb37560e01b9091526064830181905292516001600160a01b038a169263696eb375926084808301939192829003018186803b158015613f9f57600080fd5b505afa158015613fb3573d6000803e3d6000fd5b505050506040513d6020811015613fc957600080fd5b50511561404a57866001600160a01b031663bd02d0f5826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561401457600080fd5b505afa158015614028573d6000803e3d6000fd5b505050506040513d602081101561403e57600080fd5b50519250612b4a915050565b866001600160a01b031663bd02d0f5876040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561408e57600080fd5b505afa1580156140a2573d6000803e3d6000fd5b505050506040513d60208110156140b857600080fd5b5051979650505050505050565b604080516060810182526000808252602082018190529181019190915290565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b6040518060e0016040528061412761415d565b815260200161413461415d565b815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806040016040528060008152602001600081525090565b8035610c5381614aae565b80358015158114610c5357600080fd5b600082601f8301126141a2578081fd5b813567ffffffffffffffff8111156141b657fe5b6141c9601f8201601f1916602001614a8a565b8181528460208386010111156141dd578283fd5b816020850160208301379081016020019190915292915050565b803560028110610c5357600080fd5b600060208284031215614217578081fd5b81356107bd81614aae565b600060208284031215614233578081fd5b81516107bd81614aae565b60008060408385031215614250578081fd5b823561425b81614aae565b9150602083013561426b81614aae565b809150509250929050565b60008060006060848603121561428a578081fd5b833561429581614aae565b925060208401356142a581614aae565b929592945050506040919091013590565b600080600080600080600060e0888a0312156142d0578283fd5b87356142db81614aae565b965060208801356142eb81614aae565b95506040880135945060608801359350608088013560ff8116811461430e578384fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561433d578182fd5b823561434881614aae565b946020939093013593505050565b600060208284031215614367578081fd5b6107bd82614182565b600080600080600080600060e0888a03121561438a578081fd5b87359650602088013561439c81614aae565b955060408801356143ac81614aae565b9450606088013567ffffffffffffffff808211156143c8578283fd5b818a0191508a601f8301126143db578283fd5b8135818111156143e757fe5b602081026143f760208201614a8a565b80838252602082019150602086018f6020858901011115614416578788fd5b8796505b848710156144395780358352600196909601956020928301920161441a565b50985050505060808a0135945060a08a0135935060c08a0135915080821115614460578283fd5b5061446d8a828b01614192565b91505092959891949750929550565b60006020828403121561448d578081fd5b81356001600160e01b0319811681146107bd578182fd5b600080604083850312156144b6578182fd5b505080516020909101519092909150565b6000606082840312156144d8578081fd5b6040516060810181811067ffffffffffffffff821117156144f557fe5b60405261450183614182565b815260208301356001600160781b038116811461451c578283fd5b602082015260408301356001600160801b038116811461453a578283fd5b60408201529392505050565b60008060006060848603121561455a578081fd5b833567ffffffffffffffff80821115614571578283fd5b8186019150610120808389031215614587578384fd5b61459081614a8a565b905061459b836141f7565b81526145a960208401614177565b60208201526145ba60408401614177565b6040820152606083013560608201526080830135608082015260a083013560a08201526145e960c08401614177565b60c08201526145fa60e08401614177565b60e08201526101008084013583811115614612578586fd5b61461e8a828701614192565b9183019190915250976020870135975060409096013595945050505050565b60006020828403121561464e578081fd5b5035919050565b600060208284031215614666578081fd5b5051919050565b60008060008060808587031215614682578182fd5b84519350602085015192506040850151915060608501516146a281614aae565b939692955090935050565b6000815180845260208085019450808401835b838110156146dc578151875295820195908201906001016146c0565b509495945050505050565b6146f282825161476c565b6020810151614704604084018261476c565b5060408101516080830152606081015160a0830152608081015160c083015260a081015160e083015260c08101516101008301525050565b80518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b80518252602090810151910152565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b6000602082526107bd60208301846146ad565b6000604082526147c560408301856146ad565b828103602084015261282981856146ad565b60006101e08083526147eb818401876146ad565b9150506147fb602083018561473c565b612b4a60c08301846146e7565b600061020080835261481c818401886146ad565b91505061482c602083018661473c565b61483960c08301856146e7565b826101e083015295945050505050565b60006080825261485c60808301866146ad565b905061486b602083018561476c565b826060830152949350505050565b600061026080835261488d8184018a6146ad565b91505086602083015285151560408301526148ab606083018661473c565b6148b96101008301856146e7565b612cfb61022083018461476c565b901515815260200190565b92151583526020830191909152604082015260600190565b90815260200190565b9182526001600160a01b0316602082015260400190565b9586526020860194909452604085019290925260608401521515608083015260a082015260c00190565b6000602080835283518082850152825b8181101561496057858101830151858201604001528201614944565b818111156149715783604083870101525b50601f01601f1916929092016040019392505050565b8151151581526020808301516001600160781b0316908201526040918201516001600160801b03169181019190915260600190565b905460ff811615158252600881901c6001600160781b0316602083015260801c604082015260600190565b6101c081016149f6828561473c565b614a0460a08301845161476c565b6020830151614a1660e084018261476c565b5060408301516101208301526060830151610140830152608083015161016083015260a083015161018083015260c08301516101a08301529392505050565b600083825260406020830152612b4a60408301846146ad565b918252602082015260400190565b60ff91909116815260200190565b60405181810167ffffffffffffffff81118282101715614aa657fe5b604052919050565b6001600160a01b038116811461071c57600080fdfe53616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536a2646970667358221220d791fac87b08543f4d57391f0cf0642b2059d11b73ea3a3650794e3d7863d23064736f6c63430007060033", "bytecodeSha1": "8f0220859b610575798a83c5b7b9554089ca62fc", "compiler": {"evm_version": "berlin", "optimizer": {"enabled": true, "runs": 200}, "version": "0.7.6+commit.7338295f"}, "contractName": "GyroECLPPool", "coverageMap": {"branches": {"1": {"BalancerPoolToken.decreaseAllowance": {"303": [3611, 3637, false]}, "BalancerPoolToken.transferFrom": {"301": [3030, 3050, false], "302": [3054, 3085, false]}}, "10": {}, "11": {}, "12": {}, "13": {}, "16": {}, "17": {}, "18": {}, "19": {"InputHelpers.ensureArrayIsSorted": {"322": [1496, 1512, false]}}, "21": {"TemporarilyPausable._setPaused": {"330": [3849, 3855, false]}}, "22": {"WordCodec.decodeInt22": {"331": [12558, 12577, true]}}, "23": {}, "24": {}, "25": {}, "26": {}, "27": {}, "28": {}, "29": {}, "30": {}, "31": {}, "32": {}, "33": {}, "34": {}, "35": {}, "36": {}, "37": {}, "38": {}, "39": {}, "4": {"BasePoolAuthorization._canPerform": {"304": [2112, 2140, false]}}, "40": {}, "41": {"SafeCast.toInt256": {"326": [6444, 6458, true]}}, "42": {"CappedLiquidity._ensureCap": {"308": [2338, 2391, true], "309": [2429, 2480, true]}, "CappedLiquidity.setCapManager": {"305": [1508, 1532, true]}, "CappedLiquidity.setCapParams": {"306": [1836, 1860, true], "307": [1896, 1917, true]}}, "43": {"ExtensibleWeightedPool2Tokens._queryAction": {"310": [39010, 39037, false]}}, "44": {"LocallyPausable.changePauseManager": {"324": [929, 962, true]}, "LocallyPausable.pause": {"325": [1194, 1220, true]}, "LocallyPausable.unpause": {"323": [1407, 1433, true]}}, "45": {}, "46": {"GyroECLPPool._adjustPrice": {"291": [29928, 29964, false], "292": [30034, 30070, false]}, "GyroECLPPool._balancesFromTokenInOut": {"295": [25003, 25018, false]}, "GyroECLPPool._doExit": {"296": [23576, 23637, false]}, "GyroECLPPool._doJoin": {"297": [18463, 18528, false]}, "GyroECLPPool._getDueProtocolFeeAmounts": {"298": [27644, 27668, false]}, "GyroECLPPool._onExitPool": {"289": [21178, 21192, false]}, "GyroECLPPool._onJoinPool": {"290": [17211, 17232, false]}, "GyroECLPPool._payFeesBpt": {"299": [28382, 28394, false], "300": [28516, 28532, false]}, "GyroECLPPool._scalingFactor": {"293": [29468, 29474, false], "294": [29691, 29726, false]}, "GyroECLPPool.getTokenRates": {"282": [30539, 30575, true], "283": [30640, 30676, true]}, "GyroECLPPool.onSwap": {"284": [8758, 8784, false], "285": [8788, 8815, false], "286": [8874, 8900, false], "287": [8904, 8931, false], "288": [10333, 10373, false]}}, "47": {}, "50": {}, "51": {}, "53": {}, "54": {"GyroConfigHelpers._getPoolSetting": {"311": [1203, 1237, false], "312": [1400, 1430, false]}}, "55": {}, "56": {}, "57": {"GyroFixedPoint.divDown": {"313": [3430, 3436, false], "314": [3514, 3520, false]}, "GyroFixedPoint.divUp": {"318": [4033, 4039, false], "319": [4117, 4123, false]}, "GyroFixedPoint.mulUp": {"315": [2326, 2332, true], "316": [2336, 2352, false], "317": [2430, 2442, false]}}, "58": {"GyroPoolMath._calcProtocolFees": {"321": [5166, 5203, false]}, "GyroPoolMath.liquidityInvariantUpdate": {"320": [11222, 11235, false]}}, "59": {"SignedFixedPoint.add": {"329": [1316, 1322, true]}, "SignedFixedPoint.mulDownMag": {"327": [2089, 2095, true], "328": [2099, 2115, false]}}, "7": {}, "9": {}}, "statements": {"1": {"BalancerPoolToken._burnPoolTokens": {"162": [4092, 4113]}, "BalancerPoolToken._mintPoolTokens": {"213": [3979, 4003]}, "BalancerPoolToken.allowance": {"99": [2410, 2428], "100": [2459, 2497]}, "BalancerPoolToken.decreaseAllowance": {"78": [3653, 3685], "79": [3772, 3828], "80": [3849, 3860]}, "BalancerPoolToken.getVault": {"60": [1938, 1951]}, "BalancerPoolToken.transferFrom": {"11": [2867, 2968], "12": [2979, 3015], "13": [3218, 3273], "14": [3294, 3305]}}, "10": {"WeightedPool2TokensMiscData.logInvariant": {"137": [2316, 2362]}, "WeightedPool2TokensMiscData.logTotalSupply": {"138": [2532, 2581]}, "WeightedPool2TokensMiscData.oracleEnabled": {"141": [3221, 3267]}, "WeightedPool2TokensMiscData.oracleIndex": {"140": [3019, 3065]}, "WeightedPool2TokensMiscData.oracleSampleCreationTimestamp": {"139": [2786, 2852]}, "WeightedPool2TokensMiscData.setSwapFeePercentage": {"107": [5197, 5270]}, "WeightedPool2TokensMiscData.swapFeePercentage": {"142": [3424, 3477]}}, "11": {"WeightedPoolUserDataHelpers.exactBptInForTokensOut": {"270": [2448, 2520]}, "WeightedPoolUserDataHelpers.initialAmountsIn": {"252": [1311, 1383]}, "WeightedPoolUserDataHelpers.joinKind": {"251": [964, 1016]}}, "12": {"Authentication._authenticateCaller": {"115": [2404, 2474]}, "Authentication.getActionId": {"56": [2842, 2910]}}, "13": {"_require": {"123": [946, 964]}}, "16": {}, "17": {}, "18": {}, "19": {"InputHelpers.ensureArrayIsSorted": {"102": [1369, 1402], "218": [1528, 1535], "219": [1689, 1740], "220": [1754, 1772], "221": [1630, 1633]}, "InputHelpers.ensureInputLengthMatch": {"143": [888, 934]}}, "21": {"TemporarilyPausable._ensureNotPaused": {"131": [4272, 4311]}, "TemporarilyPausable._getBufferPeriodEndTime": {"122": [5084, 5111]}, "TemporarilyPausable._getPauseWindowEndTime": {"121": [4969, 4995]}, "TemporarilyPausable._isNotPaused": {"120": [4712, 4774]}, "TemporarilyPausable._setPaused": {"116": [3871, 3952], "117": [3983, 4066], "118": [4087, 4103], "119": [4113, 4144]}, "TemporarilyPausable.getPausedState": {"8": [3374, 3398], "9": [3408, 3453], "10": [3463, 3510]}}, "22": {"WordCodec.decodeBool": {"230": [9819, 9866]}, "WordCodec.decodeInt22": {"227": [12551, 12615]}, "WordCodec.decodeUint10": {"229": [10628, 10669]}, "WordCodec.decodeUint31": {"228": [11156, 11197]}, "WordCodec.decodeUint64": {"231": [11684, 11725]}, "WordCodec.insertUint64": {"109": [7104, 7149]}}, "23": {}, "24": {}, "25": {"Math.mul": {"155": [1897, 1948]}, "Math.sub": {"108": [1025, 1062]}}, "26": {}, "27": {"EIP712._domainSeparatorV4": {"130": [2466, 2567]}, "EIP712._hashTypedDataV4": {"206": [3295, 3375]}}, "28": {"ERC20._approve": {"113": [9468, 9504], "114": [9514, 9551]}, "ERC20._burn": {"239": [8587, 8655], "240": [8666, 8715], "241": [8726, 8814], "242": [8824, 8863], "243": [8873, 8915]}, "ERC20._mint": {"253": [7973, 8022], "254": [8033, 8072], "255": [8082, 8133], "256": [8143, 8185]}, "ERC20._transfer": {"124": [7195, 7266], "125": [7276, 7348], "126": [7359, 7406], "127": [7417, 7505], "128": [7515, 7570], "129": [7580, 7620]}, "ERC20.allowance": {"214": [3993, 4027]}, "ERC20.approve": {"1": [4271, 4308], "2": [4318, 4329]}, "ERC20.balanceOf": {"36": [3422, 3447]}, "ERC20.decimals": {"15": [3098, 3114]}, "ERC20.increaseAllowance": {"19": [5688, 5767]}, "ERC20.name": {"0": [2200, 2212]}, "ERC20.symbol": {"61": [2396, 2410]}, "ERC20.totalSupply": {"7": [3253, 3272]}, "ERC20.transfer": {"81": [3759, 3799]}}, "29": {"ERC20Permit.DOMAIN_SEPARATOR": {"16": [2438, 2465]}, "ERC20Permit.nonces": {"49": [2207, 2228]}, "ERC20Permit.permit": {"84": [1575, 1635], "85": [1902, 1981], "86": [1992, 2018], "87": [2028, 2059]}}, "30": {}, "31": {}, "32": {"SafeMath.add": {"136": [1019, 1056]}, "SafeMath.sub": {"226": [1861, 1888], "266": [1430, 1467]}}, "33": {}, "34": {}, "35": {}, "36": {}, "37": {}, "38": {}, "39": {}, "4": {"BasePoolAuthorization._canPerform": {"224": [2251, 2282], "225": [2428, 2496]}, "BasePoolAuthorization.getAuthorizer": {"82": [1933, 1956]}, "BasePoolAuthorization.getOwner": {"59": [1836, 1849]}}, "40": {}, "41": {"SafeCast.toInt256": {"250": [6436, 6503]}}, "42": {"CappedLiquidity._ensureCap": {"246": [2330, 2411], "247": [2421, 2499]}, "CappedLiquidity.capParams": {"20": [1723, 1740]}, "CappedLiquidity.setCapManager": {"3": [1500, 1550], "4": [1560, 1584], "5": [1594, 1629]}, "CappedLiquidity.setCapParams": {"42": [1828, 1878], "43": [1888, 1929], "44": [1940, 1981], "45": [1991, 2038], "46": [2048, 2087], "47": [2098, 2131]}}, "43": {"ExtensibleWeightedPool2Tokens._downscaleDown": {"197": [36578, 36630]}, "ExtensibleWeightedPool2Tokens._downscaleDownArray": {"151": [36909, 36978], "152": [36988, 37058]}, "ExtensibleWeightedPool2Tokens._downscaleUp": {"199": [37370, 37420]}, "ExtensibleWeightedPool2Tokens._downscaleUpArray": {"171": [37695, 37762], "172": [37772, 37840]}, "ExtensibleWeightedPool2Tokens._getAuthorizer": {"205": [38301, 38334]}, "ExtensibleWeightedPool2Tokens._isOwnerOnlyAction": {"259": [7177, 7347]}, "ExtensibleWeightedPool2Tokens._normalizedWeights": {"215": [7787, 7834], "216": [7844, 7892], "217": [7902, 7926], "257": [8030, 8085]}, "ExtensibleWeightedPool2Tokens._queryAction": {"153": [42989, 43012], "154": [43321, 43350]}, "ExtensibleWeightedPool2Tokens._setSwapFeePercentage": {"132": [6748, 6835], "133": [6845, 6932], "134": [6943, 7004], "135": [7014, 7062]}, "ExtensibleWeightedPool2Tokens._upscale": {"186": [35794, 35846]}, "ExtensibleWeightedPool2Tokens._upscaleArray": {"160": [36113, 36182], "161": [36192, 36262]}, "ExtensibleWeightedPool2Tokens.getLastInvariant": {"64": [8168, 8189]}, "ExtensibleWeightedPool2Tokens.getMiscData": {"24": [5993, 6031], "25": [6041, 6083], "26": [6093, 6165], "27": [6175, 6211], "28": [6221, 6261], "29": [6271, 6319]}, "ExtensibleWeightedPool2Tokens.getNormalizedWeights": {"101": [7595, 7622]}, "ExtensibleWeightedPool2Tokens.getPoolId": {"18": [5415, 5429]}, "ExtensibleWeightedPool2Tokens.getRate": {"33": [34387, 34444]}, "ExtensibleWeightedPool2Tokens.getSwapFeePercentage": {"30": [6404, 6440]}, "ExtensibleWeightedPool2Tokens.onExitPool": {"37": [21882, 21905], "38": [22311, 22347], "39": [22459, 22490], "40": [22500, 22542], "41": [22553, 22595]}, "ExtensibleWeightedPool2Tokens.onJoinPool": {"88": [12442, 12524], "89": [12819, 12877], "90": [12891, 12932], "91": [12946, 13001], "92": [13088, 13116], "93": [13206, 13246], "94": [13277, 13300], "95": [13315, 13594], "96": [13708, 13748], "97": [13835, 13863], "98": [13962, 14004]}, "ExtensibleWeightedPool2Tokens.queryExit": {"31": [31945, 32000], "32": [32011, 32148]}, "ExtensibleWeightedPool2Tokens.queryJoin": {"57": [30554, 30609], "58": [30620, 30755]}, "ExtensibleWeightedPool2Tokens.setPaused": {"6": [7481, 7499]}, "ExtensibleWeightedPool2Tokens.setSwapFeePercentage": {"17": [6619, 6659]}}, "44": {"LocallyPausable.changePauseManager": {"50": [921, 983], "51": [993, 1021], "52": [1031, 1091]}, "LocallyPausable.pause": {"53": [1186, 1241], "54": [1251, 1272], "55": [1282, 1302]}, "LocallyPausable.unpause": {"21": [1399, 1454], "22": [1464, 1486], "23": [1496, 1518]}}, "45": {"GyroECLPMath.scalarProd": {"223": [6575, 6629]}, "GyroECLPMath.validateParams": {"103": [4170, 4255], "104": [4265, 4350], "105": [4479, 4673], "106": [4684, 4797]}}, "46": {"GyroECLPPool._adjustPrice": {"177": [29966, 30020], "178": [30072, 30126], "179": [30136, 30152]}, "GyroECLPPool._balancesFromTokenInOut": {"187": [24962, 24989], "188": [25034, 25062], "189": [25076, 25105], "190": [25136, 25165], "191": [25179, 25207]}, "GyroECLPPool._distributeFees": {"232": [26198, 26260]}, "GyroECLPPool._doExit": {"233": [23653, 23728], "234": [23759, 23794]}, "GyroECLPPool._doJoin": {"244": [18544, 18622], "245": [18653, 18688]}, "GyroECLPPool._exitExactBPTInForTokensOut": {"264": [24706, 24738]}, "GyroECLPPool._getAllBalances": {"173": [6471, 6498], "174": [6508, 6575], "175": [6585, 6653]}, "GyroECLPPool._getDueProtocolFeeAmounts": {"260": [27684, 27724], "261": [28029, 28087]}, "GyroECLPPool._getFeesMetadata": {"267": [28869, 29178]}, "GyroECLPPool._getPrice": {"176": [7692, 7797]}, "GyroECLPPool._getScaledTokenBalance": {"248": [5829, 5853], "249": [5939, 5979]}, "GyroECLPPool._onExitPool": {"144": [21633, 21671], "145": [21686, 21741], "146": [22199, 22311], "147": [22326, 22388], "148": [22589, 22644], "149": [22989, 23023], "150": [23156, 23206]}, "GyroECLPPool._onInitializePool": {"207": [13905, 13975], "208": [14052, 14108], "209": [14118, 14142], "210": [14394, 14446], "211": [14926, 14961], "212": [14972, 15004]}, "GyroECLPPool._onJoinPool": {"166": [17067, 17105], "167": [17248, 17309], "168": [17753, 17865], "169": [17876, 17938], "170": [18061, 18111]}, "GyroECLPPool._onSwapGivenIn": {"196": [12194, 12317]}, "GyroECLPPool._onSwapGivenOut": {"198": [12722, 12845]}, "GyroECLPPool._payFeesBpt": {"262": [28410, 28449], "263": [28548, 28590]}, "GyroECLPPool._scalingFactor": {"180": [29490, 29518], "181": [29532, 29563], "182": [29594, 29622], "183": [29636, 29667], "184": [29728, 29789], "185": [29799, 29819]}, "GyroECLPPool.getECLPParams": {"48": [4984, 5014]}, "GyroECLPPool.getInvariant": {"83": [7128, 7207]}, "GyroECLPPool.getPrice": {"62": [8358, 8431], "63": [8441, 8476]}, "GyroECLPPool.getTokenRates": {"34": [30531, 30622], "35": [30632, 30723]}, "GyroECLPPool.onSwap": {"65": [8831, 8853], "66": [8947, 8970], "67": [9001, 9052], "68": [9263, 9326], "69": [9336, 9402], "70": [10227, 10308], "71": [10670, 10748], "72": [10890, 10937], "73": [11024, 11079], "74": [11110, 11174], "75": [11316, 11362], "76": [11447, 11502], "77": [11722, 11780]}, "GyroECLPPool.reconstructECLPParams": {"163": [4539, 4666], "164": [4676, 4779], "165": [4789, 4841]}}, "47": {}, "50": {}, "51": {}, "53": {}, "54": {"GyroConfigHelpers._getPoolSetting": {"279": [1253, 1295], "280": [1446, 1484], "281": [1505, 1541]}, "GyroConfigHelpers.getProtocolFeeGyroPortionForPool": {"278": [623, 726]}, "GyroConfigHelpers.getSwapFeePercForPool": {"277": [333, 433]}}, "55": {}, "56": {"_grequire": {"222": [469, 488]}, "_grevert": {"258": [973, 1002]}}, "57": {"GyroFixedPoint.add": {"265": [1371, 1407]}, "GyroFixedPoint.complement": {"200": [9394, 9426]}, "GyroFixedPoint.divDown": {"156": [3452, 3489], "157": [3536, 3544], "158": [3645, 3681], "159": [3718, 3738]}, "GyroFixedPoint.divUp": {"201": [4055, 4092], "202": [4139, 4147], "203": [4248, 4299], "204": [4633, 4665]}, "GyroFixedPoint.mulDown": {"237": [1894, 1930], "238": [1951, 1971]}, "GyroFixedPoint.mulUp": {"192": [2369, 2405], "193": [2458, 2466], "194": [2784, 2816]}, "GyroFixedPoint.sub": {"195": [1627, 1663]}}, "58": {"GyroPoolMath._calcAllTokensInGivenExactBptOut": {"274": [2126, 2168], "275": [2238, 2294], "276": [2219, 2222]}, "GyroPoolMath._calcProtocolFees": {"268": [5581, 5594], "269": [6579, 6610]}, "GyroPoolMath._calcTokensOutGivenExactBptIn": {"271": [3658, 3701], "272": [3771, 3831], "273": [3752, 3755]}, "GyroPoolMath.liquidityInvariantUpdate": {"235": [11409, 11443], "236": [11659, 11693]}}, "59": {"SignedFixedPoint.add": {"112": [1342, 1378]}, "SignedFixedPoint.mulDownMag": {"110": [2118, 2154], "111": [2165, 2185]}}, "7": {}, "9": {}}}, "dependencies": ["node_modules/@balancer-labs/Authentication", "node_modules/@balancer-labs/BalancerPoolToken", "node_modules/@balancer-labs/BasePoolAuthorization", "CappedLiquidity", "node_modules/@balancer-labs/EIP712", "node_modules/@balancer-labs/ERC20", "node_modules/@balancer-labs/ERC20Permit", "node_modules/@balancer-labs/Errors", "ExtensibleWeightedPool2Tokens", "node_modules/@balancer-labs/FixedPoint", "GyroConfigHelpers", "GyroConfigKeys", "GyroECLPMath", "GyroECLPPoolErrors", "GyroErrors", "GyroFixedPoint", "GyroPoolMath", "node_modules/@balancer-labs/IAsset", "node_modules/@balancer-labs/IAuthentication", "node_modules/@balancer-labs/IAuthorizer", "node_modules/@balancer-labs/IBasePool", "ICappedLiquidity", "node_modules/@balancer-labs/IERC20", "node_modules/@balancer-labs/IERC20Permit", "node_modules/@balancer-labs/IFlashLoanRecipient", "IGyroConfig", "ILocallyPausable", "node_modules/@balancer-labs/IMinimalSwapInfoPool", "node_modules/@balancer-labs/IPoolSwapStructs", "node_modules/@balancer-labs/IProtocolFeesCollector", "node_modules/@balancer-labs/IRateProvider", "node_modules/@balancer-labs/ISignaturesValidator", "node_modules/@balancer-labs/ITemporarilyPausable", "node_modules/@balancer-labs/IVault", "node_modules/@balancer-labs/IWETH", "node_modules/@balancer-labs/InputHelpers", "LocallyPausable", "node_modules/@balancer-labs/LogExpMath", "node_modules/@balancer-labs/Math", "node_modules/@openzeppelin/SafeCast", "node_modules/@balancer-labs/SafeMath", "SignedFixedPoint", "node_modules/@balancer-labs/TemporarilyPausable", "node_modules/@balancer-labs/WeightedMath", "node_modules/@balancer-labs/WeightedPool2TokensMiscData", "node_modules/@balancer-labs/WeightedPoolUserDataHelpers", "node_modules/@balancer-labs/WordCodec"], "deployedBytecode": "$4dfb88a4c975276bfeda73b9d8c1ea657b$__63d83ca8628585856040518463ffffffff1660e01b815260040161118c939291906147d7565b60206040518083038186803b1580156111a457600080fd5b505af41580156111b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111dc9190614655565b90506111ea84828585612792565b94506111f585612832565b94505050505090565b60095490565b600061120e611e02565b836080015161121e610c676110ae565b611229610c8d6107f5565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031686602001516001600160a01b03161480156112a557507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031686604001516001600160a01b0316145b156112b257506001611343565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031686602001516001600160a01b031614801561132c57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031686604001516001600160a01b0316145b1561133957506000611343565b61134360796129d2565b600061134e82612a25565b9050600061135c8315612a25565b90506113688783612b52565b96506113748682612b52565b95506000611383888886612b5e565b90506000806113906122d5565b9150915061139c61415d565b60008073__$4dfb88a4c975276bfeda73b9d8c1ea657b$__6378ace8578787876040518463ffffffff1660e01b81526004016113da939291906147d7565b604080518083038186803b1580156113f157600080fd5b505af4158015611405573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142991906144a4565b6040805180820190915260029091028201815260208101919091529250600091506114519050565b8c51600181111561145e57fe5b141561150a57600061147c6114716109fe565b60608f015190612bf8565b905061149e611498828f60600151612c4d90919063ffffffff16565b88612b52565b60608e015260006114b38e878b888888612c63565b90507f4e1d56f7310a8c32b2267f756b19ba65019b4890068ce114a25009abe54de5ba8684836040516114e893929190614849565b60405180910390a16114fa8188612d06565b9a5050505050505050505061159b565b6115188c6060015186612b52565b60608d0152600061152d8d868a878787612d12565b90507f4e1d56f7310a8c32b2267f756b19ba65019b4890068ce114a25009abe54de5ba85838360405161156293929190614849565b60405180910390a16115748188612d5a565b90506115906115896115846109fe565b612d66565b8290612d8c565b995050505050505050505b509392505050565b6000806115b0338561190c565b90508083106115ca576115c533856000611add565b6115d7565b6115d73385858403611add565b5060019392505050565b6000610650338484611c5c565b60006107d7612df2565b600c546001600160a01b031681565b6000806116126126dc565b905060008061161f6122d5565b604051636c1e543160e11b8152919350915073__$4dfb88a4c975276bfeda73b9d8c1ea657b$__9063d83ca8629061165f908690869086906004016147d7565b60206040518083038186803b15801561167757600080fd5b505af415801561168b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116af9190614655565b935050505090565b6116c58442111560d1611c4e565b6001600160a01b0380881660008181526006602090815260408083205481517f00000000000000000000000000000000000000000000000000000000000000008185015280830195909552948b166060850152608084018a905260a0840185905260c08085018a90528151808603909101815260e0909401905282519201919091209061175182612e6c565b9050600060018288888860405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156117af573d6000803e3d6000fd5b5050604051601f19015191506117f190506001600160a01b038216158015906117e957508b6001600160a01b0316826001600160a01b0316145b6101f8611c4e565b6001600160a01b038b16600090815260066020526040902060018501905561181a8b8b8b611add565b5050505050505050505050565b60608088611836610c676110ae565b611841610c8d6107f5565b611849611e02565b600061185361071f565b6118c3576118638b8b8b88612eb8565b94509050611878620f424082101560cc611c4e565b6118866000620f4240613048565b61189589620f42408303613048565b61189e8461267a565b60408051600280825260608201835290916020830190803683370190505092506118fe565b6118cc88612269565b6118db8b8b8b8b8b8b8b61250b565b909550935090506118ec8982613048565b6118f58461267a565b6118fe8361205a565b505097509795505050505050565b60006119166110ae565b6001600160a01b0316826001600160a01b031614156119385750600019610654565b6119428383613052565b9050610654565b60606107d761307d565b8061195d816130ec565b5050565b61198d81606001516000131580156119855750670de0b6b3a7640000826060015113155b610163613165565b6119b881604001516000131580156119855750670de0b6b3a764000082604001511315610163613165565b6040805180820182526060830151815290820151602082015260006119dd8280613173565b9050611a0a670de0b6b3a763fc188212801590611a025750670de0b6b3a76403e88213155b610164613165565b611a398360800151600013158015611a3157506a52b7d2dcc80cd2e4000000846080015113155b610168613165565b505050565b60006107bd83836056611a62565b6000611a5c838311156001611c4e565b50900390565b67ffffffffffffffff811b1992909216911b1790565b6000828202831580611a92575082848281611a8f57fe5b05145b611aa257611aa260006003611c4e565b670de0b6b3a764000090059392505050565b600082820181831215611ac957838112611ace565b838112155b6107bd576107bd600080611c4e565b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6000611b566000356001600160e01b03191661100c565b905061071c611b6582336131a6565b610191611c4e565b8015611b8d57611b88611b7e611c06565b4210610193611c4e565b611ba2565b611ba2611b98611c2a565b42106101a9611c4e565b6007805482151560ff19909116811790915560408051918252517f9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be649181900360200190a150565b6000611bf3611c2a565b4211806107d757505060075460ff161590565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b8161195d5761195d816129d2565b611c736001600160a01b0384161515610198611c4e565b611c8a6001600160a01b0383161515610199611c4e565b611c95838383611a39565b6001600160a01b038316600090815260208190526040902054611cbb90826101a06132a8565b6001600160a01b038085166000908152602081905260408082209390935590841681522054611cea9082611e80565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611db16132be565b3060405160200180868152602001858152602001848152602001838152602001826001600160a01b031681526020019550505050505060405160208183030381529060405280519060200120905090565b611e15611e0d611be9565b610192611c4e565b565b611e2a64e8d4a5100082101560cb611c4e565b611e4067016345785d8a000082111560ca611c4e565b600854611e4d9082611a3e565b6008556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc906107009083906148ea565b60008282016107bd8482101583611c4e565b600061065482826132c2565b60006106548260166132c2565b600061065482602c6132e9565b600061065482604b6132f3565b60006106548260556132fb565b6000610654826056613305565b61195d8183146067611c4e565b6000606080600080611efc6122d5565b91509150611f08611be9565b1561200d57604051636c1e543160e11b815260009073__$4dfb88a4c975276bfeda73b9d8c1ea657b$__9063d83ca86290611f4b908d90879087906004016147d7565b60206040518083038186803b158015611f6357600080fd5b505af4158015611f77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f9b9190614655565b9050611fa681613313565b611fb08a88613340565b9096509450611fc98187611fc261071f565b600061338c565b60098190556040517fe1d39caf039c7dc6f364b1e29d1e67c4e330003a43f4991d50cf3e8840d95eac91611fff91849190614a6e565b60405180910390a150612023565b6120178987613340565b60001960095590955093505b6040805160028082526060820183528792879291906020830190803683370190505094509450945050509750975097945050505050565b6120818160008151811061206a57fe5b602002602001015161207c6001612a25565b61220f565b8160008151811061208e57fe5b6020026020010181815250506120bc816001815181106120aa57fe5b602002602001015161207c6000612a25565b816001815181106120c957fe5b60200260200101818152505050565b333014612196576000306001600160a01b03166000366040516120fc92919061477b565b6000604051808303816000865af19150503d8060008114612139576040519150601f19603f3d011682016040523d82523d6000602084013e61213e565b606091505b50509050806000811461214d57fe5b60046000803e6000516001600160e01b0319166343adbafb60e01b8114612178573d6000803e3d6000fd5b506020600460003e604060205260243d03602460403e601c3d016000f35b61219f86612269565b6000806121b58b8b8b8b8b8b8b8b63ffffffff16565b50915091506121c7818463ffffffff16565b8051601f1982018390526343adbafb603f1983015260200260231982016044820181fd5b60008282026107bd84158061220857508385838161220557fe5b04145b6003611c4e565b6000816122225761222260006004611c4e565b8261222f57506000610654565b670de0b6b3a76400008381029084828161224557fe5b04146122575761225760006005611c4e565b82818161226057fe5b04949350505050565b6122908160008151811061227957fe5b602002602001015161228b6001612a25565b6133e4565b8160008151811061229d57fe5b6020026020010181815250506120bc816001815181106122b957fe5b602002602001015161228b6000612a25565b61195d828261341d565b6122dd6140e5565b6122e5614114565b7f00000000000000000000000000000000000000000000000000000000000000006080808401919091527f00000000000000000000000000000000000000000000000000000000000000006060808501919091527f00000000000000000000000000000000000000000000000000000000000000006040808601919091527f00000000000000000000000000000000000000000000000000000000000000006020808701919091527f000000000000000000000000000000000000000000000000000000000000000086528451858201517f0000000000000000000000000000000000000000000000000000000000000000818401527f000000000000000000000000000000000000000000000000000000000000000090527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000090527f000000000000000000000000000000000000000000000000000000000000000060c08501527f000000000000000000000000000000000000000000000000000000000000000060a08501527f0000000000000000000000000000000000000000000000000000000000000000928401929092527f0000000000000000000000000000000000000000000000000000000000000000908301527f0000000000000000000000000000000000000000000000000000000000000000908201529091565b600060608060008061251b6122d5565b91509150600073__$4dfb88a4c975276bfeda73b9d8c1ea657b$__63d83ca8628b85856040518463ffffffff1660e01b815260040161255c939291906147d7565b60206040518083038186803b15801561257457600080fd5b505af4158015612588573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125ac9190614655565b90506125b781613313565b6000806125c48c8a6134d4565b600a54919350915060ff16156125ee576125ee826125e18f610c39565b6125e961071f565b61350e565b61260283836125fb61071f565b600161338c565b60098190556040517fe1d39caf039c7dc6f364b1e29d1e67c4e330003a43f4991d50cf3e8840d95eac9161263891869190614a6e565b60405180910390a16040805160028082526060820183528492849291906020830190803683370190505097509750975050505050509750975097945050505050565b6126a18160008151811061268a57fe5b602002602001015161269c6001612a25565b612d8c565b816000815181106126ae57fe5b6020026020010181815250506120bc816001815181106126ca57fe5b602002602001015161269c6000612a25565b604080516002808252606080830184529260208301908036833701905050905061272f7f000000000000000000000000000000000000000000000000000000000000000061272a6001612a25565b613620565b8160008151811061273c57fe5b6020026020010181815250506127767f000000000000000000000000000000000000000000000000000000000000000061272a6000612a25565b8160018151811061278357fe5b60200260200101818152505090565b600073__$4dfb88a4c975276bfeda73b9d8c1ea657b$__63c7fe78d08685856127ba896136c7565b6040518563ffffffff1660e01b81526004016127d99493929190614808565b60206040518083038186803b1580156127f157600080fd5b505af4158015612805573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128299190614655565b95945050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615612901576128fe7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663679aefce6040518163ffffffff1660e01b815260040160206040518083038186803b1580156128bf57600080fd5b505afa1580156128d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128f79190614655565b83906133e4565b91505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316156129ce576129cb7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663679aefce6040518163ffffffff1660e01b815260040160206040518083038186803b15801561298c57600080fd5b505afa1580156129a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129c49190614655565b839061220f565b91505b5090565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b60008060008315612a7a57507f000000000000000000000000000000000000000000000000000000000000000090507f0000000000000000000000000000000000000000000000000000000000000000612ac0565b507f000000000000000000000000000000000000000000000000000000000000000090507f00000000000000000000000000000000000000000000000000000000000000005b6001600160a01b038216156107bd57612b4a826001600160a01b031663679aefce6040518163ffffffff1660e01b815260040160206040518083038186803b158015612b0b57600080fd5b505afa158015612b1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b439190614655565b82906133e4565b949350505050565b60006107bd83836133e4565b60408051600280825260608083018452926020830190803683370190505090508115612bbd578381600081518110612b9257fe5b6020026020010181815250508281600181518110612bac57fe5b6020026020010181815250506107bd565b8281600081518110612bcb57fe5b6020026020010181815250508381600181518110612be557fe5b6020026020010181815250509392505050565b6000828202831580612c12575082848281612c0f57fe5b04145b612c2257612c2260006003611c4e565b80612c31576000915050610654565b670de0b6b3a764000060001982015b0460010191505092915050565b600082821115611a5c57611a5c60006001611c4e565b60608601516040516330ffa11b60e11b815260009173__$4dfb88a4c975276bfeda73b9d8c1ea657b$__916361ff423691612cab918a91908a908a908a908a90600401614879565b60206040518083038186803b158015612cc357600080fd5b505af4158015612cd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cfb9190614655565b979650505050505050565b60006107bd838361220f565b6060860151604051633b18ce7b60e21b815260009173__$4dfb88a4c975276bfeda73b9d8c1ea657b$__9163ec6339ec91612cab918a91908a908a908a908a90600401614879565b60006107bd8383612d8c565b6000670de0b6b3a76400008210612d7e576000610654565b50670de0b6b3a76400000390565b600081612d9f57612d9f60006004611c4e565b82612dac57506000610654565b670de0b6b3a764000083810290848281612dc257fe5b0414612de657612de6670de0b6b3a7640000858381612ddd57fe5b04146005611c4e565b826001820381612c4057fe5b6000612dfc6110ae565b6001600160a01b031663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b158015612e3457600080fd5b505afa158015612e48573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d79190614222565b6000612e76611d44565b82604051602001808061190160f01b81525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b600060606000612ec78461370b565b9050612ee26000826003811115612eda57fe5b1460ce611c4e565b6000612eed8561372a565b9050612efb81516002611edf565b612f0481612269565b600080612f0f6122d5565b91509150600073__$4dfb88a4c975276bfeda73b9d8c1ea657b$__63d83ca8628585856040518463ffffffff1660e01b8152600401612f50939291906147d7565b60206040518083038186803b158015612f6857600080fd5b505af4158015612f7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fa09190614655565b90507faf65f1a72bf4f8bc48e8153858e1f7b307ce39c88361a677c0a79c2a1ae571ef81604051612fd191906148ea565b60405180910390a16000612fe785838686612792565b9050600061302f6130158388600081518110612fff57fe5b60200260200101516133e490919063ffffffff16565b8760018151811061302257fe5b6020026020010151611e80565b60099390935550909b939a509298505050505050505050565b61195d82826137de565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b604080516002808252606080830184529260009291906020830190803683370190505090506130ac6001613873565b816000815181106130b957fe5b6020026020010181815250506130cf6000613873565b816001815181106130dc57fe5b6020908102919091010152905090565b6002815110156130fb5761071c565b60008160008151811061310a57fe5b602002602001015190506000600190505b8251811015611a3957600083828151811061313257fe5b6020026020010151905061315b816001600160a01b0316846001600160a01b0316106065611c4e565b915060010161311b565b8161195d5761195d816138c7565b60006107bd61319383602001518560200151611a7890919063ffffffff16565b835185516131a091611a78565b90611ab4565b600073ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b6131c561108a565b6001600160a01b0316141580156131e057506131e0836138d7565b15613208576131ed61108a565b6001600160a01b0316336001600160a01b0316149050610654565b613210612df2565b6001600160a01b0316639be2a8848484306040518463ffffffff1660e01b815260040180848152602001836001600160a01b03168152602001826001600160a01b03168152602001935050505060206040518083038186803b15801561327557600080fd5b505afa158015613289573d6000803e3d6000fd5b505050506040513d602081101561329f57600080fd5b50519050610654565b60006132b78484111583611c4e565b5050900390565b4690565b600082821c623fffff16621fffff81136132dc5780612b4a565b623fffff19179392505050565b1c637fffffff1690565b1c6103ff1690565b1c60019081161490565b1c67ffffffffffffffff1690565b60008060008061332560095486613909565b935093509350935061333984848484613972565b5050505050565b60006060600061334f8461370b565b9050600181600381111561335f57fe5b14156133795761336f8585613998565b9093509150613384565b6133846101506129d2565b509250929050565b600081156133be5760006133aa846133a48888612bf8565b90612d8c565b90506133b686826139ca565b915050612b4a565b60006133ce84610a7f88886133e4565b90506133da8682612c4d565b9695505050505050565b60008282028315806133fe5750828482816133fb57fe5b04145b61340e5761340e60006003611c4e565b670de0b6b3a764000081612260565b6134346001600160a01b038316151561019b611c4e565b61344082600083611a39565b6001600160a01b03821660009081526020819052604090205461346690826101a16132a8565b6001600160a01b03831660009081526020819052604090205560025461348c90826139e2565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6000606060006134e38461370b565b905060038160038111156134f357fe5b14156135035761336f85856139f0565b6133846101366129d2565b60408051606081018252600a5460ff81161515825261010081046001600160781b031660208301819052600160801b9091046001600160801b0316928201929092529061355b85856139ca565b11156040518060400160405280601a81526020017f6f7665722061646472657373206c697175696469747920636170000000000000815250906135b15760405162461bcd60e51b81526004016106ab9190614934565b5060408101516001600160801b03166135ca85846139ca565b11156040518060400160405280601981526020017f6f76657220676c6f62616c206c69717569646974792063617000000000000000815250906133395760405162461bcd60e51b81526004016106ab9190614934565b600080600061362d6110ae565b6001600160a01b031663b05f8e486136436107f5565b876040518363ffffffff1660e01b81526004016136619291906148f3565b60806040518083038186803b15801561367957600080fd5b505afa15801561368d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136b1919061466d565b50508181019450909250905061282983856133e4565b6000600160ff1b82106129ce5760405162461bcd60e51b8152600401808060200182810382526028815260200180614ac46028913960400191505060405180910390fd5b600081806020019051602081101561372257600080fd5b505192915050565b606081806020019051604081101561374157600080fd5b81516020830180516040519294929383019291908464010000000082111561376857600080fd5b90830190602082018581111561377d57600080fd5b825186602082028301116401000000008211171561379a57600080fd5b82525081516020918201928201910280838360005b838110156137c75781810151838201526020016137af565b505050509190910160405250929695505050505050565b6137ea60008383611a39565b6002546137f79082611e80565b6002556001600160a01b03821660009081526020819052604090205461381d9082611e80565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000816138a0577f0000000000000000000000000000000000000000000000000000000000000000610654565b507f0000000000000000000000000000000000000000000000000000000000000000919050565b61071c816223aca960e91b613a15565b60006138e9631c74c91760e11b61100c565b82148061065457506139016350dd6ed960e01b61100c565b909114919050565b60008060008060008060008061391d613a76565b9350935093509350836000141561394257600097508796509094509250613969915050565b6000806139598c8c61395261071f565b8989613be8565b909a509850929650909450505050505b92959194509250565b8315613982576139828285613048565b8215613992576139928184613048565b50505050565b6000606060006139a784613c83565b905060006139bd86836139b861071f565b613ca5565b9196919550909350505050565b6000828201838110156107bd576107bd600080611c4e565b60006107bd838360016132a8565b6000606060006139ff84613c83565b905060006139bd8683613a1061071f565b613d2b565b62461bcd60e51b600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fd5b600d54600090819081908190613a9d906001600160a01b03163063045434c560e41b613dc7565b600d54613abb906001600160a01b03163063045434c560e41b613dee565b600d546040516321f8a72160e01b81526001600160a01b03909116906321f8a72190613afb906c4759524f5f545245415355525960981b906004016148ea565b60206040518083038186803b158015613b1357600080fd5b505afa158015613b27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b4b9190614222565b600d546040516321f8a72160e01b81526001600160a01b03909116906321f8a72190613b8a906b42414c5f545245415355525960a01b906004016148ea565b60206040518083038186803b158015613ba257600080fd5b505afa158015613bb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613bda9190614222565b935093509350935090919293565b600080868611613bfd57506000905080613c79565b6000613c1d85613c17613c108a8c612c4d565b89906133e4565b906133e4565b90506000613c35613c2e898b612c4d565b87906133e4565b90506000613c438983612c4d565b90506000613c51848361220f565b90506000613c5f88836133e4565b90506000613c6d8383612c4d565b91975090955050505050505b9550959350505050565b6000818060200190516040811015613c9a57600080fd5b506020015192915050565b6060835167ffffffffffffffff81118015613cbf57600080fd5b50604051908082528060200260200182016040528015613ce9578160200160208202803683370190505b50905060005b845181101561159b57613d0c83610a7f86888581518110612fff57fe5b828281518110613d1857fe5b6020908102919091010152600101613cef565b6060835167ffffffffffffffff81118015613d4557600080fd5b50604051908082528060200260200182016040528015613d6f578160200160208202803683370190505b50905060005b845181101561159b57613da8836133a486888581518110613d9257fe5b6020026020010151612bf890919063ffffffff16565b828281518110613db457fe5b6020908102919091010152600101613d75565b6000612b4a847550524f544f434f4c5f535741505f4645455f5045524360501b8486613e18565b6000612b4a847f50524f544f434f4c5f4645455f4759524f5f504f5254494f4e0000000000000084865b6040805160208082018690526001600160a01b03808516838501528351808403850181526060840180865281519184019190912063696eb37560e01b909152606484018190529351600094939189169263696eb3759260848082019391829003018186803b158015613e8957600080fd5b505afa158015613e9d573d6000803e3d6000fd5b505050506040513d6020811015613eb357600080fd5b505115613f3357856001600160a01b031663bd02d0f5826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613efe57600080fd5b505afa158015613f12573d6000803e3d6000fd5b505050506040513d6020811015613f2857600080fd5b50519150612b4a9050565b6040805160208082018890528183018790528251808303840181526060830180855281519183019190912063696eb37560e01b9091526064830181905292516001600160a01b038a169263696eb375926084808301939192829003018186803b158015613f9f57600080fd5b505afa158015613fb3573d6000803e3d6000fd5b505050506040513d6020811015613fc957600080fd5b50511561404a57866001600160a01b031663bd02d0f5826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561401457600080fd5b505afa158015614028573d6000803e3d6000fd5b505050506040513d602081101561403e57600080fd5b50519250612b4a915050565b866001600160a01b031663bd02d0f5876040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561408e57600080fd5b505afa1580156140a2573d6000803e3d6000fd5b505050506040513d60208110156140b857600080fd5b5051979650505050505050565b604080516060810182526000808252602082018190529181019190915290565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b6040518060e0016040528061412761415d565b815260200161413461415d565b815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806040016040528060008152602001600081525090565b8035610c5381614aae565b80358015158114610c5357600080fd5b600082601f8301126141a2578081fd5b813567ffffffffffffffff8111156141b657fe5b6141c9601f8201601f1916602001614a8a565b8181528460208386010111156141dd578283fd5b816020850160208301379081016020019190915292915050565b803560028110610c5357600080fd5b600060208284031215614217578081fd5b81356107bd81614aae565b600060208284031215614233578081fd5b81516107bd81614aae565b60008060408385031215614250578081fd5b823561425b81614aae565b9150602083013561426b81614aae565b809150509250929050565b60008060006060848603121561428a578081fd5b833561429581614aae565b925060208401356142a581614aae565b929592945050506040919091013590565b600080600080600080600060e0888a0312156142d0578283fd5b87356142db81614aae565b965060208801356142eb81614aae565b95506040880135945060608801359350608088013560ff8116811461430e578384fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561433d578182fd5b823561434881614aae565b946020939093013593505050565b600060208284031215614367578081fd5b6107bd82614182565b600080600080600080600060e0888a03121561438a578081fd5b87359650602088013561439c81614aae565b955060408801356143ac81614aae565b9450606088013567ffffffffffffffff808211156143c8578283fd5b818a0191508a601f8301126143db578283fd5b8135818111156143e757fe5b602081026143f760208201614a8a565b80838252602082019150602086018f6020858901011115614416578788fd5b8796505b848710156144395780358352600196909601956020928301920161441a565b50985050505060808a0135945060a08a0135935060c08a0135915080821115614460578283fd5b5061446d8a828b01614192565b91505092959891949750929550565b60006020828403121561448d578081fd5b81356001600160e01b0319811681146107bd578182fd5b600080604083850312156144b6578182fd5b505080516020909101519092909150565b6000606082840312156144d8578081fd5b6040516060810181811067ffffffffffffffff821117156144f557fe5b60405261450183614182565b815260208301356001600160781b038116811461451c578283fd5b602082015260408301356001600160801b038116811461453a578283fd5b60408201529392505050565b60008060006060848603121561455a578081fd5b833567ffffffffffffffff80821115614571578283fd5b8186019150610120808389031215614587578384fd5b61459081614a8a565b905061459b836141f7565b81526145a960208401614177565b60208201526145ba60408401614177565b6040820152606083013560608201526080830135608082015260a083013560a08201526145e960c08401614177565b60c08201526145fa60e08401614177565b60e08201526101008084013583811115614612578586fd5b61461e8a828701614192565b9183019190915250976020870135975060409096013595945050505050565b60006020828403121561464e578081fd5b5035919050565b600060208284031215614666578081fd5b5051919050565b60008060008060808587031215614682578182fd5b84519350602085015192506040850151915060608501516146a281614aae565b939692955090935050565b6000815180845260208085019450808401835b838110156146dc578151875295820195908201906001016146c0565b509495945050505050565b6146f282825161476c565b6020810151614704604084018261476c565b5060408101516080830152606081015160a0830152608081015160c083015260a081015160e083015260c08101516101008301525050565b80518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b80518252602090810151910152565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b6000602082526107bd60208301846146ad565b6000604082526147c560408301856146ad565b828103602084015261282981856146ad565b60006101e08083526147eb818401876146ad565b9150506147fb602083018561473c565b612b4a60c08301846146e7565b600061020080835261481c818401886146ad565b91505061482c602083018661473c565b61483960c08301856146e7565b826101e083015295945050505050565b60006080825261485c60808301866146ad565b905061486b602083018561476c565b826060830152949350505050565b600061026080835261488d8184018a6146ad565b91505086602083015285151560408301526148ab606083018661473c565b6148b96101008301856146e7565b612cfb61022083018461476c565b901515815260200190565b92151583526020830191909152604082015260600190565b90815260200190565b9182526001600160a01b0316602082015260400190565b9586526020860194909452604085019290925260608401521515608083015260a082015260c00190565b6000602080835283518082850152825b8181101561496057858101830151858201604001528201614944565b818111156149715783604083870101525b50601f01601f1916929092016040019392505050565b8151151581526020808301516001600160781b0316908201526040918201516001600160801b03169181019190915260600190565b905460ff811615158252600881901c6001600160781b0316602083015260801c604082015260600190565b6101c081016149f6828561473c565b614a0460a08301845161476c565b6020830151614a1660e084018261476c565b5060408301516101208301526060830151610140830152608083015161016083015260a083015161018083015260c08301516101a08301529392505050565b600083825260406020830152612b4a60408301846146ad565b918252602082015260400190565b60ff91909116815260200190565b60405181810167ffffffffffffffff81118282101715614aa657fe5b604052919050565b6001600160a01b038116811461071c57600080fdfe53616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536a2646970667358221220d791fac87b08543f4d57391f0cf0642b2059d11b73ea3a3650794e3d7863d23064736f6c63430007060033", "deployedSourceMap": "969:29763:46:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2138:81:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4172:164;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1437:199:42:-;;;;;;:::i;:::-;;:::i;:::-;;7417:89:43;;;;;;:::i;:::-;;:::i;3181:98:28:-;;;:::i;:::-;;;;;;;:::i;3154:363:21:-;;;:::i;:::-;;;;;;;;;:::i;2657:655:1:-;;;;;;:::i;:::-;;:::i;3040:81:28:-;;;:::i;:::-;;;;;;;:::i;2359:113:29:-;;;:::i;6510:156:43:-;;;;;;:::i;:::-;;:::i;5345:91::-;;;:::i;5584:211:28:-;;;;;;:::i;:::-;;:::i;1642:105:42:-;;;:::i;:::-;;;;;;;:::i;1352:173:44:-;;;:::i;2002:29:46:-;;;:::i;:::-;;;;;;;:::i;5638:688:43:-;;;:::i;:::-;;;;;;;;;;;;:::i;6332:115::-;;;:::i;31631:770::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2118:44:46:-;;;:::i;34240:211:43:-;;;:::i;1073:34:42:-;;;:::i;30445:285:46:-;;;:::i;:::-;;;;;;;;:::i;3337:117:28:-;;;;;;:::i;:::-;;:::i;21542:1060:43:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1753:385:42:-;;;;;;:::i;:::-;;:::i;4854:167:46:-;;;:::i;:::-;;;;;;;;:::i;2127:108:29:-;;;;;;:::i;:::-;;:::i;790:308:44:-;;;;;;:::i;:::-;;:::i;2068:44:46:-;;;:::i;1141:168:44:-;;;:::i;2487:430:12:-;;;;;;:::i;:::-;;:::i;30240:768:43:-;;;;;;:::i;:::-;;:::i;1776:80:4:-;;;:::i;1879:79:1:-;;;:::i;2332:85:28:-;;;:::i;8001:482:46:-;;;:::i;8098:98:43:-;;;:::i;8508:3289:46:-;;;;;;:::i;:::-;;:::i;3438:429:1:-;;;;;;:::i;:::-;;:::i;3657:170:28:-;;;;;;:::i;:::-;;:::i;1862:101:4:-;;;:::i;488:27:44:-;;;:::i;6872:342:46:-;;;:::i;1313:753:29:-;;;;;;:::i;:::-;;:::i;11895:2126:43:-;;;;;;:::i;:::-;;:::i;2260:254:1:-;;;;;;:::i;:::-;;:::i;7512:117:43:-;;;:::i;:::-;;;;;;;:::i;2138:81:28:-;2207:5;2200:12;;;;;;;;;;;;;-1:-1:-1;;2200:12:28;;;;;;;;;;;;;;;;;;;;;;;;;;2175:13;;2200:12;;2207:5;;2200:12;;;2207:5;2200:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2138:81;:::o;4172:164::-;4255:4;4271:37;4280:10;4292:7;4301:6;4271:8;:37::i;:::-;-1:-1:-1;4325:4:28;4172:164;;;;;:::o;1437:199:42:-;1522:10;;1534:15;;;;;;;;;;;;-1:-1:-1;;;1534:15:42;;;;;-1:-1:-1;;;;;1522:10:42;1508;:24;1500:50;;;;-1:-1:-1;;;1500:50:42;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;1560:10:42;:24;;-1:-1:-1;;;;;;1560:24:42;-1:-1:-1;;;;;1560:24:42;;;;;1599:30;;;;;;1560:24;;1599:30;:::i;:::-;;;;;;;;1437:199;:::o;7417:89:43:-;2156:21:12;:19;:21::i;:::-;7481:18:43::1;7492:6;7481:10;:18::i;:::-;7417:89:::0;:::o;3181:98:28:-;3260:12;;3181:98;:::o;3154:363:21:-;3257:11;3282:26;3322:27;3384:14;:12;:14::i;:::-;3383:15;3374:24;;3429;:22;:24::i;:::-;3408:45;;3485:25;:23;:25::i;:::-;3463:47;;3154:363;;;:::o;2657:655:1:-;2785:4;2801:24;2828:29;2838:6;2846:10;2828:9;:29::i;:::-;2801:56;-1:-1:-1;2867:101:1;-1:-1:-1;;;;;2876:20:1;;:10;:20;;:50;;;2920:6;2900:16;:26;;2876:50;9174:3:13;2867:8:1;:101::i;:::-;2979:36;2989:6;2997:9;3008:6;2979:9;:36::i;:::-;-1:-1:-1;;;;;3030:20:1;;:10;:20;;;;:55;;-1:-1:-1;;;3054:31:1;;;3030:55;3026:258;;;3218:55;3227:6;3235:10;3266:6;3247:16;:25;3218:8;:55::i;:::-;3301:4;3294:11;;;2657:655;;;;;;:::o;3040:81:28:-;3105:9;;;;3040:81;:::o;2359:113:29:-;2419:7;2445:20;:18;:20::i;:::-;2438:27;;2359:113;:::o;6510:156:43:-;2156:21:12;:19;:21::i;:::-;2970:18:21::1;:16;:18::i;:::-;6619:40:43::2;6641:17;6619:21;:40::i;5345:91::-:0;5422:7;5345:91;:::o;5584:211:28:-;5697:10;5672:4;5718:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;5718:32:28;;;;;;;;;;5672:4;;5688:79;;5718:32;;:48;;5755:10;5718:36;:48::i;:::-;5688:8;:79::i;1642:105:42:-;1695:16;;:::i;:::-;-1:-1:-1;1723:17:42;;;;;;;;1730:10;1723:17;;;;;;;;;;;-1:-1:-1;;;;;1723:17:42;;;;;-1:-1:-1;;;1723:17:42;;-1:-1:-1;;;;;1723:17:42;;;;;;;;;1642:105::o;1352:173:44:-;1407:12;;1435:18;;;;;;;;;;;;-1:-1:-1;;;1435:18:44;;;;;-1:-1:-1;;;;;1407:12:44;1423:10;1407:26;1399:55;;;;-1:-1:-1;;;1399:55:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1464:22;1480:5;1464:15;:22::i;:::-;1501:17;;;;;;;1352:173::o;2002:29:46:-;;;-1:-1:-1;;;;;2002:29:46;;:::o;5638:688:43:-;5721:19;5754:21;5789:37;5840:19;5873:18;5905:25;5955:16;5974:9;;5955:28;;6008:23;:8;:21;:23::i;:::-;5993:38;;6058:25;:8;:23;:25::i;:::-;6041:42;;6125:40;:8;:38;:40::i;:::-;6093:72;;6189:22;:8;:20;:22::i;:::-;6175:36;;6237:24;:8;:22;:24::i;:::-;6221:40;;6291:28;:8;:26;:28::i;:::-;6271:48;;5638:688;;;;;;;:::o;6332:115::-;6385:7;6411:29;:9;;:27;:29::i;31631:770::-;31891:13;31906:27;31945:55;31981:8;:15;31998:1;31945:35;:55::i;:::-;32011:137;32024:6;32032;32040:9;32051:8;32061:15;32078:25;32105:8;32115:11;32128:19;32011:12;:137::i;:::-;31631:770;;;;;;;;;;:::o;2118:44:46:-;;;:::o;34240:211:43:-;34280:7;34394:50;34430:13;:11;:13::i;:::-;34394:27;34403:14;:12;:14::i;:::-;34419:1;34394:8;:27::i;:::-;:35;;:50::i;1073:34:42:-;;;-1:-1:-1;;;;;1073:34:42;;:::o;30445:285:46:-;30491:13;;-1:-1:-1;;;;;30547:13:46;30539:36;:83;;795:4:57;30539:83:46;;;30578:13;-1:-1:-1;;;;;30578:21:46;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;30531:91;-1:-1:-1;;;;;;30648:13:46;30640:36;:83;;795:4:57;30640:83:46;;;30679:13;-1:-1:-1;;;;;30679:21:46;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;30632:91;;30445:285;;:::o;3337:117:28:-;-1:-1:-1;;;;;3429:18:28;;3403:7;3429:18;;;;;;;;;;;3337:117;;;;:::o;21542:1060:43:-;21836:16;21854;21819:6;3135:68;3166:10;:8;:10::i;:::-;-1:-1:-1;;;;;3144:33:43;:10;:33;5392:3:13;3135:8:43;:68::i;:::-;3213:55;3232:11;:9;:11::i;:::-;3222:6;:21;10241:3:13;3213:8:43;:55::i;:::-;21882:23:::1;21896:8;21882:13;:23::i;:::-;21917:19;21938:27:::0;21967:38:::1;22009:196;22034:6;22054;22074:9;22097:8;22119:15;22148:25;22187:8;22009:11;:196::i;:::-;21916:289;;;;;;22311:36;22327:6;22335:11;22311:15;:36::i;:::-;22459:31;22479:10;22459:19;:31::i;:::-;22500:42;22520:21;22500:19;:42::i;:::-;22561:10:::0;;;;-1:-1:-1;21542:1060:43;-1:-1:-1;;;;;;;;;;21542:1060:43:o;1753:385:42:-;1850:10;;1862:15;;;;;;;;;;;;-1:-1:-1;;;1862:15:42;;;;;-1:-1:-1;;;;;1850:10:42;1836;:24;1828:50;;;;-1:-1:-1;;;1828:50:42;;;;;;;;:::i;:::-;-1:-1:-1;1896:10:42;:21;1919:9;;;;;;;;;;;;-1:-1:-1;;;1919:9:42;;;;;1896:21;;1888:41;;;;-1:-1:-1;;;1888:41:42;;;;;;;;:::i;:::-;-1:-1:-1;1964:17:42;;1940:10;:41;;2018:20;;;;2071:16;;;;;-1:-1:-1;;1940:41:42;;;;;;;;;;-1:-1:-1;;1991:47:42;1940:41;-1:-1:-1;;;;;1991:47:42;;;;;;;;-1:-1:-1;;;;;2048:39:42;;;-1:-1:-1;;;2048:39:42;;;;;;;;2103:28;;;;;;;:::i;4854:167:46:-;4902:33;;:::i;:::-;4937:35;;:::i;:::-;4991:23;:21;:23::i;:::-;4984:30;;;;4854:167;;:::o;2127:108:29:-;-1:-1:-1;;;;;2214:14:29;2188:7;2214:14;;;:7;:14;;;;;;;2127:108::o;790:308:44:-;899:12;;964:18;;;;;;;;;;;;-1:-1:-1;;;964:18:44;;;;-1:-1:-1;;;;;899:12:44;;;;952:10;929:33;;921:62;;;;-1:-1:-1;;;921:62:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;921:62:44;;;;;;;;;;;;;;;;;-1:-1:-1;993:12:44;:28;;-1:-1:-1;;;;;;993:28:44;-1:-1:-1;;;;;993:28:44;;;;;;;;;1036:55;;;;;;;;;;;;;;;;;;;;;;;;;;;790:308;;:::o;2068:44:46:-;;;:::o;1141:168:44:-;1194:12;;1222:18;;;;;;;;;;;;-1:-1:-1;;;1222:18:44;;;;;-1:-1:-1;;;;;1194:12:44;1210:10;1194:26;1186:55;;;;-1:-1:-1;;;1186:55:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1186:55:44;;;;;;;;;;;;;;;;;;1251:21;1267:4;1251:15;:21::i;:::-;1287:15;;;;;;;1141:168::o;2487:430:12:-;2859:50;;;2876:22;2859:50;;;;;;;;-1:-1:-1;;;;;;2859:50:12;;;;;;;;;;;;;;;;;;;;;;;;2849:61;;;;;;2487:430::o;30240:768:43:-;30500:14;30516:26;30554:55;30590:8;:15;30607:1;30554:35;:55::i;:::-;30620:135;30633:6;30641;30649:9;30660:8;30670:15;30687:25;30714:8;30724:11;30737:17;30620:12;:135::i;1776:80:4:-;1843:6;1776:80;:::o;1879:79:1:-;1945:6;1879:79;:::o;2332:85:28:-;2403:7;2396:14;;;;;;;;;;;;;-1:-1:-1;;2396:14:28;;;;;;;;;;;;;;;;;;;;;;;;;;2371:13;;2396:14;;2403:7;;2396:14;;;2403:7;2396:14;;;;;;;;;;;;;;;;;;;;;;;;8001:482:46;8044:17;8073:25;8101:17;:15;:17::i;:::-;8073:45;;8129:37;8168:51;8223:23;:21;:23::i;:::-;8128:118;;;;8256:17;8276:12;:31;8308:8;8318:10;8330:17;8276:72;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8256:92;;8370:61;8380:8;8390:9;8401:10;8413:17;8370:9;:61::i;:::-;8358:73;;8453:23;8466:9;8453:12;:23::i;:::-;8441:35;;8001:482;;;;;:::o;8098:98:43:-;8175:14;;8098:98;:::o;8508:3289:46:-;8704:7;2970:18:21;:16;:18::i;:::-;8679:7:46::1;:14;;;3135:68:43;3166:10;:8;:10::i;3135:68::-;3213:55;3232:11;:9;:11::i;3213:55::-;8758:15:46::2;::::0;::::2;::::0;8723:20:::2;::::0;8777:7:::2;-1:-1:-1::0;;;;;8758:26:46;;::::2;::::0;::::2;;:57:::0;::::2;;;-1:-1:-1::0;8788:16:46::2;::::0;::::2;::::0;8808:7:::2;-1:-1:-1::0;;;;;8788:27:46;;::::2;::::0;::::2;;8758:57;8754:309;;;-1:-1:-1::0;8849:4:46::2;8754:309;;;8874:15;::::0;::::2;::::0;8893:7:::2;-1:-1:-1::0;;;;;8874:26:46;;::::2;::::0;::::2;;:57:::0;::::2;;;-1:-1:-1::0;8904:16:46::2;::::0;::::2;::::0;8924:7:::2;-1:-1:-1::0;;;;;8904:27:46;;::::2;::::0;::::2;;8874:57;8870:193;;;-1:-1:-1::0;8965:5:46::2;8870:193;;;9001:51;381:3:47;9001:7:46;:51::i;:::-;9073:28;9104:31;9119:15;9104:14;:31::i;:::-;9073:62;;9145:29;9177:32;9193:15;9192:16;9177:14;:32::i;:::-;9145:64;;9280:46;9289:14;9305:20;9280:8;:46::i;:::-;9263:63;;9354:48;9363:15;9380:21;9354:8;:48::i;:::-;9336:66;;9600:25;9628:73;9652:14;9668:15;9685;9628:23;:73::i;:::-;9600:101;;9713:37;9752:51:::0;9807:23:::2;:21;:23::i;:::-;9712:118;;;;9840:37;;:::i;:::-;9902:23;9927:13:::0;9944:12:::2;:40;9985:8;9995:10;10007:17;9944:81;;;;;;;;;;;;;;;;;:::i;:::-;;::::0;::::2;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10239:69;::::0;;;;::::2;::::0;;;10279:1:::2;:10:::0;;::::2;10260:29:::0;::::2;10239:69:::0;;::::2;::::0;::::2;::::0;;;;;-1:-1:-1;;;;10333:40:46::2;::::0;-1:-1:-1;10333:40:46;::::2;:12:::0;;:40:::2;::::0;::::2;;;;;;;10329:1462;;;10592:17;10612:44;10633:22;:20;:22::i;:::-;10612:14;::::0;::::2;::::0;;:20:::2;:44::i;:::-;10592:64;;10687:61;10696:29;10715:9;10696:7;:14;;;:18;;:29;;;;:::i;:::-;10727:20;10687:8;:61::i;:::-;10670:14;::::0;::::2;:78:::0;10763:17:::2;10783:92;10670:7:::0;10807:8;10817:15;10834:10;10846:17;10865:9;10783:14:::2;:92::i;:::-;10763:112;;10895:42;10906:8;10916:9;10927;10895:42;;;;;;;;:::i;:::-;;;;;;;;11031:48;11046:9;11057:21;11031:14;:48::i;:::-;11024:55;;;;;;;;;;;;;10329:1462;11127:47;11136:7;:14;;;11152:21;11127:8;:47::i;:::-;11110:14;::::0;::::2;:64:::0;11189:16:::2;11208:93;11110:7:::0;11233:8;11243:15;11260:10;11272:17;11291:9;11208:15:::2;:93::i;:::-;11189:112;;11321:41;11332:8;11342:9;11353:8;11321:41;;;;;;;;:::i;:::-;;;;;;;;11458:44;11471:8;11481:20;11458:12;:44::i;:::-;11447:55;;11729:51;11744:35;:22;:20;:22::i;:::-;:33;:35::i;:::-;11729:8:::0;;:14:::2;:51::i;:::-;11722:58;;;;;;;;;;3278:1:43;2998::21::1;8508:3289:46::0;;;;;:::o;3438:429:1:-;3523:4;3539:24;3566:30;3576:10;3588:7;3566:9;:30::i;:::-;3539:57;;3621:16;3611:6;:26;3607:232;;3653:32;3662:10;3674:7;3683:1;3653:8;:32::i;:::-;3607:232;;;3772:56;3781:10;3793:7;3821:6;3802:16;:25;3772:8;:56::i;:::-;-1:-1:-1;3856:4:1;;3438:429;-1:-1:-1;;;3438:429:1:o;3657:170:28:-;3743:4;3759:40;3769:10;3781:9;3792:6;3759:9;:40::i;1862:101:4:-;1910:11;1940:16;:14;:16::i;488:27:44:-;;;-1:-1:-1;;;;;488:27:44;;:::o;6872:342:46:-;6926:7;6945:25;6973:17;:15;:17::i;:::-;6945:45;;7001:37;7040:51;7095:23;:21;:23::i;:::-;7135:72;;-1:-1:-1;;;7135:72:46;;7000:118;;-1:-1:-1;7000:118:46;-1:-1:-1;7135:12:46;;:31;;:72;;7167:8;;7000:118;;;;7135:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7128:79;;;;;6872:342;:::o;1313:753:29:-;1575:60;1603:8;1584:15;:27;;5606:3:13;1575:8:29;:60::i;:::-;-1:-1:-1;;;;;1662:14:29;;;1646:13;1662:14;;;:7;:14;;;;;;;;;1717:68;;1728:16;1717:68;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1717:68:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;1707:79;;;;;;;;;1812:28;1707:79;1812:16;:28::i;:::-;1797:43;;1851:14;1868:24;1878:4;1884:1;1887;1890;1868:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1868:24:29;;-1:-1:-1;;1868:24:29;;;-1:-1:-1;1902:79:29;;-1:-1:-1;;;;;;1912:20:29;;;;;;1911:43;;-1:-1:-1;;;;;;1938:15:29;;;;;;;1911:43;10474:3:13;1902:8:29;:79::i;:::-;-1:-1:-1;;;;;1992:14:29;;;;;;:7;:14;;;;;-1:-1:-1;2009:9:29;;1992:26;;2028:31;1992:14;2044:7;2053:5;2028:8;:31::i;:::-;1313:753;;;;;;;;;;;:::o;11895:2126:43:-;12203:26;12231:38;12172:6;3135:68;3166:10;:8;:10::i;3135:68::-;3213:55;3232:11;:9;:11::i;3213:55::-;2970:18:21::1;:16;:18::i;:::-;12374:20:43::2;12408:13;:11;:13::i;:::-;12404:1611;;12470:54;12488:6;12496;12504:9;12515:8;12470:17;:54::i;:::-;12442:82:::0;-1:-1:-1;12442:82:43;-1:-1:-1;12819:58:43::2;1614:3;12828:28:::0;::::2;;5338:3:13;12819:8:43;:58::i;:::-;12891:41;12915:1;1614:3;12891:15;:41::i;:::-;12946:55;12962:9;1614:3;12973:12;:27;12946:15;:55::i;:::-;13088:28;13106:9;13088:17;:28::i;:::-;13230:16;::::0;;13244:1:::2;13230:16:::0;;;;;::::2;::::0;;;;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;;::::0;-1:-1:-1;13230:16:43::2;13206:40;;12404:1611;;;13277:23;13291:8;13277:13;:23::i;:::-;13366:228;13395:6;13419;13443:9;13470:8;13496:15;13529:25;13572:8;13366:11;:228::i;:::-;13315:279:::0;;-1:-1:-1;13315:279:43;-1:-1:-1;13315:279:43;-1:-1:-1;13708:40:43::2;13724:9:::0;13315:279;13708:15:::2;:40::i;:::-;13835:28;13853:9;13835:17;:28::i;:::-;13962:42;13982:21;13962:19;:42::i;:::-;2998:1:21;11895:2126:43::0;;;;;;;;;;;:::o;2260:254:1:-;2341:7;2383:10;:8;:10::i;:::-;-1:-1:-1;;;;;2364:30:1;;;;;;2360:148;;;-1:-1:-1;;;2410:18:1;;2360:148;2466:31;2482:5;2489:7;2466:15;:31::i;:::-;2459:38;;;;7512:117:43;7567:16;7602:20;:18;:20::i;1135:274:19:-;1345:5;1369:33;1345:5;1369:19;:33::i;:::-;1135:274;;:::o;4100:704:45:-;4170:85;4185:6;:8;;;4180:1;:13;;:32;;;;;1169:4;4197:6;:8;;;:15;;4180:32;509:3:47;4170:9:45;:85::i;:::-;4265;4280:6;:8;;;4275:1;:13;;:32;;;;;1169:4;4292:6;:8;;;:15;;509:3:47;4265:9:45;:85::i;:::-;4381:27;;;;;;;;4389:8;;;;4381:27;;4399:8;;;;4381:27;;;;4361:17;4435:18;4381:27;;4435:10;:18::i;:::-;4418:35;-1:-1:-1;4479:194:45;4502:36;:47;-1:-1:-1;4502:47:45;;;:98;;-1:-1:-1;4564:36:45;4553:47;;;4502:98;577:3:47;4479:9:45;:194::i;:::-;4684:113;4699:6;:13;;;4694:1;:18;;:58;;;;;1656:4;4716:6;:13;;;:36;;4694:58;817:3:47;4684:9:45;:113::i;:::-;4100:704;;;:::o;5083:194:10:-;5178:7;5204:66;:4;5222:18;2155:2;5204:17;:66::i;948:166:25:-;1006:7;1025:37;1039:1;1034;:6;;4370:1:13;1025:8:25;:37::i;:::-;-1:-1:-1;1084:5:25;;;948:166::o;6887:269:22:-;2598:11;7074:18;;7072:21;7056:37;;;;7133:15;;7111:38;;6887:269::o;1970:222:59:-;2033:6;2068:5;;;2089:6;;;:26;;;2114:1;2109;2099:7;:11;;;;;;:16;2089:26;2083:71;;2118:36;2127:5;4467:1:13;2118:8:59;:36::i;:::-;838:4;2172:13;;;;-1:-1:-1;;;1970:222:59:o;1137:266::-;1193:6;1295:5;;;1316:6;;;;:23;;1338:1;1334;:5;1316:23;;;1330:1;1325;:6;;1316:23;1310:68;;1342:36;1351:5;4322:1:13;1342:8:59;:36::i;9345:213:28:-;-1:-1:-1;;;;;9468:18:28;;;;;;;-1:-1:-1;9468:18:28;;;;;;;;:27;;;;;;;;;;;;;:36;;;9519:32;;;;;;;;;;;;;;;;;9345:213;;;:::o;2300:181:12:-;2355:16;2374:20;-1:-1:-1;;;;;;2386:7:12;;;2374:11;:20::i;:::-;2355:39;;2404:70;2413:33;2425:8;2435:10;2413:11;:33::i;:::-;8353:3:13;2404:8:12;:70::i;3793:358:21:-;3849:6;3845:232;;;3871:81;3898:24;:22;:24::i;:::-;3880:15;:42;8455:3:13;3871:8:21;:81::i;:::-;3845:232;;;3983:83;4010:25;:23;:25::i;:::-;3992:15;:43;9885:3:13;3983:8:21;:83::i;:::-;4087:7;:16;;-1:-1:-1;;4087:16:21;;;;;;;;;;4118:26;;;;;;;;;;;;;;;;;3793:358;:::o;4544:237::-;4591:4;4737:25;:23;:25::i;:::-;4719:15;:43;:55;;;-1:-1:-1;;4767:7:21;;;;4766:8;;4544:237::o;4894:108::-;4976:19;4894:108;:::o;5008:110::-;5091:20;5008:110;:::o;866:101:13:-;935:9;930:34;;946:18;954:9;946:7;:18::i;7068:559:28:-;7195:71;-1:-1:-1;;;;;7204:20:28;;;;8770:3:13;7195:8:28;:71::i;:::-;7276:72;-1:-1:-1;;;;;7285:23:28;;;;8838:3:13;7276:8:28;:72::i;:::-;7359:47;7380:6;7388:9;7399:6;7359:20;:47::i;:::-;-1:-1:-1;;;;;7437:17:28;;:9;:17;;;;;;;;;;;:68;;7459:6;9316:3:13;7437:21:28;:68::i;:::-;-1:-1:-1;;;;;7417:17:28;;;:9;:17;;;;;;;;;;;:88;;;;7538:20;;;;;;;:32;;7563:6;7538:24;:32::i;:::-;-1:-1:-1;;;;;7515:20:28;;;:9;:20;;;;;;;;;;;;:55;;;;7585:35;;;;;;;7515:20;;7585:35;;;;;;;;;;;;;7068:559;;;:::o;2386:188:27:-;2447:7;2494:10;2506:12;2520:15;2537:13;:11;:13::i;:::-;2483:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2560:4;2483:83;;;;;;;;;;;;;;;;;;;;;;;;2473:94;;;;;;2386:188;-1:-1:-1;2386:188:27:o;4220:98:21:-;4272:39;4281:14;:12;:14::i;:::-;8397:3:13;4272:8:21;:39::i;:::-;4220:98::o;6672:397:43:-;6748:87;1722:4;6757:17;:45;;5289:3:13;6748:8:43;:87::i;:::-;6845;1795:4;6854:17;:45;;5228:3:13;6845:8:43;:87::i;:::-;6955:9;;:49;;6986:17;6955:30;:49::i;:::-;6943:9;:61;7019:43;;;;;;7044:17;;7019:43;:::i;915:167:32:-;973:7;1004:5;;;1019:37;1028:6;;;;973:7;1019:8;:37::i;2239:130:10:-;2298:6;2323:39;:4;2298:6;2323:16;:39::i;2453:135::-;2514:6;2539:42;:4;1902:2;2539:16;:42::i;2691:168::-;2767:7;2793:59;:4;1978:2;2793:17;:59::i;2942:130::-;3000:7;3026:39;:4;2034:2;3026:17;:39::i;3145:129::-;3205:4;3228:39;:4;2092:2;3228:15;:39::i;3341:143::-;3405:7;3431:46;:4;2155:2;3431:17;:46::i;810:131:19:-;888:46;902:1;897;:6;5002:3:13;888:8:19;:46::i;20304:2909:46:-;20592:19;20625:27;20666:38;20884:37;20923:51;20978:23;:21;:23::i;:::-;20883:118;;;;21178:14;:12;:14::i;:::-;21174:1860;;;21546:72;;-1:-1:-1;;;21546:72:46;;21514:29;;21546:12;;:31;;:72;;21578:8;;21588:10;;21600:17;;21546:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21514:104;;21633:38;21649:21;21633:15;:38::i;:::-;21714:27;21722:8;21732;21714:7;:27::i;:::-;21686:55;;-1:-1:-1;21686:55:46;-1:-1:-1;22216:95:46;22254:21;21686:55;22290:13;:11;:13::i;:::-;22305:5;22216:37;:95::i;:::-;22199:14;:112;;;22331:57;;;;;;22350:21;;22199:112;22331:57;:::i;:::-;;;;;;;;21174:1860;;;;22617:27;22625:8;22635;22617:7;:27::i;:::-;-1:-1:-1;;22989:14:46;:34;22589:55;;-1:-1:-1;22589:55:46;-1:-1:-1;21174:1860:46;23189:16;;;23203:1;23189:16;;;;;;;;23164:11;;23177:10;;23189:16;23203:1;23189:16;;;;;;;;;;-1:-1:-1;23189:16:46;23156:50;;;;;;;;20304:2909;;;;;;;;;;;:::o;36830:235:43:-;36922:56;36945:7;36953:1;36945:10;;;;;;;;;;;;;;36957:20;36972:4;36957:14;:20::i;:::-;36922:22;:56::i;:::-;36909:7;36917:1;36909:10;;;;;;;;;;;;;:69;;;;;37001:57;37024:7;37032:1;37024:10;;;;;;;;;;;;;;37036:21;37051:5;37036:14;:21::i;37001:57::-;36988:7;36996:1;36988:10;;;;;;;;;;;;;:70;;;;;36830:235;:::o;38347:6537::-;39010:10;39032:4;39010:27;39006:5872;;39324:28;;39306:12;;39332:4;;39324:28;;39306:12;;39343:8;;39324:28;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39305:47;;;39570:7;39599:1;39594:3176;;;;42918:9;39594:3176;40050:4;40047:1;40044;40029:26;40099:1;40093:8;-1:-1:-1;;;;;;40089:81:43;-1:-1:-1;;;40313:77:43;;40307:2;;40442:16;40439:1;40436;40421:38;40494:16;40491:1;40484:27;40307:2;;41833;41827:4;41824:1;41809:27;42018:2;42012:4;42005:16;42426:2;42408:16;42404:25;42398:4;42392;42377:53;42748:2;42730:16;42726:25;42723:1;42716:36;39436:3523;42989:23;43003:8;42989:13;:23::i;:::-;43028:17;43047:29;43082:224;43107:6;43131;43155:9;43182:8;43208:15;43241:25;43284:8;43082:7;:224;;:::i;:::-;43027:279;;;;;43321:29;43337:12;43321:15;:29;;:::i;:::-;43831:19;;-1:-1:-1;;44218:23:43;;44258:24;;;44504:66;-1:-1:-1;;44486:16:43;;44479:92;-1:-1:-1;43827:28:43;-1:-1:-1;;44597:16:43;;44850:2;44840:13;;44597:16;44826:28;1793:180:25;1851:7;1882:5;;;1897:51;1906:6;;;:20;;;1925:1;1920;1916;:5;;;;;;:10;1906:20;4467:1:13;1897:8:25;:51::i;3345:400:57:-;3407:7;3430:6;3426:74;;3452:37;3461:5;4516:1:13;3452:8:57;:37::i;:::-;3514:6;3510:45;;-1:-1:-1;3543:1:57;3536:8;;3510:45;795:4;3585:7;;;;:1;:7;:1;3608:13;;;;;:20;3602:106;;3645:36;3654:5;4564:1:13;3645:8:57;:36::i;:::-;3737:1;3725:9;:13;;;;;;;3345:400;-1:-1:-1;;;;3345:400:57:o;36040:229:43:-;36126:56;36149:7;36157:1;36149:10;;;;;;;;;;;;;;36161:20;36176:4;36161:14;:20::i;:::-;36126:22;:56::i;:::-;36113:7;36121:1;36113:10;;;;;;;;;;;;;:69;;;;;36205:57;36228:7;36236:1;36228:10;;;;;;;;;;;;;;36240:21;36255:5;36240:14;:21::i;4016:104:1:-;4092:21;4098:6;4106;4092:5;:21::i;4401:447:46:-;4457:33;;:::i;:::-;4492:35;;:::i;:::-;4652:13;4587;;;;4539:127;;;;4642:8;4577;;;;4539:127;;;;4632:8;4567;;;;4539:127;;;;4619:11;4554;;;;4539:127;;;;4605:12;4539:127;;4677:10;;4705:9;;;;4769;4718:11;;;4676:103;4758:9;4676:103;;4746:10;4691:12;;;4676:103;;;;4734:10;4676:103;;4836:4;4810:5;;;4789:52;4832:2;4805:3;;;4789:52;4828:2;4800:3;;;4789:52;;;;4824:2;4795:3;;;4789:52;4820:2;4790:3;;;4789:52;4540:6;;4401:447::o;16148:1970::-;16445:7;16466:16;16496;16825:37;16864:51;16919:23;:21;:23::i;:::-;16824:118;;;;16952:29;16984:12;:31;17016:8;17026:10;17038:17;16984:72;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16952:104;;17067:38;17083:21;17067:15;:38::i;:::-;17117:20;17139:26;17169:27;17177:8;17187;17169:7;:27::i;:::-;17211:10;:21;17116:80;;-1:-1:-1;17116:80:46;-1:-1:-1;17211:21:46;;17207:113;;;17248:61;17259:12;17273:20;17283:9;17273;:20::i;:::-;17295:13;:11;:13::i;:::-;17248:10;:61::i;:::-;17770:95;17808:21;17831:12;17845:13;:11;:13::i;:::-;17860:4;17770:37;:95::i;:::-;17753:14;:112;;;17881:57;;;;;;17900:21;;17753:112;17881:57;:::i;:::-;;;;;;;;18094:16;;;18108:1;18094:16;;;;;;;;18069:12;;18083:9;;18094:16;18108:1;18094:16;;;;;;;;;;-1:-1:-1;18094:16:46;18061:50;;;;;;;;;;;16148:1970;;;;;;;;;;;:::o;37618:229:43:-;37708:54;37729:7;37737:1;37729:10;;;;;;;;;;;;;;37741:20;37756:4;37741:14;:20::i;:::-;37708;:54::i;:::-;37695:7;37703:1;37695:10;;;;;;;;;;;;;:67;;;;;37785:55;37806:7;37814:1;37806:10;;;;;;;;;;;;;;37818:21;37833:5;37818:14;:21::i;6162:523:46:-;6482:16;;;6496:1;6482:16;;;6212:25;6482:16;;;;;6212:25;6482:16;;;;;;;;;;-1:-1:-1;6482:16:46;6471:27;;6522:53;6545:7;6554:20;6569:4;6554:14;:20::i;:::-;6522:22;:53::i;:::-;6508:8;6517:1;6508:11;;;;;;;;;;;;;:67;;;;;6599:54;6622:7;6631:21;6646:5;6631:14;:21::i;6599:54::-;6585:8;6594:1;6585:11;;;;;;;;;;;;;:68;;;;;6162:523;:::o;7445:359::-;7663:17;7704:12;:30;7735:8;7745:10;7757:17;7776:20;:9;:18;:20::i;:::-;7704:93;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7692:105;7445:359;-1:-1:-1;;;;;7445:359:46:o;29832:327::-;29905:7;-1:-1:-1;;;;;29936:13:46;29928:36;;29924:96;;29978:42;29996:13;-1:-1:-1;;;;;29996:21:46;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29978:9;;:17;:42::i;:::-;29966:54;;29924:96;-1:-1:-1;;;;;30042:13:46;30034:36;;30030:96;;30084:42;30102:13;-1:-1:-1;;;;;30102:21:46;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;30084:9;;:17;:42::i;:::-;30072:54;;30030:96;-1:-1:-1;30143:9:46;29832:327::o;1074:3172:13:-;-1:-1:-1;;;3588:3:13;3581:79;;;3799:66;3793:4;3786:80;3941:1;3935:4;3928:15;2210:2;2243:18;;;2336;;;2383;;;2215:4;2379:29;;;3057:2;3053:17;2195:18;;;;2288;;;;2284:29;;;;3040:1;3036:14;3025:26;;;;3021:50;;;;2999:73;;2994:3;2990:83;4008:4;4001:26;4234:3;;4224:14;29309:517:46;29378:7;29397:26;29433:21;29468:6;29464:214;;;-1:-1:-1;29505:13:46;;-1:-1:-1;29548:15:46;29464:214;;;-1:-1:-1;29609:13:46;;-1:-1:-1;29652:15:46;29464:214;-1:-1:-1;;;;;29691:35:46;;;29687:102;;29744:45;29766:12;-1:-1:-1;;;;;29766:20:46;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29744:13;;:21;:45::i;:::-;29728:61;29806:13;-1:-1:-1;;;;29309:517:46:o;35695:158:43:-;35775:7;35801:45;35824:6;35832:13;35801:22;:45::i;24768:456:46:-;24973:16;;;24987:1;24973:16;;;24925:25;24973:16;;;;;24925:25;24973:16;;;;;;;;;;-1:-1:-1;24973:16:46;24962:27;;25003:15;24999:219;;;25048:14;25034:8;25043:1;25034:11;;;;;;;;;;;;;:28;;;;;25090:15;25076:8;25085:1;25076:11;;;;;;;;;;;;;:29;;;;;24999:219;;;25150:15;25136:8;25145:1;25136:11;;;;;;;;;;;;;:29;;;;;25193:14;25179:8;25188:1;25179:11;;;;;;;;;;;;;:28;;;;;24768:456;;;;;:::o;2208:615:57:-;2268:7;2305:5;;;2326:6;;;:26;;;2351:1;2346;2336:7;:11;;;;;;:16;2326:26;2320:96;;2369:36;2378:5;4467:1:13;2369:8:57;:36::i;:::-;2430:12;2426:51;;2465:1;2458:8;;;;;2426:51;795:4;-1:-1:-1;;2793:11:57;;2792:19;;2815:1;2791:25;2784:32;;;2208:615;;;;:::o;1448:277::-;1506:7;1609:1;1604;:6;;1598:76;;1627:36;1636:5;4370:1:13;1627:8:57;:36::i;11803:521:46:-;12239:18;;;;12201:116;;-1:-1:-1;;;12201:116:46;;12115:7;;12201:12;;:27;;:116;;12229:8;;12239:18;12259:15;;12276:10;;12288:17;;12307:9;;12201:116;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12194:123;11803:521;-1:-1:-1;;;;;;;11803:521:46:o;36473:164:43:-;36559:7;36585:45;36608:6;36616:13;36585:22;:45::i;12330:522:46:-;12767:18;;;;12729:116;;-1:-1:-1;;;12729:116:46;;12643:7;;12729:12;;:27;;:116;;12757:8;;12767:18;12787:15;;12804:10;;12816:17;;12835:9;;12729:116;;;:::i;37267:160:43:-;37351:7;37377:43;37398:6;37406:13;37377:20;:43::i;9321:112:57:-;9375:7;795:4;9402:1;:7;9401:25;;9425:1;9401:25;;;-1:-1:-1;795:4:57;9414:7;;9321:112::o;3950:722::-;4010:7;4033:6;4029:74;;4055:37;4064:5;4516:1:13;4055:8:57;:37::i;:::-;4117:6;4113:45;;-1:-1:-1;4146:1:57;4139:8;;4113:45;795:4;4188:7;;;;:1;:7;:1;4211:13;;;;;:20;4205:121;;4248:51;795:4;4269:1;4257:9;:13;;;;;;:20;4564:1:13;4248:8:57;:51::i;:::-;4659:1;4654;4642:9;:13;4641:19;;;;37853:488:43;37911:11;38308:10;:8;:10::i;:::-;-1:-1:-1;;;;;38308:24:43;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3199:183:27:-;3276:7;3341:20;:18;:20::i;:::-;3363:10;3312:62;;;;;;-1:-1:-1;;;3312:62:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3302:73;;;;;;3295:80;;3199:183;;;:::o;13664:1347:46:-;13806:7;13815:16;13843:30;13876:19;:8;:17;:19::i;:::-;13843:52;-1:-1:-1;13905:70:46;13922:30;13914:4;:38;;;;;;;;;5443:3:13;13905:8:46;:70::i;:::-;13986:26;14015:27;:8;:25;:27::i;:::-;13986:56;;14052;14088:9;:16;14106:1;14052:35;:56::i;:::-;14118:24;14132:9;14118:13;:24::i;:::-;14154:37;14193:51;14248:23;:21;:23::i;:::-;14153:118;;;;14281:26;14310:12;:31;14342:9;14353:10;14365:17;14310:73;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14281:102;;14399:47;14427:18;14399:47;;;;;;:::i;:::-;;;;;;;;14736:17;14756:71;14766:9;14777:18;14797:10;14809:17;14756:9;:71::i;:::-;14736:91;;14837:20;14860:55;14869:31;14890:9;14869;14879:1;14869:12;;;;;;;;;;;;;;:20;;:31;;;;:::i;:::-;14902:9;14912:1;14902:12;;;;;;;;;;;;;;14860:8;:55::i;:::-;14926:14;:35;;;;-1:-1:-1;14926:35:46;;14994:9;;-1:-1:-1;13664:1347:46;;-1:-1:-1;;;;;;;;;13664:1347:46:o;3900:110:1:-;3979:24;3985:9;3996:6;3979:5;:24::i;3885:149:28:-;-1:-1:-1;;;;;4000:18:28;;;3974:7;4000:18;;;-1:-1:-1;4000:18:28;;;;;;;;:27;;;;;;;;;;;;;3885:149::o;7635:298:43:-;7761:16;;;7775:1;7761:16;;;7696;7761;;;;;7696;7724:34;;7761:16;7775:1;7761:16;;;;;;;;;;-1:-1:-1;7761:16:43;7724:53;;7810:24;7829:4;7810:18;:24::i;:::-;7787:17;7805:1;7787:20;;;;;;;;;;;;;:47;;;;;7867:25;7886:5;7867:18;:25::i;:::-;7844:17;7862:1;7844:20;;;;;;;;;;;;;;;;;:48;7909:17;-1:-1:-1;7635:298:43;:::o;1415:374:19:-;1511:1;1496:5;:12;:16;1492:53;;;1528:7;;1492:53;1555:16;1574:5;1580:1;1574:8;;;;;;;;;;;;;;1555:27;;1597:9;1609:1;1597:13;;1592:191;1616:5;:12;1612:1;:16;1592:191;;;1649:15;1667:5;1673:1;1667:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;1689:51:19;-1:-1:-1;;;;;1698:18:19;;;;;;;4890:3:13;1689:8:19;:51::i;:::-;1765:7;-1:-1:-1;1630:3:19;;1592:191;;388:103:56;458:9;453:35;;469:19;478:9;469:8;:19::i;6472:164:45:-;6553:10;6581:48;6607:21;6623:2;:4;;;6607:2;:4;;;:15;;:21;;;;:::i;:::-;6597:4;;6581;;:21;;:15;:21::i;:::-;:25;;:48::i;1969:544:4:-;2057:4;1663:42;2078:10;:8;:10::i;:::-;-1:-1:-1;;;;;2078:29:4;;;;;2077:63;;;2112:28;2131:8;2112:18;:28::i;:::-;2073:434;;;2272:10;:8;:10::i;:::-;-1:-1:-1;;;;;2258:24:4;:10;:24;;-1:-1:-1;2251:31:4;;2073:434;2435:16;:14;:16::i;:::-;:61;;;-1:-1:-1;;;2435:61:4;;;;;;;;-1:-1:-1;;;;;2435:61:4;;;;;;;2490:4;2435:61;;;;;;:27;;;;;;;:61;;;;;;;;;;;;;;;:27;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2435:61:4;;-1:-1:-1;2428:68:4;;1765:176:32;1842:7;1861:27;1875:1;1870;:6;;1878:9;1861:8;:27::i;:::-;-1:-1:-1;;1910:5:32;;;1765:176::o;3388:427:27:-;3790:9;;3765:44::o;12135:487:22:-;12209:6;12257:14;;;2386:11;12249:34;2846:11;12558:19;;:57;;12610:5;12558:57;;;-1:-1:-1;;12581:25:22;;;-1:-1:-1;;;12135:487:22:o;11062:142::-;11171:14;2439:11;11163:34;;11062:142::o;10534:::-;10643:14;2280:11;10635:34;;10534:142::o;9730:143::-;9835:14;2126:10;9827:33;;;9826:40;;9730:143::o;11590:142::-;11699:14;2598:11;11691:34;;11590:142::o;25684:583:46:-;25977:16;25995:20;26017;26039:19;26062:98;26101:14;;26129:21;26062:25;:98::i;:::-;25976:184;;;;;;;;26198:62;26210:8;26220:12;26234;26248:11;26198;:62::i;:::-;25684:583;;;;;:::o;23219:592::-;23309:19;23330:27;23369:30;23402:19;:8;:17;:19::i;:::-;23369:52;-1:-1:-1;23584:53:46;23576:4;:61;;;;;;;;;23572:233;;;23681:47;23709:8;23719;23681:27;:47::i;:::-;23653:75;;-1:-1:-1;23653:75:46;-1:-1:-1;23572:233:46;;;23759:35;7850:3:13;23759:7:46;:35::i;:::-;23219:592;;;;;;:::o;10967:743:58:-;11153:21;11222:13;11218:486;;;11325:10;11338:57;11378:16;11338:33;:10;11355:15;11338:16;:33::i;:::-;:39;;:57::i;:::-;11325:70;-1:-1:-1;11425:18:58;:10;11325:70;11425:14;:18::i;:::-;11409:34;;11218:486;;;;11571:10;11584:61;11628:16;11584:35;:10;11603:15;11584:18;:35::i;:61::-;11571:74;-1:-1:-1;11675:18:58;:10;11571:74;11675:14;:18::i;:::-;11659:34;10967:743;-1:-1:-1;;;;;;10967:743:58:o;1731:247:57:-;1793:7;1830:5;;;1851:6;;;:26;;;1876:1;1871;1861:7;:11;;;;;;:16;1851:26;1845:96;;1894:36;1903:5;4467:1:13;1894:8:57;:36::i;:::-;795:4;1958:7;:13;;8512:410:28;8587:68;-1:-1:-1;;;;;8596:21:28;;;;8968:3:13;8587:8:28;:68::i;:::-;8666:49;8687:7;8704:1;8708:6;8666:20;:49::i;:::-;-1:-1:-1;;;;;8747:18:28;;:9;:18;;;;;;;;;;;:67;;8770:6;9382:3:13;8747:22:28;:67::i;:::-;-1:-1:-1;;;;;8726:18:28;;:9;:18;;;;;;;;;;:88;8839:12;;:24;;8856:6;8839:16;:24::i;:::-;8824:12;:39;8878:37;;;;;;;;8904:1;;-1:-1:-1;;;;;8878:37:28;;;;;;;;;;;;8512:410;;:::o;18124:581:46:-;18214:20;18236:26;18274:30;18307:19;:8;:17;:19::i;:::-;18274:52;-1:-1:-1;18471:57:46;18463:4;:65;;;;;;;;;18459:240;;;18572:50;18603:8;18613;18572:30;:50::i;18459:240::-;18653:35;6263:3:13;18653:7:46;:35::i;2144:362:42:-;2284:36;;;;;;;;2310:10;2284:36;;;;;;;;;;;-1:-1:-1;;;;;2284:36:42;;;;;;;-1:-1:-1;;;2284:36:42;;;-1:-1:-1;;;;;2284:36:42;;;;;;;;;2338:29;:12;2355:11;2338:16;:29::i;:::-;:53;;2393:17;;;;;;;;;;;;;;;;;2330:81;;;;;-1:-1:-1;;;2330:81:42;;;;;;;;:::i;:::-;-1:-1:-1;2464:16:42;;;;-1:-1:-1;;;;;2429:51:42;:31;:12;2446:13;2429:16;:31::i;:::-;:51;;2482:16;;;;;;;;;;;;;;;;;2421:78;;;;;-1:-1:-1;;;2421:78:42;;;;;;;;:::i;5398:588:46:-;5490:15;5735:12;5749:15;5772:10;:8;:10::i;:::-;-1:-1:-1;;;;;5772:27:46;;5800:11;:9;:11::i;:::-;5813:5;5772:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;5839:14:46;;;;-1:-1:-1;5734:85:46;;-1:-1:-1;5734:85:46;-1:-1:-1;5949:30:46;5839:14;5965:13;5949:15;:30::i;6362:178:41:-;6418:6;-1:-1:-1;;;6444:14:41;;6436:67;;;;-1:-1:-1;;;6436:67:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;867:156:11;927:25;982:4;971:45;;;;;;;;;;;;;;;-1:-1:-1;971:45:11;;867:156;-1:-1:-1;;867:156:11:o;1205:185::-;1273:26;1338:4;1327:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1327:56:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1327:56:11;;;;;;-1:-1:-1;1311:72:11;;1205:185;-1:-1:-1;;;;;;1205:185:11:o;7898:294:28:-;7973:49;8002:1;8006:7;8015:6;7973:20;:49::i;:::-;8048:12;;:24;;8065:6;8048:16;:24::i;:::-;8033:12;:39;-1:-1:-1;;;;;8103:18:28;;:9;:18;;;;;;;;;;;:30;;8126:6;8103:22;:30::i;:::-;-1:-1:-1;;;;;8082:18:28;;:9;:18;;;;;;;;;;;:51;;;;8148:37;;;;;;;8082:18;;:9;;8148:37;;;;;;;;;;7898:294;;:::o;7939:153:43:-;8011:7;8037:6;:48;;8067:18;8037:48;;;-1:-1:-1;8046:18:43;;7939:153;-1:-1:-1;7939:153:43:o;925:128:56:-;973:29;982:9;-1:-1:-1;;;973:8:56;:29::i;7075:279:43:-;7161:4;7209:51;-1:-1:-1;;;7209:11:43;:51::i;:::-;7197:8;:63;7196:151;;;-1:-1:-1;7290:56:43;-1:-1:-1;;;7290:11:43;:56::i;:::-;7278:68;;;;7075:279;-1:-1:-1;7075:279:43:o;27180:914:46:-;27328:7;27349;27370;27391;27424:27;27453:30;27485:20;27507:19;27530:18;:16;:18::i;:::-;27423:125;;;;;;;;27644:19;27667:1;27644:24;27640:95;;;27692:1;;-1:-1:-1;27692:1:46;;-1:-1:-1;27698:12:46;;-1:-1:-1;27712:11:46;-1:-1:-1;27684:40:46;;-1:-1:-1;;27684:40:46;27640:95;27779:16;27797:20;27821:197;27865:17;27896:16;27926:13;:11;:13::i;:::-;27953:19;27986:22;27821:30;:197::i;:::-;27778:240;;-1:-1:-1;27778:240:46;-1:-1:-1;28061:12:46;;-1:-1:-1;28075:11:46;;-1:-1:-1;;;;;27180:914:46;;;;;;;;:::o;28173:434::-;28382:12;;28378:82;;28410:39;28426:12;28440:8;28410:15;:39::i;:::-;28516:16;;28512:89;;28548:42;28564:11;28577:12;28548:15;:42::i;:::-;28173:434;;;;:::o;23817:928::-;23968:7;23977:16;24420:19;24442:33;:8;:31;:33::i;:::-;24420:55;;24586:27;24616:80;24659:8;24669:11;24682:13;:11;:13::i;:::-;24616:42;:80::i;:::-;24714:11;;;;-1:-1:-1;23817:928:46;;-1:-1:-1;;;;23817:928:46:o;1165:277:57:-;1223:7;1327:5;;;1348:6;;;;1342:76;;1371:36;1380:5;4322:1:13;1371:8:57;:36::i;1353:121:32:-;1411:7;1437:30;1441:1;1444;4370::13;1437:3:32;:30::i;18711:528:46:-;18865:7;18874:16;18906:20;18929:36;:8;:34;:36::i;:::-;18906:59;;19076:26;19105:84;19151:8;19161:12;19175:13;:11;:13::i;:::-;19105:45;:84::i;1160:3379:56:-;-1:-1:-1;;;1223:18:56;3874:79;;;4092:66;4086:4;4079:80;4234:1;4228:4;4221:15;2362:2;2395:18;;;2440;;;2367:4;2436:29;;;3238:1;3329:14;2347:18;;;;3318:26;;;;2488:18;;;;2535;;;2531:29;;3350:2;3346:17;3314:50;3228:4;3234:18;;;;;;3224:29;3220:2;3216:38;3293:72;;;;3288:3;3284:82;4301:4;4294:26;1252:14;;;;;4527:3;;4517:14;28686:499:46;28890:10;;28774:7;;;;;;;;28890:58;;-1:-1:-1;;;;;28890:10:46;28931:4;-1:-1:-1;;;28890:32:46;:58::i;:::-;28962:10;;:69;;-1:-1:-1;;;;;28962:10:46;29014:4;-1:-1:-1;;;28962:43:46;:69::i;:::-;29045:10;;:55;;-1:-1:-1;;;29045:55:46;;-1:-1:-1;;;;;29045:10:46;;;;-1:-1:-1;;29045:55:46;;-1:-1:-1;;;;29045:55:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29114:10;;:54;;-1:-1:-1;;;29114:54:46;;-1:-1:-1;;;;;29114:10:46;;;;-1:-1:-1;;29114:54:46;;-1:-1:-1;;;;29114:54:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28869:309;;;;;;;;28686:499;;;;:::o;4207:2410:58:-;4443:7;4452;5186:17;5166:16;:37;5162:443;;-1:-1:-1;5589:1:58;;-1:-1:-1;5589:1:58;5581:13;;5162:443;6057:17;6077:96;6153:19;6078:65;6103:39;:16;6124:17;6103:20;:39::i;:::-;6078:16;;:24;:65::i;:::-;6077:75;;:96::i;:::-;6057:116;-1:-1:-1;6183:21:58;6207:68;6235:39;:16;6256:17;6235:20;:39::i;:::-;6207:19;;:27;:68::i;:::-;6183:92;-1:-1:-1;6285:19:58;6307:35;:16;6183:92;6307:20;:35::i;:::-;6285:57;-1:-1:-1;6352:14:58;6369:30;:9;6285:57;6369:17;:30::i;:::-;6352:47;-1:-1:-1;6458:16:58;6477:38;:22;6352:47;6477:30;:38::i;:::-;6458:57;-1:-1:-1;6525:20:58;6548;:6;6458:57;6548:10;:20::i;:::-;6587:8;;-1:-1:-1;6525:43:58;;-1:-1:-1;;;;;;4207:2410:58;;;;;;;;;:::o;2343:184:11:-;2417:19;2477:4;2466:54;;;;;;;;;;;;;;;-1:-1:-1;2466:54:11;;;;2343:184;-1:-1:-1;;2343:184:11:o;2432:1444:58:-;2584:27;3685:8;:15;3671:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3671:30:58;;3658:43;;3716:9;3711:131;3735:8;:15;3731:1;:19;3711:131;;;3787:44;3822:8;3787:26;3807:5;3787:8;3796:1;3787:11;;;;;;;:44;3771:10;3782:1;3771:13;;;;;;;;;;;;;;;;;:60;3752:3;;3711:131;;1163:1175;1319:26;2152:8;:15;2138:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2138:30:58;;2126:42;;2183:9;2178:127;2202:8;:15;2198:1;:19;2178:127;;;2253:41;2285:8;2253:25;2271:6;2253:8;2262:1;2253:11;;;;;;;;;;;;;;:17;;:25;;;;:::i;:41::-;2238:9;2248:1;2238:12;;;;;;;;;;;;;;;;;:56;2219:3;;2178:127;;167:273:54;314:7;340:93;356:10;-1:-1:-1;;;411:8:54;421:11;340:15;:93::i;446:287::-;604:7;630:96;646:10;658:44;704:8;714:11;739:809;962:34;;;;;;;;;;-1:-1:-1;;;;;962:34:54;;;;;;;;;;;;;;;;;;;;;;952:45;;;;;;;;;-1:-1:-1;;;1203:34:54;;;;;;;;;;;-1:-1:-1;;952:45:54;1203:17;;;;-1:-1:-1;;1203:34:54;;;;;;;;;;;:17;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1203:34:54;1199:107;;;1260:35;;;-1:-1:-1;;;1260:35:54;;;;;;;;;;-1:-1:-1;;;;;1260:18:54;;;;;:35;;;;;;;;;;;;;;:18;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1260:35:54;;-1:-1:-1;1253:42:54;;-1:-1:-1;1253:42:54;1199:107;1348:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1338:48;;;;;;;;;-1:-1:-1;;;1400:30:54;;;;;;;;;;;-1:-1:-1;;;;;1400:17:54;;;-1:-1:-1;;1400:30:54;;;;;1348:37;;1400:30;;;;;:17;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1400:30:54;1396:99;;;1453:31;;;-1:-1:-1;;;1453:31:54;;;;;;;;;;-1:-1:-1;;;;;1453:18:54;;;;;:31;;;;;;;;;;;;;;:18;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1453:31:54;;-1:-1:-1;1446:38:54;;-1:-1:-1;;1446:38:54;1396:99;1512:29;;;-1:-1:-1;;;1512:29:54;;;;;;;;;;-1:-1:-1;;;;;1512:18:54;;;;;:29;;;;;;;;;;;;;;:18;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1512:29:54;;739:809;-1:-1:-1;;;;;;;739:809:54:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;14:138:60:-;84:20;;113:33;84:20;113:33;:::i;157:162::-;224:20;;280:13;;273:21;263:32;;253:2;;309:1;306;299:12;324:542;;421:3;414:4;406:6;402:17;398:27;388:2;;443:5;436;429:20;388:2;483:6;470:20;509:18;505:2;502:26;499:2;;;531:9;499:2;566:54;614:4;-1:-1:-1;;608:2:60;589:13;;585:27;581:38;566:54;:::i;:::-;645:2;636:7;629:19;691:3;684:4;679:2;671:6;667:15;663:26;660:35;657:2;;;712:5;705;698:20;657:2;781;774:4;766:6;762:17;755:4;746:7;742:18;729:55;804:16;;;822:4;800:27;793:42;;;;808:7;378:488;-1:-1:-1;;378:488:60:o;871:152::-;948:20;;997:1;987:12;;977:2;;1013:1;1010;1003:12;1028:259;;1140:2;1128:9;1119:7;1115:23;1111:32;1108:2;;;1161:6;1153;1146:22;1108:2;1205:9;1192:23;1224:33;1251:5;1224:33;:::i;1292:263::-;;1415:2;1403:9;1394:7;1390:23;1386:32;1383:2;;;1436:6;1428;1421:22;1383:2;1473:9;1467:16;1492:33;1519:5;1492:33;:::i;1560:402::-;;;1689:2;1677:9;1668:7;1664:23;1660:32;1657:2;;;1710:6;1702;1695:22;1657:2;1754:9;1741:23;1773:33;1800:5;1773:33;:::i;:::-;1825:5;-1:-1:-1;1882:2:60;1867:18;;1854:32;1895:35;1854:32;1895:35;:::i;:::-;1949:7;1939:17;;;1647:315;;;;;:::o;1967:470::-;;;;2113:2;2101:9;2092:7;2088:23;2084:32;2081:2;;;2134:6;2126;2119:22;2081:2;2178:9;2165:23;2197:33;2224:5;2197:33;:::i;:::-;2249:5;-1:-1:-1;2306:2:60;2291:18;;2278:32;2319:35;2278:32;2319:35;:::i;:::-;2071:366;;2373:7;;-1:-1:-1;;;2427:2:60;2412:18;;;;2399:32;;2071:366::o;2442:853::-;;;;;;;;2654:3;2642:9;2633:7;2629:23;2625:33;2622:2;;;2676:6;2668;2661:22;2622:2;2720:9;2707:23;2739:33;2766:5;2739:33;:::i;:::-;2791:5;-1:-1:-1;2848:2:60;2833:18;;2820:32;2861:35;2820:32;2861:35;:::i;:::-;2915:7;-1:-1:-1;2969:2:60;2954:18;;2941:32;;-1:-1:-1;3020:2:60;3005:18;;2992:32;;-1:-1:-1;3076:3:60;3061:19;;3048:33;3125:4;3112:18;;3100:31;;3090:2;;3150:6;3142;3135:22;3090:2;2612:683;;;;-1:-1:-1;2612:683:60;;;;3178:7;3232:3;3217:19;;3204:33;;-1:-1:-1;3284:3:60;3269:19;;;3256:33;;2612:683;-1:-1:-1;;2612:683:60:o;3300:327::-;;;3429:2;3417:9;3408:7;3404:23;3400:32;3397:2;;;3450:6;3442;3435:22;3397:2;3494:9;3481:23;3513:33;3540:5;3513:33;:::i;:::-;3565:5;3617:2;3602:18;;;;3589:32;;-1:-1:-1;;;3387:240:60:o;3632:192::-;;3741:2;3729:9;3720:7;3716:23;3712:32;3709:2;;;3762:6;3754;3747:22;3709:2;3790:28;3808:9;3790:28;:::i;3829:1670::-;;;;;;;;4077:3;4065:9;4056:7;4052:23;4048:33;4045:2;;;4099:6;4091;4084:22;4045:2;4140:9;4127:23;4117:33;;4200:2;4189:9;4185:18;4172:32;4213:33;4240:5;4213:33;:::i;:::-;4265:5;-1:-1:-1;4322:2:60;4307:18;;4294:32;4335:35;4294:32;4335:35;:::i;:::-;4389:7;-1:-1:-1;4447:2:60;4432:18;;4419:32;4470:18;4500:14;;;4497:2;;;4532:6;4524;4517:22;4497:2;4575:6;4564:9;4560:22;4550:32;;4620:7;4613:4;4609:2;4605:13;4601:27;4591:2;;4647:6;4639;4632:22;4591:2;4688;4675:16;4710:2;4706;4703:10;4700:2;;;4716:9;4700:2;4754;4750;4746:11;4777:27;4800:2;4796;4792:11;4777:27;:::i;:::-;4826:3;4850:2;4845:3;4838:15;4878:2;4873:3;4869:12;4862:19;;4909:2;4905;4901:11;4949:7;4944:2;4939;4935;4931:11;4927:20;4924:33;4921:2;;;4975:6;4967;4960:22;4921:2;5002:6;4993:15;;5017:163;5031:2;5028:1;5025:9;5017:163;;;5088:17;;5076:30;;5049:1;5042:9;;;;;5135:2;5126:12;;;;5158;5017:163;;;-1:-1:-1;5199:5:60;-1:-1:-1;;;;5251:3:60;5236:19;;5223:33;;-1:-1:-1;5303:3:60;5288:19;;5275:33;;-1:-1:-1;5361:3:60;5346:19;;5333:33;;-1:-1:-1;5378:16:60;;;5375:2;;;5412:6;5404;5397:22;5375:2;;5440:53;5485:7;5474:8;5463:9;5459:24;5440:53;:::i;:::-;5430:63;;;4035:1464;;;;;;;;;;:::o;5504:306::-;;5615:2;5603:9;5594:7;5590:23;5586:32;5583:2;;;5636:6;5628;5621:22;5583:2;5667:23;;-1:-1:-1;;;;;;5719:32:60;;5709:43;;5699:2;;5771:6;5763;5756:22;6104:253;;;6242:2;6230:9;6221:7;6217:23;6213:32;6210:2;;;6263:6;6255;6248:22;6210:2;-1:-1:-1;;6291:16:60;;6347:2;6332:18;;;6326:25;6291:16;;6326:25;;-1:-1:-1;6200:157:60:o;6362:847::-;;6502:2;6490:9;6481:7;6477:23;6473:32;6470:2;;;6523:6;6515;6508:22;6470:2;6561;6555:9;6603:2;6595:6;6591:15;6672:6;6660:10;6657:22;6636:18;6624:10;6621:34;6618:62;6615:2;;;6683:9;6615:2;6710;6703:22;6749:28;6767:9;6749:28;:::i;:::-;6734:44;;6828:2;6813:18;;6800:32;-1:-1:-1;;;;;6861:44:60;;6851:55;;6841:2;;6925:6;6917;6910:22;6841:2;6962;6950:15;;6943:30;7025:2;7010:18;;6997:32;-1:-1:-1;;;;;7060:48:60;;7048:61;;7038:2;;7128:6;7120;7113:22;7038:2;7165;7153:15;;7146:32;7157:6;6460:749;-1:-1:-1;;;6460:749:60:o;7214:1351::-;;;;7390:2;7378:9;7369:7;7365:23;7361:32;7358:2;;;7411:6;7403;7396:22;7358:2;7456:9;7443:23;7485:18;7526:2;7518:6;7515:14;7512:2;;;7547:6;7539;7532:22;7512:2;7590:6;7579:9;7575:22;7565:32;;7616:6;7656:2;7651;7642:7;7638:16;7634:25;7631:2;;;7677:6;7669;7662:22;7631:2;7708:18;7723:2;7708:18;:::i;:::-;7695:31;;7749;7777:2;7749:31;:::i;:::-;7742:5;7735:46;7813:33;7842:2;7838;7834:11;7813:33;:::i;:::-;7808:2;7801:5;7797:14;7790:57;7879:33;7908:2;7904;7900:11;7879:33;:::i;:::-;7874:2;7867:5;7863:14;7856:57;7966:2;7962;7958:11;7945:25;7940:2;7933:5;7929:14;7922:49;8025:3;8021:2;8017:12;8004:26;7998:3;7991:5;7987:15;7980:51;8085:3;8081:2;8077:12;8064:26;8058:3;8051:5;8047:15;8040:51;8124:34;8153:3;8149:2;8145:12;8124:34;:::i;:::-;8118:3;8111:5;8107:15;8100:59;8192:34;8221:3;8217:2;8213:12;8192:34;:::i;:::-;8186:3;8179:5;8175:15;8168:59;8246:3;8295:2;8291;8287:11;8274:25;8324:2;8314:8;8311:16;8308:2;;;8345:6;8337;8330:22;8308:2;8386:46;8424:7;8413:8;8409:2;8405:17;8386:46;:::i;:::-;8370:14;;;8363:70;;;;-1:-1:-1;8374:5:60;8504:2;8489:18;;8476:32;;-1:-1:-1;8555:2:60;8540:18;;;8527:32;;7348:1217;-1:-1:-1;;;;;7348:1217:60:o;8570:190::-;;8682:2;8670:9;8661:7;8657:23;8653:32;8650:2;;;8703:6;8695;8688:22;8650:2;-1:-1:-1;8731:23:60;;8640:120;-1:-1:-1;8640:120:60:o;8765:194::-;;8888:2;8876:9;8867:7;8863:23;8859:32;8856:2;;;8909:6;8901;8894:22;8856:2;-1:-1:-1;8937:16:60;;8846:113;-1:-1:-1;8846:113:60:o;8964:447::-;;;;;9138:3;9126:9;9117:7;9113:23;9109:33;9106:2;;;9160:6;9152;9145:22;9106:2;9194:9;9188:16;9178:26;;9244:2;9233:9;9229:18;9223:25;9213:35;;9288:2;9277:9;9273:18;9267:25;9257:35;;9335:2;9324:9;9320:18;9314:25;9348:33;9375:5;9348:33;:::i;:::-;9096:315;;;;-1:-1:-1;9096:315:60;;-1:-1:-1;;9096:315:60:o;9416:443::-;;9513:5;9507:12;9540:6;9535:3;9528:19;9566:4;9595:2;9590:3;9586:12;9579:19;;9632:2;9625:5;9621:14;9653:3;9665:169;9679:6;9676:1;9673:13;9665:169;;;9740:13;;9728:26;;9774:12;;;;9809:15;;;;9701:1;9694:9;9665:169;;;-1:-1:-1;9850:3:60;;9483:376;-1:-1:-1;;;;;9483:376:60:o;9864:524::-;9934:47;9977:3;9969:5;9963:12;9934:47;:::i;:::-;10027:4;10020:5;10016:16;10010:23;10042:58;10094:4;10089:3;10085:14;10071:12;10042:58;:::i;:::-;;10149:4;10142:5;10138:16;10132:23;10125:4;10120:3;10116:14;10109:47;10205:4;10198:5;10194:16;10188:23;10181:4;10176:3;10172:14;10165:47;10261:4;10254:5;10250:16;10244:23;10237:4;10232:3;10228:14;10221:47;10317:4;10310:5;10306:16;10300:23;10293:4;10288:3;10284:14;10277:47;10375:4;10368:5;10364:16;10358:23;10349:6;10344:3;10340:16;10333:49;9924:464;;:::o;10393:318::-;10474:5;10468:12;10463:3;10456:25;10530:4;10523:5;10519:16;10513:23;10506:4;10501:3;10497:14;10490:47;10586:4;10579:5;10575:16;10569:23;10562:4;10557:3;10553:14;10546:47;10642:4;10635:5;10631:16;10625:23;10618:4;10613:3;10609:14;10602:47;10698:4;10691:5;10687:16;10681:23;10674:4;10669:3;10665:14;10658:47;10446:265;;:::o;10716:151::-;10792:12;;10780:25;;10854:4;10843:16;;;10837:23;10821:14;;10814:47;10770:97::o;10872:273::-;;11055:6;11047;11042:3;11029:33;11081:16;;11106:15;;;11081:16;11019:126;-1:-1:-1;11019:126:60:o;11150:203::-;-1:-1:-1;;;;;11314:32:60;;;;11296:51;;11284:2;11269:18;;11251:102::o;11358:267::-;;11537:2;11526:9;11519:21;11557:62;11615:2;11604:9;11600:18;11592:6;11557:62;:::i;11630:477::-;;11887:2;11876:9;11869:21;11913:62;11971:2;11960:9;11956:18;11948:6;11913:62;:::i;:::-;12023:9;12015:6;12011:22;12006:2;11995:9;11991:18;11984:50;12051;12094:6;12086;12051:50;:::i;12112:591::-;;12449:3;12479:2;12468:9;12461:21;12499:62;12557:2;12546:9;12542:18;12534:6;12499:62;:::i;:::-;12491:70;;;12570:55;12621:2;12610:9;12606:18;12598:6;12570:55;:::i;:::-;12634:63;12692:3;12681:9;12677:19;12669:6;12634:63;:::i;12708:661::-;;13071:3;13101:2;13090:9;13083:21;13121:62;13179:2;13168:9;13164:18;13156:6;13121:62;:::i;:::-;13113:70;;;13192:55;13243:2;13232:9;13228:18;13220:6;13192:55;:::i;:::-;13256:63;13314:3;13303:9;13299:19;13291:6;13256:63;:::i;:::-;13356:6;13350:3;13339:9;13335:19;13328:35;13051:318;;;;;;;:::o;13374:479::-;;13655:3;13644:9;13637:22;13676:63;13734:3;13723:9;13719:19;13711:6;13676:63;:::i;:::-;13668:71;;13748:56;13800:2;13789:9;13785:18;13777:6;13748:56;:::i;:::-;13840:6;13835:2;13824:9;13820:18;13813:34;13627:226;;;;;;:::o;13858:883::-;;14319:3;14349:2;14338:9;14331:21;14369:62;14427:2;14416:9;14412:18;14404:6;14369:62;:::i;:::-;14361:70;;;14467:6;14462:2;14451:9;14447:18;14440:34;14524:6;14517:14;14510:22;14505:2;14494:9;14490:18;14483:50;14542:55;14593:2;14582:9;14578:18;14570:6;14542:55;:::i;:::-;14606:63;14664:3;14653:9;14649:19;14641:6;14606:63;:::i;:::-;14678:57;14730:3;14719:9;14715:19;14707:6;14678:57;:::i;14746:187::-;14911:14;;14904:22;14886:41;;14874:2;14859:18;;14841:92::o;14938:329::-;15159:14;;15152:22;15134:41;;15206:2;15191:18;;15184:34;;;;15249:2;15234:18;;15227:34;15122:2;15107:18;;15089:178::o;15272:177::-;15418:25;;;15406:2;15391:18;;15373:76::o;15454:290::-;15644:25;;;-1:-1:-1;;;;;15705:32:60;15700:2;15685:18;;15678:60;15632:2;15617:18;;15599:145::o;16661:541::-;16938:25;;;16994:2;16979:18;;16972:34;;;;17037:2;17022:18;;17015:34;;;;17080:2;17065:18;;17058:34;17136:14;17129:22;17123:3;17108:19;;17101:51;17183:3;17168:19;;17161:35;16925:3;16910:19;;16892:310::o;17207:603::-;;17348:2;17377;17366:9;17359:21;17409:6;17403:13;17452:6;17447:2;17436:9;17432:18;17425:34;17477:4;17490:140;17504:6;17501:1;17498:13;17490:140;;;17599:14;;;17595:23;;17589:30;17565:17;;;17584:2;17561:26;17554:66;17519:10;;17490:140;;;17648:6;17645:1;17642:13;17639:2;;;17718:4;17713:2;17704:6;17693:9;17689:22;17685:31;17678:45;17639:2;-1:-1:-1;17794:2:60;17773:15;-1:-1:-1;;17769:29:60;17754:45;;;;17801:2;17750:54;;17328:482;-1:-1:-1;;;17328:482:60:o;17815:462::-;18049:13;;18042:21;18035:29;18017:48;;18125:4;18113:17;;;18107:24;-1:-1:-1;;;;;18103:63:60;18081:20;;;18074:93;18227:4;18215:17;;;18209:24;-1:-1:-1;;;;;18205:65:60;18183:20;;;18176:95;;;;18005:2;17990:18;;17972:305::o;18282:452::-;18498:13;;18567:4;18552:20;;18545:28;18538:36;18520:55;;-1:-1:-1;;;;;18621:1:60;18617:17;;;18613:56;18606:4;18591:20;;18584:86;18712:3;18708:19;18701:4;18686:20;;18679:49;18469:2;18454:18;;18436:298::o;18739:836::-;19003:3;18988:19;;19016:46;18992:9;19044:6;19016:46;:::i;:::-;19071:64;19130:3;19119:9;19115:19;19106:6;19100:13;19071:64;:::i;:::-;19182:4;19174:6;19170:17;19164:24;19197:63;19255:3;19244:9;19240:19;19226:12;19197:63;:::i;:::-;;19315:4;19307:6;19303:17;19297:24;19291:3;19280:9;19276:19;19269:53;19377:4;19369:6;19365:17;19359:24;19353:3;19342:9;19338:19;19331:53;19439:4;19431:6;19427:17;19421:24;19415:3;19404:9;19400:19;19393:53;19501:3;19493:6;19489:16;19483:23;19477:3;19466:9;19462:19;19455:52;19562:4;19554:6;19550:17;19544:24;19538:3;19527:9;19523:19;19516:53;18970:605;;;;;:::o;19762:338::-;;19969:6;19958:9;19951:25;20012:2;20007;19996:9;19992:18;19985:30;20032:62;20090:2;20079:9;20075:18;20067:6;20032:62;:::i;20105:248::-;20279:25;;;20335:2;20320:18;;20313:34;20267:2;20252:18;;20234:119::o;20358:184::-;20530:4;20518:17;;;;20500:36;;20488:2;20473:18;;20455:87::o;20547:242::-;20617:2;20611:9;20647:17;;;20694:18;20679:34;;20715:22;;;20676:62;20673:2;;;20741:9;20673:2;20768;20761:22;20591:198;;-1:-1:-1;20591:198:60:o;20794:133::-;-1:-1:-1;;;;;20871:31:60;;20861:42;;20851:2;;20917:1;20914;20907:12", "language": "Solidity", "natspec": {"kind": "dev", "methods": {"DOMAIN_SEPARATOR()": {"details": "See {IERC20Permit-DOMAIN_SEPARATOR}."}, "allowance(address,address)": {"details": "Override to grant the Vault infinite allowance, causing for Pool Tokens to not require approval. This is sound as the Vault already provides authorization mechanisms when initiation token transfers, which this contract inherits."}, "approve(address,uint256)": {"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."}, "balanceOf(address)": {"details": "See {IERC20-balanceOf}."}, "changePauseManager(address)": {"notice": "Changes the account that is allowed to pause a pool."}, "decimals()": {"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."}, "decreaseAllowance(address,uint256)": {"details": "Override to allow decreasing allowance by more than the current amount (setting it to zero)"}, "getActionId(bytes4)": {"details": "Returns the action identifier associated with the external function described by `selector`."}, "getInvariant()": {"details": "Returns the current value of the invariant. Note: This function is not used internally; it's public, not external, so we can override it cleanly."}, "getMiscData()": {"details": "Only `swapFeePercentage` is non-trivial; everything else is 0/false because the oracle is not used. These variables are returned to keep the call signature compatible."}, "getPausedState()": {"details": "Returns the current contract pause status, as well as the end times of the Pause Window and Buffer Period."}, "getPrice()": {"notice": "Returns the current spot price of token0 quoted in units of token1. When rateProvider{0,1} is provided, the returned price corresponds to tokens *before* rate scaling."}, "getRate()": {"details": "This function returns the appreciation of one BPT relative to the underlying tokens. This starts at 1 when the pool is created and grows over time"}, "getTokenRates()": {"notice": "Convenience function to fetch the two rates used for scaling the two tokens, as of rateProvider{0,1}. Note that these rates do *not* contain scaling to account for differences in the number of decimals. The rates themselves are always 18-decimals."}, "increaseAllowance(address,uint256)": {"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."}, "name()": {"details": "Returns the name of the token."}, "nonces(address)": {"details": "See {IERC20Permit-nonces}."}, "onExitPool(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Called by the Vault when a user calls `IVault.exitPool` to remove liquidity from this Pool. Returns how many tokens the Vault should deduct from the Pool's balances, as well as the amount of protocol fees the Pool owes to the Vault. The Vault will then take tokens from the Pool's balances and send them to `recipient`, as well as collect the reported amount in protocol fees, which the Pool should calculate based on `protocolSwapFeePercentage`. Protocol fees are charged on exit events to guarantee that users exiting the Pool have paid their share. `sender` is the account performing the exit (typically the pool shareholder), and `recipient` is the account to which the Vault will send the proceeds. `balances` contains the total token balances for each token the Pool registered in the Vault, in the same order that `IVault.getPoolTokens` would return. `lastChangeBlock` is the last block in which *any* of the Pool's registered tokens last changed its total balance. `userData` contains any pool-specific instructions needed to perform the calculations, such as the type of exit (e.g., proportional given an amount of pool shares, single-asset, multi-asset, etc.) Contracts implementing this function should check that the caller is indeed the Vault before performing any state-changing operations, such as burning pool shares."}, "onJoinPool(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Called by the Vault when a user calls `IVault.joinPool` to add liquidity to this Pool. Returns how many of each registered token the user should provide, as well as the amount of protocol fees the Pool owes to the Vault. The Vault will then take tokens from `sender` and add them to the Pool's balances, as well as collect the reported amount in protocol fees, which the pool should calculate based on `protocolSwapFeePercentage`. Protocol fees are reported and charged on join events so that the Pool is free of debt whenever new users join. `sender` is the account performing the join (from which tokens will be withdrawn), and `recipient` is the account designated to receive any benefits (typically pool shares). `balances` contains the total balances for each token the Pool registered in the Vault, in the same order that `IVault.getPoolTokens` would return. `lastChangeBlock` is the last block in which *any* of the Pool's registered tokens last changed its total balance. `userData` contains any pool-specific instructions needed to perform the calculations, such as the type of join (e.g., proportional given an amount of pool shares, single-asset, multi-asset, etc.) Contracts implementing this function should check that the caller is indeed the Vault before performing any state-changing operations, such as minting pool shares."}, "pause()": {"notice": "Pauses the pool. Can only be called by the pause manager."}, "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {"details": "See {IERC20Permit-permit}."}, "queryExit(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Returns the amount of BPT that would be burned from `sender` if the `onExitPool` hook were called by the Vault with the same arguments, along with the number of tokens `recipient` would receive. This function is not meant to be called directly, but rather from a helper contract that fetches current Vault data, such as the protocol swap fee percentage and Pool balances. Like `IVault.queryBatchSwap`, this function is not view due to internal implementation details: the caller must explicitly use eth_call instead of eth_sendTransaction."}, "queryJoin(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Returns the amount of BPT that would be granted to `recipient` if the `onJoinPool` hook were called by the Vault with the same arguments, along with the number of tokens `sender` would have to supply. This function is not meant to be called directly, but rather from a helper contract that fetches current Vault data, such as the protocol swap fee percentage and Pool balances. Like `IVault.queryBatchSwap`, this function is not view due to internal implementation details: the caller must explicitly use eth_call instead of eth_sendTransaction."}, "symbol()": {"details": "Returns the symbol of the token, usually a shorter version of the name."}, "totalSupply()": {"details": "See {IERC20-totalSupply}."}, "transfer(address,uint256)": {"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."}, "transferFrom(address,address,uint256)": {"details": "Override to allow for 'infinite allowance' and let the token owner use `transferFrom` with no self-allowance"}, "unpause()": {"notice": "Unpauses the pool. Can only be called by the pause manager."}}, "stateVariables": {"_paramsAlpha": {"details": "Parameters of the ECLP pool"}, "rateProvider0": {"details": "for rate scaling"}}, "version": 1}, "offset": [969, 30732], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x295 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x74F3B009 GT PUSH2 0x167 JUMPI DUP1 PUSH4 0x98D5FDCA GT PUSH2 0xCE JUMPI DUP1 PUSH4 0xABD13AFE GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xABD13AFE EQ PUSH2 0x54F JUMPI DUP1 PUSH4 0xC0FF1A15 EQ PUSH2 0x557 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x55F JUMPI DUP1 PUSH4 0xD5C096C4 EQ PUSH2 0x572 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x585 JUMPI DUP1 PUSH4 0xF89F27ED EQ PUSH2 0x598 JUMPI PUSH2 0x295 JUMP JUMPDEST DUP1 PUSH4 0x98D5FDCA EQ PUSH2 0x4FE JUMPI DUP1 PUSH4 0x9B02CDDE EQ PUSH2 0x506 JUMPI DUP1 PUSH4 0x9D2C110C EQ PUSH2 0x50E JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x521 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x534 JUMPI DUP1 PUSH4 0xAAABADC5 EQ PUSH2 0x547 JUMPI PUSH2 0x295 JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0x120 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x4B8 JUMPI DUP1 PUSH4 0x851C1BB3 EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0x87EC6817 EQ PUSH2 0x4D3 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0x8D928AF8 EQ PUSH2 0x4EE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4F6 JUMPI PUSH2 0x295 JUMP JUMPDEST DUP1 PUSH4 0x74F3B009 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0x76E54A46 EQ PUSH2 0x461 JUMPI DUP1 PUSH4 0x7BE219A2 EQ PUSH2 0x474 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0x8002DF18 EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0x828A7C34 EQ PUSH2 0x4B0 JUMPI PUSH2 0x295 JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x20B JUMPI DUP1 PUSH4 0x6028BFD4 GT PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x6028BFD4 EQ PUSH2 0x3DE JUMPI DUP1 PUSH4 0x62CED092 EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0x6D785A87 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0x702EC091 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x42D JUMPI PUSH2 0x295 JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0x3AEAE0D3 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0x44BBDB55 EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0x4A6B0B15 EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0x55C67628 EQ PUSH2 0x3D6 JUMPI PUSH2 0x295 JUMP JUMPDEST DUP1 PUSH4 0x1C0DE051 GT PUSH2 0x25D JUMPI DUP1 PUSH4 0x1C0DE051 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0x38E9922E EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0x38FFF2D0 EQ PUSH2 0x36F JUMPI PUSH2 0x295 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0xE608B30 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x300 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A2 PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x4934 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CB PUSH2 0x2C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x432B JUMP JUMPDEST PUSH2 0x643 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x48C7 JUMP JUMPDEST PUSH2 0x2EB PUSH2 0x2E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x4206 JUMP JUMPDEST PUSH2 0x65A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EB PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0x4356 JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST PUSH2 0x308 PUSH2 0x71F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x48EA JUMP JUMPDEST PUSH2 0x31D PUSH2 0x725 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x48D2 JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x33A CALLDATASIZE PUSH1 0x4 PUSH2 0x4276 JUMP JUMPDEST PUSH2 0x74E JUMP JUMPDEST PUSH2 0x347 PUSH2 0x7C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x4A7C JUMP JUMPDEST PUSH2 0x308 PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x2EB PUSH2 0x36A CALLDATASIZE PUSH1 0x4 PUSH2 0x463D JUMP JUMPDEST PUSH2 0x7DC JUMP JUMPDEST PUSH2 0x308 PUSH2 0x7F5 JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x385 CALLDATASIZE PUSH1 0x4 PUSH2 0x432B JUMP JUMPDEST PUSH2 0x819 JUMP JUMPDEST PUSH2 0x392 PUSH2 0x854 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x4987 JUMP JUMPDEST PUSH2 0x2EB PUSH2 0x89F JUMP JUMPDEST PUSH2 0x3AF PUSH2 0x994 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x478B JUMP JUMPDEST PUSH2 0x3C4 PUSH2 0x9A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x490A JUMP JUMPDEST PUSH2 0x308 PUSH2 0x9FE JUMP JUMPDEST PUSH2 0x3F1 PUSH2 0x3EC CALLDATASIZE PUSH1 0x4 PUSH2 0x4370 JUMP JUMPDEST PUSH2 0xA0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP3 SWAP2 SWAP1 PUSH2 0x4A55 JUMP JUMPDEST PUSH2 0x3AF PUSH2 0xA3C JUMP JUMPDEST PUSH2 0x308 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0x3AF PUSH2 0xA85 JUMP JUMPDEST PUSH2 0x41F PUSH2 0xA94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP3 SWAP2 SWAP1 PUSH2 0x4A6E JUMP JUMPDEST PUSH2 0x308 PUSH2 0x43B CALLDATASIZE PUSH1 0x4 PUSH2 0x4206 JUMP JUMPDEST PUSH2 0xC39 JUMP JUMPDEST PUSH2 0x453 PUSH2 0x44E CALLDATASIZE PUSH1 0x4 PUSH2 0x4370 JUMP JUMPDEST PUSH2 0xC58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP3 SWAP2 SWAP1 PUSH2 0x47B2 JUMP JUMPDEST PUSH2 0x2EB PUSH2 0x46F CALLDATASIZE PUSH1 0x4 PUSH2 0x44C7 JUMP JUMPDEST PUSH2 0xCE8 JUMP JUMPDEST PUSH2 0x47C PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP3 SWAP2 SWAP1 PUSH2 0x49E7 JUMP JUMPDEST PUSH2 0x308 PUSH2 0x498 CALLDATASIZE PUSH1 0x4 PUSH2 0x4206 JUMP JUMPDEST PUSH2 0xE2F JUMP JUMPDEST PUSH2 0x2EB PUSH2 0x4AB CALLDATASIZE PUSH1 0x4 PUSH2 0x4206 JUMP JUMPDEST PUSH2 0xE4A JUMP JUMPDEST PUSH2 0x3AF PUSH2 0xF30 JUMP JUMPDEST PUSH2 0x2EB PUSH2 0xF54 JUMP JUMPDEST PUSH2 0x308 PUSH2 0x4CE CALLDATASIZE PUSH1 0x4 PUSH2 0x447C JUMP JUMPDEST PUSH2 0x100C JUMP JUMPDEST PUSH2 0x3F1 PUSH2 0x4E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4370 JUMP JUMPDEST PUSH2 0x1065 JUMP JUMPDEST PUSH2 0x3AF PUSH2 0x108A JUMP JUMPDEST PUSH2 0x3AF PUSH2 0x10AE JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0x308 PUSH2 0x1133 JUMP JUMPDEST PUSH2 0x308 PUSH2 0x11FE JUMP JUMPDEST PUSH2 0x308 PUSH2 0x51C CALLDATASIZE PUSH1 0x4 PUSH2 0x4546 JUMP JUMPDEST PUSH2 0x1204 JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x52F CALLDATASIZE PUSH1 0x4 PUSH2 0x432B JUMP JUMPDEST PUSH2 0x15A3 JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x542 CALLDATASIZE PUSH1 0x4 PUSH2 0x432B JUMP JUMPDEST PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0x3AF PUSH2 0x15EE JUMP JUMPDEST PUSH2 0x3AF PUSH2 0x15F8 JUMP JUMPDEST PUSH2 0x308 PUSH2 0x1607 JUMP JUMPDEST PUSH2 0x2EB PUSH2 0x56D CALLDATASIZE PUSH1 0x4 PUSH2 0x42B6 JUMP JUMPDEST PUSH2 0x16B7 JUMP JUMPDEST PUSH2 0x453 PUSH2 0x580 CALLDATASIZE PUSH1 0x4 PUSH2 0x4370 JUMP JUMPDEST PUSH2 0x1827 JUMP JUMPDEST PUSH2 0x308 PUSH2 0x593 CALLDATASIZE PUSH1 0x4 PUSH2 0x423E JUMP JUMPDEST PUSH2 0x190C JUMP JUMPDEST PUSH2 0x5A0 PUSH2 0x1949 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x479F JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x639 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x60E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x639 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x61C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x650 CALLER DUP5 DUP5 PUSH2 0x1ADD JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x1B9BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AB SWAP2 SWAP1 PUSH2 0x4934 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xB8FD9AFC34C38FCD13B9A3B7646482EB1FDDCEFB40AF2C70609972816EBA3208 SWAP1 PUSH2 0x700 SWAP1 DUP4 SWAP1 PUSH2 0x478B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x713 PUSH2 0x1B3F JUMP JUMPDEST PUSH2 0x71C DUP2 PUSH2 0x1B6D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x732 PUSH2 0x1BE9 JUMP JUMPDEST ISZERO SWAP3 POP PUSH2 0x73D PUSH2 0x1C06 JUMP JUMPDEST SWAP2 POP PUSH2 0x747 PUSH2 0x1C2A JUMP JUMPDEST SWAP1 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x75B DUP6 CALLER PUSH2 0x190C JUMP JUMPDEST SWAP1 POP PUSH2 0x77F CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND EQ DUP1 PUSH2 0x777 JUMPI POP DUP4 DUP3 LT ISZERO JUMPDEST PUSH2 0x19E PUSH2 0x1C4E JUMP JUMPDEST PUSH2 0x78A DUP6 DUP6 DUP6 PUSH2 0x1C5C JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x7A5 JUMPI POP PUSH1 0x0 NOT DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x7B7 JUMPI PUSH2 0x7B7 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x1ADD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D7 PUSH2 0x1D44 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7E4 PUSH2 0x1B3F JUMP JUMPDEST PUSH2 0x7EC PUSH2 0x1E02 JUMP JUMPDEST PUSH2 0x71C DUP2 PUSH2 0x1E17 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x650 SWAP2 DUP6 SWAP1 PUSH2 0x84F SWAP1 DUP7 PUSH2 0x1E80 JUMP JUMPDEST PUSH2 0x1ADD JUMP JUMPDEST PUSH2 0x85C PUSH2 0x40C5 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0xA SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP3 MSTORE PUSH2 0x100 DUP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x3737BA103830BAB9B29036B0B730B3B2B9 PUSH1 0x79 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x95E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x923 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x90B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x950 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x969 PUSH1 0x0 PUSH2 0x713 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x215385C8BFC731925EC8068D7BAA50F6B6F34417CC7804F7273DC2C0B3DB2790 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x8 SLOAD SWAP1 POP PUSH2 0x9BC DUP2 PUSH2 0x1E92 JUMP JUMPDEST SWAP7 POP PUSH2 0x9C7 DUP2 PUSH2 0x1E9E JUMP JUMPDEST SWAP6 POP PUSH2 0x9D2 DUP2 PUSH2 0x1EAB JUMP JUMPDEST SWAP5 POP PUSH2 0x9DD DUP2 PUSH2 0x1EB8 JUMP JUMPDEST SWAP4 POP PUSH2 0x9E8 DUP2 PUSH2 0x1EC5 JUMP JUMPDEST SWAP3 POP PUSH2 0x9F3 DUP2 PUSH2 0x1ED2 JUMP JUMPDEST SWAP2 POP POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D7 PUSH1 0x8 SLOAD PUSH2 0x1ED2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0xA1B DUP7 MLOAD PUSH1 0x2 PUSH2 0x1EDF JUMP JUMPDEST PUSH2 0xA30 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x1EEC PUSH2 0x205A PUSH2 0x20D8 JUMP JUMPDEST SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D7 PUSH2 0xA6D PUSH2 0x71F JUMP JUMPDEST PUSH2 0xA7F PUSH2 0xA78 PUSH2 0x1607 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x21EB JUMP JUMPDEST SWAP1 PUSH2 0x220F JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAD3 JUMPI PUSH8 0xDE0B6B3A7640000 PUSH2 0xB64 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x679AEFCE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB40 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB64 SWAP2 SWAP1 PUSH2 0x4655 JUMP JUMPDEST SWAP2 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBA2 JUMPI PUSH8 0xDE0B6B3A7640000 PUSH2 0xC33 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x679AEFCE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC0F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC33 SWAP2 SWAP1 PUSH2 0x4655 JUMP JUMPDEST SWAP1 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP9 PUSH2 0xC82 PUSH2 0xC67 PUSH2 0x10AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH1 0xCD PUSH2 0x1C4E JUMP JUMPDEST PUSH2 0xC97 PUSH2 0xC8D PUSH2 0x7F5 JUMP JUMPDEST DUP3 EQ PUSH2 0x1F4 PUSH2 0x1C4E JUMP JUMPDEST PUSH2 0xCA0 DUP8 PUSH2 0x2269 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xCB4 DUP14 DUP14 DUP14 DUP14 DUP14 DUP14 DUP14 PUSH2 0x1EEC JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xCC4 DUP13 DUP5 PUSH2 0x22CB JUMP JUMPDEST PUSH2 0xCCD DUP3 PUSH2 0x205A JUMP JUMPDEST PUSH2 0xCD6 DUP2 PUSH2 0x205A JUMP JUMPDEST SWAP1 SWAP13 SWAP1 SWAP12 POP SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x1B9BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AB SWAP2 SWAP1 PUSH2 0x4934 JUMP JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH16 0x1C1BDBDB081A5CC81D5B98D85C1C1959 PUSH1 0x82 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0xD85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AB SWAP2 SWAP1 PUSH2 0x4934 JUMP JUMPDEST POP DUP1 MLOAD PUSH1 0xA DUP1 SLOAD PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP1 DUP7 ADD MLOAD PUSH1 0xFF NOT SWAP1 SWAP4 AND SWAP5 ISZERO ISZERO SWAP5 SWAP1 SWAP5 OR PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL OR PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x80 SHL SWAP2 SWAP1 SWAP3 AND MUL OR DUP2 SSTORE SWAP1 MLOAD PUSH32 0x2ABF5970D7BC1A2B36EAAE52DD2CC353EDB0337C7284EF8A01973081B4E04424 SWAP2 PUSH2 0x700 SWAP2 PUSH2 0x49BC JUMP JUMPDEST PUSH2 0xE17 PUSH2 0x40E5 JUMP JUMPDEST PUSH2 0xE1F PUSH2 0x4114 JUMP JUMPDEST PUSH2 0xE27 PUSH2 0x22D5 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x3737BA103830BAB9B29036B0B730B3B2B9 PUSH1 0x79 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLER DUP3 EQ PUSH2 0xECF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x923 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x90B JUMP JUMPDEST POP PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 DUP5 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD PUSH32 0x1FFCCD1FA96F4FB3415DF8048A0FD107344E262D2D246C85105E2A3F8F3E8198 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x3737BA103830BAB9B29036B0B730B3B2B9 PUSH1 0x79 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x923 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x90B JUMP JUMPDEST POP PUSH2 0xFE1 PUSH1 0x1 PUSH2 0x713 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x681EACE576127D0553B224436A09801FB47D042942CBFF59D7D4FF04D8FA03D7 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x0 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP5 AND DUP3 DUP5 ADD MSTORE DUP3 MLOAD PUSH1 0x24 DUP2 DUP5 SUB ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x1075 DUP7 MLOAD PUSH1 0x2 PUSH2 0x1EDF JUMP JUMPDEST PUSH2 0xA30 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x250B PUSH2 0x267A PUSH2 0x20D8 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x639 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x60E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x639 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x113E PUSH2 0x26DC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x114B PUSH2 0x22D5 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH20 0x0 PUSH4 0xD83CA862 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x47D7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x11B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11DC SWAP2 SWAP1 PUSH2 0x4655 JUMP JUMPDEST SWAP1 POP PUSH2 0x11EA DUP5 DUP3 DUP6 DUP6 PUSH2 0x2792 JUMP JUMPDEST SWAP5 POP PUSH2 0x11F5 DUP6 PUSH2 0x2832 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120E PUSH2 0x1E02 JUMP JUMPDEST DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0x121E PUSH2 0xC67 PUSH2 0x10AE JUMP JUMPDEST PUSH2 0x1229 PUSH2 0xC8D PUSH2 0x7F5 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x12A5 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST ISZERO PUSH2 0x12B2 JUMPI POP PUSH1 0x1 PUSH2 0x1343 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x132C JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST ISZERO PUSH2 0x1339 JUMPI POP PUSH1 0x0 PUSH2 0x1343 JUMP JUMPDEST PUSH2 0x1343 PUSH1 0x79 PUSH2 0x29D2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x134E DUP3 PUSH2 0x2A25 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x135C DUP4 ISZERO PUSH2 0x2A25 JUMP JUMPDEST SWAP1 POP PUSH2 0x1368 DUP8 DUP4 PUSH2 0x2B52 JUMP JUMPDEST SWAP7 POP PUSH2 0x1374 DUP7 DUP3 PUSH2 0x2B52 JUMP JUMPDEST SWAP6 POP PUSH1 0x0 PUSH2 0x1383 DUP9 DUP9 DUP7 PUSH2 0x2B5E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x1390 PUSH2 0x22D5 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x139C PUSH2 0x415D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0x0 PUSH4 0x78ACE857 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13DA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x47D7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1405 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1429 SWAP2 SWAP1 PUSH2 0x44A4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 SWAP1 SWAP2 MUL DUP3 ADD DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 POP PUSH1 0x0 SWAP2 POP PUSH2 0x1451 SWAP1 POP JUMP JUMPDEST DUP13 MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x145E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x150A JUMPI PUSH1 0x0 PUSH2 0x147C PUSH2 0x1471 PUSH2 0x9FE JUMP JUMPDEST PUSH1 0x60 DUP16 ADD MLOAD SWAP1 PUSH2 0x2BF8 JUMP JUMPDEST SWAP1 POP PUSH2 0x149E PUSH2 0x1498 DUP3 DUP16 PUSH1 0x60 ADD MLOAD PUSH2 0x2C4D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP9 PUSH2 0x2B52 JUMP JUMPDEST PUSH1 0x60 DUP15 ADD MSTORE PUSH1 0x0 PUSH2 0x14B3 DUP15 DUP8 DUP12 DUP9 DUP9 DUP9 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 POP PUSH32 0x4E1D56F7310A8C32B2267F756B19BA65019B4890068CE114A25009ABE54DE5BA DUP7 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x14E8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x14FA DUP2 DUP9 PUSH2 0x2D06 JUMP JUMPDEST SWAP11 POP POP POP POP POP POP POP POP POP POP PUSH2 0x159B JUMP JUMPDEST PUSH2 0x1518 DUP13 PUSH1 0x60 ADD MLOAD DUP7 PUSH2 0x2B52 JUMP JUMPDEST PUSH1 0x60 DUP14 ADD MSTORE PUSH1 0x0 PUSH2 0x152D DUP14 DUP7 DUP11 DUP8 DUP8 DUP8 PUSH2 0x2D12 JUMP JUMPDEST SWAP1 POP PUSH32 0x4E1D56F7310A8C32B2267F756B19BA65019B4890068CE114A25009ABE54DE5BA DUP6 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1562 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1574 DUP2 DUP9 PUSH2 0x2D5A JUMP JUMPDEST SWAP1 POP PUSH2 0x1590 PUSH2 0x1589 PUSH2 0x1584 PUSH2 0x9FE JUMP JUMPDEST PUSH2 0x2D66 JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x2D8C JUMP JUMPDEST SWAP10 POP POP POP POP POP POP POP POP POP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x15B0 CALLER DUP6 PUSH2 0x190C JUMP JUMPDEST SWAP1 POP DUP1 DUP4 LT PUSH2 0x15CA JUMPI PUSH2 0x15C5 CALLER DUP6 PUSH1 0x0 PUSH2 0x1ADD JUMP JUMPDEST PUSH2 0x15D7 JUMP JUMPDEST PUSH2 0x15D7 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x1ADD JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x650 CALLER DUP5 DUP5 PUSH2 0x1C5C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D7 PUSH2 0x2DF2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1612 PUSH2 0x26DC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x161F PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6C1E5431 PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 SWAP4 POP SWAP2 POP PUSH20 0x0 SWAP1 PUSH4 0xD83CA862 SWAP1 PUSH2 0x165F SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x47D7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1677 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x168B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16AF SWAP2 SWAP1 PUSH2 0x4655 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x16C5 DUP5 TIMESTAMP GT ISZERO PUSH1 0xD1 PUSH2 0x1C4E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD PUSH32 0x0 DUP2 DUP6 ADD MSTORE DUP1 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP5 DUP12 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD DUP11 SWAP1 MSTORE PUSH1 0xA0 DUP5 ADD DUP6 SWAP1 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP11 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 SWAP1 SWAP5 ADD SWAP1 MSTORE DUP3 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP1 PUSH2 0x1751 DUP3 PUSH2 0x2E6C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP PUSH2 0x17F1 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x17E9 JUMPI POP DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1F8 PUSH2 0x1C4E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP6 ADD SWAP1 SSTORE PUSH2 0x181A DUP12 DUP12 DUP12 PUSH2 0x1ADD JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP9 PUSH2 0x1836 PUSH2 0xC67 PUSH2 0x10AE JUMP JUMPDEST PUSH2 0x1841 PUSH2 0xC8D PUSH2 0x7F5 JUMP JUMPDEST PUSH2 0x1849 PUSH2 0x1E02 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1853 PUSH2 0x71F JUMP JUMPDEST PUSH2 0x18C3 JUMPI PUSH2 0x1863 DUP12 DUP12 DUP12 DUP9 PUSH2 0x2EB8 JUMP JUMPDEST SWAP5 POP SWAP1 POP PUSH2 0x1878 PUSH3 0xF4240 DUP3 LT ISZERO PUSH1 0xCC PUSH2 0x1C4E JUMP JUMPDEST PUSH2 0x1886 PUSH1 0x0 PUSH3 0xF4240 PUSH2 0x3048 JUMP JUMPDEST PUSH2 0x1895 DUP10 PUSH3 0xF4240 DUP4 SUB PUSH2 0x3048 JUMP JUMPDEST PUSH2 0x189E DUP5 PUSH2 0x267A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE SWAP1 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP3 POP PUSH2 0x18FE JUMP JUMPDEST PUSH2 0x18CC DUP9 PUSH2 0x2269 JUMP JUMPDEST PUSH2 0x18DB DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH2 0x250B JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP SWAP1 POP PUSH2 0x18EC DUP10 DUP3 PUSH2 0x3048 JUMP JUMPDEST PUSH2 0x18F5 DUP5 PUSH2 0x267A JUMP JUMPDEST PUSH2 0x18FE DUP4 PUSH2 0x205A JUMP JUMPDEST POP POP SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1916 PUSH2 0x10AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1938 JUMPI POP PUSH1 0x0 NOT PUSH2 0x654 JUMP JUMPDEST PUSH2 0x1942 DUP4 DUP4 PUSH2 0x3052 JUMP JUMPDEST SWAP1 POP PUSH2 0x654 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x7D7 PUSH2 0x307D JUMP JUMPDEST DUP1 PUSH2 0x195D DUP2 PUSH2 0x30EC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x198D DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0x0 SGT ISZERO DUP1 ISZERO PUSH2 0x1985 JUMPI POP PUSH8 0xDE0B6B3A7640000 DUP3 PUSH1 0x60 ADD MLOAD SGT ISZERO JUMPDEST PUSH2 0x163 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0x19B8 DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x0 SGT ISZERO DUP1 ISZERO PUSH2 0x1985 JUMPI POP PUSH8 0xDE0B6B3A7640000 DUP3 PUSH1 0x40 ADD MLOAD SGT ISZERO PUSH2 0x163 PUSH2 0x3165 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x60 DUP4 ADD MLOAD DUP2 MSTORE SWAP1 DUP3 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x19DD DUP3 DUP1 PUSH2 0x3173 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A0A PUSH8 0xDE0B6B3A763FC18 DUP3 SLT DUP1 ISZERO SWAP1 PUSH2 0x1A02 JUMPI POP PUSH8 0xDE0B6B3A76403E8 DUP3 SGT ISZERO JUMPDEST PUSH2 0x164 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0x1A39 DUP4 PUSH1 0x80 ADD MLOAD PUSH1 0x0 SGT ISZERO DUP1 ISZERO PUSH2 0x1A31 JUMPI POP PUSH11 0x52B7D2DCC80CD2E4000000 DUP5 PUSH1 0x80 ADD MLOAD SGT ISZERO JUMPDEST PUSH2 0x168 PUSH2 0x3165 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7BD DUP4 DUP4 PUSH1 0x56 PUSH2 0x1A62 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A5C DUP4 DUP4 GT ISZERO PUSH1 0x1 PUSH2 0x1C4E JUMP JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 SHL NOT SWAP3 SWAP1 SWAP3 AND SWAP2 SHL OR SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL DUP4 ISZERO DUP1 PUSH2 0x1A92 JUMPI POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x1A8F JUMPI INVALID JUMPDEST SDIV EQ JUMPDEST PUSH2 0x1AA2 JUMPI PUSH2 0x1AA2 PUSH1 0x0 PUSH1 0x3 PUSH2 0x1C4E JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 SDIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP2 DUP4 SLT ISZERO PUSH2 0x1AC9 JUMPI DUP4 DUP2 SLT PUSH2 0x1ACE JUMP JUMPDEST DUP4 DUP2 SLT ISZERO JUMPDEST PUSH2 0x7BD JUMPI PUSH2 0x7BD PUSH1 0x0 DUP1 PUSH2 0x1C4E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B56 PUSH1 0x0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x100C JUMP JUMPDEST SWAP1 POP PUSH2 0x71C PUSH2 0x1B65 DUP3 CALLER PUSH2 0x31A6 JUMP JUMPDEST PUSH2 0x191 PUSH2 0x1C4E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B8D JUMPI PUSH2 0x1B88 PUSH2 0x1B7E PUSH2 0x1C06 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x193 PUSH2 0x1C4E JUMP JUMPDEST PUSH2 0x1BA2 JUMP JUMPDEST PUSH2 0x1BA2 PUSH2 0x1B98 PUSH2 0x1C2A JUMP JUMPDEST TIMESTAMP LT PUSH2 0x1A9 PUSH2 0x1C4E JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH32 0x9E3A5E37224532DEA67B89FACE185703738A228A6E8A23DEE546960180D3BE64 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BF3 PUSH2 0x1C2A JUMP JUMPDEST TIMESTAMP GT DUP1 PUSH2 0x7D7 JUMPI POP POP PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST DUP2 PUSH2 0x195D JUMPI PUSH2 0x195D DUP2 PUSH2 0x29D2 JUMP JUMPDEST PUSH2 0x1C73 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO ISZERO PUSH2 0x198 PUSH2 0x1C4E JUMP JUMPDEST PUSH2 0x1C8A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x199 PUSH2 0x1C4E JUMP JUMPDEST PUSH2 0x1C95 DUP4 DUP4 DUP4 PUSH2 0x1A39 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1CBB SWAP1 DUP3 PUSH2 0x1A0 PUSH2 0x32A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1CEA SWAP1 DUP3 PUSH2 0x1E80 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x1DB1 PUSH2 0x32BE JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1E15 PUSH2 0x1E0D PUSH2 0x1BE9 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x1C4E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1E2A PUSH5 0xE8D4A51000 DUP3 LT ISZERO PUSH1 0xCB PUSH2 0x1C4E JUMP JUMPDEST PUSH2 0x1E40 PUSH8 0x16345785D8A0000 DUP3 GT ISZERO PUSH1 0xCA PUSH2 0x1C4E JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1E4D SWAP1 DUP3 PUSH2 0x1A3E JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x40 MLOAD PUSH32 0xA9BA3FFE0B6C366B81232CAAB38605A0699AD5398D6CCE76F91EE809E322DAFC SWAP1 PUSH2 0x700 SWAP1 DUP4 SWAP1 PUSH2 0x48EA JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH2 0x7BD DUP5 DUP3 LT ISZERO DUP4 PUSH2 0x1C4E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x654 DUP3 DUP3 PUSH2 0x32C2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x654 DUP3 PUSH1 0x16 PUSH2 0x32C2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x654 DUP3 PUSH1 0x2C PUSH2 0x32E9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x654 DUP3 PUSH1 0x4B PUSH2 0x32F3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x654 DUP3 PUSH1 0x55 PUSH2 0x32FB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x654 DUP3 PUSH1 0x56 PUSH2 0x3305 JUMP JUMPDEST PUSH2 0x195D DUP2 DUP4 EQ PUSH1 0x67 PUSH2 0x1C4E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1EFC PUSH2 0x22D5 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1F08 PUSH2 0x1BE9 JUMP JUMPDEST ISZERO PUSH2 0x200D JUMPI PUSH1 0x40 MLOAD PUSH4 0x6C1E5431 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0xD83CA862 SWAP1 PUSH2 0x1F4B SWAP1 DUP14 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x47D7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1F77 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F9B SWAP2 SWAP1 PUSH2 0x4655 JUMP JUMPDEST SWAP1 POP PUSH2 0x1FA6 DUP2 PUSH2 0x3313 JUMP JUMPDEST PUSH2 0x1FB0 DUP11 DUP9 PUSH2 0x3340 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH2 0x1FC9 DUP2 DUP8 PUSH2 0x1FC2 PUSH2 0x71F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x338C JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xE1D39CAF039C7DC6F364B1E29D1E67C4E330003A43F4991D50CF3E8840D95EAC SWAP2 PUSH2 0x1FFF SWAP2 DUP5 SWAP2 SWAP1 PUSH2 0x4A6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0x2023 JUMP JUMPDEST PUSH2 0x2017 DUP10 DUP8 PUSH2 0x3340 JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0x9 SSTORE SWAP1 SWAP6 POP SWAP4 POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE DUP8 SWAP3 DUP8 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP5 POP SWAP5 POP SWAP5 POP POP POP SWAP8 POP SWAP8 POP SWAP8 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2081 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x206A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x207C PUSH1 0x1 PUSH2 0x2A25 JUMP JUMPDEST PUSH2 0x220F JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x208E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x20BC DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x20AA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x207C PUSH1 0x0 PUSH2 0x2A25 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x20C9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x2196 JUMPI PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD PUSH2 0x20FC SWAP3 SWAP2 SWAP1 PUSH2 0x477B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2139 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x213E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x214D JUMPI INVALID JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x43ADBAFB PUSH1 0xE0 SHL DUP2 EQ PUSH2 0x2178 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x4 PUSH1 0x0 RETURNDATACOPY PUSH1 0x40 PUSH1 0x20 MSTORE PUSH1 0x24 RETURNDATASIZE SUB PUSH1 0x24 PUSH1 0x40 RETURNDATACOPY PUSH1 0x1C RETURNDATASIZE ADD PUSH1 0x0 RETURN JUMPDEST PUSH2 0x219F DUP7 PUSH2 0x2269 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x21B5 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x21C7 DUP2 DUP5 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1F NOT DUP3 ADD DUP4 SWAP1 MSTORE PUSH4 0x43ADBAFB PUSH1 0x3F NOT DUP4 ADD MSTORE PUSH1 0x20 MUL PUSH1 0x23 NOT DUP3 ADD PUSH1 0x44 DUP3 ADD DUP2 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL PUSH2 0x7BD DUP5 ISZERO DUP1 PUSH2 0x2208 JUMPI POP DUP4 DUP6 DUP4 DUP2 PUSH2 0x2205 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH1 0x3 PUSH2 0x1C4E JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2222 JUMPI PUSH2 0x2222 PUSH1 0x0 PUSH1 0x4 PUSH2 0x1C4E JUMP JUMPDEST DUP3 PUSH2 0x222F JUMPI POP PUSH1 0x0 PUSH2 0x654 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 DUP2 MUL SWAP1 DUP5 DUP3 DUP2 PUSH2 0x2245 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x2257 JUMPI PUSH2 0x2257 PUSH1 0x0 PUSH1 0x5 PUSH2 0x1C4E JUMP JUMPDEST DUP3 DUP2 DUP2 PUSH2 0x2260 JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2290 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2279 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x228B PUSH1 0x1 PUSH2 0x2A25 JUMP JUMPDEST PUSH2 0x33E4 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x229D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x20BC DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x22B9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x228B PUSH1 0x0 PUSH2 0x2A25 JUMP JUMPDEST PUSH2 0x195D DUP3 DUP3 PUSH2 0x341D JUMP JUMPDEST PUSH2 0x22DD PUSH2 0x40E5 JUMP JUMPDEST PUSH2 0x22E5 PUSH2 0x4114 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x80 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x40 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 DUP7 MSTORE DUP5 MLOAD DUP6 DUP3 ADD MLOAD PUSH32 0x0 DUP2 DUP5 ADD MSTORE PUSH32 0x0 SWAP1 MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 SWAP1 MSTORE PUSH32 0x0 PUSH1 0xC0 DUP6 ADD MSTORE PUSH32 0x0 PUSH1 0xA0 DUP6 ADD MSTORE PUSH32 0x0 SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x0 SWAP1 DUP4 ADD MSTORE PUSH32 0x0 SWAP1 DUP3 ADD MSTORE SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH2 0x251B PUSH2 0x22D5 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH20 0x0 PUSH4 0xD83CA862 DUP12 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x255C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x47D7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2574 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2588 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25AC SWAP2 SWAP1 PUSH2 0x4655 JUMP JUMPDEST SWAP1 POP PUSH2 0x25B7 DUP2 PUSH2 0x3313 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x25C4 DUP13 DUP11 PUSH2 0x34D4 JUMP JUMPDEST PUSH1 0xA SLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x25EE JUMPI PUSH2 0x25EE DUP3 PUSH2 0x25E1 DUP16 PUSH2 0xC39 JUMP JUMPDEST PUSH2 0x25E9 PUSH2 0x71F JUMP JUMPDEST PUSH2 0x350E JUMP JUMPDEST PUSH2 0x2602 DUP4 DUP4 PUSH2 0x25FB PUSH2 0x71F JUMP JUMPDEST PUSH1 0x1 PUSH2 0x338C JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xE1D39CAF039C7DC6F364B1E29D1E67C4E330003A43F4991D50CF3E8840D95EAC SWAP2 PUSH2 0x2638 SWAP2 DUP7 SWAP2 SWAP1 PUSH2 0x4A6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE DUP5 SWAP3 DUP5 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP8 POP SWAP8 POP SWAP8 POP POP POP POP POP POP SWAP8 POP SWAP8 POP SWAP8 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x26A1 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x268A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x269C PUSH1 0x1 PUSH2 0x2A25 JUMP JUMPDEST PUSH2 0x2D8C JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x26AE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x20BC DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x26CA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x269C PUSH1 0x0 PUSH2 0x2A25 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH2 0x272F PUSH32 0x0 PUSH2 0x272A PUSH1 0x1 PUSH2 0x2A25 JUMP JUMPDEST PUSH2 0x3620 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x273C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2776 PUSH32 0x0 PUSH2 0x272A PUSH1 0x0 PUSH2 0x2A25 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2783 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0xC7FE78D0 DUP7 DUP6 DUP6 PUSH2 0x27BA DUP10 PUSH2 0x36C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27D9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4808 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x27F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2805 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2829 SWAP2 SWAP1 PUSH2 0x4655 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x2901 JUMPI PUSH2 0x28FE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x679AEFCE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x28BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x28D3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28F7 SWAP2 SWAP1 PUSH2 0x4655 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x33E4 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x29CE JUMPI PUSH2 0x29CB PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x679AEFCE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x298C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x29C4 SWAP2 SWAP1 PUSH2 0x4655 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x220F JUMP JUMPDEST SWAP2 POP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH7 0x42414C23000030 PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD SWAP1 SWAP5 ADD PUSH1 0x10 SHL SWAP4 SWAP1 SWAP4 ADD ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 ISZERO PUSH2 0x2A7A JUMPI POP PUSH32 0x0 SWAP1 POP PUSH32 0x0 PUSH2 0x2AC0 JUMP JUMPDEST POP PUSH32 0x0 SWAP1 POP PUSH32 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x7BD JUMPI PUSH2 0x2B4A DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x679AEFCE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B1F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B43 SWAP2 SWAP1 PUSH2 0x4655 JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x33E4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7BD DUP4 DUP4 PUSH2 0x33E4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP2 ISZERO PUSH2 0x2BBD JUMPI DUP4 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2B92 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP3 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2BAC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x7BD JUMP JUMPDEST DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2BCB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2BE5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL DUP4 ISZERO DUP1 PUSH2 0x2C12 JUMPI POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x2C0F JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0x2C22 JUMPI PUSH2 0x2C22 PUSH1 0x0 PUSH1 0x3 PUSH2 0x1C4E JUMP JUMPDEST DUP1 PUSH2 0x2C31 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x654 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH1 0x0 NOT DUP3 ADD JUMPDEST DIV PUSH1 0x1 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1A5C JUMPI PUSH2 0x1A5C PUSH1 0x0 PUSH1 0x1 PUSH2 0x1C4E JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x30FFA11B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH20 0x0 SWAP2 PUSH4 0x61FF4236 SWAP2 PUSH2 0x2CAB SWAP2 DUP11 SWAP2 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x4879 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2CC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2CD7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2CFB SWAP2 SWAP1 PUSH2 0x4655 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7BD DUP4 DUP4 PUSH2 0x220F JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x3B18CE7B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH20 0x0 SWAP2 PUSH4 0xEC6339EC SWAP2 PUSH2 0x2CAB SWAP2 DUP11 SWAP2 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x4879 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7BD DUP4 DUP4 PUSH2 0x2D8C JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 LT PUSH2 0x2D7E JUMPI PUSH1 0x0 PUSH2 0x654 JUMP JUMPDEST POP PUSH8 0xDE0B6B3A7640000 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2D9F JUMPI PUSH2 0x2D9F PUSH1 0x0 PUSH1 0x4 PUSH2 0x1C4E JUMP JUMPDEST DUP3 PUSH2 0x2DAC JUMPI POP PUSH1 0x0 PUSH2 0x654 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 DUP2 MUL SWAP1 DUP5 DUP3 DUP2 PUSH2 0x2DC2 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x2DE6 JUMPI PUSH2 0x2DE6 PUSH8 0xDE0B6B3A7640000 DUP6 DUP4 DUP2 PUSH2 0x2DDD JUMPI INVALID JUMPDEST DIV EQ PUSH1 0x5 PUSH2 0x1C4E JUMP JUMPDEST DUP3 PUSH1 0x1 DUP3 SUB DUP2 PUSH2 0x2C40 JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH2 0x2DFC PUSH2 0x10AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAAABADC5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E48 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7D7 SWAP2 SWAP1 PUSH2 0x4222 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E76 PUSH2 0x1D44 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x2EC7 DUP5 PUSH2 0x370B JUMP JUMPDEST SWAP1 POP PUSH2 0x2EE2 PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2EDA JUMPI INVALID JUMPDEST EQ PUSH1 0xCE PUSH2 0x1C4E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EED DUP6 PUSH2 0x372A JUMP JUMPDEST SWAP1 POP PUSH2 0x2EFB DUP2 MLOAD PUSH1 0x2 PUSH2 0x1EDF JUMP JUMPDEST PUSH2 0x2F04 DUP2 PUSH2 0x2269 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2F0F PUSH2 0x22D5 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH20 0x0 PUSH4 0xD83CA862 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F50 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x47D7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2F7C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2FA0 SWAP2 SWAP1 PUSH2 0x4655 JUMP JUMPDEST SWAP1 POP PUSH32 0xAF65F1A72BF4F8BC48E8153858E1F7B307CE39C88361A677C0A79C2A1AE571EF DUP2 PUSH1 0x40 MLOAD PUSH2 0x2FD1 SWAP2 SWAP1 PUSH2 0x48EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 PUSH2 0x2FE7 DUP6 DUP4 DUP7 DUP7 PUSH2 0x2792 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x302F PUSH2 0x3015 DUP4 DUP9 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2FFF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x33E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x3022 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1E80 JUMP JUMPDEST PUSH1 0x9 SWAP4 SWAP1 SWAP4 SSTORE POP SWAP1 SWAP12 SWAP4 SWAP11 POP SWAP3 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x195D DUP3 DUP3 PUSH2 0x37DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH2 0x30AC PUSH1 0x1 PUSH2 0x3873 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x30B9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x30CF PUSH1 0x0 PUSH2 0x3873 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x30DC JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD LT ISZERO PUSH2 0x30FB JUMPI PUSH2 0x71C JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x310A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1A39 JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3132 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x315B DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH1 0x65 PUSH2 0x1C4E JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x311B JUMP JUMPDEST DUP2 PUSH2 0x195D JUMPI PUSH2 0x195D DUP2 PUSH2 0x38C7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7BD PUSH2 0x3193 DUP4 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x20 ADD MLOAD PUSH2 0x1A78 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 MLOAD DUP6 MLOAD PUSH2 0x31A0 SWAP2 PUSH2 0x1A78 JUMP JUMPDEST SWAP1 PUSH2 0x1AB4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xBA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1B PUSH2 0x31C5 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x31E0 JUMPI POP PUSH2 0x31E0 DUP4 PUSH2 0x38D7 JUMP JUMPDEST ISZERO PUSH2 0x3208 JUMPI PUSH2 0x31ED PUSH2 0x108A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP PUSH2 0x654 JUMP JUMPDEST PUSH2 0x3210 PUSH2 0x2DF2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9BE2A884 DUP5 DUP5 ADDRESS PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3289 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x329F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x654 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32B7 DUP5 DUP5 GT ISZERO DUP4 PUSH2 0x1C4E JUMP JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR PUSH3 0x3FFFFF AND PUSH3 0x1FFFFF DUP2 SGT PUSH2 0x32DC JUMPI DUP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH3 0x3FFFFF NOT OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST SHR PUSH4 0x7FFFFFFF AND SWAP1 JUMP JUMPDEST SHR PUSH2 0x3FF AND SWAP1 JUMP JUMPDEST SHR PUSH1 0x1 SWAP1 DUP2 AND EQ SWAP1 JUMP JUMPDEST SHR PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x3325 PUSH1 0x9 SLOAD DUP7 PUSH2 0x3909 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH2 0x3339 DUP5 DUP5 DUP5 DUP5 PUSH2 0x3972 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x334F DUP5 PUSH2 0x370B JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x335F JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x3379 JUMPI PUSH2 0x336F DUP6 DUP6 PUSH2 0x3998 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH2 0x3384 JUMP JUMPDEST PUSH2 0x3384 PUSH2 0x150 PUSH2 0x29D2 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO PUSH2 0x33BE JUMPI PUSH1 0x0 PUSH2 0x33AA DUP5 PUSH2 0x33A4 DUP9 DUP9 PUSH2 0x2BF8 JUMP JUMPDEST SWAP1 PUSH2 0x2D8C JUMP JUMPDEST SWAP1 POP PUSH2 0x33B6 DUP7 DUP3 PUSH2 0x39CA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33CE DUP5 PUSH2 0xA7F DUP9 DUP9 PUSH2 0x33E4 JUMP JUMPDEST SWAP1 POP PUSH2 0x33DA DUP7 DUP3 PUSH2 0x2C4D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL DUP4 ISZERO DUP1 PUSH2 0x33FE JUMPI POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x33FB JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0x340E JUMPI PUSH2 0x340E PUSH1 0x0 PUSH1 0x3 PUSH2 0x1C4E JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x3434 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x19B PUSH2 0x1C4E JUMP JUMPDEST PUSH2 0x3440 DUP3 PUSH1 0x0 DUP4 PUSH2 0x1A39 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3466 SWAP1 DUP3 PUSH2 0x1A1 PUSH2 0x32A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x348C SWAP1 DUP3 PUSH2 0x39E2 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x34E3 DUP5 PUSH2 0x370B JUMP JUMPDEST SWAP1 POP PUSH1 0x3 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x34F3 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x3503 JUMPI PUSH2 0x336F DUP6 DUP6 PUSH2 0x39F0 JUMP JUMPDEST PUSH2 0x3384 PUSH2 0x136 PUSH2 0x29D2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0xA SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP3 MSTORE PUSH2 0x100 DUP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB AND PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x355B DUP6 DUP6 PUSH2 0x39CA JUMP JUMPDEST GT ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6F7665722061646472657373206C697175696469747920636170000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x35B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AB SWAP2 SWAP1 PUSH2 0x4934 JUMP JUMPDEST POP PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x35CA DUP6 DUP5 PUSH2 0x39CA JUMP JUMPDEST GT ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6F76657220676C6F62616C206C69717569646974792063617000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x3339 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AB SWAP2 SWAP1 PUSH2 0x4934 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x362D PUSH2 0x10AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB05F8E48 PUSH2 0x3643 PUSH2 0x7F5 JUMP JUMPDEST DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3661 SWAP3 SWAP2 SWAP1 PUSH2 0x48F3 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3679 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x368D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x36B1 SWAP2 SWAP1 PUSH2 0x466D JUMP JUMPDEST POP POP DUP2 DUP2 ADD SWAP5 POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x2829 DUP4 DUP6 PUSH2 0x33E4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xFF SHL DUP3 LT PUSH2 0x29CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4AC4 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3741 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP3 SWAP5 SWAP3 SWAP4 DUP4 ADD SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x3768 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x377D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x379A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x37C7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x37AF JUMP JUMPDEST POP POP POP POP SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 MSTORE POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x37EA PUSH1 0x0 DUP4 DUP4 PUSH2 0x1A39 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x37F7 SWAP1 DUP3 PUSH2 0x1E80 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x381D SWAP1 DUP3 PUSH2 0x1E80 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x38A0 JUMPI PUSH32 0x0 PUSH2 0x654 JUMP JUMPDEST POP PUSH32 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x71C DUP2 PUSH3 0x23ACA9 PUSH1 0xE9 SHL PUSH2 0x3A15 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38E9 PUSH4 0x1C74C917 PUSH1 0xE1 SHL PUSH2 0x100C JUMP JUMPDEST DUP3 EQ DUP1 PUSH2 0x654 JUMPI POP PUSH2 0x3901 PUSH4 0x50DD6ED9 PUSH1 0xE0 SHL PUSH2 0x100C JUMP JUMPDEST SWAP1 SWAP2 EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x391D PUSH2 0x3A76 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP DUP4 PUSH1 0x0 EQ ISZERO PUSH2 0x3942 JUMPI PUSH1 0x0 SWAP8 POP DUP8 SWAP7 POP SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x3969 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3959 DUP13 DUP13 PUSH2 0x3952 PUSH2 0x71F JUMP JUMPDEST DUP10 DUP10 PUSH2 0x3BE8 JUMP JUMPDEST SWAP1 SWAP11 POP SWAP9 POP SWAP3 SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP JUMPDEST SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST DUP4 ISZERO PUSH2 0x3982 JUMPI PUSH2 0x3982 DUP3 DUP6 PUSH2 0x3048 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x3992 JUMPI PUSH2 0x3992 DUP2 DUP5 PUSH2 0x3048 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x39A7 DUP5 PUSH2 0x3C83 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x39BD DUP7 DUP4 PUSH2 0x39B8 PUSH2 0x71F JUMP JUMPDEST PUSH2 0x3CA5 JUMP JUMPDEST SWAP2 SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x7BD JUMPI PUSH2 0x7BD PUSH1 0x0 DUP1 PUSH2 0x1C4E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7BD DUP4 DUP4 PUSH1 0x1 PUSH2 0x32A8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x39FF DUP5 PUSH2 0x3C83 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x39BD DUP7 DUP4 PUSH2 0x3A10 PUSH2 0x71F JUMP JUMPDEST PUSH2 0x3D2B JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH2 0x3A9D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS PUSH4 0x45434C5 PUSH1 0xE4 SHL PUSH2 0x3DC7 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x3ABB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS PUSH4 0x45434C5 PUSH1 0xE4 SHL PUSH2 0x3DEE JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x21F8A721 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x21F8A721 SWAP1 PUSH2 0x3AFB SWAP1 PUSH13 0x4759524F5F5452454153555259 PUSH1 0x98 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0x48EA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3B13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3B27 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B4B SWAP2 SWAP1 PUSH2 0x4222 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x21F8A721 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x21F8A721 SWAP1 PUSH2 0x3B8A SWAP1 PUSH12 0x42414C5F5452454153555259 PUSH1 0xA0 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0x48EA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3BA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3BB6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3BDA SWAP2 SWAP1 PUSH2 0x4222 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 DUP7 GT PUSH2 0x3BFD JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x3C79 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C1D DUP6 PUSH2 0x3C17 PUSH2 0x3C10 DUP11 DUP13 PUSH2 0x2C4D JUMP JUMPDEST DUP10 SWAP1 PUSH2 0x33E4 JUMP JUMPDEST SWAP1 PUSH2 0x33E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3C35 PUSH2 0x3C2E DUP10 DUP12 PUSH2 0x2C4D JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x33E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3C43 DUP10 DUP4 PUSH2 0x2C4D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3C51 DUP5 DUP4 PUSH2 0x220F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3C5F DUP9 DUP4 PUSH2 0x33E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3C6D DUP4 DUP4 PUSH2 0x2C4D JUMP JUMPDEST SWAP2 SWAP8 POP SWAP1 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3C9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 ADD MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x3CBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3CE9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x159B JUMPI PUSH2 0x3D0C DUP4 PUSH2 0xA7F DUP7 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x2FFF JUMPI INVALID JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3D18 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x3CEF JUMP JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x3D45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3D6F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x159B JUMPI PUSH2 0x3DA8 DUP4 PUSH2 0x33A4 DUP7 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x3D92 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2BF8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3DB4 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x3D75 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B4A DUP5 PUSH22 0x50524F544F434F4C5F535741505F4645455F50455243 PUSH1 0x50 SHL DUP5 DUP7 PUSH2 0x3E18 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B4A DUP5 PUSH32 0x50524F544F434F4C5F4645455F4759524F5F504F5254494F4E00000000000000 DUP5 DUP7 JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND DUP4 DUP6 ADD MSTORE DUP4 MLOAD DUP1 DUP5 SUB DUP6 ADD DUP2 MSTORE PUSH1 0x60 DUP5 ADD DUP1 DUP7 MSTORE DUP2 MLOAD SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH4 0x696EB375 PUSH1 0xE0 SHL SWAP1 SWAP2 MSTORE PUSH1 0x64 DUP5 ADD DUP2 SWAP1 MSTORE SWAP4 MLOAD PUSH1 0x0 SWAP5 SWAP4 SWAP2 DUP10 AND SWAP3 PUSH4 0x696EB375 SWAP3 PUSH1 0x84 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3E89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3E9D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3EB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO PUSH2 0x3F33 JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBD02D0F5 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3EFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3F12 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3F28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 POP PUSH2 0x2B4A SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP9 SWAP1 MSTORE DUP2 DUP4 ADD DUP8 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 DUP4 ADD DUP1 DUP6 MSTORE DUP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH4 0x696EB375 PUSH1 0xE0 SHL SWAP1 SWAP2 MSTORE PUSH1 0x64 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP3 PUSH4 0x696EB375 SWAP3 PUSH1 0x84 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3FB3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3FC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO PUSH2 0x404A JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBD02D0F5 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4014 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4028 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x403E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 POP PUSH2 0x2B4A SWAP2 POP POP JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBD02D0F5 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x408E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x40A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x40B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x4127 PUSH2 0x415D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4134 PUSH2 0x415D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xC53 DUP2 PUSH2 0x4AAE JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xC53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x41A2 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x41B6 JUMPI INVALID JUMPDEST PUSH2 0x41C9 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x4A8A JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x41DD JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0xC53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4217 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7BD DUP2 PUSH2 0x4AAE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4233 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x7BD DUP2 PUSH2 0x4AAE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4250 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x425B DUP2 PUSH2 0x4AAE JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x426B DUP2 PUSH2 0x4AAE JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x428A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x4295 DUP2 PUSH2 0x4AAE JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x42A5 DUP2 PUSH2 0x4AAE JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x42D0 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x42DB DUP2 PUSH2 0x4AAE JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x42EB DUP2 PUSH2 0x4AAE JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x430E JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x433D JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4348 DUP2 PUSH2 0x4AAE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4367 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x7BD DUP3 PUSH2 0x4182 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x438A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP8 CALLDATALOAD SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x439C DUP2 PUSH2 0x4AAE JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH2 0x43AC DUP2 PUSH2 0x4AAE JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x43C8 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP11 ADD SWAP2 POP DUP11 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x43DB JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x43E7 JUMPI INVALID JUMPDEST PUSH1 0x20 DUP2 MUL PUSH2 0x43F7 PUSH1 0x20 DUP3 ADD PUSH2 0x4A8A JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP7 ADD DUP16 PUSH1 0x20 DUP6 DUP10 ADD ADD GT ISZERO PUSH2 0x4416 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x4439 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x441A JUMP JUMPDEST POP SWAP9 POP POP POP POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP5 POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4460 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x446D DUP11 DUP3 DUP12 ADD PUSH2 0x4192 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x448D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x7BD JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x44B6 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x44D8 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x44F5 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE PUSH2 0x4501 DUP4 PUSH2 0x4182 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x451C JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x453A JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x455A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4571 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP PUSH2 0x120 DUP1 DUP4 DUP10 SUB SLT ISZERO PUSH2 0x4587 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x4590 DUP2 PUSH2 0x4A8A JUMP JUMPDEST SWAP1 POP PUSH2 0x459B DUP4 PUSH2 0x41F7 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x45A9 PUSH1 0x20 DUP5 ADD PUSH2 0x4177 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x45BA PUSH1 0x40 DUP5 ADD PUSH2 0x4177 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x45E9 PUSH1 0xC0 DUP5 ADD PUSH2 0x4177 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x45FA PUSH1 0xE0 DUP5 ADD PUSH2 0x4177 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD CALLDATALOAD DUP4 DUP2 GT ISZERO PUSH2 0x4612 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH2 0x461E DUP11 DUP3 DUP8 ADD PUSH2 0x4192 JUMP JUMPDEST SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP8 PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP8 POP PUSH1 0x40 SWAP1 SWAP7 ADD CALLDATALOAD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x464E JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4666 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4682 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 MLOAD SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP6 ADD MLOAD PUSH2 0x46A2 DUP2 PUSH2 0x4AAE JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x46DC JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x46C0 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x46F2 DUP3 DUP3 MLOAD PUSH2 0x476C JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH2 0x4704 PUSH1 0x40 DUP5 ADD DUP3 PUSH2 0x476C JUMP JUMPDEST POP PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH2 0x100 DUP4 ADD MSTORE POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP4 CALLDATACOPY SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x7BD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x46AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0x47C5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x46AD JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2829 DUP2 DUP6 PUSH2 0x46AD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E0 DUP1 DUP4 MSTORE PUSH2 0x47EB DUP2 DUP5 ADD DUP8 PUSH2 0x46AD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x47FB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x473C JUMP JUMPDEST PUSH2 0x2B4A PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x46E7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x200 DUP1 DUP4 MSTORE PUSH2 0x481C DUP2 DUP5 ADD DUP9 PUSH2 0x46AD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x482C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x473C JUMP JUMPDEST PUSH2 0x4839 PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x46E7 JUMP JUMPDEST DUP3 PUSH2 0x1E0 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 MSTORE PUSH2 0x485C PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x46AD JUMP JUMPDEST SWAP1 POP PUSH2 0x486B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x476C JUMP JUMPDEST DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x260 DUP1 DUP4 MSTORE PUSH2 0x488D DUP2 DUP5 ADD DUP11 PUSH2 0x46AD JUMP JUMPDEST SWAP2 POP POP DUP7 PUSH1 0x20 DUP4 ADD MSTORE DUP6 ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x48AB PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x473C JUMP JUMPDEST PUSH2 0x48B9 PUSH2 0x100 DUP4 ADD DUP6 PUSH2 0x46E7 JUMP JUMPDEST PUSH2 0x2CFB PUSH2 0x220 DUP4 ADD DUP5 PUSH2 0x476C JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4960 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x4944 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x4971 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 SWAP2 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP3 MSTORE PUSH1 0x8 DUP2 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x80 SHR PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1C0 DUP2 ADD PUSH2 0x49F6 DUP3 DUP6 PUSH2 0x473C JUMP JUMPDEST PUSH2 0x4A04 PUSH1 0xA0 DUP4 ADD DUP5 MLOAD PUSH2 0x476C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x4A16 PUSH1 0xE0 DUP5 ADD DUP3 PUSH2 0x476C JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x140 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x160 DUP4 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x180 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x1A0 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2B4A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x46AD JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4AA6 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x71C JUMPI PUSH1 0x0 DUP1 REVERT INVALID MSTORE8 PUSH2 0x6665 NUMBER PUSH2 0x7374 GASPRICE KECCAK256 PUSH23 0x616C756520646F65736E27742066697420696E20616E20 PUSH10 0x6E74323536A264697066 PUSH20 0x58221220D791FAC87B08543F4D57391F0CF0642B KECCAK256 MSIZE 0xD1 SHL PUSH20 0xEA3A3650794E3D7863D23064736F6C6343000706 STOP CALLER ", "sha1": "ca0ad5907241b72cf1dc542c88823503ec6989cb", "source": "// SPDX-License-Identifier: LicenseRef-Gyro-1.0\n// for information on licensing please see the README in the GitHub repository <https://github.com/gyrostable/concentrated-lps>.\n\npragma solidity 0.7.6;\npragma experimental ABIEncoderV2;\n\n// import \"@balancer-labs/v2-solidity-utils/contracts/math/FixedPoint.sol\";\nimport \"../../libraries/GyroFixedPoint.sol\";\n\nimport \"@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol\";\nimport \"@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol\";\nimport \"@balancer-labs/v2-pool-utils/contracts/interfaces/IRateProvider.sol\";\n\nimport \"../../libraries/GyroConfigKeys.sol\";\nimport \"../../libraries/GyroConfigHelpers.sol\";\nimport \"../../libraries/GyroErrors.sol\";\nimport \"../../interfaces/IGyroConfig.sol\";\nimport \"../../libraries/GyroPoolMath.sol\";\n\nimport \"../ExtensibleWeightedPool2Tokens.sol\";\nimport \"./GyroECLPMath.sol\";\nimport \"../CappedLiquidity.sol\";\nimport \"../LocallyPausable.sol\";\n\ncontract GyroECLPPool is ExtensibleWeightedPool2Tokens, CappedLiquidity, LocallyPausable {\n    using GyroFixedPoint for uint256;\n    using WeightedPoolUserDataHelpers for bytes;\n    using WeightedPool2TokensMiscData for bytes32;\n    using SafeCast for int256;\n    using SafeCast for uint256;\n    using GyroConfigHelpers for IGyroConfig;\n\n    uint256 private constant _MINIMUM_BPT = 1e6;\n    bytes32 private constant POOL_TYPE = \"ECLP\";\n\n    /// @dev Parameters of the ECLP pool\n    int256 internal immutable _paramsAlpha;\n    int256 internal immutable _paramsBeta;\n    int256 internal immutable _paramsC;\n    int256 internal immutable _paramsS;\n    int256 internal immutable _paramsLambda;\n    int256 internal immutable _tauAlphaX;\n    int256 internal immutable _tauAlphaY;\n    int256 internal immutable _tauBetaX;\n    int256 internal immutable _tauBetaY;\n    int256 internal immutable _u;\n    int256 internal immutable _v;\n    int256 internal immutable _w;\n    int256 internal immutable _z;\n    int256 internal immutable _dSq;\n\n    IGyroConfig public gyroConfig;\n\n    /// @dev for rate scaling\n    IRateProvider public immutable rateProvider0;\n    IRateProvider public immutable rateProvider1;\n\n    struct GyroParams {\n        NewPoolParams baseParams;\n        GyroECLPMath.Params eclpParams;\n        GyroECLPMath.DerivedParams derivedEclpParams;\n        address rateProvider0;\n        address rateProvider1;\n        address capManager;\n        CapParams capParams;\n        address pauseManager;\n    }\n\n    event ECLPParamsValidated(bool paramsValidated);\n    event ECLPDerivedParamsValidated(bool derivedParamsValidated);\n\n    event InvariantAterInitializeJoin(uint256 invariantAfterJoin);\n    event InvariantOldAndNew(uint256 oldInvariant, uint256 newInvariant);\n\n    event SwapParams(uint256[] balances, GyroECLPMath.Vector2 invariant, uint256 amount);\n\n    constructor(GyroParams memory params, address configAddress)\n        ExtensibleWeightedPool2Tokens(params.baseParams)\n        CappedLiquidity(params.capManager, params.capParams)\n        LocallyPausable(params.pauseManager)\n    {\n        _grequire(configAddress != address(0x0), GyroECLPPoolErrors.ADDRESS_IS_ZERO_ADDRESS);\n\n        GyroECLPMath.validateParams(params.eclpParams);\n        emit ECLPParamsValidated(true);\n\n        GyroECLPMath.validateDerivedParamsLimits(params.eclpParams, params.derivedEclpParams);\n        emit ECLPDerivedParamsValidated(true);\n\n        (_paramsAlpha, _paramsBeta, _paramsC, _paramsS, _paramsLambda) = (\n            params.eclpParams.alpha,\n            params.eclpParams.beta,\n            params.eclpParams.c,\n            params.eclpParams.s,\n            params.eclpParams.lambda\n        );\n\n        (_tauAlphaX, _tauAlphaY, _tauBetaX, _tauBetaY, _u, _v, _w, _z, _dSq) = (\n            params.derivedEclpParams.tauAlpha.x,\n            params.derivedEclpParams.tauAlpha.y,\n            params.derivedEclpParams.tauBeta.x,\n            params.derivedEclpParams.tauBeta.y,\n            params.derivedEclpParams.u,\n            params.derivedEclpParams.v,\n            params.derivedEclpParams.w,\n            params.derivedEclpParams.z,\n            params.derivedEclpParams.dSq\n        );\n\n        gyroConfig = IGyroConfig(configAddress);\n\n        rateProvider0 = IRateProvider(params.rateProvider0);\n        rateProvider1 = IRateProvider(params.rateProvider1);\n    }\n\n    /** @dev reconstructs ECLP params structs from immutable arrays */\n    function reconstructECLPParams() internal view returns (GyroECLPMath.Params memory params, GyroECLPMath.DerivedParams memory d) {\n        (params.alpha, params.beta, params.c, params.s, params.lambda) = (_paramsAlpha, _paramsBeta, _paramsC, _paramsS, _paramsLambda);\n        (d.tauAlpha.x, d.tauAlpha.y, d.tauBeta.x, d.tauBeta.y) = (_tauAlphaX, _tauAlphaY, _tauBetaX, _tauBetaY);\n        (d.u, d.v, d.w, d.z, d.dSq) = (_u, _v, _w, _z, _dSq);\n    }\n\n    function getECLPParams() external view returns (GyroECLPMath.Params memory params, GyroECLPMath.DerivedParams memory d) {\n        return reconstructECLPParams();\n    }\n\n    /** @dev Reads the balance of a token from the balancer vault and returns the scaled amount. Smaller storage access\n     * compared to getVault().getPoolTokens().\n     * Copied from the 3CLP *except* that for the 2CLP, the scalingFactor is interpreted as a regular integer, not a\n     * FixedPoint number. This is an inconsistency between the base contracts.\n     */\n    function _getScaledTokenBalance(IERC20 token, uint256 scalingFactor) internal view returns (uint256 balance) {\n        // Signature of getPoolTokenInfo(): (pool id, token) -> (cash, managed, lastChangeBlock, assetManager)\n        // and total amount = cash + managed. See balancer repo, PoolTokens.sol and BalanceAllocation.sol\n        (uint256 cash, uint256 managed, , ) = getVault().getPoolTokenInfo(getPoolId(), token);\n        balance = cash + managed; // can't overflow, see BalanceAllocation.sol::total() in the Balancer repo.\n        balance = balance.mulDown(scalingFactor);\n    }\n\n    /** @dev Get all balances in the pool, scaled by the appropriate scaling factors, in a relatively gas-efficient way.\n     * Essentially copied from the 3CLP.\n     */\n    function _getAllBalances() internal view returns (uint256[] memory balances) {\n        // The below is more gas-efficient than the following line because the token slots don't have to be read in the\n        // vault.\n        // (, uint256[] memory balances, ) = getVault().getPoolTokens(getPoolId());\n        balances = new uint256[](2);\n        balances[0] = _getScaledTokenBalance(_token0, _scalingFactor(true));\n        balances[1] = _getScaledTokenBalance(_token1, _scalingFactor(false));\n        return balances;\n    }\n\n    /**\n     * @dev Returns the current value of the invariant.\n     * Note: This function is not used internally; it's public, not external, so we can override it cleanly.\n     */\n    function getInvariant() public view override returns (uint256) {\n        uint256[] memory balances = _getAllBalances();\n        (GyroECLPMath.Params memory eclpParams, GyroECLPMath.DerivedParams memory derivedECLPParams) = reconstructECLPParams();\n        return GyroECLPMath.calculateInvariant(balances, eclpParams, derivedECLPParams);\n    }\n\n    /** When rateProvider{0,1} is provided, this returns the *scaled* price, suitable to compare *rate scaled* balances.\n     *  To compare (decimal- but) not-rate-scaled balances, apply _adjustPrice() to the result.\n     */\n    function _getPrice(\n        uint256[] memory balances,\n        uint256 invariant,\n        GyroECLPMath.Params memory eclpParams,\n        GyroECLPMath.DerivedParams memory derivedECLPParams\n    ) internal view returns (uint256 spotPrice) {\n        spotPrice = GyroECLPMath.calcSpotPrice0in1(balances, eclpParams, derivedECLPParams, invariant.toInt256());\n    }\n\n    /** Returns the current spot price of token0 quoted in units of token1. When rateProvider{0,1} is provided, the\n     * returned price corresponds to tokens *before* rate scaling.\n     */\n    function getPrice() external view returns (uint256 spotPrice) {\n        uint256[] memory balances = _getAllBalances();\n        (GyroECLPMath.Params memory eclpParams, GyroECLPMath.DerivedParams memory derivedECLPParams) = reconstructECLPParams();\n        uint256 invariant = GyroECLPMath.calculateInvariant(balances, eclpParams, derivedECLPParams);\n        spotPrice = _getPrice(balances, invariant, eclpParams, derivedECLPParams);\n        spotPrice = _adjustPrice(spotPrice);\n    }\n\n    // Swap Hooks\n\n    function onSwap(\n        SwapRequest memory request,\n        uint256 balanceTokenIn,\n        uint256 balanceTokenOut\n    ) public virtual override whenNotPaused onlyVault(request.poolId) returns (uint256) {\n        bool tokenInIsToken0;\n\n        if (request.tokenIn == _token0 && request.tokenOut == _token1) {\n            tokenInIsToken0 = true;\n        } else if (request.tokenIn == _token1 && request.tokenOut == _token0) {\n            tokenInIsToken0 = false;\n        } else {\n            _revert(GyroECLPPoolErrors.TOKEN_IN_IS_NOT_TOKEN_0);\n        }\n\n        uint256 scalingFactorTokenIn = _scalingFactor(tokenInIsToken0);\n        uint256 scalingFactorTokenOut = _scalingFactor(!tokenInIsToken0);\n\n        // All token amounts are upscaled.\n        balanceTokenIn = _upscale(balanceTokenIn, scalingFactorTokenIn);\n        balanceTokenOut = _upscale(balanceTokenOut, scalingFactorTokenOut);\n\n        // We \"undo\" the pre-processing that the caller of onSwap() did: In contrast to other pools, we don't exploit\n        // symmetry here, and we identify the two tokens explicitly.\n        uint256[] memory balances = _balancesFromTokenInOut(balanceTokenIn, balanceTokenOut, tokenInIsToken0);\n\n        (GyroECLPMath.Params memory eclpParams, GyroECLPMath.DerivedParams memory derivedECLPParams) = reconstructECLPParams();\n        GyroECLPMath.Vector2 memory invariant;\n        {\n            (int256 currentInvariant, int256 invErr) = GyroECLPMath.calculateInvariantWithError(balances, eclpParams, derivedECLPParams);\n            // invariant = overestimate in x-component, underestimate in y-component\n            // No overflow in `+` due to constraints to the different values enforced in GyroECLPMath.\n            invariant = GyroECLPMath.Vector2(currentInvariant + 2 * invErr, currentInvariant);\n        }\n\n        if (request.kind == IVault.SwapKind.GIVEN_IN) {\n            // Fees are subtracted before scaling, to reduce the complexity of the rounding direction analysis.\n            // This is amount - fee amount, so we round up (favoring a higher fee amount).\n            uint256 feeAmount = request.amount.mulUp(getSwapFeePercentage());\n            request.amount = _upscale(request.amount.sub(feeAmount), scalingFactorTokenIn);\n\n            uint256 amountOut = _onSwapGivenIn(request, balances, tokenInIsToken0, eclpParams, derivedECLPParams, invariant);\n\n            emit SwapParams(balances, invariant, amountOut);\n\n            // amountOut tokens are exiting the Pool, so we round down.\n            return _downscaleDown(amountOut, scalingFactorTokenOut);\n        } else {\n            request.amount = _upscale(request.amount, scalingFactorTokenOut);\n\n            uint256 amountIn = _onSwapGivenOut(request, balances, tokenInIsToken0, eclpParams, derivedECLPParams, invariant);\n\n            emit SwapParams(balances, invariant, amountIn);\n\n            // amountIn tokens are entering the Pool, so we round up.\n            amountIn = _downscaleUp(amountIn, scalingFactorTokenIn);\n\n            // Fees are added after scaling happens, to reduce the complexity of the rounding direction analysis.\n            // This is amount + fee amount, so we round up (favoring a higher fee amount).\n            return amountIn.divUp(getSwapFeePercentage().complement());\n        }\n    }\n\n    function _onSwapGivenIn(\n        SwapRequest memory swapRequest,\n        uint256[] memory balances,\n        bool tokenInIsToken0,\n        GyroECLPMath.Params memory eclpParams,\n        GyroECLPMath.DerivedParams memory derivedECLPParams,\n        GyroECLPMath.Vector2 memory invariant\n    ) private pure returns (uint256) {\n        // Swaps are disabled while the contract is paused.\n        return GyroECLPMath.calcOutGivenIn(balances, swapRequest.amount, tokenInIsToken0, eclpParams, derivedECLPParams, invariant);\n    }\n\n    function _onSwapGivenOut(\n        SwapRequest memory swapRequest,\n        uint256[] memory balances,\n        bool tokenInIsToken0,\n        GyroECLPMath.Params memory eclpParams,\n        GyroECLPMath.DerivedParams memory derivedECLPParams,\n        GyroECLPMath.Vector2 memory invariant\n    ) private pure returns (uint256) {\n        // Swaps are disabled while the contract is paused.\n        return GyroECLPMath.calcInGivenOut(balances, swapRequest.amount, tokenInIsToken0, eclpParams, derivedECLPParams, invariant);\n    }\n\n    /**\n     * @dev Called when the Pool is joined for the first time; that is, when the BPT total supply is zero.\n     *\n     * Returns the amount of BPT to mint, and the token amounts the Pool will receive in return.\n     *\n     * Minted BPT will be sent to `recipient`, except for _MINIMUM_BPT, which will be deducted from this amount and sent\n     * to the zero address instead. This will cause that BPT to remain forever locked there, preventing total BTP from\n     * ever dropping below that value, and ensuring `_onInitializePool` can only be called once in the entire Pool's\n     * lifetime.\n     *\n     * The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n     * be downscaled (rounding up) before being returned to the Vault.\n     */\n    function _onInitializePool(\n        bytes32,\n        address,\n        address,\n        bytes memory userData\n    ) internal override returns (uint256, uint256[] memory) {\n        BaseWeightedPool.JoinKind kind = userData.joinKind();\n        _require(kind == BaseWeightedPool.JoinKind.INIT, Errors.UNINITIALIZED);\n\n        uint256[] memory amountsIn = userData.initialAmountsIn();\n        InputHelpers.ensureInputLengthMatch(amountsIn.length, 2);\n        _upscaleArray(amountsIn);\n\n        (GyroECLPMath.Params memory eclpParams, GyroECLPMath.DerivedParams memory derivedECLPParams) = reconstructECLPParams();\n        uint256 invariantAfterJoin = GyroECLPMath.calculateInvariant(amountsIn, eclpParams, derivedECLPParams);\n\n        emit InvariantAterInitializeJoin(invariantAfterJoin);\n\n        /* We initialize the number of BPT tokens such that one BPT token corresponds to one unit of token1 at the initialized pool price. This makes BPT tokens comparable across pools with different parameters. Note that the invariant does *not* have this property!\n         */\n        uint256 spotPrice = _getPrice(amountsIn, invariantAfterJoin, eclpParams, derivedECLPParams);\n        uint256 bptAmountOut = Math.add(amountsIn[0].mulDown(spotPrice), amountsIn[1]);\n\n        _lastInvariant = invariantAfterJoin;\n\n        return (bptAmountOut, amountsIn);\n    }\n\n    /**\n     * @dev Called whenever the Pool is joined after the first initialization join (see `_onInitializePool`).\n     *\n     * Returns the amount of BPT to mint, the token amounts that the Pool will receive in return, and the number of\n     * tokens to pay in protocol swap fees.\n     *\n     * Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n     * performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n     *\n     * Minted BPT will be sent to `recipient`.\n     *\n     * The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n     * be downscaled (rounding up) before being returned to the Vault.\n     *\n     * Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onJoinPool`). These\n     * amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n     *\n     * protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way\n     */\n    function _onJoinPool(\n        bytes32,\n        address,\n        address recipient,\n        uint256[] memory balances,\n        uint256 lastChangeBlock,\n        uint256, //protocolSwapFeePercentage,\n        bytes memory userData\n    )\n        internal\n        override\n        returns (\n            uint256,\n            uint256[] memory,\n            uint256[] memory\n        )\n    {\n        // Due protocol swap fee amounts are computed by measuring the growth of the invariant between the previous join\n        // or exit event and now - the invariant's growth is due exclusively to swap fees. This avoids spending gas\n        // computing them on each individual swap\n        (GyroECLPMath.Params memory eclpParams, GyroECLPMath.DerivedParams memory derivedECLPParams) = reconstructECLPParams();\n        uint256 invariantBeforeAction = GyroECLPMath.calculateInvariant(balances, eclpParams, derivedECLPParams);\n\n        _distributeFees(invariantBeforeAction);\n\n        (uint256 bptAmountOut, uint256[] memory amountsIn) = _doJoin(balances, userData);\n\n        if (_capParams.capEnabled) {\n            _ensureCap(bptAmountOut, balanceOf(recipient), totalSupply());\n        }\n\n        // Since we pay fees in BPT, they have not changed the invariant and 'invariantBeforeAction' is still consistent with\n        // 'balances'. Therefore, we can use a simplified method to update the invariant that does not require a full\n        // re-computation.\n        // Note: Should this be changed in the future, we also need to reduce the invariant proportionally by the total\n        // protocol fee factor.\n        _lastInvariant = GyroPoolMath.liquidityInvariantUpdate(invariantBeforeAction, bptAmountOut, totalSupply(), true);\n\n        emit InvariantOldAndNew(invariantBeforeAction, _lastInvariant);\n\n        // returns a new uint256[](2) b/c Balancer vault is expecting a fee array, but fees paid in BPT instead\n        return (bptAmountOut, amountsIn, new uint256[](2));\n    }\n\n    function _doJoin(uint256[] memory balances, bytes memory userData) internal view returns (uint256 bptAmountOut, uint256[] memory amountsIn) {\n        BaseWeightedPool.JoinKind kind = userData.joinKind();\n\n        // We do NOT currently support unbalanced update, i.e., EXACT_TOKENS_IN_FOR_BPT_OUT or TOKEN_IN_FOR_EXACT_BPT_OUT\n        if (kind == BaseWeightedPool.JoinKind.ALL_TOKENS_IN_FOR_EXACT_BPT_OUT) {\n            (bptAmountOut, amountsIn) = _joinAllTokensInForExactBPTOut(balances, userData);\n        } else {\n            _revert(Errors.UNHANDLED_JOIN_KIND);\n        }\n    }\n\n    function _joinAllTokensInForExactBPTOut(uint256[] memory balances, bytes memory userData)\n        internal\n        view\n        override\n        returns (uint256, uint256[] memory)\n    {\n        uint256 bptAmountOut = userData.allTokensInForExactBptOut();\n        // Note that there is no maximum amountsIn parameter: this is handled by `IVault.joinPool`.\n\n        uint256[] memory amountsIn = GyroPoolMath._calcAllTokensInGivenExactBptOut(balances, bptAmountOut, totalSupply());\n\n        return (bptAmountOut, amountsIn);\n    }\n\n    /**\n     * @dev Called whenever the Pool is exited.\n     *\n     * Returns the amount of BPT to burn, the token amounts for each Pool token that the Pool will grant in return, and\n     * the number of tokens to pay in protocol swap fees.\n     *\n     * Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n     * performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n     *\n     * BPT will be burnt from `sender`.\n     *\n     * The Pool will grant tokens to `recipient`. These amounts are considered upscaled and will be downscaled\n     * (rounding down) before being returned to the Vault.\n     *\n     * Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onExitPool`). These\n     * amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n     *\n     * protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way\n     */\n    function _onExitPool(\n        bytes32,\n        address,\n        address,\n        uint256[] memory balances,\n        uint256 lastChangeBlock,\n        uint256, // protocolSwapFeePercentage,\n        bytes memory userData\n    )\n        internal\n        override\n        returns (\n            uint256 bptAmountIn,\n            uint256[] memory amountsOut,\n            uint256[] memory dueProtocolFeeAmounts\n        )\n    {\n        // Exits are not completely disabled while the contract is paused: proportional exits (exact BPT in for tokens\n        // out) remain functional.\n        (GyroECLPMath.Params memory eclpParams, GyroECLPMath.DerivedParams memory derivedECLPParams) = reconstructECLPParams();\n\n        // Note: If the contract is paused, swap protocol fee amounts are not charged\n        // to avoid extra calculations and reduce the potential for errors.\n        if (_isNotPaused()) {\n            // Due protocol swap fee amounts are computed by measuring the growth of the invariant between the previous\n            // join or exit event and now - the invariant's growth is due exclusively to swap fees. This avoids\n            // spending gas calculating the fees on each individual swap.\n            uint256 invariantBeforeAction = GyroECLPMath.calculateInvariant(balances, eclpParams, derivedECLPParams);\n\n            _distributeFees(invariantBeforeAction);\n\n            (bptAmountIn, amountsOut) = _doExit(balances, userData);\n\n            // Since we pay fees in BPT, they have not changed the invariant and 'invariantBeforeAction' is still consistent with\n            // 'balances'. Therefore, we can use a simplified method to update the invariant that does not require a full\n            // re-computation.\n            // Note: Should this be changed in the future, we also need to reduce the invariant proportionally by the total\n            // protocol fee factor.\n            _lastInvariant = GyroPoolMath.liquidityInvariantUpdate(invariantBeforeAction, bptAmountIn, totalSupply(), false);\n\n            emit InvariantOldAndNew(invariantBeforeAction, _lastInvariant);\n        } else {\n            // Note: If the contract is paused, swap protocol fee amounts are not charged\n            // to avoid extra calculations and reduce the potential for errors.\n            (bptAmountIn, amountsOut) = _doExit(balances, userData);\n\n            // Invalidate _lastInvariant. We do not compute the invariant to make sure the pool is not locking\n            // up b/c numerical limits might be violated. Instead, we set the invariant such that any following\n            // (non-paused) join/exit will ignore and recompute it. (see GyroPoolMath._calcProtocolFees())\n            _lastInvariant = type(uint256).max;\n        }\n\n        // returns a new uint256[](2) b/c Balancer vault is expecting a fee array, but fees paid in BPT instead\n        return (bptAmountIn, amountsOut, new uint256[](2));\n    }\n\n    function _doExit(uint256[] memory balances, bytes memory userData) internal view returns (uint256 bptAmountIn, uint256[] memory amountsOut) {\n        BaseWeightedPool.ExitKind kind = userData.exitKind();\n\n        // We do NOT support unbalanced exit at the moment, i.e., EXACT_BPT_IN_FOR_ONE_TOKEN_OUT or\n        // BPT_IN_FOR_EXACT_TOKENS_OUT.\n        if (kind == BaseWeightedPool.ExitKind.EXACT_BPT_IN_FOR_TOKENS_OUT) {\n            (bptAmountIn, amountsOut) = _exitExactBPTInForTokensOut(balances, userData);\n        } else {\n            _revert(Errors.UNHANDLED_EXIT_KIND);\n        }\n    }\n\n    function _exitExactBPTInForTokensOut(uint256[] memory balances, bytes memory userData)\n        internal\n        view\n        override\n        returns (uint256, uint256[] memory)\n    {\n        // This exit function is the only one that is not disabled if the contract is paused: it remains unrestricted\n        // in an attempt to provide users with a mechanism to retrieve their tokens in case of an emergency.\n        // This particular exit function is the only one that remains available because it is the simplest one, and\n        // therefore the one with the lowest likelihood of errors.\n\n        uint256 bptAmountIn = userData.exactBptInForTokensOut();\n        // Note that there is no minimum amountOut parameter: this is handled by `IVault.exitPool`.\n\n        uint256[] memory amountsOut = GyroPoolMath._calcTokensOutGivenExactBptIn(balances, bptAmountIn, totalSupply());\n        return (bptAmountIn, amountsOut);\n    }\n\n    // Helpers.\n\n    function _balancesFromTokenInOut(\n        uint256 balanceTokenIn,\n        uint256 balanceTokenOut,\n        bool tokenInIsToken0\n    ) internal pure returns (uint256[] memory balances) {\n        balances = new uint256[](2);\n        if (tokenInIsToken0) {\n            balances[0] = balanceTokenIn;\n            balances[1] = balanceTokenOut;\n        } else {\n            balances[0] = balanceTokenOut;\n            balances[1] = balanceTokenIn;\n        }\n    }\n\n    // Fee helpers. These are exactly the same as in the Gyro2CLPPool.\n    // TODO prob about time to make a base class.\n\n    /**\n     * Note: This function is identical to that used in Gyro2CLPPool.sol\n     * @dev Computes and distributes fees between the Balancer and the Gyro treasury\n     * The fees are computed and distributed in BPT rather than using the\n     * Balancer regular distribution mechanism which would pay these in underlying\n     */\n\n    function _distributeFees(uint256 invariantBeforeAction) internal {\n        // calculate Protocol fees in BPT\n        // lastInvariant is the invariant logged at the end of the last liquidity update\n        // protocol fees are calculated on swap fees earned between liquidity updates\n        (uint256 gyroFees, uint256 balancerFees, address gyroTreasury, address balTreasury) = _getDueProtocolFeeAmounts(\n            _lastInvariant,\n            invariantBeforeAction\n        );\n\n        // Pay fees in BPT\n        _payFeesBpt(gyroFees, balancerFees, gyroTreasury, balTreasury);\n    }\n\n    /**\n     * Note: This function is identical to that used in Gyro2CLPPool.sol\n     * @dev this function overrides inherited function to make sure it is never used\n     */\n    function _getDueProtocolFeeAmounts(\n        uint256[] memory, // balances,\n        uint256[] memory, // normalizedWeights,\n        uint256, // previousInvariant,\n        uint256, // currentInvariant,\n        uint256 // protocolSwapFeePercentage\n    ) internal pure override returns (uint256[] memory) {\n        revert(\"Not implemented\");\n    }\n\n    /**\n     * @dev\n     * Note: This function is identical to that used in Gyro2CLPPool.sol.\n     * Calculates protocol fee amounts in BPT terms.\n     * protocolSwapFeePercentage is not used here b/c we take parameters from GyroConfig instead.\n     * Returns: BPT due to Gyro, BPT due to Balancer, receiving address for Gyro fees, receiving address for Balancer\n     * fees.\n     */\n    function _getDueProtocolFeeAmounts(uint256 previousInvariant, uint256 currentInvariant)\n        internal\n        view\n        returns (\n            uint256,\n            uint256,\n            address,\n            address\n        )\n    {\n        (uint256 protocolSwapFeePerc, uint256 protocolFeeGyroPortion, address gyroTreasury, address balTreasury) = _getFeesMetadata();\n\n        // Early return if the protocol swap fee percentage is zero, saving gas.\n        if (protocolSwapFeePerc == 0) {\n            return (0, 0, gyroTreasury, balTreasury);\n        }\n\n        // Calculate fees in BPT\n        (uint256 gyroFees, uint256 balancerFees) = GyroPoolMath._calcProtocolFees(\n            previousInvariant,\n            currentInvariant,\n            totalSupply(),\n            protocolSwapFeePerc,\n            protocolFeeGyroPortion\n        );\n\n        return (gyroFees, balancerFees, gyroTreasury, balTreasury);\n    }\n\n    // Note: This function is identical to that used in Gyro2CLPPool.sol\n    function _payFeesBpt(\n        uint256 gyroFees,\n        uint256 balancerFees,\n        address gyroTreasury,\n        address balTreasury\n    ) internal {\n        // Pay fees in BPT to gyro treasury\n        if (gyroFees > 0) {\n            _mintPoolTokens(gyroTreasury, gyroFees);\n        }\n        // Pay fees in BPT to bal treasury\n        if (balancerFees > 0) {\n            _mintPoolTokens(balTreasury, balancerFees);\n        }\n    }\n\n    // Note: This function is identical to that used in Gyro2CLPPool.sol\n    function _getFeesMetadata()\n        internal\n        view\n        returns (\n            uint256,\n            uint256,\n            address,\n            address\n        )\n    {\n        return (\n            gyroConfig.getSwapFeePercForPool(address(this), POOL_TYPE),\n            gyroConfig.getProtocolFeeGyroPortionForPool(address(this), POOL_TYPE),\n            gyroConfig.getAddress(GyroConfigKeys.GYRO_TREASURY_KEY),\n            gyroConfig.getAddress(GyroConfigKeys.BAL_TREASURY_KEY)\n        );\n    }\n\n    function _setPausedState(bool paused) internal override {\n        _setPaused(paused);\n    }\n\n    // Rate scaling\n\n    function _scalingFactor(bool token0) internal view override returns (uint256) {\n        IRateProvider rateProvider;\n        uint256 scalingFactor;\n        if (token0) {\n            rateProvider = rateProvider0;\n            scalingFactor = _scalingFactor0;\n        } else {\n            rateProvider = rateProvider1;\n            scalingFactor = _scalingFactor1;\n        }\n        if (address(rateProvider) != address(0)) scalingFactor = scalingFactor.mulDown(rateProvider.getRate());\n        return scalingFactor;\n    }\n\n    function _adjustPrice(uint256 spotPrice) internal view override returns (uint256) {\n        if (address(rateProvider0) != address(0)) spotPrice = spotPrice.mulDown(rateProvider0.getRate());\n        if (address(rateProvider1) != address(0)) spotPrice = spotPrice.divDown(rateProvider1.getRate());\n        return spotPrice;\n    }\n\n    /// @notice Convenience function to fetch the two rates used for scaling the two tokens, as of rateProvider{0,1}.\n    /// Note that these rates do *not* contain scaling to account for differences in the number of decimals. The rates\n    /// themselves are always 18-decimals.\n    function getTokenRates() public view returns (uint256 rate0, uint256 rate1) {\n        rate0 = address(rateProvider0) != address(0) ? rateProvider0.getRate() : GyroFixedPoint.ONE;\n        rate1 = address(rateProvider1) != address(0) ? rateProvider1.getRate() : GyroFixedPoint.ONE;\n    }\n}\n", "sourceMap": "969:29763:46:-:0;;;873:95:29;820:148;;2160:4:43;2113:51;;;;2170;;2486:1;2436:51;;2831:1493:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3034:19;;;;;2973:17;;;;;2992:16;;;;;2930:17;;4335:26:43;;;;4363:27;;;;4221:11;;;;;4234:13;;;;;4249:12;;2020:280:27;;;;;;;;;;;-1:-1:-1;;;2020:280:27;;;;4293:12:43;;;;4181:10;-1:-1:-1;1929:46:12;-1:-1:-1;1749:14:4;-1:-1:-1;;;;;;1749:14:4;;;;2002:13:28;;3034:19:46;;2973:17;;2992:16;;2930:17;;4335:26:43;4363:27;;4221:11;;4234:13;;4249:12;;4221:11;;;;2020:280:27;;4221:11:43;;4234:13;;2002::28;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2025:17:28;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2052:9:28;:14;;2064:2;-1:-1:-1;;2052:14:28;;;;;;-1:-1:-1;2100:22:27;;;;;;;2085:37;;2150:25;;;;;2132:43;;-1:-1:-1;2198:95:27;2052:14:28;2185:108:27;1852:14:1::2;::::0;-1:-1:-1;;;;;;1852:14:1;::::2;::::0;-1:-1:-1;2458:93:21;;-1:-1:-1;2164:7:21;2467:49;;;8518:3:13;2458:8:21;:93::i;:::-;2561:96;2232:7;2570:51;;;8582:3:13;2561:8:21;:96::i;:::-;2697:15;:37;;;;2745:40;;;;2818:41;2795:64;;4431:15:43::4;::::0;;4444:1:::4;4431:15:::0;;;;;::::4;::::0;;2668:26:21;;4431:15:43::4;::::0;::::4;::::0;;::::4;::::0;::::4;;::::0;-1:-1:-1;4431:15:43::4;4406:40;;4468:6;:13;;;4456:6;4463:1;4456:9;;;;;;;;-1:-1:-1::0;;;;;4456:25:43;;::::4;:9;::::0;;::::4;::::0;;;;;;;:25;4503:13:::4;::::0;::::4;::::0;4491:9;;:6;;-1:-1:-1;;4491:9:43;::::4;;;;;-1:-1:-1::0;;;;;4491:25:43;;::::4;:9;::::0;;::::4;::::0;;;;;;:25;4681:40:::4;::::0;4714:6;;4681:32:::4;;::::0;::::4;;:40:::0;::::4;:::i;:::-;4754:24;::::0;::::4;::::0;4732:47:::4;::::0;:21:::4;:47::i;:::-;4807:12:::0;;:62:::4;::::0;-1:-1:-1;;;4807:62:43;;4790:14:::4;::::0;-1:-1:-1;;;;;4807:25:43::4;::::0;-1:-1:-1;;4807:62:43::4;::::0;4833:35:::4;::::0;4807:62:::4;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4933:12:::0;;4977:16:::4;::::0;;4991:1:::4;4977:16:::0;;;;;::::4;::::0;;4790:79;;-1:-1:-1;;;;;;4933:27:43;;::::4;::::0;::::4;::::0;4790:79;;4969:6;;4991:1;4977:16:::4;::::0;::::4;::::0;;::::4;::::0;::::4;;::::0;-1:-1:-1;4977:16:43::4;4933:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;::::0;::::4;;;;;-1:-1:-1::0;;;5094:16:43::4;::::0;;;-1:-1:-1;5131:13:43::4;::::0;;::::4;::::0;;5121:23;;-1:-1:-1;;;;;;5121:23:43;;;::::4;::::0;5164:13:::4;::::0;::::4;::::0;5154:23;;;;;;::::4;::::0;5228:13;5206:36:::4;::::0;:21:::4;:36::i;:::-;5188:54;::::0;5292:13:::4;::::0;::::4;::::0;5270:36:::4;::::0;:21:::4;:36::i;:::-;5252:54;::::0;-1:-1:-1;;1217:15:42;;;;;;;;;;;;-1:-1:-1;;;1217:15:42;;;;;-1:-1:-1;;;;;;1190:25:42;;1182:51;;;;-1:-1:-1;;;1182:51:42;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;1243:10:42;:24;;-1:-1:-1;;;;;;1243:24:42;-1:-1:-1;;;;;1243:24:42;;;;;;1301:17;;1277:10;:41;;1355:20;;;;1408:16;;;;;-1:-1:-1;;1277:41:42;;;;;;;;;;-1:-1:-1;;1328:47:42;-1:-1:-1;;;;;;1328:47:42;;;;;;;;;;;-1:-1:-1;;;;;1385:39:42;;;-1:-1:-1;;;1385:39:42;;;;;;;;639:63:44;;649:27;;;;4607:3:56;639:9:44;:63::i;:::-;712:12;:28;;-1:-1:-1;;;;;;712:28:44;-1:-1:-1;;;;;712:28:44;;;;;;3069:84:46::3;::::0;3079:29;::::3;::::0;::::3;320:3:47;3069:9:46;:84::i;:::-;3164:46;3192:6;:17;;;3164:27;;;;;:46;;:::i;:::-;3225:25;3245:4;3225:25;;;;;;:::i;:::-;;;;;;;;3302:17;::::0;::::3;::::0;3321:24:::3;::::0;;::::3;::::0;3261:85;;-1:-1:-1;;;3261:85:46;;:12:::3;::::0;-1:-1:-1;;3261:85:46::3;::::0;::::3;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;3361:32;3388:4;3361:32;;;;;;:::i;:::-;;;;;;;;3483:17;::::0;;::::3;::::0;:23;;3520:22;;::::3;::::0;3556:19:::3;::::0;;::::3;::::0;3589::::3;::::0;;::::3;::::0;3622:24:::3;::::0;;::::3;::::0;3404:252:::3;::::0;::::3;::::0;::::3;::::0;;;;::::3;::::0;;;;::::3;::::0;;;;3752:24;;::::3;::::0;:33;;:35;;3801;;::::3;::::0;3850:32;;::::3;::::0;:34;;3898;::::3;::::0;3946:26;;::::3;::::0;3986;;::::3;::::0;4026;;::::3;::::0;4066::::3;::::0;::::3;::::0;4106:28:::3;::::0;;::::3;::::0;3667:477:::3;::::0;::::3;::::0;;;;::::3;::::0;;;;::::3;::::0;;;;::::3;::::0;;;;::::3;::::0;;;;::::3;::::0;;;;::::3;::::0;;;;::::3;::::0;4155:10:::3;:39:::0;;-1:-1:-1;;;;;;4155:39:46::3;-1:-1:-1::0;;;;;4155:39:46;;;::::3;::::0;;;::::3;::::0;;;4235:20;;::::3;::::0;4205:51;;-1:-1:-1;;;;;;4205:51:46;;;::::3;::::0;4296:20;;;::::3;::::0;4266:51;;;;::::3;::::0;969:29763;;866:101:13;935:9;930:34;;946:18;954:9;946:7;:18::i;:::-;866:101;;:::o;1135:274:19:-;1345:5;1369:33;1345:5;1369:19;:33::i;6672:397:43:-;6748:87;1722:4;6757:45;;;5289:3:13;6748:8:43;:87::i;:::-;6845;1795:4;6854:45;;;5228:3:13;6845:8:43;:87::i;:::-;6955:49;6986:17;6955:9;;:30;;;;;;:49;;;;:::i;:::-;6943:9;:61;7019:43;;;;;;7044:17;;7019:43;:::i;:::-;;;;;;;;6672:397;:::o;34759:420::-;34826:7;34925:21;34963:5;-1:-1:-1;;;;;34949:30:43;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;34925:56;;;;35056:26;35085:27;35094:2;35098:13;35085:8;;;;;:27;;:::i;:::-;35129:2;:22;795:4:57;35129:43:43;;-1:-1:-1;;;34759:420:43;;;;:::o;388:103:56:-;458:9;453:35;;469:19;478:9;469:8;:19::i;4100:704:45:-;4170:85;4185:6;:8;;;4180:1;:13;;:32;;;;;1169:4;4197:6;:8;;;:15;;4180:32;509:3:47;4170:9:45;:85::i;:::-;4265;4280:6;:8;;;4275:1;:13;;:32;;;;;1169:4;4292:6;:8;;;:15;;509:3:47;4265:9:45;:85::i;:::-;4381:27;;;;;;;;4389:8;;;;4381:27;;4399:8;;;;4381:27;;;;4361:17;4435:18;4381:27;;4435:10;:18::i;:::-;4418:35;-1:-1:-1;4479:194:45;4502:36;:47;-1:-1:-1;4502:47:45;;;:98;;-1:-1:-1;4564:36:45;4553:47;;;4502:98;577:3:47;4479:9:45;:194::i;:::-;4684:113;4699:6;:13;;;4694:1;:18;;:58;;;;;1656:4;4716:6;:13;;;:36;;4694:58;817:3:47;4684:9:45;:113::i;:::-;4100:704;;;:::o;1074:3172:13:-;-1:-1:-1;;;3588:3:13;3581:79;;;3799:66;3793:4;3786:80;3941:1;3935:4;3928:15;2210:2;2243:18;;;2336;;;2383;;;2215:4;2379:29;;;3057:2;3053:17;2195:18;;;;2288;;;;2284:29;;;;3040:1;3036:14;3025:26;;;;3021:50;;;;2999:73;;2994:3;2990:83;4008:4;4001:26;4234:3;;4224:14;1415:374:19;1511:1;1496:5;:12;:16;1492:53;;;1528:7;;1492:53;1555:16;1574:5;1580:1;1574:8;;;;;;;;;;;;;;1555:27;;1597:9;1609:1;1597:13;;1592:191;1616:5;:12;1612:1;:16;1592:191;;;1649:15;1667:5;1673:1;1667:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;1689:51:19;-1:-1:-1;;;;;1698:18:19;;;;;;;4890:3:13;1689:8:19;:51::i;:::-;1765:7;-1:-1:-1;1630:3:19;;1592:191;;1415:374;;:::o;5083:194:10:-;5178:7;5204:66;5222:18;2155:2;5204:4;:17;;;;;;:66;;;;;:::i;:::-;5197:73;5083:194;-1:-1:-1;;;5083:194:10:o;948:166:25:-;1006:7;1025:37;1034:6;;;;4370:1:13;1025:8:25;:37::i;:::-;-1:-1:-1;1084:5:25;;;948:166::o;925:128:56:-;973:29;982:9;-1:-1:-1;;;973:8:56;:29::i;6472:164:45:-;6553:10;6581:48;6607:21;6623:2;:4;;;6607:2;:4;;;:15;;;;;;:21;;;;:::i;:::-;6597:4;;6581;;:21;;:15;;;;;;;:21;;:::i;:::-;:25;;;;;;:48;;;;:::i;6887:269:22:-;-1:-1:-1;7074:18:22;;7072:21;7056:37;;;;7133:15;;7111:38;;6887:269::o;1160:3379:56:-;-1:-1:-1;;;1223:18:56;3874:79;;;4092:66;4086:4;4079:80;4234:1;4228:4;4221:15;2362:2;2395:18;;;2440;;;2367:4;2436:29;;;3238:1;3329:14;2347:18;;;;3318:26;;;;2488:18;;;;2535;;;2531:29;;3350:2;3346:17;3314:50;3228:4;3234:18;;;;;;3224:29;3220:2;3216:38;3293:72;;;;3288:3;3284:82;4301:4;4294:26;1252:14;;;;;4527:3;;4517:14;1970:222:59;2033:6;2068:5;;;2089:6;;;:26;;;2114:1;2109;2099:7;:11;;;;;;:16;2089:26;2083:71;;2118:36;2127:5;4467:1:13;2118:8:59;:36::i;:::-;838:4;2172:13;;;;-1:-1:-1;;;1970:222:59:o;1137:266::-;1193:6;1295:5;;;1316:6;;;;:23;;1338:1;1334;:5;1316:23;;;1330:1;1325;:6;;1316:23;1310:68;;1342:36;1351:5;;1342:8;:36::i;969:29763:46:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;969:29763:46;;;-1:-1:-1;969:29763:46;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:179:60;95:13;;-1:-1:-1;;;;;137:31:60;;127:42;;117:2;;183:1;180;173:12;198:505;;307:3;300:4;292:6;288:17;284:27;274:2;;329:5;322;315:20;274:2;356:13;;-1:-1:-1;381:26:60;;378:2;;;410:9;378:2;445:54;493:4;-1:-1:-1;;487:2:60;468:13;;464:27;460:38;445:54;:::i;:::-;524:2;515:7;508:19;570:3;563:4;558:2;550:6;546:15;542:26;539:35;536:2;;;591:5;584;577:20;536:2;608:64;669:2;662:4;653:7;649:18;642:4;634:6;630:17;608:64;:::i;:::-;690:7;264:439;-1:-1:-1;;;;264:439:60:o;708:864::-;;826:4;814:9;809:3;805:19;801:30;798:2;;;848:5;841;834:20;798:2;885;879:9;927:4;915:17;;983:22;;;-1:-1:-1;947:34:60;;944:62;941:2;;;1009:9;941:2;1040:10;1036:2;1029:22;;1069:6;1060:15;;1105:9;1099:16;1160:7;1153:15;1146:23;1137:7;1134:36;1124:2;;1184:1;1181;1174:12;1124:2;1197:23;;1265:2;1250:18;;1244:25;-1:-1:-1;;;;;1300:33:60;;1288:46;;1278:2;;1348:1;1345;1338:12;1278:2;1380;1368:15;;1361:32;1438:2;1423:18;;1417:25;-1:-1:-1;;;;;1473:33:60;;1461:46;;1451:2;;1521:1;1518;1511:12;1451:2;1553;1541:15;;;;1534:32;788:784;;-1:-1:-1;;788:784:60:o;1577:865::-;;1699:6;1687:9;1682:3;1678:19;1674:32;1671:2;;;1723:5;1716;1709:20;1671:2;1760;1754:9;1802:4;1790:17;;1858:22;;;-1:-1:-1;1822:34:60;;1819:62;1816:2;;;1884:9;1816:2;1911;1904:22;1944:6;-1:-1:-1;1944:6:60;1974:55;2025:3;2014:9;1974:55;:::i;:::-;1966:6;1959:71;2065:64;2125:3;2120:2;2109:9;2105:18;2065:64;:::i;:::-;2058:4;2050:6;2046:17;2039:91;2184:3;2173:9;2169:19;2163:26;2158:2;2150:6;2146:15;2139:51;2246:3;2235:9;2231:19;2225:26;2218:4;2210:6;2206:17;2199:53;2307:3;2296:9;2292:19;2286:26;2280:3;2272:6;2268:16;2261:52;2368:4;2357:9;2353:20;2347:27;2341:3;2333:6;2329:16;2322:53;2430:3;2419:9;2415:19;2409:26;2403:3;2395:6;2391:16;2384:52;;1661:781;;;;:::o;2447:1148::-;;2551:6;2594:2;2582:9;2577:3;2573:19;2569:28;2566:2;;;2614:5;2607;2600:20;2566:2;2640:18;2655:2;2640:18;:::i;:::-;2631:27;;;2681:42;2713:9;2681:42;:::i;:::-;2667:57;;2768:2;2753:18;;2747:25;-1:-1:-1;2821:14:60;;;2818:2;;;2848:1;2845;2838:12;2818:2;2884:59;2939:3;2930:6;2919:9;2915:22;2884:59;:::i;:::-;2879:2;2872:5;2868:14;2861:83;2990:2;2979:9;2975:18;2969:25;2953:41;;3019:2;3009:8;3006:16;3003:2;;;3035:1;3032;3025:12;3003:2;;3071:61;3128:3;3117:8;3106:9;3102:24;3071:61;:::i;:::-;3066:2;3059:5;3055:14;3048:85;;3165:51;3212:2;3201:9;3197:18;3165:51;:::i;:::-;3160:2;3153:5;3149:14;3142:75;3250:52;3297:3;3286:9;3282:19;3250:52;:::i;:::-;3244:3;3237:5;3233:15;3226:77;3357:3;3346:9;3342:19;3336:26;3330:3;3323:5;3319:15;3312:51;3417:3;3406:9;3402:19;3396:26;3390:3;3383:5;3379:15;3372:51;3477:3;3466:9;3462:19;3456:26;3450:3;3443:5;3439:15;3432:51;3502:3;3537:51;3584:2;3573:9;3569:18;3537:51;:::i;:::-;3521:14;;;3514:75;3525:5;2531:1064;-1:-1:-1;;2531:1064:60:o;3600:649::-;;3715:4;3703:9;3698:3;3694:19;3690:30;3687:2;;;3737:5;3730;3723:20;3687:2;3774;3768:9;3816:4;3804:17;;3872:22;;;-1:-1:-1;3836:34:60;;3833:62;3830:2;;;3898:9;3830:2;3929:10;3925:2;3918:22;;3958:6;3949:15;;3994:9;3988:16;3980:6;3973:32;4059:2;4048:9;4044:18;4038:25;4033:2;4025:6;4021:15;4014:50;4118:2;4107:9;4103:18;4097:25;4092:2;4084:6;4080:15;4073:50;4177:2;4166:9;4162:18;4156:25;4151:2;4143:6;4139:15;4132:50;4237:3;4226:9;4222:19;4216:26;4210:3;4202:6;4198:16;4191:52;;3677:572;;;;:::o;4254:475::-;;4370:4;4358:9;4353:3;4349:19;4345:30;4342:2;;;4392:5;4385;4378:20;4342:2;4429:4;4423:11;;;4461:17;;4529:22;;;-1:-1:-1;4493:34:60;;4490:62;4487:2;;;4555:9;4487:2;4582:4;4575:24;4647:16;;4632:32;;4718:2;4703:18;;;4697:25;4680:15;;;4673:50;;;;-1:-1:-1;4617:6:60;4332:397;-1:-1:-1;4332:397:60:o;4734:194::-;;4857:2;4845:9;4836:7;4832:23;4828:32;4825:2;;;4878:6;4870;4863:22;4825:2;-1:-1:-1;4906:16:60;;4815:113;-1:-1:-1;4815:113:60:o;4933:1378::-;;;5101:2;5089:9;5080:7;5076:23;5072:32;5069:2;;;5122:6;5114;5107:22;5069:2;5154:16;;-1:-1:-1;5219:14:60;;;5216:2;;;5251:6;5243;5236:22;5216:2;5279:22;;;;5335:6;5317:16;;;5313:29;5310:2;;;5360:6;5352;5345:22;5310:2;5391:22;5406:6;5391:22;:::i;:::-;5444:2;5438:9;5472:2;5462:8;5459:16;5456:2;;;5493:6;5485;5478:22;5456:2;5525:73;5590:7;5579:8;5575:2;5571:17;5525:73;:::i;:::-;5518:5;5511:88;;5631:60;5683:7;5678:2;5674;5670:11;5631:60;:::i;:::-;5626:2;5619:5;5615:14;5608:84;5724:68;5784:7;5778:3;5774:2;5770:12;5724:68;:::i;:::-;5719:2;5712:5;5708:14;5701:92;5827:45;5867:3;5863:2;5859:12;5827:45;:::i;:::-;5820:4;5813:5;5809:16;5802:71;5907:45;5947:3;5943:2;5939:12;5907:45;:::i;:::-;5900:4;5893:5;5889:16;5882:71;5987:45;6027:3;6023:2;6019:12;5987:45;:::i;:::-;5980:4;5973:5;5969:16;5962:71;6066:64;6122:7;6116:3;6112:2;6108:12;6066:64;:::i;:::-;6060:3;6053:5;6049:15;6042:89;6165:45;6205:3;6201:2;6197:12;6165:45;:::i;:::-;6158:4;6147:16;;6140:71;6151:5;-1:-1:-1;6254:51:60;;-1:-1:-1;;6301:2:60;6286:18;;6254:51;:::i;:::-;6244:61;;5059:1252;;;;;:::o;6316:293::-;;6437:2;6425:9;6416:7;6412:23;6408:32;6405:2;;;6458:6;6450;6443:22;6405:2;6495:9;6489:16;6545:4;6538:5;6534:16;6527:5;6524:27;6514:2;;6570:6;6562;6555:22;6614:151;6690:12;;6678:25;;6752:4;6741:16;;;6735:23;6719:14;;6712:47;6668:97::o;6770:187::-;6935:14;;6928:22;6910:41;;6898:2;6883:18;;6865:92::o;6962:1296::-;;7274:2;7263:9;7259:18;7304:6;7293:9;7286:25;7330:2;7368;7363;7352:9;7348:18;7341:30;7391:6;7426;7420:13;7457:6;7449;7442:22;7495:3;7484:9;7480:19;7473:26;;7534:2;7526:6;7522:15;7508:29;;7555:4;7568:195;7582:6;7579:1;7576:13;7568:195;;;7647:13;;-1:-1:-1;;;;;7643:39:60;7631:52;;7738:15;;;;7703:12;;;;-1:-1:-1;7597:9:60;7568:195;;;-1:-1:-1;;7799:19:60;;;7794:2;7779:18;;7772:47;7869:13;;7891:21;;;7930:12;;;;-1:-1:-1;7967:15:60;;;;8002:4;8015:215;8031:8;8026:3;8023:17;8015:215;;;8104:15;;-1:-1:-1;;;;;8100:41:60;8086:56;;8164:14;;;;8203:17;;;;-1:-1:-1;8050:11:60;8015:215;;;-1:-1:-1;8247:5:60;;7235:1023;-1:-1:-1;;;;;;;;7235:1023:60:o;8263:246::-;8419:2;8404:18;;8452:1;8441:13;;8431:2;;8458:9;8431:2;8478:25;;;8386:123;:::o;8514:383::-;;8663:2;8652:9;8645:21;8695:6;8689:13;8738:6;8733:2;8722:9;8718:18;8711:34;8754:66;8813:6;8808:2;8797:9;8793:18;8788:2;8780:6;8776:15;8754:66;:::i;:::-;8881:2;8860:15;-1:-1:-1;;8856:29:60;8841:45;;;;8888:2;8837:54;;8635:262;-1:-1:-1;;8635:262:60:o;8902:1082::-;;9174:3;9163:9;9159:19;9151:27;;9211:6;9205:13;9194:9;9187:32;9275:4;9267:6;9263:17;9257:24;9250:4;9239:9;9235:20;9228:54;9338:4;9330:6;9326:17;9320:24;9313:4;9302:9;9298:20;9291:54;9401:4;9393:6;9389:17;9383:24;9376:4;9365:9;9361:20;9354:54;9464:4;9456:6;9452:17;9446:24;9439:4;9428:9;9424:20;9417:54;9480:64;9539:3;9528:9;9524:19;9515:6;9509:13;9480:64;:::i;:::-;9591:4;9583:6;9579:17;9573:24;9606:63;9664:3;9653:9;9649:19;9635:12;9606:63;:::i;:::-;;9724:4;9716:6;9712:17;9706:24;9700:3;9689:9;9685:19;9678:53;9786:4;9778:6;9774:17;9768:24;9762:3;9751:9;9747:19;9740:53;9848:4;9840:6;9836:17;9830:24;9824:3;9813:9;9809:19;9802:53;9910:3;9902:6;9898:16;9892:23;9886:3;9875:9;9871:19;9864:52;9971:4;9963:6;9959:17;9953:24;9947:3;9936:9;9932:19;9925:53;9141:843;;;;;:::o;9989:177::-;10135:25;;;10123:2;10108:18;;10090:76::o;10171:242::-;10241:2;10235:9;10271:17;;;10339:22;;;-1:-1:-1;10303:34:60;;10300:62;10297:2;;;10365:9;10297:2;10392;10385:22;10215:198;;-1:-1:-1;10215:198:60:o;10418:258::-;10490:1;10500:113;10514:6;10511:1;10508:13;10500:113;;;10590:11;;;10584:18;10571:11;;;10564:39;10536:2;10529:10;10500:113;;;10631:6;10628:1;10625:13;10622:2;;;10666:1;10657:6;10652:3;10648:16;10641:27;10622:2;;10471:205;;;:::o;:::-;969:29763:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/eclp/GyroECLPPool.sol", "type": "contract", "deployment": {"address": "0xf0ad209e2e969EAAA8C882aac71f02D8a047d5c2", "chainid": "137", "blockHeight": 41733877}}