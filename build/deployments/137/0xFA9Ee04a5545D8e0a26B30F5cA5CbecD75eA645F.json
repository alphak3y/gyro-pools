{"abi": [{"inputs": [{"components": [{"components": [{"internalType": "contract IVault", "name": "vault", "type": "address"}, {"internalType": "string", "name": "name", "type": "string"}, {"internalType": "string", "name": "symbol", "type": "string"}, {"internalType": "contract IERC20", "name": "token0", "type": "address"}, {"internalType": "contract IERC20", "name": "token1", "type": "address"}, {"internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}, {"internalType": "uint256", "name": "pauseWindowDuration", "type": "uint256"}, {"internalType": "uint256", "name": "bufferPeriodDuration", "type": "uint256"}, {"internalType": "bool", "name": "oracleEnabled", "type": "bool"}, {"internalType": "address", "name": "owner", "type": "address"}], "internalType": "struct ExtensibleWeightedPool2Tokens.NewPoolParams", "name": "baseParams", "type": "tuple"}, {"internalType": "uint256", "name": "sqrtAlpha", "type": "uint256"}, {"internalType": "uint256", "name": "sqrtBeta", "type": "uint256"}, {"internalType": "address", "name": "capManager", "type": "address"}, {"components": [{"internalType": "bool", "name": "capEnabled", "type": "bool"}, {"internalType": "uint120", "name": "perAddressCap", "type": "uint120"}, {"internalType": "uint128", "name": "globalCap", "type": "uint128"}], "internalType": "struct ICappedLiquidity.CapParams", "name": "capParams", "type": "tuple"}, {"internalType": "address", "name": "pauseManager", "type": "address"}], "internalType": "struct Gyro2CLPPool.GyroParams", "name": "params", "type": "tuple"}, {"internalType": "address", "name": "configAddress", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "owner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "spender", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Approval", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "capManager", "type": "address"}], "name": "CapManagerUpdated", "type": "event"}, {"anonymous": false, "inputs": [{"components": [{"internalType": "bool", "name": "capEnabled", "type": "bool"}, {"internalType": "uint120", "name": "perAddressCap", "type": "uint120"}, {"internalType": "uint128", "name": "globalCap", "type": "uint128"}], "indexed": false, "internalType": "struct ICappedLiquidity.CapParams", "name": "params", "type": "tuple"}], "name": "CapParamsUpdated", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bool", "name": "enabled", "type": "bool"}], "name": "OracleEnabledChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "oldPauseManager", "type": "address"}, {"indexed": false, "internalType": "address", "name": "newPauseManager", "type": "address"}], "name": "PauseManagerChanged", "type": "event"}, {"anonymous": false, "inputs": [], "name": "PausedLocally", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bool", "name": "paused", "type": "bool"}], "name": "PausedStateChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}], "name": "SwapFeePercentageChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "from", "type": "address"}, {"indexed": true, "internalType": "address", "name": "to", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Transfer", "type": "event"}, {"anonymous": false, "inputs": [], "name": "UnpausedLocally", "type": "event"}, {"inputs": [], "name": "DOMAIN_SEPARATOR", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "spender", "type": "address"}], "name": "allowance", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "approve", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "balanceOf", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "balanceTokenIn", "type": "uint256"}, {"internalType": "uint256", "name": "balanceTokenOut", "type": "uint256"}, {"internalType": "bool", "name": "tokenInIsToken0", "type": "bool"}], "name": "calculateCurrentValues", "outputs": [{"internalType": "uint256", "name": "currentInvariant", "type": "uint256"}, {"internalType": "uint256", "name": "virtualParamIn", "type": "uint256"}, {"internalType": "uint256", "name": "virtualParamOut", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "capManager", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "capParams", "outputs": [{"components": [{"internalType": "bool", "name": "capEnabled", "type": "bool"}, {"internalType": "uint120", "name": "perAddressCap", "type": "uint120"}, {"internalType": "uint128", "name": "globalCap", "type": "uint128"}], "internalType": "struct ICappedLiquidity.CapParams", "name": "", "type": "tuple"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_pauseManager", "type": "address"}], "name": "changePauseManager", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "decimals", "outputs": [{"internalType": "uint8", "name": "", "type": "uint8"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "decreaseAllowance", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "startIndex", "type": "uint256"}, {"internalType": "uint256", "name": "endIndex", "type": "uint256"}], "name": "dirtyUninitializedOracleSamples", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "enableOracle", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes4", "name": "selector", "type": "bytes4"}], "name": "getActionId", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getAuthorizer", "outputs": [{"internalType": "contract IAuthorizer", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getInvariant", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getLargestSafeQueryWindow", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "pure", "type": "function"}, {"inputs": [], "name": "getLastInvariant", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "enum IPriceOracle.Variable", "name": "variable", "type": "uint8"}], "name": "getLatest", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getMiscData", "outputs": [{"internalType": "int256", "name": "logInvariant", "type": "int256"}, {"internalType": "int256", "name": "logTotalSupply", "type": "int256"}, {"internalType": "uint256", "name": "oracleSampleCreationTimestamp", "type": "uint256"}, {"internalType": "uint256", "name": "oracleIndex", "type": "uint256"}, {"internalType": "bool", "name": "oracleEnabled", "type": "bool"}, {"internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getNormalizedWeights", "outputs": [{"internalType": "uint256[]", "name": "", "type": "uint256[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getOwner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"components": [{"internalType": "enum IPriceOracle.Variable", "name": "variable", "type": "uint8"}, {"internalType": "uint256", "name": "ago", "type": "uint256"}], "internalType": "struct IPriceOracle.OracleAccumulatorQuery[]", "name": "queries", "type": "tuple[]"}], "name": "getPastAccumulators", "outputs": [{"internalType": "int256[]", "name": "results", "type": "int256[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getPausedState", "outputs": [{"internalType": "bool", "name": "paused", "type": "bool"}, {"internalType": "uint256", "name": "pauseWindowEndTime", "type": "uint256"}, {"internalType": "uint256", "name": "bufferPeriodEndTime", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getPoolId", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getRate", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "index", "type": "uint256"}], "name": "getSample", "outputs": [{"internalType": "int256", "name": "logPairPrice", "type": "int256"}, {"internalType": "int256", "name": "accLogPairPrice", "type": "int256"}, {"internalType": "int256", "name": "logBptPrice", "type": "int256"}, {"internalType": "int256", "name": "accLogBptPrice", "type": "int256"}, {"internalType": "int256", "name": "logInvariant", "type": "int256"}, {"internalType": "int256", "name": "accLogInvariant", "type": "int256"}, {"internalType": "uint256", "name": "timestamp", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getSqrtParameters", "outputs": [{"internalType": "uint256[2]", "name": "", "type": "uint256[2]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getSwapFeePercentage", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"components": [{"internalType": "enum IPriceOracle.Variable", "name": "variable", "type": "uint8"}, {"internalType": "uint256", "name": "secs", "type": "uint256"}, {"internalType": "uint256", "name": "ago", "type": "uint256"}], "internalType": "struct IPriceOracle.OracleAverageQuery[]", "name": "queries", "type": "tuple[]"}], "name": "getTimeWeightedAverage", "outputs": [{"internalType": "uint256[]", "name": "results", "type": "uint256[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getTotalSamples", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "pure", "type": "function"}, {"inputs": [], "name": "getVault", "outputs": [{"internalType": "contract IVault", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getVirtualParameters", "outputs": [{"internalType": "uint256[]", "name": "virtualParams", "type": "uint256[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "gyroConfig", "outputs": [{"internalType": "contract IGyroConfig", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "addedValue", "type": "uint256"}], "name": "increaseAllowance", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "name", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}], "name": "nonces", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "onExitPool", "outputs": [{"internalType": "uint256[]", "name": "", "type": "uint256[]"}, {"internalType": "uint256[]", "name": "", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "onJoinPool", "outputs": [{"internalType": "uint256[]", "name": "amountsIn", "type": "uint256[]"}, {"internalType": "uint256[]", "name": "dueProtocolFeeAmounts", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"components": [{"internalType": "enum IVault.SwapKind", "name": "kind", "type": "uint8"}, {"internalType": "contract IERC20", "name": "tokenIn", "type": "address"}, {"internalType": "contract IERC20", "name": "tokenOut", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}, {"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "address", "name": "from", "type": "address"}, {"internalType": "address", "name": "to", "type": "address"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "internalType": "struct IPoolSwapStructs.SwapRequest", "name": "request", "type": "tuple"}, {"internalType": "uint256", "name": "balanceTokenIn", "type": "uint256"}, {"internalType": "uint256", "name": "balanceTokenOut", "type": "uint256"}], "name": "onSwap", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "pause", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "pauseManager", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "value", "type": "uint256"}, {"internalType": "uint256", "name": "deadline", "type": "uint256"}, {"internalType": "uint8", "name": "v", "type": "uint8"}, {"internalType": "bytes32", "name": "r", "type": "bytes32"}, {"internalType": "bytes32", "name": "s", "type": "bytes32"}], "name": "permit", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "queryExit", "outputs": [{"internalType": "uint256", "name": "bptIn", "type": "uint256"}, {"internalType": "uint256[]", "name": "amountsOut", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "queryJoin", "outputs": [{"internalType": "uint256", "name": "bptOut", "type": "uint256"}, {"internalType": "uint256[]", "name": "amountsIn", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_capManager", "type": "address"}], "name": "setCapManager", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"components": [{"internalType": "bool", "name": "capEnabled", "type": "bool"}, {"internalType": "uint120", "name": "perAddressCap", "type": "uint120"}, {"internalType": "uint128", "name": "globalCap", "type": "uint128"}], "internalType": "struct ICappedLiquidity.CapParams", "name": "params", "type": "tuple"}], "name": "setCapParams", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bool", "name": "paused", "type": "bool"}], "name": "setPaused", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}], "name": "setSwapFeePercentage", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "symbol", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "totalSupply", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transfer", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transferFrom", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "unpause", "outputs": [], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"0": "contracts/2clp/Gyro2CLPMath.sol", "1": "contracts/2clp/Gyro2CLPOracleMath.sol", "110": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IAsset.sol", "111": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IAuthorizer.sol", "112": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IBasePool.sol", "113": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IFlashLoanRecipient.sol", "115": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IMinimalSwapInfoPool.sol", "116": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IPoolSwapStructs.sol", "117": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IProtocolFeesCollector.sol", "118": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IVault.sol", "14": "contracts/CappedLiquidity.sol", "15": "contracts/ExtensibleWeightedPool2Tokens.sol", "17": "contracts/LocallyPausable.sol", "2": "contracts/2clp/Gyro2CLPPool.sol", "3": "contracts/2clp/Gyro2CLPPoolErrors.sol", "35": "interfaces/ICappedLiquidity.sol", "38": "interfaces/IGyroConfig.sol", "39": "interfaces/ILocallyPausable.sol", "40": "libraries/GyroConfigKeys.sol", "41": "libraries/GyroErrors.sol", "42": "libraries/GyroFixedPoint.sol", "43": "libraries/GyroPoolMath.sol", "46": "node_modules/@balancer-labs/v2-pool-utils/contracts/BalancerPoolToken.sol", "49": "node_modules/@balancer-labs/v2-pool-utils/contracts/BasePoolAuthorization.sol", "52": "node_modules/@balancer-labs/v2-pool-utils/contracts/interfaces/IPoolPriceOracle.sol", "53": "node_modules/@balancer-labs/v2-pool-utils/contracts/interfaces/IPriceOracle.sol", "54": "node_modules/@balancer-labs/v2-pool-utils/contracts/oracle/Buffer.sol", "55": "node_modules/@balancer-labs/v2-pool-utils/contracts/oracle/PoolPriceOracle.sol", "56": "node_modules/@balancer-labs/v2-pool-utils/contracts/oracle/QueryProcessor.sol", "57": "node_modules/@balancer-labs/v2-pool-utils/contracts/oracle/Samples.sol", "59": "node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedMath.sol", "61": "node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol", "62": "node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol", "63": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/Authentication.sol", "64": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol", "67": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol", "68": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/ISignaturesValidator.sol", "69": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol", "70": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/InputHelpers.sol", "71": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/LogCompression.sol", "73": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/TemporarilyPausable.sol", "74": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/WordCodec.sol", "75": "node_modules/@balancer-labs/v2-solidity-utils/contracts/math/FixedPoint.sol", "76": "node_modules/@balancer-labs/v2-solidity-utils/contracts/math/LogExpMath.sol", "77": "node_modules/@balancer-labs/v2-solidity-utils/contracts/math/Math.sol", "78": "node_modules/@balancer-labs/v2-solidity-utils/contracts/misc/IWETH.sol", "81": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/EIP712.sol", "82": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ERC20.sol", "83": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ERC20Permit.sol", "86": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol", "87": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20Permit.sol", "91": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/SafeMath.sol"}, "ast": {"absolutePath": "contracts/2clp/Gyro2CLPPool.sol", "exportedSymbols": {"Authentication": [34076], "BalancerPoolToken": [21812], "BaseMinimalSwapInfoPool": [20479], "BasePool": [22992], "BasePoolAuthorization": [23085], "BaseWeightedPool": [31288], "Buffer": [23157], "CappedLiquidity": [6715], "EIP712": [37311], "ERC20": [24280], "ERC20Permit": [33917], "Errors": [27814], "ExtensibleWeightedPool2Tokens": [9067], "FixedPoint": [33764], "Gyro2CLPMath": [422], "Gyro2CLPOracleMath": [534], "Gyro2CLPPool": [2102], "Gyro2CLPPoolErrors": [2111], "GyroConfigKeys": [19014], "GyroErrors": [17023], "GyroFixedPoint": [17683], "GyroPoolMath": [18471], "IAsset": [31567], "IAssetManager": [33999], "IAuthentication": [21600], "IAuthorizer": [26270], "IBasePool": [26863], "ICappedLiquidity": [19473], "IERC20": [26799], "IERC20Permit": [37347], "IFlashLoanRecipient": [31586], "IGyroConfig": [18999], "ILocallyPausable": [24662], "IMinimalSwapInfoPool": [24299], "IPoolPriceOracle": [26939], "IPoolSwapStructs": [26910], "IPriceOracle": [26994], "IProtocolFeesCollector": [31651], "ISignaturesValidator": [31529], "ITemporarilyPausable": [31548], "IVault": [20114], "IWETH": [31563], "InputHelpers": [18583], "LocallyPausable": [9232], "LogCompression": [18939], "LogExpMath": [29222], "Math": [18872], "PoolPriceOracle": [23550], "QueryProcessor": [26721], "SafeMath": [34154], "Samples": [27391], "TemporarilyPausable": [23802], "WeightedMath": [21577], "WeightedOracleMath": [23622], "WeightedPool2TokensMiscData": [19229], "WeightedPoolUserDataHelpers": [19439], "WordCodec": [30063], "_grequire": [16968, 16987], "_grevert": [16999, 17019], "_require": [27409], "_revert": [27417]}, "id": 2103, "license": "GPL-3.0-or-later", "nodeType": "SourceUnit", "nodes": [{"id": 536, "literals": ["solidity", "0.7", ".6"], "nodeType": "PragmaDirective", "src": "688:22:2"}, {"id": 537, "literals": ["experimental", "ABIEncoderV2"], "nodeType": "PragmaDirective", "src": "711:33:2"}, {"absolutePath": "libraries/GyroFixedPoint.sol", "file": "../../libraries/GyroFixedPoint.sol", "id": 538, "nodeType": "ImportDirective", "scope": 2103, "sourceUnit": 17684, "src": "822:44:2", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol", "file": "@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol", "id": 539, "nodeType": "ImportDirective", "scope": 2103, "sourceUnit": 19440, "src": "868:83:2", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol", "file": "@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol", "id": 540, "nodeType": "ImportDirective", "scope": 2103, "sourceUnit": 19230, "src": "952:83:2", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/GyroConfigKeys.sol", "file": "../../libraries/GyroConfigKeys.sol", "id": 541, "nodeType": "ImportDirective", "scope": 2103, "sourceUnit": 19015, "src": "1037:44:2", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/IGyroConfig.sol", "file": "../../interfaces/IGyroConfig.sol", "id": 542, "nodeType": "ImportDirective", "scope": 2103, "sourceUnit": 19000, "src": "1082:42:2", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/GyroPoolMath.sol", "file": "../../libraries/GyroPoolMath.sol", "id": 543, "nodeType": "ImportDirective", "scope": 2103, "sourceUnit": 18472, "src": "1125:42:2", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/GyroErrors.sol", "file": "../../libraries/GyroErrors.sol", "id": 544, "nodeType": "ImportDirective", "scope": 2103, "sourceUnit": 17024, "src": "1168:40:2", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/CappedLiquidity.sol", "file": "../CappedLiquidity.sol", "id": 545, "nodeType": "ImportDirective", "scope": 2103, "sourceUnit": 6716, "src": "1210:32:2", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/LocallyPausable.sol", "file": "../LocallyPausable.sol", "id": 546, "nodeType": "ImportDirective", "scope": 2103, "sourceUnit": 9233, "src": "1243:32:2", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/ExtensibleWeightedPool2Tokens.sol", "file": "../ExtensibleWeightedPool2Tokens.sol", "id": 547, "nodeType": "ImportDirective", "scope": 2103, "sourceUnit": 9068, "src": "1276:46:2", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/2clp/Gyro2CLPPoolErrors.sol", "file": "./Gyro2CLPPoolErrors.sol", "id": 548, "nodeType": "ImportDirective", "scope": 2103, "sourceUnit": 2112, "src": "1323:34:2", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/2clp/Gyro2CLPMath.sol", "file": "./Gyro2CLPMath.sol", "id": 549, "nodeType": "ImportDirective", "scope": 2103, "sourceUnit": 423, "src": "1358:28:2", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/2clp/Gyro2CLPOracleMath.sol", "file": "./Gyro2CLPOracleMath.sol", "id": 550, "nodeType": "ImportDirective", "scope": 2103, "sourceUnit": 535, "src": "1387:34:2", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 551, "name": "ExtensibleWeightedPool2Tokens", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9067, "src": "1448:29:2", "typeDescriptions": {"typeIdentifier": "t_contract$_ExtensibleWeightedPool2Tokens_$9067", "typeString": "contract ExtensibleWeightedPool2Tokens"}}, "id": 552, "nodeType": "InheritanceSpecifier", "src": "1448:29:2"}, {"baseName": {"id": 553, "name": "Gyro2CLPOracleMath", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 534, "src": "1479:18:2", "typeDescriptions": {"typeIdentifier": "t_contract$_Gyro2CLPOracleMath_$534", "typeString": "contract Gyro2CLPOracleMath"}}, "id": 554, "nodeType": "InheritanceSpecifier", "src": "1479:18:2"}, {"baseName": {"id": 555, "name": "CappedLiquidity", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 6715, "src": "1499:15:2", "typeDescriptions": {"typeIdentifier": "t_contract$_CappedLiquidity_$6715", "typeString": "contract CappedLiquidity"}}, "id": 556, "nodeType": "InheritanceSpecifier", "src": "1499:15:2"}, {"baseName": {"id": 557, "name": "LocallyPausable", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9232, "src": "1516:15:2", "typeDescriptions": {"typeIdentifier": "t_contract$_LocallyPausable_$9232", "typeString": "contract LocallyPausable"}}, "id": 558, "nodeType": "InheritanceSpecifier", "src": "1516:15:2"}], "contractDependencies": [534, 6715, 9067, 9232, 19473, 21600, 21812, 23085, 23550, 23802, 24280, 24299, 24662, 26799, 26863, 26910, 26939, 26994, 31548, 33917, 34076, 37311, 37347], "contractKind": "contract", "fullyImplemented": true, "id": 2102, "linearizedBaseContracts": [2102, 9232, 24662, 6715, 19473, 534, 9067, 23550, 26994, 26939, 23802, 31548, 21812, 33917, 37311, 37347, 24280, 26799, 23085, 34076, 21600, 24299, 26863, 26910], "name": "Gyro2CLPPool", "nodeType": "ContractDefinition", "nodes": [{"id": 561, "libraryName": {"id": 559, "name": "GyroFixedPoint", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 17683, "src": "1544:14:2", "typeDescriptions": {"typeIdentifier": "t_contract$_GyroFixedPoint_$17683", "typeString": "library GyroFixedPoint"}}, "nodeType": "UsingForDirective", "src": "1538:33:2", "typeName": {"id": 560, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1563:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"id": 564, "libraryName": {"id": 562, "name": "WeightedPoolUserDataHelpers", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 19439, "src": "1582:27:2", "typeDescriptions": {"typeIdentifier": "t_contract$_WeightedPoolUserDataHelpers_$19439", "typeString": "library WeightedPoolUserDataHelpers"}}, "nodeType": "UsingForDirective", "src": "1576:44:2", "typeName": {"id": 563, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "1614:5:2", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}}, {"id": 567, "libraryName": {"id": 565, "name": "WeightedPool2TokensMiscData", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 19229, "src": "1631:27:2", "typeDescriptions": {"typeIdentifier": "t_contract$_WeightedPool2TokensMiscData_$19229", "typeString": "library WeightedPool2TokensMiscData"}}, "nodeType": "UsingForDirective", "src": "1625:46:2", "typeName": {"id": 566, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1663:7:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}}, {"constant": false, "id": 569, "mutability": "immutable", "name": "_sqrtAlpha", "nodeType": "VariableDeclaration", "scope": 2102, "src": "1677:36:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 568, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1677:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "private"}, {"constant": false, "id": 571, "mutability": "immutable", "name": "_sqrtBeta", "nodeType": "VariableDeclaration", "scope": 2102, "src": "1719:35:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 570, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1719:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "private"}, {"constant": false, "functionSelector": "44bbdb55", "id": 573, "mutability": "mutable", "name": "gyroConfig", "nodeType": "VariableDeclaration", "scope": 2102, "src": "1761:29:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$18999", "typeString": "contract IGyroConfig"}, "typeName": {"id": 572, "name": "IGyroConfig", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 18999, "src": "1761:11:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$18999", "typeString": "contract IGyroConfig"}}, "visibility": "public"}, {"canonicalName": "Gyro2CLPPool.GyroParams", "id": 586, "members": [{"constant": false, "id": 575, "mutability": "mutable", "name": "baseParams", "nodeType": "VariableDeclaration", "scope": 586, "src": "1825:24:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$6842_storage_ptr", "typeString": "struct ExtensibleWeightedPool2Tokens.NewPoolParams"}, "typeName": {"id": 574, "name": "NewPoolParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 6842, "src": "1825:13:2", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$6842_storage_ptr", "typeString": "struct ExtensibleWeightedPool2Tokens.NewPoolParams"}}, "visibility": "internal"}, {"constant": false, "id": 577, "mutability": "mutable", "name": "sqrtAlpha", "nodeType": "VariableDeclaration", "scope": 586, "src": "1859:17:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 576, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1859:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 579, "mutability": "mutable", "name": "sqrtBeta", "nodeType": "VariableDeclaration", "scope": 586, "src": "1919:16:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 578, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1919:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 581, "mutability": "mutable", "name": "capManager", "nodeType": "VariableDeclaration", "scope": 586, "src": "2012:18:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 580, "name": "address", "nodeType": "ElementaryTypeName", "src": "2012:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 583, "mutability": "mutable", "name": "capParams", "nodeType": "VariableDeclaration", "scope": 586, "src": "2040:19:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_CapParams_$19457_storage_ptr", "typeString": "struct ICappedLiquidity.CapParams"}, "typeName": {"id": 582, "name": "CapParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 19457, "src": "2040:9:2", "typeDescriptions": {"typeIdentifier": "t_struct$_CapParams_$19457_storage_ptr", "typeString": "struct ICappedLiquidity.CapParams"}}, "visibility": "internal"}, {"constant": false, "id": 585, "mutability": "mutable", "name": "pauseManager", "nodeType": "VariableDeclaration", "scope": 586, "src": "2069:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 584, "name": "address", "nodeType": "ElementaryTypeName", "src": "2069:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "name": "GyroParams", "nodeType": "StructDefinition", "scope": 2102, "src": "1797:299:2", "visibility": "public"}, {"body": {"id": 644, "nodeType": "Block", "src": "2330:299:2", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 612, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 608, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 588, "src": "2350:6:2", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$586_memory_ptr", "typeString": "struct Gyro2CLPPool.GyroParams memory"}}, "id": 609, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "sqrtAlpha", "nodeType": "MemberAccess", "referencedDeclaration": 577, "src": "2350:16:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 610, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 588, "src": "2369:6:2", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$586_memory_ptr", "typeString": "struct Gyro2CLPPool.GyroParams memory"}}, "id": 611, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "sqrtBeta", "nodeType": "MemberAccess", "referencedDeclaration": 579, "src": "2369:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2350:34:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 613, "name": "Gyro2CLPPoolErrors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2111, "src": "2386:18:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPPoolErrors_$2111_$", "typeString": "type(library Gyro2CLPPoolErrors)"}}, "id": 614, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "SQRT_PARAMS_WRONG", "nodeType": "MemberAccess", "referencedDeclaration": 2107, "src": "2386:36:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 607, "name": "_grequire", "nodeType": "Identifier", "overloadedDeclarations": [16968, 16987], "referencedDeclaration": 16968, "src": "2340:9:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 615, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2340:83:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 616, "nodeType": "ExpressionStatement", "src": "2340:83:2"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 623, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 618, "name": "configAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 590, "src": "2443:13:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 621, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2468:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 620, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2460:7:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 619, "name": "address", "nodeType": "ElementaryTypeName", "src": "2460:7:2", "typeDescriptions": {}}}, "id": 622, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2460:10:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "2443:27:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 624, "name": "GyroErrors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17023, "src": "2472:10:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroErrors_$17023_$", "typeString": "type(library GyroErrors)"}}, "id": 625, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ZERO_ADDRESS", "nodeType": "MemberAccess", "referencedDeclaration": 17022, "src": "2472:23:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 617, "name": "_grequire", "nodeType": "Identifier", "overloadedDeclarations": [16968, 16987], "referencedDeclaration": 16968, "src": "2433:9:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 626, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2433:63:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 627, "nodeType": "ExpressionStatement", "src": "2433:63:2"}, {"expression": {"id": 631, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 628, "name": "_sqrtAlpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 569, "src": "2506:10:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 629, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 588, "src": "2519:6:2", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$586_memory_ptr", "typeString": "struct Gyro2CLPPool.GyroParams memory"}}, "id": 630, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "sqrtAlpha", "nodeType": "MemberAccess", "referencedDeclaration": 577, "src": "2519:16:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2506:29:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 632, "nodeType": "ExpressionStatement", "src": "2506:29:2"}, {"expression": {"id": 636, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 633, "name": "_sqrtBeta", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 571, "src": "2545:9:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 634, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 588, "src": "2557:6:2", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$586_memory_ptr", "typeString": "struct Gyro2CLPPool.GyroParams memory"}}, "id": 635, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "sqrtBeta", "nodeType": "MemberAccess", "referencedDeclaration": 579, "src": "2557:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2545:27:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 637, "nodeType": "ExpressionStatement", "src": "2545:27:2"}, {"expression": {"id": 642, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 638, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 573, "src": "2583:10:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$18999", "typeString": "contract IGyroConfig"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 640, "name": "configAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 590, "src": "2608:13:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 639, "name": "IGyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18999, "src": "2596:11:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IGyroConfig_$18999_$", "typeString": "type(contract IGyroConfig)"}}, "id": 641, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2596:26:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$18999", "typeString": "contract IGyroConfig"}}, "src": "2583:39:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$18999", "typeString": "contract IGyroConfig"}}, "id": 643, "nodeType": "ExpressionStatement", "src": "2583:39:2"}]}, "id": 645, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"expression": {"id": 593, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 588, "src": "2201:6:2", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$586_memory_ptr", "typeString": "struct Gyro2CLPPool.GyroParams memory"}}, "id": 594, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "baseParams", "nodeType": "MemberAccess", "referencedDeclaration": 575, "src": "2201:17:2", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$6842_memory_ptr", "typeString": "struct ExtensibleWeightedPool2Tokens.NewPoolParams memory"}}], "id": 595, "modifierName": {"id": 592, "name": "ExtensibleWeightedPool2Tokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9067, "src": "2171:29:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ExtensibleWeightedPool2Tokens_$9067_$", "typeString": "type(contract ExtensibleWeightedPool2Tokens)"}}, "nodeType": "ModifierInvocation", "src": "2171:48:2"}, {"arguments": [{"expression": {"id": 597, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 588, "src": "2244:6:2", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$586_memory_ptr", "typeString": "struct Gyro2CLPPool.GyroParams memory"}}, "id": 598, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "capManager", "nodeType": "MemberAccess", "referencedDeclaration": 581, "src": "2244:17:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 599, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 588, "src": "2263:6:2", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$586_memory_ptr", "typeString": "struct Gyro2CLPPool.GyroParams memory"}}, "id": 600, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "capParams", "nodeType": "MemberAccess", "referencedDeclaration": 583, "src": "2263:16:2", "typeDescriptions": {"typeIdentifier": "t_struct$_CapParams_$19457_memory_ptr", "typeString": "struct ICappedLiquidity.CapParams memory"}}], "id": 601, "modifierName": {"id": 596, "name": "CappedLiquidity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6715, "src": "2228:15:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_CappedLiquidity_$6715_$", "typeString": "type(contract CappedLiquidity)"}}, "nodeType": "ModifierInvocation", "src": "2228:52:2"}, {"arguments": [{"expression": {"id": 603, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 588, "src": "2305:6:2", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$586_memory_ptr", "typeString": "struct Gyro2CLPPool.GyroParams memory"}}, "id": 604, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "pauseManager", "nodeType": "MemberAccess", "referencedDeclaration": 585, "src": "2305:19:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 605, "modifierName": {"id": 602, "name": "LocallyPausable", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9232, "src": "2289:15:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_LocallyPausable_$9232_$", "typeString": "type(contract LocallyPausable)"}}, "nodeType": "ModifierInvocation", "src": "2289:36:2"}], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 591, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 588, "mutability": "mutable", "name": "params", "nodeType": "VariableDeclaration", "scope": 645, "src": "2114:24:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$586_memory_ptr", "typeString": "struct Gyro2CLPPool.GyroParams"}, "typeName": {"id": 587, "name": "GyroParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 586, "src": "2114:10:2", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$586_storage_ptr", "typeString": "struct Gyro2CLPPool.GyroParams"}}, "visibility": "internal"}, {"constant": false, "id": 590, "mutability": "mutable", "name": "configAddress", "nodeType": "VariableDeclaration", "scope": 645, "src": "2140:21:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 589, "name": "address", "nodeType": "ElementaryTypeName", "src": "2140:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "2113:49:2"}, "returnParameters": {"id": 606, "nodeType": "ParameterList", "parameters": [], "src": "2330:0:2"}, "scope": 2102, "src": "2102:527:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 656, "nodeType": "Block", "src": "2817:41:2", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 653, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [683, 696], "referencedDeclaration": 683, "src": "2834:15:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function () view returns (uint256[2] memory)"}}, "id": 654, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2834:17:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "functionReturnParameters": 652, "id": 655, "nodeType": "Return", "src": "2827:24:2"}]}, "documentation": {"id": 646, "nodeType": "StructuredDocumentation", "src": "2635:106:2", "text": "@dev Returns sqrtAlpha and sqrtBeta (square roots of lower and upper price bounds of p_x respectively)"}, "functionSelector": "707dcd1e", "id": 657, "implemented": true, "kind": "function", "modifiers": [], "name": "getSqrtParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 647, "nodeType": "ParameterList", "parameters": [], "src": "2772:2:2"}, "returnParameters": {"id": 652, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 651, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 657, "src": "2798:17:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 648, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2798:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 650, "length": {"hexValue": "32", "id": 649, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2806:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "2798:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "src": "2797:19:2"}, "scope": 2102, "src": "2746:112:2", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 682, "nodeType": "Block", "src": "2959:150:2", "statements": [{"expression": {"id": 670, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 664, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 662, "src": "2969:17:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 666, "indexExpression": {"hexValue": "30", "id": 665, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2987:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "2969:20:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "74727565", "id": 668, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3008:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 667, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [683, 696], "referencedDeclaration": 696, "src": "2992:15:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 669, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2992:21:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2969:44:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 671, "nodeType": "ExpressionStatement", "src": "2969:44:2"}, {"expression": {"id": 678, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 672, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 662, "src": "3023:17:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 674, "indexExpression": {"hexValue": "31", "id": 673, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3041:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "3023:20:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "66616c7365", "id": 676, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3062:5:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 675, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [683, 696], "referencedDeclaration": 696, "src": "3046:15:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 677, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3046:22:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3023:45:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 679, "nodeType": "ExpressionStatement", "src": "3023:45:2"}, {"expression": {"id": 680, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 662, "src": "3085:17:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "functionReturnParameters": 663, "id": 681, "nodeType": "Return", "src": "3078:24:2"}]}, "id": 683, "implemented": true, "kind": "function", "modifiers": [], "name": "_sqrtParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 658, "nodeType": "ParameterList", "parameters": [], "src": "2888:2:2"}, "returnParameters": {"id": 663, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 662, "mutability": "mutable", "name": "virtualParameters", "nodeType": "VariableDeclaration", "scope": 683, "src": "2922:35:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 659, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2922:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 661, "length": {"hexValue": "32", "id": 660, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2930:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "2922:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "src": "2921:37:2"}, "scope": 2102, "src": "2864:245:2", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"body": {"id": 695, "nodeType": "Block", "src": "3197:59:2", "statements": [{"expression": {"condition": {"id": 690, "name": "parameter0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 685, "src": "3214:10:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 692, "name": "_sqrtBeta", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 571, "src": "3240:9:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 693, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "3214:35:2", "trueExpression": {"id": 691, "name": "_sqrtAlpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 569, "src": "3227:10:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 689, "id": 694, "nodeType": "Return", "src": "3207:42:2"}]}, "id": 696, "implemented": true, "kind": "function", "modifiers": [], "name": "_sqrtParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 686, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 685, "mutability": "mutable", "name": "parameter0", "nodeType": "VariableDeclaration", "scope": 696, "src": "3140:15:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 684, "name": "bool", "nodeType": "ElementaryTypeName", "src": "3140:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "3139:17:2"}, "returnParameters": {"id": 689, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 688, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 696, "src": "3188:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 687, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3188:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3187:9:2"}, "scope": 2102, "src": "3115:141:2", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"body": {"id": 730, "nodeType": "Block", "src": "3742:472:2", "statements": [{"assignments": [707, 709, null, null], "declarations": [{"constant": false, "id": 707, "mutability": "mutable", "name": "cash", "nodeType": "VariableDeclaration", "scope": 730, "src": "3970:12:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 706, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3970:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 709, "mutability": "mutable", "name": "managed", "nodeType": "VariableDeclaration", "scope": 730, "src": "3984:15:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 708, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3984:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, null, null], "id": 717, "initialValue": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 713, "name": "getPoolId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6977, "src": "4035:9:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$", "typeString": "function () view returns (bytes32)"}}, "id": 714, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4035:11:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 715, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 699, "src": "4048:5:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26799", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_contract$_IERC20_$26799", "typeString": "contract IERC20"}], "expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 710, "name": "getVault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21641, "src": "4007:8:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IVault_$20114_$", "typeString": "function () view returns (contract IVault)"}}, "id": 711, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4007:10:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IVault_$20114", "typeString": "contract IVault"}}, "id": 712, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getPoolTokenInfo", "nodeType": "MemberAccess", "referencedDeclaration": 19856, "src": "4007:27:2", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$_t_contract$_IERC20_$26799_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$", "typeString": "function (bytes32,contract IERC20) view external returns (uint256,uint256,uint256,address)"}}, "id": 716, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4007:47:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$", "typeString": "tuple(uint256,uint256,uint256,address)"}}, "nodeType": "VariableDeclarationStatement", "src": "3969:85:2"}, {"expression": {"id": 722, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 718, "name": "balance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 704, "src": "4064:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 721, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 719, "name": "cash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 707, "src": "4074:4:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 720, "name": "managed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 709, "src": "4081:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4074:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4064:24:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 723, "nodeType": "ExpressionStatement", "src": "4064:24:2"}, {"expression": {"id": 728, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 724, "name": "balance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 704, "src": "4174:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 727, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 725, "name": "balance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 704, "src": "4184:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 726, "name": "scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 701, "src": "4194:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4184:23:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4174:33:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 729, "nodeType": "ExpressionStatement", "src": "4174:33:2"}]}, "documentation": {"id": 697, "nodeType": "StructuredDocumentation", "src": "3262:366:2", "text": "@dev Reads the balance of a token from the balancer vault and returns the scaled amount. Smaller storage access\n compared to getVault().getPoolTokens().\n Copied from the 3CLP *except* that for the 2CLP, the scalingFactor is interpreted as a regular integer, not a\n FixedPoint number. This is an inconsistency between the base contracts."}, "id": 731, "implemented": true, "kind": "function", "modifiers": [], "name": "_getScaledTokenBalance", "nodeType": "FunctionDefinition", "parameters": {"id": 702, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 699, "mutability": "mutable", "name": "token", "nodeType": "VariableDeclaration", "scope": 731, "src": "3665:12:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26799", "typeString": "contract IERC20"}, "typeName": {"id": 698, "name": "IERC20", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 26799, "src": "3665:6:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26799", "typeString": "contract IERC20"}}, "visibility": "internal"}, {"constant": false, "id": 701, "mutability": "mutable", "name": "scalingFactor", "nodeType": "VariableDeclaration", "scope": 731, "src": "3679:21:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 700, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3679:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3664:37:2"}, "returnParameters": {"id": 705, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 704, "mutability": "mutable", "name": "balance", "nodeType": "VariableDeclaration", "scope": 731, "src": "3725:15:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 703, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3725:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3724:17:2"}, "scope": 2102, "src": "3633:581:2", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 766, "nodeType": "Block", "src": "4466:435:2", "statements": [{"expression": {"id": 744, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 738, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 736, "src": "4698:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "32", "id": 742, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4723:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 741, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "4709:13:2", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 739, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4713:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 740, "nodeType": "ArrayTypeName", "src": "4713:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 743, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4709:16:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "src": "4698:27:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 745, "nodeType": "ExpressionStatement", "src": "4698:27:2"}, {"expression": {"id": 753, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 746, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 736, "src": "4735:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 748, "indexExpression": {"hexValue": "30", "id": 747, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4744:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "4735:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 750, "name": "_token0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6770, "src": "4772:7:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26799", "typeString": "contract IERC20"}}, {"id": 751, "name": "_scalingFactor0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6783, "src": "4781:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$26799", "typeString": "contract IERC20"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 749, "name": "_getScaledTokenBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 731, "src": "4749:22:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$26799_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (contract IERC20,uint256) view returns (uint256)"}}, "id": 752, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4749:48:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4735:62:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 754, "nodeType": "ExpressionStatement", "src": "4735:62:2"}, {"expression": {"id": 762, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 755, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 736, "src": "4807:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 757, "indexExpression": {"hexValue": "31", "id": 756, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4816:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "4807:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 759, "name": "_token1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6772, "src": "4844:7:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26799", "typeString": "contract IERC20"}}, {"id": 760, "name": "_scalingFactor1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6785, "src": "4853:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$26799", "typeString": "contract IERC20"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 758, "name": "_getScaledTokenBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 731, "src": "4821:22:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$26799_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (contract IERC20,uint256) view returns (uint256)"}}, "id": 761, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4821:48:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4807:62:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 763, "nodeType": "ExpressionStatement", "src": "4807:62:2"}, {"expression": {"id": 764, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 736, "src": "4886:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "functionReturnParameters": 737, "id": 765, "nodeType": "Return", "src": "4879:15:2"}]}, "documentation": {"id": 732, "nodeType": "StructuredDocumentation", "src": "4220:165:2", "text": "@dev Get all balances in the pool, scaled by the appropriate scaling factors, in a relatively gas-efficient way.\n Essentially copied from the 3CLP."}, "id": 767, "implemented": true, "kind": "function", "modifiers": [], "name": "_getAllBalances", "nodeType": "FunctionDefinition", "parameters": {"id": 733, "nodeType": "ParameterList", "parameters": [], "src": "4414:2:2"}, "returnParameters": {"id": 737, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 736, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 767, "src": "4439:25:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 734, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4439:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 735, "nodeType": "ArrayTypeName", "src": "4439:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "4438:27:2"}, "scope": 2102, "src": "4390:511:2", "stateMutability": "view", "virtual": false, "visibility": "private"}, {"body": {"id": 808, "nodeType": "Block", "src": "5096:330:2", "statements": [{"assignments": [778], "declarations": [{"constant": false, "id": 778, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 808, "src": "5106:25:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 776, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5106:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 777, "nodeType": "ArrayTypeName", "src": "5106:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 781, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 779, "name": "_getAllBalances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 767, "src": "5134:15:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function () view returns (uint256[] memory)"}}, "id": 780, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5134:17:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "5106:45:2"}, {"expression": {"id": 788, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 782, "name": "virtualParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 772, "src": "5281:13:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "32", "id": 786, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5311:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 785, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "5297:13:2", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 783, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5301:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 784, "nodeType": "ArrayTypeName", "src": "5301:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 787, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5297:16:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "src": "5281:32:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 789, "nodeType": "ExpressionStatement", "src": "5281:32:2"}, {"expression": {"id": 806, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [null, {"baseExpression": {"id": 790, "name": "virtualParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 772, "src": "5326:13:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 792, "indexExpression": {"hexValue": "30", "id": 791, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5340:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "5326:16:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 793, "name": "virtualParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 772, "src": "5344:13:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 795, "indexExpression": {"hexValue": "31", "id": 794, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5358:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "5344:16:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 796, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "5323:38:2", "typeDescriptions": {"typeIdentifier": "t_tuple$__$_t_uint256_$_t_uint256_$", "typeString": "tuple(,uint256,uint256)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"baseExpression": {"id": 798, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 778, "src": "5388:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 800, "indexExpression": {"hexValue": "30", "id": 799, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5397:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5388:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 801, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 778, "src": "5401:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 803, "indexExpression": {"hexValue": "31", "id": 802, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5410:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5401:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "74727565", "id": 804, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "5414:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 797, "name": "_calculateCurrentValues", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1283, "src": "5364:23:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256,bool) view returns (uint256,uint256,uint256)"}}, "id": 805, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5364:55:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256,uint256)"}}, "src": "5323:96:2", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 807, "nodeType": "ExpressionStatement", "src": "5323:96:2"}]}, "documentation": {"id": 768, "nodeType": "StructuredDocumentation", "src": "4907:97:2", "text": "@dev Returns virtual offsets a and b for reserves x and y respectively, as in (x+a)*(y+b)=L^2"}, "functionSelector": "8dd9f89d", "id": 809, "implemented": true, "kind": "function", "modifiers": [], "name": "getVirtualParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 769, "nodeType": "ParameterList", "parameters": [], "src": "5038:2:2"}, "returnParameters": {"id": 773, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 772, "mutability": "mutable", "name": "virtualParams", "nodeType": "VariableDeclaration", "scope": 809, "src": "5064:30:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 770, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5064:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 771, "nodeType": "ArrayTypeName", "src": "5064:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "5063:32:2"}, "scope": 2102, "src": "5009:417:2", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 848, "nodeType": "Block", "src": "5616:208:2", "statements": [{"expression": {"id": 832, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 822, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 820, "src": "5626:17:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 824, "indexExpression": {"hexValue": "30", "id": 823, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5644:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "5626:20:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "74727565", "id": 826, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "5668:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, {"baseExpression": {"id": 827, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 813, "src": "5674:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 829, "indexExpression": {"hexValue": "31", "id": 828, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5685:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5674:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 830, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 815, "src": "5689:9:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 825, "name": "_virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 876, "src": "5649:18:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (bool,uint256,uint256) view returns (uint256)"}}, "id": 831, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5649:50:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5626:73:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 833, "nodeType": "ExpressionStatement", "src": "5626:73:2"}, {"expression": {"id": 844, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 834, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 820, "src": "5709:17:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 836, "indexExpression": {"hexValue": "31", "id": 835, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5727:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "5709:20:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "66616c7365", "id": 838, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "5751:5:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, {"baseExpression": {"id": 839, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 813, "src": "5758:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 841, "indexExpression": {"hexValue": "30", "id": 840, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5769:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5758:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 842, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 815, "src": "5773:9:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 837, "name": "_virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 876, "src": "5732:18:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (bool,uint256,uint256) view returns (uint256)"}}, "id": 843, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5732:51:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5709:74:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 845, "nodeType": "ExpressionStatement", "src": "5709:74:2"}, {"expression": {"id": 846, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 820, "src": "5800:17:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "functionReturnParameters": 821, "id": 847, "nodeType": "Return", "src": "5793:24:2"}]}, "id": 849, "implemented": true, "kind": "function", "modifiers": [], "name": "_getVirtualParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 816, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 813, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 849, "src": "5463:28:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 810, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5463:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 812, "length": {"hexValue": "32", "id": 811, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5471:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "5463:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}, {"constant": false, "id": 815, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 849, "src": "5493:17:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 814, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5493:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5462:49:2"}, "returnParameters": {"id": 821, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 820, "mutability": "mutable", "name": "virtualParameters", "nodeType": "VariableDeclaration", "scope": 849, "src": "5575:35:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 817, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5575:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 819, "length": {"hexValue": "32", "id": 818, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5583:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "5575:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "src": "5574:37:2"}, "scope": 2102, "src": "5432:392:2", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"body": {"id": 875, "nodeType": "Block", "src": "5983:212:2", "statements": [{"expression": {"condition": {"id": 860, "name": "parameter0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 851, "src": "6012:10:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"components": [{"arguments": [{"id": 869, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 855, "src": "6166:9:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 870, "name": "sqrtParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 853, "src": "6177:9:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 867, "name": "Gyro2CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 422, "src": "6125:12:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPMath_$422_$", "typeString": "type(library Gyro2CLPMath)"}}, "id": 868, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateVirtualParameter1", "nodeType": "MemberAccess", "referencedDeclaration": 421, "src": "6125:40:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 871, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6125:62:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 872, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "6124:64:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 873, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "6012:176:2", "trueExpression": {"components": [{"arguments": [{"id": 863, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 855, "src": "6083:9:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 864, "name": "sqrtParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 853, "src": "6094:9:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 861, "name": "Gyro2CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 422, "src": "6042:12:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPMath_$422_$", "typeString": "type(library Gyro2CLPMath)"}}, "id": 862, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateVirtualParameter0", "nodeType": "MemberAccess", "referencedDeclaration": 405, "src": "6042:40:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 865, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6042:62:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 866, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "6041:64:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 859, "id": 874, "nodeType": "Return", "src": "5993:195:2"}]}, "id": 876, "implemented": true, "kind": "function", "modifiers": [], "name": "_virtualParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 856, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 851, "mutability": "mutable", "name": "parameter0", "nodeType": "VariableDeclaration", "scope": 876, "src": "5867:15:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 850, "name": "bool", "nodeType": "ElementaryTypeName", "src": "5867:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 853, "mutability": "mutable", "name": "sqrtParam", "nodeType": "VariableDeclaration", "scope": 876, "src": "5892:17:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 852, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5892:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 855, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 876, "src": "5919:17:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 854, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5919:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5857:85:2"}, "returnParameters": {"id": 859, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 858, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 876, "src": "5974:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 857, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5974:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5973:9:2"}, "scope": 2102, "src": "5830:365:2", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"baseFunctions": [7272], "body": {"id": 911, "nodeType": "Block", "src": "6336:210:2", "statements": [{"assignments": [887], "declarations": [{"constant": false, "id": 887, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 911, "src": "6346:25:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 885, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6346:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 886, "nodeType": "ArrayTypeName", "src": "6346:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 890, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 888, "name": "_getAllBalances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 767, "src": "6374:15:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function () view returns (uint256[] memory)"}}, "id": 889, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6374:17:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "6346:45:2"}, {"assignments": [896], "declarations": [{"constant": false, "id": 896, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 911, "src": "6401:28:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 894, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6401:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 895, "length": {"hexValue": "32", "id": 893, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6409:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "6401:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 899, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 897, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [683, 696], "referencedDeclaration": 683, "src": "6432:15:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function () view returns (uint256[2] memory)"}}, "id": 898, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6432:17:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "6401:48:2"}, {"expression": {"arguments": [{"id": 902, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 887, "src": "6500:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"baseExpression": {"id": 903, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 896, "src": "6510:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 905, "indexExpression": {"hexValue": "30", "id": 904, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6521:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6510:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 906, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 896, "src": "6525:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 908, "indexExpression": {"hexValue": "31", "id": 907, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6536:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6525:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 900, "name": "Gyro2CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 422, "src": "6467:12:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPMath_$422_$", "typeString": "type(library Gyro2CLPMath)"}}, "id": 901, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 45, "src": "6467:32:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256)"}}, "id": 909, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6467:72:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 882, "id": 910, "nodeType": "Return", "src": "6460:79:2"}]}, "documentation": {"id": 877, "nodeType": "StructuredDocumentation", "src": "6201:67:2", "text": " @dev Returns the current value of the invariant."}, "functionSelector": "c0ff1a15", "id": 912, "implemented": true, "kind": "function", "modifiers": [], "name": "getInvariant", "nodeType": "FunctionDefinition", "overrides": {"id": 879, "nodeType": "OverrideSpecifier", "overrides": [], "src": "6309:8:2"}, "parameters": {"id": 878, "nodeType": "ParameterList", "parameters": [], "src": "6294:2:2"}, "returnParameters": {"id": 882, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 881, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 912, "src": "6327:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 880, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6327:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6326:9:2"}, "scope": 2102, "src": "6273:273:2", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"baseFunctions": [7432], "body": {"id": 1078, "nodeType": "Block", "src": "6776:2522:2", "statements": [{"assignments": [931], "declarations": [{"constant": false, "id": 931, "mutability": "mutable", "name": "tokenInIsToken0", "nodeType": "VariableDeclaration", "scope": 1078, "src": "6786:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 930, "name": "bool", "nodeType": "ElementaryTypeName", "src": "6786:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "id": 936, "initialValue": {"commonType": {"typeIdentifier": "t_contract$_IERC20_$26799", "typeString": "contract IERC20"}, "id": 935, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 932, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 914, "src": "6809:7:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$26909_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 933, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenIn", "nodeType": "MemberAccess", "referencedDeclaration": 26894, "src": "6809:15:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26799", "typeString": "contract IERC20"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 934, "name": "_token0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6770, "src": "6828:7:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$26799", "typeString": "contract IERC20"}}, "src": "6809:26:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "VariableDeclarationStatement", "src": "6786:49:2"}, {"assignments": [938], "declarations": [{"constant": false, "id": 938, "mutability": "mutable", "name": "scalingFactorTokenIn", "nodeType": "VariableDeclaration", "scope": 1078, "src": "6846:28:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 937, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6846:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 942, "initialValue": {"arguments": [{"id": 940, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 931, "src": "6892:15:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 939, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8796, "src": "6877:14:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 941, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6877:31:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6846:62:2"}, {"assignments": [944], "declarations": [{"constant": false, "id": 944, "mutability": "mutable", "name": "scalingFactorTokenOut", "nodeType": "VariableDeclaration", "scope": 1078, "src": "6918:29:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 943, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6918:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 949, "initialValue": {"arguments": [{"id": 947, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "6965:16:2", "subExpression": {"id": 946, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 931, "src": "6966:15:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 945, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8796, "src": "6950:14:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 948, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6950:32:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6918:64:2"}, {"expression": {"id": 955, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 950, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 916, "src": "7036:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 952, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 916, "src": "7062:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 953, "name": "scalingFactorTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 938, "src": "7078:20:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 951, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8813, "src": "7053:8:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 954, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7053:46:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7036:63:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 956, "nodeType": "ExpressionStatement", "src": "7036:63:2"}, {"expression": {"id": 962, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 957, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 918, "src": "7109:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 959, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 918, "src": "7136:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 960, "name": "scalingFactorTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 944, "src": "7153:21:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 958, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8813, "src": "7127:8:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 961, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7127:48:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7109:66:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 963, "nodeType": "ExpressionStatement", "src": "7109:66:2"}, {"assignments": [965, 967, 969], "declarations": [{"constant": false, "id": 965, "mutability": "mutable", "name": "currentInvariant", "nodeType": "VariableDeclaration", "scope": 1078, "src": "7265:24:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 964, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7265:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 967, "mutability": "mutable", "name": "virtualParamIn", "nodeType": "VariableDeclaration", "scope": 1078, "src": "7291:22:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 966, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7291:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 969, "mutability": "mutable", "name": "virtualParamOut", "nodeType": "VariableDeclaration", "scope": 1078, "src": "7315:23:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 968, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7315:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 975, "initialValue": {"arguments": [{"id": 971, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 916, "src": "7379:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 972, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 918, "src": "7407:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 973, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 931, "src": "7436:15:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 970, "name": "_calculateCurrentValues", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1283, "src": "7342:23:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256,bool) view returns (uint256,uint256,uint256)"}}, "id": 974, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7342:119:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "7264:197:2"}, {"expression": {"arguments": [{"expression": {"id": 977, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 914, "src": "7557:7:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$26909_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 978, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "lastChangeBlock", "nodeType": "MemberAccess", "referencedDeclaration": 26902, "src": "7557:23:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"condition": {"id": 979, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 931, "src": "7594:15:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 981, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 918, "src": "7629:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 982, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "7594:50:2", "trueExpression": {"id": 980, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 916, "src": "7612:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"condition": {"id": 983, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 931, "src": "7658:15:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 985, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 916, "src": "7694:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 986, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "7658:50:2", "trueExpression": {"id": 984, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 918, "src": "7676:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"condition": {"id": 987, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 931, "src": "7722:15:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 989, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 969, "src": "7757:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 990, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "7722:50:2", "trueExpression": {"id": 988, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 967, "src": "7740:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"condition": {"id": 991, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 931, "src": "7786:15:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 993, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 967, "src": "7822:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 994, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "7786:50:2", "trueExpression": {"id": 992, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 969, "src": "7804:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 976, "name": "_updateOracle", "nodeType": "Identifier", "overloadedDeclarations": [2078, 2090], "referencedDeclaration": 2078, "src": "7530:13:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256,uint256,uint256,uint256)"}}, "id": 995, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7530:316:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 996, "nodeType": "ExpressionStatement", "src": "7530:316:2"}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_SwapKind_$19938", "typeString": "enum IVault.SwapKind"}, "id": 1002, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 997, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 914, "src": "7861:7:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$26909_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 998, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kind", "nodeType": "MemberAccess", "referencedDeclaration": 26892, "src": "7861:12:2", "typeDescriptions": {"typeIdentifier": "t_enum$_SwapKind_$19938", "typeString": "enum IVault.SwapKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 999, "name": "IVault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20114, "src": "7877:6:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IVault_$20114_$", "typeString": "type(contract IVault)"}}, "id": 1000, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "SwapKind", "nodeType": "MemberAccess", "referencedDeclaration": 19938, "src": "7877:15:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_SwapKind_$19938_$", "typeString": "type(enum IVault.SwapKind)"}}, "id": 1001, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "GIVEN_IN", "nodeType": "MemberAccess", "src": "7877:24:2", "typeDescriptions": {"typeIdentifier": "t_enum$_SwapKind_$19938", "typeString": "enum IVault.SwapKind"}}, "src": "7861:40:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 1076, "nodeType": "Block", "src": "8661:631:2", "statements": [{"expression": {"id": 1049, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 1041, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 914, "src": "8675:7:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$26909_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 1043, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 26898, "src": "8675:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 1045, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 914, "src": "8701:7:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$26909_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 1046, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 26898, "src": "8701:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1047, "name": "scalingFactorTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 944, "src": "8717:21:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1044, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8813, "src": "8692:8:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1048, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8692:47:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8675:64:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1050, "nodeType": "ExpressionStatement", "src": "8675:64:2"}, {"assignments": [1052], "declarations": [{"constant": false, "id": 1052, "mutability": "mutable", "name": "amountIn", "nodeType": "VariableDeclaration", "scope": 1076, "src": "8754:16:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1051, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8754:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1060, "initialValue": {"arguments": [{"id": 1054, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 914, "src": "8789:7:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$26909_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, {"id": 1055, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 916, "src": "8798:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1056, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 918, "src": "8814:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1057, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 967, "src": "8831:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1058, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 969, "src": "8847:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_SwapRequest_$26909_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1053, "name": "_onSwapGivenOut", "nodeType": "Identifier", "overloadedDeclarations": [1133], "referencedDeclaration": 1133, "src": "8773:15:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_SwapRequest_$26909_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (struct IPoolSwapStructs.SwapRequest memory,uint256,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 1059, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8773:90:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "8754:109:2"}, {"expression": {"id": 1066, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1061, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1052, "src": "8948:8:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1063, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1052, "src": "8972:8:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1064, "name": "scalingFactorTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 938, "src": "8982:20:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1062, "name": "_downscaleUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8919, "src": "8959:12:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1065, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8959:44:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8948:55:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1067, "nodeType": "ExpressionStatement", "src": "8948:55:2"}, {"expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 1070, "name": "getSwapFeePercentage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7043, "src": "9245:20:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1071, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9245:22:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1072, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "complement", "nodeType": "MemberAccess", "referencedDeclaration": 17682, "src": "9245:33:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256) pure returns (uint256)"}}, "id": 1073, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9245:35:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1068, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1052, "src": "9230:8:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1069, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "divUp", "nodeType": "MemberAccess", "referencedDeclaration": 17388, "src": "9230:14:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1074, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9230:51:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 929, "id": 1075, "nodeType": "Return", "src": "9223:58:2"}]}, "id": 1077, "nodeType": "IfStatement", "src": "7857:1435:2", "trueBody": {"id": 1040, "nodeType": "Block", "src": "7903:752:2", "statements": [{"assignments": [1004], "declarations": [{"constant": false, "id": 1004, "mutability": "mutable", "name": "feeAmount", "nodeType": "VariableDeclaration", "scope": 1040, "src": "8120:17:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1003, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8120:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1011, "initialValue": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 1008, "name": "getSwapFeePercentage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7043, "src": "8161:20:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1009, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8161:22:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"id": 1005, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 914, "src": "8140:7:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$26909_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 1006, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 26898, "src": "8140:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1007, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mulUp", "nodeType": "MemberAccess", "referencedDeclaration": 17211, "src": "8140:20:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1010, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8140:44:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "8120:64:2"}, {"expression": {"id": 1023, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 1012, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 914, "src": "8300:7:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$26909_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 1014, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 26898, "src": "8300:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [{"id": 1019, "name": "feeAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1004, "src": "8345:9:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"id": 1016, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 914, "src": "8326:7:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$26909_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 1017, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 26898, "src": "8326:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1018, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 17102, "src": "8326:18:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1020, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8326:29:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1021, "name": "scalingFactorTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 938, "src": "8357:20:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1015, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8813, "src": "8317:8:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1022, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8317:61:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8300:78:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1024, "nodeType": "ExpressionStatement", "src": "8300:78:2"}, {"assignments": [1026], "declarations": [{"constant": false, "id": 1026, "mutability": "mutable", "name": "amountOut", "nodeType": "VariableDeclaration", "scope": 1040, "src": "8393:17:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1025, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8393:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1034, "initialValue": {"arguments": [{"id": 1028, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 914, "src": "8428:7:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$26909_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, {"id": 1029, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 916, "src": "8437:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1030, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 918, "src": "8453:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1031, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 967, "src": "8470:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1032, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 969, "src": "8486:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_SwapRequest_$26909_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1027, "name": "_onSwapGivenIn", "nodeType": "Identifier", "overloadedDeclarations": [1106], "referencedDeclaration": 1106, "src": "8413:14:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_SwapRequest_$26909_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (struct IPoolSwapStructs.SwapRequest memory,uint256,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 1033, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8413:89:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "8393:109:2"}, {"expression": {"arguments": [{"id": 1036, "name": "amountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1026, "src": "8611:9:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1037, "name": "scalingFactorTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 944, "src": "8622:21:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1035, "name": "_downscaleDown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8866, "src": "8596:14:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1038, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8596:48:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 929, "id": 1039, "nodeType": "Return", "src": "8589:55:2"}]}}]}, "functionSelector": "9d2c110c", "id": 1079, "implemented": true, "kind": "function", "modifiers": [{"id": 922, "modifierName": {"id": 921, "name": "whenNotPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23690, "src": "6718:13:2", "typeDescriptions": {"typeIdentifier": "t_modifier$__$", "typeString": "modifier ()"}}, "nodeType": "ModifierInvocation", "src": "6718:13:2"}, {"arguments": [{"expression": {"id": 924, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 914, "src": "6742:7:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$26909_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 925, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "poolId", "nodeType": "MemberAccess", "referencedDeclaration": 26900, "src": "6742:14:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "id": 926, "modifierName": {"id": 923, "name": "onlyVault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6821, "src": "6732:9:2", "typeDescriptions": {"typeIdentifier": "t_modifier$_t_bytes32_$", "typeString": "modifier (bytes32)"}}, "nodeType": "ModifierInvocation", "src": "6732:25:2"}], "name": "onSwap", "nodeType": "FunctionDefinition", "overrides": {"id": 920, "nodeType": "OverrideSpecifier", "overrides": [], "src": "6709:8:2"}, "parameters": {"id": 919, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 914, "mutability": "mutable", "name": "request", "nodeType": "VariableDeclaration", "scope": 1079, "src": "6596:26:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$26909_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 913, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 26909, "src": "6596:11:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$26909_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 916, "mutability": "mutable", "name": "balanceTokenIn", "nodeType": "VariableDeclaration", "scope": 1079, "src": "6632:22:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 915, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6632:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 918, "mutability": "mutable", "name": "balanceTokenOut", "nodeType": "VariableDeclaration", "scope": 1079, "src": "6664:23:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 917, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6664:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6586:107:2"}, "returnParameters": {"id": 929, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 928, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1079, "src": "6767:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 927, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6767:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6766:9:2"}, "scope": 2102, "src": "6571:2727:2", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"baseFunctions": [7458], "body": {"id": 1105, "nodeType": "Block", "src": "9613:216:2", "statements": [{"expression": {"arguments": [{"id": 1097, "name": "currentBalanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1083, "src": "9723:21:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1098, "name": "currentBalanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1085, "src": "9746:22:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 1099, "name": "swapRequest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1081, "src": "9770:11:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$26909_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 1100, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 26898, "src": "9770:18:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1101, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1087, "src": "9790:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1102, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1089, "src": "9806:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1095, "name": "Gyro2CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 422, "src": "9694:12:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPMath_$422_$", "typeString": "type(library Gyro2CLPMath)"}}, "id": 1096, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcOutGivenIn", "nodeType": "MemberAccess", "referencedDeclaration": 320, "src": "9694:28:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 1103, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9694:128:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 1094, "id": 1104, "nodeType": "Return", "src": "9687:135:2"}]}, "id": 1106, "implemented": true, "kind": "function", "modifiers": [], "name": "_onSwapGivenIn", "nodeType": "FunctionDefinition", "overrides": {"id": 1091, "nodeType": "OverrideSpecifier", "overrides": [], "src": "9586:8:2"}, "parameters": {"id": 1090, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1081, "mutability": "mutable", "name": "swapRequest", "nodeType": "VariableDeclaration", "scope": 1106, "src": "9391:30:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$26909_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 1080, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 26909, "src": "9391:11:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$26909_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 1083, "mutability": "mutable", "name": "currentBalanceTokenIn", "nodeType": "VariableDeclaration", "scope": 1106, "src": "9431:29:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1082, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9431:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1085, "mutability": "mutable", "name": "currentBalanceTokenOut", "nodeType": "VariableDeclaration", "scope": 1106, "src": "9470:30:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1084, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9470:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1087, "mutability": "mutable", "name": "virtualParamIn", "nodeType": "VariableDeclaration", "scope": 1106, "src": "9510:22:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1086, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9510:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1089, "mutability": "mutable", "name": "virtualParamOut", "nodeType": "VariableDeclaration", "scope": 1106, "src": "9542:23:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1088, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9542:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "9381:190:2"}, "returnParameters": {"id": 1094, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1093, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1106, "src": "9604:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1092, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9604:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "9603:9:2"}, "scope": 2102, "src": "9358:471:2", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"baseFunctions": [7484], "body": {"id": 1132, "nodeType": "Block", "src": "10091:216:2", "statements": [{"expression": {"arguments": [{"id": 1124, "name": "currentBalanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1110, "src": "10201:21:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1125, "name": "currentBalanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1112, "src": "10224:22:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 1126, "name": "swapRequest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1108, "src": "10248:11:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$26909_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 1127, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 26898, "src": "10248:18:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1128, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1114, "src": "10268:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1129, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1116, "src": "10284:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1122, "name": "Gyro2CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 422, "src": "10172:12:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPMath_$422_$", "typeString": "type(library Gyro2CLPMath)"}}, "id": 1123, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcInGivenOut", "nodeType": "MemberAccess", "referencedDeclaration": 389, "src": "10172:28:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 1130, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10172:128:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 1121, "id": 1131, "nodeType": "Return", "src": "10165:135:2"}]}, "id": 1133, "implemented": true, "kind": "function", "modifiers": [], "name": "_onSwapGivenOut", "nodeType": "FunctionDefinition", "overrides": {"id": 1118, "nodeType": "OverrideSpecifier", "overrides": [], "src": "10064:8:2"}, "parameters": {"id": 1117, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1108, "mutability": "mutable", "name": "swapRequest", "nodeType": "VariableDeclaration", "scope": 1133, "src": "9869:30:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$26909_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 1107, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 26909, "src": "9869:11:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$26909_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 1110, "mutability": "mutable", "name": "currentBalanceTokenIn", "nodeType": "VariableDeclaration", "scope": 1133, "src": "9909:29:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1109, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9909:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1112, "mutability": "mutable", "name": "currentBalanceTokenOut", "nodeType": "VariableDeclaration", "scope": 1133, "src": "9948:30:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1111, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9948:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1114, "mutability": "mutable", "name": "virtualParamIn", "nodeType": "VariableDeclaration", "scope": 1133, "src": "9988:22:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1113, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9988:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1116, "mutability": "mutable", "name": "virtualParamOut", "nodeType": "VariableDeclaration", "scope": 1133, "src": "10020:23:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1115, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10020:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "9859:190:2"}, "returnParameters": {"id": 1121, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1120, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1133, "src": "10082:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1119, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10082:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "10081:9:2"}, "scope": 2102, "src": "9835:472:2", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 1182, "nodeType": "Block", "src": "10688:392:2", "statements": [{"assignments": [1150], "declarations": [{"constant": false, "id": 1150, "mutability": "mutable", "name": "scalingFactorTokenIn", "nodeType": "VariableDeclaration", "scope": 1182, "src": "10698:28:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1149, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10698:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1154, "initialValue": {"arguments": [{"id": 1152, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1140, "src": "10744:15:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 1151, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8796, "src": "10729:14:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 1153, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10729:31:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "10698:62:2"}, {"assignments": [1156], "declarations": [{"constant": false, "id": 1156, "mutability": "mutable", "name": "scalingFactorTokenOut", "nodeType": "VariableDeclaration", "scope": 1182, "src": "10770:29:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1155, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10770:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1161, "initialValue": {"arguments": [{"id": 1159, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "10817:16:2", "subExpression": {"id": 1158, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1140, "src": "10818:15:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 1157, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8796, "src": "10802:14:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 1160, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10802:32:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "10770:64:2"}, {"expression": {"id": 1167, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1162, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1136, "src": "10844:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1164, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1136, "src": "10870:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1165, "name": "scalingFactorTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1150, "src": "10886:20:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1163, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8813, "src": "10861:8:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1166, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10861:46:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10844:63:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1168, "nodeType": "ExpressionStatement", "src": "10844:63:2"}, {"expression": {"id": 1174, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1169, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1138, "src": "10917:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1171, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1138, "src": "10944:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1172, "name": "scalingFactorTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1156, "src": "10961:21:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1170, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8813, "src": "10935:8:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1173, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10935:48:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10917:66:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1175, "nodeType": "ExpressionStatement", "src": "10917:66:2"}, {"expression": {"arguments": [{"id": 1177, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1136, "src": "11024:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1178, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1138, "src": "11040:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1179, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1140, "src": "11057:15:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 1176, "name": "_calculateCurrentValues", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1283, "src": "11000:23:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256,bool) view returns (uint256,uint256,uint256)"}}, "id": 1180, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11000:73:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256,uint256)"}}, "functionReturnParameters": 1148, "id": 1181, "nodeType": "Return", "src": "10993:80:2"}]}, "documentation": {"id": 1134, "nodeType": "StructuredDocumentation", "src": "10313:39:2", "text": "@dev invariant and virtual offsets."}, "functionSelector": "3c4dd5bb", "id": 1183, "implemented": true, "kind": "function", "modifiers": [], "name": "calculateCurrentValues", "nodeType": "FunctionDefinition", "parameters": {"id": 1141, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1136, "mutability": "mutable", "name": "balanceTokenIn", "nodeType": "VariableDeclaration", "scope": 1183, "src": "10398:22:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1135, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10398:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1138, "mutability": "mutable", "name": "balanceTokenOut", "nodeType": "VariableDeclaration", "scope": 1183, "src": "10444:23:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1137, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10444:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1140, "mutability": "mutable", "name": "tokenInIsToken0", "nodeType": "VariableDeclaration", "scope": 1183, "src": "10491:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1139, "name": "bool", "nodeType": "ElementaryTypeName", "src": "10491:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "10388:129:2"}, "returnParameters": {"id": 1148, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1143, "mutability": "mutable", "name": "currentInvariant", "nodeType": "VariableDeclaration", "scope": 1183, "src": "10576:24:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1142, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10576:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1145, "mutability": "mutable", "name": "virtualParamIn", "nodeType": "VariableDeclaration", "scope": 1183, "src": "10614:22:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1144, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10614:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1147, "mutability": "mutable", "name": "virtualParamOut", "nodeType": "VariableDeclaration", "scope": 1183, "src": "10650:23:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1146, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10650:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "10562:121:2"}, "scope": 2102, "src": "10357:723:2", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 1282, "nodeType": "Block", "src": "11412:623:2", "statements": [{"assignments": [1202], "declarations": [{"constant": false, "id": 1202, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 1282, "src": "11422:25:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1200, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11422:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1201, "nodeType": "ArrayTypeName", "src": "11422:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 1208, "initialValue": {"arguments": [{"hexValue": "32", "id": 1206, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11464:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 1205, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "11450:13:2", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 1203, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11454:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1204, "nodeType": "ArrayTypeName", "src": "11454:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 1207, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11450:16:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "11422:44:2"}, {"expression": {"id": 1216, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 1209, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1202, "src": "11476:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1211, "indexExpression": {"hexValue": "30", "id": 1210, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11485:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "11476:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"id": 1212, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1189, "src": "11490:15:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 1214, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1187, "src": "11525:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1215, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "11490:50:2", "trueExpression": {"id": 1213, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1185, "src": "11508:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11476:64:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1217, "nodeType": "ExpressionStatement", "src": "11476:64:2"}, {"expression": {"id": 1225, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 1218, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1202, "src": "11550:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1220, "indexExpression": {"hexValue": "31", "id": 1219, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11559:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "11550:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"id": 1221, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1189, "src": "11564:15:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 1223, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1185, "src": "11600:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1224, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "11564:50:2", "trueExpression": {"id": 1222, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1187, "src": "11582:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11550:64:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1226, "nodeType": "ExpressionStatement", "src": "11550:64:2"}, {"assignments": [1232], "declarations": [{"constant": false, "id": 1232, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 1282, "src": "11625:28:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 1230, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11625:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1231, "length": {"hexValue": "32", "id": 1229, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11633:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "11625:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 1235, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 1233, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [683, 696], "referencedDeclaration": 683, "src": "11656:15:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function () view returns (uint256[2] memory)"}}, "id": 1234, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11656:17:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "11625:48:2"}, {"expression": {"id": 1247, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1236, "name": "currentInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1192, "src": "11684:16:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1239, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1202, "src": "11736:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"baseExpression": {"id": 1240, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1232, "src": "11746:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1242, "indexExpression": {"hexValue": "30", "id": 1241, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11757:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "11746:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1243, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1232, "src": "11761:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1245, "indexExpression": {"hexValue": "31", "id": 1244, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11772:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "11761:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1237, "name": "Gyro2CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 422, "src": "11703:12:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPMath_$422_$", "typeString": "type(library Gyro2CLPMath)"}}, "id": 1238, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 45, "src": "11703:32:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256)"}}, "id": 1246, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11703:72:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11684:91:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1248, "nodeType": "ExpressionStatement", "src": "11684:91:2"}, {"assignments": [1254], "declarations": [{"constant": false, "id": 1254, "mutability": "mutable", "name": "virtualParam", "nodeType": "VariableDeclaration", "scope": 1282, "src": "11786:30:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 1252, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11786:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1253, "length": {"hexValue": "32", "id": 1251, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11794:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "11786:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 1259, "initialValue": {"arguments": [{"id": 1256, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1232, "src": "11841:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, {"id": 1257, "name": "currentInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1192, "src": "11853:16:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1255, "name": "_getVirtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 849, "src": "11819:21:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function (uint256[2] memory,uint256) view returns (uint256[2] memory)"}}, "id": 1258, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11819:51:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "11786:84:2"}, {"expression": {"id": 1269, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1260, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1194, "src": "11881:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"id": 1261, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1189, "src": "11898:15:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"baseExpression": {"id": 1265, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1254, "src": "11934:12:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1267, "indexExpression": {"hexValue": "31", "id": 1266, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11947:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "11934:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1268, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "11898:51:2", "trueExpression": {"baseExpression": {"id": 1262, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1254, "src": "11916:12:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1264, "indexExpression": {"hexValue": "30", "id": 1263, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11929:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "11916:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11881:68:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1270, "nodeType": "ExpressionStatement", "src": "11881:68:2"}, {"expression": {"id": 1280, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1271, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1196, "src": "11959:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"id": 1272, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1189, "src": "11977:15:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"baseExpression": {"id": 1276, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1254, "src": "12013:12:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1278, "indexExpression": {"hexValue": "30", "id": 1277, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12026:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "12013:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1279, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "11977:51:2", "trueExpression": {"baseExpression": {"id": 1273, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1254, "src": "11995:12:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1275, "indexExpression": {"hexValue": "31", "id": 1274, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12008:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "11995:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11959:69:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1281, "nodeType": "ExpressionStatement", "src": "11959:69:2"}]}, "id": 1283, "implemented": true, "kind": "function", "modifiers": [], "name": "_calculateCurrentValues", "nodeType": "FunctionDefinition", "parameters": {"id": 1190, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1185, "mutability": "mutable", "name": "balanceTokenIn", "nodeType": "VariableDeclaration", "scope": 1283, "src": "11128:22:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1184, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11128:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1187, "mutability": "mutable", "name": "balanceTokenOut", "nodeType": "VariableDeclaration", "scope": 1283, "src": "11170:23:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1186, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11170:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1189, "mutability": "mutable", "name": "tokenInIsToken0", "nodeType": "VariableDeclaration", "scope": 1283, "src": "11213:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1188, "name": "bool", "nodeType": "ElementaryTypeName", "src": "11213:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "11118:121:2"}, "returnParameters": {"id": 1197, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1192, "mutability": "mutable", "name": "currentInvariant", "nodeType": "VariableDeclaration", "scope": 1283, "src": "11300:24:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1191, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11300:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1194, "mutability": "mutable", "name": "virtualParamIn", "nodeType": "VariableDeclaration", "scope": 1283, "src": "11338:22:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1193, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11338:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1196, "mutability": "mutable", "name": "virtualParamOut", "nodeType": "VariableDeclaration", "scope": 1283, "src": "11374:23:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1195, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11374:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "11286:121:2"}, "scope": 2102, "src": "11086:949:2", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [7705], "body": {"id": 1378, "nodeType": "Block", "src": "13016:928:2", "statements": [{"assignments": [1304], "declarations": [{"constant": false, "id": 1304, "mutability": "mutable", "name": "kind", "nodeType": "VariableDeclaration", "scope": 1378, "src": "13026:30:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$30087", "typeString": "enum BaseWeightedPool.JoinKind"}, "typeName": {"id": 1303, "name": "BaseWeightedPool.JoinKind", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 30087, "src": "13026:25:2", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$30087", "typeString": "enum BaseWeightedPool.JoinKind"}}, "visibility": "internal"}], "id": 1308, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1305, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1292, "src": "13059:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 1306, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "joinKind", "nodeType": "MemberAccess", "referencedDeclaration": 19249, "src": "13059:17:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_enum$_JoinKind_$30087_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (enum BaseWeightedPool.JoinKind)"}}, "id": 1307, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13059:19:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$30087", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "VariableDeclarationStatement", "src": "13026:52:2"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_JoinKind_$30087", "typeString": "enum BaseWeightedPool.JoinKind"}, "id": 1314, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1310, "name": "kind", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1304, "src": "13097:4:2", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$30087", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 1311, "name": "BaseWeightedPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31288, "src": "13105:16:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BaseWeightedPool_$31288_$", "typeString": "type(contract BaseWeightedPool)"}}, "id": 1312, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "JoinKind", "nodeType": "MemberAccess", "referencedDeclaration": 30087, "src": "13105:25:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_JoinKind_$30087_$", "typeString": "type(enum BaseWeightedPool.JoinKind)"}}, "id": 1313, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "INIT", "nodeType": "MemberAccess", "src": "13105:30:2", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$30087", "typeString": "enum BaseWeightedPool.JoinKind"}}, "src": "13097:38:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 1315, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 27814, "src": "13137:6:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$27814_$", "typeString": "type(library Errors)"}}, "id": 1316, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNINITIALIZED", "nodeType": "MemberAccess", "referencedDeclaration": 27483, "src": "13137:20:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1309, "name": "_require", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 27409, "src": "13088:8:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 1317, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13088:70:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1318, "nodeType": "ExpressionStatement", "src": "13088:70:2"}, {"assignments": [1323], "declarations": [{"constant": false, "id": 1323, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 1378, "src": "13169:26:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1321, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13169:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1322, "nodeType": "ArrayTypeName", "src": "13169:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 1327, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1324, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1292, "src": "13198:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 1325, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "initialAmountsIn", "nodeType": "MemberAccess", "referencedDeclaration": 19288, "src": "13198:25:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (uint256[] memory)"}}, "id": 1326, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13198:27:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "13169:56:2"}, {"expression": {"arguments": [{"expression": {"id": 1331, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1323, "src": "13271:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1332, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "13271:16:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "32", "id": 1333, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13289:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "expression": {"id": 1328, "name": "InputHelpers", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18583, "src": "13235:12:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_InputHelpers_$18583_$", "typeString": "type(library InputHelpers)"}}, "id": 1330, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ensureInputLengthMatch", "nodeType": "MemberAccess", "referencedDeclaration": 18491, "src": "13235:35:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256) pure"}}, "id": 1334, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13235:56:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1335, "nodeType": "ExpressionStatement", "src": "13235:56:2"}, {"expression": {"arguments": [{"id": 1337, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1323, "src": "13315:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}], "id": 1336, "name": "_upscaleArray", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8849, "src": "13301:13:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$", "typeString": "function (uint256[] memory) view"}}, "id": 1338, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13301:24:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1339, "nodeType": "ExpressionStatement", "src": "13301:24:2"}, {"assignments": [1345], "declarations": [{"constant": false, "id": 1345, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 1378, "src": "13336:28:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 1343, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13336:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1344, "length": {"hexValue": "32", "id": 1342, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13344:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "13336:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 1348, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 1346, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [683, 696], "referencedDeclaration": 683, "src": "13367:15:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function () view returns (uint256[2] memory)"}}, "id": 1347, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13367:17:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "13336:48:2"}, {"assignments": [1350], "declarations": [{"constant": false, "id": 1350, "mutability": "mutable", "name": "invariantAfterJoin", "nodeType": "VariableDeclaration", "scope": 1378, "src": "13395:26:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1349, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13395:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1361, "initialValue": {"arguments": [{"id": 1353, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1323, "src": "13457:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"baseExpression": {"id": 1354, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1345, "src": "13468:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1356, "indexExpression": {"hexValue": "30", "id": 1355, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13479:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "13468:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1357, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1345, "src": "13483:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1359, "indexExpression": {"hexValue": "31", "id": 1358, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13494:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "13483:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1351, "name": "Gyro2CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 422, "src": "13424:12:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPMath_$422_$", "typeString": "type(library Gyro2CLPMath)"}}, "id": 1352, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 45, "src": "13424:32:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256)"}}, "id": 1360, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13424:73:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "13395:102:2"}, {"assignments": [1363], "declarations": [{"constant": false, "id": 1363, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 1378, "src": "13794:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1362, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13794:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1369, "initialValue": {"arguments": [{"id": 1366, "name": "invariantAfterJoin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1350, "src": "13826:18:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "32", "id": 1367, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13846:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "expression": {"id": 1364, "name": "Math", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18872, "src": "13817:4:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Math_$18872_$", "typeString": "type(library Math)"}}, "id": 1365, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mul", "nodeType": "MemberAccess", "referencedDeclaration": 18791, "src": "13817:8:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1368, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13817:31:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "13794:54:2"}, {"expression": {"id": 1372, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1370, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6766, "src": "13859:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 1371, "name": "invariantAfterJoin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1350, "src": "13876:18:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "13859:35:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1373, "nodeType": "ExpressionStatement", "src": "13859:35:2"}, {"expression": {"components": [{"id": 1374, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1363, "src": "13913:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1375, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1323, "src": "13927:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1376, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "13912:25:2", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "functionReturnParameters": 1300, "id": 1377, "nodeType": "Return", "src": "13905:32:2"}]}, "documentation": {"id": 1284, "nodeType": "StructuredDocumentation", "src": "12041:801:2", "text": " @dev Called when the Pool is joined for the first time; that is, when the BPT total supply is zero.\n Returns the amount of BPT to mint, and the token amounts the Pool will receive in return.\n Minted BPT will be sent to `recipient`, except for _MINIMUM_BPT, which will be deducted from this amount and sent\n to the zero address instead. This will cause that BPT to remain forever locked there, preventing total BPT from\n ever dropping below that value, and ensuring `_onInitializePool` can only be called once in the entire Pool's\n lifetime.\n The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n be downscaled (rounding up) before being returned to the Vault."}, "id": 1379, "implemented": true, "kind": "function", "modifiers": [], "name": "_onInitializePool", "nodeType": "FunctionDefinition", "overrides": {"id": 1294, "nodeType": "OverrideSpecifier", "overrides": [], "src": "12971:8:2"}, "parameters": {"id": 1293, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1286, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1379, "src": "12883:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 1285, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "12883:7:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 1288, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1379, "src": "12900:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1287, "name": "address", "nodeType": "ElementaryTypeName", "src": "12900:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1290, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1379, "src": "12917:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1289, "name": "address", "nodeType": "ElementaryTypeName", "src": "12917:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1292, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 1379, "src": "12934:21:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1291, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "12934:5:2", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "12873:88:2"}, "returnParameters": {"id": 1300, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1296, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1379, "src": "12989:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1295, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12989:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1299, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1379, "src": "12998:16:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1297, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12998:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1298, "nodeType": "ArrayTypeName", "src": "12998:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "12988:27:2"}, "scope": 2102, "src": "12847:1097:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [7800], "body": {"id": 1503, "nodeType": "Block", "src": "15734:1769:2", "statements": [{"assignments": [1412], "declarations": [{"constant": false, "id": 1412, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 1503, "src": "15803:28:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 1410, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15803:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1411, "length": {"hexValue": "32", "id": 1409, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15811:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "15803:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 1415, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 1413, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [683, 696], "referencedDeclaration": 683, "src": "15834:15:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function () view returns (uint256[2] memory)"}}, "id": 1414, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15834:17:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "15803:48:2"}, {"assignments": [1417], "declarations": [{"constant": false, "id": 1417, "mutability": "mutable", "name": "invariantBeforeAction", "nodeType": "VariableDeclaration", "scope": 1503, "src": "16155:29:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1416, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16155:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1428, "initialValue": {"arguments": [{"id": 1420, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1389, "src": "16220:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"baseExpression": {"id": 1421, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1412, "src": "16230:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1423, "indexExpression": {"hexValue": "30", "id": 1422, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16241:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "16230:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1424, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1412, "src": "16245:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1426, "indexExpression": {"hexValue": "31", "id": 1425, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16256:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "16245:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1418, "name": "Gyro2CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 422, "src": "16187:12:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPMath_$422_$", "typeString": "type(library Gyro2CLPMath)"}}, "id": 1419, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 45, "src": "16187:32:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256)"}}, "id": 1427, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16187:72:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "16155:104:2"}, {"assignments": [1434], "declarations": [{"constant": false, "id": 1434, "mutability": "mutable", "name": "virtualParam", "nodeType": "VariableDeclaration", "scope": 1503, "src": "16269:30:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 1432, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16269:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1433, "length": {"hexValue": "32", "id": 1431, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16277:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "16269:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 1439, "initialValue": {"arguments": [{"id": 1436, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1412, "src": "16324:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, {"id": 1437, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1417, "src": "16336:21:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1435, "name": "_getVirtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 849, "src": "16302:21:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function (uint256[2] memory,uint256) view returns (uint256[2] memory)"}}, "id": 1438, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16302:56:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "16269:89:2"}, {"expression": {"arguments": [{"id": 1441, "name": "lastChangeBlock", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1391, "src": "16437:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1442, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1389, "src": "16454:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1444, "indexExpression": {"hexValue": "30", "id": 1443, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16463:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "16454:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1445, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1389, "src": "16467:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1447, "indexExpression": {"hexValue": "31", "id": 1446, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16476:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "16467:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1448, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1434, "src": "16480:12:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1450, "indexExpression": {"hexValue": "30", "id": 1449, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16493:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "16480:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1451, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1434, "src": "16497:12:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1453, "indexExpression": {"hexValue": "31", "id": 1452, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16510:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "16497:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1440, "name": "_updateOracle", "nodeType": "Identifier", "overloadedDeclarations": [2078, 2090], "referencedDeclaration": 2078, "src": "16423:13:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256,uint256,uint256,uint256)"}}, "id": 1454, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16423:90:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1455, "nodeType": "ExpressionStatement", "src": "16423:90:2"}, {"expression": {"arguments": [{"id": 1457, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1417, "src": "16540:21:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1456, "name": "_distributeFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1828, "src": "16524:15:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 1458, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16524:38:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1459, "nodeType": "ExpressionStatement", "src": "16524:38:2"}, {"assignments": [1461, 1464], "declarations": [{"constant": false, "id": 1461, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 1503, "src": "16574:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1460, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16574:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1464, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 1503, "src": "16596:26:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1462, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16596:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1463, "nodeType": "ArrayTypeName", "src": "16596:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 1469, "initialValue": {"arguments": [{"id": 1466, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1389, "src": "16634:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 1467, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1395, "src": "16644:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 1465, "name": "_doJoin", "nodeType": "Identifier", "overloadedDeclarations": [1548, 7869], "referencedDeclaration": 1548, "src": "16626:7:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 1468, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16626:27:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "16573:80:2"}, {"condition": {"expression": {"id": 1470, "name": "_capParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6555, "src": "16668:10:2", "typeDescriptions": {"typeIdentifier": "t_struct$_CapParams_$19457_storage", "typeString": "struct ICappedLiquidity.CapParams storage ref"}}, "id": 1471, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "capEnabled", "nodeType": "MemberAccess", "referencedDeclaration": 19452, "src": "16668:21:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1482, "nodeType": "IfStatement", "src": "16664:113:2", "trueBody": {"id": 1481, "nodeType": "Block", "src": "16691:86:2", "statements": [{"expression": {"arguments": [{"id": 1473, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1461, "src": "16716:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"id": 1475, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1386, "src": "16740:9:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 1474, "name": "balanceOf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23903, "src": "16730:9:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view returns (uint256)"}}, "id": 1476, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16730:20:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 1477, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23889, "src": "16752:11:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1478, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16752:13:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1472, "name": "_ensureCap", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6714, "src": "16705:10:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256,uint256) view"}}, "id": 1479, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16705:61:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1480, "nodeType": "ExpressionStatement", "src": "16705:61:2"}]}}, {"expression": {"id": 1492, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1483, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6766, "src": "17211:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1486, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1417, "src": "17266:21:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1487, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1461, "src": "17289:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 1488, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23889, "src": "17303:11:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1489, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17303:13:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "74727565", "id": 1490, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "17318:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "expression": {"id": 1484, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18471, "src": "17228:12:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$18471_$", "typeString": "type(library GyroPoolMath)"}}, "id": 1485, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "liquidityInvariantUpdate", "nodeType": "MemberAccess", "referencedDeclaration": 18390, "src": "17228:37:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,bool) pure returns (uint256)"}}, "id": 1491, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17228:95:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "17211:112:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1493, "nodeType": "ExpressionStatement", "src": "17211:112:2"}, {"expression": {"components": [{"id": 1494, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1461, "src": "17454:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1495, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1464, "src": "17468:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"arguments": [{"hexValue": "32", "id": 1499, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "17493:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 1498, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "17479:13:2", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 1496, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17483:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1497, "nodeType": "ArrayTypeName", "src": "17483:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 1500, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17479:16:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1501, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "17453:43:2", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory,uint256[] memory)"}}, "functionReturnParameters": 1406, "id": 1502, "nodeType": "Return", "src": "17446:50:2"}]}, "documentation": {"id": 1380, "nodeType": "StructuredDocumentation", "src": "13950:1400:2", "text": " @dev Called whenever the Pool is joined after the first initialization join (see `_onInitializePool`).\n Returns the amount of BPT to mint, the token amounts that the Pool will receive in return, and the number of\n tokens to pay in protocol swap fees.\n Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n Minted BPT will be sent to `recipient`.\n The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n be downscaled (rounding up) before being returned to the Vault.\n Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onJoinPool`). These\n amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way\n Responsibility for updating the oracle has been moved from `onJoinPool()` (without the underscore) to this\n function. That is because both this function and `_updateOracle()` need access to the invariant and this way we\n can share the computation."}, "id": 1504, "implemented": true, "kind": "function", "modifiers": [], "name": "_onJoinPool", "nodeType": "FunctionDefinition", "overrides": {"id": 1397, "nodeType": "OverrideSpecifier", "overrides": [], "src": "15613:8:2"}, "parameters": {"id": 1396, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1382, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1504, "src": "15385:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 1381, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "15385:7:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 1384, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1504, "src": "15402:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1383, "name": "address", "nodeType": "ElementaryTypeName", "src": "15402:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1386, "mutability": "mutable", "name": "recipient", "nodeType": "VariableDeclaration", "scope": 1504, "src": "15419:17:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1385, "name": "address", "nodeType": "ElementaryTypeName", "src": "15419:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1389, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 1504, "src": "15446:25:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1387, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15446:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1388, "nodeType": "ArrayTypeName", "src": "15446:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1391, "mutability": "mutable", "name": "lastChangeBlock", "nodeType": "VariableDeclaration", "scope": 1504, "src": "15481:23:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1390, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15481:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1393, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1504, "src": "15514:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1392, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15514:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1395, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 1504, "src": "15560:21:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1394, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "15560:5:2", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "15375:212:2"}, "returnParameters": {"id": 1406, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1399, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1504, "src": "15652:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1398, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15652:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1402, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1504, "src": "15673:16:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1400, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15673:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1401, "nodeType": "ArrayTypeName", "src": "15673:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1405, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1504, "src": "15703:16:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1403, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15703:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1404, "nodeType": "ArrayTypeName", "src": "15703:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "15638:91:2"}, "scope": 2102, "src": "15355:2148:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 1547, "nodeType": "Block", "src": "17649:441:2", "statements": [{"assignments": [1520], "declarations": [{"constant": false, "id": 1520, "mutability": "mutable", "name": "kind", "nodeType": "VariableDeclaration", "scope": 1547, "src": "17659:30:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$30087", "typeString": "enum BaseWeightedPool.JoinKind"}, "typeName": {"id": 1519, "name": "BaseWeightedPool.JoinKind", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 30087, "src": "17659:25:2", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$30087", "typeString": "enum BaseWeightedPool.JoinKind"}}, "visibility": "internal"}], "id": 1524, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1521, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1509, "src": "17692:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 1522, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "joinKind", "nodeType": "MemberAccess", "referencedDeclaration": 19249, "src": "17692:17:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_enum$_JoinKind_$30087_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (enum BaseWeightedPool.JoinKind)"}}, "id": 1523, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17692:19:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$30087", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "VariableDeclarationStatement", "src": "17659:52:2"}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_JoinKind_$30087", "typeString": "enum BaseWeightedPool.JoinKind"}, "id": 1529, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1525, "name": "kind", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1520, "src": "17848:4:2", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$30087", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 1526, "name": "BaseWeightedPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31288, "src": "17856:16:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BaseWeightedPool_$31288_$", "typeString": "type(contract BaseWeightedPool)"}}, "id": 1527, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "JoinKind", "nodeType": "MemberAccess", "referencedDeclaration": 30087, "src": "17856:25:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_JoinKind_$30087_$", "typeString": "type(enum BaseWeightedPool.JoinKind)"}}, "id": 1528, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "ALL_TOKENS_IN_FOR_EXACT_BPT_OUT", "nodeType": "MemberAccess", "src": "17856:57:2", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$30087", "typeString": "enum BaseWeightedPool.JoinKind"}}, "src": "17848:65:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 1545, "nodeType": "Block", "src": "18024:60:2", "statements": [{"expression": {"arguments": [{"expression": {"id": 1541, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 27814, "src": "18046:6:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$27814_$", "typeString": "type(library Errors)"}}, "id": 1542, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNHANDLED_JOIN_KIND", "nodeType": "MemberAccess", "referencedDeclaration": 27528, "src": "18046:26:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1540, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 27417, "src": "18038:7:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$", "typeString": "function (uint256) pure"}}, "id": 1543, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18038:35:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1544, "nodeType": "ExpressionStatement", "src": "18038:35:2"}]}, "id": 1546, "nodeType": "IfStatement", "src": "17844:240:2", "trueBody": {"id": 1539, "nodeType": "Block", "src": "17915:103:2", "statements": [{"expression": {"id": 1537, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 1530, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1512, "src": "17930:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1531, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1515, "src": "17944:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1532, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "17929:25:2", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1534, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1507, "src": "17988:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 1535, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1509, "src": "17998:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 1533, "name": "_joinAllTokensInForExactBPTOut", "nodeType": "Identifier", "overloadedDeclarations": [1586], "referencedDeclaration": 1586, "src": "17957:30:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 1536, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17957:50:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "17929:78:2", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1538, "nodeType": "ExpressionStatement", "src": "17929:78:2"}]}}]}, "id": 1548, "implemented": true, "kind": "function", "modifiers": [], "name": "_doJoin", "nodeType": "FunctionDefinition", "parameters": {"id": 1510, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1507, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 1548, "src": "17526:25:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1505, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17526:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1506, "nodeType": "ArrayTypeName", "src": "17526:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1509, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 1548, "src": "17553:21:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1508, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "17553:5:2", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "17525:50:2"}, "returnParameters": {"id": 1516, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1512, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 1548, "src": "17599:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1511, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17599:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1515, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 1548, "src": "17621:26:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1513, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17621:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1514, "nodeType": "ArrayTypeName", "src": "17621:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "17598:50:2"}, "scope": 2102, "src": "17509:581:2", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [8039], "body": {"id": 1585, "nodeType": "Block", "src": "18281:343:2", "statements": [{"assignments": [1563], "declarations": [{"constant": false, "id": 1563, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 1585, "src": "18291:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1562, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18291:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1567, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1564, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1553, "src": "18314:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 1565, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "allTokensInForExactBptOut", "nodeType": "MemberAccess", "referencedDeclaration": 19363, "src": "18314:34:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (uint256)"}}, "id": 1566, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18314:36:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "18291:59:2"}, {"assignments": [1572], "declarations": [{"constant": false, "id": 1572, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 1585, "src": "18461:26:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1570, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18461:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1571, "nodeType": "ArrayTypeName", "src": "18461:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 1580, "initialValue": {"arguments": [{"id": 1575, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1551, "src": "18536:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 1576, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1563, "src": "18546:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 1577, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23889, "src": "18560:11:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1578, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18560:13:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1573, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18471, "src": "18490:12:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$18471_$", "typeString": "type(library GyroPoolMath)"}}, "id": 1574, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcAllTokensInGivenExactBptOut", "nodeType": "MemberAccess", "referencedDeclaration": 17770, "src": "18490:45:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256[] memory)"}}, "id": 1579, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18490:84:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "18461:113:2"}, {"expression": {"components": [{"id": 1581, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1563, "src": "18593:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1582, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1572, "src": "18607:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1583, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "18592:25:2", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "functionReturnParameters": 1561, "id": 1584, "nodeType": "Return", "src": "18585:32:2"}]}, "id": 1586, "implemented": true, "kind": "function", "modifiers": [], "name": "_joinAllTokensInForExactBPTOut", "nodeType": "FunctionDefinition", "overrides": {"id": 1555, "nodeType": "OverrideSpecifier", "overrides": [], "src": "18224:8:2"}, "parameters": {"id": 1554, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1551, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 1586, "src": "18136:25:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1549, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18136:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1550, "nodeType": "ArrayTypeName", "src": "18136:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1553, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 1586, "src": "18163:21:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1552, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "18163:5:2", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "18135:50:2"}, "returnParameters": {"id": 1561, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1557, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1586, "src": "18250:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1556, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18250:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1560, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1586, "src": "18259:16:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1558, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18259:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1559, "nodeType": "ArrayTypeName", "src": "18259:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "18249:27:2"}, "scope": 2102, "src": "18096:528:2", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [8228], "body": {"id": 1718, "nodeType": "Block", "src": "20104:2452:2", "statements": [{"assignments": [1619], "declarations": [{"constant": false, "id": 1619, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 1718, "src": "20269:28:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 1617, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20269:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1618, "length": {"hexValue": "32", "id": 1616, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20277:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "20269:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 1622, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 1620, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [683, 696], "referencedDeclaration": 683, "src": "20300:15:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function () view returns (uint256[2] memory)"}}, "id": 1621, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20300:17:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "20269:48:2"}, {"condition": {"arguments": [], "expression": {"argumentTypes": [], "id": 1623, "name": "_isNotPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23785, "src": "20332:12:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$", "typeString": "function () view returns (bool)"}}, "id": 1624, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20332:14:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 1707, "nodeType": "Block", "src": "21752:625:2", "statements": [{"expression": {"id": 1697, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 1690, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1606, "src": "21967:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1691, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1609, "src": "21980:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1692, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "21966:25:2", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1694, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1596, "src": "22002:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 1695, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1602, "src": "22012:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 1693, "name": "_doExit", "nodeType": "Identifier", "overloadedDeclarations": [1763, 8297], "referencedDeclaration": 1763, "src": "21994:7:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 1696, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21994:27:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "21966:55:2", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1698, "nodeType": "ExpressionStatement", "src": "21966:55:2"}, {"expression": {"id": 1705, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1699, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6766, "src": "22332:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"arguments": [{"id": 1702, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "22354:7:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 1701, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22354:7:2", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}], "id": 1700, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "22349:4:2", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 1703, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22349:13:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint256", "typeString": "type(uint256)"}}, "id": 1704, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "22349:17:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "22332:34:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1706, "nodeType": "ExpressionStatement", "src": "22332:34:2"}]}, "id": 1708, "nodeType": "IfStatement", "src": "20328:2049:2", "trueBody": {"id": 1689, "nodeType": "Block", "src": "20348:1398:2", "statements": [{"assignments": [1626], "declarations": [{"constant": false, "id": 1626, "mutability": "mutable", "name": "invariantBeforeAction", "nodeType": "VariableDeclaration", "scope": 1689, "src": "20668:29:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1625, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20668:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1637, "initialValue": {"arguments": [{"id": 1629, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1596, "src": "20733:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"baseExpression": {"id": 1630, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1619, "src": "20743:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1632, "indexExpression": {"hexValue": "30", "id": 1631, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20754:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "20743:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1633, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1619, "src": "20758:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1635, "indexExpression": {"hexValue": "31", "id": 1634, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20769:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "20758:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1627, "name": "Gyro2CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 422, "src": "20700:12:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPMath_$422_$", "typeString": "type(library Gyro2CLPMath)"}}, "id": 1628, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 45, "src": "20700:32:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256)"}}, "id": 1636, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20700:72:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "20668:104:2"}, {"assignments": [1643], "declarations": [{"constant": false, "id": 1643, "mutability": "mutable", "name": "virtualParam", "nodeType": "VariableDeclaration", "scope": 1689, "src": "20786:30:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 1641, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20786:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1642, "length": {"hexValue": "32", "id": 1640, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20794:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "20786:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 1648, "initialValue": {"arguments": [{"id": 1645, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1619, "src": "20841:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, {"id": 1646, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1626, "src": "20853:21:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1644, "name": "_getVirtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 849, "src": "20819:21:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function (uint256[2] memory,uint256) view returns (uint256[2] memory)"}}, "id": 1647, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20819:56:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "20786:89:2"}, {"expression": {"arguments": [{"id": 1650, "name": "lastChangeBlock", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1598, "src": "20966:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1651, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1596, "src": "20983:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1653, "indexExpression": {"hexValue": "30", "id": 1652, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20992:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "20983:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1654, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1596, "src": "20996:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1656, "indexExpression": {"hexValue": "31", "id": 1655, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "21005:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "20996:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1657, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1643, "src": "21009:12:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1659, "indexExpression": {"hexValue": "30", "id": 1658, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "21022:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "21009:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1660, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1643, "src": "21026:12:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1662, "indexExpression": {"hexValue": "31", "id": 1661, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "21039:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "21026:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1649, "name": "_updateOracle", "nodeType": "Identifier", "overloadedDeclarations": [2078, 2090], "referencedDeclaration": 2078, "src": "20952:13:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256,uint256,uint256,uint256)"}}, "id": 1663, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20952:90:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1664, "nodeType": "ExpressionStatement", "src": "20952:90:2"}, {"expression": {"arguments": [{"id": 1666, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1626, "src": "21073:21:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1665, "name": "_distributeFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1828, "src": "21057:15:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 1667, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21057:38:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1668, "nodeType": "ExpressionStatement", "src": "21057:38:2"}, {"expression": {"id": 1676, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 1669, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1606, "src": "21111:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1670, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1609, "src": "21124:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1671, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "21110:25:2", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1673, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1596, "src": "21146:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 1674, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1602, "src": "21156:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 1672, "name": "_doExit", "nodeType": "Identifier", "overloadedDeclarations": [1763, 8297], "referencedDeclaration": 1763, "src": "21138:7:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 1675, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21138:27:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "21110:55:2", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1677, "nodeType": "ExpressionStatement", "src": "21110:55:2"}, {"expression": {"id": 1687, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1678, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6766, "src": "21623:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1681, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1626, "src": "21678:21:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1682, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1606, "src": "21701:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 1683, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23889, "src": "21714:11:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1684, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21714:13:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "66616c7365", "id": 1685, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "21729:5:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "expression": {"id": 1679, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18471, "src": "21640:12:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$18471_$", "typeString": "type(library GyroPoolMath)"}}, "id": 1680, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "liquidityInvariantUpdate", "nodeType": "MemberAccess", "referencedDeclaration": 18390, "src": "21640:37:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,bool) pure returns (uint256)"}}, "id": 1686, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21640:95:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "21623:112:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1688, "nodeType": "ExpressionStatement", "src": "21623:112:2"}]}}, {"expression": {"components": [{"id": 1709, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1606, "src": "22507:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1710, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1609, "src": "22520:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"arguments": [{"hexValue": "32", "id": 1714, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "22546:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 1713, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "22532:13:2", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 1711, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22536:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1712, "nodeType": "ArrayTypeName", "src": "22536:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 1715, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22532:16:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1716, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "22506:43:2", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory,uint256[] memory)"}}, "functionReturnParameters": 1613, "id": 1717, "nodeType": "Return", "src": "22499:50:2"}]}, "documentation": {"id": 1587, "nodeType": "StructuredDocumentation", "src": "18630:1054:2", "text": " @dev Called whenever the Pool is exited.\n Returns the amount of BPT to burn, the token amounts for each Pool token that the Pool will grant in return, and\n the number of tokens to pay in protocol swap fees.\n Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n BPT will be burnt from `sender`.\n The Pool will grant tokens to `recipient`. These amounts are considered upscaled and will be downscaled\n (rounding down) before being returned to the Vault.\n Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onExitPool`). These\n amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way"}, "id": 1719, "implemented": true, "kind": "function", "modifiers": [], "name": "_onExitPool", "nodeType": "FunctionDefinition", "overrides": {"id": 1604, "nodeType": "OverrideSpecifier", "overrides": [], "src": "19938:8:2"}, "parameters": {"id": 1603, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1589, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1719, "src": "19719:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 1588, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "19719:7:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 1591, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1719, "src": "19736:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1590, "name": "address", "nodeType": "ElementaryTypeName", "src": "19736:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1593, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1719, "src": "19753:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1592, "name": "address", "nodeType": "ElementaryTypeName", "src": "19753:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1596, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 1719, "src": "19770:25:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1594, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19770:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1595, "nodeType": "ArrayTypeName", "src": "19770:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1598, "mutability": "mutable", "name": "lastChangeBlock", "nodeType": "VariableDeclaration", "scope": 1719, "src": "19805:23:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1597, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19805:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1600, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1719, "src": "19838:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1599, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19838:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1602, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 1719, "src": "19885:21:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1601, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "19885:5:2", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "19709:203:2"}, "returnParameters": {"id": 1613, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1606, "mutability": "mutable", "name": "bptAmountIn", "nodeType": "VariableDeclaration", "scope": 1719, "src": "19977:19:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1605, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19977:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1609, "mutability": "mutable", "name": "amountsOut", "nodeType": "VariableDeclaration", "scope": 1719, "src": "20010:27:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1607, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20010:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1608, "nodeType": "ArrayTypeName", "src": "20010:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1612, "mutability": "mutable", "name": "dueProtocolFeeAmounts", "nodeType": "VariableDeclaration", "scope": 1719, "src": "20051:38:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1610, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20051:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1611, "nodeType": "ArrayTypeName", "src": "20051:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "19963:136:2"}, "scope": 2102, "src": "19689:2867:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 1762, "nodeType": "Block", "src": "22702:452:2", "statements": [{"assignments": [1735], "declarations": [{"constant": false, "id": 1735, "mutability": "mutable", "name": "kind", "nodeType": "VariableDeclaration", "scope": 1762, "src": "22712:30:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$30092", "typeString": "enum BaseWeightedPool.ExitKind"}, "typeName": {"id": 1734, "name": "BaseWeightedPool.ExitKind", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 30092, "src": "22712:25:2", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$30092", "typeString": "enum BaseWeightedPool.ExitKind"}}, "visibility": "internal"}], "id": 1739, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1736, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1724, "src": "22745:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 1737, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "exitKind", "nodeType": "MemberAccess", "referencedDeclaration": 19265, "src": "22745:17:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_enum$_ExitKind_$30092_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (enum BaseWeightedPool.ExitKind)"}}, "id": 1738, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22745:19:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$30092", "typeString": "enum BaseWeightedPool.ExitKind"}}, "nodeType": "VariableDeclarationStatement", "src": "22712:52:2"}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_ExitKind_$30092", "typeString": "enum BaseWeightedPool.ExitKind"}, "id": 1744, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1740, "name": "kind", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1735, "src": "22919:4:2", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$30092", "typeString": "enum BaseWeightedPool.ExitKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 1741, "name": "BaseWeightedPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31288, "src": "22927:16:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BaseWeightedPool_$31288_$", "typeString": "type(contract BaseWeightedPool)"}}, "id": 1742, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ExitKind", "nodeType": "MemberAccess", "referencedDeclaration": 30092, "src": "22927:25:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_ExitKind_$30092_$", "typeString": "type(enum BaseWeightedPool.ExitKind)"}}, "id": 1743, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "EXACT_BPT_IN_FOR_TOKENS_OUT", "nodeType": "MemberAccess", "src": "22927:53:2", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$30092", "typeString": "enum BaseWeightedPool.ExitKind"}}, "src": "22919:61:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 1760, "nodeType": "Block", "src": "23088:60:2", "statements": [{"expression": {"arguments": [{"expression": {"id": 1756, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 27814, "src": "23110:6:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$27814_$", "typeString": "type(library Errors)"}}, "id": 1757, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNHANDLED_EXIT_KIND", "nodeType": "MemberAccess", "referencedDeclaration": 27606, "src": "23110:26:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1755, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 27417, "src": "23102:7:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$", "typeString": "function (uint256) pure"}}, "id": 1758, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23102:35:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1759, "nodeType": "ExpressionStatement", "src": "23102:35:2"}]}, "id": 1761, "nodeType": "IfStatement", "src": "22915:233:2", "trueBody": {"id": 1754, "nodeType": "Block", "src": "22982:100:2", "statements": [{"expression": {"id": 1752, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 1745, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1727, "src": "22997:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1746, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1730, "src": "23010:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1747, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "22996:25:2", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1749, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1722, "src": "23052:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 1750, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1724, "src": "23062:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 1748, "name": "_exitExactBPTInForTokensOut", "nodeType": "Identifier", "overloadedDeclarations": [1801], "referencedDeclaration": 1801, "src": "23024:27:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 1751, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23024:47:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "22996:75:2", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1753, "nodeType": "ExpressionStatement", "src": "22996:75:2"}]}}]}, "id": 1763, "implemented": true, "kind": "function", "modifiers": [], "name": "_doExit", "nodeType": "FunctionDefinition", "parameters": {"id": 1725, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1722, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 1763, "src": "22579:25:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1720, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22579:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1721, "nodeType": "ArrayTypeName", "src": "22579:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1724, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 1763, "src": "22606:21:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1723, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "22606:5:2", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "22578:50:2"}, "returnParameters": {"id": 1731, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1727, "mutability": "mutable", "name": "bptAmountIn", "nodeType": "VariableDeclaration", "scope": 1763, "src": "22652:19:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1726, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22652:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1730, "mutability": "mutable", "name": "amountsOut", "nodeType": "VariableDeclaration", "scope": 1763, "src": "22673:27:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1728, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22673:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1729, "nodeType": "ArrayTypeName", "src": "22673:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "22651:50:2"}, "scope": 2102, "src": "22562:592:2", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [8404], "body": {"id": 1800, "nodeType": "Block", "src": "23342:746:2", "statements": [{"assignments": [1778], "declarations": [{"constant": false, "id": 1778, "mutability": "mutable", "name": "bptAmountIn", "nodeType": "VariableDeclaration", "scope": 1800, "src": "23763:19:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1777, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23763:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1782, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1779, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1768, "src": "23785:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 1780, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "exactBptInForTokensOut", "nodeType": "MemberAccess", "referencedDeclaration": 19410, "src": "23785:31:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (uint256)"}}, "id": 1781, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23785:33:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "23763:55:2"}, {"assignments": [1787], "declarations": [{"constant": false, "id": 1787, "mutability": "mutable", "name": "amountsOut", "nodeType": "VariableDeclaration", "scope": 1800, "src": "23929:27:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1785, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23929:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1786, "nodeType": "ArrayTypeName", "src": "23929:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 1795, "initialValue": {"arguments": [{"id": 1790, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1766, "src": "24002:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 1791, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1778, "src": "24012:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 1792, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23889, "src": "24025:11:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1793, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24025:13:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1788, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18471, "src": "23959:12:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$18471_$", "typeString": "type(library GyroPoolMath)"}}, "id": 1789, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcTokensOutGivenExactBptIn", "nodeType": "MemberAccess", "referencedDeclaration": 17822, "src": "23959:42:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256[] memory)"}}, "id": 1794, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23959:80:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "23929:110:2"}, {"expression": {"components": [{"id": 1796, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1778, "src": "24057:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1797, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1787, "src": "24070:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1798, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "24056:25:2", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "functionReturnParameters": 1776, "id": 1799, "nodeType": "Return", "src": "24049:32:2"}]}, "id": 1801, "implemented": true, "kind": "function", "modifiers": [], "name": "_exitExactBPTInForTokensOut", "nodeType": "FunctionDefinition", "overrides": {"id": 1770, "nodeType": "OverrideSpecifier", "overrides": [], "src": "23285:8:2"}, "parameters": {"id": 1769, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1766, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 1801, "src": "23197:25:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1764, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23197:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1765, "nodeType": "ArrayTypeName", "src": "23197:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1768, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 1801, "src": "23224:21:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1767, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "23224:5:2", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "23196:50:2"}, "returnParameters": {"id": 1776, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1772, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1801, "src": "23311:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1771, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23311:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1775, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1801, "src": "23320:16:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1773, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23320:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1774, "nodeType": "ArrayTypeName", "src": "23320:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "23310:27:2"}, "scope": 2102, "src": "23160:928:2", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 1827, "nodeType": "Block", "src": "24434:518:2", "statements": [{"assignments": [1808, 1810, 1812, 1814], "declarations": [{"constant": false, "id": 1808, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 1827, "src": "24662:16:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1807, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24662:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1810, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 1827, "src": "24680:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1809, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24680:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1812, "mutability": "mutable", "name": "gyroTreasury", "nodeType": "VariableDeclaration", "scope": 1827, "src": "24702:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1811, "name": "address", "nodeType": "ElementaryTypeName", "src": "24702:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1814, "mutability": "mutable", "name": "balTreasury", "nodeType": "VariableDeclaration", "scope": 1827, "src": "24724:19:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1813, "name": "address", "nodeType": "ElementaryTypeName", "src": "24724:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 1819, "initialValue": {"arguments": [{"id": 1816, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6766, "src": "24786:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1817, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1804, "src": "24814:21:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1815, "name": "_getDueProtocolFeeAmounts", "nodeType": "Identifier", "overloadedDeclarations": [1853, 1912], "referencedDeclaration": 1912, "src": "24747:25:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "function (uint256,uint256) view returns (uint256,uint256,address,address)"}}, "id": 1818, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24747:98:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "nodeType": "VariableDeclarationStatement", "src": "24661:184:2"}, {"expression": {"arguments": [{"id": 1821, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1808, "src": "24895:8:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1822, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1810, "src": "24905:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1823, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1812, "src": "24919:12:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1824, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1814, "src": "24933:11:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 1820, "name": "_payFeesBpt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1944, "src": "24883:11:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$", "typeString": "function (uint256,uint256,address,address)"}}, "id": 1825, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24883:62:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1826, "nodeType": "ExpressionStatement", "src": "24883:62:2"}]}, "documentation": {"id": 1802, "nodeType": "StructuredDocumentation", "src": "24110:253:2", "text": " @dev Computes and distributes fees between the Balancer and the Gyro treasury\n The fees are computed and distributed in BPT rather than using the\n Balancer regular distribution mechanism which would pay these in underlying"}, "id": 1828, "implemented": true, "kind": "function", "modifiers": [], "name": "_distributeFees", "nodeType": "FunctionDefinition", "parameters": {"id": 1805, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1804, "mutability": "mutable", "name": "invariantBeforeAction", "nodeType": "VariableDeclaration", "scope": 1828, "src": "24394:29:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1803, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24394:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "24393:31:2"}, "returnParameters": {"id": 1806, "nodeType": "ParameterList", "parameters": [], "src": "24434:0:2"}, "scope": 2102, "src": "24369:583:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [8685], "body": {"id": 1852, "nodeType": "Block", "src": "25360:42:2", "statements": [{"expression": {"arguments": [{"hexValue": "4e6f7420696d706c656d656e746564", "id": 1849, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "25377:17:2", "typeDescriptions": {"typeIdentifier": "t_stringliteral_9f5474d7a5849b3f79e8aee7ea2c60bcd36a60a08b4fa41f97e2fccf1c4df98b", "typeString": "literal_string \"Not implemented\""}, "value": "Not implemented"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_9f5474d7a5849b3f79e8aee7ea2c60bcd36a60a08b4fa41f97e2fccf1c4df98b", "typeString": "literal_string \"Not implemented\""}], "id": 1848, "name": "revert", "nodeType": "Identifier", "overloadedDeclarations": [-19, -19], "referencedDeclaration": -19, "src": "25370:6:2", "typeDescriptions": {"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory) pure"}}, "id": 1850, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25370:25:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1851, "nodeType": "ExpressionStatement", "src": "25370:25:2"}]}, "documentation": {"id": 1829, "nodeType": "StructuredDocumentation", "src": "24958:96:2", "text": " @dev this function overrides inherited function to make sure it is never used"}, "id": 1853, "implemented": true, "kind": "function", "modifiers": [], "name": "_getDueProtocolFeeAmounts", "nodeType": "FunctionDefinition", "overrides": {"id": 1843, "nodeType": "OverrideSpecifier", "overrides": [], "src": "25324:8:2"}, "parameters": {"id": 1842, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1832, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1853, "src": "25103:16:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1830, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25103:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1831, "nodeType": "ArrayTypeName", "src": "25103:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1835, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1853, "src": "25142:16:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1833, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25142:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1834, "nodeType": "ArrayTypeName", "src": "25142:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1837, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1853, "src": "25190:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1836, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25190:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1839, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1853, "src": "25229:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1838, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25229:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1841, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1853, "src": "25267:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1840, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25267:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "25093:216:2"}, "returnParameters": {"id": 1847, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1846, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1853, "src": "25342:16:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1844, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25342:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1845, "nodeType": "ArrayTypeName", "src": "25342:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "25341:18:2"}, "scope": 2102, "src": "25059:343:2", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 1911, "nodeType": "Block", "src": "25944:681:2", "statements": [{"assignments": [1870, 1872, 1874, 1876], "declarations": [{"constant": false, "id": 1870, "mutability": "mutable", "name": "protocolSwapFeePerc", "nodeType": "VariableDeclaration", "scope": 1911, "src": "25955:27:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1869, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25955:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1872, "mutability": "mutable", "name": "protocolFeeGyroPortion", "nodeType": "VariableDeclaration", "scope": 1911, "src": "25984:30:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1871, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25984:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1874, "mutability": "mutable", "name": "gyroTreasury", "nodeType": "VariableDeclaration", "scope": 1911, "src": "26016:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1873, "name": "address", "nodeType": "ElementaryTypeName", "src": "26016:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1876, "mutability": "mutable", "name": "balTreasury", "nodeType": "VariableDeclaration", "scope": 1911, "src": "26038:19:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1875, "name": "address", "nodeType": "ElementaryTypeName", "src": "26038:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 1879, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 1877, "name": "_getFeesMetadata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1978, "src": "26061:16:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "function () view returns (uint256,uint256,address,address)"}}, "id": 1878, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26061:18:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "nodeType": "VariableDeclarationStatement", "src": "25954:125:2"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1882, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1880, "name": "protocolSwapFeePerc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1870, "src": "26175:19:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 1881, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "26198:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "26175:24:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1890, "nodeType": "IfStatement", "src": "26171:95:2", "trueBody": {"id": 1889, "nodeType": "Block", "src": "26201:65:2", "statements": [{"expression": {"components": [{"hexValue": "30", "id": 1883, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "26223:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"hexValue": "30", "id": 1884, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "26226:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"id": 1885, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1874, "src": "26229:12:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1886, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1876, "src": "26243:11:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 1887, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "26222:33:2", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_address_$_t_address_$", "typeString": "tuple(int_const 0,int_const 0,address,address)"}}, "functionReturnParameters": 1868, "id": 1888, "nodeType": "Return", "src": "26215:40:2"}]}}, {"assignments": [1892, 1894], "declarations": [{"constant": false, "id": 1892, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 1911, "src": "26310:16:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1891, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26310:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1894, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 1911, "src": "26328:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1893, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26328:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1904, "initialValue": {"arguments": [{"id": 1897, "name": "previousInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1856, "src": "26396:17:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1898, "name": "currentInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1858, "src": "26427:16:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 1899, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23889, "src": "26457:11:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1900, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26457:13:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1901, "name": "protocolSwapFeePerc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1870, "src": "26484:19:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1902, "name": "protocolFeeGyroPortion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1872, "src": "26517:22:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1895, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18471, "src": "26352:12:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$18471_$", "typeString": "type(library GyroPoolMath)"}}, "id": 1896, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcProtocolFees", "nodeType": "MemberAccess", "referencedDeclaration": 17906, "src": "26352:30:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,uint256,uint256) pure returns (uint256,uint256)"}}, "id": 1903, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26352:197:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "26309:240:2"}, {"expression": {"components": [{"id": 1905, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1892, "src": "26568:8:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1906, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1894, "src": "26578:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1907, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1874, "src": "26592:12:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1908, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1876, "src": "26606:11:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 1909, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "26567:51:2", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "functionReturnParameters": 1868, "id": 1910, "nodeType": "Return", "src": "26560:58:2"}]}, "documentation": {"id": 1854, "nodeType": "StructuredDocumentation", "src": "25408:298:2", "text": " @dev Calculates protocol fee amounts in BPT terms.\n protocolSwapFeePercentage is not used here b/c we take parameters from GyroConfig instead.\n Returns: BPT due to Gyro, BPT due to Balancer, receiving address for Gyro fees, receiving address for Balancer\n fees."}, "id": 1912, "implemented": true, "kind": "function", "modifiers": [], "name": "_getDueProtocolFeeAmounts", "nodeType": "FunctionDefinition", "parameters": {"id": 1859, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1856, "mutability": "mutable", "name": "previousInvariant", "nodeType": "VariableDeclaration", "scope": 1912, "src": "25746:25:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1855, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25746:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1858, "mutability": "mutable", "name": "currentInvariant", "nodeType": "VariableDeclaration", "scope": 1912, "src": "25773:24:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1857, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25773:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "25745:53:2"}, "returnParameters": {"id": 1868, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1861, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1912, "src": "25859:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1860, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25859:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1863, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1912, "src": "25880:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1862, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25880:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1865, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1912, "src": "25901:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1864, "name": "address", "nodeType": "ElementaryTypeName", "src": "25901:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1867, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1912, "src": "25922:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1866, "name": "address", "nodeType": "ElementaryTypeName", "src": "25922:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "25845:94:2"}, "scope": 2102, "src": "25711:914:2", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 1943, "nodeType": "Block", "src": "26782:283:2", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1925, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1923, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1914, "src": "26840:8:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 1924, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "26851:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "26840:12:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1932, "nodeType": "IfStatement", "src": "26836:82:2", "trueBody": {"id": 1931, "nodeType": "Block", "src": "26854:64:2", "statements": [{"expression": {"arguments": [{"id": 1927, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1918, "src": "26884:12:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1928, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1914, "src": "26898:8:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1926, "name": "_mintPoolTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21798, "src": "26868:15:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 1929, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26868:39:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1930, "nodeType": "ExpressionStatement", "src": "26868:39:2"}]}}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1935, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1933, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1916, "src": "26974:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 1934, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "26989:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "26974:16:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1942, "nodeType": "IfStatement", "src": "26970:89:2", "trueBody": {"id": 1941, "nodeType": "Block", "src": "26992:67:2", "statements": [{"expression": {"arguments": [{"id": 1937, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1920, "src": "27022:11:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1938, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1916, "src": "27035:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1936, "name": "_mintPoolTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21798, "src": "27006:15:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 1939, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27006:42:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1940, "nodeType": "ExpressionStatement", "src": "27006:42:2"}]}}]}, "id": 1944, "implemented": true, "kind": "function", "modifiers": [], "name": "_payFeesBpt", "nodeType": "FunctionDefinition", "parameters": {"id": 1921, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1914, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 1944, "src": "26661:16:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1913, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26661:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1916, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 1944, "src": "26687:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1915, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26687:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1918, "mutability": "mutable", "name": "gyroTreasury", "nodeType": "VariableDeclaration", "scope": 1944, "src": "26717:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1917, "name": "address", "nodeType": "ElementaryTypeName", "src": "26717:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1920, "mutability": "mutable", "name": "balTreasury", "nodeType": "VariableDeclaration", "scope": 1944, "src": "26747:19:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1919, "name": "address", "nodeType": "ElementaryTypeName", "src": "26747:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "26651:121:2"}, "returnParameters": {"id": 1922, "nodeType": "ParameterList", "parameters": [], "src": "26782:0:2"}, "scope": 2102, "src": "26631:434:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 1977, "nodeType": "Block", "src": "27244:324:2", "statements": [{"expression": {"components": [{"arguments": [{"expression": {"id": 1957, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19014, "src": "27294:14:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$19014_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 1958, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "PROTOCOL_SWAP_FEE_PERC_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 19004, "src": "27294:41:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 1955, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 573, "src": "27275:10:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$18999", "typeString": "contract IGyroConfig"}}, "id": 1956, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getUint", "nodeType": "MemberAccess", "referencedDeclaration": 18974, "src": "27275:18:2", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_uint256_$", "typeString": "function (bytes32) view external returns (uint256)"}}, "id": 1959, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27275:61:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"expression": {"id": 1962, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19014, "src": "27369:14:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$19014_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 1963, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "PROTOCOL_FEE_GYRO_PORTION_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 19007, "src": "27369:44:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 1960, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 573, "src": "27350:10:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$18999", "typeString": "contract IGyroConfig"}}, "id": 1961, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getUint", "nodeType": "MemberAccess", "referencedDeclaration": 18974, "src": "27350:18:2", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_uint256_$", "typeString": "function (bytes32) view external returns (uint256)"}}, "id": 1964, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27350:64:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"expression": {"id": 1967, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19014, "src": "27450:14:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$19014_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 1968, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "GYRO_TREASURY_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 19010, "src": "27450:32:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 1965, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 573, "src": "27428:10:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$18999", "typeString": "contract IGyroConfig"}}, "id": 1966, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getAddress", "nodeType": "MemberAccess", "referencedDeclaration": 18982, "src": "27428:21:2", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$", "typeString": "function (bytes32) view external returns (address)"}}, "id": 1969, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27428:55:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"expression": {"id": 1972, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19014, "src": "27519:14:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$19014_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 1973, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "BAL_TREASURY_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 19013, "src": "27519:31:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 1970, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 573, "src": "27497:10:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$18999", "typeString": "contract IGyroConfig"}}, "id": 1971, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getAddress", "nodeType": "MemberAccess", "referencedDeclaration": 18982, "src": "27497:21:2", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$", "typeString": "function (bytes32) view external returns (address)"}}, "id": 1974, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27497:54:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 1975, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "27261:300:2", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "functionReturnParameters": 1954, "id": 1976, "nodeType": "Return", "src": "27254:307:2"}]}, "id": 1978, "implemented": true, "kind": "function", "modifiers": [], "name": "_getFeesMetadata", "nodeType": "FunctionDefinition", "parameters": {"id": 1945, "nodeType": "ParameterList", "parameters": [], "src": "27096:2:2"}, "returnParameters": {"id": 1954, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1947, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1978, "src": "27159:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1946, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27159:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1949, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1978, "src": "27180:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1948, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27180:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1951, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1978, "src": "27201:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1950, "name": "address", "nodeType": "ElementaryTypeName", "src": "27201:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1953, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1978, "src": "27222:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1952, "name": "address", "nodeType": "ElementaryTypeName", "src": "27222:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "27145:94:2"}, "scope": 2102, "src": "27071:497:2", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 2077, "nodeType": "Block", "src": "28107:1266:2", "statements": [{"assignments": [1993], "declarations": [{"constant": false, "id": 1993, "mutability": "mutable", "name": "miscData", "nodeType": "VariableDeclaration", "scope": 2077, "src": "28117:16:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 1992, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "28117:7:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 1995, "initialValue": {"id": 1994, "name": "_miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6764, "src": "28136:9:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "28117:28:2"}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 2003, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1996, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1993, "src": "28159:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 1997, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "oracleEnabled", "nodeType": "MemberAccess", "referencedDeclaration": 19112, "src": "28159:22:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bool_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (bool)"}}, "id": 1998, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28159:24:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2002, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 1999, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "28187:5:2", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 2000, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "number", "nodeType": "MemberAccess", "src": "28187:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"id": 2001, "name": "lastChangeBlock", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1981, "src": "28202:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "28187:30:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "28159:58:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 2076, "nodeType": "IfStatement", "src": "28155:1212:2", "trueBody": {"id": 2075, "nodeType": "Block", "src": "28219:1148:2", "statements": [{"assignments": [2005], "declarations": [{"constant": false, "id": 2005, "mutability": "mutable", "name": "logSpotPrice", "nodeType": "VariableDeclaration", "scope": 2075, "src": "28233:19:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 2004, "name": "int256", "nodeType": "ElementaryTypeName", "src": "28233:6:2", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 2013, "initialValue": {"arguments": [{"id": 2008, "name": "balanceToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1983, "src": "28292:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 2009, "name": "virtualParam0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1987, "src": "28307:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 2010, "name": "balanceToken1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1985, "src": "28322:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 2011, "name": "virtualParam1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1989, "src": "28337:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 2006, "name": "Gyro2CLPOracleMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 534, "src": "28255:18:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPOracleMath_$534_$", "typeString": "type(contract Gyro2CLPOracleMath)"}}, "id": 2007, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcLogSpotPrice", "nodeType": "MemberAccess", "referencedDeclaration": 486, "src": "28255:36:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_int256_$", "typeString": "function (uint256,uint256,uint256,uint256) pure returns (int256)"}}, "id": 2012, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28255:96:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "VariableDeclarationStatement", "src": "28233:118:2"}, {"assignments": [2015], "declarations": [{"constant": false, "id": 2015, "mutability": "mutable", "name": "logBPTPrice", "nodeType": "VariableDeclaration", "scope": 2075, "src": "28366:18:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 2014, "name": "int256", "nodeType": "ElementaryTypeName", "src": "28366:6:2", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 2026, "initialValue": {"arguments": [{"id": 2018, "name": "balanceToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1983, "src": "28440:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 2019, "name": "virtualParam0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1987, "src": "28471:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 2020, "name": "balanceToken1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1985, "src": "28502:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 2021, "name": "virtualParam1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1989, "src": "28533:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 2022, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1993, "src": "28564:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 2023, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "logTotalSupply", "nodeType": "MemberAccess", "referencedDeclaration": 19070, "src": "28564:23:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_int256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (int256)"}}, "id": 2024, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28564:25:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 2016, "name": "Gyro2CLPOracleMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 534, "src": "28387:18:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPOracleMath_$534_$", "typeString": "type(contract Gyro2CLPOracleMath)"}}, "id": 2017, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcLogBPTPrice", "nodeType": "MemberAccess", "referencedDeclaration": 533, "src": "28387:35:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_int256_$returns$_t_int256_$", "typeString": "function (uint256,uint256,uint256,uint256,int256) pure returns (int256)"}}, "id": 2025, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28387:216:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "VariableDeclarationStatement", "src": "28366:237:2"}, {"assignments": [2028], "declarations": [{"constant": false, "id": 2028, "mutability": "mutable", "name": "oracleCurrentIndex", "nodeType": "VariableDeclaration", "scope": 2075, "src": "28618:26:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2027, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28618:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2032, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 2029, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1993, "src": "28647:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 2030, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "oracleIndex", "nodeType": "MemberAccess", "referencedDeclaration": 19098, "src": "28647:20:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (uint256)"}}, "id": 2031, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28647:22:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "28618:51:2"}, {"assignments": [2034], "declarations": [{"constant": false, "id": 2034, "mutability": "mutable", "name": "oracleCurrentSampleInitialTimestamp", "nodeType": "VariableDeclaration", "scope": 2075, "src": "28683:43:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2033, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28683:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2038, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 2035, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1993, "src": "28729:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 2036, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "oracleSampleCreationTimestamp", "nodeType": "MemberAccess", "referencedDeclaration": 19084, "src": "28729:38:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (uint256)"}}, "id": 2037, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28729:40:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "28683:86:2"}, {"assignments": [2040], "declarations": [{"constant": false, "id": 2040, "mutability": "mutable", "name": "oracleUpdatedIndex", "nodeType": "VariableDeclaration", "scope": 2075, "src": "28783:26:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2039, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28783:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2050, "initialValue": {"arguments": [{"id": 2042, "name": "oracleCurrentSampleInitialTimestamp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2034, "src": "28847:35:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 2043, "name": "oracleCurrentIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2028, "src": "28900:18:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 2044, "name": "logSpotPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2005, "src": "28936:12:2", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 2045, "name": "logBPTPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2015, "src": "28966:11:2", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 2046, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1993, "src": "28995:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 2047, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "logInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 19056, "src": "28995:21:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_int256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (int256)"}}, "id": 2048, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28995:23:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "id": 2041, "name": "_processPriceData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23488, "src": "28812:17:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_int256_$_t_int256_$_t_int256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,int256,int256,int256) returns (uint256)"}}, "id": 2049, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28812:220:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "28783:249:2"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2053, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2051, "name": "oracleCurrentIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2028, "src": "29051:18:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"id": 2052, "name": "oracleUpdatedIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2040, "src": "29073:18:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "29051:40:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 2074, "nodeType": "IfStatement", "src": "29047:310:2", "trueBody": {"id": 2073, "nodeType": "Block", "src": "29093:264:2", "statements": [{"expression": {"id": 2059, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 2054, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1993, "src": "29163:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 2057, "name": "oracleUpdatedIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2040, "src": "29198:18:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 2055, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1993, "src": "29174:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 2056, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "setOracleIndex", "nodeType": "MemberAccess", "referencedDeclaration": 19194, "src": "29174:23:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_bytes32_$", "typeString": "function (bytes32,uint256) pure returns (bytes32)"}}, "id": 2058, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29174:43:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "29163:54:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 2060, "nodeType": "ExpressionStatement", "src": "29163:54:2"}, {"expression": {"id": 2067, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 2061, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1993, "src": "29235:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 2064, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "29288:5:2", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 2065, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "29288:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 2062, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1993, "src": "29246:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 2063, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "setOracleSampleCreationTimestamp", "nodeType": "MemberAccess", "referencedDeclaration": 19177, "src": "29246:41:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_bytes32_$", "typeString": "function (bytes32,uint256) pure returns (bytes32)"}}, "id": 2066, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29246:58:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "29235:69:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 2068, "nodeType": "ExpressionStatement", "src": "29235:69:2"}, {"expression": {"id": 2071, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 2069, "name": "_miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6764, "src": "29322:9:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 2070, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1993, "src": "29334:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "29322:20:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 2072, "nodeType": "ExpressionStatement", "src": "29322:20:2"}]}}]}}]}, "documentation": {"id": 1979, "nodeType": "StructuredDocumentation", "src": "27574:333:2", "text": " @dev Updates the Price Oracle based on the Pool's current state (balances, BPT supply and invariant). Must be\n called on *all* state-changing functions with the balances *before* the state change happens, and with\n `lastChangeBlock` as the number of the block in which any of the balances last changed."}, "id": 2078, "implemented": true, "kind": "function", "modifiers": [], "name": "_updateOracle", "nodeType": "FunctionDefinition", "parameters": {"id": 1990, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1981, "mutability": "mutable", "name": "lastChangeBlock", "nodeType": "VariableDeclaration", "scope": 2078, "src": "27944:23:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1980, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27944:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1983, "mutability": "mutable", "name": "balanceToken0", "nodeType": "VariableDeclaration", "scope": 2078, "src": "27977:21:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1982, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27977:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1985, "mutability": "mutable", "name": "balanceToken1", "nodeType": "VariableDeclaration", "scope": 2078, "src": "28008:21:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1984, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28008:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1987, "mutability": "mutable", "name": "virtualParam0", "nodeType": "VariableDeclaration", "scope": 2078, "src": "28039:21:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1986, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28039:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1989, "mutability": "mutable", "name": "virtualParam1", "nodeType": "VariableDeclaration", "scope": 2078, "src": "28070:21:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1988, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28070:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "27934:163:2"}, "returnParameters": {"id": 1991, "nodeType": "ParameterList", "parameters": [], "src": "28107:0:2"}, "scope": 2102, "src": "27912:1461:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [8481], "body": {"id": 2089, "nodeType": "Block", "src": "29814:30:2", "statements": []}, "documentation": {"id": 2079, "nodeType": "StructuredDocumentation", "src": "29379:288:2", "text": " @dev this variant of the function, called from `onJoinPool()` and `onExitPool()`, which we inherit, is a no-op.\n We instead have moved responsibility for updating the oracle to `_onJoinPool()` and `_onExitPool()` and the above\n version is called from there."}, "id": 2090, "implemented": true, "kind": "function", "modifiers": [], "name": "_updateOracle", "nodeType": "FunctionDefinition", "overrides": {"id": 2087, "nodeType": "OverrideSpecifier", "overrides": [], "src": "29805:8:2"}, "parameters": {"id": 2086, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2081, "mutability": "mutable", "name": "lastChangeBlock", "nodeType": "VariableDeclaration", "scope": 2090, "src": "29704:23:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2080, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "29704:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 2083, "mutability": "mutable", "name": "balanceToken0", "nodeType": "VariableDeclaration", "scope": 2090, "src": "29737:21:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2082, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "29737:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 2085, "mutability": "mutable", "name": "balanceToken1", "nodeType": "VariableDeclaration", "scope": 2090, "src": "29768:21:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2084, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "29768:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "29694:101:2"}, "returnParameters": {"id": 2088, "nodeType": "ParameterList", "parameters": [], "src": "29814:0:2"}, "scope": 2102, "src": "29672:172:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [9231], "body": {"id": 2100, "nodeType": "Block", "src": "29906:35:2", "statements": [{"expression": {"arguments": [{"id": 2097, "name": "paused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2092, "src": "29927:6:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 2096, "name": "_setPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23757, "src": "29916:10:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$", "typeString": "function (bool)"}}, "id": 2098, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29916:18:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2099, "nodeType": "ExpressionStatement", "src": "29916:18:2"}]}, "id": 2101, "implemented": true, "kind": "function", "modifiers": [], "name": "_setPausedState", "nodeType": "FunctionDefinition", "overrides": {"id": 2094, "nodeType": "OverrideSpecifier", "overrides": [], "src": "29897:8:2"}, "parameters": {"id": 2093, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2092, "mutability": "mutable", "name": "paused", "nodeType": "VariableDeclaration", "scope": 2101, "src": "29875:11:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 2091, "name": "bool", "nodeType": "ElementaryTypeName", "src": "29875:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "29874:13:2"}, "returnParameters": {"id": 2095, "nodeType": "ParameterList", "parameters": [], "src": "29906:0:2"}, "scope": 2102, "src": "29850:91:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}], "scope": 2103, "src": "1423:28520:2"}], "src": "688:29256:2"}, "bytecode": "6102e06040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9610120526706f05b59d3b20000610200819052610220526000610240523480156200005057600080fd5b50604051620062e8380380620062e8833981016040819052620000739162000bc5565b8160a001518260600151836080015184600001518060c001518160e001518260200151836040015184600001518280604051806040016040528060018152602001603160f81b81525085858a6101200151336001600160a01b031660001b806080818152505050806001600160a01b031660a0816001600160a01b031660601b8152505050816003908051906020019062000110929190620008ea565b50805162000126906004906020840190620008ea565b505060058054601260ff1990911617905550815160209283012060c052805191012060e052507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6101005260601b6001600160601b03191661014052506200019990506276a7008311156101946200054c565b620001ad62278d008211156101956200054c565b42919091016101608190520161018052604080516002808252606082018352600092602083019080368337019050509050816060015181600081518110620001f157fe5b60200260200101906001600160a01b031690816001600160a01b0316815250508160800151816001815181106200022457fe5b60200260200101906001600160a01b031690816001600160a01b0316815250506200025a816200056160201b62001a0c1760201c565b6101008201516200026b906200056d565b60a08201516200027b90620005c9565b81516040516309b2760f60e01b81526000916001600160a01b0316906309b2760f90620002ae9060029060040162000d6f565b602060405180830381600087803b158015620002c957600080fd5b505af1158015620002de573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000304919062000bac565b83516040805160028082526060820183529394506001600160a01b03909216926366a9c7d2928592879290602083019080368337019050506040518463ffffffff1660e01b81526004016200035c9392919062000cd5565b600060405180830381600087803b1580156200037757600080fd5b505af11580156200038c573d6000803e3d6000fd5b5050506101a082905250606080840180516001600160601b031990831b81166101c052608086015190921b9091166101e05251620003ca9062000647565b610260526080830151620003de9062000647565b61028052505060408051808201909152600e81526d1b9bdd08185d5d1a1bdc9a5e995960921b602082015290506001600160a01b0383166200043e5760405162461bcd60e51b815260040162000435919062000d84565b60405180910390fd5b50600c80546001600160a01b0319166001600160a01b039384161790558051600b8054602084015160409094015160ff1990911692151592909217610100600160801b0319166101006001600160781b0390941693909302929092176001600160801b03908116600160801b9190921602179055620004c390821615156069620006eb565b600d80546001600160a01b0319166001600160a01b039290921691909117905560408201516020830151620004fc911161015e620006eb565b620005146001600160a01b03821615156069620006eb565b60208201516102a0526040909101516102c052600e80546001600160a01b0319166001600160a01b0390921691909117905562000e19565b816200055d576200055d81620006fc565b5050565b806200055d816200074f565b6200058981600954620007dc60201b62001a1a1790919060201c565b6009556040517f3e350b41e86a8e10f804ade6d35340d620be35569cc75ac943e8bb14ab80ead190620005be90839062000cca565b60405180910390a150565b620005de64e8d4a5100082101560cb6200054c565b620005f667016345785d8a000082111560ca6200054c565b62000612816009546200080260201b62001a2f1790919060201c565b6009556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc90620005be90839062000db9565b600080826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156200068457600080fd5b505afa15801562000699573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006bf919062000ca7565b60ff1690506000620006de6012836200082160201b62001a3d1760201c565b600a0a925050505b919050565b816200055d576200055d8162000839565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6002815110156200076057620007d9565b6000816000815181106200077057fe5b602002602001015190506000600190505b8251811015620007d65760008382815181106200079a57fe5b60200260200101519050620007cb816001600160a01b0316846001600160a01b03161060656200054c60201b60201c565b915060010162000781565b50505b50565b6000620007fb826055856200084b60201b62001a53179092919060201c565b9392505050565b6000620007fb826056856200087460201b62001a7a179092919060201c565b6000620008338383111560016200054c565b50900390565b620007d9816223aca960e91b62000889565b60006001821b19841682846200086357600062000866565b60015b60ff16901b17949350505050565b6001600160401b03811b1992909216911b1790565b62461bcd60e51b600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fd5b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200092257600085556200096d565b82601f106200093d57805160ff19168380011785556200096d565b828001600101855582156200096d579182015b828111156200096d57825182559160200191906001019062000950565b506200097b9291506200097f565b5090565b5b808211156200097b576000815560010162000980565b80516001600160a01b0381168114620006e657600080fd5b80518015158114620006e657600080fd5b600082601f830112620009d0578081fd5b81516001600160401b03811115620009e457fe5b620009f9601f8201601f191660200162000dc2565b81815284602083860101111562000a0e578283fd5b62000a2182602083016020870162000de6565b949350505050565b60006060828403121562000a3b578081fd5b604051606081016001600160401b038111828210171562000a5857fe5b60405290508062000a6983620009ae565b815260208301516001600160781b038116811462000a8657600080fd5b602082015260408301516001600160801b038116811462000aa657600080fd5b6040919091015292915050565b600061014080838503121562000ac7578182fd5b62000ad28162000dc2565b91505062000ae08262000996565b815260208201516001600160401b038082111562000afd57600080fd5b62000b0b85838601620009bf565b6020840152604084015191508082111562000b2557600080fd5b5062000b3484828501620009bf565b60408301525062000b486060830162000996565b606082015262000b5b6080830162000996565b608082015260a082015160a082015260c082015160c082015260e082015160e082015261010062000b8e818401620009ae565b9082015261012062000ba283820162000996565b9082015292915050565b60006020828403121562000bbe578081fd5b5051919050565b6000806040838503121562000bd8578081fd5b82516001600160401b038082111562000bef578283fd5b90840190610100828703121562000c04578283fd5b60405160c08101818110838211171562000c1a57fe5b60405282518281111562000c2c578485fd5b62000c3a8882860162000ab3565b825250602083015160208201526040830151604082015262000c5f6060840162000996565b606082015262000c73876080850162000a29565b608082015262000c8660e0840162000996565b60a0820152935062000c9e9150506020840162000996565b90509250929050565b60006020828403121562000cb9578081fd5b815160ff81168114620007fb578182fd5b901515815260200190565b60006060820185835260206060818501528186518084526080860191508288019350845b8181101562000d205784516001600160a01b03168352938301939183019160010162000cf9565b505084810360408601528551808252908201925081860190845b8181101562000d615782516001600160a01b03168552938301939183019160010162000d3a565b509298975050505050505050565b602081016003831062000d7e57fe5b91905290565b600060208252825180602084015262000da581604085016020870162000de6565b601f01601f19169190910160400192915050565b90815260200190565b6040518181016001600160401b038111828210171562000dde57fe5b604052919050565b60005b8381101562000e0357818101518382015260200162000de9565b8381111562000e13576000848401525b50505050565b60805160a05160601c60c05160e05161010051610120516101405160601c61016051610180516101a0516101c05160601c6101e05160601c61020051610220516102405161026051610280516102a0516102c0516153ed62000efb60003980612ff2525080613019525080611f4c528061276a525080611f7352806127075250508061380d52508061383452508061274952508061145752806126e6525080610ae8525080611bde525080611bba52508061130b52508061175d525080611e0e525080611e50525080611e2f5250806112e752508061126d52506153ed6000f3fe608060405234801561001057600080fd5b50600436106103275760003560e01c8063707dcd1e116101b85780639b02cdde11610104578063b48b5b40116100a2578063d5c096c41161007c578063d5c096c41461069b578063dd62ed3e146106ae578063f89f27ed146106c1578063ffd088eb146106c957610327565b8063b48b5b4014610678578063c0ff1a1514610680578063d505accf1461068857610327565b8063a9059cbb116100de578063a9059cbb14610642578063aaabadc514610655578063abd13afe1461065d578063b10be7391461066557610327565b80639b02cdde146106145780639d2c110c1461061c578063a457c2d71461062f57610327565b80638456cb5911610171578063893d20e81161014b578063893d20e8146105f45780638d928af8146105fc5780638dd9f89d1461060457806395d89b411461060c57610327565b80638456cb59146105c6578063851c1bb3146105ce57806387ec6817146105e157610327565b8063707dcd1e1461054457806370a082311461055957806374f3b0091461056c57806376e54a461461058d5780637ecebe00146105a05780638002df18146105b357610327565b806338fff2d0116102775780634a6b0b151161023057806360d1507c1161020a57806360d1507c146104ee578063679aefce146105145780636b8432391461051c5780636d785a871461053c57610327565b80634a6b0b15146104ab57806355c67628146104c55780636028bfd4146104cd57610327565b806338fff2d01461043c57806339509351146104445780633aeae0d3146104575780633c4dd5bb1461046c5780633f4ba83a1461048e57806344bbdb551461049657610327565b80631dccd830116102e4578063313ce567116102be578063313ce567146103f95780633331bc361461040e5780633644e5151461042157806338e9922e1461042957610327565b80631dccd830146103be57806323b872dd146103de578063292c914a146103f157610327565b806306fdde031461032c578063095ea7b31461034a5780630e608b301461036a57806316c38b3c1461037f57806318160ddd146103925780631c0de051146103a7575b600080fd5b6103346106d1565b6040516103419190615272565b60405180910390f35b61035d610358366004614ae0565b610767565b6040516103419190615154565b61037d6103783660046149bb565b61077e565b005b61037d61038d366004614caa565b61082f565b61039a610843565b6040516103419190615177565b6103af610849565b6040516103419392919061515f565b6103d16103cc366004614bde565b610872565b604051610341919061511c565b61035d6103ec366004614a2b565b610995565b61037d610a09565b610401610a3d565b6040516103419190615354565b61037d61041c366004614fa6565b610a46565b61039a610abe565b61037d610437366004614f8e565b610acd565b61039a610ae6565b61035d610452366004614ae0565b610b0a565b61045f610b45565b60405161034191906152c5565b61047f61047a366004614fc7565b610b90565b6040516103419392919061533e565b61037d610be3565b61049e610cd8565b6040516103419190615093565b6104b3610ce7565b604051610341969594939291906151c7565b61039a610d42565b6104e06104db366004614cc4565b610d4f565b604051610341929190615325565b6105016104fc366004614f8e565b610d80565b6040516103419796959493929190615197565b61039a610dc9565b61052f61052a366004614b0b565b610dee565b60405161034191906150a7565b61049e610ea4565b61054c610eb3565b60405161034191906150eb565b61039a6105673660046149bb565b610ec3565b61057f61057a366004614cc4565b610ee2565b60405161034192919061512f565b61037d61059b366004614e1a565b610f87565b61039a6105ae3660046149bb565b6110ae565b61037d6105c13660046149bb565b6110c9565b61037d6111af565b61039a6105dc366004614dc0565b611267565b6104e06105ef366004614cc4565b6112c0565b61049e6112e5565b61049e611309565b6103d161132d565b6103346113c7565b61039a611428565b61039a61062a366004614e98565b61142e565b61035d61063d366004614ae0565b6115f4565b61035d610650366004614ae0565b611632565b61049e61163f565b61049e611649565b61039a610673366004614de8565b611658565b61039a6116ed565b61039a6116f3565b61037d610696366004614a6b565b61172e565b61057f6106a9366004614cc4565b61189e565b61039a6106bc3660046149f3565b6119be565b6103d16119fb565b61039a611a05565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561075d5780601f106107325761010080835404028352916020019161075d565b820191906000526020600020905b81548152906001019060200180831161074057829003601f168201915b5050505050905090565b6000610774338484611a8f565b5060015b92915050565b600c5460408051808201909152600e81526d1b9bdd08185d5d1a1bdc9a5e995960921b6020820152906001600160a01b031633146107d85760405162461bcd60e51b81526004016107cf9190615272565b60405180910390fd5b50600c80546001600160a01b0319166001600160a01b0383161790556040517fb8fd9afc34c38fcd13b9a3b7646482eb1fddcefb40af2c70609972816eba320890610824908390615093565b60405180910390a150565b610837611af1565b61084081611b1f565b50565b60025490565b6000806000610856611b9b565b159250610861611bb8565b915061086b611bdc565b9050909192565b606081516001600160401b038111801561088b57600080fd5b506040519080825280602002602001820160405280156108b5578160200160208202803683370190505b50905060006108c2611c00565b905060005b835181101561098e5773__QueryProcessor________________________6379eaef8260088684815181106108f857fe5b6020026020010151856040518463ffffffff1660e01b815260040161091f93929190615239565b60206040518083038186803b15801561093757600080fd5b505af415801561094b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096f9190614e02565b83828151811061097b57fe5b60209081029190910101526001016108c7565b5050919050565b6000806109a285336119be565b90506109c6336001600160a01b03871614806109be5750838210155b61019e611c0d565b6109d1858585611c1b565b336001600160a01b038616148015906109ec57506000198114155b156109fe576109fe8533858403611a8f565b506001949350505050565b610a11611d03565b610a19611af1565b610a236001611d16565b6000610a2d610843565b1115610a3b57610a3b611d56565b565b60055460ff1690565b610a618183108015610a5a57506104008211155b6064611c0d565b6000610a766001600080600080600080611d9e565b9050825b82811015610ab857600081815260086020526040902054610a9a90611dfe565b610ab05760008181526008602052604090208290555b600101610a7a565b50505050565b6000610ac8611e0a565b905090565b610ad5611af1565b610add611d03565b61084081611ec8565b7f000000000000000000000000000000000000000000000000000000000000000090565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610774918590610b409086611f31565b611a8f565b610b4d6148c9565b5060408051606081018252600b5460ff81161515825261010081046001600160781b03166020830152600160801b90046001600160801b03169181019190915290565b600080600080610b9f85611f43565b90506000610bad8615611f43565b9050610bb98883611f97565b9750610bc58782611f97565b9650610bd2888888611fa3565b945094509450505093509350939050565b600d546040805180820190915260118152703737ba103830bab9b29036b0b730b3b2b960791b6020820152906001600160a01b03163314610ca25760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c67578181015183820152602001610c4f565b50505050905090810190601f168015610c945780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50610cad6000610837565b6040517f215385c8bfc731925ec8068d7baa50f6b6f34417cc7804f7273dc2c0b3db279090600090a1565b600e546001600160a01b031681565b60008060008060008060006009549050610d0081612072565b9650610d0b8161207e565b9550610d168161208b565b9450610d2181612098565b9350610d2c816120a5565b9250610d37816120b2565b915050909192939495565b6000610ac86009546120b2565b60006060610d5f865160026120bf565b610d74898989898989896120cc6121e061225e565b97509795505050505050565b6000806000806000806000610d9b610400891061013b611c0d565b6000610da689612371565b9050610db181612383565b959f949e50929c50909a509850965090945092505050565b6000610ac8610dd6610843565b610de8610de16116f3565b60026123e6565b9061240a565b606081516001600160401b0381118015610e0757600080fd5b50604051908082528060200260200182016040528015610e31578160200160208202803683370190505b5090506000610e3e611c00565b9050610e486148e9565b60005b8451811015610e9c57848181518110610e6057fe5b60200260200101519150610e7d8260000151848460200151612464565b848281518110610e8957fe5b6020908102919091010152600101610e4b565b505050919050565b600c546001600160a01b031681565b610ebb614900565b610ac86124fd565b6001600160a01b0381166000908152602081905260409020545b919050565b60608088610f0c610ef1611309565b6001600160a01b0316336001600160a01b03161460cd611c0d565b610f21610f17610ae6565b82146101f4611c0d565b610f2a87612523565b6000806000610f3e8d8d8d8d8d8d8d6120cc565b925092509250610f4e8c84612585565b610f57826121e0565b610f60816121e0565b610f68611b9b565b15610f7557610f75611d56565b909c909b509950505050505050505050565b600c5460408051808201909152600e81526d1b9bdd08185d5d1a1bdc9a5e995960921b6020820152906001600160a01b03163314610fd85760405162461bcd60e51b81526004016107cf9190615272565b50600b5460408051808201909152601081526f1c1bdbdb081a5cc81d5b98d85c1c195960821b60208201529060ff166110245760405162461bcd60e51b81526004016107cf9190615272565b508051600b8054602084015160408086015160ff19909316941515949094176fffffffffffffffffffffffffffffff0019166101006001600160781b0390921691909102176001600160801b03908116600160801b919092160217815590517f2abf5970d7bc1a2b36eaae52dd2cc353edb0337c7284ef8a01973081b4e0442491610824916152fa565b6001600160a01b031660009081526006602052604090205490565b600d546040805180820190915260118152703737ba103830bab9b29036b0b730b3b2b960791b60208201526001600160a01b039091169033821461114e5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610c67578181015183820152602001610c4f565b50600d80546001600160a01b0319166001600160a01b03848116918217909255604080519284168352602083019190915280517f1ffccd1fa96f4fb3415df8048a0fd107344e262d2d246c85105e2a3f8f3e81989281900390910190a15050565b600d546040805180820190915260118152703737ba103830bab9b29036b0b730b3b2b960791b6020820152906001600160a01b031633146112315760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610c67578181015183820152602001610c4f565b5061123c6001610837565b6040517f681eace576127d0553b224436a09801fb47d042942cbff59d7d4ff04d8fa03d790600090a1565b604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091526001600160e01b03198416828401528251602481840301815260449092019092528051910120919050565b600060606112d0865160026120bf565b610d748989898989898961258f61265f61225e565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b606060006113396126c1565b60408051600280825260608201835292935091906020830190803683370190505091506113908160008151811061136c57fe5b60200260200101518260018151811061138157fe5b60200260200101516001611fa3565b909150836000815181106113a057fe5b60200260200101846001815181106113b457fe5b6020908102919091010191909152525090565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561075d5780601f106107325761010080835404028352916020019161075d565b600a5490565b6000611438611d03565b8360800151611448610ef1611309565b611453610f17610ae6565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031686602001516001600160a01b0316149050600061149b82611f43565b905060006114a98315611f43565b90506114b58783611f97565b96506114c18682611f97565b955060008060006114d38a8a88611fa3565b92509250925061151a8b60a00151876114ec578a6114ee565b8b5b886114f9578c6114fb565b8b5b896115065784611508565b855b8a6115135786611515565b855b6127aa565b60008b51600181111561152957fe5b141561159857600061154761153c610d42565b60608e015190612854565b9050611569611563828e606001516128a990919063ffffffff16565b87611f97565b60608d0152600061157d8d8d8d87876128bf565b905061158981876128de565b995050505050505050506115ec565b6115a68b6060015185611f97565b60608c015260006115ba8c8c8c86866128ea565b90506115c681876128fd565b90506115e26115db6115d6610d42565b612909565b829061292f565b9850505050505050505b509392505050565b60008061160133856119be565b905080831061161b5761161633856000611a8f565b611628565b6116283385858403611a8f565b5060019392505050565b6000610774338484611c1b565b6000610ac8612995565b600d546001600160a01b031681565b600073__QueryProcessor________________________630397bee060088461167f611c00565b6040518463ffffffff1660e01b815260040161169d939291906151f1565b60206040518083038186803b1580156116b557600080fd5b505af41580156116c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107789190614e02565b61040090565b6000806116fe6126c1565b9050600061170a6124fd565b9050611727828260005b60200201518360015b6020020151612a0f565b9250505090565b61173c8442111560d1611c0d565b6001600160a01b0380881660008181526006602090815260408083205481517f00000000000000000000000000000000000000000000000000000000000000008185015280830195909552948b166060850152608084018a905260a0840185905260c08085018a90528151808603909101815260e090940190528251920191909120906117c882612a42565b9050600060018288888860405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015611826573d6000803e3d6000fd5b5050604051601f190151915061186890506001600160a01b0382161580159061186057508b6001600160a01b0316826001600160a01b0316145b6101f8611c0d565b6001600160a01b038b1660009081526006602052604090206001850190556118918b8b8b611a8f565b5050505050505050505050565b606080886118ad610ef1611309565b6118b8610f17610ae6565b6118c0611d03565b60006118ca610843565b61193a576118da8b8b8b88612a8e565b945090506118ef620f424082101560cc611c0d565b6118fd6000620f4240612b18565b61190c89620f42408303612b18565b6119158461265f565b60408051600280825260608201835290916020830190803683370190505092506119a8565b61194388612523565b611976878960008151811061195457fe5b60200260200101518a60018151811061196957fe5b6020026020010151612b22565b6119858b8b8b8b8b8b8b61258f565b909550935090506119968982612b18565b61199f8461265f565b6119a8836121e0565b6119b0611d56565b505097509795505050505050565b60006119c8611309565b6001600160a01b0316826001600160a01b031614156119ea5750600019610778565b6119f48383612b27565b9050610778565b6060610ac8612b52565b6201de2090565b80611a1681612bc1565b5050565b6000611a2883836055611a53565b9392505050565b6000611a2883836056611a7a565b6000611a4d838311156001611c0d565b50900390565b60006001821b1984168284611a69576000611a6c565b60015b60ff16901b17949350505050565b6001600160401b03811b1992909216911b1790565b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6000611b086000356001600160e01b031916611267565b9050610840611b178233612c3a565b610191611c0d565b8015611b3f57611b3a611b30611bb8565b4210610193611c0d565b611b54565b611b54611b4a611bdc565b42106101a9611c0d565b6007805482151560ff19909116811790915560408051918252517f9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be649181900360200190a150565b6000611ba5611bdc565b421180610ac857505060075460ff161590565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000610ac8600954612098565b81611a1657611a1681612d3c565b611c326001600160a01b0384161515610198611c0d565b611c496001600160a01b0383161515610199611c0d565b611c54838383612b22565b6001600160a01b038316600090815260208190526040902054611c7a90826101a0612d8f565b6001600160a01b038085166000908152602081905260408082209390935590841681522054611ca99082611f31565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b610a3b611d0e611b9b565b610192611c0d565b600954611d239082611a1a565b6009556040517f3e350b41e86a8e10f804ade6d35340d620be35569cc75ac943e8bb14ab80ead190610824908390615154565b600954611d62816120a5565b1561084057611d7c611d75600a54612da5565b8290612de5565b9050611d98611d91611d8c610843565b612da5565b8290612df2565b60095550565b6000611daa8282612e00565b611db584601f612e04565b611dc0866054612e15565b611dcb88606a612e04565b611dd68a609f612e15565b611de18c60b5612e04565b611dec8e60ea612e15565b17171717171798975050505050505050565b60006107788282612e22565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611e77612e2c565b3060405160200180868152602001858152602001848152602001838152602001826001600160a01b031681526020019550505050505060405160208183030381529060405280519060200120905090565b611edb64e8d4a5100082101560cb611c0d565b611ef167016345785d8a000082111560ca611c0d565b600954611efe9082611a2f565b6009556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc90610824908390615177565b6000828201611a288482101583611c0d565b600081611f70577f0000000000000000000000000000000000000000000000000000000000000000610778565b507f0000000000000000000000000000000000000000000000000000000000000000919050565b6000611a2883836123e6565b60408051600280825260608201835260009283928392839260208301908036833701905050905084611fd55785611fd7565b865b81600081518110611fe457fe5b60200260200101818152505084611ffb5786611ffd565b855b8160018151811061200a57fe5b60200260200101818152505060006120206124fd565b905061202e82826000611714565b9450600061203c8287612e30565b90508661204d576020810151612050565b80515b94508661205e578051612064565b60208101515b935050505093509350939050565b60006107788282612e64565b6000610778826016612e64565b600061077882602c612e22565b600061077882604b612e8b565b6000610778826055612e93565b6000610778826056612e9d565b611a168183146067611c0d565b600060608060006120db6124fd565b90506120e5611b9b565b156121945760006121008983835b602002015184600161171d565b9050600061210e8383612e30565b905061215d898b60008151811061212157fe5b60200260200101518c60018151811061213657fe5b60200260200101518460006002811061214b57fe5b602002015185600160200201516127aa565b61216682612eaa565b6121708a88612ed7565b90965094506121898287612182610843565b6000612f23565b600a55506121aa9050565b61219e8886612ed7565b600019600a5590945092505b60408051600280825260608201835286928692919060208301908036833701905050935093509350509750975097945050505050565b612207816000815181106121f057fe5b60200260200101516122026001611f43565b612f7b565b8160008151811061221457fe5b6020026020010181815250506122428160018151811061223057fe5b60200260200101516122026000611f43565b8160018151811061224f57fe5b60200260200101818152505050565b33301461231c576000306001600160a01b0316600036604051612282929190615083565b6000604051808303816000865af19150503d80600081146122bf576040519150601f19603f3d011682016040523d82523d6000602084013e6122c4565b606091505b5050905080600081146122d357fe5b60046000803e6000516001600160e01b0319166343adbafb60e01b81146122fe573d6000803e3d6000fd5b506020600460003e604060205260243d03602460403e601c3d016000f35b61232586612523565b60008061233b8b8b8b8b8b8b8b8b63ffffffff16565b509150915061234d818463ffffffff16565b8051601f1982018390526343adbafb603f1983015260200260231982016044820181fd5b60009081526008602052604090205490565b600080600080600080600061239788612f9b565b96506123a288612fa8565b95506123ad88612fb5565b94506123b888612fc2565b93506123c388612fcf565b92506123ce88612fdc565b91506123d988611dfe565b9050919395979092949650565b6000828202611a2884158061240357508385838161240057fe5b04145b6003611c0d565b60008161241d5761241d60006004611c0d565b8261242a57506000610778565b670de0b6b3a76400008381029084828161244057fe5b04146124525761245260006005611c0d565b82818161245b57fe5b04949350505050565b6040516334171a8560e01b815260009073__QueryProcessor________________________906334171a85906124a590600890889088908890600401615213565b60206040518083038186803b1580156124bd57600080fd5b505af41580156124d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124f59190614e02565b949350505050565b612505614900565b61250f6001612fe9565b815261251b6000612fe9565b602082015290565b61254a8160008151811061253357fe5b60200260200101516125456001611f43565b6123e6565b8160008151811061255757fe5b6020026020010181815250506122428160018151811061257357fe5b60200260200101516125456000611f43565b611a16828261303d565b6000606080600061259e6124fd565b905060006125ad8983836120f3565b905060006125bb8383612e30565b90506125ce898b60008151811061212157fe5b6125d782612eaa565b6000806125e48c8a6130f4565b600b54919350915060ff161561260e5761260e826126018f610ec3565b612609610843565b61312e565b612622848361261b610843565b6001612f23565b600a556040805160028082526060820183528492849291906020830190803683370190505097509750975050505050509750975097945050505050565b6126868160008151811061266f57fe5b60200260200101516126816001611f43565b613240565b8160008151811061269357fe5b602002602001018181525050612242816001815181106126af57fe5b60200260200101516126816000611f43565b604080516002808252606080830184529260208301908036833701905050905061272b7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000613273565b8160008151811061273857fe5b60200260200101818152505061278e7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000613273565b8160018151811061279b57fe5b60200260200101818152505090565b6009546127b6816120a5565b80156127c157508543115b1561284c5760006127d486858786613313565b905060006127ed878688876127e88861207e565b61332d565b905060006127fa84612098565b905060006128078561208b565b905060006128208284878761281b8b612072565b613371565b90508083146118915761283386826133c8565b955061283f86426133d6565b6009819055955050505050505b505050505050565b600082820283158061286e57508284828161286b57fe5b04145b61287e5761287e60006003611c0d565b8061288d576000915050610778565b670de0b6b3a764000060001982015b0460010191505092915050565b600082821115611a4d57611a4d60006001611c0d565b60006128d28585886060015186866133e4565b90505b95945050505050565b6000611a288383612f7b565b60006128d285858860600151868661344e565b6000611a288383613240565b6000670de0b6b3a76400008210612921576000610778565b50670de0b6b3a76400000390565b6000816129425761294260006004611c0d565b8261294f57506000610778565b670de0b6b3a76400008381029084828161296557fe5b041461298957612989670de0b6b3a764000085838161298057fe5b04146005611c0d565b82600182038161289c57fe5b600061299f611309565b6001600160a01b031663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b1580156129d757600080fd5b505afa1580156129eb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac891906149d7565b6000806000806000612a228888886134ae565b9350935093509350612a3684848484613628565b98975050505050505050565b6000612a4c611e0a565b82604051602001808061190160f01b81525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b600060606000612a9d8461369c565b9050612ab86000826003811115612ab057fe5b1460ce611c0d565b6000612ac3856136bb565b9050612ad1815160026120bf565b612ada81612523565b6000612ae46124fd565b90506000612af38383836120f3565b90506000612b028260026123e6565b600a929092555099919850909650505050505050565b611a16828261376f565b505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60408051600280825260608083018452926000929190602083019080368337019050509050612b816001613804565b81600081518110612b8e57fe5b602002602001018181525050612ba46000613804565b81600181518110612bb157fe5b6020908102919091010152905090565b600281511015612bd057610840565b600081600081518110612bdf57fe5b602002602001015190506000600190505b8251811015612b22576000838281518110612c0757fe5b60200260200101519050612c30816001600160a01b0316846001600160a01b0316106065611c0d565b9150600101612bf0565b600073ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b612c596112e5565b6001600160a01b031614158015612c745750612c7483613858565b15612c9c57612c816112e5565b6001600160a01b0316336001600160a01b0316149050610778565b612ca4612995565b6001600160a01b0316639be2a8848484306040518463ffffffff1660e01b815260040180848152602001836001600160a01b03168152602001826001600160a01b03168152602001935050505060206040518083038186803b158015612d0957600080fd5b505afa158015612d1d573d6000803e3d6000fd5b505050506040513d6020811015612d3357600080fd5b50519050610778565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6000612d9e8484111583611c0d565b5050900390565b600080612db18361388a565b90506000808213612dca57652d79883d20008203612dd4565b652d79883d200082015b655af3107a40009005949350505050565b6000611a288383836138ee565b6000611a28838360166138ee565b1b90565b661fffffffffffff91909116901b90565b623fffff91909116901b90565b1c637fffffff1690565b4690565b612e38614900565b612e4b600184815b602002015184613905565b8152612e5960008481612e40565b602082015292915050565b600082821c623fffff16621fffff8113612e7e57806124f5565b623fffff19179392505050565b1c6103ff1690565b1c60019081161490565b1c6001600160401b031690565b600080600080612ebc600a5486613925565b9350935093509350612ed08484848461398e565b5050505050565b600060606000612ee68461369c565b90506001816003811115612ef657fe5b1415612f1057612f0685856139ae565b9093509150612f1b565b612f1b610150612d3c565b509250929050565b60008115612f55576000612f4184612f3b8888612854565b9061292f565b9050612f4d86826139e0565b9150506124f5565b6000612f6584610de888886139f8565b9050612f7186826128a9565b9695505050505050565b6000612f8a8215156004611c0d565b818381612f9357fe5b049392505050565b60006107788260ea612e64565b60006107788260b5613a31565b600061077882609f612e64565b600061077882606a613a31565b6000610778826054612e64565b600061077882601f613a31565b600081613016577f0000000000000000000000000000000000000000000000000000000000000000610778565b507f0000000000000000000000000000000000000000000000000000000000000000919050565b6130546001600160a01b038316151561019b611c0d565b61306082600083612b22565b6001600160a01b03821660009081526020819052604090205461308690826101a1612d8f565b6001600160a01b0383166000908152602081905260409020556002546130ac9082613a64565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6000606060006131038461369c565b9050600381600381111561311357fe5b141561312357612f068585613a72565b612f1b610136612d3c565b60408051606081018252600b5460ff81161515825261010081046001600160781b031660208301819052600160801b9091046001600160801b0316928201929092529061317b85856139e0565b11156040518060400160405280601a81526020017f6f7665722061646472657373206c697175696469747920636170000000000000815250906131d15760405162461bcd60e51b81526004016107cf9190615272565b5060408101516001600160801b03166131ea85846139e0565b11156040518060400160405280601981526020017f6f76657220676c6f62616c206c6971756964697479206361700000000000000081525090612ed05760405162461bcd60e51b81526004016107cf9190615272565b600061324f8215156004611c0d565b8261325c57506000610778565b81600184038161326857fe5b046001019050610778565b6000806000613280611309565b6001600160a01b031663b05f8e48613296610ae6565b876040518363ffffffff1660e01b81526004016132b4929190615180565b60806040518083038186803b1580156132cc57600080fd5b505afa1580156132e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133049190614ffb565b50500193909302949350505050565b60008061332286868686613a97565b9050612f7181612da5565b60008061333c87878787613a97565b9050600061335461334d8784612854565b89906139e0565b9050600061336182612da5565b9490940398975050505050505050565b60008061338d858585426133848b612371565b93929190613ab0565b90506078428890031015806133a257866133ab565b6133ab87613b02565b600081815260086020526040902092909255509695505050505050565b6000611a288383604b613b0f565b6000611a288383602c613b1f565b6000806134036133fc85670de0b6b3a7640002612854565b88906139e0565b9050600061341c6133fc85670de0b6b3a763ffff6139f8565b905061343561342b83886139e0565b610de883896139f8565b92505050848111156128d5576128d56000610165613b31565b600084841115613465576134656000610165613b31565b600061347c6133fc85670de0b6b3a7640002612854565b905060006134956133fc85670de0b6b3a763ffff6139f8565b9050612a366134a482886128a9565b612f3b8489612854565b60008080806134cf6134c0878761240a565b670de0b6b3a7640000906128a9565b935060006134fa86896001815181106134e457fe5b602002602001015161240a90919063ffffffff16565b90506000613525888a60008151811061350f57fe5b60200260200101516139f890919063ffffffff16565b905061353182826139e0565b94506135588960018151811061354357fe5b60200260200101518a60008151811061350f57fe5b9250505061358f86613589886135898b60008151811061357457fe5b60200260200101518c60008151811061350f57fe5b906139f8565b915060006135cf86610de889613589670de0b6b3a76400006002026135898e6001815181106135ba57fe5b60200260200101518f60008151811061350f57fe5b905060006136056135e08880612854565b610de88b6001815181106135f057fe5b60200260200101518c60018151811061350f57fe5b905061361b8161361586856139e0565b906139e0565b9350505093509350935093565b60008061363d86671bc16d674ec80000612854565b905060006136578761358986673782dace9d9000006139f8565b9050600061366586836139e0565b90506000613674826005613b3f565b9050600061368289836139e0565b905061368e818661240a565b9a9950505050505050505050565b60008180602001905160208110156136b357600080fd5b505192915050565b60608180602001905160408110156136d257600080fd5b8151602083018051604051929492938301929190846401000000008211156136f957600080fd5b90830190602082018581111561370e57600080fd5b825186602082028301116401000000008211171561372b57600080fd5b82525081516020918201928201910280838360005b83811015613758578181015183820152602001613740565b505050509190910160405250929695505050505050565b61377b60008383612b22565b6002546137889082611f31565b6002556001600160a01b0382166000908152602081905260409020546137ae9082611f31565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600081613831577f0000000000000000000000000000000000000000000000000000000000000000610778565b507f0000000000000000000000000000000000000000000000000000000000000000919050565b600061386a631c74c91760e11b611267565b82148061077857506138826350dd6ed960e01b611267565b909114919050565b600061389a600083136064611c0d565b670c7d713b49da0000821380156138b85750670f43fc2c04ee000082125b156138de57670de0b6b3a76400006138cf83613ccd565b816138d657fe5b059050610edd565b6138e782613deb565b9050610edd565b623fffff828116821b90821b198416179392505050565b60008361391b57613916828461418a565b6124f5565b6124f58284614196565b6000806000806000806000806139396141a2565b9350935093509350836000141561395e57600097508796509094509250613985915050565b6000806139758c8c61396e610843565b8989614411565b909a509850929650909450505050505b92959194509250565b831561399e5761399e8285612b18565b8215610ab857610ab88184612b18565b6000606060006139bd846144a6565b905060006139d386836139ce610843565b6144c8565b9196919550909350505050565b600082820183811015611a2857611a28600080611c0d565b6000828202831580613a12575082848281613a0f57fe5b04145b613a2257613a2260006003611c0d565b670de0b6b3a76400008161245b565b600082821c661fffffffffffff16660fffffffffffff8113613a5357806124f5565b661fffffffffffff19179392505050565b6000611a2883836001612d8f565b600060606000613a81846144a6565b905060006139d38683613a92610843565b61454d565b60006128d5613aa684846139e0565b612f3b87876139e0565b600080613abc87611dfe565b830390506000818702613ace89612fa8565b0190506000828702613adf8a612fc2565b0190506000838702613af08b612fdc565b01905061368e89848a858b868c611d9e565b60006107788260016145e8565b6103ff811b1992909216911b1790565b637fffffff811b1992909216911b1790565b81611a1657611a16816145f0565b600082613b4e57506000610778565b6000613b5984614600565b9050600281670de0b6b3a7640000860281613b7057fe5b04820181613b7a57fe5b049050600281670de0b6b3a7640000860281613b9257fe5b04820181613b9c57fe5b049050600281670de0b6b3a7640000860281613bb457fe5b04820181613bbe57fe5b049050600281670de0b6b3a7640000860281613bd657fe5b04820181613be057fe5b049050600281670de0b6b3a7640000860281613bf857fe5b04820181613c0257fe5b049050600281670de0b6b3a7640000860281613c1a57fe5b04820181613c2457fe5b049050600281670de0b6b3a7640000860281613c3c57fe5b04820181613c4657fe5b0490506000613c5582806139f8565b9050613c6b613c648386612854565b86906139e0565b8111158015613c8d5750613c89613c828386612854565b86906128a9565b8110155b6115ec576040805162461bcd60e51b815260206004820152600c60248201526b17dcdc5c9d0811905253115160a21b604482015290519081900360640190fd5b670de0b6b3a7640000026000806a0c097ce7bc90715b34b9f160241b808401906ec097ce7bc90715b34b9f0fffffffff1985010281613d0857fe5b05905060006a0c097ce7bc90715b34b9f160241b82800205905081806a0c097ce7bc90715b34b9f160241b81840205915060038205016a0c097ce7bc90715b34b9f160241b82840205915060058205016a0c097ce7bc90715b34b9f160241b82840205915060078205016a0c097ce7bc90715b34b9f160241b82840205915060098205016a0c097ce7bc90715b34b9f160241b828402059150600b8205016a0c097ce7bc90715b34b9f160241b828402059150600d8205016a0c097ce7bc90715b34b9f160241b828402059150600f826002919005919091010295945050505050565b6000670de0b6b3a7640000821215613e2757613e1d826a0c097ce7bc90715b34b9f160241b81613e1757fe5b05613deb565b6000039050610edd565b60007e1600ef3172e58d2e933ec884fde10064c63b5372d805e203c00000000000008312613e7857770195e54c5dd42177f53a27172fa9ec630262827000000000830592506806f05b59d3b2000000015b73011798004d755d3c8bc8e03204cf44619e0000008312613eb0576b1425982cf597cd205cef7380830592506803782dace9d9000000015b606492830292026e01855144814a7ff805980ff00840008312613ef8576e01855144814a7ff805980ff008400068056bc75e2d63100000840205925068ad78ebc5ac62000000015b6b02df0ab5a80a22c61ab5a7008312613f33576b02df0ab5a80a22c61ab5a70068056bc75e2d6310000084020592506856bc75e2d631000000015b693f1fce3da636ea5cf8508312613f6a57693f1fce3da636ea5cf85068056bc75e2d631000008402059250682b5e3af16b18800000015b690127fa27722cc06cc5e28312613fa157690127fa27722cc06cc5e268056bc75e2d6310000084020592506815af1d78b58c400000015b68280e60114edb805d038312613fd65768280e60114edb805d0368056bc75e2d631000008402059250680ad78ebc5ac6200000015b680ebc5fb41746121110831261400157680ebc5fb4174612111068056bc75e2d631000009384020592015b6808f00f760a4b2db55d8312614036576808f00f760a4b2db55d68056bc75e2d6310000084020592506802b5e3af16b1880000015b6806f5f1775788937937831261406b576806f5f177578893793768056bc75e2d63100000840205925068015af1d78b58c40000015b6806248f33704b286603831261409f576806248f33704b28660368056bc75e2d63100000840205925067ad78ebc5ac620000015b6805c548670b9510e7ac83126140d3576805c548670b9510e7ac68056bc75e2d6310000084020592506756bc75e2d6310000015b600068056bc75e2d63100000840168056bc75e2d6310000080860302816140f657fe5b059050600068056bc75e2d63100000828002059050818068056bc75e2d63100000818402059150600382050168056bc75e2d63100000828402059150600582050168056bc75e2d63100000828402059150600782050168056bc75e2d63100000828402059150600982050168056bc75e2d63100000828402059150600b820501600202606485820105979650505050505050565b6000611a2883836139f8565b6000611a28838361240a565b600e5460405163bd02d0f560e01b81526000918291829182916001600160a01b039091169063bd02d0f5906141f4907550524f544f434f4c5f535741505f4645455f5045524360501b90600401615177565b60206040518083038186803b15801561420c57600080fd5b505afa158015614220573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906142449190614e02565b600e5460405163bd02d0f560e01b81526001600160a01b039091169063bd02d0f590614294907f50524f544f434f4c5f4645455f4759524f5f504f5254494f4e0000000000000090600401615177565b60206040518083038186803b1580156142ac57600080fd5b505afa1580156142c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906142e49190614e02565b600e546040516321f8a72160e01b81526001600160a01b03909116906321f8a72190614324906c4759524f5f545245415355525960981b90600401615177565b60206040518083038186803b15801561433c57600080fd5b505afa158015614350573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061437491906149d7565b600e546040516321f8a72160e01b81526001600160a01b03909116906321f8a721906143b3906b42414c5f545245415355525960a01b90600401615177565b60206040518083038186803b1580156143cb57600080fd5b505afa1580156143df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061440391906149d7565b935093509350935090919293565b6000808686116144265750600090508061449c565b6000614440856135896144398a8c6128a9565b89906139f8565b90506000614458614451898b6128a9565b87906139f8565b9050600061446689836128a9565b90506000614474848361240a565b9050600061448288836139f8565b9050600061449083836128a9565b91975090955050505050505b9550959350505050565b60008180602001905160408110156144bd57600080fd5b506020015192915050565b606083516001600160401b03811180156144e157600080fd5b5060405190808252806020026020018201604052801561450b578160200160208202803683370190505b50905060005b84518110156115ec5761452e83610de88688858151811061350f57fe5b82828151811061453a57fe5b6020908102919091010152600101614511565b606083516001600160401b038111801561456657600080fd5b50604051908082528060200260200182016040528015614590578160200160208202803683370190505b50905060005b84518110156115ec576145c983612f3b868885815181106145b357fe5b602002602001015161285490919063ffffffff16565b8282815181106145d557fe5b6020908102919091010152600101614596565b016103ff1690565b610840816223aca960e91b6147d2565b6000670de0b6b3a7640000821061462d57670de0b6b3a7640000614625818404614833565b1b9050610edd565b600a8211614640575063bc7c871c610edd565b6064821161465457506402540be400610edd565b6103e88211614669575064075cdd4719610edd565b612710821161467e575064174876e800610edd565b620186a0821161469457506449a0a4c700610edd565b620f424082116146aa575064e8d4a51000610edd565b6298968082116146c157506502e0466fc608610edd565b6305f5e10082116146d957506509184e72a000610edd565b633b9aca0082116146f15750651cc2c05dbc53610edd565b6402540be400821161470a5750655af3107a4000610edd565b64174876e8008211614724575066011f9b83a95b45610edd565b64e8d4a51000821161473e575066038d7ea4c68000610edd565b6509184e72a00082116147595750660b3c13249d90bb610edd565b655af3107a400082116147745750662386f26fc10000610edd565b66038d7ea4c6800082116147905750667058bf6e27a751610edd565b662386f26fc1000082116147ad575067016345785d8a0000610edd565b67016345785d8a000082116147cb5750670463777a4d8c892d610edd565b5080610edd565b62461bcd60e51b600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fd5b6000600160801b821061484b5760809190911c906040015b6801000000000000000082106148665760409190911c906020015b640100000000821061487d5760209190911c906010015b6201000082106148925760109190911c906008015b61010082106148a65760089190911c906004015b601082106148b95760049190911c906002015b60048210610edd57600101919050565b604080516060810182526000808252602082018190529181019190915290565b604080518082019091526000808252602082015290565b60405180604001604052806002906020820280368337509192915050565b8035610edd816153a2565b80358015158114610edd57600080fd5b600082601f830112614949578081fd5b81356001600160401b0381111561495c57fe5b61496f601f8201601f1916602001615362565b818152846020838601011115614983578283fd5b816020850160208301379081016020019190915292915050565b803560028110610edd57600080fd5b803560038110610edd57600080fd5b6000602082840312156149cc578081fd5b8135611a28816153a2565b6000602082840312156149e8578081fd5b8151611a28816153a2565b60008060408385031215614a05578081fd5b8235614a10816153a2565b91506020830135614a20816153a2565b809150509250929050565b600080600060608486031215614a3f578081fd5b8335614a4a816153a2565b92506020840135614a5a816153a2565b929592945050506040919091013590565b600080600080600080600060e0888a031215614a85578485fd5b8735614a90816153a2565b96506020880135614aa0816153a2565b95506040880135945060608801359350608088013560ff81168114614ac3578384fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215614af2578182fd5b8235614afd816153a2565b946020939093013593505050565b60006020808385031215614b1d578182fd5b82356001600160401b0380821115614b33578384fd5b818501915085601f830112614b46578384fd5b8135614b59614b5482615385565b615362565b818152848101908486016040808502870188018b1015614b77578889fd5b8896505b84871015614bcf5780828c031215614b91578889fd5b80518181018181108882111715614ba457fe5b8252614baf836149ac565b815282890135898201528452600196909601959287019290810190614b7b565b50909998505050505050505050565b60006020808385031215614bf0578182fd5b82356001600160401b0380821115614c06578384fd5b818501915085601f830112614c19578384fd5b8135614c27614b5482615385565b818152848101908486016060808502870188018b1015614c45578889fd5b8896505b84871015614bcf5780828c031215614c5f578889fd5b604080518281018181108982111715614c7457fe5b8252614c7f846149ac565b8152838a01358a82015281840135918101919091528452600196909601959287019290810190614c49565b600060208284031215614cbb578081fd5b611a2882614929565b600080600080600080600060e0888a031215614cde578081fd5b87359650602080890135614cf1816153a2565b96506040890135614d01816153a2565b955060608901356001600160401b0380821115614d1c578384fd5b818b0191508b601f830112614d2f578384fd5b8135614d3d614b5482615385565b8082825285820191508585018f878886028801011115614d5b578788fd5b8795505b83861015614d7d578035835260019590950194918601918601614d5f565b509850505060808b0135955060a08b0135945060c08b0135925080831115614da3578384fd5b5050614db18a828b01614939565b91505092959891949750929550565b600060208284031215614dd1578081fd5b81356001600160e01b031981168114611a28578182fd5b600060208284031215614df9578081fd5b611a28826149ac565b600060208284031215614e13578081fd5b5051919050565b600060608284031215614e2b578081fd5b604051606081018181106001600160401b0382111715614e4757fe5b604052614e5383614929565b815260208301356001600160781b0381168114614e6e578283fd5b602082015260408301356001600160801b0381168114614e8c578283fd5b60408201529392505050565b600080600060608486031215614eac578081fd5b83356001600160401b0380821115614ec2578283fd5b8186019150610120808389031215614ed8578384fd5b614ee181615362565b9050614eec8361499d565b8152614efa6020840161491e565b6020820152614f0b6040840161491e565b6040820152606083013560608201526080830135608082015260a083013560a0820152614f3a60c0840161491e565b60c0820152614f4b60e0840161491e565b60e08201526101008084013583811115614f63578586fd5b614f6f8a828701614939565b9183019190915250976020870135975060409096013595945050505050565b600060208284031215614f9f578081fd5b5035919050565b60008060408385031215614fb8578182fd5b50508035926020909101359150565b600080600060608486031215614fdb578081fd5b8335925060208401359150614ff260408501614929565b90509250925092565b60008060008060808587031215615010578182fd5b8451935060208501519250604085015191506060850151615030816153a2565b939692955090935050565b6000815180845260208085019450808401835b8381101561506a5781518752958201959082019060010161504e565b509495945050505050565b6003811061507f57fe5b9052565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b6020808252825182820181905260009190848201906040850190845b818110156150df578351835292840192918401916001016150c3565b50909695505050505050565b60408101818360005b60028110156151135781518352602092830192909101906001016150f4565b50505092915050565b600060208252611a28602083018461503b565b600060408252615142604083018561503b565b82810360208401526128d5818561503b565b901515815260200190565b92151583526020830191909152604082015260600190565b90815260200190565b9182526001600160a01b0316602082015260400190565b968752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b9586526020860194909452604085019290925260608401521515608083015260a082015260c00190565b838152606081016152056020830185615075565b826040830152949350505050565b848152608081016152276020830186615075565b60408201939093526060015292915050565b600060a082019050848252615252602083018551615075565b602084015160408381019190915290930151606082015260800152919050565b6000602080835283518082850152825b8181101561529e57858101830151858201604001528201615282565b818111156152af5783604083870101525b50601f01601f1916929092016040019392505050565b8151151581526020808301516001600160781b0316908201526040918201516001600160801b03169181019190915260600190565b905460ff811615158252600881901c6001600160781b0316602083015260801c604082015260600190565b6000838252604060208301526124f5604083018461503b565b9283526020830191909152604082015260600190565b60ff91909116815260200190565b6040518181016001600160401b038111828210171561537d57fe5b604052919050565b60006001600160401b0382111561539857fe5b5060209081020190565b6001600160a01b038116811461084057600080fdfea26469706673582212202f53fdb05bd0962b95a66cdefc384c0a5c26cdad2ae535ab00ee32b2e0cf008464736f6c63430007060033", "bytecodeSha1": "0dc12d8c7dbe1fdd647cc798ea4d3c984005dee7", "compiler": {"evm_version": "berlin", "optimizer": {"enabled": true, "runs": 200}, "version": "0.7.6+commit.7338295f"}, "contractName": "Gyro2CLPPool", "coverageMap": {"branches": {"0": {}, "1": {}, "110": {}, "111": {}, "112": {}, "113": {}, "115": {}, "116": {}, "117": {}, "118": {}, "14": {"CappedLiquidity._ensureCap": {"470": [2206, 2259, true]}, "CappedLiquidity.setCapManager": {"467": [1376, 1400, true]}, "CappedLiquidity.setCapParams": {"468": [1704, 1728, true], "469": [1764, 1785, true]}}, "15": {"ExtensibleWeightedPool2Tokens._cacheInvariantAndSupply": {"473": [34203, 34227, false]}, "ExtensibleWeightedPool2Tokens._normalizedWeights": {"476": [9398, 9404, true]}, "ExtensibleWeightedPool2Tokens._queryAction": {"475": [43701, 43728, false]}, "ExtensibleWeightedPool2Tokens._scalingFactor": {"474": [40277, 40283, true]}, "ExtensibleWeightedPool2Tokens.enableOracle": {"471": [8475, 8492, false]}, "ExtensibleWeightedPool2Tokens.onExitPool": {"472": [24700, 24714, false]}}, "17": {"LocallyPausable.changePauseManager": {"515": [791, 824, true]}, "LocallyPausable.pause": {"516": [1056, 1082, true]}, "LocallyPausable.unpause": {"514": [1269, 1295, true]}}, "2": {"Gyro2CLPPool._calculateCurrentValues": {"446": [11490, 11505, true], "447": [11564, 11579, true], "448": [11898, 11913, true], "449": [11977, 11992, true]}, "Gyro2CLPPool._doExit": {"455": [22919, 22980, false]}, "Gyro2CLPPool._doJoin": {"457": [17848, 17913, false]}, "Gyro2CLPPool._getDueProtocolFeeAmounts": {"459": [26175, 26199, false]}, "Gyro2CLPPool._onExitPool": {"450": [20332, 20346, false]}, "Gyro2CLPPool._onJoinPool": {"451": [16668, 16689, false]}, "Gyro2CLPPool._payFeesBpt": {"460": [26840, 26852, false], "461": [26974, 26990, false]}, "Gyro2CLPPool._sqrtParameters": {"456": [3214, 3224, true]}, "Gyro2CLPPool._updateOracle": {"452": [28159, 28183, false], "453": [28187, 28217, false], "454": [29051, 29091, false]}, "Gyro2CLPPool._virtualParameters": {"458": [6012, 6022, true]}, "Gyro2CLPPool.onSwap": {"441": [7594, 7609, true], "442": [7658, 7673, true], "443": [7722, 7737, true], "444": [7786, 7801, true], "445": [7861, 7901, false]}}, "3": {}, "35": {}, "38": {}, "39": {}, "40": {}, "41": {}, "42": {"GyroFixedPoint.divDown": {"477": [3940, 3946, false], "478": [4024, 4030, false]}, "GyroFixedPoint.divUp": {"481": [4543, 4549, false]}, "GyroFixedPoint.mulDown": {"482": [2361, 2367, true], "483": [2371, 2387, false]}, "GyroFixedPoint.mulUp": {"479": [2836, 2842, true], "480": [2846, 2862, false]}}, "43": {"GyroPoolMath._calcProtocolFees": {"488": [5676, 5713, false]}, "GyroPoolMath._intLog2Halved": {"507": [10561, 10574, false], "508": [10644, 10656, false], "509": [10725, 10737, false], "510": [10806, 10818, false], "511": [10886, 10897, false], "512": [10964, 10975, false]}, "GyroPoolMath._makeInitialGuess": {"489": [8925, 8952, false], "490": [9082, 9093, false], "491": [9166, 9178, false], "492": [9241, 9253, false], "493": [9326, 9338, false], "494": [9401, 9413, false], "495": [9486, 9498, false], "496": [9561, 9573, false], "497": [9646, 9658, false], "498": [9721, 9733, false], "499": [9805, 9818, false], "500": [9881, 9894, false], "501": [9966, 9979, false], "502": [10042, 10055, false], "503": [10127, 10140, false], "504": [10203, 10216, false], "505": [10288, 10301, false], "506": [10364, 10377, false]}, "GyroPoolMath._sqrt": {"485": [7331, 7341, false], "486": [8100, 8149, false], "487": [8153, 8202, true]}, "GyroPoolMath.liquidityInvariantUpdate": {"484": [11732, 11745, false]}}, "46": {"BalancerPoolToken.allowance": {"465": [2364, 2394, false]}, "BalancerPoolToken.decreaseAllowance": {"464": [3611, 3637, false]}, "BalancerPoolToken.transferFrom": {"462": [3030, 3050, false], "463": [3054, 3085, false]}}, "49": {"BasePoolAuthorization._canPerform": {"466": [2112, 2140, false]}}, "52": {}, "53": {}, "54": {}, "55": {}, "56": {}, "57": {}, "59": {}, "61": {}, "62": {}, "63": {}, "64": {}, "67": {}, "68": {}, "69": {}, "70": {"InputHelpers.ensureArrayIsSorted": {"513": [1496, 1512, false]}}, "71": {}, "73": {"TemporarilyPausable._setPaused": {"533": [3849, 3855, false]}}, "74": {"WordCodec.decodeInt22": {"535": [12558, 12577, true]}, "WordCodec.decodeInt53": {"536": [13167, 13186, true]}, "WordCodec.insertBool": {"534": [3342, 3347, true]}}, "75": {}, "76": {"LogExpMath._ln": {"519": [14218, 14228, false], "520": [15949, 15965, false], "521": [16073, 16089, false], "522": [16469, 16476, false], "523": [16561, 16568, false], "524": [16653, 16660, false], "525": [16745, 16752, false], "526": [16837, 16844, false], "527": [16929, 16936, false], "528": [17021, 17028, false], "529": [17113, 17120, false], "530": [17205, 17213, false], "531": [17300, 17308, false]}, "LogExpMath.ln": {"517": [13889, 13910, false], "518": [13914, 13935, false]}}, "77": {"Math.divUp": {"532": [2443, 2449, false]}}, "78": {}, "81": {}, "82": {}, "83": {}, "86": {}, "87": {}, "91": {}}, "statements": {"0": {"Gyro2CLPMath._calcInGivenOut": {"294": [10562, 10620], "295": [11004, 11077]}, "Gyro2CLPMath._calcOutGivenIn": {"292": [8311, 8387], "293": [8488, 8546]}, "Gyro2CLPMath._calculateInvariant": {"226": [2370, 2416]}, "Gyro2CLPMath._calculateQuadratic": {"301": [5031, 5073]}, "Gyro2CLPMath._calculateQuadraticTerms": {"296": [2972, 3027], "297": [3162, 3185], "298": [3199, 3236], "299": [3429, 3511], "300": [3742, 3779]}, "Gyro2CLPMath._calculateVirtualParameter0": {"396": [11303, 11338]}, "Gyro2CLPMath._calculateVirtualParameter1": {"395": [11555, 11591]}}, "1": {"Gyro2CLPOracleMath._calcLogBPTPrice": {"287": [3932, 3976]}, "Gyro2CLPOracleMath._calcLogSpotPrice": {"286": [2040, 2084]}, "Gyro2CLPOracleMath._calcSpotPrice": {"325": [1189, 1270]}}, "110": {}, "111": {}, "112": {}, "113": {}, "115": {}, "116": {}, "117": {}, "118": {}, "14": {"CappedLiquidity._ensureCap": {"279": [2198, 2279], "280": [2289, 2367]}, "CappedLiquidity.capParams": {"28": [1591, 1608]}, "CappedLiquidity.setCapManager": {"3": [1368, 1418], "4": [1428, 1452], "5": [1462, 1497]}, "CappedLiquidity.setCapParams": {"59": [1696, 1746], "60": [1756, 1797], "61": [1808, 1849], "62": [1859, 1906], "63": [1916, 1955], "64": [1966, 1999]}}, "15": {"ExtensibleWeightedPool2Tokens._cacheInvariantAndSupply": {"144": [34243, 34322], "145": [34336, 34416], "146": [34430, 34450]}, "ExtensibleWeightedPool2Tokens._downscaleDown": {"217": [41329, 41371]}, "ExtensibleWeightedPool2Tokens._downscaleDownArray": {"176": [41650, 41709], "177": [41719, 41779]}, "ExtensibleWeightedPool2Tokens._downscaleUp": {"219": [42091, 42131]}, "ExtensibleWeightedPool2Tokens._downscaleUpArray": {"204": [42406, 42463], "205": [42473, 42531]}, "ExtensibleWeightedPool2Tokens._getAuthorizer": {"225": [42992, 43025]}, "ExtensibleWeightedPool2Tokens._getOracleIndex": {"133": [34551, 34581]}, "ExtensibleWeightedPool2Tokens._isOwnerOnlyAction": {"309": [7784, 7954]}, "ExtensibleWeightedPool2Tokens._normalizedWeights": {"235": [9148, 9195], "236": [9205, 9253], "237": [9263, 9287], "308": [9391, 9446]}, "ExtensibleWeightedPool2Tokens._queryAction": {"178": [47680, 47703], "179": [48012, 48041]}, "ExtensibleWeightedPool2Tokens._scalingFactor": {"155": [40270, 40319]}, "ExtensibleWeightedPool2Tokens._setOracleEnabled": {"142": [8617, 8664], "143": [8674, 8708]}, "ExtensibleWeightedPool2Tokens._setSwapFeePercentage": {"150": [7355, 7442], "151": [7452, 7539], "152": [7550, 7611], "153": [7621, 7669]}, "ExtensibleWeightedPool2Tokens._upscale": {"156": [40587, 40625]}, "ExtensibleWeightedPool2Tokens._upscaleArray": {"196": [40892, 40947], "197": [40957, 41013]}, "ExtensibleWeightedPool2Tokens.enableOracle": {"18": [8362, 8385], "19": [8508, 8534]}, "ExtensibleWeightedPool2Tokens.getLastInvariant": {"80": [9529, 9550]}, "ExtensibleWeightedPool2Tokens.getMiscData": {"35": [6600, 6638], "36": [6648, 6690], "37": [6700, 6772], "38": [6782, 6818], "39": [6828, 6868], "40": [6878, 6926]}, "ExtensibleWeightedPool2Tokens.getNormalizedWeights": {"115": [8956, 8983]}, "ExtensibleWeightedPool2Tokens.getPoolId": {"26": [6218, 6232]}, "ExtensibleWeightedPool2Tokens.getRate": {"46": [39388, 39445]}, "ExtensibleWeightedPool2Tokens.getSwapFeePercentage": {"41": [7011, 7047]}, "ExtensibleWeightedPool2Tokens.onExitPool": {"53": [23807, 23830], "54": [24236, 24272], "55": [24384, 24415], "56": [24425, 24467], "57": [24730, 24756], "58": [24777, 24819]}, "ExtensibleWeightedPool2Tokens.onJoinPool": {"100": [14060, 14142], "101": [14437, 14495], "102": [14509, 14550], "103": [14564, 14619], "104": [14706, 14734], "105": [14824, 14864], "106": [14895, 14918], "107": [14995, 15051], "108": [15066, 15345], "109": [15459, 15499], "110": [15586, 15614], "111": [15713, 15755], "112": [15917, 15943]}, "ExtensibleWeightedPool2Tokens.queryExit": {"42": [36946, 37001], "43": [37012, 37149]}, "ExtensibleWeightedPool2Tokens.queryJoin": {"73": [35555, 35610], "74": [35621, 35756]}, "ExtensibleWeightedPool2Tokens.setPaused": {"6": [8842, 8860]}, "ExtensibleWeightedPool2Tokens.setSwapFeePercentage": {"25": [7226, 7266]}}, "17": {"LocallyPausable.changePauseManager": {"66": [783, 845], "67": [855, 883], "68": [893, 953]}, "LocallyPausable.pause": {"69": [1048, 1103], "70": [1113, 1134], "71": [1144, 1164]}, "LocallyPausable.unpause": {"32": [1261, 1316], "33": [1326, 1348], "34": [1358, 1380]}}, "2": {"Gyro2CLPPool._calculateCurrentValues": {"157": [11476, 11540], "158": [11550, 11614], "159": [11684, 11775], "160": [11881, 11949], "161": [11959, 12028]}, "Gyro2CLPPool._distributeFees": {"258": [24883, 24945]}, "Gyro2CLPPool._doExit": {"259": [22996, 23071], "260": [23102, 23137]}, "Gyro2CLPPool._doJoin": {"277": [17929, 18007], "278": [18038, 18073]}, "Gyro2CLPPool._exitExactBPTInForTokensOut": {"319": [24049, 24081]}, "Gyro2CLPPool._getAllBalances": {"206": [4698, 4725], "207": [4735, 4797], "208": [4807, 4869]}, "Gyro2CLPPool._getDueProtocolFeeAmounts": {"315": [26215, 26255], "316": [26560, 26618]}, "Gyro2CLPPool._getFeesMetadata": {"397": [27254, 27561]}, "Gyro2CLPPool._getScaledTokenBalance": {"284": [4064, 4088], "285": [4174, 4207]}, "Gyro2CLPPool._getVirtualParameters": {"252": [5626, 5699], "253": [5709, 5783]}, "Gyro2CLPPool._onExitPool": {"169": [20952, 21042], "170": [21057, 21095], "171": [21110, 21165], "172": [21623, 21735], "173": [21966, 22021], "174": [22332, 22366], "175": [22499, 22549]}, "Gyro2CLPPool._onInitializePool": {"228": [13088, 13158], "229": [13235, 13291], "230": [13301, 13325], "231": [13859, 13894], "232": [13905, 13937]}, "Gyro2CLPPool._onJoinPool": {"199": [16423, 16513], "200": [16524, 16562], "201": [16705, 16766], "202": [17211, 17323], "203": [17446, 17496]}, "Gyro2CLPPool._onSwapGivenIn": {"216": [9687, 9822]}, "Gyro2CLPPool._onSwapGivenOut": {"218": [10165, 10300]}, "Gyro2CLPPool._payFeesBpt": {"317": [26868, 26907], "318": [27006, 27048]}, "Gyro2CLPPool._sqrtParameters": {"194": [2969, 3013], "195": [3023, 3068], "271": [3207, 3249]}, "Gyro2CLPPool._updateOracle": {"209": [29163, 29217], "210": [29235, 29304], "211": [29322, 29342]}, "Gyro2CLPPool._virtualParameters": {"314": [5993, 6188]}, "Gyro2CLPPool.calculateCurrentValues": {"29": [10844, 10907], "30": [10917, 10983], "31": [10993, 11073]}, "Gyro2CLPPool.getInvariant": {"95": [6460, 6539]}, "Gyro2CLPPool.getSqrtParameters": {"51": [2827, 2851]}, "Gyro2CLPPool.getVirtualParameters": {"77": [5281, 5313], "78": [5323, 5419]}, "Gyro2CLPPool.onSwap": {"81": [7036, 7099], "82": [7109, 7175], "83": [7530, 7846], "84": [8300, 8378], "85": [8589, 8644], "86": [8675, 8739], "87": [8948, 9003], "88": [9223, 9281]}}, "3": {}, "35": {}, "38": {}, "39": {}, "40": {}, "41": {"_grequire": {"330": [337, 356]}, "_grevert": {"408": [841, 870]}}, "42": {"GyroFixedPoint.add": {"320": [1881, 1917]}, "GyroFixedPoint.complement": {"220": [9904, 9936]}, "GyroFixedPoint.divDown": {"189": [3962, 3999], "190": [4046, 4054], "191": [4155, 4191], "192": [4228, 4248]}, "GyroFixedPoint.divUp": {"221": [4565, 4602], "222": [4649, 4657], "223": [4758, 4809], "224": [5143, 5175]}, "GyroFixedPoint.mulDown": {"321": [2404, 2440], "322": [2461, 2481]}, "GyroFixedPoint.mulUp": {"212": [2879, 2915], "213": [2968, 2976], "214": [3294, 3326]}, "GyroFixedPoint.sub": {"215": [2137, 2173]}}, "43": {"GyroPoolMath._calcAllTokensInGivenExactBptOut": {"404": [2636, 2678], "405": [2748, 2804], "406": [2729, 2732]}, "GyroPoolMath._calcProtocolFees": {"398": [6091, 6104], "399": [7089, 7120]}, "GyroPoolMath._calcTokensOutGivenExactBptIn": {"401": [4168, 4211], "402": [4281, 4341], "403": [4262, 4265]}, "GyroPoolMath._intLog2Halved": {"428": [10590, 10599], "429": [10613, 10620], "430": [10672, 10680], "431": [10694, 10701], "432": [10753, 10761], "433": [10775, 10782], "434": [10834, 10842], "435": [10856, 10862], "436": [10913, 10920], "437": [10934, 10940], "438": [10991, 10998], "439": [11012, 11018], "440": [11090, 11096]}, "GyroPoolMath._makeInitialGuess": {"409": [8968, 9047], "410": [9113, 9134], "411": [9198, 9209], "412": [9273, 9294], "413": [9358, 9369], "414": [9433, 9454], "415": [9518, 9529], "416": [9593, 9614], "417": [9678, 9689], "418": [9753, 9773], "419": [9838, 9849], "420": [9914, 9934], "421": [9999, 10010], "422": [10075, 10095], "423": [10160, 10171], "424": [10236, 10256], "425": [10321, 10332], "426": [10397, 10417], "427": [10445, 10457]}, "GyroPoolMath._sqrt": {"331": [7357, 7365], "332": [7461, 7521], "333": [7531, 7591], "334": [7601, 7661], "335": [7671, 7731], "336": [7741, 7801], "337": [7811, 7871], "338": [7881, 7941], "339": [8092, 8219]}, "GyroPoolMath.liquidityInvariantUpdate": {"261": [11919, 11953], "262": [12169, 12203]}}, "46": {"BalancerPoolToken._burnPoolTokens": {"198": [4092, 4113]}, "BalancerPoolToken._mintPoolTokens": {"233": [3979, 4003]}, "BalancerPoolToken.allowance": {"113": [2410, 2428], "114": [2459, 2497]}, "BalancerPoolToken.decreaseAllowance": {"89": [3653, 3685], "90": [3772, 3828], "91": [3849, 3860]}, "BalancerPoolToken.getVault": {"76": [1938, 1951]}, "BalancerPoolToken.transferFrom": {"14": [2867, 2968], "15": [2979, 3015], "16": [3218, 3273], "17": [3294, 3305]}}, "49": {"BasePoolAuthorization._canPerform": {"242": [2251, 2282], "243": [2428, 2496]}, "BasePoolAuthorization.getAuthorizer": {"93": [1933, 1956]}, "BasePoolAuthorization.getOwner": {"75": [1836, 1849]}}, "52": {}, "53": {}, "54": {"Buffer.add": {"407": [1504, 1534]}, "Buffer.next": {"327": [1276, 1296]}}, "55": {"PoolPriceOracle._getPastAccumulator": {"193": [6913, 6991]}, "PoolPriceOracle._getSample": {"180": [7580, 7602]}, "PoolPriceOracle._processPriceData": {"288": [6562, 6620], "289": [6675, 6705]}, "PoolPriceOracle.dirtyUninitializedOracleSamples": {"21": [3512, 3592], "22": [3947, 3971], "23": [3876, 3879]}, "PoolPriceOracle.getLargestSafeQueryWindow": {"116": [4117, 4132]}, "PoolPriceOracle.getLatest": {"94": [4234, 4310]}, "PoolPriceOracle.getPastAccumulators": {"47": [4935, 4973], "48": [5137, 5155], "49": [5169, 5241], "50": [5118, 5121]}, "PoolPriceOracle.getSample": {"44": [2874, 2932], "45": [2987, 3009]}, "PoolPriceOracle.getTimeWeightedAverage": {"11": [4496, 4535], "12": [4654, 4739], "13": [4635, 4638]}}, "56": {}, "57": {"Samples._accLogBptPrice": {"268": [6629, 6681]}, "Samples._accLogInvariant": {"270": [7116, 7168]}, "Samples._accLogPairPrice": {"266": [6143, 6196]}, "Samples._instLogBptPrice": {"267": [6388, 6441]}, "Samples._instLogInvariant": {"269": [6874, 6927]}, "Samples._instLogPairPrice": {"265": [5899, 5953]}, "Samples.pack": {"147": [7553, 8032]}, "Samples.timestamp": {"148": [5660, 5705]}, "Samples.unpack": {"181": [8468, 8508], "182": [8518, 8560], "183": [8570, 8608], "184": [8618, 8658], "185": [8668, 8708], "186": [8718, 8760], "187": [8770, 8800]}, "Samples.update": {"326": [4143, 4413]}}, "59": {}, "61": {"WeightedPool2TokensMiscData.logInvariant": {"162": [2316, 2362]}, "WeightedPool2TokensMiscData.logTotalSupply": {"163": [2532, 2581]}, "WeightedPool2TokensMiscData.oracleEnabled": {"166": [3221, 3267]}, "WeightedPool2TokensMiscData.oracleIndex": {"165": [3019, 3065]}, "WeightedPool2TokensMiscData.oracleSampleCreationTimestamp": {"164": [2786, 2852]}, "WeightedPool2TokensMiscData.setLogInvariant": {"246": [3697, 3758]}, "WeightedPool2TokensMiscData.setLogTotalSupply": {"247": [3985, 4051]}, "WeightedPool2TokensMiscData.setOracleEnabled": {"118": [4911, 4973]}, "WeightedPool2TokensMiscData.setOracleIndex": {"290": [4636, 4696]}, "WeightedPool2TokensMiscData.setOracleSampleCreationTimestamp": {"291": [4322, 4407]}, "WeightedPool2TokensMiscData.setSwapFeePercentage": {"119": [5197, 5270]}, "WeightedPool2TokensMiscData.swapFeePercentage": {"167": [3424, 3477]}}, "62": {"WeightedPoolUserDataHelpers.exactBptInForTokensOut": {"400": [2448, 2520]}, "WeightedPoolUserDataHelpers.initialAmountsIn": {"303": [1311, 1383]}, "WeightedPoolUserDataHelpers.joinKind": {"302": [964, 1016]}}, "63": {"Authentication._authenticateCaller": {"125": [2404, 2474]}, "Authentication.getActionId": {"72": [2842, 2910]}}, "64": {"_require": {"134": [946, 964]}}, "67": {}, "68": {}, "69": {}, "70": {"InputHelpers.ensureArrayIsSorted": {"117": [1369, 1402], "238": [1528, 1535], "239": [1689, 1740], "240": [1754, 1772], "241": [1630, 1633]}, "InputHelpers.ensureInputLengthMatch": {"168": [888, 934]}}, "71": {"LogCompression.toLowResLog": {"245": [2298, 2342]}}, "73": {"TemporarilyPausable._ensureNotPaused": {"141": [4272, 4311]}, "TemporarilyPausable._getBufferPeriodEndTime": {"132": [5084, 5111]}, "TemporarilyPausable._getPauseWindowEndTime": {"131": [4969, 4995]}, "TemporarilyPausable._isNotPaused": {"130": [4712, 4774]}, "TemporarilyPausable._setPaused": {"126": [3871, 3952], "127": [3983, 4066], "128": [4087, 4103], "129": [4113, 4144]}, "TemporarilyPausable.getPausedState": {"8": [3374, 3398], "9": [3408, 3453], "10": [3463, 3510]}}, "74": {"WordCodec.decodeBool": {"256": [9819, 9866]}, "WordCodec.decodeInt22": {"254": [12551, 12615]}, "WordCodec.decodeInt53": {"323": [13160, 13224]}, "WordCodec.decodeUint10": {"255": [10628, 10669]}, "WordCodec.decodeUint31": {"251": [11156, 11197]}, "WordCodec.decodeUint64": {"257": [11684, 11725]}, "WordCodec.encodeInt22": {"250": [9118, 9171]}, "WordCodec.encodeInt53": {"249": [9547, 9600]}, "WordCodec.encodeUint": {"248": [8696, 8727]}, "WordCodec.insertBool": {"121": [3305, 3367]}, "WordCodec.insertInt22": {"313": [7697, 7764]}, "WordCodec.insertUint10": {"328": [4969, 5014]}, "WordCodec.insertUint31": {"329": [6012, 6057]}, "WordCodec.insertUint64": {"122": [7104, 7149]}}, "75": {}, "76": {"LogExpMath._ln": {"356": [14549, 14585], "357": [15981, 15988], "358": [16039, 16048], "359": [16105, 16112], "360": [16163, 16172], "361": [16314, 16324], "362": [16334, 16342], "363": [16492, 16513], "364": [16527, 16536], "365": [16584, 16605], "366": [16619, 16628], "367": [16676, 16697], "368": [16711, 16720], "369": [16768, 16789], "370": [16803, 16812], "371": [16860, 16881], "372": [16895, 16904], "373": [16952, 16973], "374": [16987, 16996], "375": [17044, 17065], "376": [17079, 17088], "377": [17136, 17157], "378": [17171, 17180], "379": [17229, 17251], "380": [17265, 17275], "381": [17324, 17346], "382": [17360, 17370], "383": [18279, 18311], "384": [18321, 18341], "385": [18352, 18384], "386": [18394, 18414], "387": [18425, 18457], "388": [18467, 18487], "389": [18498, 18530], "390": [18540, 18560], "391": [18571, 18603], "392": [18613, 18634], "393": [18793, 18807], "394": [19073, 19103]}, "LogExpMath._ln_36": {"340": [19646, 19657], "341": [21063, 21083], "342": [20456, 20476], "343": [20414, 20446], "344": [20529, 20549], "345": [20487, 20519], "346": [20602, 20622], "347": [20560, 20592], "348": [20675, 20695], "349": [20633, 20665], "350": [20748, 20769], "351": [20706, 20738], "352": [20822, 20843], "353": [20780, 20812], "354": [20896, 20917], "355": [20854, 20886]}, "LogExpMath.ln": {"310": [13838, 13875], "311": [13951, 13976], "312": [14007, 14020]}}, "77": {"Math.divDown": {"263": [2238, 2276], "264": [2286, 2298]}, "Math.divUp": {"281": [2390, 2428], "282": [2465, 2473], "283": [2504, 2526]}, "Math.mul": {"188": [1897, 1948]}, "Math.sub": {"120": [1025, 1062]}}, "78": {}, "81": {"EIP712._domainSeparatorV4": {"149": [2466, 2567]}, "EIP712._hashTypedDataV4": {"227": [3295, 3375]}}, "82": {"ERC20._approve": {"123": [9468, 9504], "124": [9514, 9551]}, "ERC20._burn": {"272": [8587, 8655], "273": [8666, 8715], "274": [8726, 8814], "275": [8824, 8863], "276": [8873, 8915]}, "ERC20._mint": {"304": [7973, 8022], "305": [8033, 8072], "306": [8082, 8133], "307": [8143, 8185]}, "ERC20._transfer": {"135": [7195, 7266], "136": [7276, 7348], "137": [7359, 7406], "138": [7417, 7505], "139": [7515, 7570], "140": [7580, 7620]}, "ERC20.allowance": {"234": [3993, 4027]}, "ERC20.approve": {"1": [4271, 4308], "2": [4318, 4329]}, "ERC20.balanceOf": {"52": [3422, 3447]}, "ERC20.decimals": {"20": [3098, 3114]}, "ERC20.increaseAllowance": {"27": [5688, 5767]}, "ERC20.name": {"0": [2200, 2212]}, "ERC20.symbol": {"79": [2396, 2410]}, "ERC20.totalSupply": {"7": [3253, 3272]}, "ERC20.transfer": {"92": [3759, 3799]}}, "83": {"ERC20Permit.DOMAIN_SEPARATOR": {"24": [2438, 2465]}, "ERC20Permit.nonces": {"65": [2207, 2228]}, "ERC20Permit.permit": {"96": [1575, 1635], "97": [1902, 1981], "98": [1992, 2018], "99": [2028, 2059]}}, "86": {}, "87": {}, "91": {"SafeMath.add": {"154": [1019, 1056]}, "SafeMath.sub": {"244": [1861, 1888], "324": [1430, 1467]}}}}, "dependencies": ["Authentication", "BalancerPoolToken", "BasePoolAuthorization", "Buffer", "CappedLiquidity", "EIP712", "ERC20", "ERC20Permit", "Errors", "ExtensibleWeightedPool2Tokens", "FixedPoint", "Gyro2CLPMath", "Gyro2CLPOracleMath", "Gyro2CLPPoolErrors", "GyroConfigKeys", "GyroErrors", "GyroFixedPoint", "GyroPoolMath", "IAsset", "IAuthentication", "IAuthorizer", "IBasePool", "ICappedLiquidity", "IERC20", "IERC20Permit", "IFlashLoanRecipient", "IGyroConfig", "ILocallyPausable", "IMinimalSwapInfoPool", "IPoolPriceOracle", "IPoolSwapStructs", "IPriceOracle", "IProtocolFeesCollector", "ISignaturesValidator", "ITemporarilyPausable", "IVault", "IWETH", "InputHelpers", "LocallyPausable", "LogCompression", "LogExpMath", "Math", "PoolPriceOracle", "QueryProcessor", "SafeMath", "Samples", "TemporarilyPausable", "WeightedMath", "WeightedPool2TokensMiscData", "WeightedPoolUserDataHelpers", "WordCodec"], "deployedBytecode": "608060405234801561001057600080fd5b50600436106103275760003560e01c8063707dcd1e116101b85780639b02cdde11610104578063b48b5b40116100a2578063d5c096c41161007c578063d5c096c41461069b578063dd62ed3e146106ae578063f89f27ed146106c1578063ffd088eb146106c957610327565b8063b48b5b4014610678578063c0ff1a1514610680578063d505accf1461068857610327565b8063a9059cbb116100de578063a9059cbb14610642578063aaabadc514610655578063abd13afe1461065d578063b10be7391461066557610327565b80639b02cdde146106145780639d2c110c1461061c578063a457c2d71461062f57610327565b80638456cb5911610171578063893d20e81161014b578063893d20e8146105f45780638d928af8146105fc5780638dd9f89d1461060457806395d89b411461060c57610327565b80638456cb59146105c6578063851c1bb3146105ce57806387ec6817146105e157610327565b8063707dcd1e1461054457806370a082311461055957806374f3b0091461056c57806376e54a461461058d5780637ecebe00146105a05780638002df18146105b357610327565b806338fff2d0116102775780634a6b0b151161023057806360d1507c1161020a57806360d1507c146104ee578063679aefce146105145780636b8432391461051c5780636d785a871461053c57610327565b80634a6b0b15146104ab57806355c67628146104c55780636028bfd4146104cd57610327565b806338fff2d01461043c57806339509351146104445780633aeae0d3146104575780633c4dd5bb1461046c5780633f4ba83a1461048e57806344bbdb551461049657610327565b80631dccd830116102e4578063313ce567116102be578063313ce567146103f95780633331bc361461040e5780633644e5151461042157806338e9922e1461042957610327565b80631dccd830146103be57806323b872dd146103de578063292c914a146103f157610327565b806306fdde031461032c578063095ea7b31461034a5780630e608b301461036a57806316c38b3c1461037f57806318160ddd146103925780631c0de051146103a7575b600080fd5b6103346106d1565b6040516103419190615272565b60405180910390f35b61035d610358366004614ae0565b610767565b6040516103419190615154565b61037d6103783660046149bb565b61077e565b005b61037d61038d366004614caa565b61082f565b61039a610843565b6040516103419190615177565b6103af610849565b6040516103419392919061515f565b6103d16103cc366004614bde565b610872565b604051610341919061511c565b61035d6103ec366004614a2b565b610995565b61037d610a09565b610401610a3d565b6040516103419190615354565b61037d61041c366004614fa6565b610a46565b61039a610abe565b61037d610437366004614f8e565b610acd565b61039a610ae6565b61035d610452366004614ae0565b610b0a565b61045f610b45565b60405161034191906152c5565b61047f61047a366004614fc7565b610b90565b6040516103419392919061533e565b61037d610be3565b61049e610cd8565b6040516103419190615093565b6104b3610ce7565b604051610341969594939291906151c7565b61039a610d42565b6104e06104db366004614cc4565b610d4f565b604051610341929190615325565b6105016104fc366004614f8e565b610d80565b6040516103419796959493929190615197565b61039a610dc9565b61052f61052a366004614b0b565b610dee565b60405161034191906150a7565b61049e610ea4565b61054c610eb3565b60405161034191906150eb565b61039a6105673660046149bb565b610ec3565b61057f61057a366004614cc4565b610ee2565b60405161034192919061512f565b61037d61059b366004614e1a565b610f87565b61039a6105ae3660046149bb565b6110ae565b61037d6105c13660046149bb565b6110c9565b61037d6111af565b61039a6105dc366004614dc0565b611267565b6104e06105ef366004614cc4565b6112c0565b61049e6112e5565b61049e611309565b6103d161132d565b6103346113c7565b61039a611428565b61039a61062a366004614e98565b61142e565b61035d61063d366004614ae0565b6115f4565b61035d610650366004614ae0565b611632565b61049e61163f565b61049e611649565b61039a610673366004614de8565b611658565b61039a6116ed565b61039a6116f3565b61037d610696366004614a6b565b61172e565b61057f6106a9366004614cc4565b61189e565b61039a6106bc3660046149f3565b6119be565b6103d16119fb565b61039a611a05565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561075d5780601f106107325761010080835404028352916020019161075d565b820191906000526020600020905b81548152906001019060200180831161074057829003601f168201915b5050505050905090565b6000610774338484611a8f565b5060015b92915050565b600c5460408051808201909152600e81526d1b9bdd08185d5d1a1bdc9a5e995960921b6020820152906001600160a01b031633146107d85760405162461bcd60e51b81526004016107cf9190615272565b60405180910390fd5b50600c80546001600160a01b0319166001600160a01b0383161790556040517fb8fd9afc34c38fcd13b9a3b7646482eb1fddcefb40af2c70609972816eba320890610824908390615093565b60405180910390a150565b610837611af1565b61084081611b1f565b50565b60025490565b6000806000610856611b9b565b159250610861611bb8565b915061086b611bdc565b9050909192565b606081516001600160401b038111801561088b57600080fd5b506040519080825280602002602001820160405280156108b5578160200160208202803683370190505b50905060006108c2611c00565b905060005b835181101561098e5773__$85f042f43089d976c21d0d184f206dc395$__6379eaef8260088684815181106108f857fe5b6020026020010151856040518463ffffffff1660e01b815260040161091f93929190615239565b60206040518083038186803b15801561093757600080fd5b505af415801561094b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096f9190614e02565b83828151811061097b57fe5b60209081029190910101526001016108c7565b5050919050565b6000806109a285336119be565b90506109c6336001600160a01b03871614806109be5750838210155b61019e611c0d565b6109d1858585611c1b565b336001600160a01b038616148015906109ec57506000198114155b156109fe576109fe8533858403611a8f565b506001949350505050565b610a11611d03565b610a19611af1565b610a236001611d16565b6000610a2d610843565b1115610a3b57610a3b611d56565b565b60055460ff1690565b610a618183108015610a5a57506104008211155b6064611c0d565b6000610a766001600080600080600080611d9e565b9050825b82811015610ab857600081815260086020526040902054610a9a90611dfe565b610ab05760008181526008602052604090208290555b600101610a7a565b50505050565b6000610ac8611e0a565b905090565b610ad5611af1565b610add611d03565b61084081611ec8565b7f000000000000000000000000000000000000000000000000000000000000000090565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610774918590610b409086611f31565b611a8f565b610b4d6148c9565b5060408051606081018252600b5460ff81161515825261010081046001600160781b03166020830152600160801b90046001600160801b03169181019190915290565b600080600080610b9f85611f43565b90506000610bad8615611f43565b9050610bb98883611f97565b9750610bc58782611f97565b9650610bd2888888611fa3565b945094509450505093509350939050565b600d546040805180820190915260118152703737ba103830bab9b29036b0b730b3b2b960791b6020820152906001600160a01b03163314610ca25760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c67578181015183820152602001610c4f565b50505050905090810190601f168015610c945780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50610cad6000610837565b6040517f215385c8bfc731925ec8068d7baa50f6b6f34417cc7804f7273dc2c0b3db279090600090a1565b600e546001600160a01b031681565b60008060008060008060006009549050610d0081612072565b9650610d0b8161207e565b9550610d168161208b565b9450610d2181612098565b9350610d2c816120a5565b9250610d37816120b2565b915050909192939495565b6000610ac86009546120b2565b60006060610d5f865160026120bf565b610d74898989898989896120cc6121e061225e565b97509795505050505050565b6000806000806000806000610d9b610400891061013b611c0d565b6000610da689612371565b9050610db181612383565b959f949e50929c50909a509850965090945092505050565b6000610ac8610dd6610843565b610de8610de16116f3565b60026123e6565b9061240a565b606081516001600160401b0381118015610e0757600080fd5b50604051908082528060200260200182016040528015610e31578160200160208202803683370190505b5090506000610e3e611c00565b9050610e486148e9565b60005b8451811015610e9c57848181518110610e6057fe5b60200260200101519150610e7d8260000151848460200151612464565b848281518110610e8957fe5b6020908102919091010152600101610e4b565b505050919050565b600c546001600160a01b031681565b610ebb614900565b610ac86124fd565b6001600160a01b0381166000908152602081905260409020545b919050565b60608088610f0c610ef1611309565b6001600160a01b0316336001600160a01b03161460cd611c0d565b610f21610f17610ae6565b82146101f4611c0d565b610f2a87612523565b6000806000610f3e8d8d8d8d8d8d8d6120cc565b925092509250610f4e8c84612585565b610f57826121e0565b610f60816121e0565b610f68611b9b565b15610f7557610f75611d56565b909c909b509950505050505050505050565b600c5460408051808201909152600e81526d1b9bdd08185d5d1a1bdc9a5e995960921b6020820152906001600160a01b03163314610fd85760405162461bcd60e51b81526004016107cf9190615272565b50600b5460408051808201909152601081526f1c1bdbdb081a5cc81d5b98d85c1c195960821b60208201529060ff166110245760405162461bcd60e51b81526004016107cf9190615272565b508051600b8054602084015160408086015160ff19909316941515949094176fffffffffffffffffffffffffffffff0019166101006001600160781b0390921691909102176001600160801b03908116600160801b919092160217815590517f2abf5970d7bc1a2b36eaae52dd2cc353edb0337c7284ef8a01973081b4e0442491610824916152fa565b6001600160a01b031660009081526006602052604090205490565b600d546040805180820190915260118152703737ba103830bab9b29036b0b730b3b2b960791b60208201526001600160a01b039091169033821461114e5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610c67578181015183820152602001610c4f565b50600d80546001600160a01b0319166001600160a01b03848116918217909255604080519284168352602083019190915280517f1ffccd1fa96f4fb3415df8048a0fd107344e262d2d246c85105e2a3f8f3e81989281900390910190a15050565b600d546040805180820190915260118152703737ba103830bab9b29036b0b730b3b2b960791b6020820152906001600160a01b031633146112315760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610c67578181015183820152602001610c4f565b5061123c6001610837565b6040517f681eace576127d0553b224436a09801fb47d042942cbff59d7d4ff04d8fa03d790600090a1565b604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091526001600160e01b03198416828401528251602481840301815260449092019092528051910120919050565b600060606112d0865160026120bf565b610d748989898989898961258f61265f61225e565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b606060006113396126c1565b60408051600280825260608201835292935091906020830190803683370190505091506113908160008151811061136c57fe5b60200260200101518260018151811061138157fe5b60200260200101516001611fa3565b909150836000815181106113a057fe5b60200260200101846001815181106113b457fe5b6020908102919091010191909152525090565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561075d5780601f106107325761010080835404028352916020019161075d565b600a5490565b6000611438611d03565b8360800151611448610ef1611309565b611453610f17610ae6565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031686602001516001600160a01b0316149050600061149b82611f43565b905060006114a98315611f43565b90506114b58783611f97565b96506114c18682611f97565b955060008060006114d38a8a88611fa3565b92509250925061151a8b60a00151876114ec578a6114ee565b8b5b886114f9578c6114fb565b8b5b896115065784611508565b855b8a6115135786611515565b855b6127aa565b60008b51600181111561152957fe5b141561159857600061154761153c610d42565b60608e015190612854565b9050611569611563828e606001516128a990919063ffffffff16565b87611f97565b60608d0152600061157d8d8d8d87876128bf565b905061158981876128de565b995050505050505050506115ec565b6115a68b6060015185611f97565b60608c015260006115ba8c8c8c86866128ea565b90506115c681876128fd565b90506115e26115db6115d6610d42565b612909565b829061292f565b9850505050505050505b509392505050565b60008061160133856119be565b905080831061161b5761161633856000611a8f565b611628565b6116283385858403611a8f565b5060019392505050565b6000610774338484611c1b565b6000610ac8612995565b600d546001600160a01b031681565b600073__$85f042f43089d976c21d0d184f206dc395$__630397bee060088461167f611c00565b6040518463ffffffff1660e01b815260040161169d939291906151f1565b60206040518083038186803b1580156116b557600080fd5b505af41580156116c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107789190614e02565b61040090565b6000806116fe6126c1565b9050600061170a6124fd565b9050611727828260005b60200201518360015b6020020151612a0f565b9250505090565b61173c8442111560d1611c0d565b6001600160a01b0380881660008181526006602090815260408083205481517f00000000000000000000000000000000000000000000000000000000000000008185015280830195909552948b166060850152608084018a905260a0840185905260c08085018a90528151808603909101815260e090940190528251920191909120906117c882612a42565b9050600060018288888860405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015611826573d6000803e3d6000fd5b5050604051601f190151915061186890506001600160a01b0382161580159061186057508b6001600160a01b0316826001600160a01b0316145b6101f8611c0d565b6001600160a01b038b1660009081526006602052604090206001850190556118918b8b8b611a8f565b5050505050505050505050565b606080886118ad610ef1611309565b6118b8610f17610ae6565b6118c0611d03565b60006118ca610843565b61193a576118da8b8b8b88612a8e565b945090506118ef620f424082101560cc611c0d565b6118fd6000620f4240612b18565b61190c89620f42408303612b18565b6119158461265f565b60408051600280825260608201835290916020830190803683370190505092506119a8565b61194388612523565b611976878960008151811061195457fe5b60200260200101518a60018151811061196957fe5b6020026020010151612b22565b6119858b8b8b8b8b8b8b61258f565b909550935090506119968982612b18565b61199f8461265f565b6119a8836121e0565b6119b0611d56565b505097509795505050505050565b60006119c8611309565b6001600160a01b0316826001600160a01b031614156119ea5750600019610778565b6119f48383612b27565b9050610778565b6060610ac8612b52565b6201de2090565b80611a1681612bc1565b5050565b6000611a2883836055611a53565b9392505050565b6000611a2883836056611a7a565b6000611a4d838311156001611c0d565b50900390565b60006001821b1984168284611a69576000611a6c565b60015b60ff16901b17949350505050565b6001600160401b03811b1992909216911b1790565b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6000611b086000356001600160e01b031916611267565b9050610840611b178233612c3a565b610191611c0d565b8015611b3f57611b3a611b30611bb8565b4210610193611c0d565b611b54565b611b54611b4a611bdc565b42106101a9611c0d565b6007805482151560ff19909116811790915560408051918252517f9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be649181900360200190a150565b6000611ba5611bdc565b421180610ac857505060075460ff161590565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000610ac8600954612098565b81611a1657611a1681612d3c565b611c326001600160a01b0384161515610198611c0d565b611c496001600160a01b0383161515610199611c0d565b611c54838383612b22565b6001600160a01b038316600090815260208190526040902054611c7a90826101a0612d8f565b6001600160a01b038085166000908152602081905260408082209390935590841681522054611ca99082611f31565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b610a3b611d0e611b9b565b610192611c0d565b600954611d239082611a1a565b6009556040517f3e350b41e86a8e10f804ade6d35340d620be35569cc75ac943e8bb14ab80ead190610824908390615154565b600954611d62816120a5565b1561084057611d7c611d75600a54612da5565b8290612de5565b9050611d98611d91611d8c610843565b612da5565b8290612df2565b60095550565b6000611daa8282612e00565b611db584601f612e04565b611dc0866054612e15565b611dcb88606a612e04565b611dd68a609f612e15565b611de18c60b5612e04565b611dec8e60ea612e15565b17171717171798975050505050505050565b60006107788282612e22565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611e77612e2c565b3060405160200180868152602001858152602001848152602001838152602001826001600160a01b031681526020019550505050505060405160208183030381529060405280519060200120905090565b611edb64e8d4a5100082101560cb611c0d565b611ef167016345785d8a000082111560ca611c0d565b600954611efe9082611a2f565b6009556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc90610824908390615177565b6000828201611a288482101583611c0d565b600081611f70577f0000000000000000000000000000000000000000000000000000000000000000610778565b507f0000000000000000000000000000000000000000000000000000000000000000919050565b6000611a2883836123e6565b60408051600280825260608201835260009283928392839260208301908036833701905050905084611fd55785611fd7565b865b81600081518110611fe457fe5b60200260200101818152505084611ffb5786611ffd565b855b8160018151811061200a57fe5b60200260200101818152505060006120206124fd565b905061202e82826000611714565b9450600061203c8287612e30565b90508661204d576020810151612050565b80515b94508661205e578051612064565b60208101515b935050505093509350939050565b60006107788282612e64565b6000610778826016612e64565b600061077882602c612e22565b600061077882604b612e8b565b6000610778826055612e93565b6000610778826056612e9d565b611a168183146067611c0d565b600060608060006120db6124fd565b90506120e5611b9b565b156121945760006121008983835b602002015184600161171d565b9050600061210e8383612e30565b905061215d898b60008151811061212157fe5b60200260200101518c60018151811061213657fe5b60200260200101518460006002811061214b57fe5b602002015185600160200201516127aa565b61216682612eaa565b6121708a88612ed7565b90965094506121898287612182610843565b6000612f23565b600a55506121aa9050565b61219e8886612ed7565b600019600a5590945092505b60408051600280825260608201835286928692919060208301908036833701905050935093509350509750975097945050505050565b612207816000815181106121f057fe5b60200260200101516122026001611f43565b612f7b565b8160008151811061221457fe5b6020026020010181815250506122428160018151811061223057fe5b60200260200101516122026000611f43565b8160018151811061224f57fe5b60200260200101818152505050565b33301461231c576000306001600160a01b0316600036604051612282929190615083565b6000604051808303816000865af19150503d80600081146122bf576040519150601f19603f3d011682016040523d82523d6000602084013e6122c4565b606091505b5050905080600081146122d357fe5b60046000803e6000516001600160e01b0319166343adbafb60e01b81146122fe573d6000803e3d6000fd5b506020600460003e604060205260243d03602460403e601c3d016000f35b61232586612523565b60008061233b8b8b8b8b8b8b8b8b63ffffffff16565b509150915061234d818463ffffffff16565b8051601f1982018390526343adbafb603f1983015260200260231982016044820181fd5b60009081526008602052604090205490565b600080600080600080600061239788612f9b565b96506123a288612fa8565b95506123ad88612fb5565b94506123b888612fc2565b93506123c388612fcf565b92506123ce88612fdc565b91506123d988611dfe565b9050919395979092949650565b6000828202611a2884158061240357508385838161240057fe5b04145b6003611c0d565b60008161241d5761241d60006004611c0d565b8261242a57506000610778565b670de0b6b3a76400008381029084828161244057fe5b04146124525761245260006005611c0d565b82818161245b57fe5b04949350505050565b6040516334171a8560e01b815260009073__$85f042f43089d976c21d0d184f206dc395$__906334171a85906124a590600890889088908890600401615213565b60206040518083038186803b1580156124bd57600080fd5b505af41580156124d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124f59190614e02565b949350505050565b612505614900565b61250f6001612fe9565b815261251b6000612fe9565b602082015290565b61254a8160008151811061253357fe5b60200260200101516125456001611f43565b6123e6565b8160008151811061255757fe5b6020026020010181815250506122428160018151811061257357fe5b60200260200101516125456000611f43565b611a16828261303d565b6000606080600061259e6124fd565b905060006125ad8983836120f3565b905060006125bb8383612e30565b90506125ce898b60008151811061212157fe5b6125d782612eaa565b6000806125e48c8a6130f4565b600b54919350915060ff161561260e5761260e826126018f610ec3565b612609610843565b61312e565b612622848361261b610843565b6001612f23565b600a556040805160028082526060820183528492849291906020830190803683370190505097509750975050505050509750975097945050505050565b6126868160008151811061266f57fe5b60200260200101516126816001611f43565b613240565b8160008151811061269357fe5b602002602001018181525050612242816001815181106126af57fe5b60200260200101516126816000611f43565b604080516002808252606080830184529260208301908036833701905050905061272b7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000613273565b8160008151811061273857fe5b60200260200101818152505061278e7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000613273565b8160018151811061279b57fe5b60200260200101818152505090565b6009546127b6816120a5565b80156127c157508543115b1561284c5760006127d486858786613313565b905060006127ed878688876127e88861207e565b61332d565b905060006127fa84612098565b905060006128078561208b565b905060006128208284878761281b8b612072565b613371565b90508083146118915761283386826133c8565b955061283f86426133d6565b6009819055955050505050505b505050505050565b600082820283158061286e57508284828161286b57fe5b04145b61287e5761287e60006003611c0d565b8061288d576000915050610778565b670de0b6b3a764000060001982015b0460010191505092915050565b600082821115611a4d57611a4d60006001611c0d565b60006128d28585886060015186866133e4565b90505b95945050505050565b6000611a288383612f7b565b60006128d285858860600151868661344e565b6000611a288383613240565b6000670de0b6b3a76400008210612921576000610778565b50670de0b6b3a76400000390565b6000816129425761294260006004611c0d565b8261294f57506000610778565b670de0b6b3a76400008381029084828161296557fe5b041461298957612989670de0b6b3a764000085838161298057fe5b04146005611c0d565b82600182038161289c57fe5b600061299f611309565b6001600160a01b031663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b1580156129d757600080fd5b505afa1580156129eb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac891906149d7565b6000806000806000612a228888886134ae565b9350935093509350612a3684848484613628565b98975050505050505050565b6000612a4c611e0a565b82604051602001808061190160f01b81525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b600060606000612a9d8461369c565b9050612ab86000826003811115612ab057fe5b1460ce611c0d565b6000612ac3856136bb565b9050612ad1815160026120bf565b612ada81612523565b6000612ae46124fd565b90506000612af38383836120f3565b90506000612b028260026123e6565b600a929092555099919850909650505050505050565b611a16828261376f565b505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60408051600280825260608083018452926000929190602083019080368337019050509050612b816001613804565b81600081518110612b8e57fe5b602002602001018181525050612ba46000613804565b81600181518110612bb157fe5b6020908102919091010152905090565b600281511015612bd057610840565b600081600081518110612bdf57fe5b602002602001015190506000600190505b8251811015612b22576000838281518110612c0757fe5b60200260200101519050612c30816001600160a01b0316846001600160a01b0316106065611c0d565b9150600101612bf0565b600073ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b612c596112e5565b6001600160a01b031614158015612c745750612c7483613858565b15612c9c57612c816112e5565b6001600160a01b0316336001600160a01b0316149050610778565b612ca4612995565b6001600160a01b0316639be2a8848484306040518463ffffffff1660e01b815260040180848152602001836001600160a01b03168152602001826001600160a01b03168152602001935050505060206040518083038186803b158015612d0957600080fd5b505afa158015612d1d573d6000803e3d6000fd5b505050506040513d6020811015612d3357600080fd5b50519050610778565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6000612d9e8484111583611c0d565b5050900390565b600080612db18361388a565b90506000808213612dca57652d79883d20008203612dd4565b652d79883d200082015b655af3107a40009005949350505050565b6000611a288383836138ee565b6000611a28838360166138ee565b1b90565b661fffffffffffff91909116901b90565b623fffff91909116901b90565b1c637fffffff1690565b4690565b612e38614900565b612e4b600184815b602002015184613905565b8152612e5960008481612e40565b602082015292915050565b600082821c623fffff16621fffff8113612e7e57806124f5565b623fffff19179392505050565b1c6103ff1690565b1c60019081161490565b1c6001600160401b031690565b600080600080612ebc600a5486613925565b9350935093509350612ed08484848461398e565b5050505050565b600060606000612ee68461369c565b90506001816003811115612ef657fe5b1415612f1057612f0685856139ae565b9093509150612f1b565b612f1b610150612d3c565b509250929050565b60008115612f55576000612f4184612f3b8888612854565b9061292f565b9050612f4d86826139e0565b9150506124f5565b6000612f6584610de888886139f8565b9050612f7186826128a9565b9695505050505050565b6000612f8a8215156004611c0d565b818381612f9357fe5b049392505050565b60006107788260ea612e64565b60006107788260b5613a31565b600061077882609f612e64565b600061077882606a613a31565b6000610778826054612e64565b600061077882601f613a31565b600081613016577f0000000000000000000000000000000000000000000000000000000000000000610778565b507f0000000000000000000000000000000000000000000000000000000000000000919050565b6130546001600160a01b038316151561019b611c0d565b61306082600083612b22565b6001600160a01b03821660009081526020819052604090205461308690826101a1612d8f565b6001600160a01b0383166000908152602081905260409020556002546130ac9082613a64565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6000606060006131038461369c565b9050600381600381111561311357fe5b141561312357612f068585613a72565b612f1b610136612d3c565b60408051606081018252600b5460ff81161515825261010081046001600160781b031660208301819052600160801b9091046001600160801b0316928201929092529061317b85856139e0565b11156040518060400160405280601a81526020017f6f7665722061646472657373206c697175696469747920636170000000000000815250906131d15760405162461bcd60e51b81526004016107cf9190615272565b5060408101516001600160801b03166131ea85846139e0565b11156040518060400160405280601981526020017f6f76657220676c6f62616c206c6971756964697479206361700000000000000081525090612ed05760405162461bcd60e51b81526004016107cf9190615272565b600061324f8215156004611c0d565b8261325c57506000610778565b81600184038161326857fe5b046001019050610778565b6000806000613280611309565b6001600160a01b031663b05f8e48613296610ae6565b876040518363ffffffff1660e01b81526004016132b4929190615180565b60806040518083038186803b1580156132cc57600080fd5b505afa1580156132e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133049190614ffb565b50500193909302949350505050565b60008061332286868686613a97565b9050612f7181612da5565b60008061333c87878787613a97565b9050600061335461334d8784612854565b89906139e0565b9050600061336182612da5565b9490940398975050505050505050565b60008061338d858585426133848b612371565b93929190613ab0565b90506078428890031015806133a257866133ab565b6133ab87613b02565b600081815260086020526040902092909255509695505050505050565b6000611a288383604b613b0f565b6000611a288383602c613b1f565b6000806134036133fc85670de0b6b3a7640002612854565b88906139e0565b9050600061341c6133fc85670de0b6b3a763ffff6139f8565b905061343561342b83886139e0565b610de883896139f8565b92505050848111156128d5576128d56000610165613b31565b600084841115613465576134656000610165613b31565b600061347c6133fc85670de0b6b3a7640002612854565b905060006134956133fc85670de0b6b3a763ffff6139f8565b9050612a366134a482886128a9565b612f3b8489612854565b60008080806134cf6134c0878761240a565b670de0b6b3a7640000906128a9565b935060006134fa86896001815181106134e457fe5b602002602001015161240a90919063ffffffff16565b90506000613525888a60008151811061350f57fe5b60200260200101516139f890919063ffffffff16565b905061353182826139e0565b94506135588960018151811061354357fe5b60200260200101518a60008151811061350f57fe5b9250505061358f86613589886135898b60008151811061357457fe5b60200260200101518c60008151811061350f57fe5b906139f8565b915060006135cf86610de889613589670de0b6b3a76400006002026135898e6001815181106135ba57fe5b60200260200101518f60008151811061350f57fe5b905060006136056135e08880612854565b610de88b6001815181106135f057fe5b60200260200101518c60018151811061350f57fe5b905061361b8161361586856139e0565b906139e0565b9350505093509350935093565b60008061363d86671bc16d674ec80000612854565b905060006136578761358986673782dace9d9000006139f8565b9050600061366586836139e0565b90506000613674826005613b3f565b9050600061368289836139e0565b905061368e818661240a565b9a9950505050505050505050565b60008180602001905160208110156136b357600080fd5b505192915050565b60608180602001905160408110156136d257600080fd5b8151602083018051604051929492938301929190846401000000008211156136f957600080fd5b90830190602082018581111561370e57600080fd5b825186602082028301116401000000008211171561372b57600080fd5b82525081516020918201928201910280838360005b83811015613758578181015183820152602001613740565b505050509190910160405250929695505050505050565b61377b60008383612b22565b6002546137889082611f31565b6002556001600160a01b0382166000908152602081905260409020546137ae9082611f31565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600081613831577f0000000000000000000000000000000000000000000000000000000000000000610778565b507f0000000000000000000000000000000000000000000000000000000000000000919050565b600061386a631c74c91760e11b611267565b82148061077857506138826350dd6ed960e01b611267565b909114919050565b600061389a600083136064611c0d565b670c7d713b49da0000821380156138b85750670f43fc2c04ee000082125b156138de57670de0b6b3a76400006138cf83613ccd565b816138d657fe5b059050610edd565b6138e782613deb565b9050610edd565b623fffff828116821b90821b198416179392505050565b60008361391b57613916828461418a565b6124f5565b6124f58284614196565b6000806000806000806000806139396141a2565b9350935093509350836000141561395e57600097508796509094509250613985915050565b6000806139758c8c61396e610843565b8989614411565b909a509850929650909450505050505b92959194509250565b831561399e5761399e8285612b18565b8215610ab857610ab88184612b18565b6000606060006139bd846144a6565b905060006139d386836139ce610843565b6144c8565b9196919550909350505050565b600082820183811015611a2857611a28600080611c0d565b6000828202831580613a12575082848281613a0f57fe5b04145b613a2257613a2260006003611c0d565b670de0b6b3a76400008161245b565b600082821c661fffffffffffff16660fffffffffffff8113613a5357806124f5565b661fffffffffffff19179392505050565b6000611a2883836001612d8f565b600060606000613a81846144a6565b905060006139d38683613a92610843565b61454d565b60006128d5613aa684846139e0565b612f3b87876139e0565b600080613abc87611dfe565b830390506000818702613ace89612fa8565b0190506000828702613adf8a612fc2565b0190506000838702613af08b612fdc565b01905061368e89848a858b868c611d9e565b60006107788260016145e8565b6103ff811b1992909216911b1790565b637fffffff811b1992909216911b1790565b81611a1657611a16816145f0565b600082613b4e57506000610778565b6000613b5984614600565b9050600281670de0b6b3a7640000860281613b7057fe5b04820181613b7a57fe5b049050600281670de0b6b3a7640000860281613b9257fe5b04820181613b9c57fe5b049050600281670de0b6b3a7640000860281613bb457fe5b04820181613bbe57fe5b049050600281670de0b6b3a7640000860281613bd657fe5b04820181613be057fe5b049050600281670de0b6b3a7640000860281613bf857fe5b04820181613c0257fe5b049050600281670de0b6b3a7640000860281613c1a57fe5b04820181613c2457fe5b049050600281670de0b6b3a7640000860281613c3c57fe5b04820181613c4657fe5b0490506000613c5582806139f8565b9050613c6b613c648386612854565b86906139e0565b8111158015613c8d5750613c89613c828386612854565b86906128a9565b8110155b6115ec576040805162461bcd60e51b815260206004820152600c60248201526b17dcdc5c9d0811905253115160a21b604482015290519081900360640190fd5b670de0b6b3a7640000026000806a0c097ce7bc90715b34b9f160241b808401906ec097ce7bc90715b34b9f0fffffffff1985010281613d0857fe5b05905060006a0c097ce7bc90715b34b9f160241b82800205905081806a0c097ce7bc90715b34b9f160241b81840205915060038205016a0c097ce7bc90715b34b9f160241b82840205915060058205016a0c097ce7bc90715b34b9f160241b82840205915060078205016a0c097ce7bc90715b34b9f160241b82840205915060098205016a0c097ce7bc90715b34b9f160241b828402059150600b8205016a0c097ce7bc90715b34b9f160241b828402059150600d8205016a0c097ce7bc90715b34b9f160241b828402059150600f826002919005919091010295945050505050565b6000670de0b6b3a7640000821215613e2757613e1d826a0c097ce7bc90715b34b9f160241b81613e1757fe5b05613deb565b6000039050610edd565b60007e1600ef3172e58d2e933ec884fde10064c63b5372d805e203c00000000000008312613e7857770195e54c5dd42177f53a27172fa9ec630262827000000000830592506806f05b59d3b2000000015b73011798004d755d3c8bc8e03204cf44619e0000008312613eb0576b1425982cf597cd205cef7380830592506803782dace9d9000000015b606492830292026e01855144814a7ff805980ff00840008312613ef8576e01855144814a7ff805980ff008400068056bc75e2d63100000840205925068ad78ebc5ac62000000015b6b02df0ab5a80a22c61ab5a7008312613f33576b02df0ab5a80a22c61ab5a70068056bc75e2d6310000084020592506856bc75e2d631000000015b693f1fce3da636ea5cf8508312613f6a57693f1fce3da636ea5cf85068056bc75e2d631000008402059250682b5e3af16b18800000015b690127fa27722cc06cc5e28312613fa157690127fa27722cc06cc5e268056bc75e2d6310000084020592506815af1d78b58c400000015b68280e60114edb805d038312613fd65768280e60114edb805d0368056bc75e2d631000008402059250680ad78ebc5ac6200000015b680ebc5fb41746121110831261400157680ebc5fb4174612111068056bc75e2d631000009384020592015b6808f00f760a4b2db55d8312614036576808f00f760a4b2db55d68056bc75e2d6310000084020592506802b5e3af16b1880000015b6806f5f1775788937937831261406b576806f5f177578893793768056bc75e2d63100000840205925068015af1d78b58c40000015b6806248f33704b286603831261409f576806248f33704b28660368056bc75e2d63100000840205925067ad78ebc5ac620000015b6805c548670b9510e7ac83126140d3576805c548670b9510e7ac68056bc75e2d6310000084020592506756bc75e2d6310000015b600068056bc75e2d63100000840168056bc75e2d6310000080860302816140f657fe5b059050600068056bc75e2d63100000828002059050818068056bc75e2d63100000818402059150600382050168056bc75e2d63100000828402059150600582050168056bc75e2d63100000828402059150600782050168056bc75e2d63100000828402059150600982050168056bc75e2d63100000828402059150600b820501600202606485820105979650505050505050565b6000611a2883836139f8565b6000611a28838361240a565b600e5460405163bd02d0f560e01b81526000918291829182916001600160a01b039091169063bd02d0f5906141f4907550524f544f434f4c5f535741505f4645455f5045524360501b90600401615177565b60206040518083038186803b15801561420c57600080fd5b505afa158015614220573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906142449190614e02565b600e5460405163bd02d0f560e01b81526001600160a01b039091169063bd02d0f590614294907f50524f544f434f4c5f4645455f4759524f5f504f5254494f4e0000000000000090600401615177565b60206040518083038186803b1580156142ac57600080fd5b505afa1580156142c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906142e49190614e02565b600e546040516321f8a72160e01b81526001600160a01b03909116906321f8a72190614324906c4759524f5f545245415355525960981b90600401615177565b60206040518083038186803b15801561433c57600080fd5b505afa158015614350573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061437491906149d7565b600e546040516321f8a72160e01b81526001600160a01b03909116906321f8a721906143b3906b42414c5f545245415355525960a01b90600401615177565b60206040518083038186803b1580156143cb57600080fd5b505afa1580156143df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061440391906149d7565b935093509350935090919293565b6000808686116144265750600090508061449c565b6000614440856135896144398a8c6128a9565b89906139f8565b90506000614458614451898b6128a9565b87906139f8565b9050600061446689836128a9565b90506000614474848361240a565b9050600061448288836139f8565b9050600061449083836128a9565b91975090955050505050505b9550959350505050565b60008180602001905160408110156144bd57600080fd5b506020015192915050565b606083516001600160401b03811180156144e157600080fd5b5060405190808252806020026020018201604052801561450b578160200160208202803683370190505b50905060005b84518110156115ec5761452e83610de88688858151811061350f57fe5b82828151811061453a57fe5b6020908102919091010152600101614511565b606083516001600160401b038111801561456657600080fd5b50604051908082528060200260200182016040528015614590578160200160208202803683370190505b50905060005b84518110156115ec576145c983612f3b868885815181106145b357fe5b602002602001015161285490919063ffffffff16565b8282815181106145d557fe5b6020908102919091010152600101614596565b016103ff1690565b610840816223aca960e91b6147d2565b6000670de0b6b3a7640000821061462d57670de0b6b3a7640000614625818404614833565b1b9050610edd565b600a8211614640575063bc7c871c610edd565b6064821161465457506402540be400610edd565b6103e88211614669575064075cdd4719610edd565b612710821161467e575064174876e800610edd565b620186a0821161469457506449a0a4c700610edd565b620f424082116146aa575064e8d4a51000610edd565b6298968082116146c157506502e0466fc608610edd565b6305f5e10082116146d957506509184e72a000610edd565b633b9aca0082116146f15750651cc2c05dbc53610edd565b6402540be400821161470a5750655af3107a4000610edd565b64174876e8008211614724575066011f9b83a95b45610edd565b64e8d4a51000821161473e575066038d7ea4c68000610edd565b6509184e72a00082116147595750660b3c13249d90bb610edd565b655af3107a400082116147745750662386f26fc10000610edd565b66038d7ea4c6800082116147905750667058bf6e27a751610edd565b662386f26fc1000082116147ad575067016345785d8a0000610edd565b67016345785d8a000082116147cb5750670463777a4d8c892d610edd565b5080610edd565b62461bcd60e51b600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fd5b6000600160801b821061484b5760809190911c906040015b6801000000000000000082106148665760409190911c906020015b640100000000821061487d5760209190911c906010015b6201000082106148925760109190911c906008015b61010082106148a65760089190911c906004015b601082106148b95760049190911c906002015b60048210610edd57600101919050565b604080516060810182526000808252602082018190529181019190915290565b604080518082019091526000808252602082015290565b60405180604001604052806002906020820280368337509192915050565b8035610edd816153a2565b80358015158114610edd57600080fd5b600082601f830112614949578081fd5b81356001600160401b0381111561495c57fe5b61496f601f8201601f1916602001615362565b818152846020838601011115614983578283fd5b816020850160208301379081016020019190915292915050565b803560028110610edd57600080fd5b803560038110610edd57600080fd5b6000602082840312156149cc578081fd5b8135611a28816153a2565b6000602082840312156149e8578081fd5b8151611a28816153a2565b60008060408385031215614a05578081fd5b8235614a10816153a2565b91506020830135614a20816153a2565b809150509250929050565b600080600060608486031215614a3f578081fd5b8335614a4a816153a2565b92506020840135614a5a816153a2565b929592945050506040919091013590565b600080600080600080600060e0888a031215614a85578485fd5b8735614a90816153a2565b96506020880135614aa0816153a2565b95506040880135945060608801359350608088013560ff81168114614ac3578384fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215614af2578182fd5b8235614afd816153a2565b946020939093013593505050565b60006020808385031215614b1d578182fd5b82356001600160401b0380821115614b33578384fd5b818501915085601f830112614b46578384fd5b8135614b59614b5482615385565b615362565b818152848101908486016040808502870188018b1015614b77578889fd5b8896505b84871015614bcf5780828c031215614b91578889fd5b80518181018181108882111715614ba457fe5b8252614baf836149ac565b815282890135898201528452600196909601959287019290810190614b7b565b50909998505050505050505050565b60006020808385031215614bf0578182fd5b82356001600160401b0380821115614c06578384fd5b818501915085601f830112614c19578384fd5b8135614c27614b5482615385565b818152848101908486016060808502870188018b1015614c45578889fd5b8896505b84871015614bcf5780828c031215614c5f578889fd5b604080518281018181108982111715614c7457fe5b8252614c7f846149ac565b8152838a01358a82015281840135918101919091528452600196909601959287019290810190614c49565b600060208284031215614cbb578081fd5b611a2882614929565b600080600080600080600060e0888a031215614cde578081fd5b87359650602080890135614cf1816153a2565b96506040890135614d01816153a2565b955060608901356001600160401b0380821115614d1c578384fd5b818b0191508b601f830112614d2f578384fd5b8135614d3d614b5482615385565b8082825285820191508585018f878886028801011115614d5b578788fd5b8795505b83861015614d7d578035835260019590950194918601918601614d5f565b509850505060808b0135955060a08b0135945060c08b0135925080831115614da3578384fd5b5050614db18a828b01614939565b91505092959891949750929550565b600060208284031215614dd1578081fd5b81356001600160e01b031981168114611a28578182fd5b600060208284031215614df9578081fd5b611a28826149ac565b600060208284031215614e13578081fd5b5051919050565b600060608284031215614e2b578081fd5b604051606081018181106001600160401b0382111715614e4757fe5b604052614e5383614929565b815260208301356001600160781b0381168114614e6e578283fd5b602082015260408301356001600160801b0381168114614e8c578283fd5b60408201529392505050565b600080600060608486031215614eac578081fd5b83356001600160401b0380821115614ec2578283fd5b8186019150610120808389031215614ed8578384fd5b614ee181615362565b9050614eec8361499d565b8152614efa6020840161491e565b6020820152614f0b6040840161491e565b6040820152606083013560608201526080830135608082015260a083013560a0820152614f3a60c0840161491e565b60c0820152614f4b60e0840161491e565b60e08201526101008084013583811115614f63578586fd5b614f6f8a828701614939565b9183019190915250976020870135975060409096013595945050505050565b600060208284031215614f9f578081fd5b5035919050565b60008060408385031215614fb8578182fd5b50508035926020909101359150565b600080600060608486031215614fdb578081fd5b8335925060208401359150614ff260408501614929565b90509250925092565b60008060008060808587031215615010578182fd5b8451935060208501519250604085015191506060850151615030816153a2565b939692955090935050565b6000815180845260208085019450808401835b8381101561506a5781518752958201959082019060010161504e565b509495945050505050565b6003811061507f57fe5b9052565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b6020808252825182820181905260009190848201906040850190845b818110156150df578351835292840192918401916001016150c3565b50909695505050505050565b60408101818360005b60028110156151135781518352602092830192909101906001016150f4565b50505092915050565b600060208252611a28602083018461503b565b600060408252615142604083018561503b565b82810360208401526128d5818561503b565b901515815260200190565b92151583526020830191909152604082015260600190565b90815260200190565b9182526001600160a01b0316602082015260400190565b968752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b9586526020860194909452604085019290925260608401521515608083015260a082015260c00190565b838152606081016152056020830185615075565b826040830152949350505050565b848152608081016152276020830186615075565b60408201939093526060015292915050565b600060a082019050848252615252602083018551615075565b602084015160408381019190915290930151606082015260800152919050565b6000602080835283518082850152825b8181101561529e57858101830151858201604001528201615282565b818111156152af5783604083870101525b50601f01601f1916929092016040019392505050565b8151151581526020808301516001600160781b0316908201526040918201516001600160801b03169181019190915260600190565b905460ff811615158252600881901c6001600160781b0316602083015260801c604082015260600190565b6000838252604060208301526124f5604083018461503b565b9283526020830191909152604082015260600190565b60ff91909116815260200190565b6040518181016001600160401b038111828210171561537d57fe5b604052919050565b60006001600160401b0382111561539857fe5b5060209081020190565b6001600160a01b038116811461084057600080fdfea26469706673582212202f53fdb05bd0962b95a66cdefc384c0a5c26cdad2ae535ab00ee32b2e0cf008464736f6c63430007060033", "deployedSourceMap": "1423:28520:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2138:81:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4172:164;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1305:199:14:-;;;;;;:::i;:::-;;:::i;:::-;;8778:89:15;;;;;;:::i;:::-;;:::i;3181:98:82:-;;;:::i;:::-;;;;;;;:::i;3154:363:73:-;;;:::i;:::-;;;;;;;;;:::i;4323:433:55:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2657:655:46:-;;;;;;:::i;:::-;;:::i;8292:259:15:-;;;:::i;3040:81:82:-;;;:::i;:::-;;;;;;;:::i;3414:588:55:-;;;;;;:::i;:::-;;:::i;2359:113:83:-;;;:::i;7117:156:15:-;;;;;;:::i;:::-;;:::i;6148:91::-;;;:::i;5584:211:82:-;;;;;;:::i;:::-;;:::i;1510:105:14:-;;;:::i;:::-;;;;;;;:::i;10357:723:2:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;1214:173:17:-;;;:::i;1761:29:2:-;;;:::i;:::-;;;;;;;:::i;6245:688:15:-;;;:::i;:::-;;;;;;;;;;;;:::i;6939:115::-;;;:::i;36632:770::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2516:500:55:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;39241:211:15:-;;;:::i;4762:496:55:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;941:34:14:-;;;:::i;2746:112:2:-;;;:::i;:::-;;;;;;;:::i;3337:117:82:-;;;;;;:::i;:::-;;:::i;23467:1359:15:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1621:385:14:-;;;;;;:::i;:::-;;:::i;2127:108:83:-;;;;;;:::i;:::-;;:::i;652:308:17:-;;;;;;:::i;:::-;;:::i;1003:168::-;;;:::i;2487:430:63:-;;;;;;:::i;:::-;;:::i;35241:768:15:-;;;;;;:::i;:::-;;:::i;1776:80:49:-;;;:::i;1879:79:46:-;;;:::i;5009:417:2:-;;;:::i;2332:85:82:-;;;:::i;9459:98:15:-;;;:::i;6571:2727:2:-;;;;;;:::i;:::-;;:::i;3438:429:46:-;;;;;;:::i;:::-;;:::i;3657:170:82:-;;;;;;:::i;:::-;;:::i;1862:101:49:-;;;:::i;350:27:17:-;;;:::i;4145:172:55:-;;;;;;:::i;:::-;;:::i;3022:103::-;;;:::i;6273:273:2:-;;;:::i;1313:753:83:-;;;;;;:::i;:::-;;:::i;13513:2437:15:-;;;;;;:::i;:::-;;:::i;2260:254:46:-;;;;;;:::i;:::-;;:::i;8873:117:15:-;;;:::i;4029:110:55:-;;;:::i;2138:81:82:-;2207:5;2200:12;;;;;;;;;;;;;-1:-1:-1;;2200:12:82;;;;;;;;;;;;;;;;;;;;;;;;;;2175:13;;2200:12;;2207:5;;2200:12;;;2207:5;2200:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2138:81;:::o;4172:164::-;4255:4;4271:37;4280:10;4292:7;4301:6;4271:8;:37::i;:::-;-1:-1:-1;4325:4:82;4172:164;;;;;:::o;1305:199:14:-;1390:10;;1402:15;;;;;;;;;;;;-1:-1:-1;;;1402:15:14;;;;;-1:-1:-1;;;;;1390:10:14;1376;:24;1368:50;;;;-1:-1:-1;;;1368:50:14;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;1428:10:14;:24;;-1:-1:-1;;;;;;1428:24:14;-1:-1:-1;;;;;1428:24:14;;;;;1467:30;;;;;;1428:24;;1467:30;:::i;:::-;;;;;;;;1305:199;:::o;8778:89:15:-;2156:21:63;:19;:21::i;:::-;8842:18:15::1;8853:6;8842:10;:18::i;:::-;8778:89:::0;:::o;3181:98:82:-;3260:12;;3181:98;:::o;3154:363:73:-;3257:11;3282:26;3322:27;3384:14;:12;:14::i;:::-;3383:15;3374:24;;3429;:22;:24::i;:::-;3408:45;;3485:25;:23;:25::i;:::-;3463:47;;3154:363;;;:::o;4323:433:55:-;4520:14;;4456:24;;-1:-1:-1;;;;;4506:29:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4506:29:55;;4496:39;;4545:19;4567:17;:15;:17::i;:::-;4545:39;;4600:9;4595:155;4619:7;:14;4615:1;:18;4595:155;;;4667:14;:37;4705:8;4715:7;4723:1;4715:10;;;;;;;;;;;;;;4727:11;4667:72;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4654:7;4662:1;4654:10;;;;;;;;;;;;;;;;;:85;4635:3;;4595:155;;;;4323:433;;;;:::o;2657:655:46:-;2785:4;2801:24;2828:29;2838:6;2846:10;2828:9;:29::i;:::-;2801:56;-1:-1:-1;2867:101:46;-1:-1:-1;;;;;2876:20:46;;:10;:20;;:50;;;2920:6;2900:16;:26;;2876:50;9174:3:64;2867:8:46;:101::i;:::-;2979:36;2989:6;2997:9;3008:6;2979:9;:36::i;:::-;-1:-1:-1;;;;;3030:20:46;;:10;:20;;;;:55;;-1:-1:-1;;;3054:31:46;;;3030:55;3026:258;;;3218:55;3227:6;3235:10;3266:6;3247:16;:25;3218:8;:55::i;:::-;-1:-1:-1;3301:4:46;;2657:655;-1:-1:-1;;;;2657:655:46:o;8292:259:15:-;2970:18:73;:16;:18::i;:::-;2156:21:63::1;:19;:21::i;:::-;8362:23:15::2;8380:4;8362:17;:23::i;:::-;8491:1;8475:13;:11;:13::i;:::-;:17;8471:74;;;8508:26;:24;:26::i;:::-;8292:259::o:0;3040:81:82:-;3105:9;;;;3040:81;:::o;3414:588:55:-;3512:80;3534:8;3521:10;:21;:48;;;;;899:4:54;3546:8:55;:23;;3521:48;4838:3:64;3512:8:55;:80::i;:::-;3769:18;3790:33;3803:1;3806;3809;3812;3815;3818;3821;3790:12;:33::i;:::-;3769:54;-1:-1:-1;3850:10:55;3833:163;3866:8;3862:1;:12;3833:163;;;3899:11;;;;:8;:11;;;;;;:23;;:21;:23::i;:::-;3895:91;;3947:11;;;;:8;:11;;;;;:24;;;3895:91;3876:3;;3833:163;;;;3414:588;;;:::o;2359:113:83:-;2419:7;2445:20;:18;:20::i;:::-;2438:27;;2359:113;:::o;7117:156:15:-;2156:21:63;:19;:21::i;:::-;2970:18:73::1;:16;:18::i;:::-;7226:40:15::2;7248:17;7226:21;:40::i;6148:91::-:0;6225:7;6148:91;:::o;5584:211:82:-;5697:10;5672:4;5718:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;5718:32:82;;;;;;;;;;5672:4;;5688:79;;5718:32;;:48;;5755:10;5718:36;:48::i;:::-;5688:8;:79::i;1510:105:14:-;1563:16;;:::i;:::-;-1:-1:-1;1591:17:14;;;;;;;;1598:10;1591:17;;;;;;;;;;;-1:-1:-1;;;;;1591:17:14;;;;;-1:-1:-1;;;1591:17:14;;-1:-1:-1;;;;;1591:17:14;;;;;;;;;1510:105::o;10357:723:2:-;10576:24;10614:22;10650:23;10698:28;10729:31;10744:15;10729:14;:31::i;:::-;10698:62;;10770:29;10802:32;10818:15;10817:16;10802:14;:32::i;:::-;10770:64;;10861:46;10870:14;10886:20;10861:8;:46::i;:::-;10844:63;;10935:48;10944:15;10961:21;10935:8;:48::i;:::-;10917:66;;11000:73;11024:14;11040:15;11057;11000:23;:73::i;:::-;10993:80;;;;;;;;10357:723;;;;;;;:::o;1214:173:17:-;1269:12;;1297:18;;;;;;;;;;;;-1:-1:-1;;;1297:18:17;;;;;-1:-1:-1;;;;;1269:12:17;1285:10;1269:26;1261:55;;;;-1:-1:-1;;;1261:55:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1326:22;1342:5;1326:15;:22::i;:::-;1363:17;;;;;;;1214:173::o;1761:29:2:-;;;-1:-1:-1;;;;;1761:29:2;;:::o;6245:688:15:-;6328:19;6361:21;6396:37;6447:19;6480:18;6512:25;6562:16;6581:9;;6562:28;;6615:23;:8;:21;:23::i;:::-;6600:38;;6665:25;:8;:23;:25::i;:::-;6648:42;;6732:40;:8;:38;:40::i;:::-;6700:72;;6796:22;:8;:20;:22::i;:::-;6782:36;;6844:24;:8;:22;:24::i;:::-;6828:40;;6898:28;:8;:26;:28::i;:::-;6878:48;;6245:688;;;;;;;:::o;6939:115::-;6992:7;7018:29;:9;;:27;:29::i;36632:770::-;36892:13;36907:27;36946:55;36982:8;:15;36999:1;36946:35;:55::i;:::-;37012:137;37025:6;37033;37041:9;37052:8;37062:15;37079:25;37106:8;37116:11;37129:19;37012:12;:137::i;:::-;36632:770;;;;;;;;;;:::o;2516:500:55:-;2627:19;2660:22;2696:18;2728:21;2763:19;2796:22;2832:17;2874:58;899:4:54;2883:5:55;:19;6557:3:64;2874:8:55;:58::i;:::-;2943:14;2960:17;2971:5;2960:10;:17::i;:::-;2943:34;;2994:15;:6;:13;:15::i;:::-;2987:22;;;;-1:-1:-1;2987:22:55;;-1:-1:-1;2987:22:55;;-1:-1:-1;2987:22:55;-1:-1:-1;2987:22:55;-1:-1:-1;2987:22:55;;-1:-1:-1;2516:500:55;-1:-1:-1;;;2516:500:55:o;39241:211:15:-;39281:7;39395:50;39431:13;:11;:13::i;:::-;39395:27;39404:14;:12;:14::i;:::-;39420:1;39395:8;:27::i;:::-;:35;;:50::i;4762:496:55:-;4958:14;;4896:23;;-1:-1:-1;;;;;4945:28:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4945:28:55;;4935:38;;4983:19;5005:17;:15;:17::i;:::-;4983:39;;5033:35;;:::i;:::-;5083:9;5078:174;5102:7;:14;5098:1;:18;5078:174;;;5145:7;5153:1;5145:10;;;;;;;;;;;;;;5137:18;;5182:59;5202:5;:14;;;5218:11;5231:5;:9;;;5182:19;:59::i;:::-;5169:7;5177:1;5169:10;;;;;;;;;;;;;;;;;:72;5118:3;;5078:174;;;;4762:496;;;;;:::o;941:34:14:-;;;-1:-1:-1;;;;;941:34:14;;:::o;2746:112:2:-;2798:17;;:::i;:::-;2834;:15;:17::i;3337:117:82:-;-1:-1:-1;;;;;3429:18:82;;3403:7;3429:18;;;;;;;;;;;3337:117;;;;:::o;23467:1359:15:-;23761:16;23779;23744:6;3861:68;3892:10;:8;:10::i;:::-;-1:-1:-1;;;;;3870:33:15;:10;:33;5392:3:64;3861:8:15;:68::i;:::-;3939:55;3958:11;:9;:11::i;:::-;3948:6;:21;10241:3:64;3939:8:15;:55::i;:::-;23807:23:::1;23821:8;23807:13;:23::i;:::-;23842:19;23863:27:::0;23892:38:::1;23934:196;23959:6;23979;23999:9;24022:8;24044:15;24073:25;24112:8;23934:11;:196::i;:::-;23841:289;;;;;;24236:36;24252:6;24260:11;24236:15;:36::i;:::-;24384:31;24404:10;24384:19;:31::i;:::-;24425:42;24445:21;24425:19;:42::i;:::-;24700:14;:12;:14::i;:::-;24696:71;;;24730:26;:24;:26::i;:::-;24785:10:::0;;;;-1:-1:-1;23467:1359:15;-1:-1:-1;;;;;;;;;;23467:1359:15:o;1621:385:14:-;1718:10;;1730:15;;;;;;;;;;;;-1:-1:-1;;;1730:15:14;;;;;-1:-1:-1;;;;;1718:10:14;1704;:24;1696:50;;;;-1:-1:-1;;;1696:50:14;;;;;;;;:::i;:::-;-1:-1:-1;1764:10:14;:21;1787:9;;;;;;;;;;;;-1:-1:-1;;;1787:9:14;;;;;1764:21;;1756:41;;;;-1:-1:-1;;;1756:41:14;;;;;;;;:::i;:::-;-1:-1:-1;1832:17:14;;1808:10;:41;;1886:20;;;;1939:16;;;;;-1:-1:-1;;1808:41:14;;;;;;;;;;-1:-1:-1;;1859:47:14;1808:41;-1:-1:-1;;;;;1859:47:14;;;;;;;;-1:-1:-1;;;;;1916:39:14;;;-1:-1:-1;;;1916:39:14;;;;;;;;1971:28;;;;;;;:::i;2127:108:83:-;-1:-1:-1;;;;;2214:14:83;2188:7;2214:14;;;:7;:14;;;;;;;2127:108::o;652:308:17:-;761:12;;826:18;;;;;;;;;;;;-1:-1:-1;;;826:18:17;;;;-1:-1:-1;;;;;761:12:17;;;;814:10;791:33;;783:62;;;;-1:-1:-1;;;783:62:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;783:62:17;;;;;;;;;;;;;;;;;-1:-1:-1;855:12:17;:28;;-1:-1:-1;;;;;;855:28:17;-1:-1:-1;;;;;855:28:17;;;;;;;;;898:55;;;;;;;;;;;;;;;;;;;;;;;;;;;652:308;;:::o;1003:168::-;1056:12;;1084:18;;;;;;;;;;;;-1:-1:-1;;;1084:18:17;;;;;-1:-1:-1;;;;;1056:12:17;1072:10;1056:26;1048:55;;;;-1:-1:-1;;;1048:55:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1048:55:17;;;;;;;;;;;;;;;;;;1113:21;1129:4;1113:15;:21::i;:::-;1149:15;;;;;;;1003:168::o;2487:430:63:-;2859:50;;;2876:22;2859:50;;;;;;;;-1:-1:-1;;;;;;2859:50:63;;;;;;;;;;;;;;;;;;;;;;;;2849:61;;;;;;2487:430::o;35241:768:15:-;35501:14;35517:26;35555:55;35591:8;:15;35608:1;35555:35;:55::i;:::-;35621:135;35634:6;35642;35650:9;35661:8;35671:15;35688:25;35715:8;35725:11;35738:17;35621:12;:135::i;1776:80:49:-;1843:6;1776:80;:::o;1879:79:46:-;1945:6;1879:79;:::o;5009:417:2:-;5064:30;5106:25;5134:17;:15;:17::i;:::-;5297:16;;;5311:1;5297:16;;;;;;;;5106:45;;-1:-1:-1;5297:16:2;5311:1;5297:16;;;;;;;;;;-1:-1:-1;5297:16:2;5281:32;;5364:55;5388:8;5397:1;5388:11;;;;;;;;;;;;;;5401:8;5410:1;5401:11;;;;;;;;;;;;;;5414:4;5364:23;:55::i;:::-;5323:96;;;5326:13;5340:1;5326:16;;;;;;;;;;;;;5344:13;5358:1;5344:16;;;;;;;;;;;;;;;;;5323:96;;;;;-1:-1:-1;5009:417:2;:::o;2332:85:82:-;2403:7;2396:14;;;;;;;;;;;;;-1:-1:-1;;2396:14:82;;;;;;;;;;;;;;;;;;;;;;;;;;2371:13;;2396:14;;2403:7;;2396:14;;;2403:7;2396:14;;;;;;;;;;;;;;;;;;;;;;;;9459:98:15;9536:14;;9459:98;:::o;6571:2727:2:-;6767:7;2970:18:73;:16;:18::i;:::-;6742:7:2::1;:14;;;3861:68:15;3892:10;:8;:10::i;3861:68::-;3939:55;3958:11;:9;:11::i;3939:55::-;6809:15:2::2;::::0;::::2;::::0;6828:7:::2;-1:-1:-1::0;;;;;6809:26:2;;::::2;::::0;::::2;;6786:20;6877:31;6809:26:::0;6877:14:::2;:31::i;:::-;6846:62;;6918:29;6950:32;6966:15;6965:16;6950:14;:32::i;:::-;6918:64;;7053:46;7062:14;7078:20;7053:8;:46::i;:::-;7036:63;;7127:48;7136:15;7153:21;7127:8;:48::i;:::-;7109:66;;7265:24;7291:22:::0;7315:23:::2;7342:119;7379:14;7407:15;7436;7342:23;:119::i;:::-;7264:197;;;;;;7530:316;7557:7;:23;;;7594:15;:50;;7629:15;7594:50;;;7612:14;7594:50;7658:15;:50;;7694:14;7658:50;;;7676:15;7658:50;7722:15;:50;;7757:15;7722:50;;;7740:14;7722:50;7786:15;:50;;7822:14;7786:50;;;7804:15;7786:50;7530:13;:316::i;:::-;7877:24;7861:12:::0;;:40:::2;::::0;::::2;;;;;;;7857:1435;;;8120:17;8140:44;8161:22;:20;:22::i;:::-;8140:14;::::0;::::2;::::0;;:20:::2;:44::i;:::-;8120:64;;8317:61;8326:29;8345:9;8326:7;:14;;;:18;;:29;;;;:::i;:::-;8357:20;8317:8;:61::i;:::-;8300:14;::::0;::::2;:78:::0;8393:17:::2;8413:89;8300:7:::0;8437:14;8453:15;8470:14;8486:15;8413:14:::2;:89::i;:::-;8393:109;;8596:48;8611:9;8622:21;8596:14;:48::i;:::-;8589:55;;;;;;;;;;;;7857:1435;8692:47;8701:7;:14;;;8717:21;8692:8;:47::i;:::-;8675:14;::::0;::::2;:64:::0;8754:16:::2;8773:90;8675:7:::0;8798:14;8814:15;8831:14;8847:15;8773::::2;:90::i;:::-;8754:109;;8959:44;8972:8;8982:20;8959:12;:44::i;:::-;8948:55;;9230:51;9245:35;:22;:20;:22::i;:::-;:33;:35::i;:::-;9230:8:::0;;:14:::2;:51::i;:::-;9223:58;;;;;;;;;4004:1:15;2998::73::1;6571:2727:2::0;;;;;:::o;3438:429:46:-;3523:4;3539:24;3566:30;3576:10;3588:7;3566:9;:30::i;:::-;3539:57;;3621:16;3611:6;:26;3607:232;;3653:32;3662:10;3674:7;3683:1;3653:8;:32::i;:::-;3607:232;;;3772:56;3781:10;3793:7;3821:6;3802:16;:25;3772:8;:56::i;:::-;-1:-1:-1;3856:4:46;;3438:429;-1:-1:-1;;;3438:429:46:o;3657:170:82:-;3743:4;3759:40;3769:10;3781:9;3792:6;3759:9;:40::i;1862:101:49:-;1910:11;1940:16;:14;:16::i;350:27:17:-;;;-1:-1:-1;;;;;350:27:17;;:::o;4145:172:55:-;4215:7;4241:14;:30;4272:8;4282;4292:17;:15;:17::i;:::-;4241:69;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3022:103::-;899:4:54;3022:103:55;:::o;6273:273:2:-;6327:7;6346:25;6374:17;:15;:17::i;:::-;6346:45;;6401:28;6432:17;:15;:17::i;:::-;6401:48;-1:-1:-1;6467:72:2;6500:8;6401:48;6521:1;6510:13;;;;;6525:10;6536:1;6525:13;;;;;6467:32;:72::i;:::-;6460:79;;;;6273:273;:::o;1313:753:83:-;1575:60;1603:8;1584:15;:27;;5606:3:64;1575:8:83;:60::i;:::-;-1:-1:-1;;;;;1662:14:83;;;1646:13;1662:14;;;:7;:14;;;;;;;;;1717:68;;1728:16;1717:68;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1717:68:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;1707:79;;;;;;;;;1812:28;1707:79;1812:16;:28::i;:::-;1797:43;;1851:14;1868:24;1878:4;1884:1;1887;1890;1868:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1868:24:83;;-1:-1:-1;;1868:24:83;;;-1:-1:-1;1902:79:83;;-1:-1:-1;;;;;;1912:20:83;;;;;;1911:43;;-1:-1:-1;;;;;;1938:15:83;;;;;;;1911:43;10474:3:64;1902:8:83;:79::i;:::-;-1:-1:-1;;;;;1992:14:83;;;;;;:7;:14;;;;;-1:-1:-1;2009:9:83;;1992:26;;2028:31;1992:14;2044:7;2053:5;2028:8;:31::i;:::-;1313:753;;;;;;;;;;;:::o;13513:2437:15:-;13821:26;13849:38;13790:6;3861:68;3892:10;:8;:10::i;3861:68::-;3939:55;3958:11;:9;:11::i;3939:55::-;2970:18:73::1;:16;:18::i;:::-;13992:20:15::2;14026:13;:11;:13::i;:::-;14022:1744;;14088:54;14106:6;14114;14122:9;14133:8;14088:17;:54::i;:::-;14060:82:::0;-1:-1:-1;14060:82:15;-1:-1:-1;14437:58:15::2;2379:3;14446:28:::0;::::2;;5338:3:64;14437:8:15;:58::i;:::-;14509:41;14533:1;2379:3;14509:15;:41::i;:::-;14564:55;14580:9;2379:3;14591:12;:27;14564:15;:55::i;:::-;14706:28;14724:9;14706:17;:28::i;:::-;14848:16;::::0;;14862:1:::2;14848:16:::0;;;;;::::2;::::0;;;;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;;::::0;-1:-1:-1;14848:16:15::2;14824:40;;14022:1744;;;14895:23;14909:8;14895:13;:23::i;:::-;14995:56;15009:15;15026:8;15035:1;15026:11;;;;;;;;;;;;;;15039:8;15048:1;15039:11;;;;;;;;;;;;;;14995:13;:56::i;:::-;15117:228;15146:6;15170;15194:9;15221:8;15247:15;15280:25;15323:8;15117:11;:228::i;:::-;15066:279:::0;;-1:-1:-1;15066:279:15;-1:-1:-1;15066:279:15;-1:-1:-1;15459:40:15::2;15475:9:::0;15066:279;15459:15:::2;:40::i;:::-;15586:28;15604:9;15586:17;:28::i;:::-;15713:42;15733:21;15713:19;:42::i;:::-;15917:26;:24;:26::i;:::-;2998:1:73;13513:2437:15::0;;;;;;;;;;;:::o;2260:254:46:-;2341:7;2383:10;:8;:10::i;:::-;-1:-1:-1;;;;;2364:30:46;;;;;;2360:148;;;-1:-1:-1;;;2410:18:46;;2360:148;2466:31;2482:5;2489:7;2466:15;:31::i;:::-;2459:38;;;;8873:117:15;8928:16;8963:20;:18;:20::i;4029:110:55:-;4124:8;4029:110;:::o;1135:274:70:-;1345:5;1369:33;1345:5;1369:19;:33::i;:::-;1135:274;;:::o;4808:172:61:-;4892:7;4918:55;:4;4934:14;2092:2;4918:15;:55::i;:::-;4911:62;4808:172;-1:-1:-1;;;4808:172:61:o;5083:194::-;5178:7;5204:66;:4;5222:18;2155:2;5204:17;:66::i;948:166:77:-;1006:7;1025:37;1039:1;1034;:6;;4370:1:64;1025:8:77;:37::i;:::-;-1:-1:-1;1084:5:77;;;948:166::o;3094:280:74:-;3209:7;2126:10;3276:17;;3274:20;3258:36;;3287:6;3342:5;:13;;3354:1;3342:13;;;3350:1;3342:13;3334:22;;:32;;3312:55;;3094:280;-1:-1:-1;;;;3094:280:74:o;6887:269::-;-1:-1:-1;;;;;7074:18:74;;7072:21;7056:37;;;;7133:15;;7111:38;;6887:269::o;9345:213:82:-;-1:-1:-1;;;;;9468:18:82;;;;;;;-1:-1:-1;9468:18:82;;;;;;;;:27;;;;;;;;;;;;;:36;;;9519:32;;;;;;;;;;;;;;;;;9345:213;;;:::o;2300:181:63:-;2355:16;2374:20;-1:-1:-1;;;;;;2386:7:63;;;2374:11;:20::i;:::-;2355:39;;2404:70;2413:33;2425:8;2435:10;2413:11;:33::i;:::-;8353:3:64;2404:8:63;:70::i;3793:358:73:-;3849:6;3845:232;;;3871:81;3898:24;:22;:24::i;:::-;3880:15;:42;8455:3:64;3871:8:73;:81::i;:::-;3845:232;;;3983:83;4010:25;:23;:25::i;:::-;3992:15;:43;9885:3:64;3983:8:73;:83::i;:::-;4087:7;:16;;-1:-1:-1;;4087:16:73;;;;;;;;;;4118:26;;;;;;;;;;;;;;;;;3793:358;:::o;4544:237::-;4591:4;4737:25;:23;:25::i;:::-;4719:15;:43;:55;;;-1:-1:-1;;4767:7:73;;;;4766:8;;4544:237::o;4894:108::-;4976:19;4894:108;:::o;5008:110::-;5091:20;5008:110;:::o;34473:115:15:-;34532:7;34558:23;:9;;:21;:23::i;866:101:64:-;935:9;930:34;;946:18;954:9;946:7;:18::i;7068:559:82:-;7195:71;-1:-1:-1;;;;;7204:20:82;;;;8770:3:64;7195:8:82;:71::i;:::-;7276:72;-1:-1:-1;;;;;7285:23:82;;;;8838:3:64;7276:8:82;:72::i;:::-;7359:47;7380:6;7388:9;7399:6;7359:20;:47::i;:::-;-1:-1:-1;;;;;7437:17:82;;:9;:17;;;;;;;;;;;:68;;7459:6;9316:3:64;7437:21:82;:68::i;:::-;-1:-1:-1;;;;;7417:17:82;;;:9;:17;;;;;;;;;;;:88;;;;7538:20;;;;;;;:32;;7563:6;7538:24;:32::i;:::-;-1:-1:-1;;;;;7515:20:82;;;:9;:20;;;;;;;;;;;;:55;;;;7585:35;;;;;;;7515:20;;7585:35;;;;;;;;;;;;;7068:559;;;:::o;4220:98:73:-;4272:39;4281:14;:12;:14::i;:::-;8397:3:64;4272:8:73;:39::i;8557:158:15:-;8629:9;;:35;;8656:7;8629:26;:35::i;:::-;8617:9;:47;8679:29;;;;;;8700:7;;8679:29;:::i;34106:361::-;34180:9;;34203:24;34180:9;34203:22;:24::i;:::-;34199:262;;;34254:68;34279:42;34306:14;;34279:26;:42::i;:::-;34254:8;;:24;:68::i;:::-;34243:79;;34347:69;34374:41;34401:13;:11;:13::i;:::-;34374:26;:41::i;:::-;34347:8;;:26;:69::i;:::-;34430:9;:20;-1:-1:-1;34106:361:15:o;7270:786:57:-;7534:7;7992:40;:10;7534:7;7992:21;:40::i;:::-;7923:54;:15;2605:2;7923:27;:54::i;:::-;7852:56;:16;2668:2;7852:28;:56::i;:::-;7784:53;:14;2730:3;7784:26;:53::i;:::-;7714:55;:15;2794:3;7714:27;:55::i;:::-;7644;:15;2858:3;7644:27;:55::i;:::-;7572:57;:16;2923:3;7572:28;:57::i;:::-;:127;:197;:265;:336;:405;:460;;7270:786;-1:-1:-1;;;;;;;;7270:786:57:o;5583:129::-;5641:7;5667:38;:6;5641:7;5667:19;:38::i;2386:188:81:-;2447:7;2494:10;2506:12;2520:15;2537:13;:11;:13::i;:::-;2483:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2560:4;2483:83;;;;;;;;;;;;;;;;;;;;;;;;2473:94;;;;;;2386:188;-1:-1:-1;2386:188:81:o;7279:397:15:-;7355:87;2487:4;7364:17;:45;;5289:3:64;7355:8:15;:87::i;:::-;7452;2560:4;7461:17;:45;;5228:3:64;7452:8:15;:87::i;:::-;7562:9;;:49;;7593:17;7562:30;:49::i;:::-;7550:9;:61;7626:43;;;;;;7651:17;;7626:43;:::i;915:167:91:-;973:7;1004:5;;;1019:37;1028:6;;;;973:7;1019:8;:37::i;40191:135:15:-;40251:7;40277:6;:42;;40304:15;40277:42;;;-1:-1:-1;40286:15:15;;40191:135;-1:-1:-1;40191:135:15:o;40488:144::-;40568:7;40594:31;40603:6;40611:13;40594:8;:31::i;11086:949:2:-;11450:16;;;11464:1;11450:16;;;;;;;;11300:24;;;;;;;;11450:16;;;;;;;;;;-1:-1:-1;11450:16:2;11422:44;;11490:15;:50;;11525:15;11490:50;;;11508:14;11490:50;11476:8;11485:1;11476:11;;;;;;;;;;;;;:64;;;;;11564:15;:50;;11600:14;11564:50;;;11582:15;11564:50;11550:8;11559:1;11550:11;;;;;;;;;;;;;:64;;;;;11625:28;11656:17;:15;:17::i;:::-;11625:48;-1:-1:-1;11703:72:2;11736:8;11625:48;11757:1;11746:13;;11703:72;11684:91;;11786:30;11819:51;11841:10;11853:16;11819:21;:51::i;:::-;11786:84;;11898:15;:51;;11934:15;;;;11898:51;;;11916:15;;11898:51;11881:68;;11977:15;:51;;12013:15;;11977:51;;;11995:15;;;;11977:51;11959:69;;11086:949;;;;;;;;;;:::o;2239:130:61:-;2298:6;2323:39;:4;2298:6;2323:16;:39::i;2453:135::-;2514:6;2539:42;:4;1902:2;2539:16;:42::i;2691:168::-;2767:7;2793:59;:4;1978:2;2793:17;:59::i;2942:130::-;3000:7;3026:39;:4;2034:2;3026:17;:39::i;3145:129::-;3205:4;3228:39;:4;2092:2;3228:15;:39::i;3341:143::-;3405:7;3431:46;:4;2155:2;3431:17;:46::i;810:131:70:-;888:46;902:1;897;:6;5002:3:64;888:8:70;:46::i;19689:2867:2:-;19977:19;20010:27;20051:38;20269:28;20300:17;:15;:17::i;:::-;20269:48;;20332:14;:12;:14::i;:::-;20328:2049;;;20668:29;20700:72;20733:8;20743:10;20668:29;20743:13;;;;;20758:10;20769:1;20758:13;;20700:72;20668:104;;20786:30;20819:56;20841:10;20853:21;20819;:56::i;:::-;20786:89;;20952:90;20966:15;20983:8;20992:1;20983:11;;;;;;;;;;;;;;20996:8;21005:1;20996:11;;;;;;;;;;;;;;21009:12;21022:1;21009:15;;;;;;;;;;;21026:12;21039:1;21026:15;;;;20952:13;:90::i;:::-;21057:38;21073:21;21057:15;:38::i;:::-;21138:27;21146:8;21156;21138:7;:27::i;:::-;21110:55;;-1:-1:-1;21110:55:2;-1:-1:-1;21640:95:2;21678:21;21110:55;21714:13;:11;:13::i;:::-;21729:5;21640:37;:95::i;:::-;21623:14;:112;-1:-1:-1;20328:2049:2;;-1:-1:-1;20328:2049:2;;21994:27;22002:8;22012;21994:7;:27::i;:::-;-1:-1:-1;;22332:14:2;:34;21966:55;;-1:-1:-1;21966:55:2;-1:-1:-1;20328:2049:2;22532:16;;;22546:1;22532:16;;;;;;;;22507:11;;22520:10;;22532:16;22546:1;22532:16;;;;;;;;;;-1:-1:-1;22532:16:2;22499:50;;;;;;;19689:2867;;;;;;;;;;;:::o;41571:215:15:-;41663:46;41676:7;41684:1;41676:10;;;;;;;;;;;;;;41688:20;41703:4;41688:14;:20::i;:::-;41663:12;:46::i;:::-;41650:7;41658:1;41650:10;;;;;;;;;;;;;:59;;;;;41732:47;41745:7;41753:1;41745:10;;;;;;;;;;;;;;41757:21;41772:5;41757:14;:21::i;41732:47::-;41719:7;41727:1;41719:10;;;;;;;;;;;;;:60;;;;;41571:215;:::o;43038:6537::-;43701:10;43723:4;43701:27;43697:5872;;44015:28;;43997:12;;44023:4;;44015:28;;43997:12;;44034:8;;44015:28;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;43996:47;;;44261:7;44290:1;44285:3176;;;;47609:9;44285:3176;44741:4;44738:1;44735;44720:26;44790:1;44784:8;-1:-1:-1;;;;;;44780:81:15;-1:-1:-1;;;45004:77:15;;44998:2;;45133:16;45130:1;45127;45112:38;45185:16;45182:1;45175:27;44998:2;;46524;46518:4;46515:1;46500:27;46709:2;46703:4;46696:16;47117:2;47099:16;47095:25;47089:4;47083;47068:53;47439:2;47421:16;47417:25;47414:1;47407:36;44127:3523;47680:23;47694:8;47680:13;:23::i;:::-;47719:17;47738:29;47773:224;47798:6;47822;47846:9;47873:8;47899:15;47932:25;47975:8;47773:7;:224;;:::i;:::-;47718:279;;;;;48012:29;48028:12;48012:15;:29;;:::i;:::-;48522:19;;-1:-1:-1;;48909:23:15;;48949:24;;;49195:66;-1:-1:-1;;49177:16:15;;49170:92;-1:-1:-1;48518:28:15;-1:-1:-1;;49288:16:15;;49541:2;49531:13;;49288:16;49517:28;7503:106:55;7561:7;7587:15;;;:8;:15;;;;;;;7503:106::o;8128:679:57:-;8220:19;8253:22;8289:18;8321:21;8356:19;8389:22;8425:18;8483:25;8501:6;8483:17;:25::i;:::-;8468:40;;8536:24;8553:6;8536:16;:24::i;:::-;8518:42;;8584:24;8601:6;8584:16;:24::i;:::-;8570:38;;8635:23;8651:6;8635:15;:23::i;:::-;8618:40;;8683:25;8701:6;8683:17;:25::i;:::-;8668:40;;8736:24;8753:6;8736:16;:24::i;:::-;8718:42;;8783:17;8793:6;8783:9;:17::i;:::-;8770:30;;8128:679;;;;;;;;;:::o;1793:180:77:-;1851:7;1882:5;;;1897:51;1906:6;;;:20;;;1925:1;1920;1916;:5;;;;;;:10;1906:20;4467:1:64;1897:8:77;:51::i;3855:400:42:-;3917:7;3940:6;3936:74;;3962:37;3971:5;4516:1:64;3962:8:42;:37::i;:::-;4024:6;4020:45;;-1:-1:-1;4053:1:42;4046:8;;4020:45;1305:4;4095:7;;;;:1;:7;:1;4118:13;;;;;:20;4112:106;;4155:36;4164:5;4564:1:64;4155:8:42;:36::i;:::-;4247:1;4235:9;:13;;;;;;;3855:400;-1:-1:-1;;;;3855:400:42:o;6747:251:55:-;6920:71;;-1:-1:-1;;;6920:71:55;;6895:6;;6920:14;;-1:-1:-1;;6920:71:55;;6954:8;;6964;;6974:11;;6987:3;;6920:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6913:78;6747:251;-1:-1:-1;;;;6747:251:55:o;2864:245:2:-;2922:35;;:::i;:::-;2992:21;3008:4;2992:15;:21::i;:::-;2969:44;;3046:22;2987:1;3046:15;:22::i;:::-;3023:20;;;:45;:17;2864:245::o;40819:201:15:-;40905:42;40914:7;40922:1;40914:10;;;;;;;;;;;;;;40926:20;40941:4;40926:14;:20::i;:::-;40905:8;:42::i;:::-;40892:7;40900:1;40892:10;;;;;;;;;;;;;:55;;;;;40970:43;40979:7;40987:1;40979:10;;;;;;;;;;;;;;40991:21;41006:5;40991:14;:21::i;4016:104:46:-;4092:21;4098:6;4106;4092:5;:21::i;15355:2148:2:-;15652:7;15673:16;15703;15803:28;15834:17;:15;:17::i;:::-;15803:48;-1:-1:-1;16155:29:2;16187:72;16220:8;15803:48;16155:29;16230:13;;16187:72;16155:104;;16269:30;16302:56;16324:10;16336:21;16302;:56::i;:::-;16269:89;;16423:90;16437:15;16454:8;16463:1;16454:11;;;;;;;16423:90;16524:38;16540:21;16524:15;:38::i;:::-;16574:20;16596:26;16626:27;16634:8;16644;16626:7;:27::i;:::-;16668:10;:21;16573:80;;-1:-1:-1;16573:80:2;-1:-1:-1;16668:21:2;;16664:113;;;16705:61;16716:12;16730:20;16740:9;16730;:20::i;:::-;16752:13;:11;:13::i;:::-;16705:10;:61::i;:::-;17228:95;17266:21;17289:12;17303:13;:11;:13::i;:::-;17318:4;17228:37;:95::i;:::-;17211:14;:112;17479:16;;;17493:1;17479:16;;;;;;;;17454:12;;17468:9;;17479:16;17493:1;17479:16;;;;;;;;;;-1:-1:-1;17479:16:2;17446:50;;;;;;;;;;;15355:2148;;;;;;;;;;;:::o;42329:209:15:-;42419:44;42430:7;42438:1;42430:10;;;;;;;;;;;;;;42442:20;42457:4;42442:14;:20::i;:::-;42419:10;:44::i;:::-;42406:7;42414:1;42406:10;;;;;;;;;;;;;:57;;;;;42486:45;42497:7;42505:1;42497:10;;;;;;;;;;;;;;42509:21;42524:5;42509:14;:21::i;4390:511:2:-;4709:16;;;4723:1;4709:16;;;4439:25;4709:16;;;;;4439:25;4709:16;;;;;;;;;;-1:-1:-1;4709:16:2;4698:27;;4749:48;4772:7;4781:15;4749:22;:48::i;:::-;4735:8;4744:1;4735:11;;;;;;;;;;;;;:62;;;;;4821:48;4844:7;4853:15;4821:22;:48::i;:::-;4807:8;4816:1;4807:11;;;;;;;;;;;;;:62;;;;;4390:511;:::o;27912:1461::-;28136:9;;28159:24;28136:9;28159:22;:24::i;:::-;:58;;;;;28202:15;28187:12;:30;28159:58;28155:1212;;;28233:19;28255:96;28292:13;28307;28322;28337;28255:36;:96::i;:::-;28233:118;;28366:18;28387:216;28440:13;28471;28502;28533;28564:25;:8;:23;:25::i;:::-;28387:35;:216::i;:::-;28366:237;;28618:26;28647:22;:8;:20;:22::i;:::-;28618:51;;28683:43;28729:40;:8;:38;:40::i;:::-;28683:86;;28783:26;28812:220;28847:35;28900:18;28936:12;28966:11;28995:23;:8;:21;:23::i;:::-;28812:17;:220::i;:::-;28783:249;;29073:18;29051;:40;29047:310;;29174:43;:8;29198:18;29174:23;:43::i;:::-;29163:54;-1:-1:-1;29246:58:2;29163:54;29288:15;29246:41;:58::i;:::-;29322:9;:20;;;29235:69;-1:-1:-1;28155:1212:2;;;;;;27912:1461;;;;;;:::o;2718:615:42:-;2778:7;2815:5;;;2836:6;;;:26;;;2861:1;2856;2846:7;:11;;;;;;:16;2836:26;2830:96;;2879:36;2888:5;4467:1:64;2879:8:42;:36::i;:::-;2940:12;2936:51;;2975:1;2968:8;;;;;2936:51;1305:4;-1:-1:-1;;3303:11:42;;3302:19;;3325:1;3301:25;3294:32;;;2718:615;;;;:::o;1958:277::-;2016:7;2119:1;2114;:6;;2108:76;;2137:36;2146:5;4370:1:64;2137:8:42;:36::i;9358:471:2:-;9604:7;9694:128;9723:21;9746:22;9770:11;:18;;;9790:14;9806:15;9694:28;:128::i;:::-;9687:135;;9358:471;;;;;;;;:::o;41224:154:15:-;41310:7;41336:35;41349:6;41357:13;41336:12;:35::i;9835:472:2:-;10082:7;10172:128;10201:21;10224:22;10248:11;:18;;;10268:14;10284:15;10172:28;:128::i;41988:150:15:-;42072:7;42098:33;42109:6;42117:13;42098:10;:33::i;9831:112:42:-;9885:7;1305:4;9912:1;:7;9911:25;;9935:1;9911:25;;;-1:-1:-1;1305:4:42;9924:7;;9831:112::o;4460:722::-;4520:7;4543:6;4539:74;;4565:37;4574:5;4516:1:64;4565:8:42;:37::i;:::-;4627:6;4623:45;;-1:-1:-1;4656:1:42;4649:8;;4623:45;1305:4;4698:7;;;;:1;:7;:1;4721:13;;;;;:20;4715:121;;4758:51;1305:4;4779:1;4767:9;:13;;;;;;:20;4564:1:64;4758:8:42;:51::i;:::-;5169:1;5164;5152:9;:13;5151:19;;;;42544:488:15;42602:11;42999:10;:8;:10::i;:::-;-1:-1:-1;;;;;42999:24:15;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1182:1241:0:-;1328:7;2251:9;2262:10;2274:15;2291:10;2305:55;2330:8;2340:9;2351:8;2305:24;:55::i;:::-;2250:110;;;;;;;;2377:39;2397:1;2400:2;2404:7;2413:2;2377:19;:39::i;:::-;2370:46;1182:1241;-1:-1:-1;;;;;;;;1182:1241:0:o;3199:183:81:-;3276:7;3341:20;:18;:20::i;:::-;3363:10;3312:62;;;;;;-1:-1:-1;;;3312:62:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3302:73;;;;;;3295:80;;3199:183;;;:::o;12847:1097:2:-;12989:7;12998:16;13026:30;13059:19;:8;:17;:19::i;:::-;13026:52;-1:-1:-1;13088:70:2;13105:30;13097:4;:38;;;;;;;;;5443:3:64;13088:8:2;:70::i;:::-;13169:26;13198:27;:8;:25;:27::i;:::-;13169:56;;13235;13271:9;:16;13289:1;13235:35;:56::i;:::-;13301:24;13315:9;13301:13;:24::i;:::-;13336:28;13367:17;:15;:17::i;:::-;13336:48;-1:-1:-1;13395:26:2;13424:73;13457:9;13336:48;13395:26;13468:13;;13424:73;13395:102;;13794:20;13817:31;13826:18;13846:1;13817:8;:31::i;:::-;13859:14;:35;;;;-1:-1:-1;13859:35:2;13927:9;;-1:-1:-1;12847:1097:2;;-1:-1:-1;;;;;;;12847:1097:2:o;3900:110:46:-;3979:24;3985:9;3996:6;3979:5;:24::i;29672:172:2:-;;;;:::o;3885:149:82:-;-1:-1:-1;;;;;4000:18:82;;;3974:7;4000:18;;;-1:-1:-1;4000:18:82;;;;;;;;:27;;;;;;;;;;;;;3885:149::o;8996:298:15:-;9122:16;;;9136:1;9122:16;;;9057;9122;;;;;9057;9085:34;;9122:16;9136:1;9122:16;;;;;;;;;;-1:-1:-1;9122:16:15;9085:53;;9171:24;9190:4;9171:18;:24::i;:::-;9148:17;9166:1;9148:20;;;;;;;;;;;;;:47;;;;;9228:25;9247:5;9228:18;:25::i;:::-;9205:17;9223:1;9205:20;;;;;;;;;;;;;;;;;:48;9270:17;-1:-1:-1;8996:298:15;:::o;1415:374:70:-;1511:1;1496:5;:12;:16;1492:53;;;1528:7;;1492:53;1555:16;1574:5;1580:1;1574:8;;;;;;;;;;;;;;1555:27;;1597:9;1609:1;1597:13;;1592:191;1616:5;:12;1612:1;:16;1592:191;;;1649:15;1667:5;1673:1;1667:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;1689:51:70;-1:-1:-1;;;;;1698:18:70;;;;;;;4890:3:64;1689:8:70;:51::i;:::-;1765:7;-1:-1:-1;1630:3:70;;1592:191;;1969:544:49;2057:4;1663:42;2078:10;:8;:10::i;:::-;-1:-1:-1;;;;;2078:29:49;;;;;2077:63;;;2112:28;2131:8;2112:18;:28::i;:::-;2073:434;;;2272:10;:8;:10::i;:::-;-1:-1:-1;;;;;2258:24:49;:10;:24;;-1:-1:-1;2251:31:49;;2073:434;2435:16;:14;:16::i;:::-;:61;;;-1:-1:-1;;;2435:61:49;;;;;;;;-1:-1:-1;;;;;2435:61:49;;;;;;;2490:4;2435:61;;;;;;:27;;;;;;;:61;;;;;;;;;;;;;;;:27;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2435:61:49;;-1:-1:-1;2428:68:49;;1074:3172:64;-1:-1:-1;;;3588:3:64;3581:79;;;3799:66;3793:4;3786:80;3941:1;3935:4;3928:15;2210:2;2243:18;;;2336;;;2383;;;2215:4;2379:29;;;3057:2;3053:17;2195:18;;;;2288;;;;2284:29;;;;3040:1;3036:14;3025:26;;;;3021:50;;;;2999:73;;2994:3;2990:83;4008:4;4001:26;4234:3;;4224:14;1765:176:91;1842:7;1861:27;1875:1;1870;:6;;1878:9;1861:8;:27::i;:::-;-1:-1:-1;;1910:5:91;;;1765:176::o;2009:340:71:-;2068:6;2086:9;2098:28;2119:5;2098:13;:28::i;:::-;2086:40;;2187:18;2214:1;2209:2;:6;:78;;1324:6;2254:2;:33;2209:78;;;1324:6;2218:2;:33;2209:78;1259:4;2305:37;;;;-1:-1:-1;;;;2009:340:71:o;3594:171:61:-;3678:7;3704:54;:4;3721:13;3678:7;3704:16;:54::i;3878:180::-;3966:7;3992:59;:4;4009:15;1902:2;3992:16;:59::i;8603:131:74:-;8711:15;;8603:131::o;9370:237::-;2545:11;9563:25;;;;9562:37;;;9370:237::o;8941:::-;2386:11;9134:25;;;;9133:37;;;8941:237::o;11062:142::-;11171:14;2439:11;11163:34;;11062:142::o;3388:427:81:-;3790:9;;3765:44::o;5432:392:2:-;5575:35;;:::i;:::-;5649:50;5668:4;5674:10;5668:4;5674:13;;;;;5689:9;5649:18;:50::i;:::-;5626:73;;5732:51;5644:1;5758:10;5644:1;5758:13;;5732:51;5709:20;;;:74;:17;5432:392;-1:-1:-1;;5432:392:2:o;12135:487:74:-;12209:6;12257:14;;;2386:11;12249:34;2846:11;12558:19;;:57;;12610:5;12558:57;;;-1:-1:-1;;12581:25:74;;;-1:-1:-1;;;12135:487:74:o;10534:142::-;10643:14;2280:11;10635:34;;10534:142::o;9730:143::-;9835:14;2126:10;9827:33;;;9826:40;;9730:143::o;11590:142::-;11699:14;-1:-1:-1;;;;;11691:34:74;;11590:142::o;24369:583:2:-;24662:16;24680:20;24702;24724:19;24747:98;24786:14;;24814:21;24747:25;:98::i;:::-;24661:184;;;;;;;;24883:62;24895:8;24905:12;24919;24933:11;24883;:62::i;:::-;24369:583;;;;;:::o;22562:592::-;22652:19;22673:27;22712:30;22745:19;:8;:17;:19::i;:::-;22712:52;-1:-1:-1;22927:53:2;22919:4;:61;;;;;;;;;22915:233;;;23024:47;23052:8;23062;23024:27;:47::i;:::-;22996:75;;-1:-1:-1;22996:75:2;-1:-1:-1;22915:233:2;;;23102:35;7850:3:64;23102:7:2;:35::i;:::-;22562:592;;;;;;:::o;11477:743:43:-;11663:21;11732:13;11728:486;;;11835:10;11848:57;11888:16;11848:33;:10;11865:15;11848:16;:33::i;:::-;:39;;:57::i;:::-;11835:70;-1:-1:-1;11935:18:43;:10;11835:70;11935:14;:18::i;:::-;11919:34;;11728:486;;;;12081:10;12094:61;12138:16;12094:35;:10;12113:15;12094:18;:35::i;:61::-;12081:74;-1:-1:-1;12185:18:43;:10;12081:74;12185:14;:18::i;:::-;12169:34;11477:743;-1:-1:-1;;;;;;11477:743:43:o;2157:148:77:-;2219:7;2238:38;2247:6;;;4516:1:64;2238:8:77;:38::i;:::-;2297:1;2293;:5;;;;;;;2157:148;-1:-1:-1;;;2157:148:77:o;5816:144:57:-;5881:6;5906:47;:6;2923:3;5906:18;:47::i;6061:142::-;6125:6;6150:46;:6;2858:3;6150:18;:46::i;6306:142::-;6370:6;6395:46;:6;2794:3;6395:18;:46::i;6548:140::-;6611:6;6636:45;:6;2730:3;6636:18;:45::i;6791:143::-;6856:6;6881:46;:6;2668:2;6881:18;:46::i;7034:141::-;7098:6;7123:45;:6;2605:2;7123:18;:45::i;3115:141:2:-;3188:7;3214:10;:35;;3240:9;3214:35;;;-1:-1:-1;3227:10:2;;3115:141;-1:-1:-1;3115:141:2:o;8512:410:82:-;8587:68;-1:-1:-1;;;;;8596:21:82;;;;8968:3:64;8587:8:82;:68::i;:::-;8666:49;8687:7;8704:1;8708:6;8666:20;:49::i;:::-;-1:-1:-1;;;;;8747:18:82;;:9;:18;;;;;;;;;;;:67;;8770:6;9382:3:64;8747:22:82;:67::i;:::-;-1:-1:-1;;;;;8726:18:82;;:9;:18;;;;;;;;;;:88;8839:12;;:24;;8856:6;8839:16;:24::i;:::-;8824:12;:39;8878:37;;;;;;;;8904:1;;-1:-1:-1;;;;;8878:37:82;;;;;;;;;;;;8512:410;;:::o;17509:581:2:-;17599:20;17621:26;17659:30;17692:19;:8;:17;:19::i;:::-;17659:52;-1:-1:-1;17856:57:2;17848:4;:65;;;;;;;;;17844:240;;;17957:50;17988:8;17998;17957:30;:50::i;17844:240::-;18038:35;6263:3:64;18038:7:2;:35::i;2012:362:14:-;2152:36;;;;;;;;2178:10;2152:36;;;;;;;;;;;-1:-1:-1;;;;;2152:36:14;;;;;;;-1:-1:-1;;;2152:36:14;;;-1:-1:-1;;;;;2152:36:14;;;;;;;;;2206:29;:12;2223:11;2206:16;:29::i;:::-;:53;;2261:17;;;;;;;;;;;;;;;;;2198:81;;;;;-1:-1:-1;;;2198:81:14;;;;;;;;:::i;:::-;-1:-1:-1;2332:16:14;;;;-1:-1:-1;;;;;2297:51:14;:31;:12;2314:13;2297:16;:31::i;:::-;:51;;2350:16;;;;;;;;;;;;;;;;;2289:78;;;;;-1:-1:-1;;;2289:78:14;;;;;;;;:::i;2311:232:77:-;2371:7;2390:38;2399:6;;;4516:1:64;2390:8:77;:38::i;:::-;2443:6;2439:98;;-1:-1:-1;2472:1:77;2465:8;;2439:98;2525:1;2520;2516;:5;2515:11;;;;;;2511:1;:15;2504:22;;;;3633:581:2;3725:15;3970:12;3984:15;4007:10;:8;:10::i;:::-;-1:-1:-1;;;;;4007:27:2;;4035:11;:9;:11::i;:::-;4048:5;4007:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;4074:14:2;4184:23;;;;;3633:581;-1:-1:-1;;;;3633:581:2:o;1742:349:1:-;1920:6;1938:17;1958:72;1973:8;1983:17;2002:8;2012:17;1958:14;:72::i;:::-;1938:92;;2047:37;2074:9;2047:26;:37::i;2582:1401::-;2793:6;3477:17;3497:72;3512:8;3522:17;3541:8;3551:17;3497:14;:72::i;:::-;3477:92;-1:-1:-1;3579:22:1;3604:39;3617:25;:8;3477:92;3617:14;:25::i;:::-;3604:8;;:12;:39::i;:::-;3579:64;;3653:24;3680:42;3707:14;3680:26;:42::i;:::-;3939:37;;;;;2582:1401;-1:-1:-1;;;;;;;;2582:1401:1:o;5786:955:55:-;5999:7;6119:14;6136:88;6167:12;6181:11;6194:12;6208:15;6136:23;6147:11;6136:10;:23::i;:::-;:30;:88;;;:30;:88::i;:::-;6119:105;-1:-1:-1;2237:9:55;6481:15;:47;;;:71;;;6576:44;;6609:11;6576:44;;;6588:18;:11;:16;:18::i;:::-;6675:21;;;;:8;:21;;;;;:30;;;;-1:-1:-1;6675:21:55;5786:955;-1:-1:-1;;;;;;5786:955:55:o;4534:169:61:-;4617:7;4643:53;:4;4661:12;2034:2;4643:17;:53::i;4197:217::-;4303:7;4329:78;:4;4347:17;1978:2;4329:17;:78::i;6171:2382:0:-;6373:17;;8135:60;8149:45;:15;8171:22;8149:21;:45::i;:::-;8135:9;;:13;:60::i;:::-;8114:81;-1:-1:-1;8209:20:0;8232:64;8247:48;:16;8272:22;8247:24;:48::i;8232:64::-;8209:87;-1:-1:-1;8323:64:0;8362:24;:10;8377:8;8362:14;:24::i;:::-;8323:30;:12;8344:8;8323:20;:30::i;:64::-;8311:76;;6171:2382;;8475:10;8462:9;:23;;8456:90;;8488:58;8498:5;234:3:3;8488:9:0;:58::i;8741:2353::-;8944:16;10549:10;10536:9;:23;;10530:90;;10562:58;10572:5;234:3:3;10562:9:0;:58::i;:::-;10807:18;10828:60;10842:45;:15;10864:22;10842:21;:45::i;10828:60::-;10807:81;-1:-1:-1;10902:20:0;10925:64;10940:48;:16;10965:22;10940:24;:48::i;10925:64::-;10902:87;-1:-1:-1;11015:62:0;11049:27;10902:87;11066:9;11049:16;:27::i;:::-;11015;:10;11032:9;11015:16;:27::i;2659:1127::-;2847:9;;;;2976:51;2999:27;:9;3017:8;2999:17;:27::i;:::-;1305:4:42;;2976:22:0;:51::i;:::-;2972:55;;3041:14;3058:29;3078:8;3058;3067:1;3058:11;;;;;;;;;;;;;;:19;;:29;;;;:::i;:::-;3041:46;;3101:14;3118:30;3138:9;3118:8;3127:1;3118:11;;;;;;;;;;;;;;:19;;:30;;;;:::i;:::-;3101:47;-1:-1:-1;3167:18:0;:6;3101:47;3167:10;:18::i;:::-;3162:23;;3204:32;3224:8;3233:1;3224:11;;;;;;;;;;;;;;3204:8;3213:1;3204:11;;;;;;;:32;3199:37;;2659:1127;;3439:72;3501:9;3439:53;3482:9;3440:32;3460:8;3469:1;3460:11;;;;;;;;;;;;;;3440:8;3449:1;3440:11;;;;;;;:32;3439:42;;:53::i;:72::-;3429:82;;3521:12;3536:103;3630:8;3536:85;3611:9;3536:66;1305:4:42;3579:1:0;:22;3537:32;3557:8;3566:1;3557:11;;;;;;;;;;;;;;3537:8;3546:1;3537:11;;;;;;;3536:103;3521:118;-1:-1:-1;3649:12:0;3664:68;3707:24;3722:8;;3707:14;:24::i;:::-;3665:32;3685:8;3694:1;3685:11;;;;;;;;;;;;;;3665:8;3674:1;3665:11;;;;;;;3664:68;3649:83;-1:-1:-1;3752:27:0;3649:83;3752:17;:7;3764:4;3752:11;:17::i;:::-;:21;;:27::i;:::-;3742:37;;2659:1127;;;;;;;;;:::o;4288:792::-;4486:17;;4537:31;:1;4545:22;4537:7;:31::i;:::-;4515:53;-1:-1:-1;4637:15:0;4655:47;4700:1;4656:34;:2;4667:22;4656:10;:34::i;4655:47::-;4637:65;-1:-1:-1;4798:16:0;4817:20;:7;4637:65;4817:11;:20::i;:::-;4798:39;;4847:17;4867:31;4886:8;4896:1;4867:18;:31::i;:::-;4847:51;-1:-1:-1;4984:17:0;5004;:2;4847:51;5004:6;:17::i;:::-;4984:37;-1:-1:-1;5043:30:0;4984:37;5061:11;5043:17;:30::i;:::-;5031:42;4288:792;-1:-1:-1;;;;;;;;;;4288:792:0:o;867:156:62:-;927:25;982:4;971:45;;;;;;;;;;;;;;;-1:-1:-1;971:45:62;;867:156;-1:-1:-1;;867:156:62:o;1205:185::-;1273:26;1338:4;1327:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1327:56:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1327:56:62;;;;;;-1:-1:-1;1311:72:62;;1205:185;-1:-1:-1;;;;;;1205:185:62:o;7898:294:82:-;7973:49;8002:1;8006:7;8015:6;7973:20;:49::i;:::-;8048:12;;:24;;8065:6;8048:16;:24::i;:::-;8033:12;:39;-1:-1:-1;;;;;8103:18:82;;:9;:18;;;;;;;;;;;:30;;8126:6;8103:22;:30::i;:::-;-1:-1:-1;;;;;8082:18:82;;:9;:18;;;;;;;;;;;:51;;;;8148:37;;;;;;;8082:18;;:9;;8148:37;;;;;;;;;;7898:294;;:::o;9300:153:15:-;9372:7;9398:6;:48;;9428:18;9398:48;;;-1:-1:-1;9407:18:15;;9300:153;-1:-1:-1;9300:153:15:o;7682:279::-;7768:4;7816:51;-1:-1:-1;;;7816:11:15;:51::i;:::-;7804:8;:63;7803:151;;;-1:-1:-1;7897:56:15;-1:-1:-1;;;7897:11:15;:56::i;:::-;7885:68;;;;7682:279;-1:-1:-1;7682:279:15:o;13692:345:76:-;13737:6;13838:37;13851:1;13847;:5;4838:3:64;13838:8:76;:37::i;:::-;2964:13;13889:21;-1:-1:-1;13889:46:76;;;;-1:-1:-1;3019:13:76;13914:21;;13889:46;13885:146;;;1935:4;13958:9;13965:1;13958:6;:9::i;:::-;:18;;;;;;13951:25;;;;13885:146;14014:6;14018:1;14014:3;:6::i;:::-;14007:13;;;;7398:373:74;2386:11;7727:25;;;7726:37;;7583:18;;;7581:21;7565:37;;7704:60;7398:373;;;;;:::o;5830:365:2:-;5974:7;6012:10;:176;;6125:62;6166:9;6177;6125:40;:62::i;:::-;6012:176;;;6042:62;6083:9;6094;6042:40;:62::i;25711:914::-;25859:7;25880;25901;25922;25955:27;25984:30;26016:20;26038:19;26061:18;:16;:18::i;:::-;25954:125;;;;;;;;26175:19;26198:1;26175:24;26171:95;;;26223:1;;-1:-1:-1;26223:1:2;;-1:-1:-1;26229:12:2;;-1:-1:-1;26243:11:2;-1:-1:-1;26215:40:2;;-1:-1:-1;;26215:40:2;26171:95;26310:16;26328:20;26352:197;26396:17;26427:16;26457:13;:11;:13::i;:::-;26484:19;26517:22;26352:30;:197::i;:::-;26309:240;;-1:-1:-1;26309:240:2;-1:-1:-1;26592:12:2;;-1:-1:-1;26606:11:2;;-1:-1:-1;;;;;25711:914:2;;;;;;;;:::o;26631:434::-;26840:12;;26836:82;;26868:39;26884:12;26898:8;26868:15;:39::i;:::-;26974:16;;26970:89;;27006:42;27022:11;27035:12;27006:15;:42::i;23160:928::-;23311:7;23320:16;23763:19;23785:33;:8;:31;:33::i;:::-;23763:55;;23929:27;23959:80;24002:8;24012:11;24025:13;:11;:13::i;:::-;23959:42;:80::i;:::-;24057:11;;;;-1:-1:-1;23160:928:2;;-1:-1:-1;;;;23160:928:2:o;1675:277:42:-;1733:7;1837:5;;;1858:6;;;;1852:76;;1881:36;1890:5;4322:1:64;1881:8:42;:36::i;2241:247::-;2303:7;2340:5;;;2361:6;;;:26;;;2386:1;2381;2371:7;:11;;;;;;:16;2361:26;2355:96;;2404:36;2413:5;4467:1:64;2404:8:42;:36::i;:::-;1305:4;2468:7;:13;;12743:488:74;12817:6;12865:14;;;2545:11;12857:34;2901:11;13167:19;;:57;;13219:5;13167:57;;;-1:-1:-1;;13190:25:74;;;-1:-1:-1;;;12743:488:74:o;1353:121:91:-;1411:7;1437:30;1441:1;1444;4370::64;1437:3:91;:30::i;18096:528:2:-;18250:7;18259:16;18291:20;18314:36;:8;:34;:36::i;:::-;18291:59;;18461:26;18490:84;18536:8;18546:12;18560:13;:11;:13::i;:::-;18490:45;:84::i;648:629:1:-;823:7;1196:74;1237:31;:8;1250:17;1237:12;:31::i;:::-;1197;:8;1210:17;1197:12;:31::i;3387:1033:57:-;3588:7;3810:14;3853:17;3863:6;3853:9;:17::i;:::-;3834:16;:36;3810:61;;3881:22;3952:7;3933:16;:26;3906:24;3923:6;3906:16;:24::i;:::-;:53;3881:78;;3969:21;4037:7;4019:15;:25;3993:23;4009:6;3993:15;:23::i;:::-;:51;3969:75;;4054:22;4125:7;4106:16;:26;4079:24;4096:6;4079:16;:24::i;:::-;:53;4054:78;;4162:251;4184:16;4218:15;4251;4284:14;4316:16;4350:15;4383:16;4162:4;:251::i;1205:98:54:-;1257:7;1283:13;1287:5;1294:1;1283:3;:13::i;4752:269:74:-;2280:11;4939:18;;4937:21;4921:37;;;;4998:15;;4976:38;;4752:269::o;5795:::-;2439:11;5982:18;;5980:21;5964:37;;;;6041:15;;6019:38;;5795:269::o;256:103:41:-;326:9;321:35;;337:19;346:9;337:8;:19::i;7236:1013:43:-;7308:7;7331:10;7327:49;;-1:-1:-1;7364:1:43;7357:8;;7327:49;7386:13;7402:24;7420:5;7402:17;:24::i;:::-;7386:40;;7520:1;7510:5;1305:4:42;7480:5:43;:26;7479:36;;;;;;7470:5;:46;7469:52;;;;;;7461:60;;7590:1;7580:5;1305:4:42;7550:5:43;:26;7549:36;;;;;;7540:5;:46;7539:52;;;;;;7531:60;;7660:1;7650:5;1305:4:42;7620:5:43;:26;7619:36;;;;;;7610:5;:46;7609:52;;;;;;7601:60;;7730:1;7720:5;1305:4:42;7690:5:43;:26;7689:36;;;;;;7680:5;:46;7679:52;;;;;;7671:60;;7800:1;7790:5;1305:4:42;7760:5:43;:26;7759:36;;;;;;7750:5;:46;7749:52;;;;;;7741:60;;7870:1;7860:5;1305:4:42;7830:5:43;:26;7829:36;;;;;;7820:5;:46;7819:52;;;;;;7811:60;;7940:1;7930:5;1305:4:42;7900:5:43;:26;7899:36;;;;;;7890:5;:46;7889:52;;;;;;;-1:-1:-1;8039:20:43;8062;7889:52;;8062:13;:20::i;:::-;8039:43;-1:-1:-1;8116:33:43;8126:22;:5;8138:9;8126:11;:22::i;:::-;8116:5;;:9;:33::i;:::-;8100:12;:49;;:102;;;;-1:-1:-1;8169:33:43;8179:22;:5;8191:9;8179:11;:22::i;:::-;8169:5;;:9;:33::i;:::-;8153:12;:49;;8100:102;8092:127;;;;;-1:-1:-1;;;8092:127:43;;;;;;;;;;;;-1:-1:-1;;;8092:127:43;;;;;;;;;;;;;;19376:1714:76;1935:4;19646:11;19424:6;;-1:-1:-1;20056:10:76;;;;-1:-1:-1;;20031:10:76;;20030:21;20056:10;20029:38;;;;21082:1;20475;-1:-1:-1;20029:38:76;;;;20097:5;;;20096:16;;;20421:15;;;20420:26;;;20469:7;;;20456:20;;;20548:1;20494:15;;;20493:26;;;20542:7;;;20529:20;20621:1;20567:15;;;20566:26;;;20615:7;;;20602:20;20694:1;20640:15;;;20639:26;;;20688:7;;;20675:20;20767:2;20713:15;;;20712:26;;;20761:8;;;20748:21;20841:2;20787:15;;;20786:26;;;20835:8;;;20822:21;20915:2;20861:15;;;;20860:26;;;;20909:8;;;;20896:21;;;;21070:13;;;-1:-1:-1;;;19376:1714:76:o;14151:4959::-;14196:6;1935:4;14218:1;:10;14214:382;;;14558:26;14582:1;-1:-1:-1;14582:1:76;14562:21;;;;;14558:3;:26::i;:::-;14557:27;;14549:36;;;;14214:382;15921:10;15954:11;15949:16;;15945:114;;3214:56;15981:7;;;-1:-1:-1;3158:21:76;16039:9;15945:114;16078:11;16073:16;;16069:114;;3377:28;16105:7;;;-1:-1:-1;3322:20:76;16163:9;16069:114;16321:3;16334:8;;;;16314:10;3543:34;16469:7;;16465:82;;3543:34;2125:4;16497:10;;16496:17;;-1:-1:-1;3486:22:76;16527:9;16465:82;3672:27;16561:1;:7;16557:82;;3672:27;2125:4;16589:10;;16588:17;;-1:-1:-1;3615:22:76;16619:9;16557:82;3793:24;16653:1;:7;16649:82;;3793:24;2125:4;16681:10;;16680:17;;-1:-1:-1;3737:21:76;16711:9;16649:82;3911:22;16745:1;:7;16741:82;;3911:22;2125:4;16773:10;;16772:17;;-1:-1:-1;3855:21:76;16803:9;16741:82;4027:21;16837:1;:7;16833:82;;4027:21;2125:4;16865:10;;16864:17;;-1:-1:-1;3971:21:76;16895:9;16833:82;4142:21;16929:1;:7;16925:82;;4142:21;2125:4;16957:10;;;16956:17;;16987:9;16925:82;4257:21;17021:1;:7;17017:82;;4257:21;2125:4;17049:10;;17048:17;;-1:-1:-1;4201:20:76;17079:9;17017:82;4372:21;17113:1;:7;17109:82;;4372:21;2125:4;17141:10;;17140:17;;-1:-1:-1;4316:20:76;17171:9;17109:82;4489:21;17205:1;:8;17201:85;;4489:21;2125:4;17234:10;;17233:18;;-1:-1:-1;4432:20:76;17265:10;17201:85;4606:21;17300:1;:8;17296:85;;4606:21;2125:4;17329:10;;17328:18;;-1:-1:-1;4550:19:76;17360:10;17296:85;17883:8;2125:4;17921:1;:10;2125:4;;17896:1;:10;17895:21;17894:38;;;;;;;-1:-1:-1;17942:16:76;2125:4;17962:5;;;17961:16;;-1:-1:-1;18071:1:76;;2125:4;18286:15;;;18285:26;;-1:-1:-1;18340:1:76;18285:26;18334:7;18321:20;2125:4;18359:15;;;18358:26;;-1:-1:-1;18413:1:76;18358:26;18407:7;18394:20;2125:4;18432:15;;;18431:26;;-1:-1:-1;18486:1:76;18431:26;18480:7;18467:20;2125:4;18505:15;;;18504:26;;-1:-1:-1;18559:1:76;18504:26;18553:7;18540:20;2125:4;18578:15;;;18577:26;;-1:-1:-1;18632:2:76;18577:26;18626:8;18613:21;18806:1;18793:14;19100:3;19081:15;;;19080:23;;14151:4959;-1:-1:-1;;;;;;;14151:4959:76:o;11437:161:0:-;11536:7;11562:29;:9;11580:10;11562:17;:29::i;11186:159::-;11284:7;11310:28;:9;11328;11310:17;:28::i;27071:497:2:-;27275:10;;:61;;-1:-1:-1;;;27275:61:2;;27159:7;;;;;;;;-1:-1:-1;;;;;27275:10:2;;;;-1:-1:-1;;27275:61:2;;-1:-1:-1;;;;27275:61:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27350:10;;:64;;-1:-1:-1;;;27350:64:2;;-1:-1:-1;;;;;27350:10:2;;;;-1:-1:-1;;27350:64:2;;27369:44;;27350:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27428:10;;:55;;-1:-1:-1;;;27428:55:2;;-1:-1:-1;;;;;27428:10:2;;;;-1:-1:-1;;27428:55:2;;-1:-1:-1;;;;27428:55:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27497:10;;:54;;-1:-1:-1;;;27497:54:2;;-1:-1:-1;;;;;27497:10:2;;;;-1:-1:-1;;27497:54:2;;-1:-1:-1;;;;27497:54:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27254:307;;;;;;;;27071:497;;;;:::o;4717:2410:43:-;4953:7;4962;5696:17;5676:16;:37;5672:443;;-1:-1:-1;6099:1:43;;-1:-1:-1;6099:1:43;6091:13;;5672:443;6567:17;6587:96;6663:19;6588:65;6613:39;:16;6634:17;6613:20;:39::i;:::-;6588:16;;:24;:65::i;6587:96::-;6567:116;-1:-1:-1;6693:21:43;6717:68;6745:39;:16;6766:17;6745:20;:39::i;:::-;6717:19;;:27;:68::i;:::-;6693:92;-1:-1:-1;6795:19:43;6817:35;:16;6693:92;6817:20;:35::i;:::-;6795:57;-1:-1:-1;6862:14:43;6879:30;:9;6795:57;6879:17;:30::i;:::-;6862:47;-1:-1:-1;6968:16:43;6987:38;:22;6862:47;6987:30;:38::i;:::-;6968:57;-1:-1:-1;7035:20:43;7058;:6;6968:57;7058:10;:20::i;:::-;7097:8;;-1:-1:-1;7035:43:43;;-1:-1:-1;;;;;;4717:2410:43;;;;;;;;;:::o;2343:184:62:-;2417:19;2477:4;2466:54;;;;;;;;;;;;;;;-1:-1:-1;2466:54:62;;;;2343:184;-1:-1:-1;;2343:184:62:o;2942:1444:43:-;4195:15;;3094:27;;-1:-1:-1;;;;;4181:30:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4181:30:43;;4168:43;;4226:9;4221:131;4245:8;:15;4241:1;:19;4221:131;;;4297:44;4332:8;4297:26;4317:5;4297:8;4306:1;4297:11;;;;;;;:44;4281:10;4292:1;4281:13;;;;;;;;;;;;;;;;;:60;4262:3;;4221:131;;1673:1175;2662:15;;1829:26;;-1:-1:-1;;;;;2648:30:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2648:30:43;;2636:42;;2693:9;2688:127;2712:8;:15;2708:1;:19;2688:127;;;2763:41;2795:8;2763:25;2781:6;2763:8;2772:1;2763:11;;;;;;;;;;;;;;:17;;:25;;;;:::i;:41::-;2748:9;2758:1;2748:12;;;;;;;;;;;;;;;;;:56;2729:3;;2688:127;;1418:123:54;1512:14;1511:23;;;1418:123::o;793:128:41:-;841:29;850:9;-1:-1:-1;;;841:8:41;:29::i;8837:1637:43:-;8902:7;1305:4:42;8925:5:43;:27;8921:1547;;1305:4:42;8982:42:43;1305:4:42;8997:5:43;:26;8982:14;:42::i;:::-;8975:72;;-1:-1:-1;8968:79:43;;8921:1547;9091:2;9082:5;:11;9078:71;;-1:-1:-1;1568:10:43;9113:21;;9078:71;9175:3;9166:5;:12;9162:62;;-1:-1:-1;9205:4:43;9198:11;;9162:62;9250:3;9241:5;:12;9237:72;;-1:-1:-1;1509:11:43;9273:21;;9237:72;9335:3;9326:5;:12;9322:62;;-1:-1:-1;9365:4:43;9358:11;;9322:62;9410:3;9401:5;:12;9397:72;;-1:-1:-1;1449:12:43;9433:21;;9397:72;9495:3;9486:5;:12;9482:62;;-1:-1:-1;9525:4:43;9518:11;;9482:62;9570:3;9561:5;:12;9557:72;;-1:-1:-1;1388:13:43;9593:21;;9557:72;9655:3;9646:5;:12;9642:62;;-1:-1:-1;9685:4:43;9678:11;;9642:62;9730:3;9721:5;:12;9717:71;;-1:-1:-1;1326:14:43;9753:20;;9717:71;9814:4;9805:5;:13;9801:63;;-1:-1:-1;9845:4:43;9838:11;;9801:63;9890:4;9881:5;:13;9877:72;;-1:-1:-1;1264:15:43;9914:20;;9877:72;9975:4;9966:5;:13;9962:63;;-1:-1:-1;10006:4:43;9999:11;;9962:63;10051:4;10042:5;:13;10038:72;;-1:-1:-1;1201:16:43;10075:20;;10038:72;10136:4;10127:5;:13;10123:63;;-1:-1:-1;10167:4:43;10160:11;;10123:63;10212:4;10203:5;:13;10199:72;;-1:-1:-1;1137:17:43;10236:20;;10199:72;10297:4;10288:5;:13;10284:63;;-1:-1:-1;10328:4:43;10321:11;;10284:63;10373:4;10364:5;:13;10360:72;;-1:-1:-1;1072:18:43;10397:20;;10360:72;-1:-1:-1;10452:5:43;10445:12;;1028:3379:41;-1:-1:-1;;;1091:18:41;3742:79;;;3960:66;3954:4;3947:80;4102:1;4096:4;4089:15;2230:2;2263:18;;;2308;;;2235:4;2304:29;;;3106:1;3197:14;2215:18;;;;3186:26;;;;2356:18;;;;2403;;;2399:29;;3218:2;3214:17;3182:50;3096:4;3102:18;;;;;;3092:29;3088:2;3084:38;3161:72;;;;3156:3;3152:82;4169:4;4162:26;1120:14;;;;;4395:3;;4385:14;10480:633:43;10536:9;-1:-1:-1;;;10561:13:43;;10557:74;;10596:3;10590:9;;;;;10618:2;10613:7;10557:74;10649:7;10644:1;:12;10640:72;;10678:2;10672:8;;;;;10699:2;10694:7;10640:72;10730:7;10725:1;:12;10721:72;;10759:2;10753:8;;;;;10780:2;10775:7;10721:72;10811:7;10806:1;:12;10802:71;;10840:2;10834:8;;;;;10861:1;10856:6;10802:71;10891:6;10886:1;:11;10882:69;;10919:1;10913:7;;;;;10939:1;10934:6;10882:69;10969:6;10964:1;:11;10960:69;;10997:1;10991:7;;;;;11017:1;11012:6;10960:69;11047:6;11042:1;:11;11038:69;;11095:1;11090:6;;10480:633;-1:-1:-1;10480:633:43:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:138:127:-;84:20;;113:33;84:20;113:33;:::i;157:162::-;224:20;;280:13;;273:21;263:32;;253:2;;309:1;306;299:12;324:542;;421:3;414:4;406:6;402:17;398:27;388:2;;443:5;436;429:20;388:2;470:20;;-1:-1:-1;;;;;502:26:127;;499:2;;;531:9;499:2;566:54;614:4;-1:-1:-1;;608:2:127;589:13;;585:27;581:38;566:54;:::i;:::-;645:2;636:7;629:19;691:3;684:4;679:2;671:6;667:15;663:26;660:35;657:2;;;712:5;705;698:20;657:2;781;774:4;766:6;762:17;755:4;746:7;742:18;729:55;804:16;;;822:4;800:27;793:42;;;;808:7;378:488;-1:-1:-1;;378:488:127:o;871:152::-;948:20;;997:1;987:12;;977:2;;1013:1;1010;1003:12;1028:152;1105:20;;1154:1;1144:12;;1134:2;;1170:1;1167;1160:12;1185:259;;1297:2;1285:9;1276:7;1272:23;1268:32;1265:2;;;1318:6;1310;1303:22;1265:2;1362:9;1349:23;1381:33;1408:5;1381:33;:::i;1449:263::-;;1572:2;1560:9;1551:7;1547:23;1543:32;1540:2;;;1593:6;1585;1578:22;1540:2;1630:9;1624:16;1649:33;1676:5;1649:33;:::i;1717:402::-;;;1846:2;1834:9;1825:7;1821:23;1817:32;1814:2;;;1867:6;1859;1852:22;1814:2;1911:9;1898:23;1930:33;1957:5;1930:33;:::i;:::-;1982:5;-1:-1:-1;2039:2:127;2024:18;;2011:32;2052:35;2011:32;2052:35;:::i;:::-;2106:7;2096:17;;;1804:315;;;;;:::o;2124:470::-;;;;2270:2;2258:9;2249:7;2245:23;2241:32;2238:2;;;2291:6;2283;2276:22;2238:2;2335:9;2322:23;2354:33;2381:5;2354:33;:::i;:::-;2406:5;-1:-1:-1;2463:2:127;2448:18;;2435:32;2476:35;2435:32;2476:35;:::i;:::-;2228:366;;2530:7;;-1:-1:-1;;;2584:2:127;2569:18;;;;2556:32;;2228:366::o;2599:853::-;;;;;;;;2811:3;2799:9;2790:7;2786:23;2782:33;2779:2;;;2833:6;2825;2818:22;2779:2;2877:9;2864:23;2896:33;2923:5;2896:33;:::i;:::-;2948:5;-1:-1:-1;3005:2:127;2990:18;;2977:32;3018:35;2977:32;3018:35;:::i;:::-;3072:7;-1:-1:-1;3126:2:127;3111:18;;3098:32;;-1:-1:-1;3177:2:127;3162:18;;3149:32;;-1:-1:-1;3233:3:127;3218:19;;3205:33;3282:4;3269:18;;3257:31;;3247:2;;3307:6;3299;3292:22;3247:2;2769:683;;;;-1:-1:-1;2769:683:127;;;;3335:7;3389:3;3374:19;;3361:33;;-1:-1:-1;3441:3:127;3426:19;;;3413:33;;2769:683;-1:-1:-1;;2769:683:127:o;3457:327::-;;;3586:2;3574:9;3565:7;3561:23;3557:32;3554:2;;;3607:6;3599;3592:22;3554:2;3651:9;3638:23;3670:33;3697:5;3670:33;:::i;:::-;3722:5;3774:2;3759:18;;;;3746:32;;-1:-1:-1;;;3544:240:127:o;3789:1437::-;;3945:2;3988;3976:9;3967:7;3963:23;3959:32;3956:2;;;4009:6;4001;3994:22;3956:2;4041:23;;-1:-1:-1;;;;;4113:14:127;;;4110:2;;;4145:6;4137;4130:22;4110:2;4188:6;4177:9;4173:22;4163:32;;4233:7;4226:4;4222:2;4218:13;4214:27;4204:2;;4260:6;4252;4245:22;4204:2;4301;4288:16;4324:88;4339:72;4408:2;4339:72;:::i;:::-;4324:88;:::i;:::-;4446:15;;;4477:12;;;;4509:11;;;4539:4;4570:11;;;4562:20;;4558:29;;4555:42;-1:-1:-1;4552:2:127;;;4615:6;4607;4600:22;4552:2;4642:6;4633:15;;4657:539;4671:2;4668:1;4665:9;4657:539;;;4742:2;4736:3;4727:7;4723:17;4719:26;4716:2;;;4763:6;4755;4748:22;4716:2;4805;4799:9;4851:2;4843:6;4839:15;4908:6;4896:10;4893:22;4888:2;4876:10;4873:18;4870:46;4867:2;;;4919:9;4867:2;4943:22;;4993:32;5021:3;4993:32;:::i;:::-;4978:48;;5076:12;;;5063:26;5046:15;;;5039:51;5103:19;;4689:1;4682:9;;;;;5142:12;;;;5174;;;;4657:539;;;-1:-1:-1;5215:5:127;;3925:1301;-1:-1:-1;;;;;;;;;3925:1301:127:o;5231:1522::-;;5383:2;5426;5414:9;5405:7;5401:23;5397:32;5394:2;;;5447:6;5439;5432:22;5394:2;5479:23;;-1:-1:-1;;;;;5551:14:127;;;5548:2;;;5583:6;5575;5568:22;5548:2;5626:6;5615:9;5611:22;5601:32;;5671:7;5664:4;5660:2;5656:13;5652:27;5642:2;;5698:6;5690;5683:22;5642:2;5739;5726:16;5762:88;5777:72;5846:2;5777:72;:::i;5762:88::-;5884:15;;;5915:12;;;;5947:11;;;5977:4;6008:11;;;6000:20;;5996:29;;5993:42;-1:-1:-1;5990:2:127;;;6053:6;6045;6038:22;5990:2;6080:6;6071:15;;6095:628;6109:2;6106:1;6103:9;6095:628;;;6180:2;6174:3;6165:7;6161:17;6157:26;6154:2;;;6201:6;6193;6186:22;6154:2;6233;6268;6262:9;6314:2;6306:6;6302:15;6371:6;6359:10;6356:22;6351:2;6339:10;6336:18;6333:46;6330:2;;;6382:9;6330:2;6406:22;;6456:32;6484:3;6456:32;:::i;:::-;6441:48;;6539:12;;;6526:26;6509:15;;;6502:51;6603:12;;;6590:26;6573:15;;;6566:51;;;;6630:19;;6127:1;6120:9;;;;;6669:12;;;;6701;;;;6095:628;;6758:192;;6867:2;6855:9;6846:7;6842:23;6838:32;6835:2;;;6888:6;6880;6873:22;6835:2;6916:28;6934:9;6916:28;:::i;6955:1695::-;;;;;;;;7203:3;7191:9;7182:7;7178:23;7174:33;7171:2;;;7225:6;7217;7210:22;7171:2;7266:9;7253:23;7243:33;;7295:2;7347;7336:9;7332:18;7319:32;7360:33;7387:5;7360:33;:::i;:::-;7412:5;-1:-1:-1;7469:2:127;7454:18;;7441:32;7482:35;7441:32;7482:35;:::i;:::-;7536:7;-1:-1:-1;7594:2:127;7579:18;;7566:32;-1:-1:-1;;;;;7647:14:127;;;7644:2;;;7679:6;7671;7664:22;7644:2;7722:6;7711:9;7707:22;7697:32;;7767:7;7760:4;7756:2;7752:13;7748:27;7738:2;;7794:6;7786;7779:22;7738:2;7835;7822:16;7858:88;7873:72;7942:2;7873:72;:::i;7858:88::-;7968:3;7992:2;7987:3;7980:15;8020:2;8015:3;8011:12;8004:19;;8051:2;8047;8043:11;8100:7;8095:2;8089;8085;8081:11;8077:2;8073:20;8069:29;8066:42;8063:2;;;8126:6;8118;8111:22;8063:2;8153:6;8144:15;;8168:163;8182:2;8179:1;8176:9;8168:163;;;8239:17;;8227:30;;8200:1;8193:9;;;;;8277:12;;;;8309;;8168:163;;;-1:-1:-1;8350:5:127;-1:-1:-1;;;8402:3:127;8387:19;;8374:33;;-1:-1:-1;8454:3:127;8439:19;;8426:33;;-1:-1:-1;8512:3:127;8497:19;;8484:33;;-1:-1:-1;8529:16:127;;;8526:2;;;8563:6;8555;8548:22;8526:2;;;8591:53;8636:7;8625:8;8614:9;8610:24;8591:53;:::i;:::-;8581:63;;;7161:1489;;;;;;;;;;:::o;8655:306::-;;8766:2;8754:9;8745:7;8741:23;8737:32;8734:2;;;8787:6;8779;8772:22;8734:2;8818:23;;-1:-1:-1;;;;;;8870:32:127;;8860:43;;8850:2;;8922:6;8914;8907:22;9255:219;;9381:2;9369:9;9360:7;9356:23;9352:32;9349:2;;;9402:6;9394;9387:22;9349:2;9430:38;9458:9;9430:38;:::i;9479:193::-;;9601:2;9589:9;9580:7;9576:23;9572:32;9569:2;;;9622:6;9614;9607:22;9569:2;-1:-1:-1;9650:16:127;;9559:113;-1:-1:-1;9559:113:127:o;9677:847::-;;9817:2;9805:9;9796:7;9792:23;9788:32;9785:2;;;9838:6;9830;9823:22;9785:2;9876;9870:9;9918:2;9906:15;;-1:-1:-1;;;;;9936:34:127;;9972:22;;;9933:62;9930:2;;;9998:9;9930:2;10025;10018:22;10064:28;10082:9;10064:28;:::i;:::-;10049:44;;10143:2;10128:18;;10115:32;-1:-1:-1;;;;;10176:44:127;;10166:55;;10156:2;;10240:6;10232;10225:22;10156:2;10277;10265:15;;10258:30;10340:2;10325:18;;10312:32;-1:-1:-1;;;;;10375:48:127;;10363:61;;10353:2;;10443:6;10435;10428:22;10353:2;10480;10468:15;;10461:32;10472:6;9775:749;-1:-1:-1;;;9775:749:127:o;10529:1351::-;;;;10705:2;10693:9;10684:7;10680:23;10676:32;10673:2;;;10726:6;10718;10711:22;10673:2;10758:23;;-1:-1:-1;;;;;10830:14:127;;;10827:2;;;10862:6;10854;10847:22;10827:2;10905:6;10894:9;10890:22;10880:32;;10931:6;10971:2;10966;10957:7;10953:16;10949:25;10946:2;;;10992:6;10984;10977:22;10946:2;11023:18;11038:2;11023:18;:::i;:::-;11010:31;;11064;11092:2;11064:31;:::i;:::-;11057:5;11050:46;11128:33;11157:2;11153;11149:11;11128:33;:::i;:::-;11123:2;11116:5;11112:14;11105:57;11194:33;11223:2;11219;11215:11;11194:33;:::i;:::-;11189:2;11182:5;11178:14;11171:57;11281:2;11277;11273:11;11260:25;11255:2;11248:5;11244:14;11237:49;11340:3;11336:2;11332:12;11319:26;11313:3;11306:5;11302:15;11295:51;11400:3;11396:2;11392:12;11379:26;11373:3;11366:5;11362:15;11355:51;11439:34;11468:3;11464:2;11460:12;11439:34;:::i;:::-;11433:3;11426:5;11422:15;11415:59;11507:34;11536:3;11532:2;11528:12;11507:34;:::i;:::-;11501:3;11494:5;11490:15;11483:59;11561:3;11610:2;11606;11602:11;11589:25;11639:2;11629:8;11626:16;11623:2;;;11660:6;11652;11645:22;11623:2;11701:46;11739:7;11728:8;11724:2;11720:17;11701:46;:::i;:::-;11685:14;;;11678:70;;;;-1:-1:-1;11689:5:127;11819:2;11804:18;;11791:32;;-1:-1:-1;11870:2:127;11855:18;;;11842:32;;10663:1217;-1:-1:-1;;;;;10663:1217:127:o;11885:190::-;;11997:2;11985:9;11976:7;11972:23;11968:32;11965:2;;;12018:6;12010;12003:22;11965:2;-1:-1:-1;12046:23:127;;11955:120;-1:-1:-1;11955:120:127:o;12279:258::-;;;12408:2;12396:9;12387:7;12383:23;12379:32;12376:2;;;12429:6;12421;12414:22;12376:2;-1:-1:-1;;12457:23:127;;;12527:2;12512:18;;;12499:32;;-1:-1:-1;12366:171:127:o;12542:328::-;;;;12685:2;12673:9;12664:7;12660:23;12656:32;12653:2;;;12706:6;12698;12691:22;12653:2;12747:9;12734:23;12724:33;;12804:2;12793:9;12789:18;12776:32;12766:42;;12827:37;12860:2;12849:9;12845:18;12827:37;:::i;:::-;12817:47;;12643:227;;;;;:::o;12875:447::-;;;;;13049:3;13037:9;13028:7;13024:23;13020:33;13017:2;;;13071:6;13063;13056:22;13017:2;13105:9;13099:16;13089:26;;13155:2;13144:9;13140:18;13134:25;13124:35;;13199:2;13188:9;13184:18;13178:25;13168:35;;13246:2;13235:9;13231:18;13225:25;13259:33;13286:5;13259:33;:::i;:::-;13007:315;;;;-1:-1:-1;13007:315:127;;-1:-1:-1;;13007:315:127:o;13327:443::-;;13424:5;13418:12;13451:6;13446:3;13439:19;13477:4;13506:2;13501:3;13497:12;13490:19;;13543:2;13536:5;13532:14;13564:3;13576:169;13590:6;13587:1;13584:13;13576:169;;;13651:13;;13639:26;;13685:12;;;;13720:15;;;;13612:1;13605:9;13576:169;;;-1:-1:-1;13761:3:127;;13394:376;-1:-1:-1;;;;;13394:376:127:o;13775:133::-;13858:1;13851:5;13848:12;13838:2;;13864:9;13838:2;13884:18;;13828:80::o;13913:273::-;;14096:6;14088;14083:3;14070:33;14122:16;;14147:15;;;14122:16;14060:126;-1:-1:-1;14060:126:127:o;14191:203::-;-1:-1:-1;;;;;14355:32:127;;;;14337:51;;14325:2;14310:18;;14292:102::o;14399:633::-;14568:2;14620:21;;;14690:13;;14593:18;;;14712:22;;;14399:633;;14568:2;14791:15;;;;14765:2;14750:18;;;14399:633;14837:169;14851:6;14848:1;14845:13;14837:169;;;14912:13;;14900:26;;14981:15;;;;14946:12;;;;14873:1;14866:9;14837:169;;;-1:-1:-1;15023:3:127;;14548:484;-1:-1:-1;;;;;;14548:484:127:o;15037:494::-;15217:2;15202:18;;15206:9;15297:6;15037:494;15331:194;15345:4;15342:1;15339:11;15331:194;;;15404:13;;15392:26;;15441:4;15465:12;;;;15500:15;;;;15365:1;15358:9;15331:194;;;15335:3;;;15184:347;;;;:::o;15536:267::-;;15715:2;15704:9;15697:21;15735:62;15793:2;15782:9;15778:18;15770:6;15735:62;:::i;15808:477::-;;16065:2;16054:9;16047:21;16091:62;16149:2;16138:9;16134:18;16126:6;16091:62;:::i;:::-;16201:9;16193:6;16189:22;16184:2;16173:9;16169:18;16162:50;16229;16272:6;16264;16229:50;:::i;16290:187::-;16455:14;;16448:22;16430:41;;16418:2;16403:18;;16385:92::o;16482:329::-;16703:14;;16696:22;16678:41;;16750:2;16735:18;;16728:34;;;;16793:2;16778:18;;16771:34;16666:2;16651:18;;16633:178::o;16816:177::-;16962:25;;;16950:2;16935:18;;16917:76::o;16998:290::-;17188:25;;;-1:-1:-1;;;;;17249:32:127;17244:2;17229:18;;17222:60;17176:2;17161:18;;17143:145::o;17975:595::-;18278:25;;;18334:2;18319:18;;18312:34;;;;18377:2;18362:18;;18355:34;;;;18420:2;18405:18;;18398:34;;;;18463:3;18448:19;;18441:35;18507:3;18492:19;;18485:35;18551:3;18536:19;;18529:35;18265:3;18250:19;;18232:338::o;18575:541::-;18852:25;;;18908:2;18893:18;;18886:34;;;;18951:2;18936:18;;18929:34;;;;18994:2;18979:18;;18972:34;19050:14;19043:22;19037:3;19022:19;;19015:51;19097:3;19082:19;;19075:35;18839:3;18824:19;;18806:310::o;19121:385::-;19368:25;;;19356:2;19341:18;;19402:55;19453:2;19438:18;;19430:6;19402:55;:::i;:::-;19493:6;19488:2;19477:9;19473:18;19466:34;19323:183;;;;;;:::o;19511:457::-;19787:25;;;19774:3;19759:19;;19821:55;19872:2;19857:18;;19849:6;19821:55;:::i;:::-;19907:2;19892:18;;19885:34;;;;19950:2;19935:18;19928:34;19741:227;;-1:-1:-1;;19741:227:127:o;19973:574::-;;20270:3;20259:9;20255:19;20247:27;;20301:6;20290:9;20283:25;20317:62;20375:2;20364:9;20360:18;20351:6;20345:13;20317:62;:::i;:::-;20433:2;20421:15;;20415:22;20410:2;20395:18;;;20388:50;;;;20480:15;;;20474:22;20469:2;20454:18;;20447:50;20528:3;20513:19;20506:35;20237:310;;-1:-1:-1;20237:310:127:o;20552:603::-;;20693:2;20722;20711:9;20704:21;20754:6;20748:13;20797:6;20792:2;20781:9;20777:18;20770:34;20822:4;20835:140;20849:6;20846:1;20843:13;20835:140;;;20944:14;;;20940:23;;20934:30;20910:17;;;20929:2;20906:26;20899:66;20864:10;;20835:140;;;20993:6;20990:1;20987:13;20984:2;;;21063:4;21058:2;21049:6;21038:9;21034:22;21030:31;21023:45;20984:2;-1:-1:-1;21139:2:127;21118:15;-1:-1:-1;;21114:29:127;21099:45;;;;21146:2;21095:54;;20673:482;-1:-1:-1;;;20673:482:127:o;21160:462::-;21394:13;;21387:21;21380:29;21362:48;;21470:4;21458:17;;;21452:24;-1:-1:-1;;;;;21448:63:127;21426:20;;;21419:93;21572:4;21560:17;;;21554:24;-1:-1:-1;;;;;21550:65:127;21528:20;;;21521:95;;;;21350:2;21335:18;;21317:305::o;21627:452::-;21843:13;;21912:4;21897:20;;21890:28;21883:36;21865:55;;-1:-1:-1;;;;;21966:1:127;21962:17;;;21958:56;21951:4;21936:20;;21929:86;22057:3;22053:19;22046:4;22031:20;;22024:49;21814:2;21799:18;;21781:298::o;22266:338::-;;22473:6;22462:9;22455:25;22516:2;22511;22500:9;22496:18;22489:30;22536:62;22594:2;22583:9;22579:18;22571:6;22536:62;:::i;22609:319::-;22811:25;;;22867:2;22852:18;;22845:34;;;;22910:2;22895:18;;22888:34;22799:2;22784:18;;22766:162::o;22933:184::-;23105:4;23093:17;;;;23075:36;;23063:2;23048:18;;23030:87::o;23122:242::-;23192:2;23186:9;23222:17;;;23290:22;;;-1:-1:-1;;;;;23254:34:127;;23251:62;23248:2;;;23316:9;23248:2;23343;23336:22;23166:198;;-1:-1:-1;23166:198:127:o;23369:206::-;;-1:-1:-1;;;;;23480:30:127;;23477:2;;;23513:9;23477:2;-1:-1:-1;23564:4:127;23545:17;;;23541:28;;23467:108::o;23580:133::-;-1:-1:-1;;;;;23657:31:127;;23647:42;;23637:2;;23703:1;23700;23693:12", "language": "Solidity", "natspec": {"kind": "dev", "methods": {"DOMAIN_SEPARATOR()": {"details": "See {IERC20Permit-DOMAIN_SEPARATOR}."}, "allowance(address,address)": {"details": "Override to grant the Vault infinite allowance, causing for Pool Tokens to not require approval. This is sound as the Vault already provides authorization mechanisms when initiation token transfers, which this contract inherits."}, "approve(address,uint256)": {"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."}, "balanceOf(address)": {"details": "See {IERC20-balanceOf}."}, "calculateCurrentValues(uint256,uint256,bool)": {"details": "invariant and virtual offsets."}, "changePauseManager(address)": {"notice": "Changes the account that is allowed to pause a pool."}, "decimals()": {"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."}, "decreaseAllowance(address,uint256)": {"details": "Override to allow decreasing allowance by more than the current amount (setting it to zero)"}, "dirtyUninitializedOracleSamples(uint256,uint256)": {"details": "Manually dirty oracle sample storage slots with dummy data, to reduce the gas cost of the future swaps that will initialize them. This function is only useful before the oracle has been fully initialized. `endIndex` is non-inclusive."}, "enableOracle()": {"details": "Balancer Governance can always enable the Oracle, even if it was originally not enabled. This allows for Pools that unexpectedly drive much more volume and liquidity than expected to serve as Price Oracles. Note that the Oracle can only be enabled - it can never be disabled."}, "getActionId(bytes4)": {"details": "Returns the action identifier associated with the external function described by `selector`."}, "getInvariant()": {"details": "Returns the current value of the invariant."}, "getLargestSafeQueryWindow()": {"details": "Returns largest time window that can be safely queried, where 'safely' means the Oracle is guaranteed to be able to produce a result and not revert. If a query has a non-zero `ago` value, then `secs + ago` (the oldest point in time) must be smaller than this value for 'safe' queries."}, "getLatest(uint8)": {"details": "Returns latest sample of `variable`. Prices are represented as 18 decimal fixed point values."}, "getPastAccumulators((uint8,uint256)[])": {"details": "Returns the accumulators corresponding to each of `queries`."}, "getPausedState()": {"details": "Returns the current contract pause status, as well as the end times of the Pause Window and Buffer Period."}, "getRate()": {"details": "This function returns the appreciation of one BPT relative to the underlying tokens. This starts at 1 when the pool is created and grows over time"}, "getSample(uint256)": {"details": "Returns the raw data of the sample at `index`."}, "getSqrtParameters()": {"details": "Returns sqrtAlpha and sqrtBeta (square roots of lower and upper price bounds of p_x respectively)"}, "getTimeWeightedAverage((uint8,uint256,uint256)[])": {"details": "Returns the time average weighted price corresponding to each of `queries`. Prices are represented as 18 decimal fixed point values."}, "getTotalSamples()": {"details": "Returns the total number of samples."}, "getVirtualParameters()": {"details": "Returns virtual offsets a and b for reserves x and y respectively, as in (x+a)*(y+b)=L^2"}, "increaseAllowance(address,uint256)": {"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."}, "name()": {"details": "Returns the name of the token."}, "nonces(address)": {"details": "See {IERC20Permit-nonces}."}, "onExitPool(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Called by the Vault when a user calls `IVault.exitPool` to remove liquidity from this Pool. Returns how many tokens the Vault should deduct from the Pool's balances, as well as the amount of protocol fees the Pool owes to the Vault. The Vault will then take tokens from the Pool's balances and send them to `recipient`, as well as collect the reported amount in protocol fees, which the Pool should calculate based on `protocolSwapFeePercentage`. Protocol fees are charged on exit events to guarantee that users exiting the Pool have paid their share. `sender` is the account performing the exit (typically the pool shareholder), and `recipient` is the account to which the Vault will send the proceeds. `balances` contains the total token balances for each token the Pool registered in the Vault, in the same order that `IVault.getPoolTokens` would return. `lastChangeBlock` is the last block in which *any* of the Pool's registered tokens last changed its total balance. `userData` contains any pool-specific instructions needed to perform the calculations, such as the type of exit (e.g., proportional given an amount of pool shares, single-asset, multi-asset, etc.) Contracts implementing this function should check that the caller is indeed the Vault before performing any state-changing operations, such as burning pool shares."}, "onJoinPool(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Called by the Vault when a user calls `IVault.joinPool` to add liquidity to this Pool. Returns how many of each registered token the user should provide, as well as the amount of protocol fees the Pool owes to the Vault. The Vault will then take tokens from `sender` and add them to the Pool's balances, as well as collect the reported amount in protocol fees, which the pool should calculate based on `protocolSwapFeePercentage`. Protocol fees are reported and charged on join events so that the Pool is free of debt whenever new users join. `sender` is the account performing the join (from which tokens will be withdrawn), and `recipient` is the account designated to receive any benefits (typically pool shares). `balances` contains the total balances for each token the Pool registered in the Vault, in the same order that `IVault.getPoolTokens` would return. `lastChangeBlock` is the last block in which *any* of the Pool's registered tokens last changed its total balance. `userData` contains any pool-specific instructions needed to perform the calculations, such as the type of join (e.g., proportional given an amount of pool shares, single-asset, multi-asset, etc.) Contracts implementing this function should check that the caller is indeed the Vault before performing any state-changing operations, such as minting pool shares."}, "pause()": {"notice": "Pauses the pool. Can only be called by the pause manager."}, "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {"details": "See {IERC20Permit-permit}."}, "queryExit(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Returns the amount of BPT that would be burned from `sender` if the `onExitPool` hook were called by the Vault with the same arguments, along with the number of tokens `recipient` would receive. This function is not meant to be called directly, but rather from a helper contract that fetches current Vault data, such as the protocol swap fee percentage and Pool balances. Like `IVault.queryBatchSwap`, this function is not view due to internal implementation details: the caller must explicitly use eth_call instead of eth_sendTransaction."}, "queryJoin(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Returns the amount of BPT that would be granted to `recipient` if the `onJoinPool` hook were called by the Vault with the same arguments, along with the number of tokens `sender` would have to supply. This function is not meant to be called directly, but rather from a helper contract that fetches current Vault data, such as the protocol swap fee percentage and Pool balances. Like `IVault.queryBatchSwap`, this function is not view due to internal implementation details: the caller must explicitly use eth_call instead of eth_sendTransaction."}, "symbol()": {"details": "Returns the symbol of the token, usually a shorter version of the name."}, "totalSupply()": {"details": "See {IERC20-totalSupply}."}, "transfer(address,uint256)": {"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."}, "transferFrom(address,address,uint256)": {"details": "Override to allow for 'infinite allowance' and let the token owner use `transferFrom` with no self-allowance"}, "unpause()": {"notice": "Unpauses the pool. Can only be called by the pause manager."}}, "version": 1}, "offset": [1423, 29943], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x327 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x707DCD1E GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x9B02CDDE GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xB48B5B40 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD5C096C4 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD5C096C4 EQ PUSH2 0x69B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6AE JUMPI DUP1 PUSH4 0xF89F27ED EQ PUSH2 0x6C1 JUMPI DUP1 PUSH4 0xFFD088EB EQ PUSH2 0x6C9 JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0xB48B5B40 EQ PUSH2 0x678 JUMPI DUP1 PUSH4 0xC0FF1A15 EQ PUSH2 0x680 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x688 JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x642 JUMPI DUP1 PUSH4 0xAAABADC5 EQ PUSH2 0x655 JUMPI DUP1 PUSH4 0xABD13AFE EQ PUSH2 0x65D JUMPI DUP1 PUSH4 0xB10BE739 EQ PUSH2 0x665 JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0x9B02CDDE EQ PUSH2 0x614 JUMPI DUP1 PUSH4 0x9D2C110C EQ PUSH2 0x61C JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x62F JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x893D20E8 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x5F4 JUMPI DUP1 PUSH4 0x8D928AF8 EQ PUSH2 0x5FC JUMPI DUP1 PUSH4 0x8DD9F89D EQ PUSH2 0x604 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x60C JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x5C6 JUMPI DUP1 PUSH4 0x851C1BB3 EQ PUSH2 0x5CE JUMPI DUP1 PUSH4 0x87EC6817 EQ PUSH2 0x5E1 JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0x707DCD1E EQ PUSH2 0x544 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x559 JUMPI DUP1 PUSH4 0x74F3B009 EQ PUSH2 0x56C JUMPI DUP1 PUSH4 0x76E54A46 EQ PUSH2 0x58D JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x5A0 JUMPI DUP1 PUSH4 0x8002DF18 EQ PUSH2 0x5B3 JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0x38FFF2D0 GT PUSH2 0x277 JUMPI DUP1 PUSH4 0x4A6B0B15 GT PUSH2 0x230 JUMPI DUP1 PUSH4 0x60D1507C GT PUSH2 0x20A JUMPI DUP1 PUSH4 0x60D1507C EQ PUSH2 0x4EE JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x514 JUMPI DUP1 PUSH4 0x6B843239 EQ PUSH2 0x51C JUMPI DUP1 PUSH4 0x6D785A87 EQ PUSH2 0x53C JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0x4A6B0B15 EQ PUSH2 0x4AB JUMPI DUP1 PUSH4 0x55C67628 EQ PUSH2 0x4C5 JUMPI DUP1 PUSH4 0x6028BFD4 EQ PUSH2 0x4CD JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0x38FFF2D0 EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0x3AEAE0D3 EQ PUSH2 0x457 JUMPI DUP1 PUSH4 0x3C4DD5BB EQ PUSH2 0x46C JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0x44BBDB55 EQ PUSH2 0x496 JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0x1DCCD830 GT PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x313CE567 GT PUSH2 0x2BE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0x3331BC36 EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x421 JUMPI DUP1 PUSH4 0x38E9922E EQ PUSH2 0x429 JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0x1DCCD830 EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3DE JUMPI DUP1 PUSH4 0x292C914A EQ PUSH2 0x3F1 JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0xE608B30 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x1C0DE051 EQ PUSH2 0x3A7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x334 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x5272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35D PUSH2 0x358 CALLDATASIZE PUSH1 0x4 PUSH2 0x4AE0 JUMP JUMPDEST PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x5154 JUMP JUMPDEST PUSH2 0x37D PUSH2 0x378 CALLDATASIZE PUSH1 0x4 PUSH2 0x49BB JUMP JUMPDEST PUSH2 0x77E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37D PUSH2 0x38D CALLDATASIZE PUSH1 0x4 PUSH2 0x4CAA JUMP JUMPDEST PUSH2 0x82F JUMP JUMPDEST PUSH2 0x39A PUSH2 0x843 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x5177 JUMP JUMPDEST PUSH2 0x3AF PUSH2 0x849 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x515F JUMP JUMPDEST PUSH2 0x3D1 PUSH2 0x3CC CALLDATASIZE PUSH1 0x4 PUSH2 0x4BDE JUMP JUMPDEST PUSH2 0x872 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x511C JUMP JUMPDEST PUSH2 0x35D PUSH2 0x3EC CALLDATASIZE PUSH1 0x4 PUSH2 0x4A2B JUMP JUMPDEST PUSH2 0x995 JUMP JUMPDEST PUSH2 0x37D PUSH2 0xA09 JUMP JUMPDEST PUSH2 0x401 PUSH2 0xA3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x5354 JUMP JUMPDEST PUSH2 0x37D PUSH2 0x41C CALLDATASIZE PUSH1 0x4 PUSH2 0x4FA6 JUMP JUMPDEST PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x39A PUSH2 0xABE JUMP JUMPDEST PUSH2 0x37D PUSH2 0x437 CALLDATASIZE PUSH1 0x4 PUSH2 0x4F8E JUMP JUMPDEST PUSH2 0xACD JUMP JUMPDEST PUSH2 0x39A PUSH2 0xAE6 JUMP JUMPDEST PUSH2 0x35D PUSH2 0x452 CALLDATASIZE PUSH1 0x4 PUSH2 0x4AE0 JUMP JUMPDEST PUSH2 0xB0A JUMP JUMPDEST PUSH2 0x45F PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x52C5 JUMP JUMPDEST PUSH2 0x47F PUSH2 0x47A CALLDATASIZE PUSH1 0x4 PUSH2 0x4FC7 JUMP JUMPDEST PUSH2 0xB90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x533E JUMP JUMPDEST PUSH2 0x37D PUSH2 0xBE3 JUMP JUMPDEST PUSH2 0x49E PUSH2 0xCD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x5093 JUMP JUMPDEST PUSH2 0x4B3 PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x51C7 JUMP JUMPDEST PUSH2 0x39A PUSH2 0xD42 JUMP JUMPDEST PUSH2 0x4E0 PUSH2 0x4DB CALLDATASIZE PUSH1 0x4 PUSH2 0x4CC4 JUMP JUMPDEST PUSH2 0xD4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP3 SWAP2 SWAP1 PUSH2 0x5325 JUMP JUMPDEST PUSH2 0x501 PUSH2 0x4FC CALLDATASIZE PUSH1 0x4 PUSH2 0x4F8E JUMP JUMPDEST PUSH2 0xD80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5197 JUMP JUMPDEST PUSH2 0x39A PUSH2 0xDC9 JUMP JUMPDEST PUSH2 0x52F PUSH2 0x52A CALLDATASIZE PUSH1 0x4 PUSH2 0x4B0B JUMP JUMPDEST PUSH2 0xDEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x50A7 JUMP JUMPDEST PUSH2 0x49E PUSH2 0xEA4 JUMP JUMPDEST PUSH2 0x54C PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x50EB JUMP JUMPDEST PUSH2 0x39A PUSH2 0x567 CALLDATASIZE PUSH1 0x4 PUSH2 0x49BB JUMP JUMPDEST PUSH2 0xEC3 JUMP JUMPDEST PUSH2 0x57F PUSH2 0x57A CALLDATASIZE PUSH1 0x4 PUSH2 0x4CC4 JUMP JUMPDEST PUSH2 0xEE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP3 SWAP2 SWAP1 PUSH2 0x512F JUMP JUMPDEST PUSH2 0x37D PUSH2 0x59B CALLDATASIZE PUSH1 0x4 PUSH2 0x4E1A JUMP JUMPDEST PUSH2 0xF87 JUMP JUMPDEST PUSH2 0x39A PUSH2 0x5AE CALLDATASIZE PUSH1 0x4 PUSH2 0x49BB JUMP JUMPDEST PUSH2 0x10AE JUMP JUMPDEST PUSH2 0x37D PUSH2 0x5C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x49BB JUMP JUMPDEST PUSH2 0x10C9 JUMP JUMPDEST PUSH2 0x37D PUSH2 0x11AF JUMP JUMPDEST PUSH2 0x39A PUSH2 0x5DC CALLDATASIZE PUSH1 0x4 PUSH2 0x4DC0 JUMP JUMPDEST PUSH2 0x1267 JUMP JUMPDEST PUSH2 0x4E0 PUSH2 0x5EF CALLDATASIZE PUSH1 0x4 PUSH2 0x4CC4 JUMP JUMPDEST PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0x49E PUSH2 0x12E5 JUMP JUMPDEST PUSH2 0x49E PUSH2 0x1309 JUMP JUMPDEST PUSH2 0x3D1 PUSH2 0x132D JUMP JUMPDEST PUSH2 0x334 PUSH2 0x13C7 JUMP JUMPDEST PUSH2 0x39A PUSH2 0x1428 JUMP JUMPDEST PUSH2 0x39A PUSH2 0x62A CALLDATASIZE PUSH1 0x4 PUSH2 0x4E98 JUMP JUMPDEST PUSH2 0x142E JUMP JUMPDEST PUSH2 0x35D PUSH2 0x63D CALLDATASIZE PUSH1 0x4 PUSH2 0x4AE0 JUMP JUMPDEST PUSH2 0x15F4 JUMP JUMPDEST PUSH2 0x35D PUSH2 0x650 CALLDATASIZE PUSH1 0x4 PUSH2 0x4AE0 JUMP JUMPDEST PUSH2 0x1632 JUMP JUMPDEST PUSH2 0x49E PUSH2 0x163F JUMP JUMPDEST PUSH2 0x49E PUSH2 0x1649 JUMP JUMPDEST PUSH2 0x39A PUSH2 0x673 CALLDATASIZE PUSH1 0x4 PUSH2 0x4DE8 JUMP JUMPDEST PUSH2 0x1658 JUMP JUMPDEST PUSH2 0x39A PUSH2 0x16ED JUMP JUMPDEST PUSH2 0x39A PUSH2 0x16F3 JUMP JUMPDEST PUSH2 0x37D PUSH2 0x696 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A6B JUMP JUMPDEST PUSH2 0x172E JUMP JUMPDEST PUSH2 0x57F PUSH2 0x6A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x4CC4 JUMP JUMPDEST PUSH2 0x189E JUMP JUMPDEST PUSH2 0x39A PUSH2 0x6BC CALLDATASIZE PUSH1 0x4 PUSH2 0x49F3 JUMP JUMPDEST PUSH2 0x19BE JUMP JUMPDEST PUSH2 0x3D1 PUSH2 0x19FB JUMP JUMPDEST PUSH2 0x39A PUSH2 0x1A05 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x75D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x732 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x75D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x740 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x774 CALLER DUP5 DUP5 PUSH2 0x1A8F JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x1B9BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CF SWAP2 SWAP1 PUSH2 0x5272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xB8FD9AFC34C38FCD13B9A3B7646482EB1FDDCEFB40AF2C70609972816EBA3208 SWAP1 PUSH2 0x824 SWAP1 DUP4 SWAP1 PUSH2 0x5093 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x837 PUSH2 0x1AF1 JUMP JUMPDEST PUSH2 0x840 DUP2 PUSH2 0x1B1F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x856 PUSH2 0x1B9B JUMP JUMPDEST ISZERO SWAP3 POP PUSH2 0x861 PUSH2 0x1BB8 JUMP JUMPDEST SWAP2 POP PUSH2 0x86B PUSH2 0x1BDC JUMP JUMPDEST SWAP1 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x88B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8B5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH2 0x8C2 PUSH2 0x1C00 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x98E JUMPI PUSH20 0x0 PUSH4 0x79EAEF82 PUSH1 0x8 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x8F8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5239 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x937 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x94B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x96F SWAP2 SWAP1 PUSH2 0x4E02 JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x97B JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x8C7 JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9A2 DUP6 CALLER PUSH2 0x19BE JUMP JUMPDEST SWAP1 POP PUSH2 0x9C6 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND EQ DUP1 PUSH2 0x9BE JUMPI POP DUP4 DUP3 LT ISZERO JUMPDEST PUSH2 0x19E PUSH2 0x1C0D JUMP JUMPDEST PUSH2 0x9D1 DUP6 DUP6 DUP6 PUSH2 0x1C1B JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x9EC JUMPI POP PUSH1 0x0 NOT DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x9FE JUMPI PUSH2 0x9FE DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x1A8F JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xA11 PUSH2 0x1D03 JUMP JUMPDEST PUSH2 0xA19 PUSH2 0x1AF1 JUMP JUMPDEST PUSH2 0xA23 PUSH1 0x1 PUSH2 0x1D16 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA2D PUSH2 0x843 JUMP JUMPDEST GT ISZERO PUSH2 0xA3B JUMPI PUSH2 0xA3B PUSH2 0x1D56 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xA61 DUP2 DUP4 LT DUP1 ISZERO PUSH2 0xA5A JUMPI POP PUSH2 0x400 DUP3 GT ISZERO JUMPDEST PUSH1 0x64 PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA76 PUSH1 0x1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1D9E JUMP JUMPDEST SWAP1 POP DUP3 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xAB8 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xA9A SWAP1 PUSH2 0x1DFE JUMP JUMPDEST PUSH2 0xAB0 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE JUMPDEST PUSH1 0x1 ADD PUSH2 0xA7A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC8 PUSH2 0x1E0A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAD5 PUSH2 0x1AF1 JUMP JUMPDEST PUSH2 0xADD PUSH2 0x1D03 JUMP JUMPDEST PUSH2 0x840 DUP2 PUSH2 0x1EC8 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x774 SWAP2 DUP6 SWAP1 PUSH2 0xB40 SWAP1 DUP7 PUSH2 0x1F31 JUMP JUMPDEST PUSH2 0x1A8F JUMP JUMPDEST PUSH2 0xB4D PUSH2 0x48C9 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0xB SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP3 MSTORE PUSH2 0x100 DUP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xB9F DUP6 PUSH2 0x1F43 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xBAD DUP7 ISZERO PUSH2 0x1F43 JUMP JUMPDEST SWAP1 POP PUSH2 0xBB9 DUP9 DUP4 PUSH2 0x1F97 JUMP JUMPDEST SWAP8 POP PUSH2 0xBC5 DUP8 DUP3 PUSH2 0x1F97 JUMP JUMPDEST SWAP7 POP PUSH2 0xBD2 DUP9 DUP9 DUP9 PUSH2 0x1FA3 JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP POP POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x3737BA103830BAB9B29036B0B730B3B2B9 PUSH1 0x79 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC67 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC4F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xC94 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0xCAD PUSH1 0x0 PUSH2 0x837 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x215385C8BFC731925EC8068D7BAA50F6B6F34417CC7804F7273DC2C0B3DB2790 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x9 SLOAD SWAP1 POP PUSH2 0xD00 DUP2 PUSH2 0x2072 JUMP JUMPDEST SWAP7 POP PUSH2 0xD0B DUP2 PUSH2 0x207E JUMP JUMPDEST SWAP6 POP PUSH2 0xD16 DUP2 PUSH2 0x208B JUMP JUMPDEST SWAP5 POP PUSH2 0xD21 DUP2 PUSH2 0x2098 JUMP JUMPDEST SWAP4 POP PUSH2 0xD2C DUP2 PUSH2 0x20A5 JUMP JUMPDEST SWAP3 POP PUSH2 0xD37 DUP2 PUSH2 0x20B2 JUMP JUMPDEST SWAP2 POP POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC8 PUSH1 0x9 SLOAD PUSH2 0x20B2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0xD5F DUP7 MLOAD PUSH1 0x2 PUSH2 0x20BF JUMP JUMPDEST PUSH2 0xD74 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x20CC PUSH2 0x21E0 PUSH2 0x225E JUMP JUMPDEST SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xD9B PUSH2 0x400 DUP10 LT PUSH2 0x13B PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA6 DUP10 PUSH2 0x2371 JUMP JUMPDEST SWAP1 POP PUSH2 0xDB1 DUP2 PUSH2 0x2383 JUMP JUMPDEST SWAP6 SWAP16 SWAP5 SWAP15 POP SWAP3 SWAP13 POP SWAP1 SWAP11 POP SWAP9 POP SWAP7 POP SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC8 PUSH2 0xDD6 PUSH2 0x843 JUMP JUMPDEST PUSH2 0xDE8 PUSH2 0xDE1 PUSH2 0x16F3 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x23E6 JUMP JUMPDEST SWAP1 PUSH2 0x240A JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0xE07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE31 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH2 0xE3E PUSH2 0x1C00 JUMP JUMPDEST SWAP1 POP PUSH2 0xE48 PUSH2 0x48E9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xE9C JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xE60 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP PUSH2 0xE7D DUP3 PUSH1 0x0 ADD MLOAD DUP5 DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x2464 JUMP JUMPDEST DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xE89 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0xE4B JUMP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xEBB PUSH2 0x4900 JUMP JUMPDEST PUSH2 0xAC8 PUSH2 0x24FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP9 PUSH2 0xF0C PUSH2 0xEF1 PUSH2 0x1309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH1 0xCD PUSH2 0x1C0D JUMP JUMPDEST PUSH2 0xF21 PUSH2 0xF17 PUSH2 0xAE6 JUMP JUMPDEST DUP3 EQ PUSH2 0x1F4 PUSH2 0x1C0D JUMP JUMPDEST PUSH2 0xF2A DUP8 PUSH2 0x2523 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xF3E DUP14 DUP14 DUP14 DUP14 DUP14 DUP14 DUP14 PUSH2 0x20CC JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xF4E DUP13 DUP5 PUSH2 0x2585 JUMP JUMPDEST PUSH2 0xF57 DUP3 PUSH2 0x21E0 JUMP JUMPDEST PUSH2 0xF60 DUP2 PUSH2 0x21E0 JUMP JUMPDEST PUSH2 0xF68 PUSH2 0x1B9B JUMP JUMPDEST ISZERO PUSH2 0xF75 JUMPI PUSH2 0xF75 PUSH2 0x1D56 JUMP JUMPDEST SWAP1 SWAP13 SWAP1 SWAP12 POP SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x1B9BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CF SWAP2 SWAP1 PUSH2 0x5272 JUMP JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH16 0x1C1BDBDB081A5CC81D5B98D85C1C1959 PUSH1 0x82 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x1024 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CF SWAP2 SWAP1 PUSH2 0x5272 JUMP JUMPDEST POP DUP1 MLOAD PUSH1 0xB DUP1 SLOAD PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP1 DUP7 ADD MLOAD PUSH1 0xFF NOT SWAP1 SWAP4 AND SWAP5 ISZERO ISZERO SWAP5 SWAP1 SWAP5 OR PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL OR PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x80 SHL SWAP2 SWAP1 SWAP3 AND MUL OR DUP2 SSTORE SWAP1 MLOAD PUSH32 0x2ABF5970D7BC1A2B36EAAE52DD2CC353EDB0337C7284EF8A01973081B4E04424 SWAP2 PUSH2 0x824 SWAP2 PUSH2 0x52FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x3737BA103830BAB9B29036B0B730B3B2B9 PUSH1 0x79 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLER DUP3 EQ PUSH2 0x114E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0xC67 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC4F JUMP JUMPDEST POP PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 DUP5 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD PUSH32 0x1FFCCD1FA96F4FB3415DF8048A0FD107344E262D2D246C85105E2A3F8F3E8198 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x3737BA103830BAB9B29036B0B730B3B2B9 PUSH1 0x79 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1231 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0xC67 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC4F JUMP JUMPDEST POP PUSH2 0x123C PUSH1 0x1 PUSH2 0x837 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x681EACE576127D0553B224436A09801FB47D042942CBFF59D7D4FF04D8FA03D7 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x0 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP5 AND DUP3 DUP5 ADD MSTORE DUP3 MLOAD PUSH1 0x24 DUP2 DUP5 SUB ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x12D0 DUP7 MLOAD PUSH1 0x2 PUSH2 0x20BF JUMP JUMPDEST PUSH2 0xD74 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x258F PUSH2 0x265F PUSH2 0x225E JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1339 PUSH2 0x26C1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE SWAP3 SWAP4 POP SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP2 POP PUSH2 0x1390 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x136C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1381 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH2 0x1FA3 JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x13A0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP5 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x13B4 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD SWAP2 SWAP1 SWAP2 MSTORE MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x75D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x732 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x75D JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1438 PUSH2 0x1D03 JUMP JUMPDEST DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0x1448 PUSH2 0xEF1 PUSH2 0x1309 JUMP JUMPDEST PUSH2 0x1453 PUSH2 0xF17 PUSH2 0xAE6 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP PUSH1 0x0 PUSH2 0x149B DUP3 PUSH2 0x1F43 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x14A9 DUP4 ISZERO PUSH2 0x1F43 JUMP JUMPDEST SWAP1 POP PUSH2 0x14B5 DUP8 DUP4 PUSH2 0x1F97 JUMP JUMPDEST SWAP7 POP PUSH2 0x14C1 DUP7 DUP3 PUSH2 0x1F97 JUMP JUMPDEST SWAP6 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x14D3 DUP11 DUP11 DUP9 PUSH2 0x1FA3 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x151A DUP12 PUSH1 0xA0 ADD MLOAD DUP8 PUSH2 0x14EC JUMPI DUP11 PUSH2 0x14EE JUMP JUMPDEST DUP12 JUMPDEST DUP9 PUSH2 0x14F9 JUMPI DUP13 PUSH2 0x14FB JUMP JUMPDEST DUP12 JUMPDEST DUP10 PUSH2 0x1506 JUMPI DUP5 PUSH2 0x1508 JUMP JUMPDEST DUP6 JUMPDEST DUP11 PUSH2 0x1513 JUMPI DUP7 PUSH2 0x1515 JUMP JUMPDEST DUP6 JUMPDEST PUSH2 0x27AA JUMP JUMPDEST PUSH1 0x0 DUP12 MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1529 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1598 JUMPI PUSH1 0x0 PUSH2 0x1547 PUSH2 0x153C PUSH2 0xD42 JUMP JUMPDEST PUSH1 0x60 DUP15 ADD MLOAD SWAP1 PUSH2 0x2854 JUMP JUMPDEST SWAP1 POP PUSH2 0x1569 PUSH2 0x1563 DUP3 DUP15 PUSH1 0x60 ADD MLOAD PUSH2 0x28A9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x60 DUP14 ADD MSTORE PUSH1 0x0 PUSH2 0x157D DUP14 DUP14 DUP14 DUP8 DUP8 PUSH2 0x28BF JUMP JUMPDEST SWAP1 POP PUSH2 0x1589 DUP2 DUP8 PUSH2 0x28DE JUMP JUMPDEST SWAP10 POP POP POP POP POP POP POP POP POP PUSH2 0x15EC JUMP JUMPDEST PUSH2 0x15A6 DUP12 PUSH1 0x60 ADD MLOAD DUP6 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x60 DUP13 ADD MSTORE PUSH1 0x0 PUSH2 0x15BA DUP13 DUP13 DUP13 DUP7 DUP7 PUSH2 0x28EA JUMP JUMPDEST SWAP1 POP PUSH2 0x15C6 DUP2 DUP8 PUSH2 0x28FD JUMP JUMPDEST SWAP1 POP PUSH2 0x15E2 PUSH2 0x15DB PUSH2 0x15D6 PUSH2 0xD42 JUMP JUMPDEST PUSH2 0x2909 JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x292F JUMP JUMPDEST SWAP9 POP POP POP POP POP POP POP POP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1601 CALLER DUP6 PUSH2 0x19BE JUMP JUMPDEST SWAP1 POP DUP1 DUP4 LT PUSH2 0x161B JUMPI PUSH2 0x1616 CALLER DUP6 PUSH1 0x0 PUSH2 0x1A8F JUMP JUMPDEST PUSH2 0x1628 JUMP JUMPDEST PUSH2 0x1628 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x1A8F JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x774 CALLER DUP5 DUP5 PUSH2 0x1C1B JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC8 PUSH2 0x2995 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0x397BEE0 PUSH1 0x8 DUP5 PUSH2 0x167F PUSH2 0x1C00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x169D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x51F1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x16C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x778 SWAP2 SWAP1 PUSH2 0x4E02 JUMP JUMPDEST PUSH2 0x400 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x16FE PUSH2 0x26C1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x170A PUSH2 0x24FD JUMP JUMPDEST SWAP1 POP PUSH2 0x1727 DUP3 DUP3 PUSH1 0x0 JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH1 0x1 JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x2A0F JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x173C DUP5 TIMESTAMP GT ISZERO PUSH1 0xD1 PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD PUSH32 0x0 DUP2 DUP6 ADD MSTORE DUP1 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP5 DUP12 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD DUP11 SWAP1 MSTORE PUSH1 0xA0 DUP5 ADD DUP6 SWAP1 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP11 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 SWAP1 SWAP5 ADD SWAP1 MSTORE DUP3 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP1 PUSH2 0x17C8 DUP3 PUSH2 0x2A42 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1826 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP PUSH2 0x1868 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1860 JUMPI POP DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1F8 PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP6 ADD SWAP1 SSTORE PUSH2 0x1891 DUP12 DUP12 DUP12 PUSH2 0x1A8F JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP9 PUSH2 0x18AD PUSH2 0xEF1 PUSH2 0x1309 JUMP JUMPDEST PUSH2 0x18B8 PUSH2 0xF17 PUSH2 0xAE6 JUMP JUMPDEST PUSH2 0x18C0 PUSH2 0x1D03 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18CA PUSH2 0x843 JUMP JUMPDEST PUSH2 0x193A JUMPI PUSH2 0x18DA DUP12 DUP12 DUP12 DUP9 PUSH2 0x2A8E JUMP JUMPDEST SWAP5 POP SWAP1 POP PUSH2 0x18EF PUSH3 0xF4240 DUP3 LT ISZERO PUSH1 0xCC PUSH2 0x1C0D JUMP JUMPDEST PUSH2 0x18FD PUSH1 0x0 PUSH3 0xF4240 PUSH2 0x2B18 JUMP JUMPDEST PUSH2 0x190C DUP10 PUSH3 0xF4240 DUP4 SUB PUSH2 0x2B18 JUMP JUMPDEST PUSH2 0x1915 DUP5 PUSH2 0x265F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE SWAP1 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP3 POP PUSH2 0x19A8 JUMP JUMPDEST PUSH2 0x1943 DUP9 PUSH2 0x2523 JUMP JUMPDEST PUSH2 0x1976 DUP8 DUP10 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1954 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP11 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1969 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2B22 JUMP JUMPDEST PUSH2 0x1985 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH2 0x258F JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP SWAP1 POP PUSH2 0x1996 DUP10 DUP3 PUSH2 0x2B18 JUMP JUMPDEST PUSH2 0x199F DUP5 PUSH2 0x265F JUMP JUMPDEST PUSH2 0x19A8 DUP4 PUSH2 0x21E0 JUMP JUMPDEST PUSH2 0x19B0 PUSH2 0x1D56 JUMP JUMPDEST POP POP SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19C8 PUSH2 0x1309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x19EA JUMPI POP PUSH1 0x0 NOT PUSH2 0x778 JUMP JUMPDEST PUSH2 0x19F4 DUP4 DUP4 PUSH2 0x2B27 JUMP JUMPDEST SWAP1 POP PUSH2 0x778 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xAC8 PUSH2 0x2B52 JUMP JUMPDEST PUSH3 0x1DE20 SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x1A16 DUP2 PUSH2 0x2BC1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A28 DUP4 DUP4 PUSH1 0x55 PUSH2 0x1A53 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A28 DUP4 DUP4 PUSH1 0x56 PUSH2 0x1A7A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A4D DUP4 DUP4 GT ISZERO PUSH1 0x1 PUSH2 0x1C0D JUMP JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 SHL NOT DUP5 AND DUP3 DUP5 PUSH2 0x1A69 JUMPI PUSH1 0x0 PUSH2 0x1A6C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND SWAP1 SHL OR SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 SHL NOT SWAP3 SWAP1 SWAP3 AND SWAP2 SHL OR SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B08 PUSH1 0x0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x1267 JUMP JUMPDEST SWAP1 POP PUSH2 0x840 PUSH2 0x1B17 DUP3 CALLER PUSH2 0x2C3A JUMP JUMPDEST PUSH2 0x191 PUSH2 0x1C0D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B3F JUMPI PUSH2 0x1B3A PUSH2 0x1B30 PUSH2 0x1BB8 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x193 PUSH2 0x1C0D JUMP JUMPDEST PUSH2 0x1B54 JUMP JUMPDEST PUSH2 0x1B54 PUSH2 0x1B4A PUSH2 0x1BDC JUMP JUMPDEST TIMESTAMP LT PUSH2 0x1A9 PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH32 0x9E3A5E37224532DEA67B89FACE185703738A228A6E8A23DEE546960180D3BE64 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BA5 PUSH2 0x1BDC JUMP JUMPDEST TIMESTAMP GT DUP1 PUSH2 0xAC8 JUMPI POP POP PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC8 PUSH1 0x9 SLOAD PUSH2 0x2098 JUMP JUMPDEST DUP2 PUSH2 0x1A16 JUMPI PUSH2 0x1A16 DUP2 PUSH2 0x2D3C JUMP JUMPDEST PUSH2 0x1C32 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO ISZERO PUSH2 0x198 PUSH2 0x1C0D JUMP JUMPDEST PUSH2 0x1C49 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x199 PUSH2 0x1C0D JUMP JUMPDEST PUSH2 0x1C54 DUP4 DUP4 DUP4 PUSH2 0x2B22 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1C7A SWAP1 DUP3 PUSH2 0x1A0 PUSH2 0x2D8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1CA9 SWAP1 DUP3 PUSH2 0x1F31 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xA3B PUSH2 0x1D0E PUSH2 0x1B9B JUMP JUMPDEST PUSH2 0x192 PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1D23 SWAP1 DUP3 PUSH2 0x1A1A JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD PUSH32 0x3E350B41E86A8E10F804ADE6D35340D620BE35569CC75AC943E8BB14AB80EAD1 SWAP1 PUSH2 0x824 SWAP1 DUP4 SWAP1 PUSH2 0x5154 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1D62 DUP2 PUSH2 0x20A5 JUMP JUMPDEST ISZERO PUSH2 0x840 JUMPI PUSH2 0x1D7C PUSH2 0x1D75 PUSH1 0xA SLOAD PUSH2 0x2DA5 JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x2DE5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D98 PUSH2 0x1D91 PUSH2 0x1D8C PUSH2 0x843 JUMP JUMPDEST PUSH2 0x2DA5 JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x2DF2 JUMP JUMPDEST PUSH1 0x9 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DAA DUP3 DUP3 PUSH2 0x2E00 JUMP JUMPDEST PUSH2 0x1DB5 DUP5 PUSH1 0x1F PUSH2 0x2E04 JUMP JUMPDEST PUSH2 0x1DC0 DUP7 PUSH1 0x54 PUSH2 0x2E15 JUMP JUMPDEST PUSH2 0x1DCB DUP9 PUSH1 0x6A PUSH2 0x2E04 JUMP JUMPDEST PUSH2 0x1DD6 DUP11 PUSH1 0x9F PUSH2 0x2E15 JUMP JUMPDEST PUSH2 0x1DE1 DUP13 PUSH1 0xB5 PUSH2 0x2E04 JUMP JUMPDEST PUSH2 0x1DEC DUP15 PUSH1 0xEA PUSH2 0x2E15 JUMP JUMPDEST OR OR OR OR OR OR SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x778 DUP3 DUP3 PUSH2 0x2E22 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x1E77 PUSH2 0x2E2C JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1EDB PUSH5 0xE8D4A51000 DUP3 LT ISZERO PUSH1 0xCB PUSH2 0x1C0D JUMP JUMPDEST PUSH2 0x1EF1 PUSH8 0x16345785D8A0000 DUP3 GT ISZERO PUSH1 0xCA PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1EFE SWAP1 DUP3 PUSH2 0x1A2F JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD PUSH32 0xA9BA3FFE0B6C366B81232CAAB38605A0699AD5398D6CCE76F91EE809E322DAFC SWAP1 PUSH2 0x824 SWAP1 DUP4 SWAP1 PUSH2 0x5177 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH2 0x1A28 DUP5 DUP3 LT ISZERO DUP4 PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1F70 JUMPI PUSH32 0x0 PUSH2 0x778 JUMP JUMPDEST POP PUSH32 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A28 DUP4 DUP4 PUSH2 0x23E6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP5 PUSH2 0x1FD5 JUMPI DUP6 PUSH2 0x1FD7 JUMP JUMPDEST DUP7 JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1FE4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP5 PUSH2 0x1FFB JUMPI DUP7 PUSH2 0x1FFD JUMP JUMPDEST DUP6 JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x200A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 PUSH2 0x2020 PUSH2 0x24FD JUMP JUMPDEST SWAP1 POP PUSH2 0x202E DUP3 DUP3 PUSH1 0x0 PUSH2 0x1714 JUMP JUMPDEST SWAP5 POP PUSH1 0x0 PUSH2 0x203C DUP3 DUP8 PUSH2 0x2E30 JUMP JUMPDEST SWAP1 POP DUP7 PUSH2 0x204D JUMPI PUSH1 0x20 DUP2 ADD MLOAD PUSH2 0x2050 JUMP JUMPDEST DUP1 MLOAD JUMPDEST SWAP5 POP DUP7 PUSH2 0x205E JUMPI DUP1 MLOAD PUSH2 0x2064 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD JUMPDEST SWAP4 POP POP POP POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x778 DUP3 DUP3 PUSH2 0x2E64 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x778 DUP3 PUSH1 0x16 PUSH2 0x2E64 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x778 DUP3 PUSH1 0x2C PUSH2 0x2E22 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x778 DUP3 PUSH1 0x4B PUSH2 0x2E8B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x778 DUP3 PUSH1 0x55 PUSH2 0x2E93 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x778 DUP3 PUSH1 0x56 PUSH2 0x2E9D JUMP JUMPDEST PUSH2 0x1A16 DUP2 DUP4 EQ PUSH1 0x67 PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 PUSH2 0x20DB PUSH2 0x24FD JUMP JUMPDEST SWAP1 POP PUSH2 0x20E5 PUSH2 0x1B9B JUMP JUMPDEST ISZERO PUSH2 0x2194 JUMPI PUSH1 0x0 PUSH2 0x2100 DUP10 DUP4 DUP4 JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH1 0x1 PUSH2 0x171D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x210E DUP4 DUP4 PUSH2 0x2E30 JUMP JUMPDEST SWAP1 POP PUSH2 0x215D DUP10 DUP12 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2121 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP13 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2136 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x214B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP6 PUSH1 0x1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0x27AA JUMP JUMPDEST PUSH2 0x2166 DUP3 PUSH2 0x2EAA JUMP JUMPDEST PUSH2 0x2170 DUP11 DUP9 PUSH2 0x2ED7 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH2 0x2189 DUP3 DUP8 PUSH2 0x2182 PUSH2 0x843 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F23 JUMP JUMPDEST PUSH1 0xA SSTORE POP PUSH2 0x21AA SWAP1 POP JUMP JUMPDEST PUSH2 0x219E DUP9 DUP7 PUSH2 0x2ED7 JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0xA SSTORE SWAP1 SWAP5 POP SWAP3 POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE DUP7 SWAP3 DUP7 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP8 POP SWAP8 POP SWAP8 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2207 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x21F0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2202 PUSH1 0x1 PUSH2 0x1F43 JUMP JUMPDEST PUSH2 0x2F7B JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2214 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2242 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2230 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2202 PUSH1 0x0 PUSH2 0x1F43 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x224F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x231C JUMPI PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD PUSH2 0x2282 SWAP3 SWAP2 SWAP1 PUSH2 0x5083 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x22BF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x22C4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x22D3 JUMPI INVALID JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x43ADBAFB PUSH1 0xE0 SHL DUP2 EQ PUSH2 0x22FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x4 PUSH1 0x0 RETURNDATACOPY PUSH1 0x40 PUSH1 0x20 MSTORE PUSH1 0x24 RETURNDATASIZE SUB PUSH1 0x24 PUSH1 0x40 RETURNDATACOPY PUSH1 0x1C RETURNDATASIZE ADD PUSH1 0x0 RETURN JUMPDEST PUSH2 0x2325 DUP7 PUSH2 0x2523 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x233B DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x234D DUP2 DUP5 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1F NOT DUP3 ADD DUP4 SWAP1 MSTORE PUSH4 0x43ADBAFB PUSH1 0x3F NOT DUP4 ADD MSTORE PUSH1 0x20 MUL PUSH1 0x23 NOT DUP3 ADD PUSH1 0x44 DUP3 ADD DUP2 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2397 DUP9 PUSH2 0x2F9B JUMP JUMPDEST SWAP7 POP PUSH2 0x23A2 DUP9 PUSH2 0x2FA8 JUMP JUMPDEST SWAP6 POP PUSH2 0x23AD DUP9 PUSH2 0x2FB5 JUMP JUMPDEST SWAP5 POP PUSH2 0x23B8 DUP9 PUSH2 0x2FC2 JUMP JUMPDEST SWAP4 POP PUSH2 0x23C3 DUP9 PUSH2 0x2FCF JUMP JUMPDEST SWAP3 POP PUSH2 0x23CE DUP9 PUSH2 0x2FDC JUMP JUMPDEST SWAP2 POP PUSH2 0x23D9 DUP9 PUSH2 0x1DFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP1 SWAP3 SWAP5 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL PUSH2 0x1A28 DUP5 ISZERO DUP1 PUSH2 0x2403 JUMPI POP DUP4 DUP6 DUP4 DUP2 PUSH2 0x2400 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH1 0x3 PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x241D JUMPI PUSH2 0x241D PUSH1 0x0 PUSH1 0x4 PUSH2 0x1C0D JUMP JUMPDEST DUP3 PUSH2 0x242A JUMPI POP PUSH1 0x0 PUSH2 0x778 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 DUP2 MUL SWAP1 DUP5 DUP3 DUP2 PUSH2 0x2440 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x2452 JUMPI PUSH2 0x2452 PUSH1 0x0 PUSH1 0x5 PUSH2 0x1C0D JUMP JUMPDEST DUP3 DUP2 DUP2 PUSH2 0x245B JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x34171A85 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0x34171A85 SWAP1 PUSH2 0x24A5 SWAP1 PUSH1 0x8 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x5213 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x24D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x24F5 SWAP2 SWAP1 PUSH2 0x4E02 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2505 PUSH2 0x4900 JUMP JUMPDEST PUSH2 0x250F PUSH1 0x1 PUSH2 0x2FE9 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x251B PUSH1 0x0 PUSH2 0x2FE9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x254A DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2533 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2545 PUSH1 0x1 PUSH2 0x1F43 JUMP JUMPDEST PUSH2 0x23E6 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2557 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2242 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2573 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2545 PUSH1 0x0 PUSH2 0x1F43 JUMP JUMPDEST PUSH2 0x1A16 DUP3 DUP3 PUSH2 0x303D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 PUSH2 0x259E PUSH2 0x24FD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x25AD DUP10 DUP4 DUP4 PUSH2 0x20F3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x25BB DUP4 DUP4 PUSH2 0x2E30 JUMP JUMPDEST SWAP1 POP PUSH2 0x25CE DUP10 DUP12 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2121 JUMPI INVALID JUMPDEST PUSH2 0x25D7 DUP3 PUSH2 0x2EAA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x25E4 DUP13 DUP11 PUSH2 0x30F4 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x260E JUMPI PUSH2 0x260E DUP3 PUSH2 0x2601 DUP16 PUSH2 0xEC3 JUMP JUMPDEST PUSH2 0x2609 PUSH2 0x843 JUMP JUMPDEST PUSH2 0x312E JUMP JUMPDEST PUSH2 0x2622 DUP5 DUP4 PUSH2 0x261B PUSH2 0x843 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x2F23 JUMP JUMPDEST PUSH1 0xA SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE DUP5 SWAP3 DUP5 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP8 POP SWAP8 POP SWAP8 POP POP POP POP POP POP SWAP8 POP SWAP8 POP SWAP8 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2686 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x266F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2681 PUSH1 0x1 PUSH2 0x1F43 JUMP JUMPDEST PUSH2 0x3240 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2693 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2242 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x26AF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2681 PUSH1 0x0 PUSH2 0x1F43 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH2 0x272B PUSH32 0x0 PUSH32 0x0 PUSH2 0x3273 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2738 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x278E PUSH32 0x0 PUSH32 0x0 PUSH2 0x3273 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x279B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x27B6 DUP2 PUSH2 0x20A5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x27C1 JUMPI POP DUP6 NUMBER GT JUMPDEST ISZERO PUSH2 0x284C JUMPI PUSH1 0x0 PUSH2 0x27D4 DUP7 DUP6 DUP8 DUP7 PUSH2 0x3313 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x27ED DUP8 DUP7 DUP9 DUP8 PUSH2 0x27E8 DUP9 PUSH2 0x207E JUMP JUMPDEST PUSH2 0x332D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x27FA DUP5 PUSH2 0x2098 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2807 DUP6 PUSH2 0x208B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2820 DUP3 DUP5 DUP8 DUP8 PUSH2 0x281B DUP12 PUSH2 0x2072 JUMP JUMPDEST PUSH2 0x3371 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 EQ PUSH2 0x1891 JUMPI PUSH2 0x2833 DUP7 DUP3 PUSH2 0x33C8 JUMP JUMPDEST SWAP6 POP PUSH2 0x283F DUP7 TIMESTAMP PUSH2 0x33D6 JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE SWAP6 POP POP POP POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL DUP4 ISZERO DUP1 PUSH2 0x286E JUMPI POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x286B JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0x287E JUMPI PUSH2 0x287E PUSH1 0x0 PUSH1 0x3 PUSH2 0x1C0D JUMP JUMPDEST DUP1 PUSH2 0x288D JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x778 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH1 0x0 NOT DUP3 ADD JUMPDEST DIV PUSH1 0x1 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1A4D JUMPI PUSH2 0x1A4D PUSH1 0x0 PUSH1 0x1 PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28D2 DUP6 DUP6 DUP9 PUSH1 0x60 ADD MLOAD DUP7 DUP7 PUSH2 0x33E4 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A28 DUP4 DUP4 PUSH2 0x2F7B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28D2 DUP6 DUP6 DUP9 PUSH1 0x60 ADD MLOAD DUP7 DUP7 PUSH2 0x344E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A28 DUP4 DUP4 PUSH2 0x3240 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 LT PUSH2 0x2921 JUMPI PUSH1 0x0 PUSH2 0x778 JUMP JUMPDEST POP PUSH8 0xDE0B6B3A7640000 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2942 JUMPI PUSH2 0x2942 PUSH1 0x0 PUSH1 0x4 PUSH2 0x1C0D JUMP JUMPDEST DUP3 PUSH2 0x294F JUMPI POP PUSH1 0x0 PUSH2 0x778 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 DUP2 MUL SWAP1 DUP5 DUP3 DUP2 PUSH2 0x2965 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x2989 JUMPI PUSH2 0x2989 PUSH8 0xDE0B6B3A7640000 DUP6 DUP4 DUP2 PUSH2 0x2980 JUMPI INVALID JUMPDEST DIV EQ PUSH1 0x5 PUSH2 0x1C0D JUMP JUMPDEST DUP3 PUSH1 0x1 DUP3 SUB DUP2 PUSH2 0x289C JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH2 0x299F PUSH2 0x1309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAAABADC5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x29D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29EB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAC8 SWAP2 SWAP1 PUSH2 0x49D7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2A22 DUP9 DUP9 DUP9 PUSH2 0x34AE JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH2 0x2A36 DUP5 DUP5 DUP5 DUP5 PUSH2 0x3628 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A4C PUSH2 0x1E0A JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x2A9D DUP5 PUSH2 0x369C JUMP JUMPDEST SWAP1 POP PUSH2 0x2AB8 PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2AB0 JUMPI INVALID JUMPDEST EQ PUSH1 0xCE PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AC3 DUP6 PUSH2 0x36BB JUMP JUMPDEST SWAP1 POP PUSH2 0x2AD1 DUP2 MLOAD PUSH1 0x2 PUSH2 0x20BF JUMP JUMPDEST PUSH2 0x2ADA DUP2 PUSH2 0x2523 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AE4 PUSH2 0x24FD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2AF3 DUP4 DUP4 DUP4 PUSH2 0x20F3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2B02 DUP3 PUSH1 0x2 PUSH2 0x23E6 JUMP JUMPDEST PUSH1 0xA SWAP3 SWAP1 SWAP3 SSTORE POP SWAP10 SWAP2 SWAP9 POP SWAP1 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1A16 DUP3 DUP3 PUSH2 0x376F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH2 0x2B81 PUSH1 0x1 PUSH2 0x3804 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2B8E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2BA4 PUSH1 0x0 PUSH2 0x3804 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2BB1 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD LT ISZERO PUSH2 0x2BD0 JUMPI PUSH2 0x840 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2BDF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2B22 JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2C07 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x2C30 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH1 0x65 PUSH2 0x1C0D JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x2BF0 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xBA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1B PUSH2 0x2C59 PUSH2 0x12E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x2C74 JUMPI POP PUSH2 0x2C74 DUP4 PUSH2 0x3858 JUMP JUMPDEST ISZERO PUSH2 0x2C9C JUMPI PUSH2 0x2C81 PUSH2 0x12E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP PUSH2 0x778 JUMP JUMPDEST PUSH2 0x2CA4 PUSH2 0x2995 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9BE2A884 DUP5 DUP5 ADDRESS PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D1D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x778 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH7 0x42414C23000030 PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD SWAP1 SWAP5 ADD PUSH1 0x10 SHL SWAP4 SWAP1 SWAP4 ADD ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2D9E DUP5 DUP5 GT ISZERO DUP4 PUSH2 0x1C0D JUMP JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2DB1 DUP4 PUSH2 0x388A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 SGT PUSH2 0x2DCA JUMPI PUSH6 0x2D79883D2000 DUP3 SUB PUSH2 0x2DD4 JUMP JUMPDEST PUSH6 0x2D79883D2000 DUP3 ADD JUMPDEST PUSH6 0x5AF3107A4000 SWAP1 SDIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A28 DUP4 DUP4 DUP4 PUSH2 0x38EE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A28 DUP4 DUP4 PUSH1 0x16 PUSH2 0x38EE JUMP JUMPDEST SHL SWAP1 JUMP JUMPDEST PUSH7 0x1FFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND SWAP1 SHL SWAP1 JUMP JUMPDEST PUSH3 0x3FFFFF SWAP2 SWAP1 SWAP2 AND SWAP1 SHL SWAP1 JUMP JUMPDEST SHR PUSH4 0x7FFFFFFF AND SWAP1 JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH2 0x2E38 PUSH2 0x4900 JUMP JUMPDEST PUSH2 0x2E4B PUSH1 0x1 DUP5 DUP2 JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH2 0x3905 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x2E59 PUSH1 0x0 DUP5 DUP2 PUSH2 0x2E40 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR PUSH3 0x3FFFFF AND PUSH3 0x1FFFFF DUP2 SGT PUSH2 0x2E7E JUMPI DUP1 PUSH2 0x24F5 JUMP JUMPDEST PUSH3 0x3FFFFF NOT OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST SHR PUSH2 0x3FF AND SWAP1 JUMP JUMPDEST SHR PUSH1 0x1 SWAP1 DUP2 AND EQ SWAP1 JUMP JUMPDEST SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x2EBC PUSH1 0xA SLOAD DUP7 PUSH2 0x3925 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH2 0x2ED0 DUP5 DUP5 DUP5 DUP5 PUSH2 0x398E JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x2EE6 DUP5 PUSH2 0x369C JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2EF6 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x2F10 JUMPI PUSH2 0x2F06 DUP6 DUP6 PUSH2 0x39AE JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH2 0x2F1B JUMP JUMPDEST PUSH2 0x2F1B PUSH2 0x150 PUSH2 0x2D3C JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO PUSH2 0x2F55 JUMPI PUSH1 0x0 PUSH2 0x2F41 DUP5 PUSH2 0x2F3B DUP9 DUP9 PUSH2 0x2854 JUMP JUMPDEST SWAP1 PUSH2 0x292F JUMP JUMPDEST SWAP1 POP PUSH2 0x2F4D DUP7 DUP3 PUSH2 0x39E0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x24F5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F65 DUP5 PUSH2 0xDE8 DUP9 DUP9 PUSH2 0x39F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x2F71 DUP7 DUP3 PUSH2 0x28A9 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F8A DUP3 ISZERO ISZERO PUSH1 0x4 PUSH2 0x1C0D JUMP JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x2F93 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x778 DUP3 PUSH1 0xEA PUSH2 0x2E64 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x778 DUP3 PUSH1 0xB5 PUSH2 0x3A31 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x778 DUP3 PUSH1 0x9F PUSH2 0x2E64 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x778 DUP3 PUSH1 0x6A PUSH2 0x3A31 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x778 DUP3 PUSH1 0x54 PUSH2 0x2E64 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x778 DUP3 PUSH1 0x1F PUSH2 0x3A31 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x3016 JUMPI PUSH32 0x0 PUSH2 0x778 JUMP JUMPDEST POP PUSH32 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3054 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x19B PUSH2 0x1C0D JUMP JUMPDEST PUSH2 0x3060 DUP3 PUSH1 0x0 DUP4 PUSH2 0x2B22 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3086 SWAP1 DUP3 PUSH2 0x1A1 PUSH2 0x2D8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x30AC SWAP1 DUP3 PUSH2 0x3A64 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x3103 DUP5 PUSH2 0x369C JUMP JUMPDEST SWAP1 POP PUSH1 0x3 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3113 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x3123 JUMPI PUSH2 0x2F06 DUP6 DUP6 PUSH2 0x3A72 JUMP JUMPDEST PUSH2 0x2F1B PUSH2 0x136 PUSH2 0x2D3C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0xB SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP3 MSTORE PUSH2 0x100 DUP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB AND PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x317B DUP6 DUP6 PUSH2 0x39E0 JUMP JUMPDEST GT ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6F7665722061646472657373206C697175696469747920636170000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x31D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CF SWAP2 SWAP1 PUSH2 0x5272 JUMP JUMPDEST POP PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x31EA DUP6 DUP5 PUSH2 0x39E0 JUMP JUMPDEST GT ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6F76657220676C6F62616C206C69717569646974792063617000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x2ED0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CF SWAP2 SWAP1 PUSH2 0x5272 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x324F DUP3 ISZERO ISZERO PUSH1 0x4 PUSH2 0x1C0D JUMP JUMPDEST DUP3 PUSH2 0x325C JUMPI POP PUSH1 0x0 PUSH2 0x778 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP5 SUB DUP2 PUSH2 0x3268 JUMPI INVALID JUMPDEST DIV PUSH1 0x1 ADD SWAP1 POP PUSH2 0x778 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3280 PUSH2 0x1309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB05F8E48 PUSH2 0x3296 PUSH2 0xAE6 JUMP JUMPDEST DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32B4 SWAP3 SWAP2 SWAP1 PUSH2 0x5180 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x32CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x32E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3304 SWAP2 SWAP1 PUSH2 0x4FFB JUMP JUMPDEST POP POP ADD SWAP4 SWAP1 SWAP4 MUL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3322 DUP7 DUP7 DUP7 DUP7 PUSH2 0x3A97 JUMP JUMPDEST SWAP1 POP PUSH2 0x2F71 DUP2 PUSH2 0x2DA5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x333C DUP8 DUP8 DUP8 DUP8 PUSH2 0x3A97 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3354 PUSH2 0x334D DUP8 DUP5 PUSH2 0x2854 JUMP JUMPDEST DUP10 SWAP1 PUSH2 0x39E0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3361 DUP3 PUSH2 0x2DA5 JUMP JUMPDEST SWAP5 SWAP1 SWAP5 SUB SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x338D DUP6 DUP6 DUP6 TIMESTAMP PUSH2 0x3384 DUP12 PUSH2 0x2371 JUMP JUMPDEST SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3AB0 JUMP JUMPDEST SWAP1 POP PUSH1 0x78 TIMESTAMP DUP9 SWAP1 SUB LT ISZERO DUP1 PUSH2 0x33A2 JUMPI DUP7 PUSH2 0x33AB JUMP JUMPDEST PUSH2 0x33AB DUP8 PUSH2 0x3B02 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A28 DUP4 DUP4 PUSH1 0x4B PUSH2 0x3B0F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A28 DUP4 DUP4 PUSH1 0x2C PUSH2 0x3B1F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3403 PUSH2 0x33FC DUP6 PUSH8 0xDE0B6B3A7640002 PUSH2 0x2854 JUMP JUMPDEST DUP9 SWAP1 PUSH2 0x39E0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x341C PUSH2 0x33FC DUP6 PUSH8 0xDE0B6B3A763FFFF PUSH2 0x39F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x3435 PUSH2 0x342B DUP4 DUP9 PUSH2 0x39E0 JUMP JUMPDEST PUSH2 0xDE8 DUP4 DUP10 PUSH2 0x39F8 JUMP JUMPDEST SWAP3 POP POP POP DUP5 DUP2 GT ISZERO PUSH2 0x28D5 JUMPI PUSH2 0x28D5 PUSH1 0x0 PUSH2 0x165 PUSH2 0x3B31 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 GT ISZERO PUSH2 0x3465 JUMPI PUSH2 0x3465 PUSH1 0x0 PUSH2 0x165 PUSH2 0x3B31 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x347C PUSH2 0x33FC DUP6 PUSH8 0xDE0B6B3A7640002 PUSH2 0x2854 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3495 PUSH2 0x33FC DUP6 PUSH8 0xDE0B6B3A763FFFF PUSH2 0x39F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x2A36 PUSH2 0x34A4 DUP3 DUP9 PUSH2 0x28A9 JUMP JUMPDEST PUSH2 0x2F3B DUP5 DUP10 PUSH2 0x2854 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x34CF PUSH2 0x34C0 DUP8 DUP8 PUSH2 0x240A JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x28A9 JUMP JUMPDEST SWAP4 POP PUSH1 0x0 PUSH2 0x34FA DUP7 DUP10 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x34E4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x240A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3525 DUP9 DUP11 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x350F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x39F8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x3531 DUP3 DUP3 PUSH2 0x39E0 JUMP JUMPDEST SWAP5 POP PUSH2 0x3558 DUP10 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x3543 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP11 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x350F JUMPI INVALID JUMPDEST SWAP3 POP POP POP PUSH2 0x358F DUP7 PUSH2 0x3589 DUP9 PUSH2 0x3589 DUP12 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x3574 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP13 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x350F JUMPI INVALID JUMPDEST SWAP1 PUSH2 0x39F8 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 PUSH2 0x35CF DUP7 PUSH2 0xDE8 DUP10 PUSH2 0x3589 PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 MUL PUSH2 0x3589 DUP15 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x35BA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP16 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x350F JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3605 PUSH2 0x35E0 DUP9 DUP1 PUSH2 0x2854 JUMP JUMPDEST PUSH2 0xDE8 DUP12 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x35F0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP13 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x350F JUMPI INVALID JUMPDEST SWAP1 POP PUSH2 0x361B DUP2 PUSH2 0x3615 DUP7 DUP6 PUSH2 0x39E0 JUMP JUMPDEST SWAP1 PUSH2 0x39E0 JUMP JUMPDEST SWAP4 POP POP POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x363D DUP7 PUSH8 0x1BC16D674EC80000 PUSH2 0x2854 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3657 DUP8 PUSH2 0x3589 DUP7 PUSH8 0x3782DACE9D900000 PUSH2 0x39F8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3665 DUP7 DUP4 PUSH2 0x39E0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3674 DUP3 PUSH1 0x5 PUSH2 0x3B3F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3682 DUP10 DUP4 PUSH2 0x39E0 JUMP JUMPDEST SWAP1 POP PUSH2 0x368E DUP2 DUP7 PUSH2 0x240A JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x36B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x36D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP3 SWAP5 SWAP3 SWAP4 DUP4 ADD SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x36F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x370E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x372B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3758 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3740 JUMP JUMPDEST POP POP POP POP SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 MSTORE POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x377B PUSH1 0x0 DUP4 DUP4 PUSH2 0x2B22 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x3788 SWAP1 DUP3 PUSH2 0x1F31 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x37AE SWAP1 DUP3 PUSH2 0x1F31 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x3831 JUMPI PUSH32 0x0 PUSH2 0x778 JUMP JUMPDEST POP PUSH32 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x386A PUSH4 0x1C74C917 PUSH1 0xE1 SHL PUSH2 0x1267 JUMP JUMPDEST DUP3 EQ DUP1 PUSH2 0x778 JUMPI POP PUSH2 0x3882 PUSH4 0x50DD6ED9 PUSH1 0xE0 SHL PUSH2 0x1267 JUMP JUMPDEST SWAP1 SWAP2 EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x389A PUSH1 0x0 DUP4 SGT PUSH1 0x64 PUSH2 0x1C0D JUMP JUMPDEST PUSH8 0xC7D713B49DA0000 DUP3 SGT DUP1 ISZERO PUSH2 0x38B8 JUMPI POP PUSH8 0xF43FC2C04EE0000 DUP3 SLT JUMPDEST ISZERO PUSH2 0x38DE JUMPI PUSH8 0xDE0B6B3A7640000 PUSH2 0x38CF DUP4 PUSH2 0x3CCD JUMP JUMPDEST DUP2 PUSH2 0x38D6 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH2 0xEDD JUMP JUMPDEST PUSH2 0x38E7 DUP3 PUSH2 0x3DEB JUMP JUMPDEST SWAP1 POP PUSH2 0xEDD JUMP JUMPDEST PUSH3 0x3FFFFF DUP3 DUP2 AND DUP3 SHL SWAP1 DUP3 SHL NOT DUP5 AND OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x391B JUMPI PUSH2 0x3916 DUP3 DUP5 PUSH2 0x418A JUMP JUMPDEST PUSH2 0x24F5 JUMP JUMPDEST PUSH2 0x24F5 DUP3 DUP5 PUSH2 0x4196 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x3939 PUSH2 0x41A2 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP DUP4 PUSH1 0x0 EQ ISZERO PUSH2 0x395E JUMPI PUSH1 0x0 SWAP8 POP DUP8 SWAP7 POP SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x3985 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3975 DUP13 DUP13 PUSH2 0x396E PUSH2 0x843 JUMP JUMPDEST DUP10 DUP10 PUSH2 0x4411 JUMP JUMPDEST SWAP1 SWAP11 POP SWAP9 POP SWAP3 SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP JUMPDEST SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST DUP4 ISZERO PUSH2 0x399E JUMPI PUSH2 0x399E DUP3 DUP6 PUSH2 0x2B18 JUMP JUMPDEST DUP3 ISZERO PUSH2 0xAB8 JUMPI PUSH2 0xAB8 DUP2 DUP5 PUSH2 0x2B18 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x39BD DUP5 PUSH2 0x44A6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x39D3 DUP7 DUP4 PUSH2 0x39CE PUSH2 0x843 JUMP JUMPDEST PUSH2 0x44C8 JUMP JUMPDEST SWAP2 SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1A28 JUMPI PUSH2 0x1A28 PUSH1 0x0 DUP1 PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL DUP4 ISZERO DUP1 PUSH2 0x3A12 JUMPI POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x3A0F JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0x3A22 JUMPI PUSH2 0x3A22 PUSH1 0x0 PUSH1 0x3 PUSH2 0x1C0D JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x245B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR PUSH7 0x1FFFFFFFFFFFFF AND PUSH7 0xFFFFFFFFFFFFF DUP2 SGT PUSH2 0x3A53 JUMPI DUP1 PUSH2 0x24F5 JUMP JUMPDEST PUSH7 0x1FFFFFFFFFFFFF NOT OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A28 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2D8F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x3A81 DUP5 PUSH2 0x44A6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x39D3 DUP7 DUP4 PUSH2 0x3A92 PUSH2 0x843 JUMP JUMPDEST PUSH2 0x454D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28D5 PUSH2 0x3AA6 DUP5 DUP5 PUSH2 0x39E0 JUMP JUMPDEST PUSH2 0x2F3B DUP8 DUP8 PUSH2 0x39E0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3ABC DUP8 PUSH2 0x1DFE JUMP JUMPDEST DUP4 SUB SWAP1 POP PUSH1 0x0 DUP2 DUP8 MUL PUSH2 0x3ACE DUP10 PUSH2 0x2FA8 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP3 DUP8 MUL PUSH2 0x3ADF DUP11 PUSH2 0x2FC2 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP4 DUP8 MUL PUSH2 0x3AF0 DUP12 PUSH2 0x2FDC JUMP JUMPDEST ADD SWAP1 POP PUSH2 0x368E DUP10 DUP5 DUP11 DUP6 DUP12 DUP7 DUP13 PUSH2 0x1D9E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x778 DUP3 PUSH1 0x1 PUSH2 0x45E8 JUMP JUMPDEST PUSH2 0x3FF DUP2 SHL NOT SWAP3 SWAP1 SWAP3 AND SWAP2 SHL OR SWAP1 JUMP JUMPDEST PUSH4 0x7FFFFFFF DUP2 SHL NOT SWAP3 SWAP1 SWAP3 AND SWAP2 SHL OR SWAP1 JUMP JUMPDEST DUP2 PUSH2 0x1A16 JUMPI PUSH2 0x1A16 DUP2 PUSH2 0x45F0 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3B4E JUMPI POP PUSH1 0x0 PUSH2 0x778 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B59 DUP5 PUSH2 0x4600 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x3B70 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x3B7A JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x3B92 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x3B9C JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x3BB4 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x3BBE JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x3BD6 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x3BE0 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x3BF8 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x3C02 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x3C1A JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x3C24 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x3C3C JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x3C46 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH2 0x3C55 DUP3 DUP1 PUSH2 0x39F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x3C6B PUSH2 0x3C64 DUP4 DUP7 PUSH2 0x2854 JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x39E0 JUMP JUMPDEST DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x3C8D JUMPI POP PUSH2 0x3C89 PUSH2 0x3C82 DUP4 DUP7 PUSH2 0x2854 JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x28A9 JUMP JUMPDEST DUP2 LT ISZERO JUMPDEST PUSH2 0x15EC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x17DCDC5C9D08119052531151 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 MUL PUSH1 0x0 DUP1 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP1 DUP5 ADD SWAP1 PUSH15 0xC097CE7BC90715B34B9F0FFFFFFFFF NOT DUP6 ADD MUL DUP2 PUSH2 0x3D08 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x0 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 DUP1 MUL SDIV SWAP1 POP DUP2 DUP1 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP2 DUP5 MUL SDIV SWAP2 POP PUSH1 0x3 DUP3 SDIV ADD PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x5 DUP3 SDIV ADD PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x7 DUP3 SDIV ADD PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x9 DUP3 SDIV ADD PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0xB DUP3 SDIV ADD PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0xD DUP3 SDIV ADD PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0xF DUP3 PUSH1 0x2 SWAP2 SWAP1 SDIV SWAP2 SWAP1 SWAP2 ADD MUL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 SLT ISZERO PUSH2 0x3E27 JUMPI PUSH2 0x3E1D DUP3 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP2 PUSH2 0x3E17 JUMPI INVALID JUMPDEST SDIV PUSH2 0x3DEB JUMP JUMPDEST PUSH1 0x0 SUB SWAP1 POP PUSH2 0xEDD JUMP JUMPDEST PUSH1 0x0 PUSH31 0x1600EF3172E58D2E933EC884FDE10064C63B5372D805E203C0000000000000 DUP4 SLT PUSH2 0x3E78 JUMPI PUSH24 0x195E54C5DD42177F53A27172FA9EC630262827000000000 DUP4 SDIV SWAP3 POP PUSH9 0x6F05B59D3B2000000 ADD JUMPDEST PUSH20 0x11798004D755D3C8BC8E03204CF44619E000000 DUP4 SLT PUSH2 0x3EB0 JUMPI PUSH12 0x1425982CF597CD205CEF7380 DUP4 SDIV SWAP3 POP PUSH9 0x3782DACE9D9000000 ADD JUMPDEST PUSH1 0x64 SWAP3 DUP4 MUL SWAP3 MUL PUSH15 0x1855144814A7FF805980FF0084000 DUP4 SLT PUSH2 0x3EF8 JUMPI PUSH15 0x1855144814A7FF805980FF0084000 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0xAD78EBC5AC62000000 ADD JUMPDEST PUSH12 0x2DF0AB5A80A22C61AB5A700 DUP4 SLT PUSH2 0x3F33 JUMPI PUSH12 0x2DF0AB5A80A22C61AB5A700 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x56BC75E2D631000000 ADD JUMPDEST PUSH10 0x3F1FCE3DA636EA5CF850 DUP4 SLT PUSH2 0x3F6A JUMPI PUSH10 0x3F1FCE3DA636EA5CF850 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x2B5E3AF16B18800000 ADD JUMPDEST PUSH10 0x127FA27722CC06CC5E2 DUP4 SLT PUSH2 0x3FA1 JUMPI PUSH10 0x127FA27722CC06CC5E2 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x15AF1D78B58C400000 ADD JUMPDEST PUSH9 0x280E60114EDB805D03 DUP4 SLT PUSH2 0x3FD6 JUMPI PUSH9 0x280E60114EDB805D03 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0xAD78EBC5AC6200000 ADD JUMPDEST PUSH9 0xEBC5FB41746121110 DUP4 SLT PUSH2 0x4001 JUMPI PUSH9 0xEBC5FB41746121110 PUSH9 0x56BC75E2D63100000 SWAP4 DUP5 MUL SDIV SWAP3 ADD JUMPDEST PUSH9 0x8F00F760A4B2DB55D DUP4 SLT PUSH2 0x4036 JUMPI PUSH9 0x8F00F760A4B2DB55D PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x2B5E3AF16B1880000 ADD JUMPDEST PUSH9 0x6F5F1775788937937 DUP4 SLT PUSH2 0x406B JUMPI PUSH9 0x6F5F1775788937937 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x15AF1D78B58C40000 ADD JUMPDEST PUSH9 0x6248F33704B286603 DUP4 SLT PUSH2 0x409F JUMPI PUSH9 0x6248F33704B286603 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH8 0xAD78EBC5AC620000 ADD JUMPDEST PUSH9 0x5C548670B9510E7AC DUP4 SLT PUSH2 0x40D3 JUMPI PUSH9 0x5C548670B9510E7AC PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH8 0x56BC75E2D6310000 ADD JUMPDEST PUSH1 0x0 PUSH9 0x56BC75E2D63100000 DUP5 ADD PUSH9 0x56BC75E2D63100000 DUP1 DUP7 SUB MUL DUP2 PUSH2 0x40F6 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x0 PUSH9 0x56BC75E2D63100000 DUP3 DUP1 MUL SDIV SWAP1 POP DUP2 DUP1 PUSH9 0x56BC75E2D63100000 DUP2 DUP5 MUL SDIV SWAP2 POP PUSH1 0x3 DUP3 SDIV ADD PUSH9 0x56BC75E2D63100000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x5 DUP3 SDIV ADD PUSH9 0x56BC75E2D63100000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x7 DUP3 SDIV ADD PUSH9 0x56BC75E2D63100000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x9 DUP3 SDIV ADD PUSH9 0x56BC75E2D63100000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0xB DUP3 SDIV ADD PUSH1 0x2 MUL PUSH1 0x64 DUP6 DUP3 ADD SDIV SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A28 DUP4 DUP4 PUSH2 0x39F8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A28 DUP4 DUP4 PUSH2 0x240A JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0xBD02D0F5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xBD02D0F5 SWAP1 PUSH2 0x41F4 SWAP1 PUSH22 0x50524F544F434F4C5F535741505F4645455F50455243 PUSH1 0x50 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0x5177 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x420C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4220 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4244 SWAP2 SWAP1 PUSH2 0x4E02 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0xBD02D0F5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xBD02D0F5 SWAP1 PUSH2 0x4294 SWAP1 PUSH32 0x50524F544F434F4C5F4645455F4759524F5F504F5254494F4E00000000000000 SWAP1 PUSH1 0x4 ADD PUSH2 0x5177 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x42AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x42C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x42E4 SWAP2 SWAP1 PUSH2 0x4E02 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0x21F8A721 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x21F8A721 SWAP1 PUSH2 0x4324 SWAP1 PUSH13 0x4759524F5F5452454153555259 PUSH1 0x98 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0x5177 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x433C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4350 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4374 SWAP2 SWAP1 PUSH2 0x49D7 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0x21F8A721 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x21F8A721 SWAP1 PUSH2 0x43B3 SWAP1 PUSH12 0x42414C5F5452454153555259 PUSH1 0xA0 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0x5177 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x43CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x43DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4403 SWAP2 SWAP1 PUSH2 0x49D7 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 DUP7 GT PUSH2 0x4426 JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x449C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4440 DUP6 PUSH2 0x3589 PUSH2 0x4439 DUP11 DUP13 PUSH2 0x28A9 JUMP JUMPDEST DUP10 SWAP1 PUSH2 0x39F8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4458 PUSH2 0x4451 DUP10 DUP12 PUSH2 0x28A9 JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x39F8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4466 DUP10 DUP4 PUSH2 0x28A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4474 DUP5 DUP4 PUSH2 0x240A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4482 DUP9 DUP4 PUSH2 0x39F8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4490 DUP4 DUP4 PUSH2 0x28A9 JUMP JUMPDEST SWAP2 SWAP8 POP SWAP1 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x44BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 ADD MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x44E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x450B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x15EC JUMPI PUSH2 0x452E DUP4 PUSH2 0xDE8 DUP7 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x350F JUMPI INVALID JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x453A JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x4511 JUMP JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x4566 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4590 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x15EC JUMPI PUSH2 0x45C9 DUP4 PUSH2 0x2F3B DUP7 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x45B3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2854 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x45D5 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x4596 JUMP JUMPDEST ADD PUSH2 0x3FF AND SWAP1 JUMP JUMPDEST PUSH2 0x840 DUP2 PUSH3 0x23ACA9 PUSH1 0xE9 SHL PUSH2 0x47D2 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 LT PUSH2 0x462D JUMPI PUSH8 0xDE0B6B3A7640000 PUSH2 0x4625 DUP2 DUP5 DIV PUSH2 0x4833 JUMP JUMPDEST SHL SWAP1 POP PUSH2 0xEDD JUMP JUMPDEST PUSH1 0xA DUP3 GT PUSH2 0x4640 JUMPI POP PUSH4 0xBC7C871C PUSH2 0xEDD JUMP JUMPDEST PUSH1 0x64 DUP3 GT PUSH2 0x4654 JUMPI POP PUSH5 0x2540BE400 PUSH2 0xEDD JUMP JUMPDEST PUSH2 0x3E8 DUP3 GT PUSH2 0x4669 JUMPI POP PUSH5 0x75CDD4719 PUSH2 0xEDD JUMP JUMPDEST PUSH2 0x2710 DUP3 GT PUSH2 0x467E JUMPI POP PUSH5 0x174876E800 PUSH2 0xEDD JUMP JUMPDEST PUSH3 0x186A0 DUP3 GT PUSH2 0x4694 JUMPI POP PUSH5 0x49A0A4C700 PUSH2 0xEDD JUMP JUMPDEST PUSH3 0xF4240 DUP3 GT PUSH2 0x46AA JUMPI POP PUSH5 0xE8D4A51000 PUSH2 0xEDD JUMP JUMPDEST PUSH3 0x989680 DUP3 GT PUSH2 0x46C1 JUMPI POP PUSH6 0x2E0466FC608 PUSH2 0xEDD JUMP JUMPDEST PUSH4 0x5F5E100 DUP3 GT PUSH2 0x46D9 JUMPI POP PUSH6 0x9184E72A000 PUSH2 0xEDD JUMP JUMPDEST PUSH4 0x3B9ACA00 DUP3 GT PUSH2 0x46F1 JUMPI POP PUSH6 0x1CC2C05DBC53 PUSH2 0xEDD JUMP JUMPDEST PUSH5 0x2540BE400 DUP3 GT PUSH2 0x470A JUMPI POP PUSH6 0x5AF3107A4000 PUSH2 0xEDD JUMP JUMPDEST PUSH5 0x174876E800 DUP3 GT PUSH2 0x4724 JUMPI POP PUSH7 0x11F9B83A95B45 PUSH2 0xEDD JUMP JUMPDEST PUSH5 0xE8D4A51000 DUP3 GT PUSH2 0x473E JUMPI POP PUSH7 0x38D7EA4C68000 PUSH2 0xEDD JUMP JUMPDEST PUSH6 0x9184E72A000 DUP3 GT PUSH2 0x4759 JUMPI POP PUSH7 0xB3C13249D90BB PUSH2 0xEDD JUMP JUMPDEST PUSH6 0x5AF3107A4000 DUP3 GT PUSH2 0x4774 JUMPI POP PUSH7 0x2386F26FC10000 PUSH2 0xEDD JUMP JUMPDEST PUSH7 0x38D7EA4C68000 DUP3 GT PUSH2 0x4790 JUMPI POP PUSH7 0x7058BF6E27A751 PUSH2 0xEDD JUMP JUMPDEST PUSH7 0x2386F26FC10000 DUP3 GT PUSH2 0x47AD JUMPI POP PUSH8 0x16345785D8A0000 PUSH2 0xEDD JUMP JUMPDEST PUSH8 0x16345785D8A0000 DUP3 GT PUSH2 0x47CB JUMPI POP PUSH8 0x463777A4D8C892D PUSH2 0xEDD JUMP JUMPDEST POP DUP1 PUSH2 0xEDD JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x80 SHL DUP3 LT PUSH2 0x484B JUMPI PUSH1 0x80 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x40 ADD JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0x4866 JUMPI PUSH1 0x40 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0x487D JUMPI PUSH1 0x20 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x10 ADD JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0x4892 JUMPI PUSH1 0x10 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x8 ADD JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x48A6 JUMPI PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x4 ADD JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x48B9 JUMPI PUSH1 0x4 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x2 ADD JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0xEDD JUMPI PUSH1 0x1 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xEDD DUP2 PUSH2 0x53A2 JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xEDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4949 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x495C JUMPI INVALID JUMPDEST PUSH2 0x496F PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x5362 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x4983 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0xEDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0xEDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x49CC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A28 DUP2 PUSH2 0x53A2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x49E8 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1A28 DUP2 PUSH2 0x53A2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4A05 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4A10 DUP2 PUSH2 0x53A2 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4A20 DUP2 PUSH2 0x53A2 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4A3F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x4A4A DUP2 PUSH2 0x53A2 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x4A5A DUP2 PUSH2 0x53A2 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x4A85 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x4A90 DUP2 PUSH2 0x53A2 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x4AA0 DUP2 PUSH2 0x53A2 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x4AC3 JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4AF2 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4AFD DUP2 PUSH2 0x53A2 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4B1D JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4B33 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4B46 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4B59 PUSH2 0x4B54 DUP3 PUSH2 0x5385 JUMP JUMPDEST PUSH2 0x5362 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 DUP2 ADD SWAP1 DUP5 DUP7 ADD PUSH1 0x40 DUP1 DUP6 MUL DUP8 ADD DUP9 ADD DUP12 LT ISZERO PUSH2 0x4B77 JUMPI DUP9 DUP10 REVERT JUMPDEST DUP9 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x4BCF JUMPI DUP1 DUP3 DUP13 SUB SLT ISZERO PUSH2 0x4B91 JUMPI DUP9 DUP10 REVERT JUMPDEST DUP1 MLOAD DUP2 DUP2 ADD DUP2 DUP2 LT DUP9 DUP3 GT OR ISZERO PUSH2 0x4BA4 JUMPI INVALID JUMPDEST DUP3 MSTORE PUSH2 0x4BAF DUP4 PUSH2 0x49AC JUMP JUMPDEST DUP2 MSTORE DUP3 DUP10 ADD CALLDATALOAD DUP10 DUP3 ADD MSTORE DUP5 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP3 DUP8 ADD SWAP3 SWAP1 DUP2 ADD SWAP1 PUSH2 0x4B7B JUMP JUMPDEST POP SWAP1 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4BF0 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4C06 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4C19 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4C27 PUSH2 0x4B54 DUP3 PUSH2 0x5385 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 DUP2 ADD SWAP1 DUP5 DUP7 ADD PUSH1 0x60 DUP1 DUP6 MUL DUP8 ADD DUP9 ADD DUP12 LT ISZERO PUSH2 0x4C45 JUMPI DUP9 DUP10 REVERT JUMPDEST DUP9 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x4BCF JUMPI DUP1 DUP3 DUP13 SUB SLT ISZERO PUSH2 0x4C5F JUMPI DUP9 DUP10 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 ADD DUP2 DUP2 LT DUP10 DUP3 GT OR ISZERO PUSH2 0x4C74 JUMPI INVALID JUMPDEST DUP3 MSTORE PUSH2 0x4C7F DUP5 PUSH2 0x49AC JUMP JUMPDEST DUP2 MSTORE DUP4 DUP11 ADD CALLDATALOAD DUP11 DUP3 ADD MSTORE DUP2 DUP5 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP5 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP3 DUP8 ADD SWAP3 SWAP1 DUP2 ADD SWAP1 PUSH2 0x4C49 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4CBB JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1A28 DUP3 PUSH2 0x4929 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x4CDE JUMPI DUP1 DUP2 REVERT JUMPDEST DUP8 CALLDATALOAD SWAP7 POP PUSH1 0x20 DUP1 DUP10 ADD CALLDATALOAD PUSH2 0x4CF1 DUP2 PUSH2 0x53A2 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x4D01 DUP2 PUSH2 0x53A2 JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4D1C JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP12 ADD SWAP2 POP DUP12 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4D2F JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4D3D PUSH2 0x4B54 DUP3 PUSH2 0x5385 JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP6 DUP3 ADD SWAP2 POP DUP6 DUP6 ADD DUP16 DUP8 DUP9 DUP7 MUL DUP9 ADD ADD GT ISZERO PUSH2 0x4D5B JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x4D7D JUMPI DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x4D5F JUMP JUMPDEST POP SWAP9 POP POP POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP6 POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 DUP12 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x4DA3 JUMPI DUP4 DUP5 REVERT JUMPDEST POP POP PUSH2 0x4DB1 DUP11 DUP3 DUP12 ADD PUSH2 0x4939 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4DD1 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1A28 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4DF9 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1A28 DUP3 PUSH2 0x49AC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4E13 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4E2B JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH2 0x4E47 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE PUSH2 0x4E53 DUP4 PUSH2 0x4929 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4E6E JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4E8C JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4EAC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4EC2 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP PUSH2 0x120 DUP1 DUP4 DUP10 SUB SLT ISZERO PUSH2 0x4ED8 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x4EE1 DUP2 PUSH2 0x5362 JUMP JUMPDEST SWAP1 POP PUSH2 0x4EEC DUP4 PUSH2 0x499D JUMP JUMPDEST DUP2 MSTORE PUSH2 0x4EFA PUSH1 0x20 DUP5 ADD PUSH2 0x491E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x4F0B PUSH1 0x40 DUP5 ADD PUSH2 0x491E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x4F3A PUSH1 0xC0 DUP5 ADD PUSH2 0x491E JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x4F4B PUSH1 0xE0 DUP5 ADD PUSH2 0x491E JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD CALLDATALOAD DUP4 DUP2 GT ISZERO PUSH2 0x4F63 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH2 0x4F6F DUP11 DUP3 DUP8 ADD PUSH2 0x4939 JUMP JUMPDEST SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP8 PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP8 POP PUSH1 0x40 SWAP1 SWAP7 ADD CALLDATALOAD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4F9F JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4FB8 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4FDB JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x4FF2 PUSH1 0x40 DUP6 ADD PUSH2 0x4929 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x5010 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 MLOAD SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP6 ADD MLOAD PUSH2 0x5030 DUP2 PUSH2 0x53A2 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x506A JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x504E JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x507F JUMPI INVALID JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP4 CALLDATACOPY SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x50DF JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x50C3 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD DUP2 DUP4 PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x5113 JUMPI DUP2 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x50F4 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x1A28 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x503B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0x5142 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x503B JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x28D5 DUP2 DUP6 PUSH2 0x503B JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x40 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x60 DUP2 ADD PUSH2 0x5205 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x5075 JUMP JUMPDEST DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x80 DUP2 ADD PUSH2 0x5227 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x5075 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP DUP5 DUP3 MSTORE PUSH2 0x5252 PUSH1 0x20 DUP4 ADD DUP6 MLOAD PUSH2 0x5075 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x529E JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x5282 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x52AF JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 SWAP2 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP3 MSTORE PUSH1 0x8 DUP2 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x80 SHR PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x24F5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x503B JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x537D JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x5398 JUMPI INVALID JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x840 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F MSTORE8 REVERT 0xB0 JUMPDEST 0xD0 SWAP7 0x2B SWAP6 0xA6 PUSH13 0xDEFC384C0A5C26CDAD2AE535AB STOP 0xEE ORIGIN 0xB2 0xE0 0xCF STOP DUP5 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ", "sha1": "4d19bafefda1df51938c0a209b2f613f3beb14e3", "source": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity 0.7.6;\npragma experimental ABIEncoderV2;\n\n// import \"@balancer-labs/v2-solidity-utils/contracts/math/FixedPoint.sol\";\nimport \"../../libraries/GyroFixedPoint.sol\";\n\nimport \"@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol\";\nimport \"@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol\";\n\nimport \"../../libraries/GyroConfigKeys.sol\";\nimport \"../../interfaces/IGyroConfig.sol\";\nimport \"../../libraries/GyroPoolMath.sol\";\nimport \"../../libraries/GyroErrors.sol\";\n\nimport \"../CappedLiquidity.sol\";\nimport \"../LocallyPausable.sol\";\nimport \"../ExtensibleWeightedPool2Tokens.sol\";\nimport \"./Gyro2CLPPoolErrors.sol\";\nimport \"./Gyro2CLPMath.sol\";\nimport \"./Gyro2CLPOracleMath.sol\";\n\ncontract Gyro2CLPPool is ExtensibleWeightedPool2Tokens, Gyro2CLPOracleMath, CappedLiquidity, LocallyPausable {\n    using GyroFixedPoint for uint256;\n    using WeightedPoolUserDataHelpers for bytes;\n    using WeightedPool2TokensMiscData for bytes32;\n\n    uint256 private immutable _sqrtAlpha;\n    uint256 private immutable _sqrtBeta;\n\n    IGyroConfig public gyroConfig;\n\n    struct GyroParams {\n        NewPoolParams baseParams;\n        uint256 sqrtAlpha; // A: Should already be upscaled\n        uint256 sqrtBeta; // A: Should already be upscaled. Could be passed as an array[](2)\n        address capManager;\n        CapParams capParams;\n        address pauseManager;\n    }\n\n    constructor(GyroParams memory params, address configAddress)\n        ExtensibleWeightedPool2Tokens(params.baseParams)\n        CappedLiquidity(params.capManager, params.capParams)\n        LocallyPausable(params.pauseManager)\n    {\n        _grequire(params.sqrtAlpha < params.sqrtBeta, Gyro2CLPPoolErrors.SQRT_PARAMS_WRONG);\n        _grequire(configAddress != address(0), GyroErrors.ZERO_ADDRESS);\n        _sqrtAlpha = params.sqrtAlpha;\n        _sqrtBeta = params.sqrtBeta;\n\n        gyroConfig = IGyroConfig(configAddress);\n    }\n\n    /// @dev Returns sqrtAlpha and sqrtBeta (square roots of lower and upper price bounds of p_x respectively)\n    function getSqrtParameters() external view returns (uint256[2] memory) {\n        return _sqrtParameters();\n    }\n\n    function _sqrtParameters() internal view virtual returns (uint256[2] memory virtualParameters) {\n        virtualParameters[0] = _sqrtParameters(true);\n        virtualParameters[1] = _sqrtParameters(false);\n        return virtualParameters;\n    }\n\n    function _sqrtParameters(bool parameter0) internal view virtual returns (uint256) {\n        return parameter0 ? _sqrtAlpha : _sqrtBeta;\n    }\n\n    /** @dev Reads the balance of a token from the balancer vault and returns the scaled amount. Smaller storage access\n     * compared to getVault().getPoolTokens().\n     * Copied from the 3CLP *except* that for the 2CLP, the scalingFactor is interpreted as a regular integer, not a\n     * FixedPoint number. This is an inconsistency between the base contracts.\n     */\n    function _getScaledTokenBalance(IERC20 token, uint256 scalingFactor) internal view returns (uint256 balance) {\n        // Signature of getPoolTokenInfo(): (pool id, token) -> (cash, managed, lastChangeBlock, assetManager)\n        // and total amount = cash + managed. See balancer repo, PoolTokens.sol and BalanceAllocation.sol\n        (uint256 cash, uint256 managed, , ) = getVault().getPoolTokenInfo(getPoolId(), token);\n        balance = cash + managed; // can't overflow, see BalanceAllocation.sol::total() in the Balancer repo.\n        balance = balance * scalingFactor;\n    }\n\n    /** @dev Get all balances in the pool, scaled by the appropriate scaling factors, in a relatively gas-efficient way.\n     * Essentially copied from the 3CLP.\n     */\n    function _getAllBalances() private view returns (uint256[] memory balances) {\n        // The below is more gas-efficient than the following line because the token slots don't have to be read in the\n        // vault.\n        // (, uint256[] memory balances, ) = getVault().getPoolTokens(getPoolId());\n        balances = new uint256[](2);\n        balances[0] = _getScaledTokenBalance(_token0, _scalingFactor0);\n        balances[1] = _getScaledTokenBalance(_token1, _scalingFactor1);\n        return balances;\n    }\n\n    /// @dev Returns virtual offsets a and b for reserves x and y respectively, as in (x+a)*(y+b)=L^2\n    function getVirtualParameters() external view returns (uint256[] memory virtualParams) {\n        uint256[] memory balances = _getAllBalances();\n        // _calculateCurrentValues() is defined in terms of an in/out pair, but we just map this to the 0/1 (x/y) pair.\n        virtualParams = new uint256[](2);\n        (, virtualParams[0], virtualParams[1]) = _calculateCurrentValues(balances[0], balances[1], true);\n    }\n\n    function _getVirtualParameters(uint256[2] memory sqrtParams, uint256 invariant)\n        internal\n        view\n        virtual\n        returns (uint256[2] memory virtualParameters)\n    {\n        virtualParameters[0] = _virtualParameters(true, sqrtParams[1], invariant);\n        virtualParameters[1] = _virtualParameters(false, sqrtParams[0], invariant);\n        return virtualParameters;\n    }\n\n    function _virtualParameters(\n        bool parameter0,\n        uint256 sqrtParam,\n        uint256 invariant\n    ) internal view virtual returns (uint256) {\n        return\n            parameter0\n                ? (Gyro2CLPMath._calculateVirtualParameter0(invariant, sqrtParam))\n                : (Gyro2CLPMath._calculateVirtualParameter1(invariant, sqrtParam));\n    }\n\n    /**\n     * @dev Returns the current value of the invariant.\n     */\n    function getInvariant() public view override returns (uint256) {\n        uint256[] memory balances = _getAllBalances();\n        uint256[2] memory sqrtParams = _sqrtParameters();\n\n        return Gyro2CLPMath._calculateInvariant(balances, sqrtParams[0], sqrtParams[1]);\n    }\n\n    // Swap Hooks\n\n    function onSwap(\n        SwapRequest memory request,\n        uint256 balanceTokenIn,\n        uint256 balanceTokenOut\n    ) public virtual override whenNotPaused onlyVault(request.poolId) returns (uint256) {\n        bool tokenInIsToken0 = request.tokenIn == _token0;\n\n        uint256 scalingFactorTokenIn = _scalingFactor(tokenInIsToken0);\n        uint256 scalingFactorTokenOut = _scalingFactor(!tokenInIsToken0);\n\n        // All token amounts are upscaled.\n        balanceTokenIn = _upscale(balanceTokenIn, scalingFactorTokenIn);\n        balanceTokenOut = _upscale(balanceTokenOut, scalingFactorTokenOut);\n\n        // All the calculations in one function to avoid Error Stack Too Deep\n        (uint256 currentInvariant, uint256 virtualParamIn, uint256 virtualParamOut) = _calculateCurrentValues(\n            balanceTokenIn,\n            balanceTokenOut,\n            tokenInIsToken0\n        );\n\n        // Update price oracle with the pre-swap balances\n        _updateOracle(\n            request.lastChangeBlock,\n            tokenInIsToken0 ? balanceTokenIn : balanceTokenOut,\n            tokenInIsToken0 ? balanceTokenOut : balanceTokenIn,\n            tokenInIsToken0 ? virtualParamIn : virtualParamOut,\n            tokenInIsToken0 ? virtualParamOut : virtualParamIn\n        );\n\n        if (request.kind == IVault.SwapKind.GIVEN_IN) {\n            // Fees are subtracted before scaling, to reduce the complexity of the rounding direction analysis.\n            // This is amount - fee amount, so we round up (favoring a higher fee amount).\n            uint256 feeAmount = request.amount.mulUp(getSwapFeePercentage());\n            // subtract fee and upscale so request.amount is appropriate for the following pool math.\n            request.amount = _upscale(request.amount.sub(feeAmount), scalingFactorTokenIn);\n\n            uint256 amountOut = _onSwapGivenIn(request, balanceTokenIn, balanceTokenOut, virtualParamIn, virtualParamOut);\n\n            // amountOut tokens are exiting the Pool, so we round down.\n            return _downscaleDown(amountOut, scalingFactorTokenOut);\n        } else {\n            request.amount = _upscale(request.amount, scalingFactorTokenOut);\n\n            uint256 amountIn = _onSwapGivenOut(request, balanceTokenIn, balanceTokenOut, virtualParamIn, virtualParamOut);\n\n            // amountIn tokens are entering the Pool, so we round up.\n            amountIn = _downscaleUp(amountIn, scalingFactorTokenIn);\n\n            // Fees are added after scaling happens, to reduce the complexity of the rounding direction analysis.\n            // This is amount + fee amount, so we round up (favoring a higher fee amount).\n            return amountIn.divUp(getSwapFeePercentage().complement());\n        }\n    }\n\n    // We assume all amounts to be upscaled correctly\n    function _onSwapGivenIn(\n        SwapRequest memory swapRequest,\n        uint256 currentBalanceTokenIn,\n        uint256 currentBalanceTokenOut,\n        uint256 virtualParamIn,\n        uint256 virtualParamOut\n    ) internal pure override returns (uint256) {\n        // NB: Swaps are disabled while the contract is paused.\n        return Gyro2CLPMath._calcOutGivenIn(currentBalanceTokenIn, currentBalanceTokenOut, swapRequest.amount, virtualParamIn, virtualParamOut);\n    }\n\n    function _onSwapGivenOut(\n        SwapRequest memory swapRequest,\n        uint256 currentBalanceTokenIn,\n        uint256 currentBalanceTokenOut,\n        uint256 virtualParamIn,\n        uint256 virtualParamOut\n    ) internal pure override returns (uint256) {\n        // NB: Swaps are disabled while the contract is paused.\n        return Gyro2CLPMath._calcInGivenOut(currentBalanceTokenIn, currentBalanceTokenOut, swapRequest.amount, virtualParamIn, virtualParamOut);\n    }\n\n    /// @dev invariant and virtual offsets.\n    function calculateCurrentValues(\n        uint256 balanceTokenIn, // not scaled\n        uint256 balanceTokenOut, // not scaled\n        bool tokenInIsToken0\n    )\n        public\n        view\n        returns (\n            uint256 currentInvariant,\n            uint256 virtualParamIn,\n            uint256 virtualParamOut\n        )\n    {\n        uint256 scalingFactorTokenIn = _scalingFactor(tokenInIsToken0);\n        uint256 scalingFactorTokenOut = _scalingFactor(!tokenInIsToken0);\n        balanceTokenIn = _upscale(balanceTokenIn, scalingFactorTokenIn);\n        balanceTokenOut = _upscale(balanceTokenOut, scalingFactorTokenOut);\n        return _calculateCurrentValues(balanceTokenIn, balanceTokenOut, tokenInIsToken0);\n    }\n\n    function _calculateCurrentValues(\n        uint256 balanceTokenIn, // scaled\n        uint256 balanceTokenOut, // scaled\n        bool tokenInIsToken0\n    )\n        internal\n        view\n        returns (\n            uint256 currentInvariant,\n            uint256 virtualParamIn,\n            uint256 virtualParamOut\n        )\n    {\n        uint256[] memory balances = new uint256[](2);\n        balances[0] = tokenInIsToken0 ? balanceTokenIn : balanceTokenOut;\n        balances[1] = tokenInIsToken0 ? balanceTokenOut : balanceTokenIn;\n\n        uint256[2] memory sqrtParams = _sqrtParameters();\n\n        currentInvariant = Gyro2CLPMath._calculateInvariant(balances, sqrtParams[0], sqrtParams[1]);\n\n        uint256[2] memory virtualParam = _getVirtualParameters(sqrtParams, currentInvariant);\n\n        virtualParamIn = tokenInIsToken0 ? virtualParam[0] : virtualParam[1];\n        virtualParamOut = tokenInIsToken0 ? virtualParam[1] : virtualParam[0];\n    }\n\n    /**\n     * @dev Called when the Pool is joined for the first time; that is, when the BPT total supply is zero.\n     *\n     * Returns the amount of BPT to mint, and the token amounts the Pool will receive in return.\n     *\n     * Minted BPT will be sent to `recipient`, except for _MINIMUM_BPT, which will be deducted from this amount and sent\n     * to the zero address instead. This will cause that BPT to remain forever locked there, preventing total BPT from\n     * ever dropping below that value, and ensuring `_onInitializePool` can only be called once in the entire Pool's\n     * lifetime.\n     *\n     * The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n     * be downscaled (rounding up) before being returned to the Vault.\n     */\n    function _onInitializePool(\n        bytes32,\n        address,\n        address,\n        bytes memory userData\n    ) internal override returns (uint256, uint256[] memory) {\n        BaseWeightedPool.JoinKind kind = userData.joinKind();\n        _require(kind == BaseWeightedPool.JoinKind.INIT, Errors.UNINITIALIZED);\n\n        uint256[] memory amountsIn = userData.initialAmountsIn();\n        InputHelpers.ensureInputLengthMatch(amountsIn.length, 2);\n        _upscaleArray(amountsIn);\n\n        uint256[2] memory sqrtParams = _sqrtParameters();\n\n        uint256 invariantAfterJoin = Gyro2CLPMath._calculateInvariant(amountsIn, sqrtParams[0], sqrtParams[1]);\n\n        // Set the initial BPT to the value of the invariant times the number of tokens. This makes BPT supply more\n        // consistent in Pools with similar compositions but different number of tokens.\n        // Note that the BPT supply also depends on the parameters of the pool.\n\n        uint256 bptAmountOut = Math.mul(invariantAfterJoin, 2);\n\n        _lastInvariant = invariantAfterJoin;\n\n        return (bptAmountOut, amountsIn);\n    }\n\n    /**\n     * @dev Called whenever the Pool is joined after the first initialization join (see `_onInitializePool`).\n     *\n     * Returns the amount of BPT to mint, the token amounts that the Pool will receive in return, and the number of\n     * tokens to pay in protocol swap fees.\n     *\n     * Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n     * performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n     *\n     * Minted BPT will be sent to `recipient`.\n     *\n     * The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n     * be downscaled (rounding up) before being returned to the Vault.\n     *\n     * Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onJoinPool`). These\n     * amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n     *\n     * protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way\n     *\n     * Responsibility for updating the oracle has been moved from `onJoinPool()` (without the underscore) to this\n     * function. That is because both this function and `_updateOracle()` need access to the invariant and this way we\n     * can share the computation.\n     */\n    function _onJoinPool(\n        bytes32,\n        address,\n        address recipient,\n        uint256[] memory balances,\n        uint256 lastChangeBlock,\n        uint256, //protocolSwapFeePercentage,\n        bytes memory userData\n    )\n        internal\n        override\n        returns (\n            uint256,\n            uint256[] memory,\n            uint256[] memory\n        )\n    {\n        // NB Joins are disabled when the pool is paused.\n\n        uint256[2] memory sqrtParams = _sqrtParameters();\n\n        // Due protocol swap fee amounts are computed by measuring the growth of the invariant between the previous\n        // join or exit event and now - the invariant's growth is due exclusively to swap fees. This avoids\n        // spending gas accounting for fees on each individual swap.\n        uint256 invariantBeforeAction = Gyro2CLPMath._calculateInvariant(balances, sqrtParams[0], sqrtParams[1]);\n        uint256[2] memory virtualParam = _getVirtualParameters(sqrtParams, invariantBeforeAction);\n\n        // Update price oracle with pre-join balances\n        _updateOracle(lastChangeBlock, balances[0], balances[1], virtualParam[0], virtualParam[1]);\n\n        _distributeFees(invariantBeforeAction);\n\n        (uint256 bptAmountOut, uint256[] memory amountsIn) = _doJoin(balances, userData);\n\n        if (_capParams.capEnabled) {\n            _ensureCap(bptAmountOut, balanceOf(recipient), totalSupply());\n        }\n\n        // Since we pay fees in BPT, they have not changed the invariant and 'invariantBeforeAction' is still consistent\n        // with  'balances'. Therefore, we can use a simplified method to update the invariant that does not require a\n        // full re-computation.\n        // Note: Should this be changed in the future, we also need to reduce the invariant proportionally by the total\n        // protocol fee factor.\n        _lastInvariant = GyroPoolMath.liquidityInvariantUpdate(invariantBeforeAction, bptAmountOut, totalSupply(), true);\n\n        // returns a new uint256[](2) b/c Balancer vault is expecting a fee array, but fees paid in BPT instead\n        return (bptAmountOut, amountsIn, new uint256[](2));\n    }\n\n    function _doJoin(uint256[] memory balances, bytes memory userData) internal view returns (uint256 bptAmountOut, uint256[] memory amountsIn) {\n        BaseWeightedPool.JoinKind kind = userData.joinKind();\n\n        // We do NOT currently support unbalanced update, i.e., EXACT_TOKENS_IN_FOR_BPT_OUT or TOKEN_IN_FOR_EXACT_BPT_OUT\n        if (kind == BaseWeightedPool.JoinKind.ALL_TOKENS_IN_FOR_EXACT_BPT_OUT) {\n            (bptAmountOut, amountsIn) = _joinAllTokensInForExactBPTOut(balances, userData);\n        } else {\n            _revert(Errors.UNHANDLED_JOIN_KIND);\n        }\n    }\n\n    function _joinAllTokensInForExactBPTOut(uint256[] memory balances, bytes memory userData)\n        internal\n        view\n        override\n        returns (uint256, uint256[] memory)\n    {\n        uint256 bptAmountOut = userData.allTokensInForExactBptOut();\n        // Note that there is no maximum amountsIn parameter: this is handled by `IVault.joinPool`.\n\n        uint256[] memory amountsIn = GyroPoolMath._calcAllTokensInGivenExactBptOut(balances, bptAmountOut, totalSupply());\n\n        return (bptAmountOut, amountsIn);\n    }\n\n    /**\n     * @dev Called whenever the Pool is exited.\n     *\n     * Returns the amount of BPT to burn, the token amounts for each Pool token that the Pool will grant in return, and\n     * the number of tokens to pay in protocol swap fees.\n     *\n     * Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n     * performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n     *\n     * BPT will be burnt from `sender`.\n     *\n     * The Pool will grant tokens to `recipient`. These amounts are considered upscaled and will be downscaled\n     * (rounding down) before being returned to the Vault.\n     *\n     * Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onExitPool`). These\n     * amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n     *\n     * protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way\n     */\n    function _onExitPool(\n        bytes32,\n        address,\n        address,\n        uint256[] memory balances,\n        uint256 lastChangeBlock,\n        uint256, // protocolSwapFeePercentage,\n        bytes memory userData\n    )\n        internal\n        override\n        returns (\n            uint256 bptAmountIn,\n            uint256[] memory amountsOut,\n            uint256[] memory dueProtocolFeeAmounts\n        )\n    {\n        // Exits are not completely disabled while the contract is paused: proportional exits (exact BPT in for tokens\n        // out) remain functional.\n\n        uint256[2] memory sqrtParams = _sqrtParameters();\n\n        if (_isNotPaused()) {\n            // Due protocol swap fee amounts are computed by measuring the growth of the invariant between the previous\n            // join or exit event and now - the invariant's growth is due exclusively to swap fees. This avoids\n            // spending gas calculating the fees on each individual swap.\n            uint256 invariantBeforeAction = Gyro2CLPMath._calculateInvariant(balances, sqrtParams[0], sqrtParams[1]);\n            uint256[2] memory virtualParam = _getVirtualParameters(sqrtParams, invariantBeforeAction);\n\n            // Update price oracle with the pre-exit balances\n            _updateOracle(lastChangeBlock, balances[0], balances[1], virtualParam[0], virtualParam[1]);\n\n            _distributeFees(invariantBeforeAction);\n\n            (bptAmountIn, amountsOut) = _doExit(balances, userData);\n\n            // Since we pay fees in BPT, they have not changed the invariant and 'invariantBeforeAction' is still\n            // consistent with 'balances'. Therefore, we can use a simplified method to update the invariant that does\n            // not require a full re-computation.\n            // Note: Should this be changed in the future, we also need to reduce the invariant proportionally by the\n            // total protocol fee factor.\n            _lastInvariant = GyroPoolMath.liquidityInvariantUpdate(invariantBeforeAction, bptAmountIn, totalSupply(), false);\n        } else {\n            // Note: If the contract is paused, swap protocol fee amounts are not charged and the oracle is not updated\n            // to avoid extra calculations and reduce the potential for errors.\n            (bptAmountIn, amountsOut) = _doExit(balances, userData);\n\n            // Invalidate _lastInvariant. We do not compute the invariant to reduce the potential for errors or lockup.\n            // Instead, we set the invariant such that any following (non-paused) join/exit will ignore and recompute\n            // it. (see GyroPoolMath._calcProtocolFees())\n            _lastInvariant = type(uint256).max;\n        }\n\n        // returns a new uint256[](2) b/c Balancer vault is expecting a fee array, but fees paid in BPT instead\n        return (bptAmountIn, amountsOut, new uint256[](2));\n    }\n\n    function _doExit(uint256[] memory balances, bytes memory userData) internal view returns (uint256 bptAmountIn, uint256[] memory amountsOut) {\n        BaseWeightedPool.ExitKind kind = userData.exitKind();\n\n        // We do NOT support unbalanced exit at the moment, i.e., EXACT_BPT_IN_FOR_ONE_TOKEN_OUT or\n        // BPT_IN_FOR_EXACT_TOKENS_OUT.\n        if (kind == BaseWeightedPool.ExitKind.EXACT_BPT_IN_FOR_TOKENS_OUT) {\n            (bptAmountIn, amountsOut) = _exitExactBPTInForTokensOut(balances, userData);\n        } else {\n            _revert(Errors.UNHANDLED_EXIT_KIND);\n        }\n    }\n\n    function _exitExactBPTInForTokensOut(uint256[] memory balances, bytes memory userData)\n        internal\n        view\n        override\n        returns (uint256, uint256[] memory)\n    {\n        // This exit function is the only one that is not disabled if the contract is paused: it remains unrestricted\n        // in an attempt to provide users with a mechanism to retrieve their tokens in case of an emergency.\n        // This particular exit function is the only one that remains available because it is the simplest one, and\n        // therefore the one with the lowest likelihood of errors.\n\n        uint256 bptAmountIn = userData.exactBptInForTokensOut();\n        // Note that there is no minimum amountOut parameter: this is handled by `IVault.exitPool`.\n\n        uint256[] memory amountsOut = GyroPoolMath._calcTokensOutGivenExactBptIn(balances, bptAmountIn, totalSupply());\n        return (bptAmountIn, amountsOut);\n    }\n\n    // Helpers\n\n    /**\n     * @dev Computes and distributes fees between the Balancer and the Gyro treasury\n     * The fees are computed and distributed in BPT rather than using the\n     * Balancer regular distribution mechanism which would pay these in underlying\n     */\n\n    function _distributeFees(uint256 invariantBeforeAction) internal {\n        // calculate Protocol fees in BPT\n        // lastInvariant is the invariant logged at the end of the last liquidity update\n        // protocol fees are calculated on swap fees earned between liquidity updates\n        (uint256 gyroFees, uint256 balancerFees, address gyroTreasury, address balTreasury) = _getDueProtocolFeeAmounts(\n            _lastInvariant,\n            invariantBeforeAction\n        );\n\n        // Pay fees in BPT\n        _payFeesBpt(gyroFees, balancerFees, gyroTreasury, balTreasury);\n    }\n\n    /**\n     * @dev this function overrides inherited function to make sure it is never used\n     */\n    function _getDueProtocolFeeAmounts(\n        uint256[] memory, // balances,\n        uint256[] memory, // normalizedWeights,\n        uint256, // previousInvariant,\n        uint256, // currentInvariant,\n        uint256 // protocolSwapFeePercentage\n    ) internal pure override returns (uint256[] memory) {\n        revert(\"Not implemented\");\n    }\n\n    /**\n     * @dev Calculates protocol fee amounts in BPT terms.\n     * protocolSwapFeePercentage is not used here b/c we take parameters from GyroConfig instead.\n     * Returns: BPT due to Gyro, BPT due to Balancer, receiving address for Gyro fees, receiving address for Balancer\n     * fees.\n     */\n    function _getDueProtocolFeeAmounts(uint256 previousInvariant, uint256 currentInvariant)\n        internal\n        view\n        returns (\n            uint256,\n            uint256,\n            address,\n            address\n        )\n    {\n        (uint256 protocolSwapFeePerc, uint256 protocolFeeGyroPortion, address gyroTreasury, address balTreasury) = _getFeesMetadata();\n\n        // Early return if the protocol swap fee percentage is zero, saving gas.\n        if (protocolSwapFeePerc == 0) {\n            return (0, 0, gyroTreasury, balTreasury);\n        }\n\n        // Calculate fees in BPT\n        (uint256 gyroFees, uint256 balancerFees) = GyroPoolMath._calcProtocolFees(\n            previousInvariant,\n            currentInvariant,\n            totalSupply(),\n            protocolSwapFeePerc,\n            protocolFeeGyroPortion\n        );\n\n        return (gyroFees, balancerFees, gyroTreasury, balTreasury);\n    }\n\n    function _payFeesBpt(\n        uint256 gyroFees,\n        uint256 balancerFees,\n        address gyroTreasury,\n        address balTreasury\n    ) internal {\n        // Pay fees in BPT to gyro treasury\n        if (gyroFees > 0) {\n            _mintPoolTokens(gyroTreasury, gyroFees);\n        }\n        // Pay fees in BPT to bal treasury\n        if (balancerFees > 0) {\n            _mintPoolTokens(balTreasury, balancerFees);\n        }\n    }\n\n    function _getFeesMetadata()\n        internal\n        view\n        returns (\n            uint256,\n            uint256,\n            address,\n            address\n        )\n    {\n        return (\n            gyroConfig.getUint(GyroConfigKeys.PROTOCOL_SWAP_FEE_PERC_KEY),\n            gyroConfig.getUint(GyroConfigKeys.PROTOCOL_FEE_GYRO_PORTION_KEY),\n            gyroConfig.getAddress(GyroConfigKeys.GYRO_TREASURY_KEY),\n            gyroConfig.getAddress(GyroConfigKeys.BAL_TREASURY_KEY)\n        );\n    }\n\n    /**\n     * @dev Updates the Price Oracle based on the Pool's current state (balances, BPT supply and invariant). Must be\n     * called on *all* state-changing functions with the balances *before* the state change happens, and with\n     * `lastChangeBlock` as the number of the block in which any of the balances last changed.\n     */\n    function _updateOracle(\n        uint256 lastChangeBlock,\n        uint256 balanceToken0,\n        uint256 balanceToken1,\n        uint256 virtualParam0,\n        uint256 virtualParam1\n    ) internal {\n        bytes32 miscData = _miscData;\n        if (miscData.oracleEnabled() && block.number > lastChangeBlock) {\n            int256 logSpotPrice = Gyro2CLPOracleMath._calcLogSpotPrice(balanceToken0, virtualParam0, balanceToken1, virtualParam1);\n\n            int256 logBPTPrice = Gyro2CLPOracleMath._calcLogBPTPrice(\n                balanceToken0,\n                virtualParam0,\n                balanceToken1,\n                virtualParam1,\n                miscData.logTotalSupply()\n            );\n\n            uint256 oracleCurrentIndex = miscData.oracleIndex();\n            uint256 oracleCurrentSampleInitialTimestamp = miscData.oracleSampleCreationTimestamp();\n            uint256 oracleUpdatedIndex = _processPriceData(\n                oracleCurrentSampleInitialTimestamp,\n                oracleCurrentIndex,\n                logSpotPrice,\n                logBPTPrice,\n                miscData.logInvariant()\n            );\n\n            if (oracleCurrentIndex != oracleUpdatedIndex) {\n                // solhint-disable not-rely-on-time\n                miscData = miscData.setOracleIndex(oracleUpdatedIndex);\n                miscData = miscData.setOracleSampleCreationTimestamp(block.timestamp);\n                _miscData = miscData;\n            }\n        }\n    }\n\n    /**\n     * @dev this variant of the function, called from `onJoinPool()` and `onExitPool()`, which we inherit, is a no-op.\n     * We instead have moved responsibility for updating the oracle to `_onJoinPool()` and `_onExitPool()` and the above\n     * version is called from there.\n     */\n    function _updateOracle(\n        uint256 lastChangeBlock,\n        uint256 balanceToken0,\n        uint256 balanceToken1\n    ) internal override {\n        // Do nothing.\n    }\n\n    function _setPausedState(bool paused) internal override {\n        _setPaused(paused);\n    }\n}\n", "sourceMap": "1423:28520:2:-:0;;;873:95:83;820:148;;2925:4:15;2878:51;;;;2935;;3251:1;3201:51;;2102:527:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2305:19;;;;;2244:17;;;;;2263:16;;;;;2201:17;;5089:26:15;;;;5117:27;;;;4975:11;;;;;4988:13;;;;;5003:12;;2020:280:81;;;;;;;;;;;-1:-1:-1;;;2020:280:81;;;;5047:12:15;;;;4935:10;1929:46:63;;;1749:14:49;;;;-1:-1:-1;;;;;;1749:14:49;;;;2002:13:82;;2305:19:2;;2244:17;;2263:16;;2201:17;;5089:26:15;;5117:27;;4975:11;;4988:13;4975:11;;;;;;4988:13;;2002::82;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2025:17:82;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2052:9:82;:14;;2064:2;-1:-1:-1;;2052:14:82;;;;;;-1:-1:-1;2100:22:81;;;;;;;2085:37;;2150:25;;;;;2132:43;;-1:-1:-1;2198:95:81;2052:14:82;2185:108:81;1852:14:46::2;::::0;-1:-1:-1;;;;;;1852:14:46;::::2;::::0;-1:-1:-1;2458:93:73;;-1:-1:-1;2164:7:73;2467:49;;;8518:3:64;2458:8:73;:93::i;:::-;2561:96;2232:7;2570:51;;;8582:3:64;2561:8:73;:96::i;:::-;2697:15;:37;;;;2745:40;;;;2818:41;2795:64;;5185:15:15::4;::::0;;5198:1:::4;5185:15:::0;;;;;::::4;::::0;;2668:26:73;;5185:15:15::4;::::0;::::4;::::0;;::::4;::::0;::::4;;::::0;-1:-1:-1;5185:15:15::4;5160:40;;5222:6;:13;;;5210:6;5217:1;5210:9;;;;;;;;-1:-1:-1::0;;;;;5210:25:15;;::::4;:9;::::0;;::::4;::::0;;;;;;;:25;5257:13:::4;::::0;::::4;::::0;5245:9;;:6;;-1:-1:-1;;5245:9:15;::::4;;;;;-1:-1:-1::0;;;;;5245:25:15;;::::4;:9;::::0;;::::4;::::0;;;;;;:25;5435:40:::4;::::0;5468:6;;5435:32:::4;;::::0;::::4;;:40:::0;::::4;:::i;:::-;5504:20;::::0;::::4;::::0;5486:39:::4;::::0;:17:::4;:39::i;:::-;5557:24;::::0;::::4;::::0;5535:47:::4;::::0;:21:::4;:47::i;:::-;5610:12:::0;;:62:::4;::::0;-1:-1:-1;;;5610:62:15;;5593:14:::4;::::0;-1:-1:-1;;;;;5610:25:15::4;::::0;-1:-1:-1;;5610:62:15::4;::::0;5636:35:::4;::::0;5610:62:::4;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5736:12:::0;;5780:16:::4;::::0;;5794:1:::4;5780:16:::0;;;;;::::4;::::0;;5593:79;;-1:-1:-1;;;;;;5736:27:15;;::::4;::::0;::::4;::::0;5593:79;;5772:6;;5794:1;5780:16:::4;::::0;::::4;::::0;;::::4;::::0;::::4;;::::0;-1:-1:-1;5780:16:15::4;5736:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;::::0;::::4;;;;;-1:-1:-1::0;;;5897:16:15::4;::::0;;;-1:-1:-1;5934:13:15::4;::::0;;::::4;::::0;;5924:23;;-1:-1:-1;;;;;;5924:23:15;;;::::4;::::0;5967:13:::4;::::0;::::4;::::0;5957:23;;;;;;::::4;::::0;6031:13;6009:36:::4;::::0;:21:::4;:36::i;:::-;5991:54;::::0;6095:13:::4;::::0;::::4;::::0;6073:36:::4;::::0;:21:::4;:36::i;:::-;6055:54;::::0;-1:-1:-1;;1085:15:14;;;;;;;;;;;;-1:-1:-1;;;1085:15:14;;;;;-1:-1:-1;;;;;;1058:25:14;;1050:51;;;;-1:-1:-1;;;1050:51:14;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;1111:10:14;:24;;-1:-1:-1;;;;;;1111:24:14;-1:-1:-1;;;;;1111:24:14;;;;;;1169:17;;1145:10;:41;;1223:20;;;;1276:16;;;;;-1:-1:-1;;1145:41:14;;;;;;;;;;-1:-1:-1;;1196:47:14;-1:-1:-1;;;;;;1196:47:14;;;;;;;;;;;-1:-1:-1;;;;;1253:39:14;;;-1:-1:-1;;;1253:39:14;;;;;;;;501:63:17;;511:27;;;;4475:3:41;501:9:17;:63::i;:::-;574:12;:28;;-1:-1:-1;;;;;;574:28:17;-1:-1:-1;;;;;574:28:17;;;;;;;;;;2369:15:2::3;::::0;::::3;::::0;2350:16:::3;::::0;::::3;::::0;2340:83:::3;::::0;-1:-1:-1;175:3:3::3;2340:9:2;:83::i;:::-;2433:63;-1:-1:-1::0;;;;;2443:27:2;::::3;::::0;::::3;4475:3:41;2433:9:2;:63::i;:::-;2519:16;::::0;::::3;::::0;2506:29:::3;::::0;2557:15:::3;::::0;;::::3;::::0;2545:27:::3;::::0;2583:10:::3;:39:::0;;-1:-1:-1;;;;;;2583:39:2::3;-1:-1:-1::0;;;;;2583:39:2;;::::3;::::0;;;::::3;::::0;;1423:28520;;866:101:64;935:9;930:34;;946:18;954:9;946:7;:18::i;:::-;866:101;;:::o;1135:274:70:-;1345:5;1369:33;1345:5;1369:19;:33::i;8557:158:15:-;8629:35;8656:7;8629:9;;:26;;;;;;:35;;;;:::i;:::-;8617:9;:47;8679:29;;;;;;8700:7;;8679:29;:::i;:::-;;;;;;;;8557:158;:::o;7279:397::-;7355:87;2487:4;7364:45;;;5289:3:64;7355:8:15;:87::i;:::-;7452;2560:4;7461:45;;;5228:3:64;7452:8:15;:87::i;:::-;7562:49;7593:17;7562:9;;:30;;;;;;:49;;;;:::i;:::-;7550:9;:61;7626:43;;;;;;7651:17;;7626:43;:::i;39636:399::-;39703:7;39802:21;39840:5;-1:-1:-1;;;;;39826:30:15;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;39802:56;;;;39933:26;39962:27;39971:2;39975:13;39962:8;;;;;:27;;:::i;:::-;40006:2;:22;;-1:-1:-1;;;39636:399:15;;;;:::o;256:103:41:-;326:9;321:35;;337:19;346:9;337:8;:19::i;1074:3172:64:-;-1:-1:-1;;;3588:3:64;3581:79;;;3799:66;3793:4;3786:80;3941:1;3935:4;3928:15;2210:2;2243:18;;;2336;;;2383;;;2215:4;2379:29;;;3057:2;3053:17;2195:18;;;;2288;;;;2284:29;;;;3040:1;3036:14;3025:26;;;;3021:50;;;;2999:73;;2994:3;2990:83;4008:4;4001:26;4234:3;;4224:14;1415:374:70;1511:1;1496:5;:12;:16;1492:53;;;1528:7;;1492:53;1555:16;1574:5;1580:1;1574:8;;;;;;;;;;;;;;1555:27;;1597:9;1609:1;1597:13;;1592:191;1616:5;:12;1612:1;:16;1592:191;;;1649:15;1667:5;1673:1;1667:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;1689:51:70;-1:-1:-1;;;;;1698:18:70;;;;;;;4890:3:64;1689:8:70;:51::i;:::-;1765:7;-1:-1:-1;1630:3:70;;1592:191;;;;1415:374;;;:::o;4808:172:61:-;4892:7;4918:55;4934:14;2092:2;4918:4;:15;;;;;;:55;;;;;:::i;:::-;4911:62;4808:172;-1:-1:-1;;;4808:172:61:o;5083:194::-;5178:7;5204:66;5222:18;2155:2;5204:4;:17;;;;;;:66;;;;;:::i;948:166:77:-;1006:7;1025:37;1034:6;;;;4370:1:64;1025:8:77;:37::i;:::-;-1:-1:-1;1084:5:77;;;948:166::o;793:128:41:-;841:29;850:9;-1:-1:-1;;;841:8:41;:29::i;3094:280:74:-;3209:7;2126:10;3276:17;;3274:20;3258:36;;3287:6;3342:5;:13;;3354:1;3342:13;;;3350:1;3342:13;3334:22;;:32;;3312:55;;3094:280;-1:-1:-1;;;;3094:280:74:o;6887:269::-;-1:-1:-1;7074:18:74;;7072:21;7056:37;;;;7133:15;;7111:38;;6887:269::o;1028:3379:41:-;-1:-1:-1;;;1091:18:41;3742:79;;;3960:66;3954:4;3947:80;4102:1;4096:4;4089:15;2230:2;2263:18;;;2308;;;2235:4;2304:29;;;3106:1;3197:14;2215:18;;;;3186:26;;;;2356:18;;;;2403;;;2399:29;;3218:2;3214:17;3182:50;3096:4;3102:18;;;;;;3092:29;3088:2;3084:38;3161:72;;;;3156:3;3152:82;4169:4;4162:26;1120:14;;;;;4395:3;;4385:14;1423:28520:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1423:28520:2;;;-1:-1:-1;1423:28520:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:179:127;95:13;;-1:-1:-1;;;;;137:31:127;;127:42;;117:2;;183:1;180;173:12;198:166;276:13;;325;;318:21;308:32;;298:2;;354:1;351;344:12;369:505;;478:3;471:4;463:6;459:17;455:27;445:2;;500:5;493;486:20;445:2;527:13;;-1:-1:-1;552:26:127;;549:2;;;581:9;549:2;616:54;664:4;-1:-1:-1;;658:2:127;639:13;;635:27;631:38;616:54;:::i;:::-;695:2;686:7;679:19;741:3;734:4;729:2;721:6;717:15;713:26;710:35;707:2;;;762:5;755;748:20;707:2;779:64;840:2;833:4;824:7;820:18;813:4;805:6;801:17;779:64;:::i;:::-;861:7;435:439;-1:-1:-1;;;;435:439:127:o;879:783::-;;997:4;985:9;980:3;976:19;972:30;969:2;;;1019:5;1012;1005:20;969:2;1056;1050:9;1098:4;1086:17;;1154:22;;;-1:-1:-1;1118:34:127;;1115:62;1112:2;;;1180:9;1112:2;1207;1200:22;1240:6;-1:-1:-1;1240:6:127;1270:39;1299:9;1270:39;:::i;:::-;1255:55;;1355:2;1340:18;;1334:25;-1:-1:-1;;;;;1390:33:127;;1378:46;;1368:2;;1438:1;1435;1428:12;1368:2;1470;1458:15;;1451:32;1528:2;1513:18;;1507:25;-1:-1:-1;;;;;1563:33:127;;1551:46;;1541:2;;1611:1;1608;1601:12;1541:2;1643;1631:15;;;;1624:32;959:703;;-1:-1:-1;;959:703:127:o;1667:1251::-;;1771:6;1814:2;1802:9;1797:3;1793:19;1789:28;1786:2;;;1834:5;1827;1820:20;1786:2;1860:18;1875:2;1860:18;:::i;:::-;1851:27;;;1901:42;1933:9;1901:42;:::i;:::-;1887:57;;1988:2;1973:18;;1967:25;-1:-1:-1;2041:14:127;;;2038:2;;;2068:1;2065;2058:12;2038:2;2104:59;2159:3;2150:6;2139:9;2135:22;2104:59;:::i;:::-;2099:2;2092:5;2088:14;2081:83;2210:2;2199:9;2195:18;2189:25;2173:41;;2239:2;2229:8;2226:16;2223:2;;;2255:1;2252;2245:12;2223:2;;2291:61;2348:3;2337:8;2326:9;2322:24;2291:61;:::i;:::-;2286:2;2279:5;2275:14;2268:85;;2385:51;2432:2;2421:9;2417:18;2385:51;:::i;:::-;2380:2;2373:5;2369:14;2362:75;2470:52;2517:3;2506:9;2502:19;2470:52;:::i;:::-;2464:3;2457:5;2453:15;2446:77;2577:3;2566:9;2562:19;2556:26;2550:3;2543:5;2539:15;2532:51;2637:3;2626:9;2622:19;2616:26;2610:3;2603:5;2599:15;2592:51;2697:3;2686:9;2682:19;2676:26;2670:3;2663:5;2659:15;2652:51;2722:3;2757:48;2801:2;2790:9;2786:18;2757:48;:::i;:::-;2741:14;;;2734:72;2825:3;2860:51;2892:18;;;2860:51;:::i;:::-;2844:14;;;2837:75;2848:5;1751:1167;-1:-1:-1;;1751:1167:127:o;2923:194::-;;3046:2;3034:9;3025:7;3021:23;3017:32;3014:2;;;3067:6;3059;3052:22;3014:2;-1:-1:-1;3095:16:127;;3004:113;-1:-1:-1;3004:113:127:o;3122:1264::-;;;3289:2;3277:9;3268:7;3264:23;3260:32;3257:2;;;3310:6;3302;3295:22;3257:2;3342:16;;-1:-1:-1;3407:14:127;;;3404:2;;;3439:6;3431;3424:22;3404:2;3467:22;;;;3523:6;3505:16;;;3501:29;3498:2;;;3548:6;3540;3533:22;3498:2;3586;3580:9;3628:4;3620:6;3616:17;3683:6;3671:10;3668:22;3663:2;3651:10;3648:18;3645:46;3642:2;;;3694:9;3642:2;3721;3714:22;3761:9;;3782:16;;;3779:2;;;3816:6;3808;3801:22;3779:2;3849:73;3914:7;3903:8;3899:2;3895:17;3849:73;:::i;:::-;3841:6;3834:89;;3970:2;3966;3962:11;3956:18;3951:2;3943:6;3939:15;3932:43;4022:2;4018;4014:11;4008:18;4003:2;3995:6;3991:15;3984:43;4060:44;4100:2;4096;4092:11;4060:44;:::i;:::-;4055:2;4047:6;4043:15;4036:69;4139:64;4195:7;4189:3;4185:2;4181:12;4139:64;:::i;:::-;4133:3;4125:6;4121:16;4114:90;4239:45;4279:3;4275:2;4271:12;4239:45;:::i;:::-;4232:4;4220:17;;4213:72;4224:6;-1:-1:-1;4329:51:127;;-1:-1:-1;;4376:2:127;4361:18;;4329:51;:::i;:::-;4319:61;;3247:1139;;;;;:::o;4391:293::-;;4512:2;4500:9;4491:7;4487:23;4483:32;4480:2;;;4533:6;4525;4518:22;4480:2;4570:9;4564:16;4620:4;4613:5;4609:16;4602:5;4599:27;4589:2;;4645:6;4637;4630:22;4689:187;4854:14;;4847:22;4829:41;;4817:2;4802:18;;4784:92::o;4881:1296::-;;5193:2;5182:9;5178:18;5223:6;5212:9;5205:25;5249:2;5287;5282;5271:9;5267:18;5260:30;5310:6;5345;5339:13;5376:6;5368;5361:22;5414:3;5403:9;5399:19;5392:26;;5453:2;5445:6;5441:15;5427:29;;5474:4;5487:195;5501:6;5498:1;5495:13;5487:195;;;5566:13;;-1:-1:-1;;;;;5562:39:127;5550:52;;5657:15;;;;5622:12;;;;-1:-1:-1;5516:9:127;5487:195;;;-1:-1:-1;;5718:19:127;;;5713:2;5698:18;;5691:47;5788:13;;5810:21;;;5849:12;;;;-1:-1:-1;5886:15:127;;;;5921:4;5934:215;5950:8;5945:3;5942:17;5934:215;;;6023:15;;-1:-1:-1;;;;;6019:41:127;6005:56;;6083:14;;;;6122:17;;;;-1:-1:-1;5969:11:127;5934:215;;;-1:-1:-1;6166:5:127;;5154:1023;-1:-1:-1;;;;;;;;5154:1023:127:o;6182:246::-;6338:2;6323:18;;6371:1;6360:13;;6350:2;;6377:9;6350:2;6397:25;;;6305:123;:::o;6433:383::-;;6582:2;6571:9;6564:21;6614:6;6608:13;6657:6;6652:2;6641:9;6637:18;6630:34;6673:66;6732:6;6727:2;6716:9;6712:18;6707:2;6699:6;6695:15;6673:66;:::i;:::-;6800:2;6779:15;-1:-1:-1;;6775:29:127;6760:45;;;;6807:2;6756:54;;6554:262;-1:-1:-1;;6554:262:127:o;6821:177::-;6967:25;;;6955:2;6940:18;;6922:76::o;7003:242::-;7073:2;7067:9;7103:17;;;7171:22;;;-1:-1:-1;7135:34:127;;7132:62;7129:2;;;7197:9;7129:2;7224;7217:22;7047:198;;-1:-1:-1;7047:198:127:o;7250:258::-;7322:1;7332:113;7346:6;7343:1;7340:13;7332:113;;;7422:11;;;7416:18;7403:11;;;7396:39;7368:2;7361:10;7332:113;;;7463:6;7460:1;7457:13;7454:2;;;7498:1;7489:6;7484:3;7480:16;7473:27;7454:2;;7303:205;;;:::o;:::-;1423:28520:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/2clp/Gyro2CLPPool.sol", "type": "contract", "deployment": {"address": "0xFA9Ee04a5545D8e0a26B30F5cA5CbecD75eA645F", "chainid": "137", "blockHeight": 33346210}}