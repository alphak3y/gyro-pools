{"abi": [{"inputs": [{"components": [{"components": [{"internalType": "contract IVault", "name": "vault", "type": "address"}, {"internalType": "string", "name": "name", "type": "string"}, {"internalType": "string", "name": "symbol", "type": "string"}, {"internalType": "contract IERC20", "name": "token0", "type": "address"}, {"internalType": "contract IERC20", "name": "token1", "type": "address"}, {"internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}, {"internalType": "uint256", "name": "pauseWindowDuration", "type": "uint256"}, {"internalType": "uint256", "name": "bufferPeriodDuration", "type": "uint256"}, {"internalType": "address", "name": "owner", "type": "address"}], "internalType": "struct ExtensibleWeightedPool2Tokens.NewPoolParams", "name": "baseParams", "type": "tuple"}, {"internalType": "uint256", "name": "sqrtAlpha", "type": "uint256"}, {"internalType": "uint256", "name": "sqrtBeta", "type": "uint256"}, {"internalType": "address", "name": "rateProvider0", "type": "address"}, {"internalType": "address", "name": "rateProvider1", "type": "address"}, {"internalType": "address", "name": "capManager", "type": "address"}, {"components": [{"internalType": "bool", "name": "capEnabled", "type": "bool"}, {"internalType": "uint120", "name": "perAddressCap", "type": "uint120"}, {"internalType": "uint128", "name": "globalCap", "type": "uint128"}], "internalType": "struct ICappedLiquidity.CapParams", "name": "capParams", "type": "tuple"}, {"internalType": "address", "name": "pauseManager", "type": "address"}], "internalType": "struct Gyro2CLPPool.GyroParams", "name": "params", "type": "tuple"}, {"internalType": "address", "name": "configAddress", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "owner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "spender", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Approval", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "capManager", "type": "address"}], "name": "CapManagerUpdated", "type": "event"}, {"anonymous": false, "inputs": [{"components": [{"internalType": "bool", "name": "capEnabled", "type": "bool"}, {"internalType": "uint120", "name": "perAddressCap", "type": "uint120"}, {"internalType": "uint128", "name": "globalCap", "type": "uint128"}], "indexed": false, "internalType": "struct ICappedLiquidity.CapParams", "name": "params", "type": "tuple"}], "name": "CapParamsUpdated", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "oldPauseManager", "type": "address"}, {"indexed": false, "internalType": "address", "name": "newPauseManager", "type": "address"}], "name": "PauseManagerChanged", "type": "event"}, {"anonymous": false, "inputs": [], "name": "PausedLocally", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bool", "name": "paused", "type": "bool"}], "name": "PausedStateChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}], "name": "SwapFeePercentageChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "from", "type": "address"}, {"indexed": true, "internalType": "address", "name": "to", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Transfer", "type": "event"}, {"anonymous": false, "inputs": [], "name": "UnpausedLocally", "type": "event"}, {"inputs": [], "name": "DOMAIN_SEPARATOR", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "spender", "type": "address"}], "name": "allowance", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "approve", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "balanceOf", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "balanceTokenIn", "type": "uint256"}, {"internalType": "uint256", "name": "balanceTokenOut", "type": "uint256"}, {"internalType": "bool", "name": "tokenInIsToken0", "type": "bool"}], "name": "calculateCurrentValues", "outputs": [{"internalType": "uint256", "name": "currentInvariant", "type": "uint256"}, {"internalType": "uint256", "name": "virtualParamIn", "type": "uint256"}, {"internalType": "uint256", "name": "virtualParamOut", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "capManager", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "capParams", "outputs": [{"components": [{"internalType": "bool", "name": "capEnabled", "type": "bool"}, {"internalType": "uint120", "name": "perAddressCap", "type": "uint120"}, {"internalType": "uint128", "name": "globalCap", "type": "uint128"}], "internalType": "struct ICappedLiquidity.CapParams", "name": "", "type": "tuple"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_pauseManager", "type": "address"}], "name": "changePauseManager", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "decimals", "outputs": [{"internalType": "uint8", "name": "", "type": "uint8"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "decreaseAllowance", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes4", "name": "selector", "type": "bytes4"}], "name": "getActionId", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getActualSupply", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getAuthorizer", "outputs": [{"internalType": "contract IAuthorizer", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getInvariant", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getInvariantDivActualSupply", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getLastInvariant", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getMiscData", "outputs": [{"internalType": "int256", "name": "logInvariant", "type": "int256"}, {"internalType": "int256", "name": "logTotalSupply", "type": "int256"}, {"internalType": "uint256", "name": "oracleSampleCreationTimestamp", "type": "uint256"}, {"internalType": "uint256", "name": "oracleIndex", "type": "uint256"}, {"internalType": "bool", "name": "oracleEnabled", "type": "bool"}, {"internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getNormalizedWeights", "outputs": [{"internalType": "uint256[]", "name": "", "type": "uint256[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getOwner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getPausedState", "outputs": [{"internalType": "bool", "name": "paused", "type": "bool"}, {"internalType": "uint256", "name": "pauseWindowEndTime", "type": "uint256"}, {"internalType": "uint256", "name": "bufferPeriodEndTime", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getPoolId", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getPrice", "outputs": [{"internalType": "uint256", "name": "spotPrice", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getRate", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getSqrtParameters", "outputs": [{"internalType": "uint256[2]", "name": "", "type": "uint256[2]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getSwapFeePercentage", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getTokenRates", "outputs": [{"internalType": "uint256", "name": "rate0", "type": "uint256"}, {"internalType": "uint256", "name": "rate1", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getVault", "outputs": [{"internalType": "contract IVault", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getVirtualParameters", "outputs": [{"internalType": "uint256[]", "name": "virtualParams", "type": "uint256[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "gyroConfig", "outputs": [{"internalType": "contract IGyroConfig", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "addedValue", "type": "uint256"}], "name": "increaseAllowance", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "name", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}], "name": "nonces", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "onExitPool", "outputs": [{"internalType": "uint256[]", "name": "", "type": "uint256[]"}, {"internalType": "uint256[]", "name": "", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "onJoinPool", "outputs": [{"internalType": "uint256[]", "name": "amountsIn", "type": "uint256[]"}, {"internalType": "uint256[]", "name": "dueProtocolFeeAmounts", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"components": [{"internalType": "enum IVault.SwapKind", "name": "kind", "type": "uint8"}, {"internalType": "contract IERC20", "name": "tokenIn", "type": "address"}, {"internalType": "contract IERC20", "name": "tokenOut", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}, {"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "address", "name": "from", "type": "address"}, {"internalType": "address", "name": "to", "type": "address"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "internalType": "struct IPoolSwapStructs.SwapRequest", "name": "request", "type": "tuple"}, {"internalType": "uint256", "name": "balanceTokenIn", "type": "uint256"}, {"internalType": "uint256", "name": "balanceTokenOut", "type": "uint256"}], "name": "onSwap", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "pause", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "pauseManager", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "value", "type": "uint256"}, {"internalType": "uint256", "name": "deadline", "type": "uint256"}, {"internalType": "uint8", "name": "v", "type": "uint8"}, {"internalType": "bytes32", "name": "r", "type": "bytes32"}, {"internalType": "bytes32", "name": "s", "type": "bytes32"}], "name": "permit", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "queryExit", "outputs": [{"internalType": "uint256", "name": "bptIn", "type": "uint256"}, {"internalType": "uint256[]", "name": "amountsOut", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "queryJoin", "outputs": [{"internalType": "uint256", "name": "bptOut", "type": "uint256"}, {"internalType": "uint256[]", "name": "amountsIn", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "rateProvider0", "outputs": [{"internalType": "contract IRateProvider", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "rateProvider1", "outputs": [{"internalType": "contract IRateProvider", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_capManager", "type": "address"}], "name": "setCapManager", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"components": [{"internalType": "bool", "name": "capEnabled", "type": "bool"}, {"internalType": "uint120", "name": "perAddressCap", "type": "uint120"}, {"internalType": "uint128", "name": "globalCap", "type": "uint128"}], "internalType": "struct ICappedLiquidity.CapParams", "name": "params", "type": "tuple"}], "name": "setCapParams", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bool", "name": "paused", "type": "bool"}], "name": "setPaused", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}], "name": "setSwapFeePercentage", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "symbol", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "totalSupply", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transfer", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transferFrom", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "unpause", "outputs": [], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"1": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-pool-utils/contracts/BalancerPoolToken.sol", "10": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol", "11": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/Authentication.sol", "12": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol", "15": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol", "16": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/ISignaturesValidator.sol", "17": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol", "18": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/InputHelpers.sol", "20": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/WordCodec.sol", "21": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/math/FixedPoint.sol", "22": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/math/LogExpMath.sol", "23": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/math/Math.sol", "24": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/misc/IWETH.sol", "25": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/EIP712.sol", "26": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ERC20.sol", "27": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ERC20Permit.sol", "28": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol", "29": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20Permit.sol", "30": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/SafeMath.sol", "31": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IAsset.sol", "32": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IAuthorizer.sol", "33": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IBasePool.sol", "34": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IFlashLoanRecipient.sol", "35": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IMinimalSwapInfoPool.sol", "36": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IPoolSwapStructs.sol", "37": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IProtocolFeesCollector.sol", "38": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IVault.sol", "39": "contracts/2clp/Gyro2CLPMath.sol", "4": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-pool-utils/contracts/BasePoolAuthorization.sol", "40": "contracts/2clp/Gyro2CLPPool.sol", "41": "contracts/2clp/Gyro2CLPPoolErrors.sol", "43": "contracts/CappedLiquidity.sol", "44": "contracts/ExtensibleWeightedPool2Tokens.sol", "45": "contracts/LocallyPausable.sol", "46": "contracts/TemporarilyPausable.sol", "47": "interfaces/ICappedLiquidity.sol", "49": "interfaces/IGyroConfig.sol", "50": "interfaces/ILocallyPausable.sol", "51": "libraries/GyroConfigHelpers.sol", "52": "libraries/GyroConfigKeys.sol", "53": "libraries/GyroErrors.sol", "54": "libraries/GyroFixedPoint.sol", "55": "libraries/GyroPoolMath.sol", "6": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-pool-utils/contracts/interfaces/IRateProvider.sol", "8": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedMath.sol", "9": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol"}, "ast": {"absolutePath": "contracts/2clp/Gyro2CLPPool.sol", "exportedSymbols": {"Authentication": [16626], "BalancerPoolToken": [10444], "BasePool": [11624], "BasePoolAuthorization": [11717], "BaseWeightedPool": [9742], "CappedLiquidity": [2998], "EIP712": [16830], "ERC20": [13360], "ERC20Permit": [16403], "Errors": [13960], "ExtensibleWeightedPool2Tokens": [5207], "FixedPoint": [16250], "Gyro2CLPMath": [2803], "Gyro2CLPPool": [1742], "Gyro2CLPPoolErrors": [2812], "GyroConfigHelpers": [5491], "GyroConfigKeys": [5506], "GyroErrors": [5579], "GyroFixedPoint": [6239], "GyroPoolMath": [7027], "IAsset": [15537], "IAssetManager": [16485], "IAuthentication": [10232], "IAuthorizer": [15552], "IBasePool": [16549], "ICappedLiquidity": [7607], "IERC20": [9820], "IERC20Permit": [16866], "IFlashLoanRecipient": [15571], "IGyroConfig": [5385], "ILocallyPausable": [7676], "IMinimalSwapInfoPool": [13379], "IPoolSwapStructs": [16891], "IProtocolFeesCollector": [15636], "IRateProvider": [1927], "ISignaturesValidator": [15499], "ITemporarilyPausable": [15518], "IVault": [7573], "IWETH": [15533], "InputHelpers": [9932], "LocallyPausable": [5317], "LogCompression": [12882], "LogExpMath": [15258], "Math": [10221], "SafeMath": [16704], "TemporarilyPausable": [13537], "WeightedMath": [12815], "WeightedPool2TokensMiscData": [2142], "WeightedPoolUserDataHelpers": [2352], "WordCodec": [8517], "_grequire": [5524, 5543], "_grevert": [5555, 5575], "_require": [13555], "_revert": [13563]}, "id": 1743, "license": "LicenseRef-Gyro-1.0", "nodeType": "SourceUnit", "nodes": [{"id": 1, "literals": ["solidity", "0.7", ".6"], "nodeType": "PragmaDirective", "src": "178:22:40"}, {"id": 2, "literals": ["experimental", "ABIEncoderV2"], "nodeType": "PragmaDirective", "src": "201:33:40"}, {"absolutePath": "libraries/GyroFixedPoint.sol", "file": "../../libraries/GyroFixedPoint.sol", "id": 3, "nodeType": "ImportDirective", "scope": 1743, "sourceUnit": 6240, "src": "312:44:40", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol", "file": "@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol", "id": 4, "nodeType": "ImportDirective", "scope": 1743, "sourceUnit": 2353, "src": "358:83:40", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol", "file": "@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol", "id": 5, "nodeType": "ImportDirective", "scope": 1743, "sourceUnit": 2143, "src": "442:83:40", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/home/daniel/.brownie/packages/node_modules/@balancer-labs/v2-pool-utils/contracts/interfaces/IRateProvider.sol", "file": "@balancer-labs/v2-pool-utils/contracts/interfaces/IRateProvider.sol", "id": 6, "nodeType": "ImportDirective", "scope": 1743, "sourceUnit": 1928, "src": "526:77:40", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/GyroConfigKeys.sol", "file": "../../libraries/GyroConfigKeys.sol", "id": 7, "nodeType": "ImportDirective", "scope": 1743, "sourceUnit": 5507, "src": "605:44:40", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/GyroConfigHelpers.sol", "file": "../../libraries/GyroConfigHelpers.sol", "id": 8, "nodeType": "ImportDirective", "scope": 1743, "sourceUnit": 5492, "src": "650:47:40", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/IGyroConfig.sol", "file": "../../interfaces/IGyroConfig.sol", "id": 9, "nodeType": "ImportDirective", "scope": 1743, "sourceUnit": 5386, "src": "698:42:40", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/GyroPoolMath.sol", "file": "../../libraries/GyroPoolMath.sol", "id": 10, "nodeType": "ImportDirective", "scope": 1743, "sourceUnit": 7028, "src": "741:42:40", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/GyroErrors.sol", "file": "../../libraries/GyroErrors.sol", "id": 11, "nodeType": "ImportDirective", "scope": 1743, "sourceUnit": 5580, "src": "784:40:40", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/CappedLiquidity.sol", "file": "../CappedLiquidity.sol", "id": 12, "nodeType": "ImportDirective", "scope": 1743, "sourceUnit": 2999, "src": "826:32:40", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/LocallyPausable.sol", "file": "../LocallyPausable.sol", "id": 13, "nodeType": "ImportDirective", "scope": 1743, "sourceUnit": 5318, "src": "859:32:40", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/ExtensibleWeightedPool2Tokens.sol", "file": "../ExtensibleWeightedPool2Tokens.sol", "id": 14, "nodeType": "ImportDirective", "scope": 1743, "sourceUnit": 5208, "src": "892:46:40", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/2clp/Gyro2CLPPoolErrors.sol", "file": "./Gyro2CLPPoolErrors.sol", "id": 15, "nodeType": "ImportDirective", "scope": 1743, "sourceUnit": 2813, "src": "939:34:40", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/2clp/Gyro2CLPMath.sol", "file": "./Gyro2CLPMath.sol", "id": 16, "nodeType": "ImportDirective", "scope": 1743, "sourceUnit": 2804, "src": "974:28:40", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 17, "name": "ExtensibleWeightedPool2Tokens", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 5207, "src": "1029:29:40", "typeDescriptions": {"typeIdentifier": "t_contract$_ExtensibleWeightedPool2Tokens_$5207", "typeString": "contract ExtensibleWeightedPool2Tokens"}}, "id": 18, "nodeType": "InheritanceSpecifier", "src": "1029:29:40"}, {"baseName": {"id": 19, "name": "CappedLiquidity", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 2998, "src": "1060:15:40", "typeDescriptions": {"typeIdentifier": "t_contract$_CappedLiquidity_$2998", "typeString": "contract CappedLiquidity"}}, "id": 20, "nodeType": "InheritanceSpecifier", "src": "1060:15:40"}, {"baseName": {"id": 21, "name": "LocallyPausable", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 5317, "src": "1077:15:40", "typeDescriptions": {"typeIdentifier": "t_contract$_LocallyPausable_$5317", "typeString": "contract LocallyPausable"}}, "id": 22, "nodeType": "InheritanceSpecifier", "src": "1077:15:40"}], "contractDependencies": [2998, 5207, 5317, 7607, 7676, 9820, 10232, 10444, 11717, 13360, 13379, 13537, 15518, 16403, 16549, 16626, 16830, 16866, 16891], "contractKind": "contract", "fullyImplemented": true, "id": 1742, "linearizedBaseContracts": [1742, 5317, 7676, 2998, 7607, 5207, 13537, 15518, 10444, 16403, 16830, 16866, 13360, 9820, 11717, 16626, 10232, 13379, 16549, 16891], "name": "Gyro2CLPPool", "nodeType": "ContractDefinition", "nodes": [{"id": 25, "libraryName": {"id": 23, "name": "GyroFixedPoint", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 6239, "src": "1105:14:40", "typeDescriptions": {"typeIdentifier": "t_contract$_GyroFixedPoint_$6239", "typeString": "library GyroFixedPoint"}}, "nodeType": "UsingForDirective", "src": "1099:33:40", "typeName": {"id": 24, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1124:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"id": 28, "libraryName": {"id": 26, "name": "WeightedPoolUserDataHelpers", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 2352, "src": "1143:27:40", "typeDescriptions": {"typeIdentifier": "t_contract$_WeightedPoolUserDataHelpers_$2352", "typeString": "library WeightedPoolUserDataHelpers"}}, "nodeType": "UsingForDirective", "src": "1137:44:40", "typeName": {"id": 27, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "1175:5:40", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}}, {"id": 31, "libraryName": {"id": 29, "name": "WeightedPool2TokensMiscData", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 2142, "src": "1192:27:40", "typeDescriptions": {"typeIdentifier": "t_contract$_WeightedPool2TokensMiscData_$2142", "typeString": "library WeightedPool2TokensMiscData"}}, "nodeType": "UsingForDirective", "src": "1186:46:40", "typeName": {"id": 30, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1224:7:40", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}}, {"id": 34, "libraryName": {"id": 32, "name": "GyroConfigHelpers", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 5491, "src": "1243:17:40", "typeDescriptions": {"typeIdentifier": "t_contract$_GyroConfigHelpers_$5491", "typeString": "library GyroConfigHelpers"}}, "nodeType": "UsingForDirective", "src": "1237:40:40", "typeName": {"id": 33, "name": "IGyroConfig", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 5385, "src": "1265:11:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$5385", "typeString": "contract IGyroConfig"}}}, {"constant": false, "id": 36, "mutability": "immutable", "name": "_sqrtAlpha", "nodeType": "VariableDeclaration", "scope": 1742, "src": "1283:36:40", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 35, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1283:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "private"}, {"constant": false, "id": 38, "mutability": "immutable", "name": "_sqrtBeta", "nodeType": "VariableDeclaration", "scope": 1742, "src": "1325:35:40", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 37, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1325:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "private"}, {"constant": true, "id": 41, "mutability": "constant", "name": "POOL_TYPE", "nodeType": "VariableDeclaration", "scope": 1742, "src": "1366:43:40", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 39, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1366:7:40", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "value": {"hexValue": "32434c50", "id": 40, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1403:6:40", "typeDescriptions": {"typeIdentifier": "t_stringliteral_f13da975dadd2d1dfd6300b29fd16ddc6a1a61dbb1ed059936f32a9ab1f35339", "typeString": "literal_string \"2CLP\""}, "value": "2CLP"}, "visibility": "private"}, {"constant": false, "functionSelector": "44bbdb55", "id": 43, "mutability": "mutable", "name": "gyroConfig", "nodeType": "VariableDeclaration", "scope": 1742, "src": "1416:29:40", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$5385", "typeString": "contract IGyroConfig"}, "typeName": {"id": 42, "name": "IGyroConfig", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 5385, "src": "1416:11:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$5385", "typeString": "contract IGyroConfig"}}, "visibility": "public"}, {"constant": false, "documentation": {"id": 44, "nodeType": "StructuredDocumentation", "src": "1452:25:40", "text": "@dev for rate scaling"}, "functionSelector": "828a7c34", "id": 46, "mutability": "immutable", "name": "rateProvider0", "nodeType": "VariableDeclaration", "scope": 1742, "src": "1482:44:40", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$1927", "typeString": "contract IRateProvider"}, "typeName": {"id": 45, "name": "IRateProvider", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 1927, "src": "1482:13:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$1927", "typeString": "contract IRateProvider"}}, "visibility": "public"}, {"constant": false, "functionSelector": "62ced092", "id": 48, "mutability": "immutable", "name": "rateProvider1", "nodeType": "VariableDeclaration", "scope": 1742, "src": "1532:44:40", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$1927", "typeString": "contract IRateProvider"}, "typeName": {"id": 47, "name": "IRateProvider", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 1927, "src": "1532:13:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$1927", "typeString": "contract IRateProvider"}}, "visibility": "public"}, {"canonicalName": "Gyro2CLPPool.GyroParams", "id": 65, "members": [{"constant": false, "id": 50, "mutability": "mutable", "name": "baseParams", "nodeType": "VariableDeclaration", "scope": 65, "src": "1611:24:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$3114_storage_ptr", "typeString": "struct ExtensibleWeightedPool2Tokens.NewPoolParams"}, "typeName": {"id": 49, "name": "NewPoolParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 3114, "src": "1611:13:40", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$3114_storage_ptr", "typeString": "struct ExtensibleWeightedPool2Tokens.NewPoolParams"}}, "visibility": "internal"}, {"constant": false, "id": 52, "mutability": "mutable", "name": "sqrtAlpha", "nodeType": "VariableDeclaration", "scope": 65, "src": "1645:17:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 51, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1645:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 54, "mutability": "mutable", "name": "sqrtBeta", "nodeType": "VariableDeclaration", "scope": 65, "src": "1705:16:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 53, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1705:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 56, "mutability": "mutable", "name": "rateProvider0", "nodeType": "VariableDeclaration", "scope": 65, "src": "1798:21:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 55, "name": "address", "nodeType": "ElementaryTypeName", "src": "1798:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 58, "mutability": "mutable", "name": "rateProvider1", "nodeType": "VariableDeclaration", "scope": 65, "src": "1829:21:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 57, "name": "address", "nodeType": "ElementaryTypeName", "src": "1829:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 60, "mutability": "mutable", "name": "capManager", "nodeType": "VariableDeclaration", "scope": 65, "src": "1860:18:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 59, "name": "address", "nodeType": "ElementaryTypeName", "src": "1860:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 62, "mutability": "mutable", "name": "capParams", "nodeType": "VariableDeclaration", "scope": 65, "src": "1888:19:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_CapParams_$7591_storage_ptr", "typeString": "struct ICappedLiquidity.CapParams"}, "typeName": {"id": 61, "name": "CapParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 7591, "src": "1888:9:40", "typeDescriptions": {"typeIdentifier": "t_struct$_CapParams_$7591_storage_ptr", "typeString": "struct ICappedLiquidity.CapParams"}}, "visibility": "internal"}, {"constant": false, "id": 64, "mutability": "mutable", "name": "pauseManager", "nodeType": "VariableDeclaration", "scope": 65, "src": "1917:20:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 63, "name": "address", "nodeType": "ElementaryTypeName", "src": "1917:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "name": "GyroParams", "nodeType": "StructDefinition", "scope": 1742, "src": "1583:361:40", "visibility": "public"}, {"body": {"id": 137, "nodeType": "Block", "src": "2178:422:40", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 91, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 87, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 67, "src": "2198:6:40", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$65_memory_ptr", "typeString": "struct Gyro2CLPPool.GyroParams memory"}}, "id": 88, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "sqrtAlpha", "nodeType": "MemberAccess", "referencedDeclaration": 52, "src": "2198:16:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 89, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 67, "src": "2217:6:40", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$65_memory_ptr", "typeString": "struct Gyro2CLPPool.GyroParams memory"}}, "id": 90, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "sqrtBeta", "nodeType": "MemberAccess", "referencedDeclaration": 54, "src": "2217:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2198:34:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 92, "name": "Gyro2CLPPoolErrors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2812, "src": "2234:18:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPPoolErrors_$2812_$", "typeString": "type(library Gyro2CLPPoolErrors)"}}, "id": 93, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "SQRT_PARAMS_WRONG", "nodeType": "MemberAccess", "referencedDeclaration": 2808, "src": "2234:36:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 86, "name": "_grequire", "nodeType": "Identifier", "overloadedDeclarations": [5524, 5543], "referencedDeclaration": 5524, "src": "2188:9:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 94, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2188:83:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 95, "nodeType": "ExpressionStatement", "src": "2188:83:40"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 102, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 97, "name": "configAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 69, "src": "2291:13:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 100, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2316:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 99, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2308:7:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 98, "name": "address", "nodeType": "ElementaryTypeName", "src": "2308:7:40", "typeDescriptions": {}}}, "id": 101, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2308:10:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "2291:27:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 103, "name": "GyroErrors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5579, "src": "2320:10:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroErrors_$5579_$", "typeString": "type(library GyroErrors)"}}, "id": 104, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ZERO_ADDRESS", "nodeType": "MemberAccess", "referencedDeclaration": 5578, "src": "2320:23:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 96, "name": "_grequire", "nodeType": "Identifier", "overloadedDeclarations": [5524, 5543], "referencedDeclaration": 5524, "src": "2281:9:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 105, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2281:63:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 106, "nodeType": "ExpressionStatement", "src": "2281:63:40"}, {"expression": {"id": 110, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 107, "name": "_sqrtAlpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 36, "src": "2354:10:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 108, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 67, "src": "2367:6:40", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$65_memory_ptr", "typeString": "struct Gyro2CLPPool.GyroParams memory"}}, "id": 109, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "sqrtAlpha", "nodeType": "MemberAccess", "referencedDeclaration": 52, "src": "2367:16:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2354:29:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 111, "nodeType": "ExpressionStatement", "src": "2354:29:40"}, {"expression": {"id": 115, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 112, "name": "_sqrtBeta", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38, "src": "2393:9:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 113, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 67, "src": "2405:6:40", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$65_memory_ptr", "typeString": "struct Gyro2CLPPool.GyroParams memory"}}, "id": 114, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "sqrtBeta", "nodeType": "MemberAccess", "referencedDeclaration": 54, "src": "2405:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2393:27:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 116, "nodeType": "ExpressionStatement", "src": "2393:27:40"}, {"expression": {"id": 121, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 117, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 43, "src": "2431:10:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$5385", "typeString": "contract IGyroConfig"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 119, "name": "configAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 69, "src": "2456:13:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 118, "name": "IGyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5385, "src": "2444:11:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IGyroConfig_$5385_$", "typeString": "type(contract IGyroConfig)"}}, "id": 120, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2444:26:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$5385", "typeString": "contract IGyroConfig"}}, "src": "2431:39:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$5385", "typeString": "contract IGyroConfig"}}, "id": 122, "nodeType": "ExpressionStatement", "src": "2431:39:40"}, {"expression": {"id": 128, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 123, "name": "rateProvider0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 46, "src": "2481:13:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$1927", "typeString": "contract IRateProvider"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 125, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 67, "src": "2511:6:40", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$65_memory_ptr", "typeString": "struct Gyro2CLPPool.GyroParams memory"}}, "id": 126, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "rateProvider0", "nodeType": "MemberAccess", "referencedDeclaration": 56, "src": "2511:20:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 124, "name": "IRateProvider", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1927, "src": "2497:13:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IRateProvider_$1927_$", "typeString": "type(contract IRateProvider)"}}, "id": 127, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2497:35:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$1927", "typeString": "contract IRateProvider"}}, "src": "2481:51:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$1927", "typeString": "contract IRateProvider"}}, "id": 129, "nodeType": "ExpressionStatement", "src": "2481:51:40"}, {"expression": {"id": 135, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 130, "name": "rateProvider1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 48, "src": "2542:13:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$1927", "typeString": "contract IRateProvider"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 132, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 67, "src": "2572:6:40", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$65_memory_ptr", "typeString": "struct Gyro2CLPPool.GyroParams memory"}}, "id": 133, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "rateProvider1", "nodeType": "MemberAccess", "referencedDeclaration": 58, "src": "2572:20:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 131, "name": "IRateProvider", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1927, "src": "2558:13:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IRateProvider_$1927_$", "typeString": "type(contract IRateProvider)"}}, "id": 134, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2558:35:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$1927", "typeString": "contract IRateProvider"}}, "src": "2542:51:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$1927", "typeString": "contract IRateProvider"}}, "id": 136, "nodeType": "ExpressionStatement", "src": "2542:51:40"}]}, "id": 138, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"expression": {"id": 72, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 67, "src": "2049:6:40", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$65_memory_ptr", "typeString": "struct Gyro2CLPPool.GyroParams memory"}}, "id": 73, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "baseParams", "nodeType": "MemberAccess", "referencedDeclaration": 50, "src": "2049:17:40", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$3114_memory_ptr", "typeString": "struct ExtensibleWeightedPool2Tokens.NewPoolParams memory"}}], "id": 74, "modifierName": {"id": 71, "name": "ExtensibleWeightedPool2Tokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5207, "src": "2019:29:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ExtensibleWeightedPool2Tokens_$5207_$", "typeString": "type(contract ExtensibleWeightedPool2Tokens)"}}, "nodeType": "ModifierInvocation", "src": "2019:48:40"}, {"arguments": [{"expression": {"id": 76, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 67, "src": "2092:6:40", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$65_memory_ptr", "typeString": "struct Gyro2CLPPool.GyroParams memory"}}, "id": 77, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "capManager", "nodeType": "MemberAccess", "referencedDeclaration": 60, "src": "2092:17:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 78, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 67, "src": "2111:6:40", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$65_memory_ptr", "typeString": "struct Gyro2CLPPool.GyroParams memory"}}, "id": 79, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "capParams", "nodeType": "MemberAccess", "referencedDeclaration": 62, "src": "2111:16:40", "typeDescriptions": {"typeIdentifier": "t_struct$_CapParams_$7591_memory_ptr", "typeString": "struct ICappedLiquidity.CapParams memory"}}], "id": 80, "modifierName": {"id": 75, "name": "CappedLiquidity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2998, "src": "2076:15:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_CappedLiquidity_$2998_$", "typeString": "type(contract CappedLiquidity)"}}, "nodeType": "ModifierInvocation", "src": "2076:52:40"}, {"arguments": [{"expression": {"id": 82, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 67, "src": "2153:6:40", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$65_memory_ptr", "typeString": "struct Gyro2CLPPool.GyroParams memory"}}, "id": 83, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "pauseManager", "nodeType": "MemberAccess", "referencedDeclaration": 64, "src": "2153:19:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 84, "modifierName": {"id": 81, "name": "LocallyPausable", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5317, "src": "2137:15:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_LocallyPausable_$5317_$", "typeString": "type(contract LocallyPausable)"}}, "nodeType": "ModifierInvocation", "src": "2137:36:40"}], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 70, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 67, "mutability": "mutable", "name": "params", "nodeType": "VariableDeclaration", "scope": 138, "src": "1962:24:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$65_memory_ptr", "typeString": "struct Gyro2CLPPool.GyroParams"}, "typeName": {"id": 66, "name": "GyroParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 65, "src": "1962:10:40", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$65_storage_ptr", "typeString": "struct Gyro2CLPPool.GyroParams"}}, "visibility": "internal"}, {"constant": false, "id": 69, "mutability": "mutable", "name": "configAddress", "nodeType": "VariableDeclaration", "scope": 138, "src": "1988:21:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 68, "name": "address", "nodeType": "ElementaryTypeName", "src": "1988:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1961:49:40"}, "returnParameters": {"id": 85, "nodeType": "ParameterList", "parameters": [], "src": "2178:0:40"}, "scope": 1742, "src": "1950:650:40", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 149, "nodeType": "Block", "src": "2788:41:40", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 146, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [176, 189], "referencedDeclaration": 176, "src": "2805:15:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function () view returns (uint256[2] memory)"}}, "id": 147, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2805:17:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "functionReturnParameters": 145, "id": 148, "nodeType": "Return", "src": "2798:24:40"}]}, "documentation": {"id": 139, "nodeType": "StructuredDocumentation", "src": "2606:106:40", "text": "@dev Returns sqrtAlpha and sqrtBeta (square roots of lower and upper price bounds of p_x respectively)"}, "functionSelector": "707dcd1e", "id": 150, "implemented": true, "kind": "function", "modifiers": [], "name": "getSqrtParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 140, "nodeType": "ParameterList", "parameters": [], "src": "2743:2:40"}, "returnParameters": {"id": 145, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 144, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 150, "src": "2769:17:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 141, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2769:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 143, "length": {"hexValue": "32", "id": 142, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2777:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "2769:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "src": "2768:19:40"}, "scope": 1742, "src": "2717:112:40", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 175, "nodeType": "Block", "src": "2930:150:40", "statements": [{"expression": {"id": 163, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 157, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 155, "src": "2940:17:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 159, "indexExpression": {"hexValue": "30", "id": 158, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2958:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "2940:20:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "74727565", "id": 161, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "2979:4:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 160, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [176, 189], "referencedDeclaration": 189, "src": "2963:15:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 162, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2963:21:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2940:44:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 164, "nodeType": "ExpressionStatement", "src": "2940:44:40"}, {"expression": {"id": 171, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 165, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 155, "src": "2994:17:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 167, "indexExpression": {"hexValue": "31", "id": 166, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3012:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "2994:20:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "66616c7365", "id": 169, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3033:5:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 168, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [176, 189], "referencedDeclaration": 189, "src": "3017:15:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 170, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3017:22:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2994:45:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 172, "nodeType": "ExpressionStatement", "src": "2994:45:40"}, {"expression": {"id": 173, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 155, "src": "3056:17:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "functionReturnParameters": 156, "id": 174, "nodeType": "Return", "src": "3049:24:40"}]}, "id": 176, "implemented": true, "kind": "function", "modifiers": [], "name": "_sqrtParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 151, "nodeType": "ParameterList", "parameters": [], "src": "2859:2:40"}, "returnParameters": {"id": 156, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 155, "mutability": "mutable", "name": "virtualParameters", "nodeType": "VariableDeclaration", "scope": 176, "src": "2893:35:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 152, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2893:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 154, "length": {"hexValue": "32", "id": 153, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2901:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "2893:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "src": "2892:37:40"}, "scope": 1742, "src": "2835:245:40", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"body": {"id": 188, "nodeType": "Block", "src": "3168:59:40", "statements": [{"expression": {"condition": {"id": 183, "name": "parameter0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 178, "src": "3185:10:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 185, "name": "_sqrtBeta", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38, "src": "3211:9:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 186, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "3185:35:40", "trueExpression": {"id": 184, "name": "_sqrtAlpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 36, "src": "3198:10:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 182, "id": 187, "nodeType": "Return", "src": "3178:42:40"}]}, "id": 189, "implemented": true, "kind": "function", "modifiers": [], "name": "_sqrtParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 179, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 178, "mutability": "mutable", "name": "parameter0", "nodeType": "VariableDeclaration", "scope": 189, "src": "3111:15:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 177, "name": "bool", "nodeType": "ElementaryTypeName", "src": "3111:4:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "3110:17:40"}, "returnParameters": {"id": 182, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 181, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 189, "src": "3159:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 180, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3159:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3158:9:40"}, "scope": 1742, "src": "3086:141:40", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"body": {"id": 224, "nodeType": "Block", "src": "3713:479:40", "statements": [{"assignments": [200, 202, null, null], "declarations": [{"constant": false, "id": 200, "mutability": "mutable", "name": "cash", "nodeType": "VariableDeclaration", "scope": 224, "src": "3941:12:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 199, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3941:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 202, "mutability": "mutable", "name": "managed", "nodeType": "VariableDeclaration", "scope": 224, "src": "3955:15:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 201, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3955:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, null, null], "id": 210, "initialValue": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 206, "name": "getPoolId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3244, "src": "4006:9:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$", "typeString": "function () view returns (bytes32)"}}, "id": 207, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4006:11:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 208, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 192, "src": "4019:5:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$9820", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_contract$_IERC20_$9820", "typeString": "contract IERC20"}], "expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 203, "name": "getVault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10273, "src": "3978:8:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IVault_$7573_$", "typeString": "function () view returns (contract IVault)"}}, "id": 204, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3978:10:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IVault_$7573", "typeString": "contract IVault"}}, "id": 205, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getPoolTokenInfo", "nodeType": "MemberAccess", "referencedDeclaration": 7315, "src": "3978:27:40", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$_t_contract$_IERC20_$9820_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$", "typeString": "function (bytes32,contract IERC20) view external returns (uint256,uint256,uint256,address)"}}, "id": 209, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3978:47:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$", "typeString": "tuple(uint256,uint256,uint256,address)"}}, "nodeType": "VariableDeclarationStatement", "src": "3940:85:40"}, {"expression": {"id": 215, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 211, "name": "balance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 197, "src": "4035:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 214, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 212, "name": "cash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 200, "src": "4045:4:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 213, "name": "managed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 202, "src": "4052:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4045:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4035:24:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 216, "nodeType": "ExpressionStatement", "src": "4035:24:40"}, {"expression": {"id": 222, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 217, "name": "balance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 197, "src": "4145:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 220, "name": "scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 194, "src": "4171:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 218, "name": "balance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 197, "src": "4155:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 219, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mulDown", "nodeType": "MemberAccess", "referencedDeclaration": 5697, "src": "4155:15:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 221, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4155:30:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4145:40:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 223, "nodeType": "ExpressionStatement", "src": "4145:40:40"}]}, "documentation": {"id": 190, "nodeType": "StructuredDocumentation", "src": "3233:366:40", "text": "@dev Reads the balance of a token from the balancer vault and returns the scaled amount. Smaller storage access\n compared to getVault().getPoolTokens().\n Copied from the 3CLP *except* that for the 2CLP, the scalingFactor is interpreted as a regular integer, not a\n FixedPoint number. This is an inconsistency between the base contracts."}, "id": 225, "implemented": true, "kind": "function", "modifiers": [], "name": "_getScaledTokenBalance", "nodeType": "FunctionDefinition", "parameters": {"id": 195, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 192, "mutability": "mutable", "name": "token", "nodeType": "VariableDeclaration", "scope": 225, "src": "3636:12:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$9820", "typeString": "contract IERC20"}, "typeName": {"id": 191, "name": "IERC20", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9820, "src": "3636:6:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$9820", "typeString": "contract IERC20"}}, "visibility": "internal"}, {"constant": false, "id": 194, "mutability": "mutable", "name": "scalingFactor", "nodeType": "VariableDeclaration", "scope": 225, "src": "3650:21:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 193, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3650:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3635:37:40"}, "returnParameters": {"id": 198, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 197, "mutability": "mutable", "name": "balance", "nodeType": "VariableDeclaration", "scope": 225, "src": "3696:15:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 196, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3696:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3695:17:40"}, "scope": 1742, "src": "3604:588:40", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 264, "nodeType": "Block", "src": "4445:446:40", "statements": [{"expression": {"id": 238, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 232, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 230, "src": "4677:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "32", "id": 236, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4702:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 235, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "4688:13:40", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 233, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4692:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 234, "nodeType": "ArrayTypeName", "src": "4692:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 237, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4688:16:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "src": "4677:27:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 239, "nodeType": "ExpressionStatement", "src": "4677:27:40"}, {"expression": {"id": 249, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 240, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 230, "src": "4714:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 242, "indexExpression": {"hexValue": "30", "id": 241, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4723:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "4714:11:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 244, "name": "_token0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3048, "src": "4751:7:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$9820", "typeString": "contract IERC20"}}, {"arguments": [{"hexValue": "74727565", "id": 246, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "4775:4:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 245, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [1647], "referencedDeclaration": 1647, "src": "4760:14:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 247, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4760:20:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$9820", "typeString": "contract IERC20"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 243, "name": "_getScaledTokenBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 225, "src": "4728:22:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$9820_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (contract IERC20,uint256) view returns (uint256)"}}, "id": 248, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4728:53:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4714:67:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 250, "nodeType": "ExpressionStatement", "src": "4714:67:40"}, {"expression": {"id": 260, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 251, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 230, "src": "4791:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 253, "indexExpression": {"hexValue": "31", "id": 252, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4800:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "4791:11:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 255, "name": "_token1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3050, "src": "4828:7:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$9820", "typeString": "contract IERC20"}}, {"arguments": [{"hexValue": "66616c7365", "id": 257, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "4852:5:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 256, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [1647], "referencedDeclaration": 1647, "src": "4837:14:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 258, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4837:21:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$9820", "typeString": "contract IERC20"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 254, "name": "_getScaledTokenBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 225, "src": "4805:22:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$9820_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (contract IERC20,uint256) view returns (uint256)"}}, "id": 259, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4805:54:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4791:68:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 261, "nodeType": "ExpressionStatement", "src": "4791:68:40"}, {"expression": {"id": 262, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 230, "src": "4876:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "functionReturnParameters": 231, "id": 263, "nodeType": "Return", "src": "4869:15:40"}]}, "documentation": {"id": 226, "nodeType": "StructuredDocumentation", "src": "4198:165:40", "text": "@dev Get all balances in the pool, scaled by the appropriate scaling factors, in a relatively gas-efficient way.\n Essentially copied from the 3CLP."}, "id": 265, "implemented": true, "kind": "function", "modifiers": [], "name": "_getAllBalances", "nodeType": "FunctionDefinition", "parameters": {"id": 227, "nodeType": "ParameterList", "parameters": [], "src": "4392:2:40"}, "returnParameters": {"id": 231, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 230, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 265, "src": "4418:25:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 228, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4418:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 229, "nodeType": "ArrayTypeName", "src": "4418:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "4417:27:40"}, "scope": 1742, "src": "4368:523:40", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 306, "nodeType": "Block", "src": "5086:330:40", "statements": [{"assignments": [276], "declarations": [{"constant": false, "id": 276, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 306, "src": "5096:25:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 274, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5096:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 275, "nodeType": "ArrayTypeName", "src": "5096:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 279, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 277, "name": "_getAllBalances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 265, "src": "5124:15:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function () view returns (uint256[] memory)"}}, "id": 278, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5124:17:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "5096:45:40"}, {"expression": {"id": 286, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 280, "name": "virtualParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 270, "src": "5271:13:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "32", "id": 284, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5301:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 283, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "5287:13:40", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 281, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5291:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 282, "nodeType": "ArrayTypeName", "src": "5291:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 285, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5287:16:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "src": "5271:32:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 287, "nodeType": "ExpressionStatement", "src": "5271:32:40"}, {"expression": {"id": 304, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [null, {"baseExpression": {"id": 288, "name": "virtualParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 270, "src": "5316:13:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 290, "indexExpression": {"hexValue": "30", "id": 289, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5330:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "5316:16:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 291, "name": "virtualParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 270, "src": "5334:13:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 293, "indexExpression": {"hexValue": "31", "id": 292, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5348:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "5334:16:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 294, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "5313:38:40", "typeDescriptions": {"typeIdentifier": "t_tuple$__$_t_uint256_$_t_uint256_$", "typeString": "tuple(,uint256,uint256)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"baseExpression": {"id": 296, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 276, "src": "5378:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 298, "indexExpression": {"hexValue": "30", "id": 297, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5387:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5378:11:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 299, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 276, "src": "5391:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 301, "indexExpression": {"hexValue": "31", "id": 300, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5400:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5391:11:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "74727565", "id": 302, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "5404:4:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 295, "name": "_calculateCurrentValues", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 831, "src": "5354:23:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256,bool) view returns (uint256,uint256,uint256)"}}, "id": 303, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5354:55:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256,uint256)"}}, "src": "5313:96:40", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 305, "nodeType": "ExpressionStatement", "src": "5313:96:40"}]}, "documentation": {"id": 266, "nodeType": "StructuredDocumentation", "src": "4897:97:40", "text": "@dev Returns virtual offsets a and b for reserves x and y respectively, as in (x+a)*(y+b)=L^2"}, "functionSelector": "8dd9f89d", "id": 307, "implemented": true, "kind": "function", "modifiers": [], "name": "getVirtualParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 267, "nodeType": "ParameterList", "parameters": [], "src": "5028:2:40"}, "returnParameters": {"id": 271, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 270, "mutability": "mutable", "name": "virtualParams", "nodeType": "VariableDeclaration", "scope": 307, "src": "5054:30:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 268, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5054:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 269, "nodeType": "ArrayTypeName", "src": "5054:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "5053:32:40"}, "scope": 1742, "src": "4999:417:40", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 346, "nodeType": "Block", "src": "5606:208:40", "statements": [{"expression": {"id": 330, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 320, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 318, "src": "5616:17:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 322, "indexExpression": {"hexValue": "30", "id": 321, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5634:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "5616:20:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "74727565", "id": 324, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "5658:4:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, {"baseExpression": {"id": 325, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 311, "src": "5664:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 327, "indexExpression": {"hexValue": "31", "id": 326, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5675:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5664:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 328, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 313, "src": "5679:9:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 323, "name": "_virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 374, "src": "5639:18:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (bool,uint256,uint256) view returns (uint256)"}}, "id": 329, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5639:50:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5616:73:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 331, "nodeType": "ExpressionStatement", "src": "5616:73:40"}, {"expression": {"id": 342, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 332, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 318, "src": "5699:17:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 334, "indexExpression": {"hexValue": "31", "id": 333, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5717:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "5699:20:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "66616c7365", "id": 336, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "5741:5:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, {"baseExpression": {"id": 337, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 311, "src": "5748:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 339, "indexExpression": {"hexValue": "30", "id": 338, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5759:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5748:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 340, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 313, "src": "5763:9:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 335, "name": "_virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 374, "src": "5722:18:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (bool,uint256,uint256) view returns (uint256)"}}, "id": 341, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5722:51:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5699:74:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 343, "nodeType": "ExpressionStatement", "src": "5699:74:40"}, {"expression": {"id": 344, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 318, "src": "5790:17:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "functionReturnParameters": 319, "id": 345, "nodeType": "Return", "src": "5783:24:40"}]}, "id": 347, "implemented": true, "kind": "function", "modifiers": [], "name": "_getVirtualParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 314, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 311, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 347, "src": "5453:28:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 308, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5453:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 310, "length": {"hexValue": "32", "id": 309, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5461:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "5453:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}, {"constant": false, "id": 313, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 347, "src": "5483:17:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 312, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5483:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5452:49:40"}, "returnParameters": {"id": 319, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 318, "mutability": "mutable", "name": "virtualParameters", "nodeType": "VariableDeclaration", "scope": 347, "src": "5565:35:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 315, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5565:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 317, "length": {"hexValue": "32", "id": 316, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5573:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "5565:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "src": "5564:37:40"}, "scope": 1742, "src": "5422:392:40", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"body": {"id": 373, "nodeType": "Block", "src": "5973:212:40", "statements": [{"expression": {"condition": {"id": 358, "name": "parameter0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 349, "src": "6002:10:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"components": [{"arguments": [{"id": 367, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 353, "src": "6156:9:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 368, "name": "sqrtParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 351, "src": "6167:9:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 365, "name": "Gyro2CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2803, "src": "6115:12:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPMath_$2803_$", "typeString": "type(library Gyro2CLPMath)"}}, "id": 366, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateVirtualParameter1", "nodeType": "MemberAccess", "referencedDeclaration": 2774, "src": "6115:40:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 369, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6115:62:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 370, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "6114:64:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 371, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "6002:176:40", "trueExpression": {"components": [{"arguments": [{"id": 361, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 353, "src": "6073:9:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 362, "name": "sqrtParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 351, "src": "6084:9:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 359, "name": "Gyro2CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2803, "src": "6032:12:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPMath_$2803_$", "typeString": "type(library Gyro2CLPMath)"}}, "id": 360, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateVirtualParameter0", "nodeType": "MemberAccess", "referencedDeclaration": 2758, "src": "6032:40:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 363, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6032:62:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 364, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "6031:64:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 357, "id": 372, "nodeType": "Return", "src": "5983:195:40"}]}, "id": 374, "implemented": true, "kind": "function", "modifiers": [], "name": "_virtualParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 354, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 349, "mutability": "mutable", "name": "parameter0", "nodeType": "VariableDeclaration", "scope": 374, "src": "5857:15:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 348, "name": "bool", "nodeType": "ElementaryTypeName", "src": "5857:4:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 351, "mutability": "mutable", "name": "sqrtParam", "nodeType": "VariableDeclaration", "scope": 374, "src": "5882:17:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 350, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5882:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 353, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 374, "src": "5909:17:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 352, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5909:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5847:85:40"}, "returnParameters": {"id": 357, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 356, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 374, "src": "5964:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 355, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5964:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5963:9:40"}, "scope": 1742, "src": "5820:365:40", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"baseFunctions": [3501], "body": {"id": 409, "nodeType": "Block", "src": "6326:210:40", "statements": [{"assignments": [385], "declarations": [{"constant": false, "id": 385, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 409, "src": "6336:25:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 383, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6336:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 384, "nodeType": "ArrayTypeName", "src": "6336:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 388, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 386, "name": "_getAllBalances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 265, "src": "6364:15:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function () view returns (uint256[] memory)"}}, "id": 387, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6364:17:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "6336:45:40"}, {"assignments": [394], "declarations": [{"constant": false, "id": 394, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 409, "src": "6391:28:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 392, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6391:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 393, "length": {"hexValue": "32", "id": 391, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6399:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "6391:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 397, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 395, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [176, 189], "referencedDeclaration": 176, "src": "6422:15:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function () view returns (uint256[2] memory)"}}, "id": 396, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6422:17:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "6391:48:40"}, {"expression": {"arguments": [{"id": 400, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 385, "src": "6490:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"baseExpression": {"id": 401, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 394, "src": "6500:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 403, "indexExpression": {"hexValue": "30", "id": 402, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6511:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6500:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 404, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 394, "src": "6515:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 406, "indexExpression": {"hexValue": "31", "id": 405, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6526:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6515:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 398, "name": "Gyro2CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2803, "src": "6457:12:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPMath_$2803_$", "typeString": "type(library Gyro2CLPMath)"}}, "id": 399, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 2398, "src": "6457:32:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256)"}}, "id": 407, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6457:72:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 380, "id": 408, "nodeType": "Return", "src": "6450:79:40"}]}, "documentation": {"id": 375, "nodeType": "StructuredDocumentation", "src": "6191:67:40", "text": " @dev Returns the current value of the invariant."}, "functionSelector": "c0ff1a15", "id": 410, "implemented": true, "kind": "function", "modifiers": [], "name": "getInvariant", "nodeType": "FunctionDefinition", "overrides": {"id": 377, "nodeType": "OverrideSpecifier", "overrides": [], "src": "6299:8:40"}, "parameters": {"id": 376, "nodeType": "ParameterList", "parameters": [], "src": "6284:2:40"}, "returnParameters": {"id": 380, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 379, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 410, "src": "6317:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 378, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6317:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6316:9:40"}, "scope": 1742, "src": "6263:273:40", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 435, "nodeType": "Block", "src": "6931:111:40", "statements": [{"expression": {"arguments": [{"baseExpression": {"id": 425, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 414, "src": "6980:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 427, "indexExpression": {"hexValue": "30", "id": 426, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6989:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6980:11:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 428, "name": "virtualParam0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 416, "src": "6993:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 429, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 414, "src": "7008:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 431, "indexExpression": {"hexValue": "31", "id": 430, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7017:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7008:11:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 432, "name": "virtualParam1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 418, "src": "7021:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 423, "name": "Gyro2CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2803, "src": "6948:12:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPMath_$2803_$", "typeString": "type(library Gyro2CLPMath)"}}, "id": 424, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcSpotPriceAinB", "nodeType": "MemberAccess", "referencedDeclaration": 2802, "src": "6948:31:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 433, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6948:87:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 422, "id": 434, "nodeType": "Return", "src": "6941:94:40"}]}, "documentation": {"id": 411, "nodeType": "StructuredDocumentation", "src": "6542:220:40", "text": "When rateProvider{0,1} is provided, this returns the *scaled* price, suitable to compare *rate scaled* balances.\n  To compare (decimal- but) not-rate-scaled balances, apply _adjustPrice() to the result."}, "id": 436, "implemented": true, "kind": "function", "modifiers": [], "name": "_getPrice", "nodeType": "FunctionDefinition", "parameters": {"id": 419, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 414, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 436, "src": "6795:25:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 412, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6795:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 413, "nodeType": "ArrayTypeName", "src": "6795:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 416, "mutability": "mutable", "name": "virtualParam0", "nodeType": "VariableDeclaration", "scope": 436, "src": "6830:21:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 415, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6830:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 418, "mutability": "mutable", "name": "virtualParam1", "nodeType": "VariableDeclaration", "scope": 436, "src": "6861:21:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 417, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6861:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6785:103:40"}, "returnParameters": {"id": 422, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 421, "mutability": "mutable", "name": "spotPrice", "nodeType": "VariableDeclaration", "scope": 436, "src": "6912:17:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 420, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6912:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6911:19:40"}, "scope": 1742, "src": "6767:275:40", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 480, "nodeType": "Block", "src": "7301:311:40", "statements": [{"assignments": [446], "declarations": [{"constant": false, "id": 446, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 480, "src": "7311:25:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 444, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7311:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 445, "nodeType": "ArrayTypeName", "src": "7311:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 449, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 447, "name": "_getAllBalances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 265, "src": "7339:15:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function () view returns (uint256[] memory)"}}, "id": 448, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7339:17:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "7311:45:40"}, {"assignments": [451, 453, 455], "declarations": [{"constant": false, "id": 451, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 480, "src": "7367:17:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 450, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7367:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 453, "mutability": "mutable", "name": "virtualParam0", "nodeType": "VariableDeclaration", "scope": 480, "src": "7386:21:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 452, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7386:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 455, "mutability": "mutable", "name": "virtualParam1", "nodeType": "VariableDeclaration", "scope": 480, "src": "7409:21:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 454, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7409:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 465, "initialValue": {"arguments": [{"baseExpression": {"id": 457, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 446, "src": "7458:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 459, "indexExpression": {"hexValue": "30", "id": 458, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7467:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7458:11:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 460, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 446, "src": "7471:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 462, "indexExpression": {"hexValue": "31", "id": 461, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7480:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7471:11:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "74727565", "id": 463, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "7484:4:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 456, "name": "_calculateCurrentValues", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 831, "src": "7434:23:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256,bool) view returns (uint256,uint256,uint256)"}}, "id": 464, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7434:55:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "7366:123:40"}, {"expression": {"id": 472, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 466, "name": "spotPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 440, "src": "7499:9:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 468, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 446, "src": "7521:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 469, "name": "virtualParam0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 453, "src": "7531:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 470, "name": "virtualParam1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 455, "src": "7546:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 467, "name": "_getPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 436, "src": "7511:9:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256)"}}, "id": 471, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7511:49:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7499:61:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 473, "nodeType": "ExpressionStatement", "src": "7499:61:40"}, {"expression": {"id": 478, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 474, "name": "spotPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 440, "src": "7570:9:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 476, "name": "spotPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 440, "src": "7595:9:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 475, "name": "_adjustPrice", "nodeType": "Identifier", "overloadedDeclarations": [1696], "referencedDeclaration": 1696, "src": "7582:12:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view returns (uint256)"}}, "id": 477, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7582:23:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7570:35:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 479, "nodeType": "ExpressionStatement", "src": "7570:35:40"}]}, "documentation": {"id": 437, "nodeType": "StructuredDocumentation", "src": "7048:186:40", "text": "Returns the current spot price of token0 quoted in units of token1. When rateProvider{0,1} is provided, the\n returned price corresponds to tokens *before* rate scaling."}, "functionSelector": "98d5fdca", "id": 481, "implemented": true, "kind": "function", "modifiers": [], "name": "getPrice", "nodeType": "FunctionDefinition", "parameters": {"id": 438, "nodeType": "ParameterList", "parameters": [], "src": "7256:2:40"}, "returnParameters": {"id": 441, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 440, "mutability": "mutable", "name": "spotPrice", "nodeType": "VariableDeclaration", "scope": 481, "src": "7282:17:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 439, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7282:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7281:19:40"}, "scope": 1742, "src": "7239:373:40", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"baseFunctions": [3648], "body": {"id": 626, "nodeType": "Block", "src": "7842:2137:40", "statements": [{"assignments": [500], "declarations": [{"constant": false, "id": 500, "mutability": "mutable", "name": "tokenInIsToken0", "nodeType": "VariableDeclaration", "scope": 626, "src": "7852:20:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 499, "name": "bool", "nodeType": "ElementaryTypeName", "src": "7852:4:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "id": 505, "initialValue": {"commonType": {"typeIdentifier": "t_contract$_IERC20_$9820", "typeString": "contract IERC20"}, "id": 504, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 501, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 483, "src": "7875:7:40", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$16890_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 502, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenIn", "nodeType": "MemberAccess", "referencedDeclaration": 16875, "src": "7875:15:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$9820", "typeString": "contract IERC20"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 503, "name": "_token0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3048, "src": "7894:7:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$9820", "typeString": "contract IERC20"}}, "src": "7875:26:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "VariableDeclarationStatement", "src": "7852:49:40"}, {"assignments": [507], "declarations": [{"constant": false, "id": 507, "mutability": "mutable", "name": "scalingFactorTokenIn", "nodeType": "VariableDeclaration", "scope": 626, "src": "7912:28:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 506, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7912:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 511, "initialValue": {"arguments": [{"id": 509, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 500, "src": "7958:15:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 508, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [1647], "referencedDeclaration": 1647, "src": "7943:14:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 510, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7943:31:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "7912:62:40"}, {"assignments": [513], "declarations": [{"constant": false, "id": 513, "mutability": "mutable", "name": "scalingFactorTokenOut", "nodeType": "VariableDeclaration", "scope": 626, "src": "7984:29:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 512, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7984:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 518, "initialValue": {"arguments": [{"id": 516, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "8031:16:40", "subExpression": {"id": 515, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 500, "src": "8032:15:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 514, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [1647], "referencedDeclaration": 1647, "src": "8016:14:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 517, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8016:32:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "7984:64:40"}, {"expression": {"id": 524, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 519, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 485, "src": "8102:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 521, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 485, "src": "8128:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 522, "name": "scalingFactorTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 507, "src": "8144:20:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 520, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4953, "src": "8119:8:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 523, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8119:46:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8102:63:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 525, "nodeType": "ExpressionStatement", "src": "8102:63:40"}, {"expression": {"id": 531, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 526, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 487, "src": "8175:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 528, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 487, "src": "8202:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 529, "name": "scalingFactorTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 513, "src": "8219:21:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 527, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4953, "src": "8193:8:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 530, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8193:48:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8175:66:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 532, "nodeType": "ExpressionStatement", "src": "8175:66:40"}, {"assignments": [534, 536, 538], "declarations": [{"constant": false, "id": 534, "mutability": "mutable", "name": "currentInvariant", "nodeType": "VariableDeclaration", "scope": 626, "src": "8331:24:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 533, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8331:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 536, "mutability": "mutable", "name": "virtualParamIn", "nodeType": "VariableDeclaration", "scope": 626, "src": "8357:22:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 535, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8357:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 538, "mutability": "mutable", "name": "virtualParamOut", "nodeType": "VariableDeclaration", "scope": 626, "src": "8381:23:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 537, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8381:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 544, "initialValue": {"arguments": [{"id": 540, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 485, "src": "8445:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 541, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 487, "src": "8473:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 542, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 500, "src": "8502:15:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 539, "name": "_calculateCurrentValues", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 831, "src": "8408:23:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256,bool) view returns (uint256,uint256,uint256)"}}, "id": 543, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8408:119:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "8330:197:40"}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_SwapKind_$7397", "typeString": "enum IVault.SwapKind"}, "id": 550, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 545, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 483, "src": "8542:7:40", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$16890_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 546, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kind", "nodeType": "MemberAccess", "referencedDeclaration": 16873, "src": "8542:12:40", "typeDescriptions": {"typeIdentifier": "t_enum$_SwapKind_$7397", "typeString": "enum IVault.SwapKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 547, "name": "IVault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7573, "src": "8558:6:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IVault_$7573_$", "typeString": "type(contract IVault)"}}, "id": 548, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "SwapKind", "nodeType": "MemberAccess", "referencedDeclaration": 7397, "src": "8558:15:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_SwapKind_$7397_$", "typeString": "type(enum IVault.SwapKind)"}}, "id": 549, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "GIVEN_IN", "nodeType": "MemberAccess", "src": "8558:24:40", "typeDescriptions": {"typeIdentifier": "t_enum$_SwapKind_$7397", "typeString": "enum IVault.SwapKind"}}, "src": "8542:40:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 624, "nodeType": "Block", "src": "9342:631:40", "statements": [{"expression": {"id": 597, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 589, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 483, "src": "9356:7:40", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$16890_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 591, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 16879, "src": "9356:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 593, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 483, "src": "9382:7:40", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$16890_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 594, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 16879, "src": "9382:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 595, "name": "scalingFactorTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 513, "src": "9398:21:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 592, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4953, "src": "9373:8:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 596, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9373:47:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9356:64:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 598, "nodeType": "ExpressionStatement", "src": "9356:64:40"}, {"assignments": [600], "declarations": [{"constant": false, "id": 600, "mutability": "mutable", "name": "amountIn", "nodeType": "VariableDeclaration", "scope": 624, "src": "9435:16:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 599, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9435:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 608, "initialValue": {"arguments": [{"id": 602, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 483, "src": "9470:7:40", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$16890_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, {"id": 603, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 485, "src": "9479:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 604, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 487, "src": "9495:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 605, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 536, "src": "9512:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 606, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 538, "src": "9528:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_SwapRequest_$16890_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 601, "name": "_onSwapGivenOut", "nodeType": "Identifier", "overloadedDeclarations": [681], "referencedDeclaration": 681, "src": "9454:15:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_SwapRequest_$16890_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (struct IPoolSwapStructs.SwapRequest memory,uint256,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 607, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9454:90:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "9435:109:40"}, {"expression": {"id": 614, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 609, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 600, "src": "9629:8:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 611, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 600, "src": "9653:8:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 612, "name": "scalingFactorTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 507, "src": "9663:20:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 610, "name": "_downscaleUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5059, "src": "9640:12:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 613, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9640:44:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9629:55:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 615, "nodeType": "ExpressionStatement", "src": "9629:55:40"}, {"expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 618, "name": "getSwapFeePercentage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3311, "src": "9926:20:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 619, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9926:22:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 620, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "complement", "nodeType": "MemberAccess", "referencedDeclaration": 6238, "src": "9926:33:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256) pure returns (uint256)"}}, "id": 621, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9926:35:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 616, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 600, "src": "9911:8:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 617, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "divUp", "nodeType": "MemberAccess", "referencedDeclaration": 5944, "src": "9911:14:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 622, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9911:51:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 498, "id": 623, "nodeType": "Return", "src": "9904:58:40"}]}, "id": 625, "nodeType": "IfStatement", "src": "8538:1435:40", "trueBody": {"id": 588, "nodeType": "Block", "src": "8584:752:40", "statements": [{"assignments": [552], "declarations": [{"constant": false, "id": 552, "mutability": "mutable", "name": "feeAmount", "nodeType": "VariableDeclaration", "scope": 588, "src": "8801:17:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 551, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8801:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 559, "initialValue": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 556, "name": "getSwapFeePercentage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3311, "src": "8842:20:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 557, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8842:22:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"id": 553, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 483, "src": "8821:7:40", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$16890_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 554, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 16879, "src": "8821:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 555, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mulUp", "nodeType": "MemberAccess", "referencedDeclaration": 5767, "src": "8821:20:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 558, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8821:44:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "8801:64:40"}, {"expression": {"id": 571, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 560, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 483, "src": "8981:7:40", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$16890_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 562, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 16879, "src": "8981:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [{"id": 567, "name": "feeAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 552, "src": "9026:9:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"id": 564, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 483, "src": "9007:7:40", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$16890_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 565, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 16879, "src": "9007:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 566, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 5658, "src": "9007:18:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 568, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9007:29:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 569, "name": "scalingFactorTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 507, "src": "9038:20:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 563, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4953, "src": "8998:8:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 570, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8998:61:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8981:78:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 572, "nodeType": "ExpressionStatement", "src": "8981:78:40"}, {"assignments": [574], "declarations": [{"constant": false, "id": 574, "mutability": "mutable", "name": "amountOut", "nodeType": "VariableDeclaration", "scope": 588, "src": "9074:17:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 573, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9074:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 582, "initialValue": {"arguments": [{"id": 576, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 483, "src": "9109:7:40", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$16890_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, {"id": 577, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 485, "src": "9118:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 578, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 487, "src": "9134:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 579, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 536, "src": "9151:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 580, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 538, "src": "9167:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_SwapRequest_$16890_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 575, "name": "_onSwapGivenIn", "nodeType": "Identifier", "overloadedDeclarations": [654], "referencedDeclaration": 654, "src": "9094:14:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_SwapRequest_$16890_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (struct IPoolSwapStructs.SwapRequest memory,uint256,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 581, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9094:89:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "9074:109:40"}, {"expression": {"arguments": [{"id": 584, "name": "amountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 574, "src": "9292:9:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 585, "name": "scalingFactorTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 513, "src": "9303:21:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 583, "name": "_downscaleDown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5006, "src": "9277:14:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 586, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9277:48:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 498, "id": 587, "nodeType": "Return", "src": "9270:55:40"}]}}]}, "functionSelector": "9d2c110c", "id": 627, "implemented": true, "kind": "function", "modifiers": [{"id": 491, "modifierName": {"id": 490, "name": "whenNotPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13425, "src": "7784:13:40", "typeDescriptions": {"typeIdentifier": "t_modifier$__$", "typeString": "modifier ()"}}, "nodeType": "ModifierInvocation", "src": "7784:13:40"}, {"arguments": [{"expression": {"id": 493, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 483, "src": "7808:7:40", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$16890_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 494, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "poolId", "nodeType": "MemberAccess", "referencedDeclaration": 16881, "src": "7808:14:40", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "id": 495, "modifierName": {"id": 492, "name": "onlyVault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3095, "src": "7798:9:40", "typeDescriptions": {"typeIdentifier": "t_modifier$_t_bytes32_$", "typeString": "modifier (bytes32)"}}, "nodeType": "ModifierInvocation", "src": "7798:25:40"}], "name": "onSwap", "nodeType": "FunctionDefinition", "overrides": {"id": 489, "nodeType": "OverrideSpecifier", "overrides": [], "src": "7775:8:40"}, "parameters": {"id": 488, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 483, "mutability": "mutable", "name": "request", "nodeType": "VariableDeclaration", "scope": 627, "src": "7662:26:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$16890_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 482, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 16890, "src": "7662:11:40", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$16890_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 485, "mutability": "mutable", "name": "balanceTokenIn", "nodeType": "VariableDeclaration", "scope": 627, "src": "7698:22:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 484, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7698:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 487, "mutability": "mutable", "name": "balanceTokenOut", "nodeType": "VariableDeclaration", "scope": 627, "src": "7730:23:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 486, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7730:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7652:107:40"}, "returnParameters": {"id": 498, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 497, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 627, "src": "7833:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 496, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7833:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7832:9:40"}, "scope": 1742, "src": "7637:2342:40", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"baseFunctions": [3674], "body": {"id": 653, "nodeType": "Block", "src": "10294:216:40", "statements": [{"expression": {"arguments": [{"id": 645, "name": "currentBalanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 631, "src": "10404:21:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 646, "name": "currentBalanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 633, "src": "10427:22:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 647, "name": "swapRequest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 629, "src": "10451:11:40", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$16890_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 648, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 16879, "src": "10451:18:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 649, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 635, "src": "10471:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 650, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 637, "src": "10487:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 643, "name": "Gyro2CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2803, "src": "10375:12:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPMath_$2803_$", "typeString": "type(library Gyro2CLPMath)"}}, "id": 644, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcOutGivenIn", "nodeType": "MemberAccess", "referencedDeclaration": 2673, "src": "10375:28:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 651, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10375:128:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 642, "id": 652, "nodeType": "Return", "src": "10368:135:40"}]}, "id": 654, "implemented": true, "kind": "function", "modifiers": [], "name": "_onSwapGivenIn", "nodeType": "FunctionDefinition", "overrides": {"id": 639, "nodeType": "OverrideSpecifier", "overrides": [], "src": "10267:8:40"}, "parameters": {"id": 638, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 629, "mutability": "mutable", "name": "swapRequest", "nodeType": "VariableDeclaration", "scope": 654, "src": "10072:30:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$16890_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 628, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 16890, "src": "10072:11:40", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$16890_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 631, "mutability": "mutable", "name": "currentBalanceTokenIn", "nodeType": "VariableDeclaration", "scope": 654, "src": "10112:29:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 630, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10112:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 633, "mutability": "mutable", "name": "currentBalanceTokenOut", "nodeType": "VariableDeclaration", "scope": 654, "src": "10151:30:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 632, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10151:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 635, "mutability": "mutable", "name": "virtualParamIn", "nodeType": "VariableDeclaration", "scope": 654, "src": "10191:22:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 634, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10191:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 637, "mutability": "mutable", "name": "virtualParamOut", "nodeType": "VariableDeclaration", "scope": 654, "src": "10223:23:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 636, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10223:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "10062:190:40"}, "returnParameters": {"id": 642, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 641, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 654, "src": "10285:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 640, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10285:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "10284:9:40"}, "scope": 1742, "src": "10039:471:40", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"baseFunctions": [3700], "body": {"id": 680, "nodeType": "Block", "src": "10772:216:40", "statements": [{"expression": {"arguments": [{"id": 672, "name": "currentBalanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 658, "src": "10882:21:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 673, "name": "currentBalanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 660, "src": "10905:22:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 674, "name": "swapRequest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 656, "src": "10929:11:40", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$16890_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 675, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 16879, "src": "10929:18:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 676, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 662, "src": "10949:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 677, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 664, "src": "10965:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 670, "name": "Gyro2CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2803, "src": "10853:12:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPMath_$2803_$", "typeString": "type(library Gyro2CLPMath)"}}, "id": 671, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcInGivenOut", "nodeType": "MemberAccess", "referencedDeclaration": 2742, "src": "10853:28:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 678, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10853:128:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 669, "id": 679, "nodeType": "Return", "src": "10846:135:40"}]}, "id": 681, "implemented": true, "kind": "function", "modifiers": [], "name": "_onSwapGivenOut", "nodeType": "FunctionDefinition", "overrides": {"id": 666, "nodeType": "OverrideSpecifier", "overrides": [], "src": "10745:8:40"}, "parameters": {"id": 665, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 656, "mutability": "mutable", "name": "swapRequest", "nodeType": "VariableDeclaration", "scope": 681, "src": "10550:30:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$16890_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 655, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 16890, "src": "10550:11:40", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$16890_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 658, "mutability": "mutable", "name": "currentBalanceTokenIn", "nodeType": "VariableDeclaration", "scope": 681, "src": "10590:29:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 657, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10590:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 660, "mutability": "mutable", "name": "currentBalanceTokenOut", "nodeType": "VariableDeclaration", "scope": 681, "src": "10629:30:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 659, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10629:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 662, "mutability": "mutable", "name": "virtualParamIn", "nodeType": "VariableDeclaration", "scope": 681, "src": "10669:22:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 661, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10669:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 664, "mutability": "mutable", "name": "virtualParamOut", "nodeType": "VariableDeclaration", "scope": 681, "src": "10701:23:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 663, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10701:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "10540:190:40"}, "returnParameters": {"id": 669, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 668, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 681, "src": "10763:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 667, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10763:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "10762:9:40"}, "scope": 1742, "src": "10516:472:40", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 730, "nodeType": "Block", "src": "11369:392:40", "statements": [{"assignments": [698], "declarations": [{"constant": false, "id": 698, "mutability": "mutable", "name": "scalingFactorTokenIn", "nodeType": "VariableDeclaration", "scope": 730, "src": "11379:28:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 697, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11379:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 702, "initialValue": {"arguments": [{"id": 700, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 688, "src": "11425:15:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 699, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [1647], "referencedDeclaration": 1647, "src": "11410:14:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 701, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11410:31:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "11379:62:40"}, {"assignments": [704], "declarations": [{"constant": false, "id": 704, "mutability": "mutable", "name": "scalingFactorTokenOut", "nodeType": "VariableDeclaration", "scope": 730, "src": "11451:29:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 703, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11451:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 709, "initialValue": {"arguments": [{"id": 707, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "11498:16:40", "subExpression": {"id": 706, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 688, "src": "11499:15:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 705, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [1647], "referencedDeclaration": 1647, "src": "11483:14:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 708, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11483:32:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "11451:64:40"}, {"expression": {"id": 715, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 710, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 684, "src": "11525:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 712, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 684, "src": "11551:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 713, "name": "scalingFactorTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 698, "src": "11567:20:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 711, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4953, "src": "11542:8:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 714, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11542:46:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11525:63:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 716, "nodeType": "ExpressionStatement", "src": "11525:63:40"}, {"expression": {"id": 722, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 717, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 686, "src": "11598:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 719, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 686, "src": "11625:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 720, "name": "scalingFactorTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 704, "src": "11642:21:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 718, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4953, "src": "11616:8:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 721, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11616:48:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11598:66:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 723, "nodeType": "ExpressionStatement", "src": "11598:66:40"}, {"expression": {"arguments": [{"id": 725, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 684, "src": "11705:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 726, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 686, "src": "11721:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 727, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 688, "src": "11738:15:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 724, "name": "_calculateCurrentValues", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 831, "src": "11681:23:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256,bool) view returns (uint256,uint256,uint256)"}}, "id": 728, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11681:73:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256,uint256)"}}, "functionReturnParameters": 696, "id": 729, "nodeType": "Return", "src": "11674:80:40"}]}, "documentation": {"id": 682, "nodeType": "StructuredDocumentation", "src": "10994:39:40", "text": "@dev invariant and virtual offsets."}, "functionSelector": "3c4dd5bb", "id": 731, "implemented": true, "kind": "function", "modifiers": [], "name": "calculateCurrentValues", "nodeType": "FunctionDefinition", "parameters": {"id": 689, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 684, "mutability": "mutable", "name": "balanceTokenIn", "nodeType": "VariableDeclaration", "scope": 731, "src": "11079:22:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 683, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11079:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 686, "mutability": "mutable", "name": "balanceTokenOut", "nodeType": "VariableDeclaration", "scope": 731, "src": "11125:23:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 685, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11125:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 688, "mutability": "mutable", "name": "tokenInIsToken0", "nodeType": "VariableDeclaration", "scope": 731, "src": "11172:20:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 687, "name": "bool", "nodeType": "ElementaryTypeName", "src": "11172:4:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "11069:129:40"}, "returnParameters": {"id": 696, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 691, "mutability": "mutable", "name": "currentInvariant", "nodeType": "VariableDeclaration", "scope": 731, "src": "11257:24:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 690, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11257:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 693, "mutability": "mutable", "name": "virtualParamIn", "nodeType": "VariableDeclaration", "scope": 731, "src": "11295:22:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 692, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11295:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 695, "mutability": "mutable", "name": "virtualParamOut", "nodeType": "VariableDeclaration", "scope": 731, "src": "11331:23:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 694, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11331:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "11243:121:40"}, "scope": 1742, "src": "11038:723:40", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 830, "nodeType": "Block", "src": "12093:623:40", "statements": [{"assignments": [750], "declarations": [{"constant": false, "id": 750, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 830, "src": "12103:25:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 748, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12103:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 749, "nodeType": "ArrayTypeName", "src": "12103:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 756, "initialValue": {"arguments": [{"hexValue": "32", "id": 754, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12145:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 753, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "12131:13:40", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 751, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12135:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 752, "nodeType": "ArrayTypeName", "src": "12135:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 755, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12131:16:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "12103:44:40"}, {"expression": {"id": 764, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 757, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 750, "src": "12157:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 759, "indexExpression": {"hexValue": "30", "id": 758, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12166:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "12157:11:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"id": 760, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 737, "src": "12171:15:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 762, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 735, "src": "12206:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 763, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "12171:50:40", "trueExpression": {"id": 761, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 733, "src": "12189:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "12157:64:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 765, "nodeType": "ExpressionStatement", "src": "12157:64:40"}, {"expression": {"id": 773, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 766, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 750, "src": "12231:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 768, "indexExpression": {"hexValue": "31", "id": 767, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12240:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "12231:11:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"id": 769, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 737, "src": "12245:15:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 771, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 733, "src": "12281:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 772, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "12245:50:40", "trueExpression": {"id": 770, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 735, "src": "12263:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "12231:64:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 774, "nodeType": "ExpressionStatement", "src": "12231:64:40"}, {"assignments": [780], "declarations": [{"constant": false, "id": 780, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 830, "src": "12306:28:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 778, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12306:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 779, "length": {"hexValue": "32", "id": 777, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12314:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "12306:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 783, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 781, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [176, 189], "referencedDeclaration": 176, "src": "12337:15:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function () view returns (uint256[2] memory)"}}, "id": 782, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12337:17:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "12306:48:40"}, {"expression": {"id": 795, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 784, "name": "currentInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 740, "src": "12365:16:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 787, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 750, "src": "12417:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"baseExpression": {"id": 788, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 780, "src": "12427:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 790, "indexExpression": {"hexValue": "30", "id": 789, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12438:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "12427:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 791, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 780, "src": "12442:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 793, "indexExpression": {"hexValue": "31", "id": 792, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12453:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "12442:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 785, "name": "Gyro2CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2803, "src": "12384:12:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPMath_$2803_$", "typeString": "type(library Gyro2CLPMath)"}}, "id": 786, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 2398, "src": "12384:32:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256)"}}, "id": 794, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12384:72:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "12365:91:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 796, "nodeType": "ExpressionStatement", "src": "12365:91:40"}, {"assignments": [802], "declarations": [{"constant": false, "id": 802, "mutability": "mutable", "name": "virtualParam", "nodeType": "VariableDeclaration", "scope": 830, "src": "12467:30:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 800, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12467:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 801, "length": {"hexValue": "32", "id": 799, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12475:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "12467:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 807, "initialValue": {"arguments": [{"id": 804, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 780, "src": "12522:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, {"id": 805, "name": "currentInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 740, "src": "12534:16:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 803, "name": "_getVirtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 347, "src": "12500:21:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function (uint256[2] memory,uint256) view returns (uint256[2] memory)"}}, "id": 806, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12500:51:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "12467:84:40"}, {"expression": {"id": 817, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 808, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 742, "src": "12562:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"id": 809, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 737, "src": "12579:15:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"baseExpression": {"id": 813, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 802, "src": "12615:12:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 815, "indexExpression": {"hexValue": "31", "id": 814, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12628:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "12615:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 816, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "12579:51:40", "trueExpression": {"baseExpression": {"id": 810, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 802, "src": "12597:12:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 812, "indexExpression": {"hexValue": "30", "id": 811, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12610:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "12597:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "12562:68:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 818, "nodeType": "ExpressionStatement", "src": "12562:68:40"}, {"expression": {"id": 828, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 819, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 744, "src": "12640:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"id": 820, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 737, "src": "12658:15:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"baseExpression": {"id": 824, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 802, "src": "12694:12:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 826, "indexExpression": {"hexValue": "30", "id": 825, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12707:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "12694:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 827, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "12658:51:40", "trueExpression": {"baseExpression": {"id": 821, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 802, "src": "12676:12:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 823, "indexExpression": {"hexValue": "31", "id": 822, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12689:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "12676:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "12640:69:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 829, "nodeType": "ExpressionStatement", "src": "12640:69:40"}]}, "id": 831, "implemented": true, "kind": "function", "modifiers": [], "name": "_calculateCurrentValues", "nodeType": "FunctionDefinition", "parameters": {"id": 738, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 733, "mutability": "mutable", "name": "balanceTokenIn", "nodeType": "VariableDeclaration", "scope": 831, "src": "11809:22:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 732, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11809:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 735, "mutability": "mutable", "name": "balanceTokenOut", "nodeType": "VariableDeclaration", "scope": 831, "src": "11851:23:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 734, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11851:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 737, "mutability": "mutable", "name": "tokenInIsToken0", "nodeType": "VariableDeclaration", "scope": 831, "src": "11894:20:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 736, "name": "bool", "nodeType": "ElementaryTypeName", "src": "11894:4:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "11799:121:40"}, "returnParameters": {"id": 745, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 740, "mutability": "mutable", "name": "currentInvariant", "nodeType": "VariableDeclaration", "scope": 831, "src": "11981:24:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 739, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11981:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 742, "mutability": "mutable", "name": "virtualParamIn", "nodeType": "VariableDeclaration", "scope": 831, "src": "12019:22:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 741, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12019:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 744, "mutability": "mutable", "name": "virtualParamOut", "nodeType": "VariableDeclaration", "scope": 831, "src": "12055:23:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 743, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12055:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "11967:121:40"}, "scope": 1742, "src": "11767:949:40", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [3908], "body": {"id": 935, "nodeType": "Block", "src": "13697:998:40", "statements": [{"assignments": [852], "declarations": [{"constant": false, "id": 852, "mutability": "mutable", "name": "kind", "nodeType": "VariableDeclaration", "scope": 935, "src": "13707:30:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$8541", "typeString": "enum BaseWeightedPool.JoinKind"}, "typeName": {"id": 851, "name": "BaseWeightedPool.JoinKind", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 8541, "src": "13707:25:40", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$8541", "typeString": "enum BaseWeightedPool.JoinKind"}}, "visibility": "internal"}], "id": 856, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 853, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 840, "src": "13740:8:40", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 854, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "joinKind", "nodeType": "MemberAccess", "referencedDeclaration": 2162, "src": "13740:17:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_enum$_JoinKind_$8541_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (enum BaseWeightedPool.JoinKind)"}}, "id": 855, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13740:19:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$8541", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "VariableDeclarationStatement", "src": "13707:52:40"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_JoinKind_$8541", "typeString": "enum BaseWeightedPool.JoinKind"}, "id": 862, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 858, "name": "kind", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 852, "src": "13778:4:40", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$8541", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 859, "name": "BaseWeightedPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9742, "src": "13786:16:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BaseWeightedPool_$9742_$", "typeString": "type(contract BaseWeightedPool)"}}, "id": 860, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "JoinKind", "nodeType": "MemberAccess", "referencedDeclaration": 8541, "src": "13786:25:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_JoinKind_$8541_$", "typeString": "type(enum BaseWeightedPool.JoinKind)"}}, "id": 861, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "INIT", "nodeType": "MemberAccess", "src": "13786:30:40", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$8541", "typeString": "enum BaseWeightedPool.JoinKind"}}, "src": "13778:38:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 863, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13960, "src": "13818:6:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$13960_$", "typeString": "type(library Errors)"}}, "id": 864, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNINITIALIZED", "nodeType": "MemberAccess", "referencedDeclaration": 13629, "src": "13818:20:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 857, "name": "_require", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13555, "src": "13769:8:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 865, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13769:70:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 866, "nodeType": "ExpressionStatement", "src": "13769:70:40"}, {"assignments": [871], "declarations": [{"constant": false, "id": 871, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 935, "src": "13850:26:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 869, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13850:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 870, "nodeType": "ArrayTypeName", "src": "13850:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 875, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 872, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 840, "src": "13879:8:40", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 873, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "initialAmountsIn", "nodeType": "MemberAccess", "referencedDeclaration": 2201, "src": "13879:25:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (uint256[] memory)"}}, "id": 874, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13879:27:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "13850:56:40"}, {"expression": {"arguments": [{"expression": {"id": 879, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 871, "src": "13952:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 880, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "13952:16:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "32", "id": 881, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13970:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "expression": {"id": 876, "name": "InputHelpers", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9932, "src": "13916:12:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_InputHelpers_$9932_$", "typeString": "type(library InputHelpers)"}}, "id": 878, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ensureInputLengthMatch", "nodeType": "MemberAccess", "referencedDeclaration": 9840, "src": "13916:35:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256) pure"}}, "id": 882, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13916:56:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 883, "nodeType": "ExpressionStatement", "src": "13916:56:40"}, {"expression": {"arguments": [{"id": 885, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 871, "src": "13996:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}], "id": 884, "name": "_upscaleArray", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4989, "src": "13982:13:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$", "typeString": "function (uint256[] memory) view"}}, "id": 886, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13982:24:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 887, "nodeType": "ExpressionStatement", "src": "13982:24:40"}, {"assignments": [889, 891, 893], "declarations": [{"constant": false, "id": 889, "mutability": "mutable", "name": "invariantAfterJoin", "nodeType": "VariableDeclaration", "scope": 935, "src": "14018:26:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 888, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14018:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 891, "mutability": "mutable", "name": "virtualParam0", "nodeType": "VariableDeclaration", "scope": 935, "src": "14046:21:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 890, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14046:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 893, "mutability": "mutable", "name": "virtualParam1", "nodeType": "VariableDeclaration", "scope": 935, "src": "14069:21:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 892, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14069:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 903, "initialValue": {"arguments": [{"baseExpression": {"id": 895, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 871, "src": "14118:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 897, "indexExpression": {"hexValue": "30", "id": 896, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14128:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "14118:12:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 898, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 871, "src": "14132:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 900, "indexExpression": {"hexValue": "31", "id": 899, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14142:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "14132:12:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "74727565", "id": 901, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "14146:4:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 894, "name": "_calculateCurrentValues", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 831, "src": "14094:23:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256,bool) view returns (uint256,uint256,uint256)"}}, "id": 902, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14094:57:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "14017:134:40"}, {"assignments": [905], "declarations": [{"constant": false, "id": 905, "mutability": "mutable", "name": "spotPrice", "nodeType": "VariableDeclaration", "scope": 935, "src": "14441:17:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 904, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14441:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 911, "initialValue": {"arguments": [{"id": 907, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 871, "src": "14471:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 908, "name": "virtualParam0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 891, "src": "14482:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 909, "name": "virtualParam1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 893, "src": "14497:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 906, "name": "_getPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 436, "src": "14461:9:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256)"}}, "id": 910, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14461:50:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "14441:70:40"}, {"assignments": [913], "declarations": [{"constant": false, "id": 913, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 935, "src": "14521:20:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 912, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14521:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 926, "initialValue": {"arguments": [{"arguments": [{"id": 920, "name": "spotPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 905, "src": "14574:9:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"baseExpression": {"id": 916, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 871, "src": "14553:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 918, "indexExpression": {"hexValue": "30", "id": 917, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14563:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "14553:12:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 919, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mulDown", "nodeType": "MemberAccess", "referencedDeclaration": 5697, "src": "14553:20:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 921, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14553:31:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 922, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 871, "src": "14586:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 924, "indexExpression": {"hexValue": "31", "id": 923, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14596:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "14586:12:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 914, "name": "Math", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10221, "src": "14544:4:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Math_$10221_$", "typeString": "type(library Math)"}}, "id": 915, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 9963, "src": "14544:8:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 925, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14544:55:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "14521:78:40"}, {"expression": {"id": 929, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 927, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3044, "src": "14610:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 928, "name": "invariantAfterJoin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 889, "src": "14627:18:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "14610:35:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 930, "nodeType": "ExpressionStatement", "src": "14610:35:40"}, {"expression": {"components": [{"id": 931, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 913, "src": "14664:12:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 932, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 871, "src": "14678:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 933, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "14663:25:40", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "functionReturnParameters": 848, "id": 934, "nodeType": "Return", "src": "14656:32:40"}]}, "documentation": {"id": 832, "nodeType": "StructuredDocumentation", "src": "12722:801:40", "text": " @dev Called when the Pool is joined for the first time; that is, when the BPT total supply is zero.\n Returns the amount of BPT to mint, and the token amounts the Pool will receive in return.\n Minted BPT will be sent to `recipient`, except for _MINIMUM_BPT, which will be deducted from this amount and sent\n to the zero address instead. This will cause that BPT to remain forever locked there, preventing total BPT from\n ever dropping below that value, and ensuring `_onInitializePool` can only be called once in the entire Pool's\n lifetime.\n The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n be downscaled (rounding up) before being returned to the Vault."}, "id": 936, "implemented": true, "kind": "function", "modifiers": [], "name": "_onInitializePool", "nodeType": "FunctionDefinition", "overrides": {"id": 842, "nodeType": "OverrideSpecifier", "overrides": [], "src": "13652:8:40"}, "parameters": {"id": 841, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 834, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 936, "src": "13564:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 833, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "13564:7:40", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 836, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 936, "src": "13581:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 835, "name": "address", "nodeType": "ElementaryTypeName", "src": "13581:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 838, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 936, "src": "13598:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 837, "name": "address", "nodeType": "ElementaryTypeName", "src": "13598:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 840, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 936, "src": "13615:21:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 839, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "13615:5:40", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "13554:88:40"}, "returnParameters": {"id": 848, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 844, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 936, "src": "13670:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 843, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13670:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 847, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 936, "src": "13679:16:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 845, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13679:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 846, "nodeType": "ArrayTypeName", "src": "13679:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "13669:27:40"}, "scope": 1742, "src": "13528:1167:40", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [4003], "body": {"id": 1044, "nodeType": "Block", "src": "16218:1614:40", "statements": [{"assignments": [969], "declarations": [{"constant": false, "id": 969, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 1044, "src": "16287:28:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 967, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16287:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 968, "length": {"hexValue": "32", "id": 966, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16295:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "16287:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 972, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 970, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [176, 189], "referencedDeclaration": 176, "src": "16318:15:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function () view returns (uint256[2] memory)"}}, "id": 971, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16318:17:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "16287:48:40"}, {"assignments": [974], "declarations": [{"constant": false, "id": 974, "mutability": "mutable", "name": "invariantBeforeAction", "nodeType": "VariableDeclaration", "scope": 1044, "src": "16639:29:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 973, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16639:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 985, "initialValue": {"arguments": [{"id": 977, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 946, "src": "16704:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"baseExpression": {"id": 978, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 969, "src": "16714:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 980, "indexExpression": {"hexValue": "30", "id": 979, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16725:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "16714:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 981, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 969, "src": "16729:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 983, "indexExpression": {"hexValue": "31", "id": 982, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16740:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "16729:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 975, "name": "Gyro2CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2803, "src": "16671:12:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPMath_$2803_$", "typeString": "type(library Gyro2CLPMath)"}}, "id": 976, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 2398, "src": "16671:32:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256)"}}, "id": 984, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16671:72:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "16639:104:40"}, {"assignments": [991], "declarations": [{"constant": false, "id": 991, "mutability": "mutable", "name": "virtualParam", "nodeType": "VariableDeclaration", "scope": 1044, "src": "16753:30:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 989, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16753:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 990, "length": {"hexValue": "32", "id": 988, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16761:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "16753:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 996, "initialValue": {"arguments": [{"id": 993, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 969, "src": "16808:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, {"id": 994, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 974, "src": "16820:21:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 992, "name": "_getVirtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 347, "src": "16786:21:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function (uint256[2] memory,uint256) view returns (uint256[2] memory)"}}, "id": 995, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16786:56:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "16753:89:40"}, {"expression": {"arguments": [{"id": 998, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 974, "src": "16869:21:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 997, "name": "_distributeFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1353, "src": "16853:15:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 999, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16853:38:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1000, "nodeType": "ExpressionStatement", "src": "16853:38:40"}, {"assignments": [1002, 1005], "declarations": [{"constant": false, "id": 1002, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 1044, "src": "16903:20:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1001, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16903:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1005, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 1044, "src": "16925:26:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1003, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16925:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1004, "nodeType": "ArrayTypeName", "src": "16925:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 1010, "initialValue": {"arguments": [{"id": 1007, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 946, "src": "16963:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 1008, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 952, "src": "16973:8:40", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 1006, "name": "_doJoin", "nodeType": "Identifier", "overloadedDeclarations": [1089, 4072], "referencedDeclaration": 1089, "src": "16955:7:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 1009, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16955:27:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "16902:80:40"}, {"condition": {"expression": {"id": 1011, "name": "_capParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2838, "src": "16997:10:40", "typeDescriptions": {"typeIdentifier": "t_struct$_CapParams_$7591_storage", "typeString": "struct ICappedLiquidity.CapParams storage ref"}}, "id": 1012, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "capEnabled", "nodeType": "MemberAccess", "referencedDeclaration": 7586, "src": "16997:21:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1023, "nodeType": "IfStatement", "src": "16993:113:40", "trueBody": {"id": 1022, "nodeType": "Block", "src": "17020:86:40", "statements": [{"expression": {"arguments": [{"id": 1014, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1002, "src": "17045:12:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"id": 1016, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 943, "src": "17069:9:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 1015, "name": "balanceOf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12983, "src": "17059:9:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view returns (uint256)"}}, "id": 1017, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17059:20:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 1018, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12969, "src": "17081:11:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1019, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17081:13:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1013, "name": "_ensureCap", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2997, "src": "17034:10:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256,uint256) view"}}, "id": 1020, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17034:61:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1021, "nodeType": "ExpressionStatement", "src": "17034:61:40"}]}}, {"expression": {"id": 1033, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1024, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3044, "src": "17540:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1027, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 974, "src": "17595:21:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1028, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1002, "src": "17618:12:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 1029, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12969, "src": "17632:11:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1030, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17632:13:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "74727565", "id": 1031, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "17647:4:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "expression": {"id": 1025, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7027, "src": "17557:12:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$7027_$", "typeString": "type(library GyroPoolMath)"}}, "id": 1026, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "liquidityInvariantUpdate", "nodeType": "MemberAccess", "referencedDeclaration": 6946, "src": "17557:37:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,bool) pure returns (uint256)"}}, "id": 1032, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17557:95:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "17540:112:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1034, "nodeType": "ExpressionStatement", "src": "17540:112:40"}, {"expression": {"components": [{"id": 1035, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1002, "src": "17783:12:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1036, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1005, "src": "17797:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"arguments": [{"hexValue": "32", "id": 1040, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "17822:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 1039, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "17808:13:40", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 1037, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17812:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1038, "nodeType": "ArrayTypeName", "src": "17812:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 1041, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17808:16:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1042, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "17782:43:40", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory,uint256[] memory)"}}, "functionReturnParameters": 963, "id": 1043, "nodeType": "Return", "src": "17775:50:40"}]}, "documentation": {"id": 937, "nodeType": "StructuredDocumentation", "src": "14701:1133:40", "text": " @dev Called whenever the Pool is joined after the first initialization join (see `_onInitializePool`).\n Returns the amount of BPT to mint, the token amounts that the Pool will receive in return, and the number of\n tokens to pay in protocol swap fees.\n Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n Minted BPT will be sent to `recipient`.\n The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n be downscaled (rounding up) before being returned to the Vault.\n Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onJoinPool`). These\n amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way"}, "id": 1045, "implemented": true, "kind": "function", "modifiers": [], "name": "_onJoinPool", "nodeType": "FunctionDefinition", "overrides": {"id": 954, "nodeType": "OverrideSpecifier", "overrides": [], "src": "16097:8:40"}, "parameters": {"id": 953, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 939, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1045, "src": "15869:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 938, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "15869:7:40", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 941, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1045, "src": "15886:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 940, "name": "address", "nodeType": "ElementaryTypeName", "src": "15886:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 943, "mutability": "mutable", "name": "recipient", "nodeType": "VariableDeclaration", "scope": 1045, "src": "15903:17:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 942, "name": "address", "nodeType": "ElementaryTypeName", "src": "15903:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 946, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 1045, "src": "15930:25:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 944, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15930:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 945, "nodeType": "ArrayTypeName", "src": "15930:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 948, "mutability": "mutable", "name": "lastChangeBlock", "nodeType": "VariableDeclaration", "scope": 1045, "src": "15965:23:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 947, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15965:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 950, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1045, "src": "15998:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 949, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15998:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 952, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 1045, "src": "16044:21:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 951, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "16044:5:40", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "15859:212:40"}, "returnParameters": {"id": 963, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 956, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1045, "src": "16136:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 955, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16136:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 959, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1045, "src": "16157:16:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 957, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16157:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 958, "nodeType": "ArrayTypeName", "src": "16157:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 962, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1045, "src": "16187:16:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 960, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16187:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 961, "nodeType": "ArrayTypeName", "src": "16187:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "16122:91:40"}, "scope": 1742, "src": "15839:1993:40", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 1088, "nodeType": "Block", "src": "17978:441:40", "statements": [{"assignments": [1061], "declarations": [{"constant": false, "id": 1061, "mutability": "mutable", "name": "kind", "nodeType": "VariableDeclaration", "scope": 1088, "src": "17988:30:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$8541", "typeString": "enum BaseWeightedPool.JoinKind"}, "typeName": {"id": 1060, "name": "BaseWeightedPool.JoinKind", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 8541, "src": "17988:25:40", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$8541", "typeString": "enum BaseWeightedPool.JoinKind"}}, "visibility": "internal"}], "id": 1065, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1062, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1050, "src": "18021:8:40", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 1063, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "joinKind", "nodeType": "MemberAccess", "referencedDeclaration": 2162, "src": "18021:17:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_enum$_JoinKind_$8541_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (enum BaseWeightedPool.JoinKind)"}}, "id": 1064, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18021:19:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$8541", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "VariableDeclarationStatement", "src": "17988:52:40"}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_JoinKind_$8541", "typeString": "enum BaseWeightedPool.JoinKind"}, "id": 1070, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1066, "name": "kind", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1061, "src": "18177:4:40", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$8541", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 1067, "name": "BaseWeightedPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9742, "src": "18185:16:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BaseWeightedPool_$9742_$", "typeString": "type(contract BaseWeightedPool)"}}, "id": 1068, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "JoinKind", "nodeType": "MemberAccess", "referencedDeclaration": 8541, "src": "18185:25:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_JoinKind_$8541_$", "typeString": "type(enum BaseWeightedPool.JoinKind)"}}, "id": 1069, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "ALL_TOKENS_IN_FOR_EXACT_BPT_OUT", "nodeType": "MemberAccess", "src": "18185:57:40", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$8541", "typeString": "enum BaseWeightedPool.JoinKind"}}, "src": "18177:65:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 1086, "nodeType": "Block", "src": "18353:60:40", "statements": [{"expression": {"arguments": [{"expression": {"id": 1082, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13960, "src": "18375:6:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$13960_$", "typeString": "type(library Errors)"}}, "id": 1083, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNHANDLED_JOIN_KIND", "nodeType": "MemberAccess", "referencedDeclaration": 13674, "src": "18375:26:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1081, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13563, "src": "18367:7:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$", "typeString": "function (uint256) pure"}}, "id": 1084, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18367:35:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1085, "nodeType": "ExpressionStatement", "src": "18367:35:40"}]}, "id": 1087, "nodeType": "IfStatement", "src": "18173:240:40", "trueBody": {"id": 1080, "nodeType": "Block", "src": "18244:103:40", "statements": [{"expression": {"id": 1078, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 1071, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1053, "src": "18259:12:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1072, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1056, "src": "18273:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1073, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "18258:25:40", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1075, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1048, "src": "18317:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 1076, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1050, "src": "18327:8:40", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 1074, "name": "_joinAllTokensInForExactBPTOut", "nodeType": "Identifier", "overloadedDeclarations": [1127], "referencedDeclaration": 1127, "src": "18286:30:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 1077, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18286:50:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "18258:78:40", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1079, "nodeType": "ExpressionStatement", "src": "18258:78:40"}]}}]}, "id": 1089, "implemented": true, "kind": "function", "modifiers": [], "name": "_doJoin", "nodeType": "FunctionDefinition", "parameters": {"id": 1051, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1048, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 1089, "src": "17855:25:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1046, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17855:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1047, "nodeType": "ArrayTypeName", "src": "17855:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1050, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 1089, "src": "17882:21:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1049, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "17882:5:40", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "17854:50:40"}, "returnParameters": {"id": 1057, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1053, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 1089, "src": "17928:20:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1052, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17928:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1056, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 1089, "src": "17950:26:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1054, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17950:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1055, "nodeType": "ArrayTypeName", "src": "17950:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "17927:50:40"}, "scope": 1742, "src": "17838:581:40", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [4242], "body": {"id": 1126, "nodeType": "Block", "src": "18610:343:40", "statements": [{"assignments": [1104], "declarations": [{"constant": false, "id": 1104, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 1126, "src": "18620:20:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1103, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18620:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1108, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1105, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1094, "src": "18643:8:40", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 1106, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "allTokensInForExactBptOut", "nodeType": "MemberAccess", "referencedDeclaration": 2276, "src": "18643:34:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (uint256)"}}, "id": 1107, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18643:36:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "18620:59:40"}, {"assignments": [1113], "declarations": [{"constant": false, "id": 1113, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 1126, "src": "18790:26:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1111, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18790:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1112, "nodeType": "ArrayTypeName", "src": "18790:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 1121, "initialValue": {"arguments": [{"id": 1116, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1092, "src": "18865:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 1117, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1104, "src": "18875:12:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 1118, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12969, "src": "18889:11:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1119, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18889:13:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1114, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7027, "src": "18819:12:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$7027_$", "typeString": "type(library GyroPoolMath)"}}, "id": 1115, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcAllTokensInGivenExactBptOut", "nodeType": "MemberAccess", "referencedDeclaration": 6326, "src": "18819:45:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256[] memory)"}}, "id": 1120, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18819:84:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "18790:113:40"}, {"expression": {"components": [{"id": 1122, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1104, "src": "18922:12:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1123, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1113, "src": "18936:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1124, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "18921:25:40", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "functionReturnParameters": 1102, "id": 1125, "nodeType": "Return", "src": "18914:32:40"}]}, "id": 1127, "implemented": true, "kind": "function", "modifiers": [], "name": "_joinAllTokensInForExactBPTOut", "nodeType": "FunctionDefinition", "overrides": {"id": 1096, "nodeType": "OverrideSpecifier", "overrides": [], "src": "18553:8:40"}, "parameters": {"id": 1095, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1092, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 1127, "src": "18465:25:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1090, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18465:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1091, "nodeType": "ArrayTypeName", "src": "18465:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1094, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 1127, "src": "18492:21:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1093, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "18492:5:40", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "18464:50:40"}, "returnParameters": {"id": 1102, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1098, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1127, "src": "18579:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1097, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18579:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1101, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1127, "src": "18588:16:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1099, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18588:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1100, "nodeType": "ArrayTypeName", "src": "18588:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "18578:27:40"}, "scope": 1742, "src": "18425:528:40", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [4414], "body": {"id": 1243, "nodeType": "Block", "src": "20433:2255:40", "statements": [{"assignments": [1160], "declarations": [{"constant": false, "id": 1160, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 1243, "src": "20598:28:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 1158, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20598:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1159, "length": {"hexValue": "32", "id": 1157, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20606:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "20598:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 1163, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 1161, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [176, 189], "referencedDeclaration": 176, "src": "20629:15:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function () view returns (uint256[2] memory)"}}, "id": 1162, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20629:17:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "20598:48:40"}, {"condition": {"arguments": [], "expression": {"argumentTypes": [], "id": 1164, "name": "_isNotPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13520, "src": "20661:12:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$", "typeString": "function () view returns (bool)"}}, "id": 1165, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20661:14:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 1232, "nodeType": "Block", "src": "21914:595:40", "statements": [{"expression": {"id": 1222, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 1215, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1147, "src": "22099:11:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1216, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1150, "src": "22112:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1217, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "22098:25:40", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1219, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1137, "src": "22134:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 1220, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1143, "src": "22144:8:40", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 1218, "name": "_doExit", "nodeType": "Identifier", "overloadedDeclarations": [1288, 4483], "referencedDeclaration": 1288, "src": "22126:7:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 1221, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22126:27:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "22098:55:40", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1223, "nodeType": "ExpressionStatement", "src": "22098:55:40"}, {"expression": {"id": 1230, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1224, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3044, "src": "22464:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"arguments": [{"id": 1227, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "22486:7:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 1226, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22486:7:40", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}], "id": 1225, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "22481:4:40", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 1228, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22481:13:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint256", "typeString": "type(uint256)"}}, "id": 1229, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "22481:17:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "22464:34:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1231, "nodeType": "ExpressionStatement", "src": "22464:34:40"}]}, "id": 1233, "nodeType": "IfStatement", "src": "20657:1852:40", "trueBody": {"id": 1214, "nodeType": "Block", "src": "20677:1231:40", "statements": [{"assignments": [1167], "declarations": [{"constant": false, "id": 1167, "mutability": "mutable", "name": "invariantBeforeAction", "nodeType": "VariableDeclaration", "scope": 1214, "src": "20997:29:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1166, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20997:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1178, "initialValue": {"arguments": [{"id": 1170, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1137, "src": "21062:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"baseExpression": {"id": 1171, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1160, "src": "21072:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1173, "indexExpression": {"hexValue": "30", "id": 1172, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "21083:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "21072:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1174, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1160, "src": "21087:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1176, "indexExpression": {"hexValue": "31", "id": 1175, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "21098:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "21087:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1168, "name": "Gyro2CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2803, "src": "21029:12:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPMath_$2803_$", "typeString": "type(library Gyro2CLPMath)"}}, "id": 1169, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 2398, "src": "21029:32:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256)"}}, "id": 1177, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21029:72:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "20997:104:40"}, {"assignments": [1184], "declarations": [{"constant": false, "id": 1184, "mutability": "mutable", "name": "virtualParam", "nodeType": "VariableDeclaration", "scope": 1214, "src": "21115:30:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 1182, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21115:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1183, "length": {"hexValue": "32", "id": 1181, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "21123:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "21115:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 1189, "initialValue": {"arguments": [{"id": 1186, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1160, "src": "21170:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, {"id": 1187, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1167, "src": "21182:21:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1185, "name": "_getVirtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 347, "src": "21148:21:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function (uint256[2] memory,uint256) view returns (uint256[2] memory)"}}, "id": 1188, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21148:56:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "21115:89:40"}, {"expression": {"arguments": [{"id": 1191, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1167, "src": "21235:21:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1190, "name": "_distributeFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1353, "src": "21219:15:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 1192, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21219:38:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1193, "nodeType": "ExpressionStatement", "src": "21219:38:40"}, {"expression": {"id": 1201, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 1194, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1147, "src": "21273:11:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1195, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1150, "src": "21286:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1196, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "21272:25:40", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1198, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1137, "src": "21308:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 1199, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1143, "src": "21318:8:40", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 1197, "name": "_doExit", "nodeType": "Identifier", "overloadedDeclarations": [1288, 4483], "referencedDeclaration": 1288, "src": "21300:7:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 1200, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21300:27:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "21272:55:40", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1202, "nodeType": "ExpressionStatement", "src": "21272:55:40"}, {"expression": {"id": 1212, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1203, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3044, "src": "21785:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1206, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1167, "src": "21840:21:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1207, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1147, "src": "21863:11:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 1208, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12969, "src": "21876:11:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1209, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21876:13:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "66616c7365", "id": 1210, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "21891:5:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "expression": {"id": 1204, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7027, "src": "21802:12:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$7027_$", "typeString": "type(library GyroPoolMath)"}}, "id": 1205, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "liquidityInvariantUpdate", "nodeType": "MemberAccess", "referencedDeclaration": 6946, "src": "21802:37:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,bool) pure returns (uint256)"}}, "id": 1211, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21802:95:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "21785:112:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1213, "nodeType": "ExpressionStatement", "src": "21785:112:40"}]}}, {"expression": {"components": [{"id": 1234, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1147, "src": "22639:11:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1235, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1150, "src": "22652:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"arguments": [{"hexValue": "32", "id": 1239, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "22678:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 1238, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "22664:13:40", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 1236, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22668:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1237, "nodeType": "ArrayTypeName", "src": "22668:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 1240, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22664:16:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1241, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "22638:43:40", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory,uint256[] memory)"}}, "functionReturnParameters": 1154, "id": 1242, "nodeType": "Return", "src": "22631:50:40"}]}, "documentation": {"id": 1128, "nodeType": "StructuredDocumentation", "src": "18959:1054:40", "text": " @dev Called whenever the Pool is exited.\n Returns the amount of BPT to burn, the token amounts for each Pool token that the Pool will grant in return, and\n the number of tokens to pay in protocol swap fees.\n Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n BPT will be burnt from `sender`.\n The Pool will grant tokens to `recipient`. These amounts are considered upscaled and will be downscaled\n (rounding down) before being returned to the Vault.\n Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onExitPool`). These\n amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way"}, "id": 1244, "implemented": true, "kind": "function", "modifiers": [], "name": "_onExitPool", "nodeType": "FunctionDefinition", "overrides": {"id": 1145, "nodeType": "OverrideSpecifier", "overrides": [], "src": "20267:8:40"}, "parameters": {"id": 1144, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1130, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1244, "src": "20048:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 1129, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "20048:7:40", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 1132, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1244, "src": "20065:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1131, "name": "address", "nodeType": "ElementaryTypeName", "src": "20065:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1134, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1244, "src": "20082:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1133, "name": "address", "nodeType": "ElementaryTypeName", "src": "20082:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1137, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 1244, "src": "20099:25:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1135, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20099:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1136, "nodeType": "ArrayTypeName", "src": "20099:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1139, "mutability": "mutable", "name": "lastChangeBlock", "nodeType": "VariableDeclaration", "scope": 1244, "src": "20134:23:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1138, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20134:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1141, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1244, "src": "20167:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1140, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20167:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1143, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 1244, "src": "20214:21:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1142, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "20214:5:40", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "20038:203:40"}, "returnParameters": {"id": 1154, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1147, "mutability": "mutable", "name": "bptAmountIn", "nodeType": "VariableDeclaration", "scope": 1244, "src": "20306:19:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1146, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20306:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1150, "mutability": "mutable", "name": "amountsOut", "nodeType": "VariableDeclaration", "scope": 1244, "src": "20339:27:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1148, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20339:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1149, "nodeType": "ArrayTypeName", "src": "20339:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1153, "mutability": "mutable", "name": "dueProtocolFeeAmounts", "nodeType": "VariableDeclaration", "scope": 1244, "src": "20380:38:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1151, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20380:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1152, "nodeType": "ArrayTypeName", "src": "20380:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "20292:136:40"}, "scope": 1742, "src": "20018:2670:40", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 1287, "nodeType": "Block", "src": "22834:452:40", "statements": [{"assignments": [1260], "declarations": [{"constant": false, "id": 1260, "mutability": "mutable", "name": "kind", "nodeType": "VariableDeclaration", "scope": 1287, "src": "22844:30:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$8546", "typeString": "enum BaseWeightedPool.ExitKind"}, "typeName": {"id": 1259, "name": "BaseWeightedPool.ExitKind", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 8546, "src": "22844:25:40", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$8546", "typeString": "enum BaseWeightedPool.ExitKind"}}, "visibility": "internal"}], "id": 1264, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1261, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1249, "src": "22877:8:40", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 1262, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "exitKind", "nodeType": "MemberAccess", "referencedDeclaration": 2178, "src": "22877:17:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_enum$_ExitKind_$8546_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (enum BaseWeightedPool.ExitKind)"}}, "id": 1263, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22877:19:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$8546", "typeString": "enum BaseWeightedPool.ExitKind"}}, "nodeType": "VariableDeclarationStatement", "src": "22844:52:40"}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_ExitKind_$8546", "typeString": "enum BaseWeightedPool.ExitKind"}, "id": 1269, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1265, "name": "kind", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1260, "src": "23051:4:40", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$8546", "typeString": "enum BaseWeightedPool.ExitKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 1266, "name": "BaseWeightedPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9742, "src": "23059:16:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BaseWeightedPool_$9742_$", "typeString": "type(contract BaseWeightedPool)"}}, "id": 1267, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ExitKind", "nodeType": "MemberAccess", "referencedDeclaration": 8546, "src": "23059:25:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_ExitKind_$8546_$", "typeString": "type(enum BaseWeightedPool.ExitKind)"}}, "id": 1268, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "EXACT_BPT_IN_FOR_TOKENS_OUT", "nodeType": "MemberAccess", "src": "23059:53:40", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$8546", "typeString": "enum BaseWeightedPool.ExitKind"}}, "src": "23051:61:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 1285, "nodeType": "Block", "src": "23220:60:40", "statements": [{"expression": {"arguments": [{"expression": {"id": 1281, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13960, "src": "23242:6:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$13960_$", "typeString": "type(library Errors)"}}, "id": 1282, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNHANDLED_EXIT_KIND", "nodeType": "MemberAccess", "referencedDeclaration": 13752, "src": "23242:26:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1280, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13563, "src": "23234:7:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$", "typeString": "function (uint256) pure"}}, "id": 1283, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23234:35:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1284, "nodeType": "ExpressionStatement", "src": "23234:35:40"}]}, "id": 1286, "nodeType": "IfStatement", "src": "23047:233:40", "trueBody": {"id": 1279, "nodeType": "Block", "src": "23114:100:40", "statements": [{"expression": {"id": 1277, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 1270, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1252, "src": "23129:11:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1271, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1255, "src": "23142:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1272, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "23128:25:40", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1274, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1247, "src": "23184:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 1275, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1249, "src": "23194:8:40", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 1273, "name": "_exitExactBPTInForTokensOut", "nodeType": "Identifier", "overloadedDeclarations": [1326], "referencedDeclaration": 1326, "src": "23156:27:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 1276, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23156:47:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "23128:75:40", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1278, "nodeType": "ExpressionStatement", "src": "23128:75:40"}]}}]}, "id": 1288, "implemented": true, "kind": "function", "modifiers": [], "name": "_doExit", "nodeType": "FunctionDefinition", "parameters": {"id": 1250, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1247, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 1288, "src": "22711:25:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1245, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22711:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1246, "nodeType": "ArrayTypeName", "src": "22711:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1249, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 1288, "src": "22738:21:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1248, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "22738:5:40", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "22710:50:40"}, "returnParameters": {"id": 1256, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1252, "mutability": "mutable", "name": "bptAmountIn", "nodeType": "VariableDeclaration", "scope": 1288, "src": "22784:19:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1251, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22784:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1255, "mutability": "mutable", "name": "amountsOut", "nodeType": "VariableDeclaration", "scope": 1288, "src": "22805:27:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1253, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22805:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1254, "nodeType": "ArrayTypeName", "src": "22805:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "22783:50:40"}, "scope": 1742, "src": "22694:592:40", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [4590], "body": {"id": 1325, "nodeType": "Block", "src": "23474:746:40", "statements": [{"assignments": [1303], "declarations": [{"constant": false, "id": 1303, "mutability": "mutable", "name": "bptAmountIn", "nodeType": "VariableDeclaration", "scope": 1325, "src": "23895:19:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1302, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23895:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1307, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1304, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1293, "src": "23917:8:40", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 1305, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "exactBptInForTokensOut", "nodeType": "MemberAccess", "referencedDeclaration": 2323, "src": "23917:31:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (uint256)"}}, "id": 1306, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23917:33:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "23895:55:40"}, {"assignments": [1312], "declarations": [{"constant": false, "id": 1312, "mutability": "mutable", "name": "amountsOut", "nodeType": "VariableDeclaration", "scope": 1325, "src": "24061:27:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1310, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24061:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1311, "nodeType": "ArrayTypeName", "src": "24061:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 1320, "initialValue": {"arguments": [{"id": 1315, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1291, "src": "24134:8:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 1316, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1303, "src": "24144:11:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 1317, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12969, "src": "24157:11:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1318, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24157:13:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1313, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7027, "src": "24091:12:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$7027_$", "typeString": "type(library GyroPoolMath)"}}, "id": 1314, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcTokensOutGivenExactBptIn", "nodeType": "MemberAccess", "referencedDeclaration": 6378, "src": "24091:42:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256[] memory)"}}, "id": 1319, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24091:80:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "24061:110:40"}, {"expression": {"components": [{"id": 1321, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1303, "src": "24189:11:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1322, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1312, "src": "24202:10:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1323, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "24188:25:40", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "functionReturnParameters": 1301, "id": 1324, "nodeType": "Return", "src": "24181:32:40"}]}, "id": 1326, "implemented": true, "kind": "function", "modifiers": [], "name": "_exitExactBPTInForTokensOut", "nodeType": "FunctionDefinition", "overrides": {"id": 1295, "nodeType": "OverrideSpecifier", "overrides": [], "src": "23417:8:40"}, "parameters": {"id": 1294, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1291, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 1326, "src": "23329:25:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1289, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23329:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1290, "nodeType": "ArrayTypeName", "src": "23329:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1293, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 1326, "src": "23356:21:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1292, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "23356:5:40", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "23328:50:40"}, "returnParameters": {"id": 1301, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1297, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1326, "src": "23443:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1296, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23443:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1300, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1326, "src": "23452:16:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1298, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23452:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1299, "nodeType": "ArrayTypeName", "src": "23452:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "23442:27:40"}, "scope": 1742, "src": "23292:928:40", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 1352, "nodeType": "Block", "src": "24566:518:40", "statements": [{"assignments": [1333, 1335, 1337, 1339], "declarations": [{"constant": false, "id": 1333, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 1352, "src": "24794:16:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1332, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24794:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1335, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 1352, "src": "24812:20:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1334, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24812:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1337, "mutability": "mutable", "name": "gyroTreasury", "nodeType": "VariableDeclaration", "scope": 1352, "src": "24834:20:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1336, "name": "address", "nodeType": "ElementaryTypeName", "src": "24834:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1339, "mutability": "mutable", "name": "balTreasury", "nodeType": "VariableDeclaration", "scope": 1352, "src": "24856:19:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1338, "name": "address", "nodeType": "ElementaryTypeName", "src": "24856:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 1344, "initialValue": {"arguments": [{"id": 1341, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3044, "src": "24918:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1342, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1329, "src": "24946:21:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1340, "name": "_getDueProtocolFeeAmounts", "nodeType": "Identifier", "overloadedDeclarations": [1378, 1437], "referencedDeclaration": 1437, "src": "24879:25:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "function (uint256,uint256) view returns (uint256,uint256,address,address)"}}, "id": 1343, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24879:98:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "nodeType": "VariableDeclarationStatement", "src": "24793:184:40"}, {"expression": {"arguments": [{"id": 1346, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1333, "src": "25027:8:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1347, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1335, "src": "25037:12:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1348, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1337, "src": "25051:12:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1349, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1339, "src": "25065:11:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 1345, "name": "_payFeesBpt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1469, "src": "25015:11:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$", "typeString": "function (uint256,uint256,address,address)"}}, "id": 1350, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25015:62:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1351, "nodeType": "ExpressionStatement", "src": "25015:62:40"}]}, "documentation": {"id": 1327, "nodeType": "StructuredDocumentation", "src": "24242:253:40", "text": " @dev Computes and distributes fees between the Balancer and the Gyro treasury\n The fees are computed and distributed in BPT rather than using the\n Balancer regular distribution mechanism which would pay these in underlying"}, "id": 1353, "implemented": true, "kind": "function", "modifiers": [], "name": "_distributeFees", "nodeType": "FunctionDefinition", "parameters": {"id": 1330, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1329, "mutability": "mutable", "name": "invariantBeforeAction", "nodeType": "VariableDeclaration", "scope": 1353, "src": "24526:29:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1328, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24526:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "24525:31:40"}, "returnParameters": {"id": 1331, "nodeType": "ParameterList", "parameters": [], "src": "24566:0:40"}, "scope": 1742, "src": "24501:583:40", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [4822], "body": {"id": 1377, "nodeType": "Block", "src": "25492:42:40", "statements": [{"expression": {"arguments": [{"hexValue": "4e6f7420696d706c656d656e746564", "id": 1374, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "25509:17:40", "typeDescriptions": {"typeIdentifier": "t_stringliteral_9f5474d7a5849b3f79e8aee7ea2c60bcd36a60a08b4fa41f97e2fccf1c4df98b", "typeString": "literal_string \"Not implemented\""}, "value": "Not implemented"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_9f5474d7a5849b3f79e8aee7ea2c60bcd36a60a08b4fa41f97e2fccf1c4df98b", "typeString": "literal_string \"Not implemented\""}], "id": 1373, "name": "revert", "nodeType": "Identifier", "overloadedDeclarations": [-19, -19], "referencedDeclaration": -19, "src": "25502:6:40", "typeDescriptions": {"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory) pure"}}, "id": 1375, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25502:25:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1376, "nodeType": "ExpressionStatement", "src": "25502:25:40"}]}, "documentation": {"id": 1354, "nodeType": "StructuredDocumentation", "src": "25090:96:40", "text": " @dev this function overrides inherited function to make sure it is never used"}, "id": 1378, "implemented": true, "kind": "function", "modifiers": [], "name": "_getDueProtocolFeeAmounts", "nodeType": "FunctionDefinition", "overrides": {"id": 1368, "nodeType": "OverrideSpecifier", "overrides": [], "src": "25456:8:40"}, "parameters": {"id": 1367, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1357, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1378, "src": "25235:16:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1355, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25235:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1356, "nodeType": "ArrayTypeName", "src": "25235:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1360, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1378, "src": "25274:16:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1358, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25274:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1359, "nodeType": "ArrayTypeName", "src": "25274:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1362, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1378, "src": "25322:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1361, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25322:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1364, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1378, "src": "25361:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1363, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25361:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1366, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1378, "src": "25399:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1365, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25399:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "25225:216:40"}, "returnParameters": {"id": 1372, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1371, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1378, "src": "25474:16:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1369, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25474:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1370, "nodeType": "ArrayTypeName", "src": "25474:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "25473:18:40"}, "scope": 1742, "src": "25191:343:40", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 1436, "nodeType": "Block", "src": "26076:681:40", "statements": [{"assignments": [1395, 1397, 1399, 1401], "declarations": [{"constant": false, "id": 1395, "mutability": "mutable", "name": "protocolSwapFeePerc", "nodeType": "VariableDeclaration", "scope": 1436, "src": "26087:27:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1394, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26087:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1397, "mutability": "mutable", "name": "protocolFeeGyroPortion", "nodeType": "VariableDeclaration", "scope": 1436, "src": "26116:30:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1396, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26116:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1399, "mutability": "mutable", "name": "gyroTreasury", "nodeType": "VariableDeclaration", "scope": 1436, "src": "26148:20:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1398, "name": "address", "nodeType": "ElementaryTypeName", "src": "26148:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1401, "mutability": "mutable", "name": "balTreasury", "nodeType": "VariableDeclaration", "scope": 1436, "src": "26170:19:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1400, "name": "address", "nodeType": "ElementaryTypeName", "src": "26170:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 1404, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 1402, "name": "_getFeesMetadata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1509, "src": "26193:16:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "function () view returns (uint256,uint256,address,address)"}}, "id": 1403, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26193:18:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "nodeType": "VariableDeclarationStatement", "src": "26086:125:40"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1407, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1405, "name": "protocolSwapFeePerc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1395, "src": "26307:19:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 1406, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "26330:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "26307:24:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1415, "nodeType": "IfStatement", "src": "26303:95:40", "trueBody": {"id": 1414, "nodeType": "Block", "src": "26333:65:40", "statements": [{"expression": {"components": [{"hexValue": "30", "id": 1408, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "26355:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"hexValue": "30", "id": 1409, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "26358:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"id": 1410, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1399, "src": "26361:12:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1411, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1401, "src": "26375:11:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 1412, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "26354:33:40", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_address_$_t_address_$", "typeString": "tuple(int_const 0,int_const 0,address,address)"}}, "functionReturnParameters": 1393, "id": 1413, "nodeType": "Return", "src": "26347:40:40"}]}}, {"assignments": [1417, 1419], "declarations": [{"constant": false, "id": 1417, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 1436, "src": "26442:16:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1416, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26442:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1419, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 1436, "src": "26460:20:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1418, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26460:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1429, "initialValue": {"arguments": [{"id": 1422, "name": "previousInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1381, "src": "26528:17:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1423, "name": "currentInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1383, "src": "26559:16:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 1424, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12969, "src": "26589:11:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1425, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26589:13:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1426, "name": "protocolSwapFeePerc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1395, "src": "26616:19:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1427, "name": "protocolFeeGyroPortion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1397, "src": "26649:22:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1420, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7027, "src": "26484:12:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$7027_$", "typeString": "type(library GyroPoolMath)"}}, "id": 1421, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcProtocolFees", "nodeType": "MemberAccess", "referencedDeclaration": 6462, "src": "26484:30:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,uint256,uint256) pure returns (uint256,uint256)"}}, "id": 1428, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26484:197:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "26441:240:40"}, {"expression": {"components": [{"id": 1430, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1417, "src": "26700:8:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1431, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1419, "src": "26710:12:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1432, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1399, "src": "26724:12:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1433, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1401, "src": "26738:11:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 1434, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "26699:51:40", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "functionReturnParameters": 1393, "id": 1435, "nodeType": "Return", "src": "26692:58:40"}]}, "documentation": {"id": 1379, "nodeType": "StructuredDocumentation", "src": "25540:298:40", "text": " @dev Calculates protocol fee amounts in BPT terms.\n protocolSwapFeePercentage is not used here b/c we take parameters from GyroConfig instead.\n Returns: BPT due to Gyro, BPT due to Balancer, receiving address for Gyro fees, receiving address for Balancer\n fees."}, "id": 1437, "implemented": true, "kind": "function", "modifiers": [], "name": "_getDueProtocolFeeAmounts", "nodeType": "FunctionDefinition", "parameters": {"id": 1384, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1381, "mutability": "mutable", "name": "previousInvariant", "nodeType": "VariableDeclaration", "scope": 1437, "src": "25878:25:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1380, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25878:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1383, "mutability": "mutable", "name": "currentInvariant", "nodeType": "VariableDeclaration", "scope": 1437, "src": "25905:24:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1382, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25905:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "25877:53:40"}, "returnParameters": {"id": 1393, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1386, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1437, "src": "25991:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1385, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25991:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1388, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1437, "src": "26012:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1387, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26012:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1390, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1437, "src": "26033:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1389, "name": "address", "nodeType": "ElementaryTypeName", "src": "26033:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1392, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1437, "src": "26054:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1391, "name": "address", "nodeType": "ElementaryTypeName", "src": "26054:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "25977:94:40"}, "scope": 1742, "src": "25843:914:40", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 1468, "nodeType": "Block", "src": "26914:283:40", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1450, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1448, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1439, "src": "26972:8:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 1449, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "26983:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "26972:12:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1457, "nodeType": "IfStatement", "src": "26968:82:40", "trueBody": {"id": 1456, "nodeType": "Block", "src": "26986:64:40", "statements": [{"expression": {"arguments": [{"id": 1452, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1443, "src": "27016:12:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1453, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1439, "src": "27030:8:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1451, "name": "_mintPoolTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10430, "src": "27000:15:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 1454, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27000:39:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1455, "nodeType": "ExpressionStatement", "src": "27000:39:40"}]}}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1460, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1458, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1441, "src": "27106:12:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 1459, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "27121:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "27106:16:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1467, "nodeType": "IfStatement", "src": "27102:89:40", "trueBody": {"id": 1466, "nodeType": "Block", "src": "27124:67:40", "statements": [{"expression": {"arguments": [{"id": 1462, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1445, "src": "27154:11:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1463, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1441, "src": "27167:12:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1461, "name": "_mintPoolTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10430, "src": "27138:15:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 1464, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27138:42:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1465, "nodeType": "ExpressionStatement", "src": "27138:42:40"}]}}]}, "id": 1469, "implemented": true, "kind": "function", "modifiers": [], "name": "_payFeesBpt", "nodeType": "FunctionDefinition", "parameters": {"id": 1446, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1439, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 1469, "src": "26793:16:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1438, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26793:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1441, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 1469, "src": "26819:20:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1440, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26819:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1443, "mutability": "mutable", "name": "gyroTreasury", "nodeType": "VariableDeclaration", "scope": 1469, "src": "26849:20:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1442, "name": "address", "nodeType": "ElementaryTypeName", "src": "26849:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1445, "mutability": "mutable", "name": "balTreasury", "nodeType": "VariableDeclaration", "scope": 1469, "src": "26879:19:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1444, "name": "address", "nodeType": "ElementaryTypeName", "src": "26879:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "26783:121:40"}, "returnParameters": {"id": 1447, "nodeType": "ParameterList", "parameters": [], "src": "26914:0:40"}, "scope": 1742, "src": "26763:434:40", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 1508, "nodeType": "Block", "src": "27376:326:40", "statements": [{"expression": {"components": [{"arguments": [{"arguments": [{"id": 1484, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "27448:4:40", "typeDescriptions": {"typeIdentifier": "t_contract$_Gyro2CLPPool_$1742", "typeString": "contract Gyro2CLPPool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_Gyro2CLPPool_$1742", "typeString": "contract Gyro2CLPPool"}], "id": 1483, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "27440:7:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 1482, "name": "address", "nodeType": "ElementaryTypeName", "src": "27440:7:40", "typeDescriptions": {}}}, "id": 1485, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27440:13:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1486, "name": "POOL_TYPE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 41, "src": "27455:9:40", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 1480, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 43, "src": "27407:10:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$5385", "typeString": "contract IGyroConfig"}}, "id": 1481, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getSwapFeePercForPool", "nodeType": "MemberAccess", "referencedDeclaration": 5409, "src": "27407:32:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IGyroConfig_$5385_$_t_address_$_t_bytes32_$returns$_t_uint256_$bound_to$_t_contract$_IGyroConfig_$5385_$", "typeString": "function (contract IGyroConfig,address,bytes32) view returns (uint256)"}}, "id": 1487, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27407:58:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"arguments": [{"id": 1492, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "27531:4:40", "typeDescriptions": {"typeIdentifier": "t_contract$_Gyro2CLPPool_$1742", "typeString": "contract Gyro2CLPPool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_Gyro2CLPPool_$1742", "typeString": "contract Gyro2CLPPool"}], "id": 1491, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "27523:7:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 1490, "name": "address", "nodeType": "ElementaryTypeName", "src": "27523:7:40", "typeDescriptions": {}}}, "id": 1493, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27523:13:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1494, "name": "POOL_TYPE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 41, "src": "27538:9:40", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 1488, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 43, "src": "27479:10:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$5385", "typeString": "contract IGyroConfig"}}, "id": 1489, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getProtocolFeeGyroPortionForPool", "nodeType": "MemberAccess", "referencedDeclaration": 5429, "src": "27479:43:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IGyroConfig_$5385_$_t_address_$_t_bytes32_$returns$_t_uint256_$bound_to$_t_contract$_IGyroConfig_$5385_$", "typeString": "function (contract IGyroConfig,address,bytes32) view returns (uint256)"}}, "id": 1495, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27479:69:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"expression": {"id": 1498, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5506, "src": "27584:14:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$5506_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 1499, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "GYRO_TREASURY_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 5502, "src": "27584:32:40", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 1496, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 43, "src": "27562:10:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$5385", "typeString": "contract IGyroConfig"}}, "id": 1497, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getAddress", "nodeType": "MemberAccess", "referencedDeclaration": 5360, "src": "27562:21:40", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$", "typeString": "function (bytes32) view external returns (address)"}}, "id": 1500, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27562:55:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"expression": {"id": 1503, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5506, "src": "27653:14:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$5506_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 1504, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "BAL_TREASURY_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 5505, "src": "27653:31:40", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 1501, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 43, "src": "27631:10:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$5385", "typeString": "contract IGyroConfig"}}, "id": 1502, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getAddress", "nodeType": "MemberAccess", "referencedDeclaration": 5360, "src": "27631:21:40", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$", "typeString": "function (bytes32) view external returns (address)"}}, "id": 1505, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27631:54:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 1506, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "27393:302:40", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "functionReturnParameters": 1479, "id": 1507, "nodeType": "Return", "src": "27386:309:40"}]}, "id": 1509, "implemented": true, "kind": "function", "modifiers": [], "name": "_getFeesMetadata", "nodeType": "FunctionDefinition", "parameters": {"id": 1470, "nodeType": "ParameterList", "parameters": [], "src": "27228:2:40"}, "returnParameters": {"id": 1479, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1472, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1509, "src": "27291:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1471, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27291:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1474, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1509, "src": "27312:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1473, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27312:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1476, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1509, "src": "27333:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1475, "name": "address", "nodeType": "ElementaryTypeName", "src": "27333:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1478, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1509, "src": "27354:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1477, "name": "address", "nodeType": "ElementaryTypeName", "src": "27354:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "27277:94:40"}, "scope": 1742, "src": "27203:499:40", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 1538, "nodeType": "Block", "src": "28319:216:40", "statements": [{"assignments": [1516], "declarations": [{"constant": false, "id": 1516, "mutability": "mutable", "name": "supply", "nodeType": "VariableDeclaration", "scope": 1538, "src": "28329:14:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1515, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28329:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1519, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 1517, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12969, "src": "28346:11:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1518, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28346:13:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "28329:30:40"}, {"assignments": [1521, 1523, null, null], "declarations": [{"constant": false, "id": 1521, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 1538, "src": "28370:16:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1520, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28370:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1523, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 1538, "src": "28388:20:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1522, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28388:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, null, null], "id": 1529, "initialValue": {"arguments": [{"id": 1525, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3044, "src": "28442:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 1526, "name": "getInvariant", "nodeType": "Identifier", "overloadedDeclarations": [410], "referencedDeclaration": 410, "src": "28458:12:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1527, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28458:14:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1524, "name": "_getDueProtocolFeeAmounts", "nodeType": "Identifier", "overloadedDeclarations": [1378, 1437], "referencedDeclaration": 1437, "src": "28416:25:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "function (uint256,uint256) view returns (uint256,uint256,address,address)"}}, "id": 1528, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28416:57:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "nodeType": "VariableDeclarationStatement", "src": "28369:104:40"}, {"expression": {"arguments": [{"id": 1535, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1523, "src": "28515:12:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 1532, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1521, "src": "28501:8:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1530, "name": "supply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1516, "src": "28490:6:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1531, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 5627, "src": "28490:10:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1533, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28490:20:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1534, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 5627, "src": "28490:24:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1536, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28490:38:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 1514, "id": 1537, "nodeType": "Return", "src": "28483:45:40"}]}, "documentation": {"id": 1510, "nodeType": "StructuredDocumentation", "src": "27708:547:40", "text": "@notice Effective BPT supply.\n  This is the same as `totalSupply()` but also accounts for the fact that the pool owes\n  protocol fees to the pool in the form of unminted LP shares created on the next join/exit,\n  diluting LPers. Thus, this is the totalSupply() that the next join/exit operation will see.\n  Equivalent to the respective function in, e.g., WeightedPool, see:\n  https://github.com/balancer/balancer-v2-monorepo/blob/master/pkg/pool-weighted/contracts/WeightedPool.sol#L325-L344"}, "functionSelector": "876f303b", "id": 1539, "implemented": true, "kind": "function", "modifiers": [], "name": "getActualSupply", "nodeType": "FunctionDefinition", "parameters": {"id": 1511, "nodeType": "ParameterList", "parameters": [], "src": "28284:2:40"}, "returnParameters": {"id": 1514, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1513, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1539, "src": "28310:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1512, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28310:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "28309:9:40"}, "scope": 1742, "src": "28260:275:40", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 1579, "nodeType": "Block", "src": "28711:319:40", "statements": [{"assignments": [1546], "declarations": [{"constant": false, "id": 1546, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 1579, "src": "28721:17:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1545, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28721:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1549, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 1547, "name": "getInvariant", "nodeType": "Identifier", "overloadedDeclarations": [410], "referencedDeclaration": 410, "src": "28741:12:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1548, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28741:14:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "28721:34:40"}, {"assignments": [1551], "declarations": [{"constant": false, "id": 1551, "mutability": "mutable", "name": "supply", "nodeType": "VariableDeclaration", "scope": 1579, "src": "28765:14:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1550, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28765:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1554, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 1552, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12969, "src": "28782:11:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1553, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28782:13:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "28765:30:40"}, {"assignments": [1556, 1558, null, null], "declarations": [{"constant": false, "id": 1556, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 1579, "src": "28806:16:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1555, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28806:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1558, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 1579, "src": "28824:20:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1557, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28824:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, null, null], "id": 1563, "initialValue": {"arguments": [{"id": 1560, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3044, "src": "28878:14:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1561, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1546, "src": "28894:9:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1559, "name": "_getDueProtocolFeeAmounts", "nodeType": "Identifier", "overloadedDeclarations": [1378, 1437], "referencedDeclaration": 1437, "src": "28852:25:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "function (uint256,uint256) view returns (uint256,uint256,address,address)"}}, "id": 1562, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28852:52:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "nodeType": "VariableDeclarationStatement", "src": "28805:99:40"}, {"assignments": [1565], "declarations": [{"constant": false, "id": 1565, "mutability": "mutable", "name": "actualSupply", "nodeType": "VariableDeclaration", "scope": 1579, "src": "28914:20:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1564, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28914:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1573, "initialValue": {"arguments": [{"id": 1571, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1558, "src": "28962:12:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 1568, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1556, "src": "28948:8:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1566, "name": "supply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1551, "src": "28937:6:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1567, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 5627, "src": "28937:10:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1569, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28937:20:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1570, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 5627, "src": "28937:24:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1572, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28937:38:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "28914:61:40"}, {"expression": {"arguments": [{"id": 1576, "name": "actualSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1565, "src": "29010:12:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1574, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1546, "src": "28992:9:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1575, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "divDown", "nodeType": "MemberAccess", "referencedDeclaration": 5853, "src": "28992:17:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1577, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28992:31:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 1544, "id": 1578, "nodeType": "Return", "src": "28985:38:40"}]}, "documentation": {"id": 1540, "nodeType": "StructuredDocumentation", "src": "28541:94:40", "text": "@notice Equivalent to but more efficient than `getInvariant().divDown(getActualSupply())`."}, "functionSelector": "623a2e75", "id": 1580, "implemented": true, "kind": "function", "modifiers": [], "name": "getInvariantDivActualSupply", "nodeType": "FunctionDefinition", "parameters": {"id": 1541, "nodeType": "ParameterList", "parameters": [], "src": "28676:2:40"}, "returnParameters": {"id": 1544, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1543, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1580, "src": "28702:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1542, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28702:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "28701:9:40"}, "scope": 1742, "src": "28640:390:40", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"baseFunctions": [5316], "body": {"id": 1590, "nodeType": "Block", "src": "29092:35:40", "statements": [{"expression": {"arguments": [{"id": 1587, "name": "paused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1582, "src": "29113:6:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 1586, "name": "_setPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13492, "src": "29102:10:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$", "typeString": "function (bool)"}}, "id": 1588, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29102:18:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1589, "nodeType": "ExpressionStatement", "src": "29102:18:40"}]}, "id": 1591, "implemented": true, "kind": "function", "modifiers": [], "name": "_setPausedState", "nodeType": "FunctionDefinition", "overrides": {"id": 1584, "nodeType": "OverrideSpecifier", "overrides": [], "src": "29083:8:40"}, "parameters": {"id": 1583, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1582, "mutability": "mutable", "name": "paused", "nodeType": "VariableDeclaration", "scope": 1591, "src": "29061:11:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1581, "name": "bool", "nodeType": "ElementaryTypeName", "src": "29061:4:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "29060:13:40"}, "returnParameters": {"id": 1585, "nodeType": "ParameterList", "parameters": [], "src": "29092:0:40"}, "scope": 1742, "src": "29036:91:40", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [4936], "body": {"id": 1646, "nodeType": "Block", "src": "29346:439:40", "statements": [{"assignments": [1600], "declarations": [{"constant": false, "id": 1600, "mutability": "mutable", "name": "rateProvider", "nodeType": "VariableDeclaration", "scope": 1646, "src": "29356:26:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$1927", "typeString": "contract IRateProvider"}, "typeName": {"id": 1599, "name": "IRateProvider", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 1927, "src": "29356:13:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$1927", "typeString": "contract IRateProvider"}}, "visibility": "internal"}], "id": 1601, "nodeType": "VariableDeclarationStatement", "src": "29356:26:40"}, {"assignments": [1603], "declarations": [{"constant": false, "id": 1603, "mutability": "mutable", "name": "scalingFactor", "nodeType": "VariableDeclaration", "scope": 1646, "src": "29392:21:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1602, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "29392:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1604, "nodeType": "VariableDeclarationStatement", "src": "29392:21:40"}, {"condition": {"id": 1605, "name": "token0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1593, "src": "29427:6:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 1623, "nodeType": "Block", "src": "29539:98:40", "statements": [{"expression": {"id": 1617, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1615, "name": "rateProvider", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1600, "src": "29553:12:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$1927", "typeString": "contract IRateProvider"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 1616, "name": "rateProvider1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 48, "src": "29568:13:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$1927", "typeString": "contract IRateProvider"}}, "src": "29553:28:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$1927", "typeString": "contract IRateProvider"}}, "id": 1618, "nodeType": "ExpressionStatement", "src": "29553:28:40"}, {"expression": {"id": 1621, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1619, "name": "scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1603, "src": "29595:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 1620, "name": "_scalingFactor1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3063, "src": "29611:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "29595:31:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1622, "nodeType": "ExpressionStatement", "src": "29595:31:40"}]}, "id": 1624, "nodeType": "IfStatement", "src": "29423:214:40", "trueBody": {"id": 1614, "nodeType": "Block", "src": "29435:98:40", "statements": [{"expression": {"id": 1608, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1606, "name": "rateProvider", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1600, "src": "29449:12:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$1927", "typeString": "contract IRateProvider"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 1607, "name": "rateProvider0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 46, "src": "29464:13:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$1927", "typeString": "contract IRateProvider"}}, "src": "29449:28:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$1927", "typeString": "contract IRateProvider"}}, "id": 1609, "nodeType": "ExpressionStatement", "src": "29449:28:40"}, {"expression": {"id": 1612, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1610, "name": "scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1603, "src": "29491:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 1611, "name": "_scalingFactor0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3061, "src": "29507:15:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "29491:31:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1613, "nodeType": "ExpressionStatement", "src": "29491:31:40"}]}}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 1633, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 1627, "name": "rateProvider", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1600, "src": "29658:12:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$1927", "typeString": "contract IRateProvider"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IRateProvider_$1927", "typeString": "contract IRateProvider"}], "id": 1626, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "29650:7:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 1625, "name": "address", "nodeType": "ElementaryTypeName", "src": "29650:7:40", "typeDescriptions": {}}}, "id": 1628, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29650:21:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 1631, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "29683:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 1630, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "29675:7:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 1629, "name": "address", "nodeType": "ElementaryTypeName", "src": "29675:7:40", "typeDescriptions": {}}}, "id": 1632, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29675:10:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "29650:35:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1643, "nodeType": "IfStatement", "src": "29646:102:40", "trueBody": {"expression": {"id": 1641, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1634, "name": "scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1603, "src": "29687:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1637, "name": "rateProvider", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1600, "src": "29725:12:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$1927", "typeString": "contract IRateProvider"}}, "id": 1638, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getRate", "nodeType": "MemberAccess", "referencedDeclaration": 1926, "src": "29725:20:40", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 1639, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29725:22:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1635, "name": "scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1603, "src": "29703:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1636, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mulDown", "nodeType": "MemberAccess", "referencedDeclaration": 5697, "src": "29703:21:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1640, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29703:45:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "29687:61:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1642, "nodeType": "ExpressionStatement", "src": "29687:61:40"}}, {"expression": {"id": 1644, "name": "scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1603, "src": "29765:13:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 1598, "id": 1645, "nodeType": "Return", "src": "29758:20:40"}]}, "id": 1647, "implemented": true, "kind": "function", "modifiers": [], "name": "_scalingFactor", "nodeType": "FunctionDefinition", "overrides": {"id": 1595, "nodeType": "OverrideSpecifier", "overrides": [], "src": "29319:8:40"}, "parameters": {"id": 1594, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1593, "mutability": "mutable", "name": "token0", "nodeType": "VariableDeclaration", "scope": 1647, "src": "29292:11:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1592, "name": "bool", "nodeType": "ElementaryTypeName", "src": "29292:4:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "29291:13:40"}, "returnParameters": {"id": 1598, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1597, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1647, "src": "29337:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1596, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "29337:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "29336:9:40"}, "scope": 1742, "src": "29268:517:40", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [4668], "body": {"id": 1695, "nodeType": "Block", "src": "29873:245:40", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 1663, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 1657, "name": "rateProvider0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 46, "src": "29895:13:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$1927", "typeString": "contract IRateProvider"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IRateProvider_$1927", "typeString": "contract IRateProvider"}], "id": 1656, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "29887:7:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 1655, "name": "address", "nodeType": "ElementaryTypeName", "src": "29887:7:40", "typeDescriptions": {}}}, "id": 1658, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29887:22:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 1661, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "29921:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 1660, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "29913:7:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 1659, "name": "address", "nodeType": "ElementaryTypeName", "src": "29913:7:40", "typeDescriptions": {}}}, "id": 1662, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29913:10:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "29887:36:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1673, "nodeType": "IfStatement", "src": "29883:96:40", "trueBody": {"expression": {"id": 1671, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1664, "name": "spotPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1649, "src": "29925:9:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1667, "name": "rateProvider0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 46, "src": "29955:13:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$1927", "typeString": "contract IRateProvider"}}, "id": 1668, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getRate", "nodeType": "MemberAccess", "referencedDeclaration": 1926, "src": "29955:21:40", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 1669, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29955:23:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1665, "name": "spotPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1649, "src": "29937:9:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1666, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mulDown", "nodeType": "MemberAccess", "referencedDeclaration": 5697, "src": "29937:17:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1670, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29937:42:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "29925:54:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1672, "nodeType": "ExpressionStatement", "src": "29925:54:40"}}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 1682, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 1676, "name": "rateProvider1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 48, "src": "30001:13:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$1927", "typeString": "contract IRateProvider"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IRateProvider_$1927", "typeString": "contract IRateProvider"}], "id": 1675, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "29993:7:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 1674, "name": "address", "nodeType": "ElementaryTypeName", "src": "29993:7:40", "typeDescriptions": {}}}, "id": 1677, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29993:22:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 1680, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "30027:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 1679, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "30019:7:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 1678, "name": "address", "nodeType": "ElementaryTypeName", "src": "30019:7:40", "typeDescriptions": {}}}, "id": 1681, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30019:10:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "29993:36:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1692, "nodeType": "IfStatement", "src": "29989:96:40", "trueBody": {"expression": {"id": 1690, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1683, "name": "spotPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1649, "src": "30031:9:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1686, "name": "rateProvider1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 48, "src": "30061:13:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$1927", "typeString": "contract IRateProvider"}}, "id": 1687, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getRate", "nodeType": "MemberAccess", "referencedDeclaration": 1926, "src": "30061:21:40", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 1688, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30061:23:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1684, "name": "spotPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1649, "src": "30043:9:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1685, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "divDown", "nodeType": "MemberAccess", "referencedDeclaration": 5853, "src": "30043:17:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1689, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30043:42:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "30031:54:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1691, "nodeType": "ExpressionStatement", "src": "30031:54:40"}}, {"expression": {"id": 1693, "name": "spotPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1649, "src": "30102:9:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 1654, "id": 1694, "nodeType": "Return", "src": "30095:16:40"}]}, "id": 1696, "implemented": true, "kind": "function", "modifiers": [], "name": "_adjustPrice", "nodeType": "FunctionDefinition", "overrides": {"id": 1651, "nodeType": "OverrideSpecifier", "overrides": [], "src": "29846:8:40"}, "parameters": {"id": 1650, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1649, "mutability": "mutable", "name": "spotPrice", "nodeType": "VariableDeclaration", "scope": 1696, "src": "29813:17:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1648, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "29813:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "29812:19:40"}, "returnParameters": {"id": 1654, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1653, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1696, "src": "29864:7:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1652, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "29864:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "29863:9:40"}, "scope": 1742, "src": "29791:327:40", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 1740, "nodeType": "Block", "src": "30480:209:40", "statements": [{"expression": {"id": 1720, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1704, "name": "rate0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1700, "src": "30490:5:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 1713, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 1707, "name": "rateProvider0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 46, "src": "30506:13:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$1927", "typeString": "contract IRateProvider"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IRateProvider_$1927", "typeString": "contract IRateProvider"}], "id": 1706, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "30498:7:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 1705, "name": "address", "nodeType": "ElementaryTypeName", "src": "30498:7:40", "typeDescriptions": {}}}, "id": 1708, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30498:22:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 1711, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "30532:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 1710, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "30524:7:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 1709, "name": "address", "nodeType": "ElementaryTypeName", "src": "30524:7:40", "typeDescriptions": {}}}, "id": 1712, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30524:10:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "30498:36:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"expression": {"id": 1717, "name": "GyroFixedPoint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6239, "src": "30563:14:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroFixedPoint_$6239_$", "typeString": "type(library GyroFixedPoint)"}}, "id": 1718, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ONE", "nodeType": "MemberAccess", "referencedDeclaration": 5587, "src": "30563:18:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1719, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "30498:83:40", "trueExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1714, "name": "rateProvider0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 46, "src": "30537:13:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$1927", "typeString": "contract IRateProvider"}}, "id": 1715, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getRate", "nodeType": "MemberAccess", "referencedDeclaration": 1926, "src": "30537:21:40", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 1716, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30537:23:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "30490:91:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1721, "nodeType": "ExpressionStatement", "src": "30490:91:40"}, {"expression": {"id": 1738, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1722, "name": "rate1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1702, "src": "30591:5:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 1731, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 1725, "name": "rateProvider1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 48, "src": "30607:13:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$1927", "typeString": "contract IRateProvider"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IRateProvider_$1927", "typeString": "contract IRateProvider"}], "id": 1724, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "30599:7:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 1723, "name": "address", "nodeType": "ElementaryTypeName", "src": "30599:7:40", "typeDescriptions": {}}}, "id": 1726, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30599:22:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 1729, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "30633:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 1728, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "30625:7:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 1727, "name": "address", "nodeType": "ElementaryTypeName", "src": "30625:7:40", "typeDescriptions": {}}}, "id": 1730, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30625:10:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "30599:36:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"expression": {"id": 1735, "name": "GyroFixedPoint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6239, "src": "30664:14:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroFixedPoint_$6239_$", "typeString": "type(library GyroFixedPoint)"}}, "id": 1736, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ONE", "nodeType": "MemberAccess", "referencedDeclaration": 5587, "src": "30664:18:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1737, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "30599:83:40", "trueExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1732, "name": "rateProvider1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 48, "src": "30638:13:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IRateProvider_$1927", "typeString": "contract IRateProvider"}}, "id": 1733, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getRate", "nodeType": "MemberAccess", "referencedDeclaration": 1926, "src": "30638:21:40", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 1734, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30638:23:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "30591:91:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1739, "nodeType": "ExpressionStatement", "src": "30591:91:40"}]}, "documentation": {"id": 1697, "nodeType": "StructuredDocumentation", "src": "30124:275:40", "text": "@notice Convenience function to fetch the two rates used for scaling the two tokens, as of rateProvider{0,1}.\n Note that these rates do *not* contain scaling to account for differences in the number of decimals. The rates\n themselves are always 18-decimals."}, "functionSelector": "702ec091", "id": 1741, "implemented": true, "kind": "function", "modifiers": [], "name": "getTokenRates", "nodeType": "FunctionDefinition", "parameters": {"id": 1698, "nodeType": "ParameterList", "parameters": [], "src": "30426:2:40"}, "returnParameters": {"id": 1703, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1700, "mutability": "mutable", "name": "rate0", "nodeType": "VariableDeclaration", "scope": 1741, "src": "30450:13:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1699, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "30450:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1702, "mutability": "mutable", "name": "rate1", "nodeType": "VariableDeclaration", "scope": 1741, "src": "30465:13:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1701, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "30465:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "30449:30:40"}, "scope": 1742, "src": "30404:285:40", "stateMutability": "view", "virtual": false, "visibility": "public"}], "scope": 1743, "src": "1004:29687:40"}], "src": "178:30514:40"}, "bytecode": "6103206040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9610120526706f05b59d3b20000610200819052610220526000610240523480156200005057600080fd5b506040516200575538038062005755833981016040819052620000739162000b0b565b8160e001518260a001518360c0015184600001518060c001518160e001518260200151836040015184600001518280604051806040016040528060018152602001603160f81b81525085858a6101000151336001600160a01b031660001b806080818152505050806001600160a01b031660a0816001600160a01b031660601b81525050508160039080519060200190620001109291906200084d565b508051620001269060049060208401906200084d565b505060058054601260ff1990911617905550815160209283012060c052805191012060e052507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61010052606090811b6001600160601b031916610140524294909401610160819052909201610180525050604080516002808252928101909152600091816020016020820280368337019050509050816060015181600081518110620001cf57fe5b60200260200101906001600160a01b031690816001600160a01b0316815250508160800151816001815181106200020257fe5b60200260200101906001600160a01b031690816001600160a01b03168152505062000238816200053e60201b620018631760201c565b60a082015162000248906200054e565b81516040516309b2760f60e01b81526000916001600160a01b0316906309b2760f906200027b9060029060040162000cc5565b602060405180830381600087803b1580156200029657600080fd5b505af1158015620002ab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002d1919062000af2565b83516040805160028082526060820183529394506001600160a01b03909216926366a9c7d2928592879290602083019080368337019050506040518463ffffffff1660e01b8152600401620003299392919062000c2b565b600060405180830381600087803b1580156200034457600080fd5b505af115801562000359573d6000803e3d6000fd5b5050506101a082905250606080840180516001600160601b031990831b81166101c052608086015190921b9091166101e052516200039790620005d7565b610260526080830151620003ab90620005d7565b61028052505060408051808201909152600e81526d1b9bdd08185d5d1a1bdc9a5e995960921b602082015290506001600160a01b0383166200040b5760405162461bcd60e51b815260040162000402919062000cda565b60405180910390fd5b50600b80546001600160a01b0319166001600160a01b039384161790558051600a8054602084015160409094015160ff1990911692151592909217610100600160801b0319166101006001600160781b0390941693909302929092176001600160801b03908116600160801b9190921602179055620004909082161515606962000685565b600c80546001600160a01b0319166001600160a01b039290921691909117905560408201516020830151620004c9911161015e62000685565b620004e16001600160a01b0382161515606962000685565b60208201516102a05260408201516102c052600d80546001600160a01b0319166001600160a01b0392909216919091179055606080820151811b6001600160601b03199081166102e052608090920151901b166103005262000d6f565b806200054a8162000696565b5050565b6200056364e8d4a5100082101560cb62000723565b6200057b67016345785d8a000082111560ca62000723565b62000597816008546200073460201b620018711790919060201c565b6008556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc90620005cc90839062000d0f565b60405180910390a150565b600080826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156200061457600080fd5b505afa15801562000629573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200064f919062000c08565b60ff16905060006200066e6012836200075a60201b620018861760201c565b600a0a670de0b6b3a764000002925050505b919050565b816200054a576200054a8162000772565b600281511015620006a75762000720565b600081600081518110620006b757fe5b602002602001015190506000600190505b82518110156200071d576000838281518110620006e157fe5b6020026020010151905062000712816001600160a01b0316846001600160a01b03161060656200072360201b60201c565b9150600101620006c8565b50505b50565b816200054a576200054a8162000784565b60006200075382605685620007d760201b6200189c179092919060201c565b9392505050565b60006200076c83831115600162000723565b50900390565b62000720816223aca960e91b620007ec565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6001600160401b03811b1992909216911b1790565b62461bcd60e51b600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fd5b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620008855760008555620008d0565b82601f10620008a057805160ff1916838001178555620008d0565b82800160010185558215620008d0579182015b82811115620008d0578251825591602001919060010190620008b3565b50620008de929150620008e2565b5090565b5b80821115620008de5760008155600101620008e3565b80516001600160a01b03811681146200068057600080fd5b600082601f83011262000922578081fd5b81516001600160401b038111156200093657fe5b6200094b601f8201601f191660200162000d18565b81815284602083860101111562000960578283fd5b6200097382602083016020870162000d3c565b949350505050565b6000606082840312156200098d578081fd5b604051606081016001600160401b0381118282101715620009aa57fe5b806040525080915082518015158114620009c357600080fd5b815260208301516001600160781b0381168114620009e057600080fd5b602082015260408301516001600160801b038116811462000a0057600080fd5b6040919091015292915050565b600061012080838503121562000a21578182fd5b62000a2c8162000d18565b91505062000a3a82620008f9565b815260208201516001600160401b038082111562000a5757600080fd5b62000a658583860162000911565b6020840152604084015191508082111562000a7f57600080fd5b5062000a8e8482850162000911565b60408301525062000aa260608301620008f9565b606082015262000ab560808301620008f9565b608082015260a082015160a082015260c082015160c082015260e082015160e082015261010062000ae8818401620008f9565b9082015292915050565b60006020828403121562000b04578081fd5b5051919050565b6000806040838503121562000b1e578081fd5b82516001600160401b038082111562000b35578283fd5b90840190610140828703121562000b4a578283fd5b62000b5761010062000d18565b82518281111562000b66578485fd5b62000b748882860162000a0d565b825250602083015160208201526040830151604082015262000b9960608401620008f9565b606082015262000bac60808401620008f9565b608082015262000bbf60a08401620008f9565b60a082015262000bd38760c085016200097b565b60c082015262000be76101208401620008f9565b60e0820152935062000bff91505060208401620008f9565b90509250929050565b60006020828403121562000c1a578081fd5b815160ff8116811462000753578182fd5b60006060820185835260206060818501528186518084526080860191508288019350845b8181101562000c765784516001600160a01b03168352938301939183019160010162000c4f565b505084810360408601528551808252908201925081860190845b8181101562000cb75782516001600160a01b03168552938301939183019160010162000c90565b509298975050505050505050565b602081016003831062000cd457fe5b91905290565b600060208252825180602084015262000cfb81604085016020870162000d3c565b601f01601f19169190910160400192915050565b90815260200190565b6040518181016001600160401b038111828210171562000d3457fe5b604052919050565b60005b8381101562000d5957818101518382015260200162000d3f565b8381111562000d69576000848401525b50505050565b60805160a05160601c60c05160e05161010051610120516101405160601c61016051610180516101a0516101c05160601c6101e05160601c61020051610220516102405161026051610280516102a0516102c0516102e05160601c6103005160601c6148c262000e9360003980610b805280610caa5280610ce65280611cbf528061259052806125c2525080610bdb5280610c1752806110645280611c7552806124c352806124f5525080612fa4525080612fcb525080611ce2525080611c98525050806136b95250806136e05250806124445250806113cb52806123f852508061088a525080611a015250806119dd5250806112235250806115f6525080611b1d525080611b5f525080611b3e5250806111ff52508061114452506148c26000f3fe608060405234801561001057600080fd5b50600436106102f15760003560e01c806370a082311161019d57806395d89b41116100e9578063aaabadc5116100a2578063d505accf1161007c578063d505accf14610601578063d5c096c414610614578063dd62ed3e14610627578063f89f27ed1461063a576102f1565b8063aaabadc5146105e9578063abd13afe146105f1578063c0ff1a15146105f9576102f1565b806395d89b411461059857806398d5fdca146105a05780639b02cdde146105a85780639d2c110c146105b0578063a457c2d7146105c3578063a9059cbb146105d6576102f1565b80638456cb591161015657806387ec68171161013057806387ec681714610560578063893d20e8146105735780638d928af81461057b5780638dd9f89d14610583576102f1565b80638456cb591461053d578063851c1bb314610545578063876f303b14610558576102f1565b806370a08231146104c857806374f3b009146104db57806376e54a46146104fc5780637ecebe001461050f5780638002df1814610522578063828a7c3414610535576102f1565b80633aeae0d31161025c5780636028bfd411610215578063679aefce116101ef578063679aefce1461048d5780636d785a8714610495578063702ec0911461049d578063707dcd1e146104b3576102f1565b80636028bfd41461045c578063623a2e751461047d57806362ced09214610485576102f1565b80633aeae0d3146103e65780633c4dd5bb146103fb5780633f4ba83a1461041d57806344bbdb55146104255780634a6b0b151461043a57806355c6762814610454576102f1565b806323b872dd116102ae57806323b872dd14610388578063313ce5671461039b5780633644e515146103b057806338e9922e146103b857806338fff2d0146103cb57806339509351146103d3576102f1565b806306fdde03146102f6578063095ea7b3146103145780630e608b301461033457806316c38b3c1461034957806318160ddd1461035c5780631c0de05114610371575b600080fd5b6102fe610642565b60405161030b9190614755565b60405180910390f35b61032761032236600461428e565b6106d8565b60405161030b91906146e8565b610347610342366004614169565b6106ef565b005b6103476103573660046142b9565b6107a0565b6103646107b4565b60405161030b919061470b565b6103796107ba565b60405161030b939291906146f3565b6103276103963660046141d9565b6107e3565b6103a3610857565b60405161030b9190614845565b610364610860565b6103476103c636600461457d565b61086f565b610364610888565b6103276103e136600461428e565b6108ac565b6103ee6108e7565b60405161030b91906147a8565b61040e6104093660046145ad565b610932565b60405161030b9392919061482f565b610347610985565b61042d610a7a565b60405161030b919061466b565b610442610a89565b60405161030b9695949392919061472b565b610364610ae4565b61046f61046a3660046142d3565b610af1565b60405161030b929190614808565b610364610b22565b61042d610b7e565b610364610ba2565b61042d610bc7565b6104a5610bd6565b60405161030b929190614821565b6104bb610d7b565b60405161030b919061467f565b6103646104d6366004614169565b610d8b565b6104ee6104e93660046142d3565b610daa565b60405161030b9291906146c3565b61034761050a366004614407565b610e3a565b61036461051d366004614169565b610f61565b610347610530366004614169565b610f7c565b61042d611062565b610347611086565b6103646105533660046143df565b61113e565b610364611197565b61046f61056e3660046142d3565b6111d8565b61042d6111fd565b61042d611221565b61058b611245565b60405161030b91906146b0565b6102fe6112df565b610364611340565b61036461139c565b6103646105be366004614486565b6113a2565b6103276105d136600461428e565b611528565b6103276105e436600461428e565b611566565b61042d611573565b61042d61157d565b61036461158c565b61034761060f366004614219565b6115c7565b6104ee6106223660046142d3565b611737565b6103646106353660046141a1565b61181c565b61058b611859565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106ce5780601f106106a3576101008083540402835291602001916106ce565b820191906000526020600020905b8154815290600101906020018083116106b157829003601f168201915b5050505050905090565b60006106e53384846118b2565b5060015b92915050565b600b5460408051808201909152600e81526d1b9bdd08185d5d1a1bdc9a5e995960921b6020820152906001600160a01b031633146107495760405162461bcd60e51b81526004016107409190614755565b60405180910390fd5b50600b80546001600160a01b0319166001600160a01b0383161790556040517fb8fd9afc34c38fcd13b9a3b7646482eb1fddcefb40af2c70609972816eba32089061079590839061466b565b60405180910390a150565b6107a8611914565b6107b181611942565b50565b60025490565b60008060006107c76119be565b1592506107d26119db565b91506107dc6119ff565b9050909192565b6000806107f0853361181c565b9050610814336001600160a01b038716148061080c5750838210155b61019e611a23565b61081f858585611a31565b336001600160a01b0386161480159061083a57506000198114155b1561084c5761084c85338584036118b2565b506001949350505050565b60055460ff1690565b600061086a611b19565b905090565b610877611914565b61087f611bd7565b6107b181611bec565b7f000000000000000000000000000000000000000000000000000000000000000090565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916106e59185906108e29086611c55565b6118b2565b6108ef61409c565b5060408051606081018252600a5460ff81161515825261010081046001600160781b03166020830152600160801b90046001600160801b03169181019190915290565b60008060008061094185611c67565b9050600061094f8615611c67565b905061095b8883611d94565b97506109678782611d94565b9650610974888888611da0565b945094509450505093509350939050565b600c546040805180820190915260118152703737ba103830bab9b29036b0b730b3b2b960791b6020820152906001600160a01b03163314610a445760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610a095781810151838201526020016109f1565b50505050905090810190601f168015610a365780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50610a4f60006107a8565b6040517f215385c8bfc731925ec8068d7baa50f6b6f34417cc7804f7273dc2c0b3db279090600090a1565b600d546001600160a01b031681565b60008060008060008060006008549050610aa281611e6f565b9650610aad81611e7b565b9550610ab881611e88565b9450610ac381611e95565b9350610ace81611ea2565b9250610ad981611eaf565b915050909192939495565b600061086a600854611eaf565b60006060610b0186516002611ebc565b610b1689898989898989611ec9611f9061200e565b97509795505050505050565b600080610b2d61158c565b90506000610b396107b4565b9050600080610b4a60095485612121565b50919350915060009050610b6882610b62868661218a565b9061218a565b9050610b7485826121a2565b9550505050505090565b7f000000000000000000000000000000000000000000000000000000000000000081565b600061086a610baf6107b4565b610bc1610bba61158c565b60026121fc565b906121a2565b600b546001600160a01b031681565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610c1557670de0b6b3a7640000610ca6565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663679aefce6040518163ffffffff1660e01b815260040160206040518083038186803b158015610c6e57600080fd5b505afa158015610c82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca69190614595565b91507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610ce457670de0b6b3a7640000610d75565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663679aefce6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d3d57600080fd5b505afa158015610d51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d759190614595565b90509091565b610d836140bc565b61086a612220565b6001600160a01b0381166000908152602081905260409020545b919050565b60608088610dd4610db9611221565b6001600160a01b0316336001600160a01b03161460cd611a23565b610de9610ddf610888565b82146101f4611a23565b610df287612246565b6000806000610e068d8d8d8d8d8d8d611ec9565b925092509250610e168c846122a8565b610e1f82611f90565b610e2881611f90565b909c909b509950505050505050505050565b600b5460408051808201909152600e81526d1b9bdd08185d5d1a1bdc9a5e995960921b6020820152906001600160a01b03163314610e8b5760405162461bcd60e51b81526004016107409190614755565b50600a5460408051808201909152601081526f1c1bdbdb081a5cc81d5b98d85c1c195960821b60208201529060ff16610ed75760405162461bcd60e51b81526004016107409190614755565b508051600a8054602084015160408086015160ff19909316941515949094176fffffffffffffffffffffffffffffff0019166101006001600160781b0390921691909102176001600160801b03908116600160801b919092160217815590517f2abf5970d7bc1a2b36eaae52dd2cc353edb0337c7284ef8a01973081b4e0442491610795916147dd565b6001600160a01b031660009081526006602052604090205490565b600c546040805180820190915260118152703737ba103830bab9b29036b0b730b3b2b960791b60208201526001600160a01b03909116903382146110015760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610a095781810151838201526020016109f1565b50600c80546001600160a01b0319166001600160a01b03848116918217909255604080519284168352602083019190915280517f1ffccd1fa96f4fb3415df8048a0fd107344e262d2d246c85105e2a3f8f3e81989281900390910190a15050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600c546040805180820190915260118152703737ba103830bab9b29036b0b730b3b2b960791b6020820152906001600160a01b031633146111085760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610a095781810151838201526020016109f1565b5061111360016107a8565b6040517f681eace576127d0553b224436a09801fb47d042942cbff59d7d4ff04d8fa03d790600090a1565b604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091526001600160e01b03198416828401528251602481840301815260449092019092528051910120919050565b6000806111a26107b4565b90506000806111ba6009546111b561158c565b612121565b5091935091506111d0905081610b62858561218a565b935050505090565b600060606111e886516002611ebc565b610b16898989898989896122b261237161200e565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b606060006112516123d3565b60408051600280825260608201835292935091906020830190803683370190505091506112a88160008151811061128457fe5b60200260200101518260018151811061129957fe5b60200260200101516001611da0565b909150836000815181106112b857fe5b60200260200101846001815181106112cc57fe5b6020908102919091010191909152525090565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106ce5780601f106106a3576101008083540402835291602001916106ce565b60008061134b6123d3565b905060008060006113778460008151811061136257fe5b60200260200101518560018151811061129957fe5b925092509250611388848383612489565b9450611393856124bf565b94505050505090565b60095490565b60006113ac611bd7565b83608001516113bc610db9611221565b6113c7610ddf610888565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031686602001516001600160a01b0316149050600061140f82611c67565b9050600061141d8315611c67565b90506114298783611d94565b96506114358682611d94565b955060008060006114478a8a88611da0565b9194509250905060008b51600181111561145d57fe5b14156114cc57600061147b611470610ae4565b60608e01519061265f565b905061149d611497828e606001516126b490919063ffffffff16565b87611d94565b60608d015260006114b18d8d8d87876126ca565b90506114bd81876126e9565b99505050505050505050611520565b6114da8b6060015185611d94565b60608c015260006114ee8c8c8c86866126f5565b90506114fa8187612708565b905061151661150f61150a610ae4565b612714565b829061273a565b9850505050505050505b509392505050565b600080611535338561181c565b905080831061154f5761154a338560006118b2565b61155c565b61155c33858584036118b2565b5060019392505050565b60006106e5338484611a31565b600061086a6127a0565b600c546001600160a01b031681565b6000806115976123d3565b905060006115a3612220565b90506115c0828260005b60200201518360015b602002015161281a565b9250505090565b6115d58442111560d1611a23565b6001600160a01b0380881660008181526006602090815260408083205481517f00000000000000000000000000000000000000000000000000000000000000008185015280830195909552948b166060850152608084018a905260a0840185905260c08085018a90528151808603909101815260e090940190528251920191909120906116618261284d565b9050600060018288888860405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156116bf573d6000803e3d6000fd5b5050604051601f190151915061170190506001600160a01b038216158015906116f957508b6001600160a01b0316826001600160a01b0316145b6101f8611a23565b6001600160a01b038b16600090815260066020526040902060018501905561172a8b8b8b6118b2565b5050505050505050505050565b60608088611746610db9611221565b611751610ddf610888565b611759611bd7565b60006117636107b4565b6117d3576117738b8b8b88612899565b94509050611788620f424082101560cc611a23565b6117966000620f424061296e565b6117a589620f4240830361296e565b6117ae84612371565b604080516002808252606082018352909160208301908036833701905050925061180e565b6117dc88612246565b6117eb8b8b8b8b8b8b8b6122b2565b909550935090506117fc898261296e565b61180584612371565b61180e83611f90565b505097509795505050505050565b6000611826611221565b6001600160a01b0316826001600160a01b0316141561184857506000196106e9565b6118528383612978565b90506106e9565b606061086a6129a3565b8061186d81612a12565b5050565b600061187f8383605661189c565b9392505050565b6000611896838311156001611a23565b50900390565b67ffffffffffffffff811b1992909216911b1790565b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600061192b6000356001600160e01b03191661113e565b90506107b161193a8233612a90565b610191611a23565b80156119625761195d6119536119db565b4210610193611a23565b611977565b61197761196d6119ff565b42106101a9611a23565b6007805482151560ff19909116811790915560408051918252517f9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be649181900360200190a150565b60006119c86119ff565b42118061086a57505060075460ff161590565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b8161186d5761186d81612b92565b611a486001600160a01b0384161515610198611a23565b611a5f6001600160a01b0383161515610199611a23565b611a6a838383612a8b565b6001600160a01b038316600090815260208190526040902054611a9090826101a0612be5565b6001600160a01b038085166000908152602081905260408082209390935590841681522054611abf9082611c55565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611b86612bfb565b3060405160200180868152602001858152602001848152602001838152602001826001600160a01b031681526020019550505050505060405160208183030381529060405280519060200120905090565b611bea611be26119be565b610192611a23565b565b611bff64e8d4a5100082101560cb611a23565b611c1567016345785d8a000082111560ca611a23565b600854611c229082611871565b6008556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc9061079590839061470b565b600082820161187f8482101583611a23565b60008060008315611cbc57507f000000000000000000000000000000000000000000000000000000000000000090507f0000000000000000000000000000000000000000000000000000000000000000611d02565b507f000000000000000000000000000000000000000000000000000000000000000090507f00000000000000000000000000000000000000000000000000000000000000005b6001600160a01b0382161561187f57611d8c826001600160a01b031663679aefce6040518163ffffffff1660e01b815260040160206040518083038186803b158015611d4d57600080fd5b505afa158015611d61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d859190614595565b8290612bff565b949350505050565b600061187f8383612bff565b60408051600280825260608201835260009283928392839260208301908036833701905050905084611dd25785611dd4565b865b81600081518110611de157fe5b60200260200101818152505084611df85786611dfa565b855b81600181518110611e0757fe5b6020026020010181815250506000611e1d612220565b9050611e2b828260006115ad565b94506000611e398287612c38565b905086611e4a576020810151611e4d565b80515b945086611e5b578051611e61565b60208101515b935050505093509350939050565b60006106e98282612c6c565b60006106e9826016612c6c565b60006106e982602c612c93565b60006106e982604b612c9d565b60006106e9826055612ca5565b60006106e9826056612caf565b61186d8183146067611a23565b60006060806000611ed8612220565b9050611ee26119be565b15611f44576000611efd8983835b60200201518460016115b6565b90506000611f0b8383612c38565b9050611f1682612cbd565b611f208a88612cea565b9096509450611f398287611f326107b4565b6000612d36565b60095550611f5a9050565b611f4e8886612cea565b60001960095590945092505b60408051600280825260608201835286928692919060208301908036833701905050935093509350509750975097945050505050565b611fb781600081518110611fa057fe5b6020026020010151611fb26001611c67565b6121a2565b81600081518110611fc457fe5b602002602001018181525050611ff281600181518110611fe057fe5b6020026020010151611fb26000611c67565b81600181518110611fff57fe5b60200260200101818152505050565b3330146120cc576000306001600160a01b031660003660405161203292919061465b565b6000604051808303816000865af19150503d806000811461206f576040519150601f19603f3d011682016040523d82523d6000602084013e612074565b606091505b50509050806000811461208357fe5b60046000803e6000516001600160e01b0319166343adbafb60e01b81146120ae573d6000803e3d6000fd5b506020600460003e604060205260243d03602460403e601c3d016000f35b6120d586612246565b6000806120eb8b8b8b8b8b8b8b8b63ffffffff16565b50915091506120fd818463ffffffff16565b8051601f1982018390526343adbafb603f1983015260200260231982016044820181fd5b600080600080600080600080612135612d8e565b9350935093509350836000141561215a57600097508796509094509250612181915050565b6000806121718c8c61216a6107b4565b8989612f00565b909a509850929650909450505050505b92959194509250565b60008282018381101561187f5761187f600080611a23565b6000816121b5576121b560006004611a23565b826121c2575060006106e9565b670de0b6b3a7640000838102908482816121d857fe5b04146121ea576121ea60006005611a23565b8281816121f357fe5b04949350505050565b600082820261187f84158061221957508385838161221657fe5b04145b6003611a23565b6122286140bc565b6122326001612f9b565b815261223e6000612f9b565b602082015290565b61226d8160008151811061225657fe5b60200260200101516122686001611c67565b612bff565b8160008151811061227a57fe5b602002602001018181525050611ff28160018151811061229657fe5b60200260200101516122686000611c67565b61186d8282612fef565b600060608060006122c1612220565b905060006122d0898383611ef0565b905060006122de8383612c38565b90506122e982612cbd565b6000806122f68c8a6130a6565b600a54919350915060ff161561232057612320826123138f610d8b565b61231b6107b4565b6130e0565b612334848361232d6107b4565b6001612d36565b6009556040805160028082526060820183528492849291906020830190803683370190505097509750975050505050509750975097945050505050565b6123988160008151811061238157fe5b60200260200101516123936001611c67565b61273a565b816000815181106123a557fe5b602002602001018181525050611ff2816001815181106123c157fe5b60200260200101516123936000611c67565b60408051600280825260608083018452926020830190803683370190505090506124267f00000000000000000000000000000000000000000000000000000000000000006124216001611c67565b6131f2565b8160008151811061243357fe5b60200260200101818152505061246d7f00000000000000000000000000000000000000000000000000000000000000006124216000611c67565b8160018151811061247a57fe5b60200260200101818152505090565b6000611d8c8460008151811061249b57fe5b602002602001015184866001815181106124b157fe5b602002602001015185613299565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161561258e5761258b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663679aefce6040518163ffffffff1660e01b815260040160206040518083038186803b15801561254c57600080fd5b505afa158015612560573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125849190614595565b8390612bff565b91505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161561265b576126587f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663679aefce6040518163ffffffff1660e01b815260040160206040518083038186803b15801561261957600080fd5b505afa15801561262d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126519190614595565b83906121a2565b91505b5090565b600082820283158061267957508284828161267657fe5b04145b6126895761268960006003611a23565b806126985760009150506106e9565b670de0b6b3a764000060001982015b0460010191505092915050565b6000828211156118965761189660006001611a23565b60006126dd8585886060015186866132b2565b90505b95945050505050565b600061187f83836121a2565b60006126dd85858860600151868661331c565b600061187f838361273a565b6000670de0b6b3a7640000821061272c5760006106e9565b50670de0b6b3a76400000390565b60008161274d5761274d60006004611a23565b8261275a575060006106e9565b670de0b6b3a76400008381029084828161277057fe5b041461279457612794670de0b6b3a764000085838161278b57fe5b04146005611a23565b8260018203816126a757fe5b60006127aa611221565b6001600160a01b031663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b1580156127e257600080fd5b505afa1580156127f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086a9190614185565b600080600080600061282d88888861337c565b9350935093509350612841848484846134d4565b98975050505050505050565b6000612857611b19565b82604051602001808061190160f01b81525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b6000606060006128a884613548565b90506128c360008260038111156128bb57fe5b1460ce611a23565b60006128ce85613567565b90506128dc81516002611ebc565b6128e581612246565b60008060006128fa8460008151811061136257fe5b925092509250600061290d858484612489565b9050600061295561293b838860008151811061292557fe5b6020026020010151612bff90919063ffffffff16565b8760018151811061294857fe5b6020026020010151611c55565b60099590955550929b939a509298505050505050505050565b61186d828261361b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b604080516002808252606080830184529260009291906020830190803683370190505090506129d260016136b0565b816000815181106129df57fe5b6020026020010181815250506129f560006136b0565b81600181518110612a0257fe5b6020908102919091010152905090565b600281511015612a21576107b1565b600081600081518110612a3057fe5b602002602001015190506000600190505b8251811015612a8b576000838281518110612a5857fe5b60200260200101519050612a81816001600160a01b0316846001600160a01b0316106065611a23565b9150600101612a41565b505050565b600073ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b612aaf6111fd565b6001600160a01b031614158015612aca5750612aca83613704565b15612af257612ad76111fd565b6001600160a01b0316336001600160a01b03161490506106e9565b612afa6127a0565b6001600160a01b0316639be2a8848484306040518463ffffffff1660e01b815260040180848152602001836001600160a01b03168152602001826001600160a01b03168152602001935050505060206040518083038186803b158015612b5f57600080fd5b505afa158015612b73573d6000803e3d6000fd5b505050506040513d6020811015612b8957600080fd5b505190506106e9565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6000612bf48484111583611a23565b5050900390565b4690565b6000828202831580612c19575082848281612c1657fe5b04145b612c2957612c2960006003611a23565b670de0b6b3a7640000816121f3565b612c406140bc565b612c53600184815b602002015184613736565b8152612c6160008481612c48565b602082015292915050565b600082821c623fffff16621fffff8113612c865780611d8c565b623fffff19179392505050565b1c637fffffff1690565b1c6103ff1690565b1c60019081161490565b1c67ffffffffffffffff1690565b600080600080612ccf60095486612121565b9350935093509350612ce384848484613756565b5050505050565b600060606000612cf984613548565b90506001816003811115612d0957fe5b1415612d2357612d19858561377c565b9093509150612d2e565b612d2e610150612b92565b509250929050565b60008115612d68576000612d5484612d4e888861265f565b9061273a565b9050612d60868261218a565b915050611d8c565b6000612d7884610bc18888612bff565b9050612d8486826126b4565b9695505050505050565b600d54600090819081908190612db5906001600160a01b03163063032434c560e41b6137ae565b600d54612dd3906001600160a01b03163063032434c560e41b6137d5565b600d546040516321f8a72160e01b81526001600160a01b03909116906321f8a72190612e13906c4759524f5f545245415355525960981b9060040161470b565b60206040518083038186803b158015612e2b57600080fd5b505afa158015612e3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e639190614185565b600d546040516321f8a72160e01b81526001600160a01b03909116906321f8a72190612ea2906b42414c5f545245415355525960a01b9060040161470b565b60206040518083038186803b158015612eba57600080fd5b505afa158015612ece573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ef29190614185565b935093509350935090919293565b600080868611612f1557506000905080612f91565b6000612f3585612f2f612f288a8c6126b4565b8990612bff565b90612bff565b90506000612f4d612f46898b6126b4565b8790612bff565b90506000612f5b89836126b4565b90506000612f6984836121a2565b90506000612f778883612bff565b90506000612f8583836126b4565b91975090955050505050505b9550959350505050565b600081612fc8577f00000000000000000000000000000000000000000000000000000000000000006106e9565b507f0000000000000000000000000000000000000000000000000000000000000000919050565b6130066001600160a01b038316151561019b611a23565b61301282600083612a8b565b6001600160a01b03821660009081526020819052604090205461303890826101a1612be5565b6001600160a01b03831660009081526020819052604090205560025461305e9082613803565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6000606060006130b584613548565b905060038160038111156130c557fe5b14156130d557612d198585613811565b612d2e610136612b92565b60408051606081018252600a5460ff81161515825261010081046001600160781b031660208301819052600160801b9091046001600160801b0316928201929092529061312d858561218a565b11156040518060400160405280601a81526020017f6f7665722061646472657373206c697175696469747920636170000000000000815250906131835760405162461bcd60e51b81526004016107409190614755565b5060408101516001600160801b031661319c858461218a565b11156040518060400160405280601981526020017f6f76657220676c6f62616c206c6971756964697479206361700000000000000081525090612ce35760405162461bcd60e51b81526004016107409190614755565b60008060006131ff611221565b6001600160a01b031663b05f8e48613215610888565b876040518363ffffffff1660e01b8152600401613233929190614714565b60806040518083038186803b15801561324b57600080fd5b505afa15801561325f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061328391906145e1565b5050818101945090925090506126e08385612bff565b60006126e06132a8868661218a565b612d4e858561218a565b6000806132d16132ca85670de0b6b3a764000261265f565b889061218a565b905060006132ea6132ca85670de0b6b3a763ffff612bff565b90506133036132f9838861218a565b610bc18389612bff565b92505050848111156126e0576126e06000610165613836565b600084841115613333576133336000610165613836565b600061334a6132ca85670de0b6b3a764000261265f565b905060006133636132ca85670de0b6b3a763ffff612bff565b905061284161337282886126b4565b612d4e848961265f565b600080808061339d61338e87876121a2565b670de0b6b3a7640000906126b4565b935060006133c886896001815181106133b257fe5b60200260200101516121a290919063ffffffff16565b905060006133dd888a60008151811061292557fe5b90506133e9828261218a565b9450613410896001815181106133fb57fe5b60200260200101518a60008151811061292557fe5b9250505061344186612f2f88612f2f8b60008151811061342c57fe5b60200260200101518c60008151811061292557fe5b9150600061348186610bc189612f2f670de0b6b3a7640000600202612f2f8e60018151811061346c57fe5b60200260200101518f60008151811061292557fe5b905060006134b7613492888061265f565b610bc18b6001815181106134a257fe5b60200260200101518c60018151811061292557fe5b90506134c781610b62868561218a565b9350505093509350935093565b6000806134e986671bc16d674ec8000061265f565b9050600061350387612f2f86673782dace9d900000612bff565b90506000613511868361218a565b90506000613520826005613844565b9050600061352e898361218a565b905061353a81866121a2565b9a9950505050505050505050565b600081806020019051602081101561355f57600080fd5b505192915050565b606081806020019051604081101561357e57600080fd5b8151602083018051604051929492938301929190846401000000008211156135a557600080fd5b9083019060208201858111156135ba57600080fd5b82518660208202830111640100000000821117156135d757600080fd5b82525081516020918201928201910280838360005b838110156136045781810151838201526020016135ec565b505050509190910160405250929695505050505050565b61362760008383612a8b565b6002546136349082611c55565b6002556001600160a01b03821660009081526020819052604090205461365a9082611c55565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000816136dd577f00000000000000000000000000000000000000000000000000000000000000006106e9565b507f0000000000000000000000000000000000000000000000000000000000000000919050565b6000613716631c74c91760e11b61113e565b8214806106e9575061372e6350dd6ed960e01b61113e565b909114919050565b60008361374c576137478284611d94565b611d8c565b611d8c82846126e9565b831561376657613766828561296e565b821561377657613776818461296e565b50505050565b60006060600061378b846139d2565b905060006137a1868361379c6107b4565b6139f4565b9196919550909350505050565b6000611d8c847550524f544f434f4c5f535741505f4645455f5045524360501b8486613a7a565b6000611d8c847f50524f544f434f4c5f4645455f4759524f5f504f5254494f4e000000000000008486613a7a565b600061187f83836001612be5565b600060606000613820846139d2565b905060006137a186836138316107b4565b613d27565b8161186d5761186d81613dc3565b600082613853575060006106e9565b600061385e84613dd3565b9050600281670de0b6b3a764000086028161387557fe5b0482018161387f57fe5b049050600281670de0b6b3a764000086028161389757fe5b048201816138a157fe5b049050600281670de0b6b3a76400008602816138b957fe5b048201816138c357fe5b049050600281670de0b6b3a76400008602816138db57fe5b048201816138e557fe5b049050600281670de0b6b3a76400008602816138fd57fe5b0482018161390757fe5b049050600281670de0b6b3a764000086028161391f57fe5b0482018161392957fe5b049050600281670de0b6b3a764000086028161394157fe5b0482018161394b57fe5b049050600061395a8280612bff565b9050613970613969838661265f565b869061218a565b8111158015613992575061398e613987838661265f565b86906126b4565b8110155b611520576040805162461bcd60e51b815260206004820152600c60248201526b17dcdc5c9d0811905253115160a21b604482015290519081900360640190fd5b60008180602001905160408110156139e957600080fd5b506020015192915050565b6060835167ffffffffffffffff81118015613a0e57600080fd5b50604051908082528060200260200182016040528015613a38578160200160208202803683370190505b50905060005b845181101561152057613a5b83610bc18688858151811061292557fe5b828281518110613a6757fe5b6020908102919091010152600101613a3e565b6040805160208082018690526001600160a01b03808516838501528351808403850181526060840180865281519184019190912063696eb37560e01b909152606484018190529351600094939189169263696eb3759260848082019391829003018186803b158015613aeb57600080fd5b505afa158015613aff573d6000803e3d6000fd5b505050506040513d6020811015613b1557600080fd5b505115613b9557856001600160a01b031663bd02d0f5826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613b6057600080fd5b505afa158015613b74573d6000803e3d6000fd5b505050506040513d6020811015613b8a57600080fd5b50519150611d8c9050565b6040805160208082018890528183018790528251808303840181526060830180855281519183019190912063696eb37560e01b9091526064830181905292516001600160a01b038a169263696eb375926084808301939192829003018186803b158015613c0157600080fd5b505afa158015613c15573d6000803e3d6000fd5b505050506040513d6020811015613c2b57600080fd5b505115613cac57866001600160a01b031663bd02d0f5826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613c7657600080fd5b505afa158015613c8a573d6000803e3d6000fd5b505050506040513d6020811015613ca057600080fd5b50519250611d8c915050565b866001600160a01b031663bd02d0f5876040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613cf057600080fd5b505afa158015613d04573d6000803e3d6000fd5b505050506040513d6020811015613d1a57600080fd5b5051979650505050505050565b6060835167ffffffffffffffff81118015613d4157600080fd5b50604051908082528060200260200182016040528015613d6b578160200160208202803683370190505b50905060005b845181101561152057613da483612d4e86888581518110613d8e57fe5b602002602001015161265f90919063ffffffff16565b828281518110613db057fe5b6020908102919091010152600101613d71565b6107b1816223aca960e91b613fa5565b6000670de0b6b3a76400008210613e0057670de0b6b3a7640000613df8818404614006565b1b9050610da5565b600a8211613e13575063bc7c871c610da5565b60648211613e2757506402540be400610da5565b6103e88211613e3c575064075cdd4719610da5565b6127108211613e51575064174876e800610da5565b620186a08211613e6757506449a0a4c700610da5565b620f42408211613e7d575064e8d4a51000610da5565b629896808211613e9457506502e0466fc608610da5565b6305f5e1008211613eac57506509184e72a000610da5565b633b9aca008211613ec45750651cc2c05dbc53610da5565b6402540be4008211613edd5750655af3107a4000610da5565b64174876e8008211613ef7575066011f9b83a95b45610da5565b64e8d4a510008211613f11575066038d7ea4c68000610da5565b6509184e72a0008211613f2c5750660b3c13249d90bb610da5565b655af3107a40008211613f475750662386f26fc10000610da5565b66038d7ea4c680008211613f635750667058bf6e27a751610da5565b662386f26fc100008211613f80575067016345785d8a0000610da5565b67016345785d8a00008211613f9e5750670463777a4d8c892d610da5565b5080610da5565b62461bcd60e51b600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fd5b6000600160801b821061401e5760809190911c906040015b6801000000000000000082106140395760409190911c906020015b64010000000082106140505760209190911c906010015b6201000082106140655760109190911c906008015b61010082106140795760089190911c906004015b6010821061408c5760049190911c906002015b60048210610da557600101919050565b604080516060810182526000808252602082018190529181019190915290565b60405180604001604052806002906020820280368337509192915050565b8035610da581614877565b80358015158114610da557600080fd5b600082601f830112614105578081fd5b813567ffffffffffffffff81111561411957fe5b61412c601f8201601f1916602001614853565b818152846020838601011115614140578283fd5b816020850160208301379081016020019190915292915050565b803560028110610da557600080fd5b60006020828403121561417a578081fd5b813561187f81614877565b600060208284031215614196578081fd5b815161187f81614877565b600080604083850312156141b3578081fd5b82356141be81614877565b915060208301356141ce81614877565b809150509250929050565b6000806000606084860312156141ed578081fd5b83356141f881614877565b9250602084013561420881614877565b929592945050506040919091013590565b600080600080600080600060e0888a031215614233578283fd5b873561423e81614877565b9650602088013561424e81614877565b95506040880135945060608801359350608088013560ff81168114614271578384fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156142a0578182fd5b82356142ab81614877565b946020939093013593505050565b6000602082840312156142ca578081fd5b61187f826140e5565b600080600080600080600060e0888a0312156142ed578081fd5b8735965060208801356142ff81614877565b9550604088013561430f81614877565b9450606088013567ffffffffffffffff8082111561432b578283fd5b818a0191508a601f83011261433e578283fd5b81358181111561434a57fe5b6020810261435a60208201614853565b80838252602082019150602086018f6020858901011115614379578788fd5b8796505b8487101561439c5780358352600196909601956020928301920161437d565b50985050505060808a0135945060a08a0135935060c08a01359150808211156143c3578283fd5b506143d08a828b016140f5565b91505092959891949750929550565b6000602082840312156143f0578081fd5b81356001600160e01b03198116811461187f578182fd5b600060608284031215614418578081fd5b6040516060810181811067ffffffffffffffff8211171561443557fe5b604052614441836140e5565b815260208301356001600160781b038116811461445c578283fd5b602082015260408301356001600160801b038116811461447a578283fd5b60408201529392505050565b60008060006060848603121561449a578081fd5b833567ffffffffffffffff808211156144b1578283fd5b81860191506101208083890312156144c7578384fd5b6144d081614853565b90506144db8361415a565b81526144e9602084016140da565b60208201526144fa604084016140da565b6040820152606083013560608201526080830135608082015260a083013560a082015261452960c084016140da565b60c082015261453a60e084016140da565b60e08201526101008084013583811115614552578586fd5b61455e8a8287016140f5565b9183019190915250976020870135975060409096013595945050505050565b60006020828403121561458e578081fd5b5035919050565b6000602082840312156145a6578081fd5b5051919050565b6000806000606084860312156145c1578081fd5b83359250602084013591506145d8604085016140e5565b90509250925092565b600080600080608085870312156145f6578182fd5b845193506020850151925060408501519150606085015161461681614877565b939692955090935050565b6000815180845260208085019450808401835b8381101561465057815187529582019590820190600101614634565b509495945050505050565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b60408101818360005b60028110156146a7578151835260209283019290910190600101614688565b50505092915050565b60006020825261187f6020830184614621565b6000604082526146d66040830185614621565b82810360208401526126e08185614621565b901515815260200190565b92151583526020830191909152604082015260600190565b90815260200190565b9182526001600160a01b0316602082015260400190565b9586526020860194909452604085019290925260608401521515608083015260a082015260c00190565b6000602080835283518082850152825b8181101561478157858101830151858201604001528201614765565b818111156147925783604083870101525b50601f01601f1916929092016040019392505050565b8151151581526020808301516001600160781b0316908201526040918201516001600160801b03169181019190915260600190565b905460ff811615158252600881901c6001600160781b0316602083015260801c604082015260600190565b600083825260406020830152611d8c6040830184614621565b918252602082015260400190565b9283526020830191909152604082015260600190565b60ff91909116815260200190565b60405181810167ffffffffffffffff8111828210171561486f57fe5b604052919050565b6001600160a01b03811681146107b157600080fdfea26469706673582212207b7356194bfaa5996b936a7cea25ab4327f37b07ee358aa7520bebe7e1c3bb2a64736f6c63430007060033", "bytecodeSha1": "468b764257a99a6584d9d4939b47d359ebedb489", "compiler": {"evm_version": "berlin", "optimizer": {"enabled": true, "runs": 200}, "version": "0.7.6+commit.7338295f"}, "contractName": "Gyro2CLPPool", "coverageMap": {"branches": {"1": {"BalancerPoolToken.allowance": {"350": [2364, 2394, false]}, "BalancerPoolToken.decreaseAllowance": {"349": [3611, 3637, false]}, "BalancerPoolToken.transferFrom": {"347": [3030, 3050, false], "348": [3054, 3085, false]}}, "10": {}, "11": {}, "12": {}, "15": {}, "16": {}, "17": {}, "18": {"InputHelpers.ensureArrayIsSorted": {"396": [1496, 1512, false]}}, "20": {"WordCodec.decodeInt22": {"401": [12558, 12577, true]}}, "21": {}, "22": {}, "23": {}, "24": {}, "25": {}, "26": {}, "27": {}, "28": {}, "29": {}, "30": {}, "31": {}, "32": {}, "33": {}, "34": {}, "35": {}, "36": {}, "37": {}, "38": {}, "39": {}, "4": {"BasePoolAuthorization._canPerform": {"351": [2112, 2140, false]}}, "40": {"Gyro2CLPPool._adjustPrice": {"339": [29887, 29923, false], "340": [29993, 30029, false]}, "Gyro2CLPPool._calculateCurrentValues": {"332": [12171, 12186, true], "333": [12245, 12260, true], "334": [12579, 12594, true], "335": [12658, 12673, true]}, "Gyro2CLPPool._doExit": {"341": [23051, 23112, false]}, "Gyro2CLPPool._doJoin": {"343": [18177, 18242, false]}, "Gyro2CLPPool._getDueProtocolFeeAmounts": {"337": [26307, 26331, false]}, "Gyro2CLPPool._onExitPool": {"336": [20661, 20675, false]}, "Gyro2CLPPool._onJoinPool": {"338": [16997, 17018, false]}, "Gyro2CLPPool._payFeesBpt": {"345": [26972, 26984, false], "346": [27106, 27122, false]}, "Gyro2CLPPool._scalingFactor": {"330": [29427, 29433, false], "331": [29650, 29685, false]}, "Gyro2CLPPool._sqrtParameters": {"342": [3185, 3195, true]}, "Gyro2CLPPool._virtualParameters": {"344": [6002, 6012, true]}, "Gyro2CLPPool.getTokenRates": {"327": [30498, 30534, true], "328": [30599, 30635, true]}, "Gyro2CLPPool.onSwap": {"329": [8542, 8582, false]}}, "41": {}, "43": {"CappedLiquidity._ensureCap": {"355": [2338, 2391, true]}, "CappedLiquidity.setCapManager": {"352": [1508, 1532, true]}, "CappedLiquidity.setCapParams": {"353": [1836, 1860, true], "354": [1896, 1917, true]}}, "44": {"ExtensibleWeightedPool2Tokens._normalizedWeights": {"357": [8037, 8043, true]}, "ExtensibleWeightedPool2Tokens._queryAction": {"356": [39010, 39037, false]}}, "45": {"LocallyPausable.changePauseManager": {"398": [929, 962, true]}, "LocallyPausable.pause": {"399": [1194, 1220, true]}, "LocallyPausable.unpause": {"397": [1407, 1433, true]}}, "46": {"TemporarilyPausable._setPaused": {"400": [3601, 3607, false]}}, "47": {}, "49": {}, "50": {}, "51": {"GyroConfigHelpers._getPoolSetting": {"358": [1203, 1237, false], "359": [1400, 1430, false]}}, "52": {}, "53": {}, "54": {"GyroFixedPoint.divDown": {"360": [3430, 3436, false], "361": [3514, 3520, false]}, "GyroFixedPoint.divUp": {"365": [4033, 4039, false], "366": [4117, 4123, false]}, "GyroFixedPoint.mulUp": {"362": [2326, 2332, true], "363": [2336, 2352, false], "364": [2430, 2442, false]}}, "55": {"GyroPoolMath._calcProtocolFees": {"368": [5166, 5203, false]}, "GyroPoolMath._intLog2Halved": {"390": [10051, 10064, false], "391": [10134, 10146, false], "392": [10215, 10227, false], "393": [10296, 10308, false], "394": [10376, 10387, false], "395": [10454, 10465, false]}, "GyroPoolMath._makeInitialGuess": {"372": [8415, 8442, false], "373": [8572, 8583, false], "374": [8656, 8668, false], "375": [8731, 8743, false], "376": [8816, 8828, false], "377": [8891, 8903, false], "378": [8976, 8988, false], "379": [9051, 9063, false], "380": [9136, 9148, false], "381": [9211, 9223, false], "382": [9295, 9308, false], "383": [9371, 9384, false], "384": [9456, 9469, false], "385": [9532, 9545, false], "386": [9617, 9630, false], "387": [9693, 9706, false], "388": [9778, 9791, false], "389": [9854, 9867, false]}, "GyroPoolMath._sqrt": {"369": [6821, 6831, false], "370": [7590, 7639, false], "371": [7643, 7692, true]}, "GyroPoolMath.liquidityInvariantUpdate": {"367": [11222, 11235, false]}}, "6": {}, "8": {}, "9": {}}, "statements": {"1": {"BalancerPoolToken._burnPoolTokens": {"172": [4092, 4113]}, "BalancerPoolToken._mintPoolTokens": {"207": [3979, 4003]}, "BalancerPoolToken.allowance": {"100": [2410, 2428], "101": [2459, 2497]}, "BalancerPoolToken.decreaseAllowance": {"79": [3653, 3685], "80": [3772, 3828], "81": [3849, 3860]}, "BalancerPoolToken.getVault": {"65": [1938, 1951]}, "BalancerPoolToken.transferFrom": {"11": [2867, 2968], "12": [2979, 3015], "13": [3218, 3273], "14": [3294, 3305]}}, "10": {"WeightedPoolUserDataHelpers.exactBptInForTokensOut": {"284": [2448, 2520]}, "WeightedPoolUserDataHelpers.initialAmountsIn": {"260": [1311, 1383]}, "WeightedPoolUserDataHelpers.joinKind": {"259": [964, 1016]}}, "11": {"Authentication._authenticateCaller": {"109": [2404, 2474]}, "Authentication.getActionId": {"60": [2842, 2910]}}, "12": {"_require": {"117": [946, 964]}}, "15": {}, "16": {}, "17": {}, "18": {"InputHelpers.ensureArrayIsSorted": {"103": [1369, 1402], "212": [1528, 1535], "213": [1689, 1740], "214": [1754, 1772], "215": [1630, 1633]}, "InputHelpers.ensureInputLengthMatch": {"149": [888, 934]}}, "20": {"WordCodec.decodeBool": {"226": [9819, 9866]}, "WordCodec.decodeInt22": {"223": [12551, 12615]}, "WordCodec.decodeUint10": {"225": [10628, 10669]}, "WordCodec.decodeUint31": {"224": [11156, 11197]}, "WordCodec.decodeUint64": {"227": [11684, 11725]}, "WordCodec.insertUint64": {"106": [7104, 7149]}}, "21": {}, "22": {}, "23": {"Math.mul": {"167": [1897, 1948]}, "Math.sub": {"105": [1025, 1062]}}, "24": {}, "25": {"EIP712._domainSeparatorV4": {"124": [2466, 2567]}, "EIP712._hashTypedDataV4": {"201": [3295, 3375]}}, "26": {"ERC20._approve": {"107": [9468, 9504], "108": [9514, 9551]}, "ERC20._burn": {"237": [8587, 8655], "238": [8666, 8715], "239": [8726, 8814], "240": [8824, 8863], "241": [8873, 8915]}, "ERC20._mint": {"261": [7973, 8022], "262": [8033, 8072], "263": [8082, 8133], "264": [8143, 8185]}, "ERC20._transfer": {"118": [7195, 7266], "119": [7276, 7348], "120": [7359, 7406], "121": [7417, 7505], "122": [7515, 7570], "123": [7580, 7620]}, "ERC20.allowance": {"208": [3993, 4027]}, "ERC20.approve": {"1": [4271, 4308], "2": [4318, 4329]}, "ERC20.balanceOf": {"41": [3422, 3447]}, "ERC20.decimals": {"15": [3098, 3114]}, "ERC20.increaseAllowance": {"19": [5688, 5767]}, "ERC20.name": {"0": [2200, 2212]}, "ERC20.symbol": {"68": [2396, 2410]}, "ERC20.totalSupply": {"7": [3253, 3272]}, "ERC20.transfer": {"82": [3759, 3799]}}, "27": {"ERC20Permit.DOMAIN_SEPARATOR": {"16": [2438, 2465]}, "ERC20Permit.nonces": {"53": [2207, 2228]}, "ERC20Permit.permit": {"85": [1575, 1635], "86": [1902, 1981], "87": [1992, 2018], "88": [2028, 2059]}}, "28": {}, "29": {}, "30": {"SafeMath.add": {"130": [1019, 1056]}, "SafeMath.sub": {"218": [1861, 1888], "273": [1430, 1467]}}, "31": {}, "32": {}, "33": {}, "34": {}, "35": {}, "36": {}, "37": {}, "38": {}, "39": {"Gyro2CLPMath._calcInGivenOut": {"251": [10700, 10758], "252": [11142, 11215]}, "Gyro2CLPMath._calcOutGivenIn": {"249": [8449, 8525], "250": [8626, 8684]}, "Gyro2CLPMath._calcSpotPriceAinB": {"248": [12251, 12332]}, "Gyro2CLPMath._calculateInvariant": {"200": [2508, 2554]}, "Gyro2CLPMath._calculateQuadratic": {"258": [5169, 5211]}, "Gyro2CLPMath._calculateQuadraticTerms": {"253": [3110, 3165], "254": [3300, 3323], "255": [3337, 3374], "256": [3567, 3649], "257": [3880, 3917]}}, "4": {"BasePoolAuthorization._canPerform": {"216": [2251, 2282], "217": [2428, 2496]}, "BasePoolAuthorization.getAuthorizer": {"83": [1933, 1956]}, "BasePoolAuthorization.getOwner": {"64": [1836, 1849]}}, "40": {"Gyro2CLPPool._adjustPrice": {"183": [29925, 29979], "184": [30031, 30085], "185": [30095, 30111]}, "Gyro2CLPPool._calculateCurrentValues": {"138": [12157, 12221], "139": [12231, 12295], "140": [12365, 12456], "141": [12562, 12630], "142": [12640, 12709]}, "Gyro2CLPPool._distributeFees": {"228": [25015, 25077]}, "Gyro2CLPPool._doExit": {"229": [23128, 23203], "230": [23234, 23269]}, "Gyro2CLPPool._doJoin": {"242": [18258, 18336], "243": [18367, 18402]}, "Gyro2CLPPool._exitExactBPTInForTokensOut": {"270": [24181, 24213]}, "Gyro2CLPPool._getAllBalances": {"179": [4677, 4704], "180": [4714, 4781], "181": [4791, 4859]}, "Gyro2CLPPool._getDueProtocolFeeAmounts": {"160": [26347, 26387], "161": [26692, 26750]}, "Gyro2CLPPool._getFeesMetadata": {"233": [27386, 27695]}, "Gyro2CLPPool._getPrice": {"182": [6941, 7035]}, "Gyro2CLPPool._getScaledTokenBalance": {"246": [4035, 4059], "247": [4145, 4185]}, "Gyro2CLPPool._getVirtualParameters": {"221": [5616, 5689], "222": [5699, 5773]}, "Gyro2CLPPool._onExitPool": {"150": [21219, 21257], "151": [21272, 21327], "152": [21785, 21897], "153": [22098, 22153], "154": [22464, 22498], "155": [22631, 22681]}, "Gyro2CLPPool._onInitializePool": {"202": [13769, 13839], "203": [13916, 13972], "204": [13982, 14006], "205": [14610, 14645], "206": [14656, 14688]}, "Gyro2CLPPool._onJoinPool": {"173": [16853, 16891], "174": [17034, 17095], "175": [17540, 17652], "176": [17775, 17825]}, "Gyro2CLPPool._onSwapGivenIn": {"190": [10368, 10503]}, "Gyro2CLPPool._onSwapGivenOut": {"192": [10846, 10981]}, "Gyro2CLPPool._payFeesBpt": {"268": [27000, 27039], "269": [27138, 27180]}, "Gyro2CLPPool._scalingFactor": {"131": [29449, 29477], "132": [29491, 29522], "133": [29553, 29581], "134": [29595, 29626], "135": [29687, 29748], "136": [29758, 29778]}, "Gyro2CLPPool._sqrtParameters": {"168": [2940, 2984], "169": [2994, 3039], "236": [3178, 3220]}, "Gyro2CLPPool._virtualParameters": {"267": [5983, 6178]}, "Gyro2CLPPool.calculateCurrentValues": {"21": [11525, 11588], "22": [11598, 11664], "23": [11674, 11754]}, "Gyro2CLPPool.getActualSupply": {"61": [28483, 28528]}, "Gyro2CLPPool.getInvariant": {"84": [6450, 6529]}, "Gyro2CLPPool.getInvariantDivActualSupply": {"36": [28985, 29023]}, "Gyro2CLPPool.getPrice": {"69": [7499, 7560], "70": [7570, 7605]}, "Gyro2CLPPool.getSqrtParameters": {"40": [2798, 2822]}, "Gyro2CLPPool.getTokenRates": {"38": [30490, 30581], "39": [30591, 30682]}, "Gyro2CLPPool.getVirtualParameters": {"66": [5271, 5303], "67": [5313, 5409]}, "Gyro2CLPPool.onSwap": {"72": [8102, 8165], "73": [8175, 8241], "74": [8981, 9059], "75": [9270, 9325], "76": [9356, 9420], "77": [9629, 9684], "78": [9904, 9962]}}, "41": {}, "43": {"CappedLiquidity._ensureCap": {"244": [2330, 2411], "245": [2421, 2499]}, "CappedLiquidity.capParams": {"20": [1723, 1740]}, "CappedLiquidity.setCapManager": {"3": [1500, 1550], "4": [1560, 1584], "5": [1594, 1629]}, "CappedLiquidity.setCapParams": {"47": [1828, 1878], "48": [1888, 1929], "49": [1940, 1981], "50": [1991, 2038], "51": [2048, 2087], "52": [2098, 2131]}}, "44": {"ExtensibleWeightedPool2Tokens._downscaleDown": {"191": [36578, 36630]}, "ExtensibleWeightedPool2Tokens._downscaleDownArray": {"156": [36909, 36978], "157": [36988, 37058]}, "ExtensibleWeightedPool2Tokens._downscaleUp": {"193": [37370, 37420]}, "ExtensibleWeightedPool2Tokens._downscaleUpArray": {"177": [37695, 37762], "178": [37772, 37840]}, "ExtensibleWeightedPool2Tokens._getAuthorizer": {"199": [38301, 38334]}, "ExtensibleWeightedPool2Tokens._isOwnerOnlyAction": {"266": [7177, 7347]}, "ExtensibleWeightedPool2Tokens._normalizedWeights": {"209": [7787, 7834], "210": [7844, 7892], "211": [7902, 7926], "265": [8030, 8085]}, "ExtensibleWeightedPool2Tokens._queryAction": {"158": [42989, 43012], "159": [43321, 43350]}, "ExtensibleWeightedPool2Tokens._setSwapFeePercentage": {"126": [6748, 6835], "127": [6845, 6932], "128": [6943, 7004], "129": [7014, 7062]}, "ExtensibleWeightedPool2Tokens._upscale": {"137": [35794, 35846]}, "ExtensibleWeightedPool2Tokens._upscaleArray": {"170": [36113, 36182], "171": [36192, 36262]}, "ExtensibleWeightedPool2Tokens.getLastInvariant": {"71": [8168, 8189]}, "ExtensibleWeightedPool2Tokens.getMiscData": {"27": [5993, 6031], "28": [6041, 6083], "29": [6093, 6165], "30": [6175, 6211], "31": [6221, 6261], "32": [6271, 6319]}, "ExtensibleWeightedPool2Tokens.getNormalizedWeights": {"102": [7595, 7622]}, "ExtensibleWeightedPool2Tokens.getPoolId": {"18": [5415, 5429]}, "ExtensibleWeightedPool2Tokens.getRate": {"37": [34387, 34444]}, "ExtensibleWeightedPool2Tokens.getSwapFeePercentage": {"33": [6404, 6440]}, "ExtensibleWeightedPool2Tokens.onExitPool": {"42": [21882, 21905], "43": [22311, 22347], "44": [22459, 22490], "45": [22500, 22542], "46": [22553, 22595]}, "ExtensibleWeightedPool2Tokens.onJoinPool": {"89": [12442, 12524], "90": [12819, 12877], "91": [12891, 12932], "92": [12946, 13001], "93": [13088, 13116], "94": [13206, 13246], "95": [13277, 13300], "96": [13315, 13594], "97": [13708, 13748], "98": [13835, 13863], "99": [13962, 14004]}, "ExtensibleWeightedPool2Tokens.queryExit": {"34": [31945, 32000], "35": [32011, 32148]}, "ExtensibleWeightedPool2Tokens.queryJoin": {"62": [30554, 30609], "63": [30620, 30755]}, "ExtensibleWeightedPool2Tokens.setPaused": {"6": [7481, 7499]}, "ExtensibleWeightedPool2Tokens.setSwapFeePercentage": {"17": [6619, 6659]}}, "45": {"LocallyPausable.changePauseManager": {"54": [921, 983], "55": [993, 1021], "56": [1031, 1091]}, "LocallyPausable.pause": {"57": [1186, 1241], "58": [1251, 1272], "59": [1282, 1302]}, "LocallyPausable.unpause": {"24": [1399, 1454], "25": [1464, 1486], "26": [1496, 1518]}}, "46": {"TemporarilyPausable._ensureNotPaused": {"125": [4024, 4063]}, "TemporarilyPausable._getBufferPeriodEndTime": {"116": [4836, 4863]}, "TemporarilyPausable._getPauseWindowEndTime": {"115": [4721, 4747]}, "TemporarilyPausable._isNotPaused": {"114": [4464, 4526]}, "TemporarilyPausable._setPaused": {"110": [3623, 3704], "111": [3735, 3818], "112": [3839, 3855], "113": [3865, 3896]}, "TemporarilyPausable.getPausedState": {"8": [3126, 3150], "9": [3160, 3205], "10": [3215, 3262]}}, "47": {}, "49": {}, "50": {}, "51": {"GyroConfigHelpers._getPoolSetting": {"288": [1253, 1295], "289": [1446, 1484], "290": [1505, 1541]}, "GyroConfigHelpers.getProtocolFeeGyroPortionForPool": {"272": [623, 726]}, "GyroConfigHelpers.getSwapFeePercForPool": {"271": [333, 433]}}, "52": {}, "53": {"_grequire": {"274": [469, 488]}, "_grevert": {"294": [973, 1002]}}, "54": {"GyroFixedPoint.add": {"162": [1371, 1407]}, "GyroFixedPoint.complement": {"194": [9394, 9426]}, "GyroFixedPoint.divDown": {"163": [3452, 3489], "164": [3536, 3544], "165": [3645, 3681], "166": [3718, 3738]}, "GyroFixedPoint.divUp": {"195": [4055, 4092], "196": [4139, 4147], "197": [4248, 4299], "198": [4633, 4665]}, "GyroFixedPoint.mulDown": {"219": [1894, 1930], "220": [1951, 1971]}, "GyroFixedPoint.mulUp": {"186": [2369, 2405], "187": [2458, 2466], "188": [2784, 2816]}, "GyroFixedPoint.sub": {"189": [1627, 1663]}}, "55": {"GyroPoolMath._calcAllTokensInGivenExactBptOut": {"291": [2126, 2168], "292": [2238, 2294], "293": [2219, 2222]}, "GyroPoolMath._calcProtocolFees": {"234": [5581, 5594], "235": [6579, 6610]}, "GyroPoolMath._calcTokensOutGivenExactBptIn": {"285": [3658, 3701], "286": [3771, 3831], "287": [3752, 3755]}, "GyroPoolMath._intLog2Halved": {"314": [10080, 10089], "315": [10103, 10110], "316": [10162, 10170], "317": [10184, 10191], "318": [10243, 10251], "319": [10265, 10272], "320": [10324, 10332], "321": [10346, 10352], "322": [10403, 10410], "323": [10424, 10430], "324": [10481, 10488], "325": [10502, 10508], "326": [10580, 10586]}, "GyroPoolMath._makeInitialGuess": {"295": [8458, 8537], "296": [8603, 8624], "297": [8688, 8699], "298": [8763, 8784], "299": [8848, 8859], "300": [8923, 8944], "301": [9008, 9019], "302": [9083, 9104], "303": [9168, 9179], "304": [9243, 9263], "305": [9328, 9339], "306": [9404, 9424], "307": [9489, 9500], "308": [9565, 9585], "309": [9650, 9661], "310": [9726, 9746], "311": [9811, 9822], "312": [9887, 9907], "313": [9935, 9947]}, "GyroPoolMath._sqrt": {"275": [6847, 6855], "276": [6951, 7011], "277": [7021, 7081], "278": [7091, 7151], "279": [7161, 7221], "280": [7231, 7291], "281": [7301, 7361], "282": [7371, 7431], "283": [7582, 7709]}, "GyroPoolMath.liquidityInvariantUpdate": {"231": [11409, 11443], "232": [11659, 11693]}}, "6": {}, "8": {}, "9": {"WeightedPool2TokensMiscData.logInvariant": {"143": [2316, 2362]}, "WeightedPool2TokensMiscData.logTotalSupply": {"144": [2532, 2581]}, "WeightedPool2TokensMiscData.oracleEnabled": {"147": [3221, 3267]}, "WeightedPool2TokensMiscData.oracleIndex": {"146": [3019, 3065]}, "WeightedPool2TokensMiscData.oracleSampleCreationTimestamp": {"145": [2786, 2852]}, "WeightedPool2TokensMiscData.setSwapFeePercentage": {"104": [5197, 5270]}, "WeightedPool2TokensMiscData.swapFeePercentage": {"148": [3424, 3477]}}}}, "dependencies": ["node_modules/@balancer-labs/Authentication", "node_modules/@balancer-labs/BalancerPoolToken", "node_modules/@balancer-labs/BasePoolAuthorization", "CappedLiquidity", "node_modules/@balancer-labs/EIP712", "node_modules/@balancer-labs/ERC20", "node_modules/@balancer-labs/ERC20Permit", "node_modules/@balancer-labs/Errors", "ExtensibleWeightedPool2Tokens", "node_modules/@balancer-labs/FixedPoint", "Gyro2CLPMath", "Gyro2CLPPoolErrors", "GyroConfigHelpers", "GyroConfigKeys", "GyroErrors", "GyroFixedPoint", "GyroPoolMath", "node_modules/@balancer-labs/IAsset", "node_modules/@balancer-labs/IAuthentication", "node_modules/@balancer-labs/IAuthorizer", "node_modules/@balancer-labs/IBasePool", "ICappedLiquidity", "node_modules/@balancer-labs/IERC20", "node_modules/@balancer-labs/IERC20Permit", "node_modules/@balancer-labs/IFlashLoanRecipient", "IGyroConfig", "ILocallyPausable", "node_modules/@balancer-labs/IMinimalSwapInfoPool", "node_modules/@balancer-labs/IPoolSwapStructs", "node_modules/@balancer-labs/IProtocolFeesCollector", "node_modules/@balancer-labs/IRateProvider", "node_modules/@balancer-labs/ISignaturesValidator", "node_modules/@balancer-labs/ITemporarilyPausable", "node_modules/@balancer-labs/IVault", "node_modules/@balancer-labs/IWETH", "node_modules/@balancer-labs/InputHelpers", "LocallyPausable", "node_modules/@balancer-labs/LogExpMath", "node_modules/@balancer-labs/Math", "node_modules/@balancer-labs/SafeMath", "TemporarilyPausable", "node_modules/@balancer-labs/WeightedMath", "node_modules/@balancer-labs/WeightedPool2TokensMiscData", "node_modules/@balancer-labs/WeightedPoolUserDataHelpers", "node_modules/@balancer-labs/WordCodec"], "deployedBytecode": "", "deployedSourceMap": "1004:29687:40:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2138:81:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4172:164;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1437:199:43:-;;;;;;:::i;:::-;;:::i;:::-;;7417:89:44;;;;;;:::i;:::-;;:::i;3181:98:26:-;;;:::i;:::-;;;;;;;:::i;2906:363:46:-;;;:::i;:::-;;;;;;;;;:::i;2657:655:1:-;;;;;;:::i;:::-;;:::i;3040:81:26:-;;;:::i;:::-;;;;;;;:::i;2359:113:27:-;;;:::i;6510:156:44:-;;;;;;:::i;:::-;;:::i;5345:91::-;;;:::i;5584:211:26:-;;;;;;:::i;:::-;;:::i;1642:105:43:-;;;:::i;:::-;;;;;;;:::i;11038:723:40:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;1352:173:45:-;;;:::i;1416:29:40:-;;;:::i;:::-;;;;;;;:::i;5638:688:44:-;;;:::i;:::-;;;;;;;;;;;;:::i;6332:115::-;;;:::i;31631:770::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;28640:390:40:-;;;:::i;1532:44::-;;;:::i;34240:211:44:-;;;:::i;1073:34:43:-;;;:::i;30404:285:40:-;;;:::i;:::-;;;;;;;;:::i;2717:112::-;;;:::i;:::-;;;;;;;:::i;3337:117:26:-;;;;;;:::i;:::-;;:::i;21542:1060:44:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1753:385:43:-;;;;;;:::i;:::-;;:::i;2127:108:27:-;;;;;;:::i;:::-;;:::i;790:308:45:-;;;;;;:::i;:::-;;:::i;1482:44:40:-;;;:::i;1141:168:45:-;;;:::i;2487:430:11:-;;;;;;:::i;:::-;;:::i;28260:275:40:-;;;:::i;30240:768:44:-;;;;;;:::i;:::-;;:::i;1776:80:4:-;;;:::i;1879:79:1:-;;;:::i;4999:417:40:-;;;:::i;:::-;;;;;;;:::i;2332:85:26:-;;;:::i;7239:373:40:-;;;:::i;8098:98:44:-;;;:::i;7637:2342:40:-;;;;;;:::i;:::-;;:::i;3438:429:1:-;;;;;;:::i;:::-;;:::i;3657:170:26:-;;;;;;:::i;:::-;;:::i;1862:101:4:-;;;:::i;488:27:45:-;;;:::i;6263:273:40:-;;;:::i;1313:753:27:-;;;;;;:::i;:::-;;:::i;11895:2126:44:-;;;;;;:::i;:::-;;:::i;2260:254:1:-;;;;;;:::i;:::-;;:::i;7512:117:44:-;;;:::i;2138:81:26:-;2207:5;2200:12;;;;;;;;;;;;;-1:-1:-1;;2200:12:26;;;;;;;;;;;;;;;;;;;;;;;;;;2175:13;;2200:12;;2207:5;;2200:12;;;2207:5;2200:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2138:81;:::o;4172:164::-;4255:4;4271:37;4280:10;4292:7;4301:6;4271:8;:37::i;:::-;-1:-1:-1;4325:4:26;4172:164;;;;;:::o;1437:199:43:-;1522:10;;1534:15;;;;;;;;;;;;-1:-1:-1;;;1534:15:43;;;;;-1:-1:-1;;;;;1522:10:43;1508;:24;1500:50;;;;-1:-1:-1;;;1500:50:43;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;1560:10:43;:24;;-1:-1:-1;;;;;;1560:24:43;-1:-1:-1;;;;;1560:24:43;;;;;1599:30;;;;;;1560:24;;1599:30;:::i;:::-;;;;;;;;1437:199;:::o;7417:89:44:-;2156:21:11;:19;:21::i;:::-;7481:18:44::1;7492:6;7481:10;:18::i;:::-;7417:89:::0;:::o;3181:98:26:-;3260:12;;3181:98;:::o;2906:363:46:-;3009:11;3034:26;3074:27;3136:14;:12;:14::i;:::-;3135:15;3126:24;;3181;:22;:24::i;:::-;3160:45;;3237:25;:23;:25::i;:::-;3215:47;;2906:363;;;:::o;2657:655:1:-;2785:4;2801:24;2828:29;2838:6;2846:10;2828:9;:29::i;:::-;2801:56;-1:-1:-1;2867:101:1;-1:-1:-1;;;;;2876:20:1;;:10;:20;;:50;;;2920:6;2900:16;:26;;2876:50;9174:3:12;2867:8:1;:101::i;:::-;2979:36;2989:6;2997:9;3008:6;2979:9;:36::i;:::-;-1:-1:-1;;;;;3030:20:1;;:10;:20;;;;:55;;-1:-1:-1;;;3054:31:1;;;3030:55;3026:258;;;3218:55;3227:6;3235:10;3266:6;3247:16;:25;3218:8;:55::i;:::-;-1:-1:-1;3301:4:1;;2657:655;-1:-1:-1;;;;2657:655:1:o;3040:81:26:-;3105:9;;;;3040:81;:::o;2359:113:27:-;2419:7;2445:20;:18;:20::i;:::-;2438:27;;2359:113;:::o;6510:156:44:-;2156:21:11;:19;:21::i;:::-;2722:18:46::1;:16;:18::i;:::-;6619:40:44::2;6641:17;6619:21;:40::i;5345:91::-:0;5422:7;5345:91;:::o;5584:211:26:-;5697:10;5672:4;5718:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;5718:32:26;;;;;;;;;;5672:4;;5688:79;;5718:32;;:48;;5755:10;5718:36;:48::i;:::-;5688:8;:79::i;1642:105:43:-;1695:16;;:::i;:::-;-1:-1:-1;1723:17:43;;;;;;;;1730:10;1723:17;;;;;;;;;;;-1:-1:-1;;;;;1723:17:43;;;;;-1:-1:-1;;;1723:17:43;;-1:-1:-1;;;;;1723:17:43;;;;;;;;;1642:105::o;11038:723:40:-;11257:24;11295:22;11331:23;11379:28;11410:31;11425:15;11410:14;:31::i;:::-;11379:62;;11451:29;11483:32;11499:15;11498:16;11483:14;:32::i;:::-;11451:64;;11542:46;11551:14;11567:20;11542:8;:46::i;:::-;11525:63;;11616:48;11625:15;11642:21;11616:8;:48::i;:::-;11598:66;;11681:73;11705:14;11721:15;11738;11681:23;:73::i;:::-;11674:80;;;;;;;;11038:723;;;;;;;:::o;1352:173:45:-;1407:12;;1435:18;;;;;;;;;;;;-1:-1:-1;;;1435:18:45;;;;;-1:-1:-1;;;;;1407:12:45;1423:10;1407:26;1399:55;;;;-1:-1:-1;;;1399:55:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1464:22;1480:5;1464:15;:22::i;:::-;1501:17;;;;;;;1352:173::o;1416:29:40:-;;;-1:-1:-1;;;;;1416:29:40;;:::o;5638:688:44:-;5721:19;5754:21;5789:37;5840:19;5873:18;5905:25;5955:16;5974:9;;5955:28;;6008:23;:8;:21;:23::i;:::-;5993:38;;6058:25;:8;:23;:25::i;:::-;6041:42;;6125:40;:8;:38;:40::i;:::-;6093:72;;6189:22;:8;:20;:22::i;:::-;6175:36;;6237:24;:8;:22;:24::i;:::-;6221:40;;6291:28;:8;:26;:28::i;:::-;6271:48;;5638:688;;;;;;;:::o;6332:115::-;6385:7;6411:29;:9;;:27;:29::i;31631:770::-;31891:13;31906:27;31945:55;31981:8;:15;31998:1;31945:35;:55::i;:::-;32011:137;32024:6;32032;32040:9;32051:8;32061:15;32078:25;32105:8;32115:11;32128:19;32011:12;:137::i;:::-;31631:770;;;;;;;;;;:::o;28640:390:40:-;28702:7;28721:17;28741:14;:12;:14::i;:::-;28721:34;;28765:14;28782:13;:11;:13::i;:::-;28765:30;;28806:16;28824:20;28852:52;28878:14;;28894:9;28852:25;:52::i;:::-;-1:-1:-1;28805:99:40;;-1:-1:-1;28805:99:40;-1:-1:-1;28914:20:40;;-1:-1:-1;28937:38:40;28805:99;28937:20;:6;28805:99;28937:10;:20::i;:::-;:24;;:38::i;:::-;28914:61;-1:-1:-1;28992:31:40;:9;28914:61;28992:17;:31::i;:::-;28985:38;;;;;;;28640:390;:::o;1532:44::-;;;:::o;34240:211:44:-;34280:7;34394:50;34430:13;:11;:13::i;:::-;34394:27;34403:14;:12;:14::i;:::-;34419:1;34394:8;:27::i;:::-;:35;;:50::i;1073:34:43:-;;;-1:-1:-1;;;;;1073:34:43;;:::o;30404:285:40:-;30450:13;;-1:-1:-1;;;;;30506:13:40;30498:36;:83;;795:4:54;30498:83:40;;;30537:13;-1:-1:-1;;;;;30537:21:40;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;30490:91;-1:-1:-1;;;;;;30607:13:40;30599:36;:83;;795:4:54;30599:83:40;;;30638:13;-1:-1:-1;;;;;30638:21:40;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;30591:91;;30404:285;;:::o;2717:112::-;2769:17;;:::i;:::-;2805;:15;:17::i;3337:117:26:-;-1:-1:-1;;;;;3429:18:26;;3403:7;3429:18;;;;;;;;;;;3337:117;;;;:::o;21542:1060:44:-;21836:16;21854;21819:6;3135:68;3166:10;:8;:10::i;:::-;-1:-1:-1;;;;;3144:33:44;:10;:33;5392:3:12;3135:8:44;:68::i;:::-;3213:55;3232:11;:9;:11::i;:::-;3222:6;:21;10241:3:12;3213:8:44;:55::i;:::-;21882:23:::1;21896:8;21882:13;:23::i;:::-;21917:19;21938:27:::0;21967:38:::1;22009:196;22034:6;22054;22074:9;22097:8;22119:15;22148:25;22187:8;22009:11;:196::i;:::-;21916:289;;;;;;22311:36;22327:6;22335:11;22311:15;:36::i;:::-;22459:31;22479:10;22459:19;:31::i;:::-;22500:42;22520:21;22500:19;:42::i;:::-;22561:10:::0;;;;-1:-1:-1;21542:1060:44;-1:-1:-1;;;;;;;;;;21542:1060:44:o;1753:385:43:-;1850:10;;1862:15;;;;;;;;;;;;-1:-1:-1;;;1862:15:43;;;;;-1:-1:-1;;;;;1850:10:43;1836;:24;1828:50;;;;-1:-1:-1;;;1828:50:43;;;;;;;;:::i;:::-;-1:-1:-1;1896:10:43;:21;1919:9;;;;;;;;;;;;-1:-1:-1;;;1919:9:43;;;;;1896:21;;1888:41;;;;-1:-1:-1;;;1888:41:43;;;;;;;;:::i;:::-;-1:-1:-1;1964:17:43;;1940:10;:41;;2018:20;;;;2071:16;;;;;-1:-1:-1;;1940:41:43;;;;;;;;;;-1:-1:-1;;1991:47:43;1940:41;-1:-1:-1;;;;;1991:47:43;;;;;;;;-1:-1:-1;;;;;2048:39:43;;;-1:-1:-1;;;2048:39:43;;;;;;;;2103:28;;;;;;;:::i;2127:108:27:-;-1:-1:-1;;;;;2214:14:27;2188:7;2214:14;;;:7;:14;;;;;;;2127:108::o;790:308:45:-;899:12;;964:18;;;;;;;;;;;;-1:-1:-1;;;964:18:45;;;;-1:-1:-1;;;;;899:12:45;;;;952:10;929:33;;921:62;;;;-1:-1:-1;;;921:62:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;921:62:45;;;;;;;;;;;;;;;;;-1:-1:-1;993:12:45;:28;;-1:-1:-1;;;;;;993:28:45;-1:-1:-1;;;;;993:28:45;;;;;;;;;1036:55;;;;;;;;;;;;;;;;;;;;;;;;;;;790:308;;:::o;1482:44:40:-;;;:::o;1141:168:45:-;1194:12;;1222:18;;;;;;;;;;;;-1:-1:-1;;;1222:18:45;;;;;-1:-1:-1;;;;;1194:12:45;1210:10;1194:26;1186:55;;;;-1:-1:-1;;;1186:55:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1186:55:45;;;;;;;;;;;;;;;;;;1251:21;1267:4;1251:15;:21::i;:::-;1287:15;;;;;;;1141:168::o;2487:430:11:-;2859:50;;;2876:22;2859:50;;;;;;;;-1:-1:-1;;;;;;2859:50:11;;;;;;;;;;;;;;;;;;;;;;;;2849:61;;;;;;2487:430::o;28260:275:40:-;28310:7;28329:14;28346:13;:11;:13::i;:::-;28329:30;;28370:16;28388:20;28416:57;28442:14;;28458;:12;:14::i;:::-;28416:25;:57::i;:::-;-1:-1:-1;28369:104:40;;-1:-1:-1;28369:104:40;-1:-1:-1;28490:38:40;;-1:-1:-1;28369:104:40;28490:20;:6;28369:104;28490:10;:20::i;:38::-;28483:45;;;;;28260:275;:::o;30240:768:44:-;30500:14;30516:26;30554:55;30590:8;:15;30607:1;30554:35;:55::i;:::-;30620:135;30633:6;30641;30649:9;30660:8;30670:15;30687:25;30714:8;30724:11;30737:17;30620:12;:135::i;1776:80:4:-;1843:6;1776:80;:::o;1879:79:1:-;1945:6;1879:79;:::o;4999:417:40:-;5054:30;5096:25;5124:17;:15;:17::i;:::-;5287:16;;;5301:1;5287:16;;;;;;;;5096:45;;-1:-1:-1;5287:16:40;5301:1;5287:16;;;;;;;;;;-1:-1:-1;5287:16:40;5271:32;;5354:55;5378:8;5387:1;5378:11;;;;;;;;;;;;;;5391:8;5400:1;5391:11;;;;;;;;;;;;;;5404:4;5354:23;:55::i;:::-;5313:96;;;5316:13;5330:1;5316:16;;;;;;;;;;;;;5334:13;5348:1;5334:16;;;;;;;;;;;;;;;;;5313:96;;;;;-1:-1:-1;4999:417:40;:::o;2332:85:26:-;2403:7;2396:14;;;;;;;;;;;;;-1:-1:-1;;2396:14:26;;;;;;;;;;;;;;;;;;;;;;;;;;2371:13;;2396:14;;2403:7;;2396:14;;;2403:7;2396:14;;;;;;;;;;;;;;;;;;;;;;;;7239:373:40;7282:17;7311:25;7339:17;:15;:17::i;:::-;7311:45;;7367:17;7386:21;7409;7434:55;7458:8;7467:1;7458:11;;;;;;;;;;;;;;7471:8;7480:1;7471:11;;;;;;;7434:55;7366:123;;;;;;7511:49;7521:8;7531:13;7546;7511:9;:49::i;:::-;7499:61;;7582:23;7595:9;7582:12;:23::i;:::-;7570:35;;7239:373;;;;;:::o;8098:98:44:-;8175:14;;8098:98;:::o;7637:2342:40:-;7833:7;2722:18:46;:16;:18::i;:::-;7808:7:40::1;:14;;;3135:68:44;3166:10;:8;:10::i;3135:68::-;3213:55;3232:11;:9;:11::i;3213:55::-;7875:15:40::2;::::0;::::2;::::0;7894:7:::2;-1:-1:-1::0;;;;;7875:26:40;;::::2;::::0;::::2;;7852:20;7943:31;7875:26:::0;7943:14:::2;:31::i;:::-;7912:62;;7984:29;8016:32;8032:15;8031:16;8016:14;:32::i;:::-;7984:64;;8119:46;8128:14;8144:20;8119:8;:46::i;:::-;8102:63;;8193:48;8202:15;8219:21;8193:8;:48::i;:::-;8175:66;;8331:24;8357:22:::0;8381:23:::2;8408:119;8445:14;8473:15;8502;8408:23;:119::i;:::-;8330:197:::0;;-1:-1:-1;8330:197:40;-1:-1:-1;8330:197:40;-1:-1:-1;8558:24:40::2;8542:12:::0;;:40:::2;::::0;::::2;;;;;;;8538:1435;;;8801:17;8821:44;8842:22;:20;:22::i;:::-;8821:14;::::0;::::2;::::0;;:20:::2;:44::i;:::-;8801:64;;8998:61;9007:29;9026:9;9007:7;:14;;;:18;;:29;;;;:::i;:::-;9038:20;8998:8;:61::i;:::-;8981:14;::::0;::::2;:78:::0;9074:17:::2;9094:89;8981:7:::0;9118:14;9134:15;9151:14;9167:15;9094:14:::2;:89::i;:::-;9074:109;;9277:48;9292:9;9303:21;9277:14;:48::i;:::-;9270:55;;;;;;;;;;;;8538:1435;9373:47;9382:7;:14;;;9398:21;9373:8;:47::i;:::-;9356:14;::::0;::::2;:64:::0;9435:16:::2;9454:90;9356:7:::0;9479:14;9495:15;9512:14;9528:15;9454::::2;:90::i;:::-;9435:109;;9640:44;9653:8;9663:20;9640:12;:44::i;:::-;9629:55;;9911:51;9926:35;:22;:20;:22::i;:::-;:33;:35::i;:::-;9911:8:::0;;:14:::2;:51::i;:::-;9904:58;;;;;;;;;3278:1:44;2750::46::1;7637:2342:40::0;;;;;:::o;3438:429:1:-;3523:4;3539:24;3566:30;3576:10;3588:7;3566:9;:30::i;:::-;3539:57;;3621:16;3611:6;:26;3607:232;;3653:32;3662:10;3674:7;3683:1;3653:8;:32::i;:::-;3607:232;;;3772:56;3781:10;3793:7;3821:6;3802:16;:25;3772:8;:56::i;:::-;-1:-1:-1;3856:4:1;;3438:429;-1:-1:-1;;;3438:429:1:o;3657:170:26:-;3743:4;3759:40;3769:10;3781:9;3792:6;3759:9;:40::i;1862:101:4:-;1910:11;1940:16;:14;:16::i;488:27:45:-;;;-1:-1:-1;;;;;488:27:45;;:::o;6263:273:40:-;6317:7;6336:25;6364:17;:15;:17::i;:::-;6336:45;;6391:28;6422:17;:15;:17::i;:::-;6391:48;-1:-1:-1;6457:72:40;6490:8;6391:48;6511:1;6500:13;;;;;6515:10;6526:1;6515:13;;;;;6457:32;:72::i;:::-;6450:79;;;;6263:273;:::o;1313:753:27:-;1575:60;1603:8;1584:15;:27;;5606:3:12;1575:8:27;:60::i;:::-;-1:-1:-1;;;;;1662:14:27;;;1646:13;1662:14;;;:7;:14;;;;;;;;;1717:68;;1728:16;1717:68;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1717:68:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;1707:79;;;;;;;;;1812:28;1707:79;1812:16;:28::i;:::-;1797:43;;1851:14;1868:24;1878:4;1884:1;1887;1890;1868:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1868:24:27;;-1:-1:-1;;1868:24:27;;;-1:-1:-1;1902:79:27;;-1:-1:-1;;;;;;1912:20:27;;;;;;1911:43;;-1:-1:-1;;;;;;1938:15:27;;;;;;;1911:43;10474:3:12;1902:8:27;:79::i;:::-;-1:-1:-1;;;;;1992:14:27;;;;;;:7;:14;;;;;-1:-1:-1;2009:9:27;;1992:26;;2028:31;1992:14;2044:7;2053:5;2028:8;:31::i;:::-;1313:753;;;;;;;;;;;:::o;11895:2126:44:-;12203:26;12231:38;12172:6;3135:68;3166:10;:8;:10::i;3135:68::-;3213:55;3232:11;:9;:11::i;3213:55::-;2722:18:46::1;:16;:18::i;:::-;12374:20:44::2;12408:13;:11;:13::i;:::-;12404:1611;;12470:54;12488:6;12496;12504:9;12515:8;12470:17;:54::i;:::-;12442:82:::0;-1:-1:-1;12442:82:44;-1:-1:-1;12819:58:44::2;1614:3;12828:28:::0;::::2;;5338:3:12;12819:8:44;:58::i;:::-;12891:41;12915:1;1614:3;12891:15;:41::i;:::-;12946:55;12962:9;1614:3;12973:12;:27;12946:15;:55::i;:::-;13088:28;13106:9;13088:17;:28::i;:::-;13230:16;::::0;;13244:1:::2;13230:16:::0;;;;;::::2;::::0;;;;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;;::::0;-1:-1:-1;13230:16:44::2;13206:40;;12404:1611;;;13277:23;13291:8;13277:13;:23::i;:::-;13366:228;13395:6;13419;13443:9;13470:8;13496:15;13529:25;13572:8;13366:11;:228::i;:::-;13315:279:::0;;-1:-1:-1;13315:279:44;-1:-1:-1;13315:279:44;-1:-1:-1;13708:40:44::2;13724:9:::0;13315:279;13708:15:::2;:40::i;:::-;13835:28;13853:9;13835:17;:28::i;:::-;13962:42;13982:21;13962:19;:42::i;:::-;2750:1:46;11895:2126:44::0;;;;;;;;;;;:::o;2260:254:1:-;2341:7;2383:10;:8;:10::i;:::-;-1:-1:-1;;;;;2364:30:1;;;;;;2360:148;;;-1:-1:-1;;;2410:18:1;;2360:148;2466:31;2482:5;2489:7;2466:15;:31::i;:::-;2459:38;;;;7512:117:44;7567:16;7602:20;:18;:20::i;1135:274:18:-;1345:5;1369:33;1345:5;1369:19;:33::i;:::-;1135:274;;:::o;5083:194:9:-;5178:7;5204:66;:4;5222:18;2155:2;5204:17;:66::i;:::-;5197:73;5083:194;-1:-1:-1;;;5083:194:9:o;948:166:23:-;1006:7;1025:37;1039:1;1034;:6;;4370:1:12;1025:8:23;:37::i;:::-;-1:-1:-1;1084:5:23;;;948:166::o;6887:269:20:-;2598:11;7074:18;;7072:21;7056:37;;;;7133:15;;7111:38;;6887:269::o;9345:213:26:-;-1:-1:-1;;;;;9468:18:26;;;;;;;-1:-1:-1;9468:18:26;;;;;;;;:27;;;;;;;;;;;;;:36;;;9519:32;;;;;;;;;;;;;;;;;9345:213;;;:::o;2300:181:11:-;2355:16;2374:20;-1:-1:-1;;;;;;2386:7:11;;;2374:11;:20::i;:::-;2355:39;;2404:70;2413:33;2425:8;2435:10;2413:11;:33::i;:::-;8353:3:12;2404:8:11;:70::i;3545:358:46:-;3601:6;3597:232;;;3623:81;3650:24;:22;:24::i;:::-;3632:15;:42;8455:3:12;3623:8:46;:81::i;:::-;3597:232;;;3735:83;3762:25;:23;:25::i;:::-;3744:15;:43;9885:3:12;3735:8:46;:83::i;:::-;3839:7;:16;;-1:-1:-1;;3839:16:46;;;;;;;;;;3870:26;;;;;;;;;;;;;;;;;3545:358;:::o;4296:237::-;4343:4;4489:25;:23;:25::i;:::-;4471:15;:43;:55;;;-1:-1:-1;;4519:7:46;;;;4518:8;;4296:237::o;4646:108::-;4728:19;4646:108;:::o;4760:110::-;4843:20;4760:110;:::o;866:101:12:-;935:9;930:34;;946:18;954:9;946:7;:18::i;7068:559:26:-;7195:71;-1:-1:-1;;;;;7204:20:26;;;;8770:3:12;7195:8:26;:71::i;:::-;7276:72;-1:-1:-1;;;;;7285:23:26;;;;8838:3:12;7276:8:26;:72::i;:::-;7359:47;7380:6;7388:9;7399:6;7359:20;:47::i;:::-;-1:-1:-1;;;;;7437:17:26;;:9;:17;;;;;;;;;;;:68;;7459:6;9316:3:12;7437:21:26;:68::i;:::-;-1:-1:-1;;;;;7417:17:26;;;:9;:17;;;;;;;;;;;:88;;;;7538:20;;;;;;;:32;;7563:6;7538:24;:32::i;:::-;-1:-1:-1;;;;;7515:20:26;;;:9;:20;;;;;;;;;;;;:55;;;;7585:35;;;;;;;7515:20;;7585:35;;;;;;;;;;;;;7068:559;;;:::o;2386:188:25:-;2447:7;2494:10;2506:12;2520:15;2537:13;:11;:13::i;:::-;2483:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2560:4;2483:83;;;;;;;;;;;;;;;;;;;;;;;;2473:94;;;;;;2386:188;-1:-1:-1;2386:188:25:o;3972:98:46:-;4024:39;4033:14;:12;:14::i;:::-;8397:3:12;4024:8:46;:39::i;:::-;3972:98::o;6672:397:44:-;6748:87;1722:4;6757:17;:45;;5289:3:12;6748:8:44;:87::i;:::-;6845;1795:4;6854:17;:45;;5228:3:12;6845:8:44;:87::i;:::-;6955:9;;:49;;6986:17;6955:30;:49::i;:::-;6943:9;:61;7019:43;;;;;;7044:17;;7019:43;:::i;915:167:30:-;973:7;1004:5;;;1019:37;1028:6;;;;973:7;1019:8;:37::i;29268:517:40:-;29337:7;29356:26;29392:21;29427:6;29423:214;;;-1:-1:-1;29464:13:40;;-1:-1:-1;29507:15:40;29423:214;;;-1:-1:-1;29568:13:40;;-1:-1:-1;29611:15:40;29423:214;-1:-1:-1;;;;;29650:35:40;;;29646:102;;29703:45;29725:12;-1:-1:-1;;;;;29725:20:40;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29703:13;;:21;:45::i;:::-;29687:61;29765:13;-1:-1:-1;;;;29268:517:40:o;35695:158:44:-;35775:7;35801:45;35824:6;35832:13;35801:22;:45::i;11767:949:40:-;12131:16;;;12145:1;12131:16;;;;;;;;11981:24;;;;;;;;12131:16;;;;;;;;;;-1:-1:-1;12131:16:40;12103:44;;12171:15;:50;;12206:15;12171:50;;;12189:14;12171:50;12157:8;12166:1;12157:11;;;;;;;;;;;;;:64;;;;;12245:15;:50;;12281:14;12245:50;;;12263:15;12245:50;12231:8;12240:1;12231:11;;;;;;;;;;;;;:64;;;;;12306:28;12337:17;:15;:17::i;:::-;12306:48;-1:-1:-1;12384:72:40;12417:8;12306:48;12438:1;12427:13;;12384:72;12365:91;;12467:30;12500:51;12522:10;12534:16;12500:21;:51::i;:::-;12467:84;;12579:15;:51;;12615:15;;;;12579:51;;;12597:15;;12579:51;12562:68;;12658:15;:51;;12694:15;;12658:51;;;12676:15;;;;12658:51;12640:69;;11767:949;;;;;;;;;;:::o;2239:130:9:-;2298:6;2323:39;:4;2298:6;2323:16;:39::i;2453:135::-;2514:6;2539:42;:4;1902:2;2539:16;:42::i;2691:168::-;2767:7;2793:59;:4;1978:2;2793:17;:59::i;2942:130::-;3000:7;3026:39;:4;2034:2;3026:17;:39::i;3145:129::-;3205:4;3228:39;:4;2092:2;3228:15;:39::i;3341:143::-;3405:7;3431:46;:4;2155:2;3431:17;:46::i;810:131:18:-;888:46;902:1;897;:6;5002:3:12;888:8:18;:46::i;20018:2670:40:-;20306:19;20339:27;20380:38;20598:28;20629:17;:15;:17::i;:::-;20598:48;;20661:14;:12;:14::i;:::-;20657:1852;;;20997:29;21029:72;21062:8;21072:10;20997:29;21072:13;;;;;21087:10;21098:1;21087:13;;21029:72;20997:104;;21115:30;21148:56;21170:10;21182:21;21148;:56::i;:::-;21115:89;;21219:38;21235:21;21219:15;:38::i;:::-;21300:27;21308:8;21318;21300:7;:27::i;:::-;21272:55;;-1:-1:-1;21272:55:40;-1:-1:-1;21802:95:40;21840:21;21272:55;21876:13;:11;:13::i;:::-;21891:5;21802:37;:95::i;:::-;21785:14;:112;-1:-1:-1;20657:1852:40;;-1:-1:-1;20657:1852:40;;22126:27;22134:8;22144;22126:7;:27::i;:::-;-1:-1:-1;;22464:14:40;:34;22098:55;;-1:-1:-1;22098:55:40;-1:-1:-1;20657:1852:40;22664:16;;;22678:1;22664:16;;;;;;;;22639:11;;22652:10;;22664:16;22678:1;22664:16;;;;;;;;;;-1:-1:-1;22664:16:40;22631:50;;;;;;;20018:2670;;;;;;;;;;;:::o;36830:235:44:-;36922:56;36945:7;36953:1;36945:10;;;;;;;;;;;;;;36957:20;36972:4;36957:14;:20::i;:::-;36922:22;:56::i;:::-;36909:7;36917:1;36909:10;;;;;;;;;;;;;:69;;;;;37001:57;37024:7;37032:1;37024:10;;;;;;;;;;;;;;37036:21;37051:5;37036:14;:21::i;37001:57::-;36988:7;36996:1;36988:10;;;;;;;;;;;;;:70;;;;;36830:235;:::o;38347:6537::-;39010:10;39032:4;39010:27;39006:5872;;39324:28;;39306:12;;39332:4;;39324:28;;39306:12;;39343:8;;39324:28;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39305:47;;;39570:7;39599:1;39594:3176;;;;42918:9;39594:3176;40050:4;40047:1;40044;40029:26;40099:1;40093:8;-1:-1:-1;;;;;;40089:81:44;-1:-1:-1;;;40313:77:44;;40307:2;;40442:16;40439:1;40436;40421:38;40494:16;40491:1;40484:27;40307:2;;41833;41827:4;41824:1;41809:27;42018:2;42012:4;42005:16;42426:2;42408:16;42404:25;42398:4;42392;42377:53;42748:2;42730:16;42726:25;42723:1;42716:36;39436:3523;42989:23;43003:8;42989:13;:23::i;:::-;43028:17;43047:29;43082:224;43107:6;43131;43155:9;43182:8;43208:15;43241:25;43284:8;43082:7;:224;;:::i;:::-;43027:279;;;;;43321:29;43337:12;43321:15;:29;;:::i;:::-;43831:19;;-1:-1:-1;;44218:23:44;;44258:24;;;44504:66;-1:-1:-1;;44486:16:44;;44479:92;-1:-1:-1;43827:28:44;-1:-1:-1;;44597:16:44;;44850:2;44840:13;;44597:16;44826:28;25843:914:40;25991:7;26012;26033;26054;26087:27;26116:30;26148:20;26170:19;26193:18;:16;:18::i;:::-;26086:125;;;;;;;;26307:19;26330:1;26307:24;26303:95;;;26355:1;;-1:-1:-1;26355:1:40;;-1:-1:-1;26361:12:40;;-1:-1:-1;26375:11:40;-1:-1:-1;26347:40:40;;-1:-1:-1;;26347:40:40;26303:95;26442:16;26460:20;26484:197;26528:17;26559:16;26589:13;:11;:13::i;:::-;26616:19;26649:22;26484:30;:197::i;:::-;26441:240;;-1:-1:-1;26441:240:40;-1:-1:-1;26724:12:40;;-1:-1:-1;26738:11:40;;-1:-1:-1;;;;;25843:914:40;;;;;;;;:::o;1165:277:54:-;1223:7;1327:5;;;1348:6;;;;1342:76;;1371:36;1380:5;4322:1:12;1371:8:54;:36::i;3345:400::-;3407:7;3430:6;3426:74;;3452:37;3461:5;4516:1:12;3452:8:54;:37::i;:::-;3514:6;3510:45;;-1:-1:-1;3543:1:54;3536:8;;3510:45;795:4;3585:7;;;;:1;:7;:1;3608:13;;;;;:20;3602:106;;3645:36;3654:5;4564:1:12;3645:8:54;:36::i;:::-;3737:1;3725:9;:13;;;;;;;3345:400;-1:-1:-1;;;;3345:400:54:o;1793:180:23:-;1851:7;1882:5;;;1897:51;1906:6;;;:20;;;1925:1;1920;1916;:5;;;;;;:10;1906:20;4467:1:12;1897:8:23;:51::i;2835:245:40:-;2893:35;;:::i;:::-;2963:21;2979:4;2963:15;:21::i;:::-;2940:44;;3017:22;2958:1;3017:15;:22::i;:::-;2994:20;;;:45;:17;2835:245::o;36040:229:44:-;36126:56;36149:7;36157:1;36149:10;;;;;;;;;;;;;;36161:20;36176:4;36161:14;:20::i;:::-;36126:22;:56::i;:::-;36113:7;36121:1;36113:10;;;;;;;;;;;;;:69;;;;;36205:57;36228:7;36236:1;36228:10;;;;;;;;;;;;;;36240:21;36255:5;36240:14;:21::i;4016:104:1:-;4092:21;4098:6;4106;4092:5;:21::i;15839:1993:40:-;16136:7;16157:16;16187;16287:28;16318:17;:15;:17::i;:::-;16287:48;-1:-1:-1;16639:29:40;16671:72;16704:8;16287:48;16639:29;16714:13;;16671:72;16639:104;;16753:30;16786:56;16808:10;16820:21;16786;:56::i;:::-;16753:89;;16853:38;16869:21;16853:15;:38::i;:::-;16903:20;16925:26;16955:27;16963:8;16973;16955:7;:27::i;:::-;16997:10;:21;16902:80;;-1:-1:-1;16902:80:40;-1:-1:-1;16997:21:40;;16993:113;;;17034:61;17045:12;17059:20;17069:9;17059;:20::i;:::-;17081:13;:11;:13::i;:::-;17034:10;:61::i;:::-;17557:95;17595:21;17618:12;17632:13;:11;:13::i;:::-;17647:4;17557:37;:95::i;:::-;17540:14;:112;17808:16;;;17822:1;17808:16;;;;;;;;17783:12;;17797:9;;17808:16;17822:1;17808:16;;;;;;;;;;-1:-1:-1;17808:16:40;17775:50;;;;;;;;;;;15839:1993;;;;;;;;;;;:::o;37618:229:44:-;37708:54;37729:7;37737:1;37729:10;;;;;;;;;;;;;;37741:20;37756:4;37741:14;:20::i;:::-;37708;:54::i;:::-;37695:7;37703:1;37695:10;;;;;;;;;;;;;:67;;;;;37785:55;37806:7;37814:1;37806:10;;;;;;;;;;;;;;37818:21;37833:5;37818:14;:21::i;4368:523:40:-;4688:16;;;4702:1;4688:16;;;4418:25;4688:16;;;;;4418:25;4688:16;;;;;;;;;;-1:-1:-1;4688:16:40;4677:27;;4728:53;4751:7;4760:20;4775:4;4760:14;:20::i;:::-;4728:22;:53::i;:::-;4714:8;4723:1;4714:11;;;;;;;;;;;;;:67;;;;;4805:54;4828:7;4837:21;4852:5;4837:14;:21::i;4805:54::-;4791:8;4800:1;4791:11;;;;;;;;;;;;;:68;;;;;4368:523;:::o;6767:275::-;6912:17;6948:87;6980:8;6989:1;6980:11;;;;;;;;;;;;;;6993:13;7008:8;7017:1;7008:11;;;;;;;;;;;;;;7021:13;6948:31;:87::i;29791:327::-;29864:7;-1:-1:-1;;;;;29895:13:40;29887:36;;29883:96;;29937:42;29955:13;-1:-1:-1;;;;;29955:21:40;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29937:9;;:17;:42::i;:::-;29925:54;;29883:96;-1:-1:-1;;;;;30001:13:40;29993:36;;29989:96;;30043:42;30061:13;-1:-1:-1;;;;;30061:21:40;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;30043:9;;:17;:42::i;:::-;30031:54;;29989:96;-1:-1:-1;30102:9:40;29791:327::o;2208:615:54:-;2268:7;2305:5;;;2326:6;;;:26;;;2351:1;2346;2336:7;:11;;;;;;:16;2326:26;2320:96;;2369:36;2378:5;4467:1:12;2369:8:54;:36::i;:::-;2430:12;2426:51;;2465:1;2458:8;;;;;2426:51;795:4;-1:-1:-1;;2793:11:54;;2792:19;;2815:1;2791:25;2784:32;;;2208:615;;;;:::o;1448:277::-;1506:7;1609:1;1604;:6;;1598:76;;1627:36;1636:5;4370:1:12;1627:8:54;:36::i;10039:471:40:-;10285:7;10375:128;10404:21;10427:22;10451:11;:18;;;10471:14;10487:15;10375:28;:128::i;:::-;10368:135;;10039:471;;;;;;;;:::o;36473:164:44:-;36559:7;36585:45;36608:6;36616:13;36585:22;:45::i;10516:472:40:-;10763:7;10853:128;10882:21;10905:22;10929:11;:18;;;10949:14;10965:15;10853:28;:128::i;37267:160:44:-;37351:7;37377:43;37398:6;37406:13;37377:20;:43::i;9321:112:54:-;9375:7;795:4;9402:1;:7;9401:25;;9425:1;9401:25;;;-1:-1:-1;795:4:54;9414:7;;9321:112::o;3950:722::-;4010:7;4033:6;4029:74;;4055:37;4064:5;4516:1:12;4055:8:54;:37::i;:::-;4117:6;4113:45;;-1:-1:-1;4146:1:54;4139:8;;4113:45;795:4;4188:7;;;;:1;:7;:1;4211:13;;;;;:20;4205:121;;4248:51;795:4;4269:1;4257:9;:13;;;;;;:20;4564:1:12;4248:8:54;:51::i;:::-;4659:1;4654;4642:9;:13;4641:19;;;;37853:488:44;37911:11;38308:10;:8;:10::i;:::-;-1:-1:-1;;;;;38308:24:44;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1320:1241:39:-;1466:7;2389:9;2400:10;2412:15;2429:10;2443:55;2468:8;2478:9;2489:8;2443:24;:55::i;:::-;2388:110;;;;;;;;2515:39;2535:1;2538:2;2542:7;2551:2;2515:19;:39::i;:::-;2508:46;1320:1241;-1:-1:-1;;;;;;;;1320:1241:39:o;3199:183:25:-;3276:7;3341:20;:18;:20::i;:::-;3363:10;3312:62;;;;;;-1:-1:-1;;;3312:62:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3302:73;;;;;;3295:80;;3199:183;;;:::o;13528:1167:40:-;13670:7;13679:16;13707:30;13740:19;:8;:17;:19::i;:::-;13707:52;-1:-1:-1;13769:70:40;13786:30;13778:4;:38;;;;;;;;;5443:3:12;13769:8:40;:70::i;:::-;13850:26;13879:27;:8;:25;:27::i;:::-;13850:56;;13916;13952:9;:16;13970:1;13916:35;:56::i;:::-;13982:24;13996:9;13982:13;:24::i;:::-;14018:26;14046:21;14069;14094:57;14118:9;14128:1;14118:12;;;;;;;14094:57;14017:134;;;;;;14441:17;14461:50;14471:9;14482:13;14497;14461:9;:50::i;:::-;14441:70;;14521:20;14544:55;14553:31;14574:9;14553;14563:1;14553:12;;;;;;;;;;;;;;:20;;:31;;;;:::i;:::-;14586:9;14596:1;14586:12;;;;;;;;;;;;;;14544:8;:55::i;:::-;14610:14;:35;;;;-1:-1:-1;14610:35:40;;14678:9;;-1:-1:-1;13528:1167:40;;-1:-1:-1;;;;;;;;;13528:1167:40:o;3900:110:1:-;3979:24;3985:9;3996:6;3979:5;:24::i;3885:149:26:-;-1:-1:-1;;;;;4000:18:26;;;3974:7;4000:18;;;-1:-1:-1;4000:18:26;;;;;;;;:27;;;;;;;;;;;;;3885:149::o;7635:298:44:-;7761:16;;;7775:1;7761:16;;;7696;7761;;;;;7696;7724:34;;7761:16;7775:1;7761:16;;;;;;;;;;-1:-1:-1;7761:16:44;7724:53;;7810:24;7829:4;7810:18;:24::i;:::-;7787:17;7805:1;7787:20;;;;;;;;;;;;;:47;;;;;7867:25;7886:5;7867:18;:25::i;:::-;7844:17;7862:1;7844:20;;;;;;;;;;;;;;;;;:48;7909:17;-1:-1:-1;7635:298:44;:::o;1415:374:18:-;1511:1;1496:5;:12;:16;1492:53;;;1528:7;;1492:53;1555:16;1574:5;1580:1;1574:8;;;;;;;;;;;;;;1555:27;;1597:9;1609:1;1597:13;;1592:191;1616:5;:12;1612:1;:16;1592:191;;;1649:15;1667:5;1673:1;1667:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;1689:51:18;-1:-1:-1;;;;;1698:18:18;;;;;;;4890:3:12;1689:8:18;:51::i;:::-;1765:7;-1:-1:-1;1630:3:18;;1592:191;;;;1415:374;;:::o;1969:544:4:-;2057:4;1663:42;2078:10;:8;:10::i;:::-;-1:-1:-1;;;;;2078:29:4;;;;;2077:63;;;2112:28;2131:8;2112:18;:28::i;:::-;2073:434;;;2272:10;:8;:10::i;:::-;-1:-1:-1;;;;;2258:24:4;:10;:24;;-1:-1:-1;2251:31:4;;2073:434;2435:16;:14;:16::i;:::-;:61;;;-1:-1:-1;;;2435:61:4;;;;;;;;-1:-1:-1;;;;;2435:61:4;;;;;;;2490:4;2435:61;;;;;;:27;;;;;;;:61;;;;;;;;;;;;;;;:27;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2435:61:4;;-1:-1:-1;2428:68:4;;1074:3172:12;-1:-1:-1;;;3588:3:12;3581:79;;;3799:66;3793:4;3786:80;3941:1;3935:4;3928:15;2210:2;2243:18;;;2336;;;2383;;;2215:4;2379:29;;;3057:2;3053:17;2195:18;;;;2288;;;;2284:29;;;;3040:1;3036:14;3025:26;;;;3021:50;;;;2999:73;;2994:3;2990:83;4008:4;4001:26;4234:3;;4224:14;1765:176:30;1842:7;1861:27;1875:1;1870;:6;;1878:9;1861:8;:27::i;:::-;-1:-1:-1;;1910:5:30;;;1765:176::o;3388:427:25:-;3790:9;;3765:44::o;1731:247:54:-;1793:7;1830:5;;;1851:6;;;:26;;;1876:1;1871;1861:7;:11;;;;;;:16;1851:26;1845:96;;1894:36;1903:5;4467:1:12;1894:8:54;:36::i;:::-;795:4;1958:7;:13;;5422:392:40;5565:35;;:::i;:::-;5639:50;5658:4;5664:10;5658:4;5664:13;;;;;5679:9;5639:18;:50::i;:::-;5616:73;;5722:51;5634:1;5748:10;5634:1;5748:13;;5722:51;5699:20;;;:74;:17;5422:392;-1:-1:-1;;5422:392:40:o;12135:487:20:-;12209:6;12257:14;;;2386:11;12249:34;2846:11;12558:19;;:57;;12610:5;12558:57;;;-1:-1:-1;;12581:25:20;;;-1:-1:-1;;;12135:487:20:o;11062:142::-;11171:14;2439:11;11163:34;;11062:142::o;10534:::-;10643:14;2280:11;10635:34;;10534:142::o;9730:143::-;9835:14;2126:10;9827:33;;;9826:40;;9730:143::o;11590:142::-;11699:14;2598:11;11691:34;;11590:142::o;24501:583:40:-;24794:16;24812:20;24834;24856:19;24879:98;24918:14;;24946:21;24879:25;:98::i;:::-;24793:184;;;;;;;;25015:62;25027:8;25037:12;25051;25065:11;25015;:62::i;:::-;24501:583;;;;;:::o;22694:592::-;22784:19;22805:27;22844:30;22877:19;:8;:17;:19::i;:::-;22844:52;-1:-1:-1;23059:53:40;23051:4;:61;;;;;;;;;23047:233;;;23156:47;23184:8;23194;23156:27;:47::i;:::-;23128:75;;-1:-1:-1;23128:75:40;-1:-1:-1;23047:233:40;;;23234:35;7850:3:12;23234:7:40;:35::i;:::-;22694:592;;;;;;:::o;10967:743:55:-;11153:21;11222:13;11218:486;;;11325:10;11338:57;11378:16;11338:33;:10;11355:15;11338:16;:33::i;:::-;:39;;:57::i;:::-;11325:70;-1:-1:-1;11425:18:55;:10;11325:70;11425:14;:18::i;:::-;11409:34;;11218:486;;;;11571:10;11584:61;11628:16;11584:35;:10;11603:15;11584:18;:35::i;:61::-;11571:74;-1:-1:-1;11675:18:55;:10;11571:74;11675:14;:18::i;:::-;11659:34;10967:743;-1:-1:-1;;;;;;10967:743:55:o;27203:499:40:-;27407:10;;27291:7;;;;;;;;27407:58;;-1:-1:-1;;;;;27407:10:40;27448:4;-1:-1:-1;;;27407:32:40;:58::i;:::-;27479:10;;:69;;-1:-1:-1;;;;;27479:10:40;27531:4;-1:-1:-1;;;27479:43:40;:69::i;:::-;27562:10;;:55;;-1:-1:-1;;;27562:55:40;;-1:-1:-1;;;;;27562:10:40;;;;-1:-1:-1;;27562:55:40;;-1:-1:-1;;;;27562:55:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27631:10;;:54;;-1:-1:-1;;;27631:54:40;;-1:-1:-1;;;;;27631:10:40;;;;-1:-1:-1;;27631:54:40;;-1:-1:-1;;;;27631:54:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27386:309;;;;;;;;27203:499;;;;:::o;4207:2410:55:-;4443:7;4452;5186:17;5166:16;:37;5162:443;;-1:-1:-1;5589:1:55;;-1:-1:-1;5589:1:55;5581:13;;5162:443;6057:17;6077:96;6153:19;6078:65;6103:39;:16;6124:17;6103:20;:39::i;:::-;6078:16;;:24;:65::i;:::-;6077:75;;:96::i;:::-;6057:116;-1:-1:-1;6183:21:55;6207:68;6235:39;:16;6256:17;6235:20;:39::i;:::-;6207:19;;:27;:68::i;:::-;6183:92;-1:-1:-1;6285:19:55;6307:35;:16;6183:92;6307:20;:35::i;:::-;6285:57;-1:-1:-1;6352:14:55;6369:30;:9;6285:57;6369:17;:30::i;:::-;6352:47;-1:-1:-1;6458:16:55;6477:38;:22;6352:47;6477:30;:38::i;:::-;6458:57;-1:-1:-1;6525:20:55;6548;:6;6458:57;6548:10;:20::i;:::-;6587:8;;-1:-1:-1;6525:43:55;;-1:-1:-1;;;;;;4207:2410:55;;;;;;;;;:::o;3086:141:40:-;3159:7;3185:10;:35;;3211:9;3185:35;;;-1:-1:-1;3198:10:40;;3086:141;-1:-1:-1;3086:141:40:o;8512:410:26:-;8587:68;-1:-1:-1;;;;;8596:21:26;;;;8968:3:12;8587:8:26;:68::i;:::-;8666:49;8687:7;8704:1;8708:6;8666:20;:49::i;:::-;-1:-1:-1;;;;;8747:18:26;;:9;:18;;;;;;;;;;;:67;;8770:6;9382:3:12;8747:22:26;:67::i;:::-;-1:-1:-1;;;;;8726:18:26;;:9;:18;;;;;;;;;;:88;8839:12;;:24;;8856:6;8839:16;:24::i;:::-;8824:12;:39;8878:37;;;;;;;;8904:1;;-1:-1:-1;;;;;8878:37:26;;;;;;;;;;;;8512:410;;:::o;17838:581:40:-;17928:20;17950:26;17988:30;18021:19;:8;:17;:19::i;:::-;17988:52;-1:-1:-1;18185:57:40;18177:4;:65;;;;;;;;;18173:240;;;18286:50;18317:8;18327;18286:30;:50::i;18173:240::-;18367:35;6263:3:12;18367:7:40;:35::i;2144:362:43:-;2284:36;;;;;;;;2310:10;2284:36;;;;;;;;;;;-1:-1:-1;;;;;2284:36:43;;;;;;;-1:-1:-1;;;2284:36:43;;;-1:-1:-1;;;;;2284:36:43;;;;;;;;;2338:29;:12;2355:11;2338:16;:29::i;:::-;:53;;2393:17;;;;;;;;;;;;;;;;;2330:81;;;;;-1:-1:-1;;;2330:81:43;;;;;;;;:::i;:::-;-1:-1:-1;2464:16:43;;;;-1:-1:-1;;;;;2429:51:43;:31;:12;2446:13;2429:16;:31::i;:::-;:51;;2482:16;;;;;;;;;;;;;;;;;2421:78;;;;;-1:-1:-1;;;2421:78:43;;;;;;;;:::i;3604:588:40:-;3696:15;3941:12;3955:15;3978:10;:8;:10::i;:::-;-1:-1:-1;;;;;3978:27:40;;4006:11;:9;:11::i;:::-;4019:5;3978:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;4045:14:40;;;;-1:-1:-1;3940:85:40;;-1:-1:-1;3940:85:40;-1:-1:-1;4155:30:40;4045:14;4171:13;4155:15;:30::i;12053:286:39:-;12232:7;12258:74;12299:31;:8;12312:17;12299:12;:31::i;:::-;12259;:8;12272:17;12259:12;:31::i;6309:2382::-;6511:17;;8273:60;8287:45;:15;8309:22;8287:21;:45::i;:::-;8273:9;;:13;:60::i;:::-;8252:81;-1:-1:-1;8347:20:39;8370:64;8385:48;:16;8410:22;8385:24;:48::i;8370:64::-;8347:87;-1:-1:-1;8461:64:39;8500:24;:10;8515:8;8500:14;:24::i;:::-;8461:30;:12;8482:8;8461:20;:30::i;:64::-;8449:76;;6309:2382;;8613:10;8600:9;:23;;8594:90;;8626:58;8636:5;372:3:41;8626:9:39;:58::i;8879:2353::-;9082:16;10687:10;10674:9;:23;;10668:90;;10700:58;10710:5;372:3:41;10700:9:39;:58::i;:::-;10945:18;10966:60;10980:45;:15;11002:22;10980:21;:45::i;10966:60::-;10945:81;-1:-1:-1;11040:20:39;11063:64;11078:48;:16;11103:22;11078:24;:48::i;11063:64::-;11040:87;-1:-1:-1;11153:62:39;11187:27;11040:87;11204:9;11187:16;:27::i;:::-;11153;:10;11170:9;11153:16;:27::i;2797:1127::-;2985:9;;;;3114:51;3137:27;:9;3155:8;3137:17;:27::i;:::-;795:4:54;;3114:22:39;:51::i;:::-;3110:55;;3179:14;3196:29;3216:8;3196;3205:1;3196:11;;;;;;;;;;;;;;:19;;:29;;;;:::i;:::-;3179:46;;3239:14;3256:30;3276:9;3256:8;3265:1;3256:11;;;;;;;:30;3239:47;-1:-1:-1;3305:18:39;:6;3239:47;3305:10;:18::i;:::-;3300:23;;3342:32;3362:8;3371:1;3362:11;;;;;;;;;;;;;;3342:8;3351:1;3342:11;;;;;;;:32;3337:37;;2797:1127;;3577:72;3639:9;3577:53;3620:9;3578:32;3598:8;3607:1;3598:11;;;;;;;;;;;;;;3578:8;3587:1;3578:11;;;;;;;3577:72;3567:82;;3659:12;3674:103;3768:8;3674:85;3749:9;3674:66;795:4:54;3717:1:39;:22;3675:32;3695:8;3704:1;3695:11;;;;;;;;;;;;;;3675:8;3684:1;3675:11;;;;;;;3674:103;3659:118;-1:-1:-1;3787:12:39;3802:68;3845:24;3860:8;;3845:14;:24::i;:::-;3803:32;3823:8;3832:1;3823:11;;;;;;;;;;;;;;3803:8;3812:1;3803:11;;;;;;;3802:68;3787:83;-1:-1:-1;3890:27:39;3787:83;3890:17;:7;3902:4;3890:11;:17::i;:27::-;3880:37;;2797:1127;;;;;;;;;:::o;4426:792::-;4624:17;;4675:31;:1;4683:22;4675:7;:31::i;:::-;4653:53;-1:-1:-1;4775:15:39;4793:47;4838:1;4794:34;:2;4805:22;4794:10;:34::i;4793:47::-;4775:65;-1:-1:-1;4936:16:39;4955:20;:7;4775:65;4955:11;:20::i;:::-;4936:39;;4985:17;5005:31;5024:8;5034:1;5005:18;:31::i;:::-;4985:51;-1:-1:-1;5122:17:39;5142;:2;4985:51;5142:6;:17::i;:::-;5122:37;-1:-1:-1;5181:30:39;5122:37;5199:11;5181:17;:30::i;:::-;5169:42;4426:792;-1:-1:-1;;;;;;;;;;4426:792:39:o;867:156:10:-;927:25;982:4;971:45;;;;;;;;;;;;;;;-1:-1:-1;971:45:10;;867:156;-1:-1:-1;;867:156:10:o;1205:185::-;1273:26;1338:4;1327:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1327:56:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1327:56:10;;;;;;-1:-1:-1;1311:72:10;;1205:185;-1:-1:-1;;;;;;1205:185:10:o;7898:294:26:-;7973:49;8002:1;8006:7;8015:6;7973:20;:49::i;:::-;8048:12;;:24;;8065:6;8048:16;:24::i;:::-;8033:12;:39;-1:-1:-1;;;;;8103:18:26;;:9;:18;;;;;;;;;;;:30;;8126:6;8103:22;:30::i;:::-;-1:-1:-1;;;;;8082:18:26;;:9;:18;;;;;;;;;;;:51;;;;8148:37;;;;;;;8082:18;;:9;;8148:37;;;;;;;;;;7898:294;;:::o;7939:153:44:-;8011:7;8037:6;:48;;8067:18;8037:48;;;-1:-1:-1;8046:18:44;;7939:153;-1:-1:-1;7939:153:44:o;7075:279::-;7161:4;7209:51;-1:-1:-1;;;7209:11:44;:51::i;:::-;7197:8;:63;7196:151;;;-1:-1:-1;7290:56:44;-1:-1:-1;;;7290:11:44;:56::i;:::-;7278:68;;;;7075:279;-1:-1:-1;7075:279:44:o;5820:365:40:-;5964:7;6002:10;:176;;6115:62;6156:9;6167;6115:40;:62::i;:::-;6002:176;;;6032:62;6073:9;6084;6032:40;:62::i;26763:434::-;26972:12;;26968:82;;27000:39;27016:12;27030:8;27000:15;:39::i;:::-;27106:16;;27102:89;;27138:42;27154:11;27167:12;27138:15;:42::i;:::-;26763:434;;;;:::o;23292:928::-;23443:7;23452:16;23895:19;23917:33;:8;:31;:33::i;:::-;23895:55;;24061:27;24091:80;24134:8;24144:11;24157:13;:11;:13::i;:::-;24091:42;:80::i;:::-;24189:11;;;;-1:-1:-1;23292:928:40;;-1:-1:-1;;;;23292:928:40:o;167:273:51:-;314:7;340:93;356:10;-1:-1:-1;;;411:8:51;421:11;340:15;:93::i;446:287::-;604:7;630:96;646:10;658:44;704:8;714:11;630:15;:96::i;1353:121:30:-;1411:7;1437:30;1441:1;1444;4370::12;1437:3:30;:30::i;18425:528:40:-;18579:7;18588:16;18620:20;18643:36;:8;:34;:36::i;:::-;18620:59;;18790:26;18819:84;18865:8;18875:12;18889:13;:11;:13::i;:::-;18819:45;:84::i;388:103:53:-;458:9;453:35;;469:19;478:9;469:8;:19::i;6726:1013:55:-;6798:7;6821:10;6817:49;;-1:-1:-1;6854:1:55;6847:8;;6817:49;6876:13;6892:24;6910:5;6892:17;:24::i;:::-;6876:40;;7010:1;7000:5;795:4:54;6970:5:55;:26;6969:36;;;;;;6960:5;:46;6959:52;;;;;;6951:60;;7080:1;7070:5;795:4:54;7040:5:55;:26;7039:36;;;;;;7030:5;:46;7029:52;;;;;;7021:60;;7150:1;7140:5;795:4:54;7110:5:55;:26;7109:36;;;;;;7100:5;:46;7099:52;;;;;;7091:60;;7220:1;7210:5;795:4:54;7180:5:55;:26;7179:36;;;;;;7170:5;:46;7169:52;;;;;;7161:60;;7290:1;7280:5;795:4:54;7250:5:55;:26;7249:36;;;;;;7240:5;:46;7239:52;;;;;;7231:60;;7360:1;7350:5;795:4:54;7320:5:55;:26;7319:36;;;;;;7310:5;:46;7309:52;;;;;;7301:60;;7430:1;7420:5;795:4:54;7390:5:55;:26;7389:36;;;;;;7380:5;:46;7379:52;;;;;;;-1:-1:-1;7529:20:55;7552;7379:52;;7552:13;:20::i;:::-;7529:43;-1:-1:-1;7606:33:55;7616:22;:5;7628:9;7616:11;:22::i;:::-;7606:5;;:9;:33::i;:::-;7590:12;:49;;:102;;;;-1:-1:-1;7659:33:55;7669:22;:5;7681:9;7669:11;:22::i;:::-;7659:5;;:9;:33::i;:::-;7643:12;:49;;7590:102;7582:127;;;;;-1:-1:-1;;;7582:127:55;;;;;;;;;;;;-1:-1:-1;;;7582:127:55;;;;;;;;;;;;;;2343:184:10;2417:19;2477:4;2466:54;;;;;;;;;;;;;;;-1:-1:-1;2466:54:10;;;;2343:184;-1:-1:-1;;2343:184:10:o;2432:1444:55:-;2584:27;3685:8;:15;3671:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3671:30:55;;3658:43;;3716:9;3711:131;3735:8;:15;3731:1;:19;3711:131;;;3787:44;3822:8;3787:26;3807:5;3787:8;3796:1;3787:11;;;;;;;:44;3771:10;3782:1;3771:13;;;;;;;;;;;;;;;;;:60;3752:3;;3711:131;;739:809:51;962:34;;;;;;;;;;-1:-1:-1;;;;;962:34:51;;;;;;;;;;;;;;;;;;;;;;952:45;;;;;;;;;-1:-1:-1;;;1203:34:51;;;;;;;;;;;-1:-1:-1;;952:45:51;1203:17;;;;-1:-1:-1;;1203:34:51;;;;;;;;;;;:17;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1203:34:51;1199:107;;;1260:35;;;-1:-1:-1;;;1260:35:51;;;;;;;;;;-1:-1:-1;;;;;1260:18:51;;;;;:35;;;;;;;;;;;;;;:18;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1260:35:51;;-1:-1:-1;1253:42:51;;-1:-1:-1;1253:42:51;1199:107;1348:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1338:48;;;;;;;;;-1:-1:-1;;;1400:30:51;;;;;;;;;;;-1:-1:-1;;;;;1400:17:51;;;-1:-1:-1;;1400:30:51;;;;;1348:37;;1400:30;;;;;:17;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1400:30:51;1396:99;;;1453:31;;;-1:-1:-1;;;1453:31:51;;;;;;;;;;-1:-1:-1;;;;;1453:18:51;;;;;:31;;;;;;;;;;;;;;:18;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1453:31:51;;-1:-1:-1;1446:38:51;;-1:-1:-1;;1446:38:51;1396:99;1512:29;;;-1:-1:-1;;;1512:29:51;;;;;;;;;;-1:-1:-1;;;;;1512:18:51;;;;;:29;;;;;;;;;;;;;;:18;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1512:29:51;;739:809;-1:-1:-1;;;;;;;739:809:51:o;1163:1175:55:-;1319:26;2152:8;:15;2138:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2138:30:55;;2126:42;;2183:9;2178:127;2202:8;:15;2198:1;:19;2178:127;;;2253:41;2285:8;2253:25;2271:6;2253:8;2262:1;2253:11;;;;;;;;;;;;;;:17;;:25;;;;:::i;:41::-;2238:9;2248:1;2238:12;;;;;;;;;;;;;;;;;:56;2219:3;;2178:127;;925:128:53;973:29;982:9;-1:-1:-1;;;973:8:53;:29::i;8327:1637:55:-;8392:7;795:4:54;8415:5:55;:27;8411:1547;;795:4:54;8472:42:55;795:4:54;8487:5:55;:26;8472:14;:42::i;:::-;8465:72;;-1:-1:-1;8458:79:55;;8411:1547;8581:2;8572:5;:11;8568:71;;-1:-1:-1;1058:10:55;8603:21;;8568:71;8665:3;8656:5;:12;8652:62;;-1:-1:-1;8695:4:55;8688:11;;8652:62;8740:3;8731:5;:12;8727:72;;-1:-1:-1;999:11:55;8763:21;;8727:72;8825:3;8816:5;:12;8812:62;;-1:-1:-1;8855:4:55;8848:11;;8812:62;8900:3;8891:5;:12;8887:72;;-1:-1:-1;939:12:55;8923:21;;8887:72;8985:3;8976:5;:12;8972:62;;-1:-1:-1;9015:4:55;9008:11;;8972:62;9060:3;9051:5;:12;9047:72;;-1:-1:-1;878:13:55;9083:21;;9047:72;9145:3;9136:5;:12;9132:62;;-1:-1:-1;9175:4:55;9168:11;;9132:62;9220:3;9211:5;:12;9207:71;;-1:-1:-1;816:14:55;9243:20;;9207:71;9304:4;9295:5;:13;9291:63;;-1:-1:-1;9335:4:55;9328:11;;9291:63;9380:4;9371:5;:13;9367:72;;-1:-1:-1;754:15:55;9404:20;;9367:72;9465:4;9456:5;:13;9452:63;;-1:-1:-1;9496:4:55;9489:11;;9452:63;9541:4;9532:5;:13;9528:72;;-1:-1:-1;691:16:55;9565:20;;9528:72;9626:4;9617:5;:13;9613:63;;-1:-1:-1;9657:4:55;9650:11;;9613:63;9702:4;9693:5;:13;9689:72;;-1:-1:-1;627:17:55;9726:20;;9689:72;9787:4;9778:5;:13;9774:63;;-1:-1:-1;9818:4:55;9811:11;;9774:63;9863:4;9854:5;:13;9850:72;;-1:-1:-1;562:18:55;9887:20;;9850:72;-1:-1:-1;9942:5:55;9935:12;;1160:3379:53;-1:-1:-1;;;1223:18:53;3874:79;;;4092:66;4086:4;4079:80;4234:1;4228:4;4221:15;2362:2;2395:18;;;2440;;;2367:4;2436:29;;;3238:1;3329:14;2347:18;;;;3318:26;;;;2488:18;;;;2535;;;2531:29;;3350:2;3346:17;3314:50;3228:4;3234:18;;;;;;3224:29;3220:2;3216:38;3293:72;;;;3288:3;3284:82;4301:4;4294:26;1252:14;;;;;4527:3;;4517:14;9970:633:55;10026:9;-1:-1:-1;;;10051:13:55;;10047:74;;10086:3;10080:9;;;;;10108:2;10103:7;10047:74;10139:7;10134:1;:12;10130:72;;10168:2;10162:8;;;;;10189:2;10184:7;10130:72;10220:7;10215:1;:12;10211:72;;10249:2;10243:8;;;;;10270:2;10265:7;10211:72;10301:7;10296:1;:12;10292:71;;10330:2;10324:8;;;;;10351:1;10346:6;10292:71;10381:6;10376:1;:11;10372:69;;10409:1;10403:7;;;;;10429:1;10424:6;10372:69;10459:6;10454:1;:11;10450:69;;10487:1;10481:7;;;;;10507:1;10502:6;10450:69;10537:6;10532:1;:11;10528:69;;10585:1;10580:6;;9970:633;-1:-1:-1;9970:633:55:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:138:56:-;84:20;;113:33;84:20;113:33;:::i;157:162::-;224:20;;280:13;;273:21;263:32;;253:2;;309:1;306;299:12;324:542;;421:3;414:4;406:6;402:17;398:27;388:2;;443:5;436;429:20;388:2;483:6;470:20;509:18;505:2;502:26;499:2;;;531:9;499:2;566:54;614:4;-1:-1:-1;;608:2:56;589:13;;585:27;581:38;566:54;:::i;:::-;645:2;636:7;629:19;691:3;684:4;679:2;671:6;667:15;663:26;660:35;657:2;;;712:5;705;698:20;657:2;781;774:4;766:6;762:17;755:4;746:7;742:18;729:55;804:16;;;822:4;800:27;793:42;;;;808:7;378:488;-1:-1:-1;;378:488:56:o;871:152::-;948:20;;997:1;987:12;;977:2;;1013:1;1010;1003:12;1028:259;;1140:2;1128:9;1119:7;1115:23;1111:32;1108:2;;;1161:6;1153;1146:22;1108:2;1205:9;1192:23;1224:33;1251:5;1224:33;:::i;1292:263::-;;1415:2;1403:9;1394:7;1390:23;1386:32;1383:2;;;1436:6;1428;1421:22;1383:2;1473:9;1467:16;1492:33;1519:5;1492:33;:::i;1560:402::-;;;1689:2;1677:9;1668:7;1664:23;1660:32;1657:2;;;1710:6;1702;1695:22;1657:2;1754:9;1741:23;1773:33;1800:5;1773:33;:::i;:::-;1825:5;-1:-1:-1;1882:2:56;1867:18;;1854:32;1895:35;1854:32;1895:35;:::i;:::-;1949:7;1939:17;;;1647:315;;;;;:::o;1967:470::-;;;;2113:2;2101:9;2092:7;2088:23;2084:32;2081:2;;;2134:6;2126;2119:22;2081:2;2178:9;2165:23;2197:33;2224:5;2197:33;:::i;:::-;2249:5;-1:-1:-1;2306:2:56;2291:18;;2278:32;2319:35;2278:32;2319:35;:::i;:::-;2071:366;;2373:7;;-1:-1:-1;;;2427:2:56;2412:18;;;;2399:32;;2071:366::o;2442:853::-;;;;;;;;2654:3;2642:9;2633:7;2629:23;2625:33;2622:2;;;2676:6;2668;2661:22;2622:2;2720:9;2707:23;2739:33;2766:5;2739:33;:::i;:::-;2791:5;-1:-1:-1;2848:2:56;2833:18;;2820:32;2861:35;2820:32;2861:35;:::i;:::-;2915:7;-1:-1:-1;2969:2:56;2954:18;;2941:32;;-1:-1:-1;3020:2:56;3005:18;;2992:32;;-1:-1:-1;3076:3:56;3061:19;;3048:33;3125:4;3112:18;;3100:31;;3090:2;;3150:6;3142;3135:22;3090:2;2612:683;;;;-1:-1:-1;2612:683:56;;;;3178:7;3232:3;3217:19;;3204:33;;-1:-1:-1;3284:3:56;3269:19;;;3256:33;;2612:683;-1:-1:-1;;2612:683:56:o;3300:327::-;;;3429:2;3417:9;3408:7;3404:23;3400:32;3397:2;;;3450:6;3442;3435:22;3397:2;3494:9;3481:23;3513:33;3540:5;3513:33;:::i;:::-;3565:5;3617:2;3602:18;;;;3589:32;;-1:-1:-1;;;3387:240:56:o;3632:192::-;;3741:2;3729:9;3720:7;3716:23;3712:32;3709:2;;;3762:6;3754;3747:22;3709:2;3790:28;3808:9;3790:28;:::i;3829:1670::-;;;;;;;;4077:3;4065:9;4056:7;4052:23;4048:33;4045:2;;;4099:6;4091;4084:22;4045:2;4140:9;4127:23;4117:33;;4200:2;4189:9;4185:18;4172:32;4213:33;4240:5;4213:33;:::i;:::-;4265:5;-1:-1:-1;4322:2:56;4307:18;;4294:32;4335:35;4294:32;4335:35;:::i;:::-;4389:7;-1:-1:-1;4447:2:56;4432:18;;4419:32;4470:18;4500:14;;;4497:2;;;4532:6;4524;4517:22;4497:2;4575:6;4564:9;4560:22;4550:32;;4620:7;4613:4;4609:2;4605:13;4601:27;4591:2;;4647:6;4639;4632:22;4591:2;4688;4675:16;4710:2;4706;4703:10;4700:2;;;4716:9;4700:2;4754;4750;4746:11;4777:27;4800:2;4796;4792:11;4777:27;:::i;:::-;4826:3;4850:2;4845:3;4838:15;4878:2;4873:3;4869:12;4862:19;;4909:2;4905;4901:11;4949:7;4944:2;4939;4935;4931:11;4927:20;4924:33;4921:2;;;4975:6;4967;4960:22;4921:2;5002:6;4993:15;;5017:163;5031:2;5028:1;5025:9;5017:163;;;5088:17;;5076:30;;5049:1;5042:9;;;;;5135:2;5126:12;;;;5158;5017:163;;;-1:-1:-1;5199:5:56;-1:-1:-1;;;;5251:3:56;5236:19;;5223:33;;-1:-1:-1;5303:3:56;5288:19;;5275:33;;-1:-1:-1;5361:3:56;5346:19;;5333:33;;-1:-1:-1;5378:16:56;;;5375:2;;;5412:6;5404;5397:22;5375:2;;5440:53;5485:7;5474:8;5463:9;5459:24;5440:53;:::i;:::-;5430:63;;;4035:1464;;;;;;;;;;:::o;5504:306::-;;5615:2;5603:9;5594:7;5590:23;5586:32;5583:2;;;5636:6;5628;5621:22;5583:2;5667:23;;-1:-1:-1;;;;;;5719:32:56;;5709:43;;5699:2;;5771:6;5763;5756:22;6104:846;;6243:2;6231:9;6222:7;6218:23;6214:32;6211:2;;;6264:6;6256;6249:22;6211:2;6302;6296:9;6344:2;6336:6;6332:15;6413:6;6401:10;6398:22;6377:18;6365:10;6362:34;6359:62;6356:2;;;6424:9;6356:2;6451;6444:22;6490:28;6508:9;6490:28;:::i;:::-;6475:44;;6569:2;6554:18;;6541:32;-1:-1:-1;;;;;6602:44:56;;6592:55;;6582:2;;6666:6;6658;6651:22;6582:2;6703;6691:15;;6684:30;6766:2;6751:18;;6738:32;-1:-1:-1;;;;;6801:48:56;;6789:61;;6779:2;;6869:6;6861;6854:22;6779:2;6906;6894:15;;6887:32;6898:6;6201:749;-1:-1:-1;;;6201:749:56:o;6955:1351::-;;;;7131:2;7119:9;7110:7;7106:23;7102:32;7099:2;;;7152:6;7144;7137:22;7099:2;7197:9;7184:23;7226:18;7267:2;7259:6;7256:14;7253:2;;;7288:6;7280;7273:22;7253:2;7331:6;7320:9;7316:22;7306:32;;7357:6;7397:2;7392;7383:7;7379:16;7375:25;7372:2;;;7418:6;7410;7403:22;7372:2;7449:18;7464:2;7449:18;:::i;:::-;7436:31;;7490;7518:2;7490:31;:::i;:::-;7483:5;7476:46;7554:33;7583:2;7579;7575:11;7554:33;:::i;:::-;7549:2;7542:5;7538:14;7531:57;7620:33;7649:2;7645;7641:11;7620:33;:::i;:::-;7615:2;7608:5;7604:14;7597:57;7707:2;7703;7699:11;7686:25;7681:2;7674:5;7670:14;7663:49;7766:3;7762:2;7758:12;7745:26;7739:3;7732:5;7728:15;7721:51;7826:3;7822:2;7818:12;7805:26;7799:3;7792:5;7788:15;7781:51;7865:34;7894:3;7890:2;7886:12;7865:34;:::i;:::-;7859:3;7852:5;7848:15;7841:59;7933:34;7962:3;7958:2;7954:12;7933:34;:::i;:::-;7927:3;7920:5;7916:15;7909:59;7987:3;8036:2;8032;8028:11;8015:25;8065:2;8055:8;8052:16;8049:2;;;8086:6;8078;8071:22;8049:2;8127:46;8165:7;8154:8;8150:2;8146:17;8127:46;:::i;:::-;8111:14;;;8104:70;;;;-1:-1:-1;8115:5:56;8245:2;8230:18;;8217:32;;-1:-1:-1;8296:2:56;8281:18;;;8268:32;;7089:1217;-1:-1:-1;;;;;7089:1217:56:o;8311:190::-;;8423:2;8411:9;8402:7;8398:23;8394:32;8391:2;;;8444:6;8436;8429:22;8391:2;-1:-1:-1;8472:23:56;;8381:120;-1:-1:-1;8381:120:56:o;8506:194::-;;8629:2;8617:9;8608:7;8604:23;8600:32;8597:2;;;8650:6;8642;8635:22;8597:2;-1:-1:-1;8678:16:56;;8587:113;-1:-1:-1;8587:113:56:o;8705:328::-;;;;8848:2;8836:9;8827:7;8823:23;8819:32;8816:2;;;8869:6;8861;8854:22;8816:2;8910:9;8897:23;8887:33;;8967:2;8956:9;8952:18;8939:32;8929:42;;8990:37;9023:2;9012:9;9008:18;8990:37;:::i;:::-;8980:47;;8806:227;;;;;:::o;9038:447::-;;;;;9212:3;9200:9;9191:7;9187:23;9183:33;9180:2;;;9234:6;9226;9219:22;9180:2;9268:9;9262:16;9252:26;;9318:2;9307:9;9303:18;9297:25;9287:35;;9362:2;9351:9;9347:18;9341:25;9331:35;;9409:2;9398:9;9394:18;9388:25;9422:33;9449:5;9422:33;:::i;:::-;9170:315;;;;-1:-1:-1;9170:315:56;;-1:-1:-1;;9170:315:56:o;9490:443::-;;9587:5;9581:12;9614:6;9609:3;9602:19;9640:4;9669:2;9664:3;9660:12;9653:19;;9706:2;9699:5;9695:14;9727:3;9739:169;9753:6;9750:1;9747:13;9739:169;;;9814:13;;9802:26;;9848:12;;;;9883:15;;;;9775:1;9768:9;9739:169;;;-1:-1:-1;9924:3:56;;9557:376;-1:-1:-1;;;;;9557:376:56:o;9938:273::-;;10121:6;10113;10108:3;10095:33;10147:16;;10172:15;;;10147:16;10085:126;-1:-1:-1;10085:126:56:o;10216:203::-;-1:-1:-1;;;;;10380:32:56;;;;10362:51;;10350:2;10335:18;;10317:102::o;10424:494::-;10604:2;10589:18;;10593:9;10684:6;10424:494;10718:194;10732:4;10729:1;10726:11;10718:194;;;10791:13;;10779:26;;10828:4;10852:12;;;;10887:15;;;;10752:1;10745:9;10718:194;;;10722:3;;;10571:347;;;;:::o;10923:267::-;;11102:2;11091:9;11084:21;11122:62;11180:2;11169:9;11165:18;11157:6;11122:62;:::i;11195:477::-;;11452:2;11441:9;11434:21;11478:62;11536:2;11525:9;11521:18;11513:6;11478:62;:::i;:::-;11588:9;11580:6;11576:22;11571:2;11560:9;11556:18;11549:50;11616;11659:6;11651;11616:50;:::i;11677:187::-;11842:14;;11835:22;11817:41;;11805:2;11790:18;;11772:92::o;11869:329::-;12090:14;;12083:22;12065:41;;12137:2;12122:18;;12115:34;;;;12180:2;12165:18;;12158:34;12053:2;12038:18;;12020:178::o;12203:177::-;12349:25;;;12337:2;12322:18;;12304:76::o;12385:289::-;12574:25;;;-1:-1:-1;;;;;12635:32:56;12630:2;12615:18;;12608:60;12562:2;12547:18;;12529:145::o;13589:541::-;13866:25;;;13922:2;13907:18;;13900:34;;;;13965:2;13950:18;;13943:34;;;;14008:2;13993:18;;13986:34;14064:14;14057:22;14051:3;14036:19;;14029:51;14111:3;14096:19;;14089:35;13853:3;13838:19;;13820:310::o;14135:603::-;;14276:2;14305;14294:9;14287:21;14337:6;14331:13;14380:6;14375:2;14364:9;14360:18;14353:34;14405:4;14418:140;14432:6;14429:1;14426:13;14418:140;;;14527:14;;;14523:23;;14517:30;14493:17;;;14512:2;14489:26;14482:66;14447:10;;14418:140;;;14576:6;14573:1;14570:13;14567:2;;;14646:4;14641:2;14632:6;14621:9;14617:22;14613:31;14606:45;14567:2;-1:-1:-1;14722:2:56;14701:15;-1:-1:-1;;14697:29:56;14682:45;;;;14729:2;14678:54;;14256:482;-1:-1:-1;;;14256:482:56:o;14743:460::-;14975:13;;14968:21;14961:29;14943:48;;15051:4;15039:17;;;15033:24;-1:-1:-1;;;;;15029:63:56;15007:20;;;15000:93;15153:4;15141:17;;;15135:24;-1:-1:-1;;;;;15131:65:56;15109:20;;;15102:95;;;;14931:2;14916:18;;14898:305::o;15208:450::-;15422:13;;15491:4;15476:20;;15469:28;15462:36;15444:55;;-1:-1:-1;;;;;15545:1:56;15541:17;;;15537:56;15530:4;15515:20;;15508:86;15636:3;15632:19;15625:4;15610:20;;15603:49;15393:2;15378:18;;15360:298::o;15845:338::-;;16052:6;16041:9;16034:25;16095:2;16090;16079:9;16075:18;16068:30;16115:62;16173:2;16162:9;16158:18;16150:6;16115:62;:::i;16188:248::-;16362:25;;;16418:2;16403:18;;16396:34;16350:2;16335:18;;16317:119::o;16441:319::-;16643:25;;;16699:2;16684:18;;16677:34;;;;16742:2;16727:18;;16720:34;16631:2;16616:18;;16598:162::o;16765:184::-;16937:4;16925:17;;;;16907:36;;16895:2;16880:18;;16862:87::o;16954:242::-;17024:2;17018:9;17054:17;;;17101:18;17086:34;;17122:22;;;17083:62;17080:2;;;17148:9;17080:2;17175;17168:22;16998:198;;-1:-1:-1;16998:198:56:o;17201:133::-;-1:-1:-1;;;;;17278:31:56;;17268:42;;17258:2;;17324:1;17321;17314:12", "language": "Solidity", "natspec": {"kind": "dev", "methods": {"DOMAIN_SEPARATOR()": {"details": "See {IERC20Permit-DOMAIN_SEPARATOR}."}, "allowance(address,address)": {"details": "Override to grant the Vault infinite allowance, causing for Pool Tokens to not require approval. This is sound as the Vault already provides authorization mechanisms when initiation token transfers, which this contract inherits."}, "approve(address,uint256)": {"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."}, "balanceOf(address)": {"details": "See {IERC20-balanceOf}."}, "calculateCurrentValues(uint256,uint256,bool)": {"details": "invariant and virtual offsets."}, "changePauseManager(address)": {"notice": "Changes the account that is allowed to pause a pool."}, "decimals()": {"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."}, "decreaseAllowance(address,uint256)": {"details": "Override to allow decreasing allowance by more than the current amount (setting it to zero)"}, "getActionId(bytes4)": {"details": "Returns the action identifier associated with the external function described by `selector`."}, "getActualSupply()": {"notice": "Effective BPT supply.  This is the same as `totalSupply()` but also accounts for the fact that the pool owes  protocol fees to the pool in the form of unminted LP shares created on the next join/exit,  diluting LPers. Thus, this is the totalSupply() that the next join/exit operation will see.  Equivalent to the respective function in, e.g., WeightedPool, see:  https://github.com/balancer/balancer-v2-monorepo/blob/master/pkg/pool-weighted/contracts/WeightedPool.sol#L325-L344"}, "getInvariant()": {"details": "Returns the current value of the invariant."}, "getInvariantDivActualSupply()": {"notice": "Equivalent to but more efficient than `getInvariant().divDown(getActualSupply())`."}, "getMiscData()": {"details": "Only `swapFeePercentage` is non-trivial; everything else is 0/false because the oracle is not used. These variables are returned to keep the call signature compatible."}, "getPausedState()": {"details": "Returns the current contract pause status, as well as the end times of the Pause Window and Buffer Period."}, "getPrice()": {"notice": "Returns the current spot price of token0 quoted in units of token1. When rateProvider{0,1} is provided, the returned price corresponds to tokens *before* rate scaling."}, "getRate()": {"details": "This function returns the appreciation of one BPT relative to the underlying tokens. This starts at 1 when the pool is created and grows over time"}, "getSqrtParameters()": {"details": "Returns sqrtAlpha and sqrtBeta (square roots of lower and upper price bounds of p_x respectively)"}, "getTokenRates()": {"notice": "Convenience function to fetch the two rates used for scaling the two tokens, as of rateProvider{0,1}. Note that these rates do *not* contain scaling to account for differences in the number of decimals. The rates themselves are always 18-decimals."}, "getVirtualParameters()": {"details": "Returns virtual offsets a and b for reserves x and y respectively, as in (x+a)*(y+b)=L^2"}, "increaseAllowance(address,uint256)": {"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."}, "name()": {"details": "Returns the name of the token."}, "nonces(address)": {"details": "See {IERC20Permit-nonces}."}, "onExitPool(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Called by the Vault when a user calls `IVault.exitPool` to remove liquidity from this Pool. Returns how many tokens the Vault should deduct from the Pool's balances, as well as the amount of protocol fees the Pool owes to the Vault. The Vault will then take tokens from the Pool's balances and send them to `recipient`, as well as collect the reported amount in protocol fees, which the Pool should calculate based on `protocolSwapFeePercentage`. Protocol fees are charged on exit events to guarantee that users exiting the Pool have paid their share. `sender` is the account performing the exit (typically the pool shareholder), and `recipient` is the account to which the Vault will send the proceeds. `balances` contains the total token balances for each token the Pool registered in the Vault, in the same order that `IVault.getPoolTokens` would return. `lastChangeBlock` is the last block in which *any* of the Pool's registered tokens last changed its total balance. `userData` contains any pool-specific instructions needed to perform the calculations, such as the type of exit (e.g., proportional given an amount of pool shares, single-asset, multi-asset, etc.) Contracts implementing this function should check that the caller is indeed the Vault before performing any state-changing operations, such as burning pool shares."}, "onJoinPool(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Called by the Vault when a user calls `IVault.joinPool` to add liquidity to this Pool. Returns how many of each registered token the user should provide, as well as the amount of protocol fees the Pool owes to the Vault. The Vault will then take tokens from `sender` and add them to the Pool's balances, as well as collect the reported amount in protocol fees, which the pool should calculate based on `protocolSwapFeePercentage`. Protocol fees are reported and charged on join events so that the Pool is free of debt whenever new users join. `sender` is the account performing the join (from which tokens will be withdrawn), and `recipient` is the account designated to receive any benefits (typically pool shares). `balances` contains the total balances for each token the Pool registered in the Vault, in the same order that `IVault.getPoolTokens` would return. `lastChangeBlock` is the last block in which *any* of the Pool's registered tokens last changed its total balance. `userData` contains any pool-specific instructions needed to perform the calculations, such as the type of join (e.g., proportional given an amount of pool shares, single-asset, multi-asset, etc.) Contracts implementing this function should check that the caller is indeed the Vault before performing any state-changing operations, such as minting pool shares."}, "pause()": {"notice": "Pauses the pool. Can only be called by the pause manager."}, "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {"details": "See {IERC20Permit-permit}."}, "queryExit(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Returns the amount of BPT that would be burned from `sender` if the `onExitPool` hook were called by the Vault with the same arguments, along with the number of tokens `recipient` would receive. This function is not meant to be called directly, but rather from a helper contract that fetches current Vault data, such as the protocol swap fee percentage and Pool balances. Like `IVault.queryBatchSwap`, this function is not view due to internal implementation details: the caller must explicitly use eth_call instead of eth_sendTransaction."}, "queryJoin(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Returns the amount of BPT that would be granted to `recipient` if the `onJoinPool` hook were called by the Vault with the same arguments, along with the number of tokens `sender` would have to supply. This function is not meant to be called directly, but rather from a helper contract that fetches current Vault data, such as the protocol swap fee percentage and Pool balances. Like `IVault.queryBatchSwap`, this function is not view due to internal implementation details: the caller must explicitly use eth_call instead of eth_sendTransaction."}, "symbol()": {"details": "Returns the symbol of the token, usually a shorter version of the name."}, "totalSupply()": {"details": "See {IERC20-totalSupply}."}, "transfer(address,uint256)": {"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."}, "transferFrom(address,address,uint256)": {"details": "Override to allow for 'infinite allowance' and let the token owner use `transferFrom` with no self-allowance"}, "unpause()": {"notice": "Unpauses the pool. Can only be called by the pause manager."}}, "stateVariables": {"rateProvider0": {"details": "for rate scaling"}}, "version": 1}, "offset": [1004, 30691], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2F1 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x19D JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xAAABADC5 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x601 JUMPI DUP1 PUSH4 0xD5C096C4 EQ PUSH2 0x614 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x627 JUMPI DUP1 PUSH4 0xF89F27ED EQ PUSH2 0x63A JUMPI PUSH2 0x2F1 JUMP JUMPDEST DUP1 PUSH4 0xAAABADC5 EQ PUSH2 0x5E9 JUMPI DUP1 PUSH4 0xABD13AFE EQ PUSH2 0x5F1 JUMPI DUP1 PUSH4 0xC0FF1A15 EQ PUSH2 0x5F9 JUMPI PUSH2 0x2F1 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x598 JUMPI DUP1 PUSH4 0x98D5FDCA EQ PUSH2 0x5A0 JUMPI DUP1 PUSH4 0x9B02CDDE EQ PUSH2 0x5A8 JUMPI DUP1 PUSH4 0x9D2C110C EQ PUSH2 0x5B0 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x5C3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5D6 JUMPI PUSH2 0x2F1 JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x87EC6817 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x87EC6817 EQ PUSH2 0x560 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x573 JUMPI DUP1 PUSH4 0x8D928AF8 EQ PUSH2 0x57B JUMPI DUP1 PUSH4 0x8DD9F89D EQ PUSH2 0x583 JUMPI PUSH2 0x2F1 JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x53D JUMPI DUP1 PUSH4 0x851C1BB3 EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0x876F303B EQ PUSH2 0x558 JUMPI PUSH2 0x2F1 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4C8 JUMPI DUP1 PUSH4 0x74F3B009 EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0x76E54A46 EQ PUSH2 0x4FC JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x50F JUMPI DUP1 PUSH4 0x8002DF18 EQ PUSH2 0x522 JUMPI DUP1 PUSH4 0x828A7C34 EQ PUSH2 0x535 JUMPI PUSH2 0x2F1 JUMP JUMPDEST DUP1 PUSH4 0x3AEAE0D3 GT PUSH2 0x25C JUMPI DUP1 PUSH4 0x6028BFD4 GT PUSH2 0x215 JUMPI DUP1 PUSH4 0x679AEFCE GT PUSH2 0x1EF JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x48D JUMPI DUP1 PUSH4 0x6D785A87 EQ PUSH2 0x495 JUMPI DUP1 PUSH4 0x702EC091 EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0x707DCD1E EQ PUSH2 0x4B3 JUMPI PUSH2 0x2F1 JUMP JUMPDEST DUP1 PUSH4 0x6028BFD4 EQ PUSH2 0x45C JUMPI DUP1 PUSH4 0x623A2E75 EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0x62CED092 EQ PUSH2 0x485 JUMPI PUSH2 0x2F1 JUMP JUMPDEST DUP1 PUSH4 0x3AEAE0D3 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0x3C4DD5BB EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x41D JUMPI DUP1 PUSH4 0x44BBDB55 EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0x4A6B0B15 EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0x55C67628 EQ PUSH2 0x454 JUMPI PUSH2 0x2F1 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x2AE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x38E9922E EQ PUSH2 0x3B8 JUMPI DUP1 PUSH4 0x38FFF2D0 EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x3D3 JUMPI PUSH2 0x2F1 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xE608B30 EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0x1C0DE051 EQ PUSH2 0x371 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2FE PUSH2 0x642 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x4755 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x327 PUSH2 0x322 CALLDATASIZE PUSH1 0x4 PUSH2 0x428E JUMP JUMPDEST PUSH2 0x6D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x46E8 JUMP JUMPDEST PUSH2 0x347 PUSH2 0x342 CALLDATASIZE PUSH1 0x4 PUSH2 0x4169 JUMP JUMPDEST PUSH2 0x6EF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x347 PUSH2 0x357 CALLDATASIZE PUSH1 0x4 PUSH2 0x42B9 JUMP JUMPDEST PUSH2 0x7A0 JUMP JUMPDEST PUSH2 0x364 PUSH2 0x7B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x470B JUMP JUMPDEST PUSH2 0x379 PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x46F3 JUMP JUMPDEST PUSH2 0x327 PUSH2 0x396 CALLDATASIZE PUSH1 0x4 PUSH2 0x41D9 JUMP JUMPDEST PUSH2 0x7E3 JUMP JUMPDEST PUSH2 0x3A3 PUSH2 0x857 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x4845 JUMP JUMPDEST PUSH2 0x364 PUSH2 0x860 JUMP JUMPDEST PUSH2 0x347 PUSH2 0x3C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x457D JUMP JUMPDEST PUSH2 0x86F JUMP JUMPDEST PUSH2 0x364 PUSH2 0x888 JUMP JUMPDEST PUSH2 0x327 PUSH2 0x3E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x428E JUMP JUMPDEST PUSH2 0x8AC JUMP JUMPDEST PUSH2 0x3EE PUSH2 0x8E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x47A8 JUMP JUMPDEST PUSH2 0x40E PUSH2 0x409 CALLDATASIZE PUSH1 0x4 PUSH2 0x45AD JUMP JUMPDEST PUSH2 0x932 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x482F JUMP JUMPDEST PUSH2 0x347 PUSH2 0x985 JUMP JUMPDEST PUSH2 0x42D PUSH2 0xA7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x466B JUMP JUMPDEST PUSH2 0x442 PUSH2 0xA89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x472B JUMP JUMPDEST PUSH2 0x364 PUSH2 0xAE4 JUMP JUMPDEST PUSH2 0x46F PUSH2 0x46A CALLDATASIZE PUSH1 0x4 PUSH2 0x42D3 JUMP JUMPDEST PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP3 SWAP2 SWAP1 PUSH2 0x4808 JUMP JUMPDEST PUSH2 0x364 PUSH2 0xB22 JUMP JUMPDEST PUSH2 0x42D PUSH2 0xB7E JUMP JUMPDEST PUSH2 0x364 PUSH2 0xBA2 JUMP JUMPDEST PUSH2 0x42D PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4A5 PUSH2 0xBD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP3 SWAP2 SWAP1 PUSH2 0x4821 JUMP JUMPDEST PUSH2 0x4BB PUSH2 0xD7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x467F JUMP JUMPDEST PUSH2 0x364 PUSH2 0x4D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x4169 JUMP JUMPDEST PUSH2 0xD8B JUMP JUMPDEST PUSH2 0x4EE PUSH2 0x4E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x42D3 JUMP JUMPDEST PUSH2 0xDAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP3 SWAP2 SWAP1 PUSH2 0x46C3 JUMP JUMPDEST PUSH2 0x347 PUSH2 0x50A CALLDATASIZE PUSH1 0x4 PUSH2 0x4407 JUMP JUMPDEST PUSH2 0xE3A JUMP JUMPDEST PUSH2 0x364 PUSH2 0x51D CALLDATASIZE PUSH1 0x4 PUSH2 0x4169 JUMP JUMPDEST PUSH2 0xF61 JUMP JUMPDEST PUSH2 0x347 PUSH2 0x530 CALLDATASIZE PUSH1 0x4 PUSH2 0x4169 JUMP JUMPDEST PUSH2 0xF7C JUMP JUMPDEST PUSH2 0x42D PUSH2 0x1062 JUMP JUMPDEST PUSH2 0x347 PUSH2 0x1086 JUMP JUMPDEST PUSH2 0x364 PUSH2 0x553 CALLDATASIZE PUSH1 0x4 PUSH2 0x43DF JUMP JUMPDEST PUSH2 0x113E JUMP JUMPDEST PUSH2 0x364 PUSH2 0x1197 JUMP JUMPDEST PUSH2 0x46F PUSH2 0x56E CALLDATASIZE PUSH1 0x4 PUSH2 0x42D3 JUMP JUMPDEST PUSH2 0x11D8 JUMP JUMPDEST PUSH2 0x42D PUSH2 0x11FD JUMP JUMPDEST PUSH2 0x42D PUSH2 0x1221 JUMP JUMPDEST PUSH2 0x58B PUSH2 0x1245 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x46B0 JUMP JUMPDEST PUSH2 0x2FE PUSH2 0x12DF JUMP JUMPDEST PUSH2 0x364 PUSH2 0x1340 JUMP JUMPDEST PUSH2 0x364 PUSH2 0x139C JUMP JUMPDEST PUSH2 0x364 PUSH2 0x5BE CALLDATASIZE PUSH1 0x4 PUSH2 0x4486 JUMP JUMPDEST PUSH2 0x13A2 JUMP JUMPDEST PUSH2 0x327 PUSH2 0x5D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x428E JUMP JUMPDEST PUSH2 0x1528 JUMP JUMPDEST PUSH2 0x327 PUSH2 0x5E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x428E JUMP JUMPDEST PUSH2 0x1566 JUMP JUMPDEST PUSH2 0x42D PUSH2 0x1573 JUMP JUMPDEST PUSH2 0x42D PUSH2 0x157D JUMP JUMPDEST PUSH2 0x364 PUSH2 0x158C JUMP JUMPDEST PUSH2 0x347 PUSH2 0x60F CALLDATASIZE PUSH1 0x4 PUSH2 0x4219 JUMP JUMPDEST PUSH2 0x15C7 JUMP JUMPDEST PUSH2 0x4EE PUSH2 0x622 CALLDATASIZE PUSH1 0x4 PUSH2 0x42D3 JUMP JUMPDEST PUSH2 0x1737 JUMP JUMPDEST PUSH2 0x364 PUSH2 0x635 CALLDATASIZE PUSH1 0x4 PUSH2 0x41A1 JUMP JUMPDEST PUSH2 0x181C JUMP JUMPDEST PUSH2 0x58B PUSH2 0x1859 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x6CE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6A3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6CE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6B1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6E5 CALLER DUP5 DUP5 PUSH2 0x18B2 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x1B9BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x749 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x740 SWAP2 SWAP1 PUSH2 0x4755 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xB8FD9AFC34C38FCD13B9A3B7646482EB1FDDCEFB40AF2C70609972816EBA3208 SWAP1 PUSH2 0x795 SWAP1 DUP4 SWAP1 PUSH2 0x466B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x7A8 PUSH2 0x1914 JUMP JUMPDEST PUSH2 0x7B1 DUP2 PUSH2 0x1942 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x7C7 PUSH2 0x19BE JUMP JUMPDEST ISZERO SWAP3 POP PUSH2 0x7D2 PUSH2 0x19DB JUMP JUMPDEST SWAP2 POP PUSH2 0x7DC PUSH2 0x19FF JUMP JUMPDEST SWAP1 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7F0 DUP6 CALLER PUSH2 0x181C JUMP JUMPDEST SWAP1 POP PUSH2 0x814 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND EQ DUP1 PUSH2 0x80C JUMPI POP DUP4 DUP3 LT ISZERO JUMPDEST PUSH2 0x19E PUSH2 0x1A23 JUMP JUMPDEST PUSH2 0x81F DUP6 DUP6 DUP6 PUSH2 0x1A31 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x83A JUMPI POP PUSH1 0x0 NOT DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x84C JUMPI PUSH2 0x84C DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x18B2 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86A PUSH2 0x1B19 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x877 PUSH2 0x1914 JUMP JUMPDEST PUSH2 0x87F PUSH2 0x1BD7 JUMP JUMPDEST PUSH2 0x7B1 DUP2 PUSH2 0x1BEC JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x6E5 SWAP2 DUP6 SWAP1 PUSH2 0x8E2 SWAP1 DUP7 PUSH2 0x1C55 JUMP JUMPDEST PUSH2 0x18B2 JUMP JUMPDEST PUSH2 0x8EF PUSH2 0x409C JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0xA SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP3 MSTORE PUSH2 0x100 DUP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x941 DUP6 PUSH2 0x1C67 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x94F DUP7 ISZERO PUSH2 0x1C67 JUMP JUMPDEST SWAP1 POP PUSH2 0x95B DUP9 DUP4 PUSH2 0x1D94 JUMP JUMPDEST SWAP8 POP PUSH2 0x967 DUP8 DUP3 PUSH2 0x1D94 JUMP JUMPDEST SWAP7 POP PUSH2 0x974 DUP9 DUP9 DUP9 PUSH2 0x1DA0 JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP POP POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x3737BA103830BAB9B29036B0B730B3B2B9 PUSH1 0x79 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA44 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA09 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9F1 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xA36 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0xA4F PUSH1 0x0 PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x215385C8BFC731925EC8068D7BAA50F6B6F34417CC7804F7273DC2C0B3DB2790 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x8 SLOAD SWAP1 POP PUSH2 0xAA2 DUP2 PUSH2 0x1E6F JUMP JUMPDEST SWAP7 POP PUSH2 0xAAD DUP2 PUSH2 0x1E7B JUMP JUMPDEST SWAP6 POP PUSH2 0xAB8 DUP2 PUSH2 0x1E88 JUMP JUMPDEST SWAP5 POP PUSH2 0xAC3 DUP2 PUSH2 0x1E95 JUMP JUMPDEST SWAP4 POP PUSH2 0xACE DUP2 PUSH2 0x1EA2 JUMP JUMPDEST SWAP3 POP PUSH2 0xAD9 DUP2 PUSH2 0x1EAF JUMP JUMPDEST SWAP2 POP POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86A PUSH1 0x8 SLOAD PUSH2 0x1EAF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0xB01 DUP7 MLOAD PUSH1 0x2 PUSH2 0x1EBC JUMP JUMPDEST PUSH2 0xB16 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x1EC9 PUSH2 0x1F90 PUSH2 0x200E JUMP JUMPDEST SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB2D PUSH2 0x158C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB39 PUSH2 0x7B4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0xB4A PUSH1 0x9 SLOAD DUP6 PUSH2 0x2121 JUMP JUMPDEST POP SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x0 SWAP1 POP PUSH2 0xB68 DUP3 PUSH2 0xB62 DUP7 DUP7 PUSH2 0x218A JUMP JUMPDEST SWAP1 PUSH2 0x218A JUMP JUMPDEST SWAP1 POP PUSH2 0xB74 DUP6 DUP3 PUSH2 0x21A2 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86A PUSH2 0xBAF PUSH2 0x7B4 JUMP JUMPDEST PUSH2 0xBC1 PUSH2 0xBBA PUSH2 0x158C JUMP JUMPDEST PUSH1 0x2 PUSH2 0x21FC JUMP JUMPDEST SWAP1 PUSH2 0x21A2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC15 JUMPI PUSH8 0xDE0B6B3A7640000 PUSH2 0xCA6 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x679AEFCE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCA6 SWAP2 SWAP1 PUSH2 0x4595 JUMP JUMPDEST SWAP2 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCE4 JUMPI PUSH8 0xDE0B6B3A7640000 PUSH2 0xD75 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x679AEFCE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD51 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD75 SWAP2 SWAP1 PUSH2 0x4595 JUMP JUMPDEST SWAP1 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0xD83 PUSH2 0x40BC JUMP JUMPDEST PUSH2 0x86A PUSH2 0x2220 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP9 PUSH2 0xDD4 PUSH2 0xDB9 PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH1 0xCD PUSH2 0x1A23 JUMP JUMPDEST PUSH2 0xDE9 PUSH2 0xDDF PUSH2 0x888 JUMP JUMPDEST DUP3 EQ PUSH2 0x1F4 PUSH2 0x1A23 JUMP JUMPDEST PUSH2 0xDF2 DUP8 PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xE06 DUP14 DUP14 DUP14 DUP14 DUP14 DUP14 DUP14 PUSH2 0x1EC9 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xE16 DUP13 DUP5 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0xE1F DUP3 PUSH2 0x1F90 JUMP JUMPDEST PUSH2 0xE28 DUP2 PUSH2 0x1F90 JUMP JUMPDEST SWAP1 SWAP13 SWAP1 SWAP12 POP SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x1B9BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x740 SWAP2 SWAP1 PUSH2 0x4755 JUMP JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH16 0x1C1BDBDB081A5CC81D5B98D85C1C1959 PUSH1 0x82 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0xED7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x740 SWAP2 SWAP1 PUSH2 0x4755 JUMP JUMPDEST POP DUP1 MLOAD PUSH1 0xA DUP1 SLOAD PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP1 DUP7 ADD MLOAD PUSH1 0xFF NOT SWAP1 SWAP4 AND SWAP5 ISZERO ISZERO SWAP5 SWAP1 SWAP5 OR PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL OR PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x80 SHL SWAP2 SWAP1 SWAP3 AND MUL OR DUP2 SSTORE SWAP1 MLOAD PUSH32 0x2ABF5970D7BC1A2B36EAAE52DD2CC353EDB0337C7284EF8A01973081B4E04424 SWAP2 PUSH2 0x795 SWAP2 PUSH2 0x47DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x3737BA103830BAB9B29036B0B730B3B2B9 PUSH1 0x79 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLER DUP3 EQ PUSH2 0x1001 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0xA09 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9F1 JUMP JUMPDEST POP PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 DUP5 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD PUSH32 0x1FFCCD1FA96F4FB3415DF8048A0FD107344E262D2D246C85105E2A3F8F3E8198 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x3737BA103830BAB9B29036B0B730B3B2B9 PUSH1 0x79 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1108 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0xA09 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9F1 JUMP JUMPDEST POP PUSH2 0x1113 PUSH1 0x1 PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x681EACE576127D0553B224436A09801FB47D042942CBFF59D7D4FF04D8FA03D7 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x0 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP5 AND DUP3 DUP5 ADD MSTORE DUP3 MLOAD PUSH1 0x24 DUP2 DUP5 SUB ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x11A2 PUSH2 0x7B4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x11BA PUSH1 0x9 SLOAD PUSH2 0x11B5 PUSH2 0x158C JUMP JUMPDEST PUSH2 0x2121 JUMP JUMPDEST POP SWAP2 SWAP4 POP SWAP2 POP PUSH2 0x11D0 SWAP1 POP DUP2 PUSH2 0xB62 DUP6 DUP6 PUSH2 0x218A JUMP JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x11E8 DUP7 MLOAD PUSH1 0x2 PUSH2 0x1EBC JUMP JUMPDEST PUSH2 0xB16 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x22B2 PUSH2 0x2371 PUSH2 0x200E JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1251 PUSH2 0x23D3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE SWAP3 SWAP4 POP SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP2 POP PUSH2 0x12A8 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1284 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1299 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH2 0x1DA0 JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x12B8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP5 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x12CC JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD SWAP2 SWAP1 SWAP2 MSTORE MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x6CE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6A3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x134B PUSH2 0x23D3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1377 DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1362 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1299 JUMPI INVALID JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1388 DUP5 DUP4 DUP4 PUSH2 0x2489 JUMP JUMPDEST SWAP5 POP PUSH2 0x1393 DUP6 PUSH2 0x24BF JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13AC PUSH2 0x1BD7 JUMP JUMPDEST DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0x13BC PUSH2 0xDB9 PUSH2 0x1221 JUMP JUMPDEST PUSH2 0x13C7 PUSH2 0xDDF PUSH2 0x888 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP PUSH1 0x0 PUSH2 0x140F DUP3 PUSH2 0x1C67 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x141D DUP4 ISZERO PUSH2 0x1C67 JUMP JUMPDEST SWAP1 POP PUSH2 0x1429 DUP8 DUP4 PUSH2 0x1D94 JUMP JUMPDEST SWAP7 POP PUSH2 0x1435 DUP7 DUP3 PUSH2 0x1D94 JUMP JUMPDEST SWAP6 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1447 DUP11 DUP11 DUP9 PUSH2 0x1DA0 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH1 0x0 DUP12 MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x145D JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x14CC JUMPI PUSH1 0x0 PUSH2 0x147B PUSH2 0x1470 PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x60 DUP15 ADD MLOAD SWAP1 PUSH2 0x265F JUMP JUMPDEST SWAP1 POP PUSH2 0x149D PUSH2 0x1497 DUP3 DUP15 PUSH1 0x60 ADD MLOAD PUSH2 0x26B4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH2 0x1D94 JUMP JUMPDEST PUSH1 0x60 DUP14 ADD MSTORE PUSH1 0x0 PUSH2 0x14B1 DUP14 DUP14 DUP14 DUP8 DUP8 PUSH2 0x26CA JUMP JUMPDEST SWAP1 POP PUSH2 0x14BD DUP2 DUP8 PUSH2 0x26E9 JUMP JUMPDEST SWAP10 POP POP POP POP POP POP POP POP POP PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x14DA DUP12 PUSH1 0x60 ADD MLOAD DUP6 PUSH2 0x1D94 JUMP JUMPDEST PUSH1 0x60 DUP13 ADD MSTORE PUSH1 0x0 PUSH2 0x14EE DUP13 DUP13 DUP13 DUP7 DUP7 PUSH2 0x26F5 JUMP JUMPDEST SWAP1 POP PUSH2 0x14FA DUP2 DUP8 PUSH2 0x2708 JUMP JUMPDEST SWAP1 POP PUSH2 0x1516 PUSH2 0x150F PUSH2 0x150A PUSH2 0xAE4 JUMP JUMPDEST PUSH2 0x2714 JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x273A JUMP JUMPDEST SWAP9 POP POP POP POP POP POP POP POP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1535 CALLER DUP6 PUSH2 0x181C JUMP JUMPDEST SWAP1 POP DUP1 DUP4 LT PUSH2 0x154F JUMPI PUSH2 0x154A CALLER DUP6 PUSH1 0x0 PUSH2 0x18B2 JUMP JUMPDEST PUSH2 0x155C JUMP JUMPDEST PUSH2 0x155C CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x18B2 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6E5 CALLER DUP5 DUP5 PUSH2 0x1A31 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86A PUSH2 0x27A0 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1597 PUSH2 0x23D3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x15A3 PUSH2 0x2220 JUMP JUMPDEST SWAP1 POP PUSH2 0x15C0 DUP3 DUP3 PUSH1 0x0 JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH1 0x1 JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x281A JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x15D5 DUP5 TIMESTAMP GT ISZERO PUSH1 0xD1 PUSH2 0x1A23 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD PUSH32 0x0 DUP2 DUP6 ADD MSTORE DUP1 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP5 DUP12 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD DUP11 SWAP1 MSTORE PUSH1 0xA0 DUP5 ADD DUP6 SWAP1 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP11 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 SWAP1 SWAP5 ADD SWAP1 MSTORE DUP3 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP1 PUSH2 0x1661 DUP3 PUSH2 0x284D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP PUSH2 0x1701 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x16F9 JUMPI POP DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1F8 PUSH2 0x1A23 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP6 ADD SWAP1 SSTORE PUSH2 0x172A DUP12 DUP12 DUP12 PUSH2 0x18B2 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP9 PUSH2 0x1746 PUSH2 0xDB9 PUSH2 0x1221 JUMP JUMPDEST PUSH2 0x1751 PUSH2 0xDDF PUSH2 0x888 JUMP JUMPDEST PUSH2 0x1759 PUSH2 0x1BD7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1763 PUSH2 0x7B4 JUMP JUMPDEST PUSH2 0x17D3 JUMPI PUSH2 0x1773 DUP12 DUP12 DUP12 DUP9 PUSH2 0x2899 JUMP JUMPDEST SWAP5 POP SWAP1 POP PUSH2 0x1788 PUSH3 0xF4240 DUP3 LT ISZERO PUSH1 0xCC PUSH2 0x1A23 JUMP JUMPDEST PUSH2 0x1796 PUSH1 0x0 PUSH3 0xF4240 PUSH2 0x296E JUMP JUMPDEST PUSH2 0x17A5 DUP10 PUSH3 0xF4240 DUP4 SUB PUSH2 0x296E JUMP JUMPDEST PUSH2 0x17AE DUP5 PUSH2 0x2371 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE SWAP1 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP3 POP PUSH2 0x180E JUMP JUMPDEST PUSH2 0x17DC DUP9 PUSH2 0x2246 JUMP JUMPDEST PUSH2 0x17EB DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH2 0x22B2 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP SWAP1 POP PUSH2 0x17FC DUP10 DUP3 PUSH2 0x296E JUMP JUMPDEST PUSH2 0x1805 DUP5 PUSH2 0x2371 JUMP JUMPDEST PUSH2 0x180E DUP4 PUSH2 0x1F90 JUMP JUMPDEST POP POP SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1826 PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1848 JUMPI POP PUSH1 0x0 NOT PUSH2 0x6E9 JUMP JUMPDEST PUSH2 0x1852 DUP4 DUP4 PUSH2 0x2978 JUMP JUMPDEST SWAP1 POP PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x86A PUSH2 0x29A3 JUMP JUMPDEST DUP1 PUSH2 0x186D DUP2 PUSH2 0x2A12 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x187F DUP4 DUP4 PUSH1 0x56 PUSH2 0x189C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1896 DUP4 DUP4 GT ISZERO PUSH1 0x1 PUSH2 0x1A23 JUMP JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 SHL NOT SWAP3 SWAP1 SWAP3 AND SWAP2 SHL OR SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x192B PUSH1 0x0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x113E JUMP JUMPDEST SWAP1 POP PUSH2 0x7B1 PUSH2 0x193A DUP3 CALLER PUSH2 0x2A90 JUMP JUMPDEST PUSH2 0x191 PUSH2 0x1A23 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1962 JUMPI PUSH2 0x195D PUSH2 0x1953 PUSH2 0x19DB JUMP JUMPDEST TIMESTAMP LT PUSH2 0x193 PUSH2 0x1A23 JUMP JUMPDEST PUSH2 0x1977 JUMP JUMPDEST PUSH2 0x1977 PUSH2 0x196D PUSH2 0x19FF JUMP JUMPDEST TIMESTAMP LT PUSH2 0x1A9 PUSH2 0x1A23 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH32 0x9E3A5E37224532DEA67B89FACE185703738A228A6E8A23DEE546960180D3BE64 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19C8 PUSH2 0x19FF JUMP JUMPDEST TIMESTAMP GT DUP1 PUSH2 0x86A JUMPI POP POP PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST DUP2 PUSH2 0x186D JUMPI PUSH2 0x186D DUP2 PUSH2 0x2B92 JUMP JUMPDEST PUSH2 0x1A48 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO ISZERO PUSH2 0x198 PUSH2 0x1A23 JUMP JUMPDEST PUSH2 0x1A5F PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x199 PUSH2 0x1A23 JUMP JUMPDEST PUSH2 0x1A6A DUP4 DUP4 DUP4 PUSH2 0x2A8B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1A90 SWAP1 DUP3 PUSH2 0x1A0 PUSH2 0x2BE5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1ABF SWAP1 DUP3 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x1B86 PUSH2 0x2BFB JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1BEA PUSH2 0x1BE2 PUSH2 0x19BE JUMP JUMPDEST PUSH2 0x192 PUSH2 0x1A23 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1BFF PUSH5 0xE8D4A51000 DUP3 LT ISZERO PUSH1 0xCB PUSH2 0x1A23 JUMP JUMPDEST PUSH2 0x1C15 PUSH8 0x16345785D8A0000 DUP3 GT ISZERO PUSH1 0xCA PUSH2 0x1A23 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1C22 SWAP1 DUP3 PUSH2 0x1871 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x40 MLOAD PUSH32 0xA9BA3FFE0B6C366B81232CAAB38605A0699AD5398D6CCE76F91EE809E322DAFC SWAP1 PUSH2 0x795 SWAP1 DUP4 SWAP1 PUSH2 0x470B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH2 0x187F DUP5 DUP3 LT ISZERO DUP4 PUSH2 0x1A23 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1CBC JUMPI POP PUSH32 0x0 SWAP1 POP PUSH32 0x0 PUSH2 0x1D02 JUMP JUMPDEST POP PUSH32 0x0 SWAP1 POP PUSH32 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x187F JUMPI PUSH2 0x1D8C DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x679AEFCE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D61 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D85 SWAP2 SWAP1 PUSH2 0x4595 JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x2BFF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x187F DUP4 DUP4 PUSH2 0x2BFF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP5 PUSH2 0x1DD2 JUMPI DUP6 PUSH2 0x1DD4 JUMP JUMPDEST DUP7 JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1DE1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP5 PUSH2 0x1DF8 JUMPI DUP7 PUSH2 0x1DFA JUMP JUMPDEST DUP6 JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1E07 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 PUSH2 0x1E1D PUSH2 0x2220 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E2B DUP3 DUP3 PUSH1 0x0 PUSH2 0x15AD JUMP JUMPDEST SWAP5 POP PUSH1 0x0 PUSH2 0x1E39 DUP3 DUP8 PUSH2 0x2C38 JUMP JUMPDEST SWAP1 POP DUP7 PUSH2 0x1E4A JUMPI PUSH1 0x20 DUP2 ADD MLOAD PUSH2 0x1E4D JUMP JUMPDEST DUP1 MLOAD JUMPDEST SWAP5 POP DUP7 PUSH2 0x1E5B JUMPI DUP1 MLOAD PUSH2 0x1E61 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD JUMPDEST SWAP4 POP POP POP POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6E9 DUP3 DUP3 PUSH2 0x2C6C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6E9 DUP3 PUSH1 0x16 PUSH2 0x2C6C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6E9 DUP3 PUSH1 0x2C PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6E9 DUP3 PUSH1 0x4B PUSH2 0x2C9D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6E9 DUP3 PUSH1 0x55 PUSH2 0x2CA5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6E9 DUP3 PUSH1 0x56 PUSH2 0x2CAF JUMP JUMPDEST PUSH2 0x186D DUP2 DUP4 EQ PUSH1 0x67 PUSH2 0x1A23 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 PUSH2 0x1ED8 PUSH2 0x2220 JUMP JUMPDEST SWAP1 POP PUSH2 0x1EE2 PUSH2 0x19BE JUMP JUMPDEST ISZERO PUSH2 0x1F44 JUMPI PUSH1 0x0 PUSH2 0x1EFD DUP10 DUP4 DUP4 JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH1 0x1 PUSH2 0x15B6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1F0B DUP4 DUP4 PUSH2 0x2C38 JUMP JUMPDEST SWAP1 POP PUSH2 0x1F16 DUP3 PUSH2 0x2CBD JUMP JUMPDEST PUSH2 0x1F20 DUP11 DUP9 PUSH2 0x2CEA JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH2 0x1F39 DUP3 DUP8 PUSH2 0x1F32 PUSH2 0x7B4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D36 JUMP JUMPDEST PUSH1 0x9 SSTORE POP PUSH2 0x1F5A SWAP1 POP JUMP JUMPDEST PUSH2 0x1F4E DUP9 DUP7 PUSH2 0x2CEA JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0x9 SSTORE SWAP1 SWAP5 POP SWAP3 POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE DUP7 SWAP3 DUP7 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP8 POP SWAP8 POP SWAP8 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1FB7 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1FA0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1FB2 PUSH1 0x1 PUSH2 0x1C67 JUMP JUMPDEST PUSH2 0x21A2 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1FC4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x1FF2 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1FE0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1FB2 PUSH1 0x0 PUSH2 0x1C67 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1FFF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x20CC JUMPI PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD PUSH2 0x2032 SWAP3 SWAP2 SWAP1 PUSH2 0x465B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x206F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2074 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2083 JUMPI INVALID JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x43ADBAFB PUSH1 0xE0 SHL DUP2 EQ PUSH2 0x20AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x4 PUSH1 0x0 RETURNDATACOPY PUSH1 0x40 PUSH1 0x20 MSTORE PUSH1 0x24 RETURNDATASIZE SUB PUSH1 0x24 PUSH1 0x40 RETURNDATACOPY PUSH1 0x1C RETURNDATASIZE ADD PUSH1 0x0 RETURN JUMPDEST PUSH2 0x20D5 DUP7 PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x20EB DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x20FD DUP2 DUP5 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1F NOT DUP3 ADD DUP4 SWAP1 MSTORE PUSH4 0x43ADBAFB PUSH1 0x3F NOT DUP4 ADD MSTORE PUSH1 0x20 MUL PUSH1 0x23 NOT DUP3 ADD PUSH1 0x44 DUP3 ADD DUP2 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x2135 PUSH2 0x2D8E JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP DUP4 PUSH1 0x0 EQ ISZERO PUSH2 0x215A JUMPI PUSH1 0x0 SWAP8 POP DUP8 SWAP7 POP SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x2181 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2171 DUP13 DUP13 PUSH2 0x216A PUSH2 0x7B4 JUMP JUMPDEST DUP10 DUP10 PUSH2 0x2F00 JUMP JUMPDEST SWAP1 SWAP11 POP SWAP9 POP SWAP3 SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP JUMPDEST SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x187F JUMPI PUSH2 0x187F PUSH1 0x0 DUP1 PUSH2 0x1A23 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x21B5 JUMPI PUSH2 0x21B5 PUSH1 0x0 PUSH1 0x4 PUSH2 0x1A23 JUMP JUMPDEST DUP3 PUSH2 0x21C2 JUMPI POP PUSH1 0x0 PUSH2 0x6E9 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 DUP2 MUL SWAP1 DUP5 DUP3 DUP2 PUSH2 0x21D8 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x21EA JUMPI PUSH2 0x21EA PUSH1 0x0 PUSH1 0x5 PUSH2 0x1A23 JUMP JUMPDEST DUP3 DUP2 DUP2 PUSH2 0x21F3 JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL PUSH2 0x187F DUP5 ISZERO DUP1 PUSH2 0x2219 JUMPI POP DUP4 DUP6 DUP4 DUP2 PUSH2 0x2216 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH1 0x3 PUSH2 0x1A23 JUMP JUMPDEST PUSH2 0x2228 PUSH2 0x40BC JUMP JUMPDEST PUSH2 0x2232 PUSH1 0x1 PUSH2 0x2F9B JUMP JUMPDEST DUP2 MSTORE PUSH2 0x223E PUSH1 0x0 PUSH2 0x2F9B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x226D DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2256 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2268 PUSH1 0x1 PUSH2 0x1C67 JUMP JUMPDEST PUSH2 0x2BFF JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x227A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x1FF2 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2296 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2268 PUSH1 0x0 PUSH2 0x1C67 JUMP JUMPDEST PUSH2 0x186D DUP3 DUP3 PUSH2 0x2FEF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 PUSH2 0x22C1 PUSH2 0x2220 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x22D0 DUP10 DUP4 DUP4 PUSH2 0x1EF0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x22DE DUP4 DUP4 PUSH2 0x2C38 JUMP JUMPDEST SWAP1 POP PUSH2 0x22E9 DUP3 PUSH2 0x2CBD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x22F6 DUP13 DUP11 PUSH2 0x30A6 JUMP JUMPDEST PUSH1 0xA SLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x2320 JUMPI PUSH2 0x2320 DUP3 PUSH2 0x2313 DUP16 PUSH2 0xD8B JUMP JUMPDEST PUSH2 0x231B PUSH2 0x7B4 JUMP JUMPDEST PUSH2 0x30E0 JUMP JUMPDEST PUSH2 0x2334 DUP5 DUP4 PUSH2 0x232D PUSH2 0x7B4 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x2D36 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE DUP5 SWAP3 DUP5 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP8 POP SWAP8 POP SWAP8 POP POP POP POP POP POP SWAP8 POP SWAP8 POP SWAP8 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2398 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2381 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2393 PUSH1 0x1 PUSH2 0x1C67 JUMP JUMPDEST PUSH2 0x273A JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x23A5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x1FF2 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x23C1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2393 PUSH1 0x0 PUSH2 0x1C67 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH2 0x2426 PUSH32 0x0 PUSH2 0x2421 PUSH1 0x1 PUSH2 0x1C67 JUMP JUMPDEST PUSH2 0x31F2 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2433 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x246D PUSH32 0x0 PUSH2 0x2421 PUSH1 0x0 PUSH2 0x1C67 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x247A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D8C DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x249B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x24B1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH2 0x3299 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x258E JUMPI PUSH2 0x258B PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x679AEFCE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x254C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2560 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2584 SWAP2 SWAP1 PUSH2 0x4595 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x2BFF JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x265B JUMPI PUSH2 0x2658 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x679AEFCE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2619 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x262D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2651 SWAP2 SWAP1 PUSH2 0x4595 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x21A2 JUMP JUMPDEST SWAP2 POP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL DUP4 ISZERO DUP1 PUSH2 0x2679 JUMPI POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x2676 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0x2689 JUMPI PUSH2 0x2689 PUSH1 0x0 PUSH1 0x3 PUSH2 0x1A23 JUMP JUMPDEST DUP1 PUSH2 0x2698 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x6E9 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH1 0x0 NOT DUP3 ADD JUMPDEST DIV PUSH1 0x1 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1896 JUMPI PUSH2 0x1896 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1A23 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26DD DUP6 DUP6 DUP9 PUSH1 0x60 ADD MLOAD DUP7 DUP7 PUSH2 0x32B2 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x187F DUP4 DUP4 PUSH2 0x21A2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26DD DUP6 DUP6 DUP9 PUSH1 0x60 ADD MLOAD DUP7 DUP7 PUSH2 0x331C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x187F DUP4 DUP4 PUSH2 0x273A JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 LT PUSH2 0x272C JUMPI PUSH1 0x0 PUSH2 0x6E9 JUMP JUMPDEST POP PUSH8 0xDE0B6B3A7640000 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x274D JUMPI PUSH2 0x274D PUSH1 0x0 PUSH1 0x4 PUSH2 0x1A23 JUMP JUMPDEST DUP3 PUSH2 0x275A JUMPI POP PUSH1 0x0 PUSH2 0x6E9 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 DUP2 MUL SWAP1 DUP5 DUP3 DUP2 PUSH2 0x2770 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x2794 JUMPI PUSH2 0x2794 PUSH8 0xDE0B6B3A7640000 DUP6 DUP4 DUP2 PUSH2 0x278B JUMPI INVALID JUMPDEST DIV EQ PUSH1 0x5 PUSH2 0x1A23 JUMP JUMPDEST DUP3 PUSH1 0x1 DUP3 SUB DUP2 PUSH2 0x26A7 JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH2 0x27AA PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAAABADC5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x27E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x27F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x86A SWAP2 SWAP1 PUSH2 0x4185 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x282D DUP9 DUP9 DUP9 PUSH2 0x337C JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH2 0x2841 DUP5 DUP5 DUP5 DUP5 PUSH2 0x34D4 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2857 PUSH2 0x1B19 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x28A8 DUP5 PUSH2 0x3548 JUMP JUMPDEST SWAP1 POP PUSH2 0x28C3 PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x28BB JUMPI INVALID JUMPDEST EQ PUSH1 0xCE PUSH2 0x1A23 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28CE DUP6 PUSH2 0x3567 JUMP JUMPDEST SWAP1 POP PUSH2 0x28DC DUP2 MLOAD PUSH1 0x2 PUSH2 0x1EBC JUMP JUMPDEST PUSH2 0x28E5 DUP2 PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x28FA DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1362 JUMPI INVALID JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 PUSH2 0x290D DUP6 DUP5 DUP5 PUSH2 0x2489 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2955 PUSH2 0x293B DUP4 DUP9 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2925 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2BFF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2948 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x9 SWAP6 SWAP1 SWAP6 SSTORE POP SWAP3 SWAP12 SWAP4 SWAP11 POP SWAP3 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x186D DUP3 DUP3 PUSH2 0x361B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH2 0x29D2 PUSH1 0x1 PUSH2 0x36B0 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x29DF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x29F5 PUSH1 0x0 PUSH2 0x36B0 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2A02 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD LT ISZERO PUSH2 0x2A21 JUMPI PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2A30 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2A8B JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2A58 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x2A81 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH1 0x65 PUSH2 0x1A23 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x2A41 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xBA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1B PUSH2 0x2AAF PUSH2 0x11FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x2ACA JUMPI POP PUSH2 0x2ACA DUP4 PUSH2 0x3704 JUMP JUMPDEST ISZERO PUSH2 0x2AF2 JUMPI PUSH2 0x2AD7 PUSH2 0x11FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP PUSH2 0x6E9 JUMP JUMPDEST PUSH2 0x2AFA PUSH2 0x27A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9BE2A884 DUP5 DUP5 ADDRESS PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B73 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2B89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x6E9 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH7 0x42414C23000030 PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD SWAP1 SWAP5 ADD PUSH1 0x10 SHL SWAP4 SWAP1 SWAP4 ADD ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2BF4 DUP5 DUP5 GT ISZERO DUP4 PUSH2 0x1A23 JUMP JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL DUP4 ISZERO DUP1 PUSH2 0x2C19 JUMPI POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x2C16 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0x2C29 JUMPI PUSH2 0x2C29 PUSH1 0x0 PUSH1 0x3 PUSH2 0x1A23 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x21F3 JUMP JUMPDEST PUSH2 0x2C40 PUSH2 0x40BC JUMP JUMPDEST PUSH2 0x2C53 PUSH1 0x1 DUP5 DUP2 JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH2 0x3736 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x2C61 PUSH1 0x0 DUP5 DUP2 PUSH2 0x2C48 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR PUSH3 0x3FFFFF AND PUSH3 0x1FFFFF DUP2 SGT PUSH2 0x2C86 JUMPI DUP1 PUSH2 0x1D8C JUMP JUMPDEST PUSH3 0x3FFFFF NOT OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST SHR PUSH4 0x7FFFFFFF AND SWAP1 JUMP JUMPDEST SHR PUSH2 0x3FF AND SWAP1 JUMP JUMPDEST SHR PUSH1 0x1 SWAP1 DUP2 AND EQ SWAP1 JUMP JUMPDEST SHR PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x2CCF PUSH1 0x9 SLOAD DUP7 PUSH2 0x2121 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH2 0x2CE3 DUP5 DUP5 DUP5 DUP5 PUSH2 0x3756 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x2CF9 DUP5 PUSH2 0x3548 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2D09 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x2D23 JUMPI PUSH2 0x2D19 DUP6 DUP6 PUSH2 0x377C JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH2 0x2D2E JUMP JUMPDEST PUSH2 0x2D2E PUSH2 0x150 PUSH2 0x2B92 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO PUSH2 0x2D68 JUMPI PUSH1 0x0 PUSH2 0x2D54 DUP5 PUSH2 0x2D4E DUP9 DUP9 PUSH2 0x265F JUMP JUMPDEST SWAP1 PUSH2 0x273A JUMP JUMPDEST SWAP1 POP PUSH2 0x2D60 DUP7 DUP3 PUSH2 0x218A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1D8C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D78 DUP5 PUSH2 0xBC1 DUP9 DUP9 PUSH2 0x2BFF JUMP JUMPDEST SWAP1 POP PUSH2 0x2D84 DUP7 DUP3 PUSH2 0x26B4 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH2 0x2DB5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS PUSH4 0x32434C5 PUSH1 0xE4 SHL PUSH2 0x37AE JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x2DD3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS PUSH4 0x32434C5 PUSH1 0xE4 SHL PUSH2 0x37D5 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x21F8A721 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x21F8A721 SWAP1 PUSH2 0x2E13 SWAP1 PUSH13 0x4759524F5F5452454153555259 PUSH1 0x98 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0x470B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E3F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E63 SWAP2 SWAP1 PUSH2 0x4185 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x21F8A721 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x21F8A721 SWAP1 PUSH2 0x2EA2 SWAP1 PUSH12 0x42414C5F5452454153555259 PUSH1 0xA0 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0x470B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2EBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2ECE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2EF2 SWAP2 SWAP1 PUSH2 0x4185 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 DUP7 GT PUSH2 0x2F15 JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x2F91 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F35 DUP6 PUSH2 0x2F2F PUSH2 0x2F28 DUP11 DUP13 PUSH2 0x26B4 JUMP JUMPDEST DUP10 SWAP1 PUSH2 0x2BFF JUMP JUMPDEST SWAP1 PUSH2 0x2BFF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2F4D PUSH2 0x2F46 DUP10 DUP12 PUSH2 0x26B4 JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x2BFF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2F5B DUP10 DUP4 PUSH2 0x26B4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2F69 DUP5 DUP4 PUSH2 0x21A2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2F77 DUP9 DUP4 PUSH2 0x2BFF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2F85 DUP4 DUP4 PUSH2 0x26B4 JUMP JUMPDEST SWAP2 SWAP8 POP SWAP1 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2FC8 JUMPI PUSH32 0x0 PUSH2 0x6E9 JUMP JUMPDEST POP PUSH32 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3006 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x19B PUSH2 0x1A23 JUMP JUMPDEST PUSH2 0x3012 DUP3 PUSH1 0x0 DUP4 PUSH2 0x2A8B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3038 SWAP1 DUP3 PUSH2 0x1A1 PUSH2 0x2BE5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x305E SWAP1 DUP3 PUSH2 0x3803 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x30B5 DUP5 PUSH2 0x3548 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x30C5 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x30D5 JUMPI PUSH2 0x2D19 DUP6 DUP6 PUSH2 0x3811 JUMP JUMPDEST PUSH2 0x2D2E PUSH2 0x136 PUSH2 0x2B92 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0xA SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP3 MSTORE PUSH2 0x100 DUP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB AND PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x312D DUP6 DUP6 PUSH2 0x218A JUMP JUMPDEST GT ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6F7665722061646472657373206C697175696469747920636170000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x3183 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x740 SWAP2 SWAP1 PUSH2 0x4755 JUMP JUMPDEST POP PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x319C DUP6 DUP5 PUSH2 0x218A JUMP JUMPDEST GT ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6F76657220676C6F62616C206C69717569646974792063617000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x2CE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x740 SWAP2 SWAP1 PUSH2 0x4755 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x31FF PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB05F8E48 PUSH2 0x3215 PUSH2 0x888 JUMP JUMPDEST DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3233 SWAP3 SWAP2 SWAP1 PUSH2 0x4714 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x324B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x325F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3283 SWAP2 SWAP1 PUSH2 0x45E1 JUMP JUMPDEST POP POP DUP2 DUP2 ADD SWAP5 POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x26E0 DUP4 DUP6 PUSH2 0x2BFF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26E0 PUSH2 0x32A8 DUP7 DUP7 PUSH2 0x218A JUMP JUMPDEST PUSH2 0x2D4E DUP6 DUP6 PUSH2 0x218A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x32D1 PUSH2 0x32CA DUP6 PUSH8 0xDE0B6B3A7640002 PUSH2 0x265F JUMP JUMPDEST DUP9 SWAP1 PUSH2 0x218A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x32EA PUSH2 0x32CA DUP6 PUSH8 0xDE0B6B3A763FFFF PUSH2 0x2BFF JUMP JUMPDEST SWAP1 POP PUSH2 0x3303 PUSH2 0x32F9 DUP4 DUP9 PUSH2 0x218A JUMP JUMPDEST PUSH2 0xBC1 DUP4 DUP10 PUSH2 0x2BFF JUMP JUMPDEST SWAP3 POP POP POP DUP5 DUP2 GT ISZERO PUSH2 0x26E0 JUMPI PUSH2 0x26E0 PUSH1 0x0 PUSH2 0x165 PUSH2 0x3836 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 GT ISZERO PUSH2 0x3333 JUMPI PUSH2 0x3333 PUSH1 0x0 PUSH2 0x165 PUSH2 0x3836 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x334A PUSH2 0x32CA DUP6 PUSH8 0xDE0B6B3A7640002 PUSH2 0x265F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3363 PUSH2 0x32CA DUP6 PUSH8 0xDE0B6B3A763FFFF PUSH2 0x2BFF JUMP JUMPDEST SWAP1 POP PUSH2 0x2841 PUSH2 0x3372 DUP3 DUP9 PUSH2 0x26B4 JUMP JUMPDEST PUSH2 0x2D4E DUP5 DUP10 PUSH2 0x265F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x339D PUSH2 0x338E DUP8 DUP8 PUSH2 0x21A2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x26B4 JUMP JUMPDEST SWAP4 POP PUSH1 0x0 PUSH2 0x33C8 DUP7 DUP10 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x33B2 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x21A2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x33DD DUP9 DUP11 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2925 JUMPI INVALID JUMPDEST SWAP1 POP PUSH2 0x33E9 DUP3 DUP3 PUSH2 0x218A JUMP JUMPDEST SWAP5 POP PUSH2 0x3410 DUP10 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x33FB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP11 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2925 JUMPI INVALID JUMPDEST SWAP3 POP POP POP PUSH2 0x3441 DUP7 PUSH2 0x2F2F DUP9 PUSH2 0x2F2F DUP12 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x342C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP13 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2925 JUMPI INVALID JUMPDEST SWAP2 POP PUSH1 0x0 PUSH2 0x3481 DUP7 PUSH2 0xBC1 DUP10 PUSH2 0x2F2F PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 MUL PUSH2 0x2F2F DUP15 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x346C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP16 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2925 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x34B7 PUSH2 0x3492 DUP9 DUP1 PUSH2 0x265F JUMP JUMPDEST PUSH2 0xBC1 DUP12 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x34A2 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP13 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2925 JUMPI INVALID JUMPDEST SWAP1 POP PUSH2 0x34C7 DUP2 PUSH2 0xB62 DUP7 DUP6 PUSH2 0x218A JUMP JUMPDEST SWAP4 POP POP POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x34E9 DUP7 PUSH8 0x1BC16D674EC80000 PUSH2 0x265F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3503 DUP8 PUSH2 0x2F2F DUP7 PUSH8 0x3782DACE9D900000 PUSH2 0x2BFF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3511 DUP7 DUP4 PUSH2 0x218A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3520 DUP3 PUSH1 0x5 PUSH2 0x3844 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x352E DUP10 DUP4 PUSH2 0x218A JUMP JUMPDEST SWAP1 POP PUSH2 0x353A DUP2 DUP7 PUSH2 0x21A2 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x355F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x357E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP3 SWAP5 SWAP3 SWAP4 DUP4 ADD SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x35A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x35BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x35D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3604 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x35EC JUMP JUMPDEST POP POP POP POP SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 MSTORE POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3627 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2A8B JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x3634 SWAP1 DUP3 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x365A SWAP1 DUP3 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x36DD JUMPI PUSH32 0x0 PUSH2 0x6E9 JUMP JUMPDEST POP PUSH32 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3716 PUSH4 0x1C74C917 PUSH1 0xE1 SHL PUSH2 0x113E JUMP JUMPDEST DUP3 EQ DUP1 PUSH2 0x6E9 JUMPI POP PUSH2 0x372E PUSH4 0x50DD6ED9 PUSH1 0xE0 SHL PUSH2 0x113E JUMP JUMPDEST SWAP1 SWAP2 EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x374C JUMPI PUSH2 0x3747 DUP3 DUP5 PUSH2 0x1D94 JUMP JUMPDEST PUSH2 0x1D8C JUMP JUMPDEST PUSH2 0x1D8C DUP3 DUP5 PUSH2 0x26E9 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x3766 JUMPI PUSH2 0x3766 DUP3 DUP6 PUSH2 0x296E JUMP JUMPDEST DUP3 ISZERO PUSH2 0x3776 JUMPI PUSH2 0x3776 DUP2 DUP5 PUSH2 0x296E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x378B DUP5 PUSH2 0x39D2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x37A1 DUP7 DUP4 PUSH2 0x379C PUSH2 0x7B4 JUMP JUMPDEST PUSH2 0x39F4 JUMP JUMPDEST SWAP2 SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D8C DUP5 PUSH22 0x50524F544F434F4C5F535741505F4645455F50455243 PUSH1 0x50 SHL DUP5 DUP7 PUSH2 0x3A7A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D8C DUP5 PUSH32 0x50524F544F434F4C5F4645455F4759524F5F504F5254494F4E00000000000000 DUP5 DUP7 PUSH2 0x3A7A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x187F DUP4 DUP4 PUSH1 0x1 PUSH2 0x2BE5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x3820 DUP5 PUSH2 0x39D2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x37A1 DUP7 DUP4 PUSH2 0x3831 PUSH2 0x7B4 JUMP JUMPDEST PUSH2 0x3D27 JUMP JUMPDEST DUP2 PUSH2 0x186D JUMPI PUSH2 0x186D DUP2 PUSH2 0x3DC3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3853 JUMPI POP PUSH1 0x0 PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x385E DUP5 PUSH2 0x3DD3 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x3875 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x387F JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x3897 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x38A1 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x38B9 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x38C3 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x38DB JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x38E5 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x38FD JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x3907 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x391F JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x3929 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x3941 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x394B JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH2 0x395A DUP3 DUP1 PUSH2 0x2BFF JUMP JUMPDEST SWAP1 POP PUSH2 0x3970 PUSH2 0x3969 DUP4 DUP7 PUSH2 0x265F JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x218A JUMP JUMPDEST DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x3992 JUMPI POP PUSH2 0x398E PUSH2 0x3987 DUP4 DUP7 PUSH2 0x265F JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x26B4 JUMP JUMPDEST DUP2 LT ISZERO JUMPDEST PUSH2 0x1520 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x17DCDC5C9D08119052531151 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x39E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 ADD MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x3A0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3A38 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1520 JUMPI PUSH2 0x3A5B DUP4 PUSH2 0xBC1 DUP7 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x2925 JUMPI INVALID JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3A67 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x3A3E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND DUP4 DUP6 ADD MSTORE DUP4 MLOAD DUP1 DUP5 SUB DUP6 ADD DUP2 MSTORE PUSH1 0x60 DUP5 ADD DUP1 DUP7 MSTORE DUP2 MLOAD SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH4 0x696EB375 PUSH1 0xE0 SHL SWAP1 SWAP2 MSTORE PUSH1 0x64 DUP5 ADD DUP2 SWAP1 MSTORE SWAP4 MLOAD PUSH1 0x0 SWAP5 SWAP4 SWAP2 DUP10 AND SWAP3 PUSH4 0x696EB375 SWAP3 PUSH1 0x84 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3AEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3AFF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3B15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO PUSH2 0x3B95 JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBD02D0F5 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3B60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3B74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3B8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 POP PUSH2 0x1D8C SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP9 SWAP1 MSTORE DUP2 DUP4 ADD DUP8 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 DUP4 ADD DUP1 DUP6 MSTORE DUP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH4 0x696EB375 PUSH1 0xE0 SHL SWAP1 SWAP2 MSTORE PUSH1 0x64 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP3 PUSH4 0x696EB375 SWAP3 PUSH1 0x84 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3C01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3C15 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3C2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO PUSH2 0x3CAC JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBD02D0F5 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3C76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3C8A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3CA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 POP PUSH2 0x1D8C SWAP2 POP POP JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBD02D0F5 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3CF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D04 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3D1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x3D41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3D6B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1520 JUMPI PUSH2 0x3DA4 DUP4 PUSH2 0x2D4E DUP7 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x3D8E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x265F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3DB0 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x3D71 JUMP JUMPDEST PUSH2 0x7B1 DUP2 PUSH3 0x23ACA9 PUSH1 0xE9 SHL PUSH2 0x3FA5 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 LT PUSH2 0x3E00 JUMPI PUSH8 0xDE0B6B3A7640000 PUSH2 0x3DF8 DUP2 DUP5 DIV PUSH2 0x4006 JUMP JUMPDEST SHL SWAP1 POP PUSH2 0xDA5 JUMP JUMPDEST PUSH1 0xA DUP3 GT PUSH2 0x3E13 JUMPI POP PUSH4 0xBC7C871C PUSH2 0xDA5 JUMP JUMPDEST PUSH1 0x64 DUP3 GT PUSH2 0x3E27 JUMPI POP PUSH5 0x2540BE400 PUSH2 0xDA5 JUMP JUMPDEST PUSH2 0x3E8 DUP3 GT PUSH2 0x3E3C JUMPI POP PUSH5 0x75CDD4719 PUSH2 0xDA5 JUMP JUMPDEST PUSH2 0x2710 DUP3 GT PUSH2 0x3E51 JUMPI POP PUSH5 0x174876E800 PUSH2 0xDA5 JUMP JUMPDEST PUSH3 0x186A0 DUP3 GT PUSH2 0x3E67 JUMPI POP PUSH5 0x49A0A4C700 PUSH2 0xDA5 JUMP JUMPDEST PUSH3 0xF4240 DUP3 GT PUSH2 0x3E7D JUMPI POP PUSH5 0xE8D4A51000 PUSH2 0xDA5 JUMP JUMPDEST PUSH3 0x989680 DUP3 GT PUSH2 0x3E94 JUMPI POP PUSH6 0x2E0466FC608 PUSH2 0xDA5 JUMP JUMPDEST PUSH4 0x5F5E100 DUP3 GT PUSH2 0x3EAC JUMPI POP PUSH6 0x9184E72A000 PUSH2 0xDA5 JUMP JUMPDEST PUSH4 0x3B9ACA00 DUP3 GT PUSH2 0x3EC4 JUMPI POP PUSH6 0x1CC2C05DBC53 PUSH2 0xDA5 JUMP JUMPDEST PUSH5 0x2540BE400 DUP3 GT PUSH2 0x3EDD JUMPI POP PUSH6 0x5AF3107A4000 PUSH2 0xDA5 JUMP JUMPDEST PUSH5 0x174876E800 DUP3 GT PUSH2 0x3EF7 JUMPI POP PUSH7 0x11F9B83A95B45 PUSH2 0xDA5 JUMP JUMPDEST PUSH5 0xE8D4A51000 DUP3 GT PUSH2 0x3F11 JUMPI POP PUSH7 0x38D7EA4C68000 PUSH2 0xDA5 JUMP JUMPDEST PUSH6 0x9184E72A000 DUP3 GT PUSH2 0x3F2C JUMPI POP PUSH7 0xB3C13249D90BB PUSH2 0xDA5 JUMP JUMPDEST PUSH6 0x5AF3107A4000 DUP3 GT PUSH2 0x3F47 JUMPI POP PUSH7 0x2386F26FC10000 PUSH2 0xDA5 JUMP JUMPDEST PUSH7 0x38D7EA4C68000 DUP3 GT PUSH2 0x3F63 JUMPI POP PUSH7 0x7058BF6E27A751 PUSH2 0xDA5 JUMP JUMPDEST PUSH7 0x2386F26FC10000 DUP3 GT PUSH2 0x3F80 JUMPI POP PUSH8 0x16345785D8A0000 PUSH2 0xDA5 JUMP JUMPDEST PUSH8 0x16345785D8A0000 DUP3 GT PUSH2 0x3F9E JUMPI POP PUSH8 0x463777A4D8C892D PUSH2 0xDA5 JUMP JUMPDEST POP DUP1 PUSH2 0xDA5 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x80 SHL DUP3 LT PUSH2 0x401E JUMPI PUSH1 0x80 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x40 ADD JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0x4039 JUMPI PUSH1 0x40 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0x4050 JUMPI PUSH1 0x20 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x10 ADD JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0x4065 JUMPI PUSH1 0x10 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x8 ADD JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x4079 JUMPI PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x4 ADD JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x408C JUMPI PUSH1 0x4 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x2 ADD JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0xDA5 JUMPI PUSH1 0x1 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xDA5 DUP2 PUSH2 0x4877 JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4105 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4119 JUMPI INVALID JUMPDEST PUSH2 0x412C PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x4853 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x4140 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0xDA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x417A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x187F DUP2 PUSH2 0x4877 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4196 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x187F DUP2 PUSH2 0x4877 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x41B3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x41BE DUP2 PUSH2 0x4877 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x41CE DUP2 PUSH2 0x4877 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x41ED JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x41F8 DUP2 PUSH2 0x4877 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x4208 DUP2 PUSH2 0x4877 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x4233 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x423E DUP2 PUSH2 0x4877 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x424E DUP2 PUSH2 0x4877 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x4271 JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x42A0 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x42AB DUP2 PUSH2 0x4877 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x42CA JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x187F DUP3 PUSH2 0x40E5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x42ED JUMPI DUP1 DUP2 REVERT JUMPDEST DUP8 CALLDATALOAD SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x42FF DUP2 PUSH2 0x4877 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH2 0x430F DUP2 PUSH2 0x4877 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x432B JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP11 ADD SWAP2 POP DUP11 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x433E JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x434A JUMPI INVALID JUMPDEST PUSH1 0x20 DUP2 MUL PUSH2 0x435A PUSH1 0x20 DUP3 ADD PUSH2 0x4853 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP7 ADD DUP16 PUSH1 0x20 DUP6 DUP10 ADD ADD GT ISZERO PUSH2 0x4379 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x439C JUMPI DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x437D JUMP JUMPDEST POP SWAP9 POP POP POP POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP5 POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x43C3 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x43D0 DUP11 DUP3 DUP12 ADD PUSH2 0x40F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x43F0 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x187F JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4418 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x4435 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE PUSH2 0x4441 DUP4 PUSH2 0x40E5 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x445C JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x447A JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x449A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x44B1 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP PUSH2 0x120 DUP1 DUP4 DUP10 SUB SLT ISZERO PUSH2 0x44C7 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x44D0 DUP2 PUSH2 0x4853 JUMP JUMPDEST SWAP1 POP PUSH2 0x44DB DUP4 PUSH2 0x415A JUMP JUMPDEST DUP2 MSTORE PUSH2 0x44E9 PUSH1 0x20 DUP5 ADD PUSH2 0x40DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x44FA PUSH1 0x40 DUP5 ADD PUSH2 0x40DA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x4529 PUSH1 0xC0 DUP5 ADD PUSH2 0x40DA JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x453A PUSH1 0xE0 DUP5 ADD PUSH2 0x40DA JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD CALLDATALOAD DUP4 DUP2 GT ISZERO PUSH2 0x4552 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH2 0x455E DUP11 DUP3 DUP8 ADD PUSH2 0x40F5 JUMP JUMPDEST SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP8 PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP8 POP PUSH1 0x40 SWAP1 SWAP7 ADD CALLDATALOAD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x458E JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x45A6 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x45C1 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x45D8 PUSH1 0x40 DUP6 ADD PUSH2 0x40E5 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x45F6 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 MLOAD SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP6 ADD MLOAD PUSH2 0x4616 DUP2 PUSH2 0x4877 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4650 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4634 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP4 CALLDATACOPY SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD DUP2 DUP4 PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x46A7 JUMPI DUP2 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4688 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x187F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4621 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0x46D6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x4621 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x26E0 DUP2 DUP6 PUSH2 0x4621 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4781 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x4765 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x4792 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 SWAP2 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP3 MSTORE PUSH1 0x8 DUP2 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x80 SHR PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1D8C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4621 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x486F JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7B1 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x7356194BFAA5996B936A7CEA25AB4327F37B07EE358AA7520BEBE7E1 0xC3 0xBB 0x2A PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ", "sha1": "3c8347e141f8f6944cd5c91dead333a3c8d4171d", "source": "// SPDX-License-Identifier: LicenseRef-Gyro-1.0\n// for information on licensing please see the README in the GitHub repository <https://github.com/gyrostable/concentrated-lps>.\n\npragma solidity 0.7.6;\npragma experimental ABIEncoderV2;\n\n// import \"@balancer-labs/v2-solidity-utils/contracts/math/FixedPoint.sol\";\nimport \"../../libraries/GyroFixedPoint.sol\";\n\nimport \"@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol\";\nimport \"@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol\";\nimport \"@balancer-labs/v2-pool-utils/contracts/interfaces/IRateProvider.sol\";\n\nimport \"../../libraries/GyroConfigKeys.sol\";\nimport \"../../libraries/GyroConfigHelpers.sol\";\nimport \"../../interfaces/IGyroConfig.sol\";\nimport \"../../libraries/GyroPoolMath.sol\";\nimport \"../../libraries/GyroErrors.sol\";\n\nimport \"../CappedLiquidity.sol\";\nimport \"../LocallyPausable.sol\";\nimport \"../ExtensibleWeightedPool2Tokens.sol\";\nimport \"./Gyro2CLPPoolErrors.sol\";\nimport \"./Gyro2CLPMath.sol\";\n\ncontract Gyro2CLPPool is ExtensibleWeightedPool2Tokens, CappedLiquidity, LocallyPausable {\n    using GyroFixedPoint for uint256;\n    using WeightedPoolUserDataHelpers for bytes;\n    using WeightedPool2TokensMiscData for bytes32;\n    using GyroConfigHelpers for IGyroConfig;\n\n    uint256 private immutable _sqrtAlpha;\n    uint256 private immutable _sqrtBeta;\n    bytes32 private constant POOL_TYPE = \"2CLP\";\n\n    IGyroConfig public gyroConfig;\n\n    /// @dev for rate scaling\n    IRateProvider public immutable rateProvider0;\n    IRateProvider public immutable rateProvider1;\n\n    struct GyroParams {\n        NewPoolParams baseParams;\n        uint256 sqrtAlpha; // A: Should already be upscaled\n        uint256 sqrtBeta; // A: Should already be upscaled. Could be passed as an array[](2)\n        address rateProvider0;\n        address rateProvider1;\n        address capManager;\n        CapParams capParams;\n        address pauseManager;\n    }\n\n    constructor(GyroParams memory params, address configAddress)\n        ExtensibleWeightedPool2Tokens(params.baseParams)\n        CappedLiquidity(params.capManager, params.capParams)\n        LocallyPausable(params.pauseManager)\n    {\n        _grequire(params.sqrtAlpha < params.sqrtBeta, Gyro2CLPPoolErrors.SQRT_PARAMS_WRONG);\n        _grequire(configAddress != address(0), GyroErrors.ZERO_ADDRESS);\n        _sqrtAlpha = params.sqrtAlpha;\n        _sqrtBeta = params.sqrtBeta;\n\n        gyroConfig = IGyroConfig(configAddress);\n\n        rateProvider0 = IRateProvider(params.rateProvider0);\n        rateProvider1 = IRateProvider(params.rateProvider1);\n    }\n\n    /// @dev Returns sqrtAlpha and sqrtBeta (square roots of lower and upper price bounds of p_x respectively)\n    function getSqrtParameters() external view returns (uint256[2] memory) {\n        return _sqrtParameters();\n    }\n\n    function _sqrtParameters() internal view virtual returns (uint256[2] memory virtualParameters) {\n        virtualParameters[0] = _sqrtParameters(true);\n        virtualParameters[1] = _sqrtParameters(false);\n        return virtualParameters;\n    }\n\n    function _sqrtParameters(bool parameter0) internal view virtual returns (uint256) {\n        return parameter0 ? _sqrtAlpha : _sqrtBeta;\n    }\n\n    /** @dev Reads the balance of a token from the balancer vault and returns the scaled amount. Smaller storage access\n     * compared to getVault().getPoolTokens().\n     * Copied from the 3CLP *except* that for the 2CLP, the scalingFactor is interpreted as a regular integer, not a\n     * FixedPoint number. This is an inconsistency between the base contracts.\n     */\n    function _getScaledTokenBalance(IERC20 token, uint256 scalingFactor) internal view returns (uint256 balance) {\n        // Signature of getPoolTokenInfo(): (pool id, token) -> (cash, managed, lastChangeBlock, assetManager)\n        // and total amount = cash + managed. See balancer repo, PoolTokens.sol and BalanceAllocation.sol\n        (uint256 cash, uint256 managed, , ) = getVault().getPoolTokenInfo(getPoolId(), token);\n        balance = cash + managed; // can't overflow, see BalanceAllocation.sol::total() in the Balancer repo.\n        balance = balance.mulDown(scalingFactor);\n    }\n\n    /** @dev Get all balances in the pool, scaled by the appropriate scaling factors, in a relatively gas-efficient way.\n     * Essentially copied from the 3CLP.\n     */\n    function _getAllBalances() internal view returns (uint256[] memory balances) {\n        // The below is more gas-efficient than the following line because the token slots don't have to be read in the\n        // vault.\n        // (, uint256[] memory balances, ) = getVault().getPoolTokens(getPoolId());\n        balances = new uint256[](2);\n        balances[0] = _getScaledTokenBalance(_token0, _scalingFactor(true));\n        balances[1] = _getScaledTokenBalance(_token1, _scalingFactor(false));\n        return balances;\n    }\n\n    /// @dev Returns virtual offsets a and b for reserves x and y respectively, as in (x+a)*(y+b)=L^2\n    function getVirtualParameters() external view returns (uint256[] memory virtualParams) {\n        uint256[] memory balances = _getAllBalances();\n        // _calculateCurrentValues() is defined in terms of an in/out pair, but we just map this to the 0/1 (x/y) pair.\n        virtualParams = new uint256[](2);\n        (, virtualParams[0], virtualParams[1]) = _calculateCurrentValues(balances[0], balances[1], true);\n    }\n\n    function _getVirtualParameters(uint256[2] memory sqrtParams, uint256 invariant)\n        internal\n        view\n        virtual\n        returns (uint256[2] memory virtualParameters)\n    {\n        virtualParameters[0] = _virtualParameters(true, sqrtParams[1], invariant);\n        virtualParameters[1] = _virtualParameters(false, sqrtParams[0], invariant);\n        return virtualParameters;\n    }\n\n    function _virtualParameters(\n        bool parameter0,\n        uint256 sqrtParam,\n        uint256 invariant\n    ) internal view virtual returns (uint256) {\n        return\n            parameter0\n                ? (Gyro2CLPMath._calculateVirtualParameter0(invariant, sqrtParam))\n                : (Gyro2CLPMath._calculateVirtualParameter1(invariant, sqrtParam));\n    }\n\n    /**\n     * @dev Returns the current value of the invariant.\n     */\n    function getInvariant() public view override returns (uint256) {\n        uint256[] memory balances = _getAllBalances();\n        uint256[2] memory sqrtParams = _sqrtParameters();\n\n        return Gyro2CLPMath._calculateInvariant(balances, sqrtParams[0], sqrtParams[1]);\n    }\n\n    /** When rateProvider{0,1} is provided, this returns the *scaled* price, suitable to compare *rate scaled* balances.\n     *  To compare (decimal- but) not-rate-scaled balances, apply _adjustPrice() to the result.\n     */\n    function _getPrice(\n        uint256[] memory balances,\n        uint256 virtualParam0,\n        uint256 virtualParam1\n    ) internal pure returns (uint256 spotPrice) {\n        return Gyro2CLPMath._calcSpotPriceAinB(balances[0], virtualParam0, balances[1], virtualParam1);\n    }\n\n    /** Returns the current spot price of token0 quoted in units of token1. When rateProvider{0,1} is provided, the\n     * returned price corresponds to tokens *before* rate scaling.\n     */\n    function getPrice() external view returns (uint256 spotPrice) {\n        uint256[] memory balances = _getAllBalances();\n        (uint256 invariant, uint256 virtualParam0, uint256 virtualParam1) = _calculateCurrentValues(balances[0], balances[1], true);\n        spotPrice = _getPrice(balances, virtualParam0, virtualParam1);\n        spotPrice = _adjustPrice(spotPrice);\n    }\n\n    // Swap Hooks\n\n    function onSwap(\n        SwapRequest memory request,\n        uint256 balanceTokenIn,\n        uint256 balanceTokenOut\n    ) public virtual override whenNotPaused onlyVault(request.poolId) returns (uint256) {\n        bool tokenInIsToken0 = request.tokenIn == _token0;\n\n        uint256 scalingFactorTokenIn = _scalingFactor(tokenInIsToken0);\n        uint256 scalingFactorTokenOut = _scalingFactor(!tokenInIsToken0);\n\n        // All token amounts are upscaled.\n        balanceTokenIn = _upscale(balanceTokenIn, scalingFactorTokenIn);\n        balanceTokenOut = _upscale(balanceTokenOut, scalingFactorTokenOut);\n\n        // All the calculations in one function to avoid Error Stack Too Deep\n        (uint256 currentInvariant, uint256 virtualParamIn, uint256 virtualParamOut) = _calculateCurrentValues(\n            balanceTokenIn,\n            balanceTokenOut,\n            tokenInIsToken0\n        );\n\n        if (request.kind == IVault.SwapKind.GIVEN_IN) {\n            // Fees are subtracted before scaling, to reduce the complexity of the rounding direction analysis.\n            // This is amount - fee amount, so we round up (favoring a higher fee amount).\n            uint256 feeAmount = request.amount.mulUp(getSwapFeePercentage());\n            // subtract fee and upscale so request.amount is appropriate for the following pool math.\n            request.amount = _upscale(request.amount.sub(feeAmount), scalingFactorTokenIn);\n\n            uint256 amountOut = _onSwapGivenIn(request, balanceTokenIn, balanceTokenOut, virtualParamIn, virtualParamOut);\n\n            // amountOut tokens are exiting the Pool, so we round down.\n            return _downscaleDown(amountOut, scalingFactorTokenOut);\n        } else {\n            request.amount = _upscale(request.amount, scalingFactorTokenOut);\n\n            uint256 amountIn = _onSwapGivenOut(request, balanceTokenIn, balanceTokenOut, virtualParamIn, virtualParamOut);\n\n            // amountIn tokens are entering the Pool, so we round up.\n            amountIn = _downscaleUp(amountIn, scalingFactorTokenIn);\n\n            // Fees are added after scaling happens, to reduce the complexity of the rounding direction analysis.\n            // This is amount + fee amount, so we round up (favoring a higher fee amount).\n            return amountIn.divUp(getSwapFeePercentage().complement());\n        }\n    }\n\n    // We assume all amounts to be upscaled correctly\n    function _onSwapGivenIn(\n        SwapRequest memory swapRequest,\n        uint256 currentBalanceTokenIn,\n        uint256 currentBalanceTokenOut,\n        uint256 virtualParamIn,\n        uint256 virtualParamOut\n    ) internal pure override returns (uint256) {\n        // NB: Swaps are disabled while the contract is paused.\n        return Gyro2CLPMath._calcOutGivenIn(currentBalanceTokenIn, currentBalanceTokenOut, swapRequest.amount, virtualParamIn, virtualParamOut);\n    }\n\n    function _onSwapGivenOut(\n        SwapRequest memory swapRequest,\n        uint256 currentBalanceTokenIn,\n        uint256 currentBalanceTokenOut,\n        uint256 virtualParamIn,\n        uint256 virtualParamOut\n    ) internal pure override returns (uint256) {\n        // NB: Swaps are disabled while the contract is paused.\n        return Gyro2CLPMath._calcInGivenOut(currentBalanceTokenIn, currentBalanceTokenOut, swapRequest.amount, virtualParamIn, virtualParamOut);\n    }\n\n    /// @dev invariant and virtual offsets.\n    function calculateCurrentValues(\n        uint256 balanceTokenIn, // not scaled\n        uint256 balanceTokenOut, // not scaled\n        bool tokenInIsToken0\n    )\n        public\n        view\n        returns (\n            uint256 currentInvariant,\n            uint256 virtualParamIn,\n            uint256 virtualParamOut\n        )\n    {\n        uint256 scalingFactorTokenIn = _scalingFactor(tokenInIsToken0);\n        uint256 scalingFactorTokenOut = _scalingFactor(!tokenInIsToken0);\n        balanceTokenIn = _upscale(balanceTokenIn, scalingFactorTokenIn);\n        balanceTokenOut = _upscale(balanceTokenOut, scalingFactorTokenOut);\n        return _calculateCurrentValues(balanceTokenIn, balanceTokenOut, tokenInIsToken0);\n    }\n\n    function _calculateCurrentValues(\n        uint256 balanceTokenIn, // scaled\n        uint256 balanceTokenOut, // scaled\n        bool tokenInIsToken0\n    )\n        internal\n        view\n        returns (\n            uint256 currentInvariant,\n            uint256 virtualParamIn,\n            uint256 virtualParamOut\n        )\n    {\n        uint256[] memory balances = new uint256[](2);\n        balances[0] = tokenInIsToken0 ? balanceTokenIn : balanceTokenOut;\n        balances[1] = tokenInIsToken0 ? balanceTokenOut : balanceTokenIn;\n\n        uint256[2] memory sqrtParams = _sqrtParameters();\n\n        currentInvariant = Gyro2CLPMath._calculateInvariant(balances, sqrtParams[0], sqrtParams[1]);\n\n        uint256[2] memory virtualParam = _getVirtualParameters(sqrtParams, currentInvariant);\n\n        virtualParamIn = tokenInIsToken0 ? virtualParam[0] : virtualParam[1];\n        virtualParamOut = tokenInIsToken0 ? virtualParam[1] : virtualParam[0];\n    }\n\n    /**\n     * @dev Called when the Pool is joined for the first time; that is, when the BPT total supply is zero.\n     *\n     * Returns the amount of BPT to mint, and the token amounts the Pool will receive in return.\n     *\n     * Minted BPT will be sent to `recipient`, except for _MINIMUM_BPT, which will be deducted from this amount and sent\n     * to the zero address instead. This will cause that BPT to remain forever locked there, preventing total BPT from\n     * ever dropping below that value, and ensuring `_onInitializePool` can only be called once in the entire Pool's\n     * lifetime.\n     *\n     * The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n     * be downscaled (rounding up) before being returned to the Vault.\n     */\n    function _onInitializePool(\n        bytes32,\n        address,\n        address,\n        bytes memory userData\n    ) internal override returns (uint256, uint256[] memory) {\n        BaseWeightedPool.JoinKind kind = userData.joinKind();\n        _require(kind == BaseWeightedPool.JoinKind.INIT, Errors.UNINITIALIZED);\n\n        uint256[] memory amountsIn = userData.initialAmountsIn();\n        InputHelpers.ensureInputLengthMatch(amountsIn.length, 2);\n        _upscaleArray(amountsIn);\n\n        (uint256 invariantAfterJoin, uint256 virtualParam0, uint256 virtualParam1) = _calculateCurrentValues(amountsIn[0], amountsIn[1], true);\n\n        /* We initialize the number of BPT tokens such that one BPT token corresponds to one unit of token1 at the initialized pool price. This makes BPT tokens comparable across pools with different parameters. Note that the invariant does *not* have this property!\n         */\n        uint256 spotPrice = _getPrice(amountsIn, virtualParam0, virtualParam1);\n        uint256 bptAmountOut = Math.add(amountsIn[0].mulDown(spotPrice), amountsIn[1]);\n\n        _lastInvariant = invariantAfterJoin;\n\n        return (bptAmountOut, amountsIn);\n    }\n\n    /**\n     * @dev Called whenever the Pool is joined after the first initialization join (see `_onInitializePool`).\n     *\n     * Returns the amount of BPT to mint, the token amounts that the Pool will receive in return, and the number of\n     * tokens to pay in protocol swap fees.\n     *\n     * Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n     * performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n     *\n     * Minted BPT will be sent to `recipient`.\n     *\n     * The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n     * be downscaled (rounding up) before being returned to the Vault.\n     *\n     * Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onJoinPool`). These\n     * amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n     *\n     * protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way\n     *\n     */\n    function _onJoinPool(\n        bytes32,\n        address,\n        address recipient,\n        uint256[] memory balances,\n        uint256 lastChangeBlock,\n        uint256, //protocolSwapFeePercentage,\n        bytes memory userData\n    )\n        internal\n        override\n        returns (\n            uint256,\n            uint256[] memory,\n            uint256[] memory\n        )\n    {\n        // NB Joins are disabled when the pool is paused.\n\n        uint256[2] memory sqrtParams = _sqrtParameters();\n\n        // Due protocol swap fee amounts are computed by measuring the growth of the invariant between the previous\n        // join or exit event and now - the invariant's growth is due exclusively to swap fees. This avoids\n        // spending gas accounting for fees on each individual swap.\n        uint256 invariantBeforeAction = Gyro2CLPMath._calculateInvariant(balances, sqrtParams[0], sqrtParams[1]);\n        uint256[2] memory virtualParam = _getVirtualParameters(sqrtParams, invariantBeforeAction);\n\n        _distributeFees(invariantBeforeAction);\n\n        (uint256 bptAmountOut, uint256[] memory amountsIn) = _doJoin(balances, userData);\n\n        if (_capParams.capEnabled) {\n            _ensureCap(bptAmountOut, balanceOf(recipient), totalSupply());\n        }\n\n        // Since we pay fees in BPT, they have not changed the invariant and 'invariantBeforeAction' is still consistent\n        // with  'balances'. Therefore, we can use a simplified method to update the invariant that does not require a\n        // full re-computation.\n        // Note: Should this be changed in the future, we also need to reduce the invariant proportionally by the total\n        // protocol fee factor.\n        _lastInvariant = GyroPoolMath.liquidityInvariantUpdate(invariantBeforeAction, bptAmountOut, totalSupply(), true);\n\n        // returns a new uint256[](2) b/c Balancer vault is expecting a fee array, but fees paid in BPT instead\n        return (bptAmountOut, amountsIn, new uint256[](2));\n    }\n\n    function _doJoin(uint256[] memory balances, bytes memory userData) internal view returns (uint256 bptAmountOut, uint256[] memory amountsIn) {\n        BaseWeightedPool.JoinKind kind = userData.joinKind();\n\n        // We do NOT currently support unbalanced update, i.e., EXACT_TOKENS_IN_FOR_BPT_OUT or TOKEN_IN_FOR_EXACT_BPT_OUT\n        if (kind == BaseWeightedPool.JoinKind.ALL_TOKENS_IN_FOR_EXACT_BPT_OUT) {\n            (bptAmountOut, amountsIn) = _joinAllTokensInForExactBPTOut(balances, userData);\n        } else {\n            _revert(Errors.UNHANDLED_JOIN_KIND);\n        }\n    }\n\n    function _joinAllTokensInForExactBPTOut(uint256[] memory balances, bytes memory userData)\n        internal\n        view\n        override\n        returns (uint256, uint256[] memory)\n    {\n        uint256 bptAmountOut = userData.allTokensInForExactBptOut();\n        // Note that there is no maximum amountsIn parameter: this is handled by `IVault.joinPool`.\n\n        uint256[] memory amountsIn = GyroPoolMath._calcAllTokensInGivenExactBptOut(balances, bptAmountOut, totalSupply());\n\n        return (bptAmountOut, amountsIn);\n    }\n\n    /**\n     * @dev Called whenever the Pool is exited.\n     *\n     * Returns the amount of BPT to burn, the token amounts for each Pool token that the Pool will grant in return, and\n     * the number of tokens to pay in protocol swap fees.\n     *\n     * Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n     * performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n     *\n     * BPT will be burnt from `sender`.\n     *\n     * The Pool will grant tokens to `recipient`. These amounts are considered upscaled and will be downscaled\n     * (rounding down) before being returned to the Vault.\n     *\n     * Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onExitPool`). These\n     * amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n     *\n     * protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way\n     */\n    function _onExitPool(\n        bytes32,\n        address,\n        address,\n        uint256[] memory balances,\n        uint256 lastChangeBlock,\n        uint256, // protocolSwapFeePercentage,\n        bytes memory userData\n    )\n        internal\n        override\n        returns (\n            uint256 bptAmountIn,\n            uint256[] memory amountsOut,\n            uint256[] memory dueProtocolFeeAmounts\n        )\n    {\n        // Exits are not completely disabled while the contract is paused: proportional exits (exact BPT in for tokens\n        // out) remain functional.\n\n        uint256[2] memory sqrtParams = _sqrtParameters();\n\n        if (_isNotPaused()) {\n            // Due protocol swap fee amounts are computed by measuring the growth of the invariant between the previous\n            // join or exit event and now - the invariant's growth is due exclusively to swap fees. This avoids\n            // spending gas calculating the fees on each individual swap.\n            uint256 invariantBeforeAction = Gyro2CLPMath._calculateInvariant(balances, sqrtParams[0], sqrtParams[1]);\n            uint256[2] memory virtualParam = _getVirtualParameters(sqrtParams, invariantBeforeAction);\n\n            _distributeFees(invariantBeforeAction);\n\n            (bptAmountIn, amountsOut) = _doExit(balances, userData);\n\n            // Since we pay fees in BPT, they have not changed the invariant and 'invariantBeforeAction' is still\n            // consistent with 'balances'. Therefore, we can use a simplified method to update the invariant that does\n            // not require a full re-computation.\n            // Note: Should this be changed in the future, we also need to reduce the invariant proportionally by the\n            // total protocol fee factor.\n            _lastInvariant = GyroPoolMath.liquidityInvariantUpdate(invariantBeforeAction, bptAmountIn, totalSupply(), false);\n        } else {\n            // Note: If the contract is paused, swap protocol fee amounts are not charged\n            // to avoid extra calculations and reduce the potential for errors.\n            (bptAmountIn, amountsOut) = _doExit(balances, userData);\n\n            // Invalidate _lastInvariant. We do not compute the invariant to reduce the potential for errors or lockup.\n            // Instead, we set the invariant such that any following (non-paused) join/exit will ignore and recompute\n            // it. (see GyroPoolMath._calcProtocolFees())\n            _lastInvariant = type(uint256).max;\n        }\n\n        // returns a new uint256[](2) b/c Balancer vault is expecting a fee array, but fees paid in BPT instead\n        return (bptAmountIn, amountsOut, new uint256[](2));\n    }\n\n    function _doExit(uint256[] memory balances, bytes memory userData) internal view returns (uint256 bptAmountIn, uint256[] memory amountsOut) {\n        BaseWeightedPool.ExitKind kind = userData.exitKind();\n\n        // We do NOT support unbalanced exit at the moment, i.e., EXACT_BPT_IN_FOR_ONE_TOKEN_OUT or\n        // BPT_IN_FOR_EXACT_TOKENS_OUT.\n        if (kind == BaseWeightedPool.ExitKind.EXACT_BPT_IN_FOR_TOKENS_OUT) {\n            (bptAmountIn, amountsOut) = _exitExactBPTInForTokensOut(balances, userData);\n        } else {\n            _revert(Errors.UNHANDLED_EXIT_KIND);\n        }\n    }\n\n    function _exitExactBPTInForTokensOut(uint256[] memory balances, bytes memory userData)\n        internal\n        view\n        override\n        returns (uint256, uint256[] memory)\n    {\n        // This exit function is the only one that is not disabled if the contract is paused: it remains unrestricted\n        // in an attempt to provide users with a mechanism to retrieve their tokens in case of an emergency.\n        // This particular exit function is the only one that remains available because it is the simplest one, and\n        // therefore the one with the lowest likelihood of errors.\n\n        uint256 bptAmountIn = userData.exactBptInForTokensOut();\n        // Note that there is no minimum amountOut parameter: this is handled by `IVault.exitPool`.\n\n        uint256[] memory amountsOut = GyroPoolMath._calcTokensOutGivenExactBptIn(balances, bptAmountIn, totalSupply());\n        return (bptAmountIn, amountsOut);\n    }\n\n    // Helpers\n\n    /**\n     * @dev Computes and distributes fees between the Balancer and the Gyro treasury\n     * The fees are computed and distributed in BPT rather than using the\n     * Balancer regular distribution mechanism which would pay these in underlying\n     */\n\n    function _distributeFees(uint256 invariantBeforeAction) internal {\n        // calculate Protocol fees in BPT\n        // lastInvariant is the invariant logged at the end of the last liquidity update\n        // protocol fees are calculated on swap fees earned between liquidity updates\n        (uint256 gyroFees, uint256 balancerFees, address gyroTreasury, address balTreasury) = _getDueProtocolFeeAmounts(\n            _lastInvariant,\n            invariantBeforeAction\n        );\n\n        // Pay fees in BPT\n        _payFeesBpt(gyroFees, balancerFees, gyroTreasury, balTreasury);\n    }\n\n    /**\n     * @dev this function overrides inherited function to make sure it is never used\n     */\n    function _getDueProtocolFeeAmounts(\n        uint256[] memory, // balances,\n        uint256[] memory, // normalizedWeights,\n        uint256, // previousInvariant,\n        uint256, // currentInvariant,\n        uint256 // protocolSwapFeePercentage\n    ) internal pure override returns (uint256[] memory) {\n        revert(\"Not implemented\");\n    }\n\n    /**\n     * @dev Calculates protocol fee amounts in BPT terms.\n     * protocolSwapFeePercentage is not used here b/c we take parameters from GyroConfig instead.\n     * Returns: BPT due to Gyro, BPT due to Balancer, receiving address for Gyro fees, receiving address for Balancer\n     * fees.\n     */\n    function _getDueProtocolFeeAmounts(uint256 previousInvariant, uint256 currentInvariant)\n        internal\n        view\n        returns (\n            uint256,\n            uint256,\n            address,\n            address\n        )\n    {\n        (uint256 protocolSwapFeePerc, uint256 protocolFeeGyroPortion, address gyroTreasury, address balTreasury) = _getFeesMetadata();\n\n        // Early return if the protocol swap fee percentage is zero, saving gas.\n        if (protocolSwapFeePerc == 0) {\n            return (0, 0, gyroTreasury, balTreasury);\n        }\n\n        // Calculate fees in BPT\n        (uint256 gyroFees, uint256 balancerFees) = GyroPoolMath._calcProtocolFees(\n            previousInvariant,\n            currentInvariant,\n            totalSupply(),\n            protocolSwapFeePerc,\n            protocolFeeGyroPortion\n        );\n\n        return (gyroFees, balancerFees, gyroTreasury, balTreasury);\n    }\n\n    function _payFeesBpt(\n        uint256 gyroFees,\n        uint256 balancerFees,\n        address gyroTreasury,\n        address balTreasury\n    ) internal {\n        // Pay fees in BPT to gyro treasury\n        if (gyroFees > 0) {\n            _mintPoolTokens(gyroTreasury, gyroFees);\n        }\n        // Pay fees in BPT to bal treasury\n        if (balancerFees > 0) {\n            _mintPoolTokens(balTreasury, balancerFees);\n        }\n    }\n\n    function _getFeesMetadata()\n        internal\n        view\n        returns (\n            uint256,\n            uint256,\n            address,\n            address\n        )\n    {\n        return (\n            gyroConfig.getSwapFeePercForPool(address(this), POOL_TYPE),\n            gyroConfig.getProtocolFeeGyroPortionForPool(address(this), POOL_TYPE),\n            gyroConfig.getAddress(GyroConfigKeys.GYRO_TREASURY_KEY),\n            gyroConfig.getAddress(GyroConfigKeys.BAL_TREASURY_KEY)\n        );\n    }\n\n    /** @notice Effective BPT supply.\n     *\n     *  This is the same as `totalSupply()` but also accounts for the fact that the pool owes\n     *  protocol fees to the pool in the form of unminted LP shares created on the next join/exit,\n     *  diluting LPers. Thus, this is the totalSupply() that the next join/exit operation will see.\n     *\n     *  Equivalent to the respective function in, e.g., WeightedPool, see:\n     *  https://github.com/balancer/balancer-v2-monorepo/blob/master/pkg/pool-weighted/contracts/WeightedPool.sol#L325-L344\n     */\n    function getActualSupply() external view returns (uint256) {\n        uint256 supply = totalSupply();\n        (uint256 gyroFees, uint256 balancerFees, , ) = _getDueProtocolFeeAmounts(_lastInvariant, getInvariant());\n        return supply.add(gyroFees).add(balancerFees);\n    }\n\n    /// @notice Equivalent to but more efficient than `getInvariant().divDown(getActualSupply())`.\n    function getInvariantDivActualSupply() external view returns (uint256) {\n        uint256 invariant = getInvariant();\n        uint256 supply = totalSupply();\n        (uint256 gyroFees, uint256 balancerFees, , ) = _getDueProtocolFeeAmounts(_lastInvariant, invariant);\n        uint256 actualSupply = supply.add(gyroFees).add(balancerFees);\n        return invariant.divDown(actualSupply);\n    }\n\n    function _setPausedState(bool paused) internal override {\n        _setPaused(paused);\n    }\n\n    // Rate scaling\n    // Same as for ECLP\n    // SOMEDAY ECLP's code and this code could be moved to ExtensibleWeightedPool2Tokens.\n\n    function _scalingFactor(bool token0) internal view override returns (uint256) {\n        IRateProvider rateProvider;\n        uint256 scalingFactor;\n        if (token0) {\n            rateProvider = rateProvider0;\n            scalingFactor = _scalingFactor0;\n        } else {\n            rateProvider = rateProvider1;\n            scalingFactor = _scalingFactor1;\n        }\n        if (address(rateProvider) != address(0)) scalingFactor = scalingFactor.mulDown(rateProvider.getRate());\n        return scalingFactor;\n    }\n\n    function _adjustPrice(uint256 spotPrice) internal view override returns (uint256) {\n        if (address(rateProvider0) != address(0)) spotPrice = spotPrice.mulDown(rateProvider0.getRate());\n        if (address(rateProvider1) != address(0)) spotPrice = spotPrice.divDown(rateProvider1.getRate());\n        return spotPrice;\n    }\n\n    /// @notice Convenience function to fetch the two rates used for scaling the two tokens, as of rateProvider{0,1}.\n    /// Note that these rates do *not* contain scaling to account for differences in the number of decimals. The rates\n    /// themselves are always 18-decimals.\n    function getTokenRates() public view returns (uint256 rate0, uint256 rate1) {\n        rate0 = address(rateProvider0) != address(0) ? rateProvider0.getRate() : GyroFixedPoint.ONE;\n        rate1 = address(rateProvider1) != address(0) ? rateProvider1.getRate() : GyroFixedPoint.ONE;\n    }\n}\n", "sourceMap": "1004:29687:40:-:0;;;873:95:27;820:148;;2160:4:44;2113:51;;;;2170;;2486:1;2436:51;;1950:650:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2153:19;;;;;2092:17;;;;;2111:16;;;;;2049:17;;4335:26:44;;;;4363:27;;;;4221:11;;;;;4234:13;;;;;4249:12;;2020:280:25;;;;;;;;;;;-1:-1:-1;;;2020:280:25;;;;4293:12:44;;;;4181:10;-1:-1:-1;1929:46:11;-1:-1:-1;1749:14:4;-1:-1:-1;;;;;;1749:14:4;;;;2002:13:26;;2153:19:40;;2092:17;;2111:16;;2049:17;;4335:26:44;4363:27;;4221:11;;4234:13;;4249:12;;4221:11;;;;2020:280:25;;4221:11:44;;4234:13;;2002::26;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2025:17:26;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2052:9:26;:14;;-1:-1:-1;;2052:14:26;2064:2;2052:14;;;-1:-1:-1;2100:22:25;;;;;;;2085:37;;2150:25;;;;;;2132:43;;2198:95;2052:14:26;2185:108:25;-1:-1:-1;;;;;;1852:14:1::2;::::0;;;;::::2;::::0;2449:15:46;:37;;;;2497:40;;;;2570:41;;;;2547:64;;4431:15:44::4;::::0;;4444:1:::4;4431:15:::0;;;;;::::4;::::0;;-1:-1:-1;;4431:15:44;;-1:-1:-1;4444:1:44;;-1:-1:-1;4431:15:44;;::::4;::::0;-1:-1:-1;4431:15:44;::::4;::::0;::::4;;::::0;-1:-1:-1;4431:15:44::4;4406:40;;4468:6;:13;;;4456:6;4463:1;4456:9;;;;;;;;-1:-1:-1::0;;;;;4456:25:44;;::::4;:9;::::0;;::::4;::::0;;;;;;;:25;4503:13:::4;::::0;::::4;::::0;4491:9;;:6;;-1:-1:-1;;4491:9:44;::::4;;;;;-1:-1:-1::0;;;;;4491:25:44;;::::4;:9;::::0;;::::4;::::0;;;;;;:25;4681:40:::4;::::0;4714:6;;4681:32:::4;;::::0;::::4;;:40:::0;::::4;:::i;:::-;4754:24;::::0;::::4;::::0;4732:47:::4;::::0;:21:::4;:47::i;:::-;4807:12:::0;;:62:::4;::::0;-1:-1:-1;;;4807:62:44;;4790:14:::4;::::0;-1:-1:-1;;;;;4807:25:44::4;::::0;-1:-1:-1;;4807:62:44::4;::::0;4833:35:::4;::::0;4807:62:::4;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4933:12:::0;;4977:16:::4;::::0;;4991:1:::4;4977:16:::0;;;;;::::4;::::0;;4790:79;;-1:-1:-1;;;;;;4933:27:44;;::::4;::::0;::::4;::::0;4790:79;;4969:6;;4991:1;4977:16:::4;::::0;::::4;::::0;;::::4;::::0;::::4;;::::0;-1:-1:-1;4977:16:44::4;4933:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;::::0;::::4;;;;;-1:-1:-1::0;;;5094:16:44::4;::::0;;;-1:-1:-1;5131:13:44::4;::::0;;::::4;::::0;;5121:23;;-1:-1:-1;;;;;;5121:23:44;;;::::4;::::0;5164:13:::4;::::0;::::4;::::0;5154:23;;;;;;::::4;::::0;5228:13;5206:36:::4;::::0;:21:::4;:36::i;:::-;5188:54;::::0;5292:13:::4;::::0;::::4;::::0;5270:36:::4;::::0;:21:::4;:36::i;:::-;5252:54;::::0;-1:-1:-1;;1217:15:43;;;;;;;;;;;;-1:-1:-1;;;1217:15:43;;;;;-1:-1:-1;;;;;;1190:25:43;;1182:51;;;;-1:-1:-1;;;1182:51:43;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;1243:10:43;:24;;-1:-1:-1;;;;;;1243:24:43;-1:-1:-1;;;;;1243:24:43;;;;;;1301:17;;1277:10;:41;;1355:20;;;;1408:16;;;;;-1:-1:-1;;1277:41:43;;;;;;;;;;-1:-1:-1;;1328:47:43;-1:-1:-1;;;;;;1328:47:43;;;;;;;;;;;-1:-1:-1;;;;;1385:39:43;;;-1:-1:-1;;;1385:39:43;;;;;;;;639:63:45;;649:27;;;;4607:3:53;639:9:45;:63::i;:::-;712:12;:28;;-1:-1:-1;;;;;;712:28:45;-1:-1:-1;;;;;712:28:45;;;;;;;;;;2217:15:40::3;::::0;::::3;::::0;2198:16:::3;::::0;::::3;::::0;2188:83:::3;::::0;-1:-1:-1;313:3:41::3;2188:9:40;:83::i;:::-;2281:63;-1:-1:-1::0;;;;;2291:27:40;::::3;::::0;::::3;4607:3:53;2281:9:40;:63::i;:::-;2367:16;::::0;::::3;::::0;2354:29:::3;::::0;2405:15:::3;::::0;::::3;::::0;2393:27:::3;::::0;2431:10:::3;:39:::0;;-1:-1:-1;;;;;;2431:39:40::3;-1:-1:-1::0;;;;;2431:39:40;;;::::3;::::0;;;::::3;::::0;;2511:20:::3;::::0;;::::3;::::0;2481:51;;-1:-1:-1;;;;;;2481:51:40;;;::::3;::::0;2572:20:::3;::::0;;::::3;::::0;2542:51;;;::::3;::::0;1004:29687;;1135:274:18;1345:5;1369:33;1345:5;1369:19;:33::i;:::-;1135:274;;:::o;6672:397:44:-;6748:87;1722:4;6757:45;;;5289:3:12;6748:8:44;:87::i;:::-;6845;1795:4;6854:45;;;5228:3:12;6845:8:44;:87::i;:::-;6955:49;6986:17;6955:9;;:30;;;;;;:49;;;;:::i;:::-;6943:9;:61;7019:43;;;;;;7044:17;;7019:43;:::i;:::-;;;;;;;;6672:397;:::o;34759:420::-;34826:7;34925:21;34963:5;-1:-1:-1;;;;;34949:30:44;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;34925:56;;;;35056:26;35085:27;35094:2;35098:13;35085:8;;;;;:27;;:::i;:::-;35129:2;:22;795:4:54;35129:43:44;;-1:-1:-1;;;34759:420:44;;;;:::o;388:103:53:-;458:9;453:35;;469:19;478:9;469:8;:19::i;1415:374:18:-;1511:1;1496:5;:12;:16;1492:53;;;1528:7;;1492:53;1555:16;1574:5;1580:1;1574:8;;;;;;;;;;;;;;1555:27;;1597:9;1609:1;1597:13;;1592:191;1616:5;:12;1612:1;:16;1592:191;;;1649:15;1667:5;1673:1;1667:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;1689:51:18;-1:-1:-1;;;;;1698:18:18;;;;;;;4890:3:12;1689:8:18;:51::i;:::-;1765:7;-1:-1:-1;1630:3:18;;1592:191;;;;1415:374;;;:::o;866:101:12:-;935:9;930:34;;946:18;954:9;946:7;:18::i;5083:194:9:-;5178:7;5204:66;5222:18;2155:2;5204:4;:17;;;;;;:66;;;;;:::i;:::-;5197:73;5083:194;-1:-1:-1;;;5083:194:9:o;948:166:23:-;1006:7;1025:37;1034:6;;;;4370:1:12;1025:8:23;:37::i;:::-;-1:-1:-1;1084:5:23;;;948:166::o;925:128:53:-;973:29;982:9;-1:-1:-1;;;973:8:53;:29::i;1074:3172:12:-;-1:-1:-1;;;3588:3:12;3581:79;;;3799:66;3793:4;3786:80;3941:1;3935:4;3928:15;2210:2;2243:18;;;2336;;;2383;;;2215:4;2379:29;;;3057:2;3053:17;2195:18;;;;2288;;;;2284:29;;;;3040:1;3036:14;3025:26;;;;3021:50;;;;2999:73;;2994:3;2990:83;4008:4;4001:26;4234:3;;4224:14;6887:269:20;-1:-1:-1;7074:18:20;;7072:21;7056:37;;;;7133:15;;7111:38;;6887:269::o;1160:3379:53:-;-1:-1:-1;;;1223:18:53;3874:79;;;4092:66;4086:4;4079:80;4234:1;4228:4;4221:15;2362:2;2395:18;;;2440;;;2367:4;2436:29;;;3238:1;3329:14;2347:18;;;;3318:26;;;;2488:18;;;;2535;;;2531:29;;3350:2;3346:17;3314:50;3228:4;3234:18;;;;;;3224:29;3220:2;3216:38;3293:72;;;;3288:3;3284:82;4301:4;4294:26;1252:14;;;;;4527:3;;4517:14;1004:29687:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1004:29687:40;;;-1:-1:-1;1004:29687:40;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:179:56;95:13;;-1:-1:-1;;;;;137:31:56;;127:42;;117:2;;183:1;180;173:12;198:505;;307:3;300:4;292:6;288:17;284:27;274:2;;329:5;322;315:20;274:2;356:13;;-1:-1:-1;381:26:56;;378:2;;;410:9;378:2;445:54;493:4;-1:-1:-1;;487:2:56;468:13;;464:27;460:38;445:54;:::i;:::-;524:2;515:7;508:19;570:3;563:4;558:2;550:6;546:15;542:26;539:35;536:2;;;591:5;584;577:20;536:2;608:64;669:2;662:4;653:7;649:18;642:4;634:6;630:17;608:64;:::i;:::-;690:7;264:439;-1:-1:-1;;;;264:439:56:o;708:864::-;;826:4;814:9;809:3;805:19;801:30;798:2;;;848:5;841;834:20;798:2;885;879:9;927:4;915:17;;983:22;;;-1:-1:-1;947:34:56;;944:62;941:2;;;1009:9;941:2;1040:10;1036:2;1029:22;;1069:6;1060:15;;1105:9;1099:16;1160:7;1153:15;1146:23;1137:7;1134:36;1124:2;;1184:1;1181;1174:12;1124:2;1197:23;;1265:2;1250:18;;1244:25;-1:-1:-1;;;;;1300:33:56;;1288:46;;1278:2;;1348:1;1345;1338:12;1278:2;1380;1368:15;;1361:32;1438:2;1423:18;;1417:25;-1:-1:-1;;;;;1473:33:56;;1461:46;;1451:2;;1521:1;1518;1511:12;1451:2;1553;1541:15;;;;1534:32;788:784;;-1:-1:-1;;788:784:56:o;1577:1148::-;;1681:6;1724:2;1712:9;1707:3;1703:19;1699:28;1696:2;;;1744:5;1737;1730:20;1696:2;1770:18;1785:2;1770:18;:::i;:::-;1761:27;;;1811:42;1843:9;1811:42;:::i;:::-;1797:57;;1898:2;1883:18;;1877:25;-1:-1:-1;1951:14:56;;;1948:2;;;1978:1;1975;1968:12;1948:2;2014:59;2069:3;2060:6;2049:9;2045:22;2014:59;:::i;:::-;2009:2;2002:5;1998:14;1991:83;2120:2;2109:9;2105:18;2099:25;2083:41;;2149:2;2139:8;2136:16;2133:2;;;2165:1;2162;2155:12;2133:2;;2201:61;2258:3;2247:8;2236:9;2232:24;2201:61;:::i;:::-;2196:2;2189:5;2185:14;2178:85;;2295:51;2342:2;2331:9;2327:18;2295:51;:::i;:::-;2290:2;2283:5;2279:14;2272:75;2380:52;2427:3;2416:9;2412:19;2380:52;:::i;:::-;2374:3;2367:5;2363:15;2356:77;2487:3;2476:9;2472:19;2466:26;2460:3;2453:5;2449:15;2442:51;2547:3;2536:9;2532:19;2526:26;2520:3;2513:5;2509:15;2502:51;2607:3;2596:9;2592:19;2586:26;2580:3;2573:5;2569:15;2562:51;2632:3;2667:51;2714:2;2703:9;2699:18;2667:51;:::i;:::-;2651:14;;;2644:75;2655:5;1661:1064;-1:-1:-1;;1661:1064:56:o;2730:194::-;;2853:2;2841:9;2832:7;2828:23;2824:32;2821:2;;;2874:6;2866;2859:22;2821:2;-1:-1:-1;2902:16:56;;2811:113;-1:-1:-1;2811:113:56:o;2929:1279::-;;;3095:2;3083:9;3074:7;3070:23;3066:32;3063:2;;;3116:6;3108;3101:22;3063:2;3148:16;;-1:-1:-1;3213:14:56;;;3210:2;;;3245:6;3237;3230:22;3210:2;3273:22;;;;3329:6;3311:16;;;3307:29;3304:2;;;3354:6;3346;3339:22;3304:2;3385:22;3400:6;3385:22;:::i;:::-;3438:2;3432:9;3466:2;3456:8;3453:16;3450:2;;;3487:6;3479;3472:22;3450:2;3519:73;3584:7;3573:8;3569:2;3565:17;3519:73;:::i;:::-;3512:5;3505:88;;3639:2;3635;3631:11;3625:18;3620:2;3613:5;3609:14;3602:42;3690:2;3686;3682:11;3676:18;3671:2;3664:5;3660:14;3653:42;3727:44;3767:2;3763;3759:11;3727:44;:::i;:::-;3722:2;3715:5;3711:14;3704:68;3805:45;3845:3;3841:2;3837:12;3805:45;:::i;:::-;3799:3;3792:5;3788:15;3781:70;3884:45;3924:3;3920:2;3916:12;3884:45;:::i;:::-;3878:3;3871:5;3867:15;3860:70;3963:64;4019:7;4013:3;4009:2;4005:12;3963:64;:::i;:::-;3957:3;3950:5;3946:15;3939:89;4062:45;4102:3;4098:2;4094:12;4062:45;:::i;:::-;4055:4;4044:16;;4037:71;4048:5;-1:-1:-1;4151:51:56;;-1:-1:-1;;4198:2:56;4183:18;;4151:51;:::i;:::-;4141:61;;3053:1155;;;;;:::o;4213:293::-;;4334:2;4322:9;4313:7;4309:23;4305:32;4302:2;;;4355:6;4347;4340:22;4302:2;4392:9;4386:16;4442:4;4435:5;4431:16;4424:5;4421:27;4411:2;;4467:6;4459;4452:22;4511:1295;;4822:2;4811:9;4807:18;4852:6;4841:9;4834:25;4878:2;4916;4911;4900:9;4896:18;4889:30;4939:6;4974;4968:13;5005:6;4997;4990:22;5043:3;5032:9;5028:19;5021:26;;5082:2;5074:6;5070:15;5056:29;;5103:4;5116:195;5130:6;5127:1;5124:13;5116:195;;;5195:13;;-1:-1:-1;;;;;5191:39:56;5179:52;;5286:15;;;;5251:12;;;;-1:-1:-1;5145:9:56;5116:195;;;-1:-1:-1;;5347:19:56;;;5342:2;5327:18;;5320:47;5417:13;;5439:21;;;5478:12;;;;-1:-1:-1;5515:15:56;;;;5550:4;5563:215;5579:8;5574:3;5571:17;5563:215;;;5652:15;;-1:-1:-1;;;;;5648:41:56;5634:56;;5712:14;;;;5751:17;;;;-1:-1:-1;5598:11:56;5563:215;;;-1:-1:-1;5795:5:56;;4783:1023;-1:-1:-1;;;;;;;;4783:1023:56:o;5811:245::-;5966:2;5951:18;;5999:1;5988:13;;5978:2;;6005:9;5978:2;6025:25;;;5933:123;:::o;6061:383::-;;6210:2;6199:9;6192:21;6242:6;6236:13;6285:6;6280:2;6269:9;6265:18;6258:34;6301:66;6360:6;6355:2;6344:9;6340:18;6335:2;6327:6;6323:15;6301:66;:::i;:::-;6428:2;6407:15;-1:-1:-1;;6403:29:56;6388:45;;;;6435:2;6384:54;;6182:262;-1:-1:-1;;6182:262:56:o;6449:177::-;6595:25;;;6583:2;6568:18;;6550:76::o;6631:242::-;6701:2;6695:9;6731:17;;;6799:22;;;-1:-1:-1;6763:34:56;;6760:62;6757:2;;;6825:9;6757:2;6852;6845:22;6675:198;;-1:-1:-1;6675:198:56:o;6878:258::-;6950:1;6960:113;6974:6;6971:1;6968:13;6960:113;;;7050:11;;;7044:18;7031:11;;;7024:39;6996:2;6989:10;6960:113;;;7091:6;7088:1;7085:13;7082:2;;;7126:1;7117:6;7112:3;7108:16;7101:27;7082:2;;6931:205;;;:::o;:::-;1004:29687:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/2clp/Gyro2CLPPool.sol", "type": "contract", "deployment": {"address": "0xeD6850f0400c111e49Ee3F4bEa44d19b438B4611", "chainid": "137", "blockHeight": 49901550}}