{"abi": [{"inputs": [{"components": [{"components": [{"internalType": "contract IVault", "name": "vault", "type": "address"}, {"internalType": "string", "name": "name", "type": "string"}, {"internalType": "string", "name": "symbol", "type": "string"}, {"internalType": "contract IERC20", "name": "token0", "type": "address"}, {"internalType": "contract IERC20", "name": "token1", "type": "address"}, {"internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}, {"internalType": "uint256", "name": "pauseWindowDuration", "type": "uint256"}, {"internalType": "uint256", "name": "bufferPeriodDuration", "type": "uint256"}, {"internalType": "bool", "name": "oracleEnabled", "type": "bool"}, {"internalType": "address", "name": "owner", "type": "address"}], "internalType": "struct ExtensibleWeightedPool2Tokens.NewPoolParams", "name": "baseParams", "type": "tuple"}, {"internalType": "uint256", "name": "sqrtAlpha", "type": "uint256"}, {"internalType": "uint256", "name": "sqrtBeta", "type": "uint256"}, {"internalType": "address", "name": "capManager", "type": "address"}, {"components": [{"internalType": "bool", "name": "capEnabled", "type": "bool"}, {"internalType": "uint120", "name": "perAddressCap", "type": "uint120"}, {"internalType": "uint128", "name": "globalCap", "type": "uint128"}], "internalType": "struct ICappedLiquidity.CapParams", "name": "capParams", "type": "tuple"}, {"internalType": "address", "name": "pauseManager", "type": "address"}], "internalType": "struct Gyro2CLPPool.GyroParams", "name": "params", "type": "tuple"}, {"internalType": "address", "name": "configAddress", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "owner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "spender", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Approval", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "capManager", "type": "address"}], "name": "CapManagerUpdated", "type": "event"}, {"anonymous": false, "inputs": [{"components": [{"internalType": "bool", "name": "capEnabled", "type": "bool"}, {"internalType": "uint120", "name": "perAddressCap", "type": "uint120"}, {"internalType": "uint128", "name": "globalCap", "type": "uint128"}], "indexed": false, "internalType": "struct ICappedLiquidity.CapParams", "name": "params", "type": "tuple"}], "name": "CapParamsUpdated", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bool", "name": "enabled", "type": "bool"}], "name": "OracleEnabledChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "oldPauseManager", "type": "address"}, {"indexed": false, "internalType": "address", "name": "newPauseManager", "type": "address"}], "name": "PauseManagerChanged", "type": "event"}, {"anonymous": false, "inputs": [], "name": "PausedLocally", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bool", "name": "paused", "type": "bool"}], "name": "PausedStateChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}], "name": "SwapFeePercentageChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "from", "type": "address"}, {"indexed": true, "internalType": "address", "name": "to", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Transfer", "type": "event"}, {"anonymous": false, "inputs": [], "name": "UnpausedLocally", "type": "event"}, {"inputs": [], "name": "DOMAIN_SEPARATOR", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "spender", "type": "address"}], "name": "allowance", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "approve", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "balanceOf", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "balanceTokenIn", "type": "uint256"}, {"internalType": "uint256", "name": "balanceTokenOut", "type": "uint256"}, {"internalType": "bool", "name": "tokenInIsToken0", "type": "bool"}], "name": "calculateCurrentValues", "outputs": [{"internalType": "uint256", "name": "currentInvariant", "type": "uint256"}, {"internalType": "uint256", "name": "virtualParamIn", "type": "uint256"}, {"internalType": "uint256", "name": "virtualParamOut", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "capManager", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "capParams", "outputs": [{"components": [{"internalType": "bool", "name": "capEnabled", "type": "bool"}, {"internalType": "uint120", "name": "perAddressCap", "type": "uint120"}, {"internalType": "uint128", "name": "globalCap", "type": "uint128"}], "internalType": "struct ICappedLiquidity.CapParams", "name": "", "type": "tuple"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_pauseManager", "type": "address"}], "name": "changePauseManager", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "decimals", "outputs": [{"internalType": "uint8", "name": "", "type": "uint8"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "decreaseAllowance", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "startIndex", "type": "uint256"}, {"internalType": "uint256", "name": "endIndex", "type": "uint256"}], "name": "dirtyUninitializedOracleSamples", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "enableOracle", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes4", "name": "selector", "type": "bytes4"}], "name": "getActionId", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getAuthorizer", "outputs": [{"internalType": "contract IAuthorizer", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getInvariant", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getLargestSafeQueryWindow", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "pure", "type": "function"}, {"inputs": [], "name": "getLastInvariant", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "enum IPriceOracle.Variable", "name": "variable", "type": "uint8"}], "name": "getLatest", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getMiscData", "outputs": [{"internalType": "int256", "name": "logInvariant", "type": "int256"}, {"internalType": "int256", "name": "logTotalSupply", "type": "int256"}, {"internalType": "uint256", "name": "oracleSampleCreationTimestamp", "type": "uint256"}, {"internalType": "uint256", "name": "oracleIndex", "type": "uint256"}, {"internalType": "bool", "name": "oracleEnabled", "type": "bool"}, {"internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getNormalizedWeights", "outputs": [{"internalType": "uint256[]", "name": "", "type": "uint256[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getOwner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"components": [{"internalType": "enum IPriceOracle.Variable", "name": "variable", "type": "uint8"}, {"internalType": "uint256", "name": "ago", "type": "uint256"}], "internalType": "struct IPriceOracle.OracleAccumulatorQuery[]", "name": "queries", "type": "tuple[]"}], "name": "getPastAccumulators", "outputs": [{"internalType": "int256[]", "name": "results", "type": "int256[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getPausedState", "outputs": [{"internalType": "bool", "name": "paused", "type": "bool"}, {"internalType": "uint256", "name": "pauseWindowEndTime", "type": "uint256"}, {"internalType": "uint256", "name": "bufferPeriodEndTime", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getPoolId", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getRate", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "index", "type": "uint256"}], "name": "getSample", "outputs": [{"internalType": "int256", "name": "logPairPrice", "type": "int256"}, {"internalType": "int256", "name": "accLogPairPrice", "type": "int256"}, {"internalType": "int256", "name": "logBptPrice", "type": "int256"}, {"internalType": "int256", "name": "accLogBptPrice", "type": "int256"}, {"internalType": "int256", "name": "logInvariant", "type": "int256"}, {"internalType": "int256", "name": "accLogInvariant", "type": "int256"}, {"internalType": "uint256", "name": "timestamp", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getSqrtParameters", "outputs": [{"internalType": "uint256[2]", "name": "", "type": "uint256[2]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getSwapFeePercentage", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"components": [{"internalType": "enum IPriceOracle.Variable", "name": "variable", "type": "uint8"}, {"internalType": "uint256", "name": "secs", "type": "uint256"}, {"internalType": "uint256", "name": "ago", "type": "uint256"}], "internalType": "struct IPriceOracle.OracleAverageQuery[]", "name": "queries", "type": "tuple[]"}], "name": "getTimeWeightedAverage", "outputs": [{"internalType": "uint256[]", "name": "results", "type": "uint256[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getTotalSamples", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "pure", "type": "function"}, {"inputs": [], "name": "getVault", "outputs": [{"internalType": "contract IVault", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getVirtualParameters", "outputs": [{"internalType": "uint256[]", "name": "virtualParams", "type": "uint256[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "gyroConfig", "outputs": [{"internalType": "contract IGyroConfig", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "addedValue", "type": "uint256"}], "name": "increaseAllowance", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "name", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}], "name": "nonces", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "onExitPool", "outputs": [{"internalType": "uint256[]", "name": "", "type": "uint256[]"}, {"internalType": "uint256[]", "name": "", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "onJoinPool", "outputs": [{"internalType": "uint256[]", "name": "amountsIn", "type": "uint256[]"}, {"internalType": "uint256[]", "name": "dueProtocolFeeAmounts", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"components": [{"internalType": "enum IVault.SwapKind", "name": "kind", "type": "uint8"}, {"internalType": "contract IERC20", "name": "tokenIn", "type": "address"}, {"internalType": "contract IERC20", "name": "tokenOut", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}, {"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "address", "name": "from", "type": "address"}, {"internalType": "address", "name": "to", "type": "address"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "internalType": "struct IPoolSwapStructs.SwapRequest", "name": "request", "type": "tuple"}, {"internalType": "uint256", "name": "balanceTokenIn", "type": "uint256"}, {"internalType": "uint256", "name": "balanceTokenOut", "type": "uint256"}], "name": "onSwap", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "pause", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "pauseManager", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "value", "type": "uint256"}, {"internalType": "uint256", "name": "deadline", "type": "uint256"}, {"internalType": "uint8", "name": "v", "type": "uint8"}, {"internalType": "bytes32", "name": "r", "type": "bytes32"}, {"internalType": "bytes32", "name": "s", "type": "bytes32"}], "name": "permit", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "queryExit", "outputs": [{"internalType": "uint256", "name": "bptIn", "type": "uint256"}, {"internalType": "uint256[]", "name": "amountsOut", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "poolId", "type": "bytes32"}, {"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256[]", "name": "balances", "type": "uint256[]"}, {"internalType": "uint256", "name": "lastChangeBlock", "type": "uint256"}, {"internalType": "uint256", "name": "protocolSwapFeePercentage", "type": "uint256"}, {"internalType": "bytes", "name": "userData", "type": "bytes"}], "name": "queryJoin", "outputs": [{"internalType": "uint256", "name": "bptOut", "type": "uint256"}, {"internalType": "uint256[]", "name": "amountsIn", "type": "uint256[]"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_capManager", "type": "address"}], "name": "setCapManager", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"components": [{"internalType": "bool", "name": "capEnabled", "type": "bool"}, {"internalType": "uint120", "name": "perAddressCap", "type": "uint120"}, {"internalType": "uint128", "name": "globalCap", "type": "uint128"}], "internalType": "struct ICappedLiquidity.CapParams", "name": "params", "type": "tuple"}], "name": "setCapParams", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bool", "name": "paused", "type": "bool"}], "name": "setPaused", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "swapFeePercentage", "type": "uint256"}], "name": "setSwapFeePercentage", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "symbol", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "totalSupply", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transfer", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transferFrom", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "unpause", "outputs": [], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"0": "contracts/2clp/Gyro2CLPMath.sol", "1": "contracts/2clp/Gyro2CLPOracleMath.sol", "12": "contracts/CappedLiquidity.sol", "13": "contracts/ExtensibleWeightedPool2Tokens.sol", "14": "contracts/LocallyPausable.sol", "2": "contracts/2clp/Gyro2CLPPool.sol", "20": "interfaces/ICappedLiquidity.sol", "21": "interfaces/IGyroConfig.sol", "22": "interfaces/ILocallyPausable.sol", "23": "libraries/GyroConfigKeys.sol", "24": "libraries/GyroErrors.sol", "25": "libraries/GyroFixedPoint.sol", "26": "libraries/GyroPoolMath.sol", "29": "node_modules/@balancer-labs/v2-pool-utils/contracts/BalancerPoolToken.sol", "3": "contracts/2clp/Gyro2CLPPoolErrors.sol", "32": "node_modules/@balancer-labs/v2-pool-utils/contracts/BasePoolAuthorization.sol", "35": "node_modules/@balancer-labs/v2-pool-utils/contracts/interfaces/IPoolPriceOracle.sol", "36": "node_modules/@balancer-labs/v2-pool-utils/contracts/interfaces/IPriceOracle.sol", "37": "node_modules/@balancer-labs/v2-pool-utils/contracts/oracle/Buffer.sol", "38": "node_modules/@balancer-labs/v2-pool-utils/contracts/oracle/PoolPriceOracle.sol", "39": "node_modules/@balancer-labs/v2-pool-utils/contracts/oracle/QueryProcessor.sol", "40": "node_modules/@balancer-labs/v2-pool-utils/contracts/oracle/Samples.sol", "42": "node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedMath.sol", "44": "node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol", "45": "node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol", "46": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/Authentication.sol", "47": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol", "50": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol", "51": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/ISignaturesValidator.sol", "52": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol", "53": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/InputHelpers.sol", "54": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/LogCompression.sol", "55": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/TemporarilyPausable.sol", "56": "node_modules/@balancer-labs/v2-solidity-utils/contracts/helpers/WordCodec.sol", "57": "node_modules/@balancer-labs/v2-solidity-utils/contracts/math/FixedPoint.sol", "58": "node_modules/@balancer-labs/v2-solidity-utils/contracts/math/LogExpMath.sol", "59": "node_modules/@balancer-labs/v2-solidity-utils/contracts/math/Math.sol", "60": "node_modules/@balancer-labs/v2-solidity-utils/contracts/misc/IWETH.sol", "61": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/EIP712.sol", "62": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ERC20.sol", "63": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ERC20Permit.sol", "64": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol", "65": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20Permit.sol", "66": "node_modules/@balancer-labs/v2-solidity-utils/contracts/openzeppelin/SafeMath.sol", "67": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IAsset.sol", "68": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IAuthorizer.sol", "69": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IBasePool.sol", "70": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IFlashLoanRecipient.sol", "71": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IMinimalSwapInfoPool.sol", "72": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IPoolSwapStructs.sol", "73": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IProtocolFeesCollector.sol", "74": "node_modules/@balancer-labs/v2-vault/contracts/interfaces/IVault.sol"}, "ast": {"absolutePath": "contracts/2clp/Gyro2CLPPool.sol", "exportedSymbols": {"Authentication": [27692], "BalancerPoolToken": [20646], "BaseMinimalSwapInfoPool": [26974], "BasePool": [21826], "BasePoolAuthorization": [21919], "BaseWeightedPool": [26324], "Buffer": [21991], "CappedLiquidity": [12258], "EIP712": [28828], "ERC20": [24212], "ERC20Permit": [27127], "Errors": [18980], "ExtensibleWeightedPool2Tokens": [14609], "FixedPoint": [27551], "Gyro2CLPMath": [475], "Gyro2CLPOracleMath": [12073], "Gyro2CLPPool": [1978], "Gyro2CLPPoolErrors": [10029], "GyroConfigKeys": [14794], "GyroErrors": [10102], "GyroFixedPoint": [10762], "GyroPoolMath": [11550], "IAsset": [26603], "IAssetManager": [27209], "IAuthentication": [20434], "IAuthorizer": [26618], "IBasePool": [27615], "ICappedLiquidity": [15253], "IERC20": [20356], "IERC20Permit": [28864], "IFlashLoanRecipient": [26637], "IGyroConfig": [14779], "ILocallyPausable": [24258], "IMinimalSwapInfoPool": [24231], "IPoolPriceOracle": [27721], "IPoolSwapStructs": [28889], "IPriceOracle": [27776], "IProtocolFeesCollector": [26702], "ISignaturesValidator": [26565], "ITemporarilyPausable": [26584], "IVault": [15861], "IWETH": [26599], "InputHelpers": [11662], "LocallyPausable": [14719], "LogCompression": [20423], "LogExpMath": [20278], "Math": [11951], "PoolPriceOracle": [22384], "QueryProcessor": [28227], "SafeMath": [28702], "Samples": [28624], "TemporarilyPausable": [23734], "WeightedMath": [23482], "WeightedOracleMath": [23554], "WeightedPool2TokensMiscData": [15009], "WeightedPoolUserDataHelpers": [15219], "WordCodec": [25099], "_grequire": [10047, 10066], "_grevert": [10078, 10098], "_require": [18575], "_revert": [18583]}, "id": 1979, "license": "GPL-3.0-or-later", "nodeType": "SourceUnit", "nodes": [{"id": 477, "literals": ["solidity", "0.7", ".6"], "nodeType": "PragmaDirective", "src": "688:22:2"}, {"id": 478, "literals": ["experimental", "ABIEncoderV2"], "nodeType": "PragmaDirective", "src": "711:33:2"}, {"absolutePath": "libraries/GyroFixedPoint.sol", "file": "../../libraries/GyroFixedPoint.sol", "id": 479, "nodeType": "ImportDirective", "scope": 1979, "sourceUnit": 10763, "src": "822:44:2", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol", "file": "@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol", "id": 480, "nodeType": "ImportDirective", "scope": 1979, "sourceUnit": 15220, "src": "868:83:2", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "node_modules/@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol", "file": "@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol", "id": 481, "nodeType": "ImportDirective", "scope": 1979, "sourceUnit": 15010, "src": "952:83:2", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/GyroConfigKeys.sol", "file": "../../libraries/GyroConfigKeys.sol", "id": 482, "nodeType": "ImportDirective", "scope": 1979, "sourceUnit": 14795, "src": "1037:44:2", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/IGyroConfig.sol", "file": "../../interfaces/IGyroConfig.sol", "id": 483, "nodeType": "ImportDirective", "scope": 1979, "sourceUnit": 14780, "src": "1082:42:2", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/GyroPoolMath.sol", "file": "../../libraries/GyroPoolMath.sol", "id": 484, "nodeType": "ImportDirective", "scope": 1979, "sourceUnit": 11551, "src": "1125:42:2", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/GyroErrors.sol", "file": "../../libraries/GyroErrors.sol", "id": 485, "nodeType": "ImportDirective", "scope": 1979, "sourceUnit": 10103, "src": "1168:40:2", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/CappedLiquidity.sol", "file": "../CappedLiquidity.sol", "id": 486, "nodeType": "ImportDirective", "scope": 1979, "sourceUnit": 12259, "src": "1210:32:2", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/LocallyPausable.sol", "file": "../LocallyPausable.sol", "id": 487, "nodeType": "ImportDirective", "scope": 1979, "sourceUnit": 14720, "src": "1243:32:2", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/ExtensibleWeightedPool2Tokens.sol", "file": "../ExtensibleWeightedPool2Tokens.sol", "id": 488, "nodeType": "ImportDirective", "scope": 1979, "sourceUnit": 14610, "src": "1276:46:2", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/2clp/Gyro2CLPPoolErrors.sol", "file": "./Gyro2CLPPoolErrors.sol", "id": 489, "nodeType": "ImportDirective", "scope": 1979, "sourceUnit": 10030, "src": "1323:34:2", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/2clp/Gyro2CLPMath.sol", "file": "./Gyro2CLPMath.sol", "id": 490, "nodeType": "ImportDirective", "scope": 1979, "sourceUnit": 476, "src": "1358:28:2", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/2clp/Gyro2CLPOracleMath.sol", "file": "./Gyro2CLPOracleMath.sol", "id": 491, "nodeType": "ImportDirective", "scope": 1979, "sourceUnit": 12074, "src": "1387:34:2", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 492, "name": "ExtensibleWeightedPool2Tokens", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 14609, "src": "1448:29:2", "typeDescriptions": {"typeIdentifier": "t_contract$_ExtensibleWeightedPool2Tokens_$14609", "typeString": "contract ExtensibleWeightedPool2Tokens"}}, "id": 493, "nodeType": "InheritanceSpecifier", "src": "1448:29:2"}, {"baseName": {"id": 494, "name": "Gyro2CLPOracleMath", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 12073, "src": "1479:18:2", "typeDescriptions": {"typeIdentifier": "t_contract$_Gyro2CLPOracleMath_$12073", "typeString": "contract Gyro2CLPOracleMath"}}, "id": 495, "nodeType": "InheritanceSpecifier", "src": "1479:18:2"}, {"baseName": {"id": 496, "name": "CappedLiquidity", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 12258, "src": "1499:15:2", "typeDescriptions": {"typeIdentifier": "t_contract$_CappedLiquidity_$12258", "typeString": "contract CappedLiquidity"}}, "id": 497, "nodeType": "InheritanceSpecifier", "src": "1499:15:2"}, {"baseName": {"id": 498, "name": "LocallyPausable", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 14719, "src": "1516:15:2", "typeDescriptions": {"typeIdentifier": "t_contract$_LocallyPausable_$14719", "typeString": "contract LocallyPausable"}}, "id": 499, "nodeType": "InheritanceSpecifier", "src": "1516:15:2"}], "contractDependencies": [12073, 12258, 14609, 14719, 15253, 20356, 20434, 20646, 21919, 22384, 23734, 24212, 24231, 24258, 26584, 27127, 27615, 27692, 27721, 27776, 28828, 28864, 28889], "contractKind": "contract", "fullyImplemented": true, "id": 1978, "linearizedBaseContracts": [1978, 14719, 24258, 12258, 15253, 12073, 14609, 22384, 27776, 27721, 23734, 26584, 20646, 27127, 28828, 28864, 24212, 20356, 21919, 27692, 20434, 24231, 27615, 28889], "name": "Gyro2CLPPool", "nodeType": "ContractDefinition", "nodes": [{"id": 502, "libraryName": {"id": 500, "name": "GyroFixedPoint", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 10762, "src": "1544:14:2", "typeDescriptions": {"typeIdentifier": "t_contract$_GyroFixedPoint_$10762", "typeString": "library GyroFixedPoint"}}, "nodeType": "UsingForDirective", "src": "1538:33:2", "typeName": {"id": 501, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1563:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"id": 505, "libraryName": {"id": 503, "name": "WeightedPoolUserDataHelpers", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 15219, "src": "1582:27:2", "typeDescriptions": {"typeIdentifier": "t_contract$_WeightedPoolUserDataHelpers_$15219", "typeString": "library WeightedPoolUserDataHelpers"}}, "nodeType": "UsingForDirective", "src": "1576:44:2", "typeName": {"id": 504, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "1614:5:2", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}}, {"id": 508, "libraryName": {"id": 506, "name": "WeightedPool2TokensMiscData", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 15009, "src": "1631:27:2", "typeDescriptions": {"typeIdentifier": "t_contract$_WeightedPool2TokensMiscData_$15009", "typeString": "library WeightedPool2TokensMiscData"}}, "nodeType": "UsingForDirective", "src": "1625:46:2", "typeName": {"id": 507, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1663:7:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}}, {"constant": false, "id": 510, "mutability": "immutable", "name": "_sqrtAlpha", "nodeType": "VariableDeclaration", "scope": 1978, "src": "1677:36:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 509, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1677:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "private"}, {"constant": false, "id": 512, "mutability": "immutable", "name": "_sqrtBeta", "nodeType": "VariableDeclaration", "scope": 1978, "src": "1719:35:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 511, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1719:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "private"}, {"constant": false, "functionSelector": "44bbdb55", "id": 514, "mutability": "mutable", "name": "gyroConfig", "nodeType": "VariableDeclaration", "scope": 1978, "src": "1761:29:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$14779", "typeString": "contract IGyroConfig"}, "typeName": {"id": 513, "name": "IGyroConfig", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 14779, "src": "1761:11:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$14779", "typeString": "contract IGyroConfig"}}, "visibility": "public"}, {"canonicalName": "Gyro2CLPPool.GyroParams", "id": 527, "members": [{"constant": false, "id": 516, "mutability": "mutable", "name": "baseParams", "nodeType": "VariableDeclaration", "scope": 527, "src": "1825:24:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$12384_storage_ptr", "typeString": "struct ExtensibleWeightedPool2Tokens.NewPoolParams"}, "typeName": {"id": 515, "name": "NewPoolParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 12384, "src": "1825:13:2", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$12384_storage_ptr", "typeString": "struct ExtensibleWeightedPool2Tokens.NewPoolParams"}}, "visibility": "internal"}, {"constant": false, "id": 518, "mutability": "mutable", "name": "sqrtAlpha", "nodeType": "VariableDeclaration", "scope": 527, "src": "1859:17:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 517, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1859:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 520, "mutability": "mutable", "name": "sqrtBeta", "nodeType": "VariableDeclaration", "scope": 527, "src": "1919:16:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 519, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1919:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 522, "mutability": "mutable", "name": "capManager", "nodeType": "VariableDeclaration", "scope": 527, "src": "2012:18:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 521, "name": "address", "nodeType": "ElementaryTypeName", "src": "2012:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 524, "mutability": "mutable", "name": "capParams", "nodeType": "VariableDeclaration", "scope": 527, "src": "2040:19:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_CapParams_$15237_storage_ptr", "typeString": "struct ICappedLiquidity.CapParams"}, "typeName": {"id": 523, "name": "CapParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 15237, "src": "2040:9:2", "typeDescriptions": {"typeIdentifier": "t_struct$_CapParams_$15237_storage_ptr", "typeString": "struct ICappedLiquidity.CapParams"}}, "visibility": "internal"}, {"constant": false, "id": 526, "mutability": "mutable", "name": "pauseManager", "nodeType": "VariableDeclaration", "scope": 527, "src": "2069:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 525, "name": "address", "nodeType": "ElementaryTypeName", "src": "2069:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "name": "GyroParams", "nodeType": "StructDefinition", "scope": 1978, "src": "1797:299:2", "visibility": "public"}, {"body": {"id": 585, "nodeType": "Block", "src": "2330:299:2", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 553, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 549, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 529, "src": "2350:6:2", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$527_memory_ptr", "typeString": "struct Gyro2CLPPool.GyroParams memory"}}, "id": 550, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "sqrtAlpha", "nodeType": "MemberAccess", "referencedDeclaration": 518, "src": "2350:16:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 551, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 529, "src": "2369:6:2", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$527_memory_ptr", "typeString": "struct Gyro2CLPPool.GyroParams memory"}}, "id": 552, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "sqrtBeta", "nodeType": "MemberAccess", "referencedDeclaration": 520, "src": "2369:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2350:34:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 554, "name": "Gyro2CLPPoolErrors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10029, "src": "2386:18:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPPoolErrors_$10029_$", "typeString": "type(library Gyro2CLPPoolErrors)"}}, "id": 555, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "SQRT_PARAMS_WRONG", "nodeType": "MemberAccess", "referencedDeclaration": 10025, "src": "2386:36:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 548, "name": "_grequire", "nodeType": "Identifier", "overloadedDeclarations": [10047, 10066], "referencedDeclaration": 10047, "src": "2340:9:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 556, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2340:83:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 557, "nodeType": "ExpressionStatement", "src": "2340:83:2"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 564, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 559, "name": "configAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 531, "src": "2443:13:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 562, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2468:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 561, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2460:7:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 560, "name": "address", "nodeType": "ElementaryTypeName", "src": "2460:7:2", "typeDescriptions": {}}}, "id": 563, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2460:10:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "2443:27:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 565, "name": "GyroErrors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10102, "src": "2472:10:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroErrors_$10102_$", "typeString": "type(library GyroErrors)"}}, "id": 566, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ZERO_ADDRESS", "nodeType": "MemberAccess", "referencedDeclaration": 10101, "src": "2472:23:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 558, "name": "_grequire", "nodeType": "Identifier", "overloadedDeclarations": [10047, 10066], "referencedDeclaration": 10047, "src": "2433:9:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 567, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2433:63:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 568, "nodeType": "ExpressionStatement", "src": "2433:63:2"}, {"expression": {"id": 572, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 569, "name": "_sqrtAlpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 510, "src": "2506:10:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 570, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 529, "src": "2519:6:2", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$527_memory_ptr", "typeString": "struct Gyro2CLPPool.GyroParams memory"}}, "id": 571, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "sqrtAlpha", "nodeType": "MemberAccess", "referencedDeclaration": 518, "src": "2519:16:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2506:29:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 573, "nodeType": "ExpressionStatement", "src": "2506:29:2"}, {"expression": {"id": 577, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 574, "name": "_sqrtBeta", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 512, "src": "2545:9:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 575, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 529, "src": "2557:6:2", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$527_memory_ptr", "typeString": "struct Gyro2CLPPool.GyroParams memory"}}, "id": 576, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "sqrtBeta", "nodeType": "MemberAccess", "referencedDeclaration": 520, "src": "2557:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2545:27:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 578, "nodeType": "ExpressionStatement", "src": "2545:27:2"}, {"expression": {"id": 583, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 579, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 514, "src": "2583:10:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$14779", "typeString": "contract IGyroConfig"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 581, "name": "configAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 531, "src": "2608:13:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 580, "name": "IGyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14779, "src": "2596:11:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IGyroConfig_$14779_$", "typeString": "type(contract IGyroConfig)"}}, "id": 582, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2596:26:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$14779", "typeString": "contract IGyroConfig"}}, "src": "2583:39:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$14779", "typeString": "contract IGyroConfig"}}, "id": 584, "nodeType": "ExpressionStatement", "src": "2583:39:2"}]}, "id": 586, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"expression": {"id": 534, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 529, "src": "2201:6:2", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$527_memory_ptr", "typeString": "struct Gyro2CLPPool.GyroParams memory"}}, "id": 535, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "baseParams", "nodeType": "MemberAccess", "referencedDeclaration": 516, "src": "2201:17:2", "typeDescriptions": {"typeIdentifier": "t_struct$_NewPoolParams_$12384_memory_ptr", "typeString": "struct ExtensibleWeightedPool2Tokens.NewPoolParams memory"}}], "id": 536, "modifierName": {"id": 533, "name": "ExtensibleWeightedPool2Tokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14609, "src": "2171:29:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ExtensibleWeightedPool2Tokens_$14609_$", "typeString": "type(contract ExtensibleWeightedPool2Tokens)"}}, "nodeType": "ModifierInvocation", "src": "2171:48:2"}, {"arguments": [{"expression": {"id": 538, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 529, "src": "2244:6:2", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$527_memory_ptr", "typeString": "struct Gyro2CLPPool.GyroParams memory"}}, "id": 539, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "capManager", "nodeType": "MemberAccess", "referencedDeclaration": 522, "src": "2244:17:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 540, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 529, "src": "2263:6:2", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$527_memory_ptr", "typeString": "struct Gyro2CLPPool.GyroParams memory"}}, "id": 541, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "capParams", "nodeType": "MemberAccess", "referencedDeclaration": 524, "src": "2263:16:2", "typeDescriptions": {"typeIdentifier": "t_struct$_CapParams_$15237_memory_ptr", "typeString": "struct ICappedLiquidity.CapParams memory"}}], "id": 542, "modifierName": {"id": 537, "name": "CappedLiquidity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12258, "src": "2228:15:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_CappedLiquidity_$12258_$", "typeString": "type(contract CappedLiquidity)"}}, "nodeType": "ModifierInvocation", "src": "2228:52:2"}, {"arguments": [{"expression": {"id": 544, "name": "params", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 529, "src": "2305:6:2", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$527_memory_ptr", "typeString": "struct Gyro2CLPPool.GyroParams memory"}}, "id": 545, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "pauseManager", "nodeType": "MemberAccess", "referencedDeclaration": 526, "src": "2305:19:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 546, "modifierName": {"id": 543, "name": "LocallyPausable", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14719, "src": "2289:15:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_LocallyPausable_$14719_$", "typeString": "type(contract LocallyPausable)"}}, "nodeType": "ModifierInvocation", "src": "2289:36:2"}], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 532, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 529, "mutability": "mutable", "name": "params", "nodeType": "VariableDeclaration", "scope": 586, "src": "2114:24:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$527_memory_ptr", "typeString": "struct Gyro2CLPPool.GyroParams"}, "typeName": {"id": 528, "name": "GyroParams", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 527, "src": "2114:10:2", "typeDescriptions": {"typeIdentifier": "t_struct$_GyroParams_$527_storage_ptr", "typeString": "struct Gyro2CLPPool.GyroParams"}}, "visibility": "internal"}, {"constant": false, "id": 531, "mutability": "mutable", "name": "configAddress", "nodeType": "VariableDeclaration", "scope": 586, "src": "2140:21:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 530, "name": "address", "nodeType": "ElementaryTypeName", "src": "2140:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "2113:49:2"}, "returnParameters": {"id": 547, "nodeType": "ParameterList", "parameters": [], "src": "2330:0:2"}, "scope": 1978, "src": "2102:527:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 596, "nodeType": "Block", "src": "2812:41:2", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 593, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [623, 636], "referencedDeclaration": 623, "src": "2829:15:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function () view returns (uint256[2] memory)"}}, "id": 594, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2829:17:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "functionReturnParameters": 592, "id": 595, "nodeType": "Return", "src": "2822:24:2"}]}, "functionSelector": "707dcd1e", "id": 597, "implemented": true, "kind": "function", "modifiers": [], "name": "getSqrtParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 587, "nodeType": "ParameterList", "parameters": [], "src": "2767:2:2"}, "returnParameters": {"id": 592, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 591, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 597, "src": "2793:17:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 588, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2793:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 590, "length": {"hexValue": "32", "id": 589, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2801:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "2793:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "src": "2792:19:2"}, "scope": 1978, "src": "2741:112:2", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 622, "nodeType": "Block", "src": "2954:150:2", "statements": [{"expression": {"id": 610, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 604, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 602, "src": "2964:17:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 606, "indexExpression": {"hexValue": "30", "id": 605, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2982:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "2964:20:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "74727565", "id": 608, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3003:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 607, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [623, 636], "referencedDeclaration": 636, "src": "2987:15:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 609, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2987:21:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2964:44:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 611, "nodeType": "ExpressionStatement", "src": "2964:44:2"}, {"expression": {"id": 618, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 612, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 602, "src": "3018:17:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 614, "indexExpression": {"hexValue": "31", "id": 613, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3036:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "3018:20:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "66616c7365", "id": 616, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3057:5:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 615, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [623, 636], "referencedDeclaration": 636, "src": "3041:15:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 617, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3041:22:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3018:45:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 619, "nodeType": "ExpressionStatement", "src": "3018:45:2"}, {"expression": {"id": 620, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 602, "src": "3080:17:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "functionReturnParameters": 603, "id": 621, "nodeType": "Return", "src": "3073:24:2"}]}, "id": 623, "implemented": true, "kind": "function", "modifiers": [], "name": "_sqrtParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 598, "nodeType": "ParameterList", "parameters": [], "src": "2883:2:2"}, "returnParameters": {"id": 603, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 602, "mutability": "mutable", "name": "virtualParameters", "nodeType": "VariableDeclaration", "scope": 623, "src": "2917:35:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 599, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2917:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 601, "length": {"hexValue": "32", "id": 600, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2925:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "2917:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "src": "2916:37:2"}, "scope": 1978, "src": "2859:245:2", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"body": {"id": 635, "nodeType": "Block", "src": "3192:59:2", "statements": [{"expression": {"condition": {"id": 630, "name": "parameter0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 625, "src": "3209:10:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 632, "name": "_sqrtBeta", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 512, "src": "3235:9:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 633, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "3209:35:2", "trueExpression": {"id": 631, "name": "_sqrtAlpha", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 510, "src": "3222:10:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 629, "id": 634, "nodeType": "Return", "src": "3202:42:2"}]}, "id": 636, "implemented": true, "kind": "function", "modifiers": [], "name": "_sqrtParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 626, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 625, "mutability": "mutable", "name": "parameter0", "nodeType": "VariableDeclaration", "scope": 636, "src": "3135:15:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 624, "name": "bool", "nodeType": "ElementaryTypeName", "src": "3135:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "3134:17:2"}, "returnParameters": {"id": 629, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 628, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 636, "src": "3183:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 627, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3183:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3182:9:2"}, "scope": 1978, "src": "3110:141:2", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"body": {"id": 677, "nodeType": "Block", "src": "3446:347:2", "statements": [{"assignments": [null, 647, null], "declarations": [null, {"constant": false, "id": 647, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 677, "src": "3459:25:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 645, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3459:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 646, "nodeType": "ArrayTypeName", "src": "3459:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, null], "id": 654, "initialValue": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 651, "name": "getPoolId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12519, "src": "3515:9:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$", "typeString": "function () view returns (bytes32)"}}, "id": 652, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3515:11:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 648, "name": "getVault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20475, "src": "3490:8:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IVault_$15861_$", "typeString": "function () view returns (contract IVault)"}}, "id": 649, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3490:10:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IVault_$15861", "typeString": "contract IVault"}}, "id": 650, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getPoolTokens", "nodeType": "MemberAccess", "referencedDeclaration": 15617, "src": "3490:24:2", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_array$_t_contract$_IERC20_$20356_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$", "typeString": "function (bytes32) view external returns (contract IERC20[] memory,uint256[] memory,uint256)"}}, "id": 653, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3490:37:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_array$_t_contract$_IERC20_$20356_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$", "typeString": "tuple(contract IERC20[] memory,uint256[] memory,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "3456:71:2"}, {"expression": {"arguments": [{"id": 656, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 647, "src": "3671:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}], "id": 655, "name": "_upscaleArray", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14391, "src": "3657:13:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$", "typeString": "function (uint256[] memory) view"}}, "id": 657, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3657:23:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 658, "nodeType": "ExpressionStatement", "src": "3657:23:2"}, {"expression": {"id": 675, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [null, {"baseExpression": {"id": 659, "name": "virtualParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 641, "src": "3693:13:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 661, "indexExpression": {"hexValue": "30", "id": 660, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3707:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "3693:16:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 662, "name": "virtualParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 641, "src": "3711:13:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 664, "indexExpression": {"hexValue": "31", "id": 663, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3725:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "3711:16:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 665, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "3690:38:2", "typeDescriptions": {"typeIdentifier": "t_tuple$__$_t_uint256_$_t_uint256_$", "typeString": "tuple(,uint256,uint256)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"baseExpression": {"id": 667, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 647, "src": "3755:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 669, "indexExpression": {"hexValue": "30", "id": 668, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3764:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3755:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 670, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 647, "src": "3768:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 672, "indexExpression": {"hexValue": "31", "id": 671, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3777:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3768:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "74727565", "id": 673, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3781:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 666, "name": "_calculateCurrentValues", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1159, "src": "3731:23:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256,bool) view returns (uint256,uint256,uint256)"}}, "id": 674, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3731:55:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256,uint256)"}}, "src": "3690:96:2", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 676, "nodeType": "ExpressionStatement", "src": "3690:96:2"}]}, "documentation": {"id": 637, "nodeType": "StructuredDocumentation", "src": "3257:97:2", "text": "@dev Returns virtual offsets a and b for reserves x and y respectively, as in (x+a)*(y+b)=L^2"}, "functionSelector": "8dd9f89d", "id": 678, "implemented": true, "kind": "function", "modifiers": [], "name": "getVirtualParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 638, "nodeType": "ParameterList", "parameters": [], "src": "3388:2:2"}, "returnParameters": {"id": 642, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 641, "mutability": "mutable", "name": "virtualParams", "nodeType": "VariableDeclaration", "scope": 678, "src": "3414:30:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 639, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3414:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 640, "nodeType": "ArrayTypeName", "src": "3414:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "3413:32:2"}, "scope": 1978, "src": "3359:434:2", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 717, "nodeType": "Block", "src": "3983:208:2", "statements": [{"expression": {"id": 701, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 691, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 689, "src": "3993:17:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 693, "indexExpression": {"hexValue": "30", "id": 692, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4011:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "3993:20:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "74727565", "id": 695, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "4035:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, {"baseExpression": {"id": 696, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 682, "src": "4041:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 698, "indexExpression": {"hexValue": "31", "id": 697, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4052:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4041:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 699, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 684, "src": "4056:9:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 694, "name": "_virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 745, "src": "4016:18:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (bool,uint256,uint256) view returns (uint256)"}}, "id": 700, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4016:50:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3993:73:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 702, "nodeType": "ExpressionStatement", "src": "3993:73:2"}, {"expression": {"id": 713, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 703, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 689, "src": "4076:17:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 705, "indexExpression": {"hexValue": "31", "id": 704, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4094:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "4076:20:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "66616c7365", "id": 707, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "4118:5:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, {"baseExpression": {"id": 708, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 682, "src": "4125:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 710, "indexExpression": {"hexValue": "30", "id": 709, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4136:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4125:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 711, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 684, "src": "4140:9:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 706, "name": "_virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 745, "src": "4099:18:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (bool,uint256,uint256) view returns (uint256)"}}, "id": 712, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4099:51:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4076:74:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 714, "nodeType": "ExpressionStatement", "src": "4076:74:2"}, {"expression": {"id": 715, "name": "virtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 689, "src": "4167:17:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "functionReturnParameters": 690, "id": 716, "nodeType": "Return", "src": "4160:24:2"}]}, "id": 718, "implemented": true, "kind": "function", "modifiers": [], "name": "_getVirtualParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 685, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 682, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 718, "src": "3830:28:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 679, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3830:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 681, "length": {"hexValue": "32", "id": 680, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3838:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "3830:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}, {"constant": false, "id": 684, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 718, "src": "3860:17:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 683, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3860:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3829:49:2"}, "returnParameters": {"id": 690, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 689, "mutability": "mutable", "name": "virtualParameters", "nodeType": "VariableDeclaration", "scope": 718, "src": "3942:35:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 686, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3942:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 688, "length": {"hexValue": "32", "id": 687, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3950:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "3942:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "src": "3941:37:2"}, "scope": 1978, "src": "3799:392:2", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"body": {"id": 744, "nodeType": "Block", "src": "4350:212:2", "statements": [{"expression": {"condition": {"id": 729, "name": "parameter0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 720, "src": "4379:10:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"components": [{"arguments": [{"id": 738, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 724, "src": "4533:9:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 739, "name": "sqrtParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 722, "src": "4544:9:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 736, "name": "Gyro2CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 475, "src": "4492:12:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPMath_$475_$", "typeString": "type(library Gyro2CLPMath)"}}, "id": 737, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateVirtualParameter1", "nodeType": "MemberAccess", "referencedDeclaration": 474, "src": "4492:40:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 740, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4492:62:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 741, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4491:64:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 742, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "4379:176:2", "trueExpression": {"components": [{"arguments": [{"id": 732, "name": "invariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 724, "src": "4450:9:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 733, "name": "sqrtParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 722, "src": "4461:9:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 730, "name": "Gyro2CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 475, "src": "4409:12:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPMath_$475_$", "typeString": "type(library Gyro2CLPMath)"}}, "id": 731, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateVirtualParameter0", "nodeType": "MemberAccess", "referencedDeclaration": 458, "src": "4409:40:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 734, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4409:62:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 735, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4408:64:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 728, "id": 743, "nodeType": "Return", "src": "4360:195:2"}]}, "id": 745, "implemented": true, "kind": "function", "modifiers": [], "name": "_virtualParameters", "nodeType": "FunctionDefinition", "parameters": {"id": 725, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 720, "mutability": "mutable", "name": "parameter0", "nodeType": "VariableDeclaration", "scope": 745, "src": "4234:15:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 719, "name": "bool", "nodeType": "ElementaryTypeName", "src": "4234:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 722, "mutability": "mutable", "name": "sqrtParam", "nodeType": "VariableDeclaration", "scope": 745, "src": "4259:17:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 721, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4259:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 724, "mutability": "mutable", "name": "invariant", "nodeType": "VariableDeclaration", "scope": 745, "src": "4286:17:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 723, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4286:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4224:85:2"}, "returnParameters": {"id": 728, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 727, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 745, "src": "4341:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 726, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4341:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4340:9:2"}, "scope": 1978, "src": "4197:365:2", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"baseFunctions": [12814], "body": {"id": 788, "nodeType": "Block", "src": "4703:390:2", "statements": [{"assignments": [null, 756, null], "declarations": [null, {"constant": false, "id": 756, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 788, "src": "4716:25:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 754, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4716:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 755, "nodeType": "ArrayTypeName", "src": "4716:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, null], "id": 763, "initialValue": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 760, "name": "getPoolId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12519, "src": "4772:9:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$", "typeString": "function () view returns (bytes32)"}}, "id": 761, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4772:11:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 757, "name": "getVault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20475, "src": "4747:8:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IVault_$15861_$", "typeString": "function () view returns (contract IVault)"}}, "id": 758, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4747:10:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IVault_$15861", "typeString": "contract IVault"}}, "id": 759, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getPoolTokens", "nodeType": "MemberAccess", "referencedDeclaration": 15617, "src": "4747:24:2", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_array$_t_contract$_IERC20_$20356_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$", "typeString": "function (bytes32) view external returns (contract IERC20[] memory,uint256[] memory,uint256)"}}, "id": 762, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4747:37:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_array$_t_contract$_IERC20_$20356_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$", "typeString": "tuple(contract IERC20[] memory,uint256[] memory,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "4713:71:2"}, {"assignments": [769], "declarations": [{"constant": false, "id": 769, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 788, "src": "4794:28:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 767, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4794:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 768, "length": {"hexValue": "32", "id": 766, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4802:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "4794:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 772, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 770, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [623, 636], "referencedDeclaration": 623, "src": "4825:15:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function () view returns (uint256[2] memory)"}}, "id": 771, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4825:17:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "4794:48:2"}, {"expression": {"arguments": [{"id": 774, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 756, "src": "4987:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}], "id": 773, "name": "_upscaleArray", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14391, "src": "4973:13:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$", "typeString": "function (uint256[] memory) view"}}, "id": 775, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4973:23:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 776, "nodeType": "ExpressionStatement", "src": "4973:23:2"}, {"expression": {"arguments": [{"id": 779, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 756, "src": "5047:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"baseExpression": {"id": 780, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 769, "src": "5057:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 782, "indexExpression": {"hexValue": "30", "id": 781, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5068:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5057:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 783, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 769, "src": "5072:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 785, "indexExpression": {"hexValue": "31", "id": 784, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5083:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5072:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 777, "name": "Gyro2CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 475, "src": "5014:12:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPMath_$475_$", "typeString": "type(library Gyro2CLPMath)"}}, "id": 778, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 62, "src": "5014:32:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256)"}}, "id": 786, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5014:72:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 751, "id": 787, "nodeType": "Return", "src": "5007:79:2"}]}, "documentation": {"id": 746, "nodeType": "StructuredDocumentation", "src": "4568:67:2", "text": " @dev Returns the current value of the invariant."}, "functionSelector": "c0ff1a15", "id": 789, "implemented": true, "kind": "function", "modifiers": [], "name": "getInvariant", "nodeType": "FunctionDefinition", "overrides": {"id": 748, "nodeType": "OverrideSpecifier", "overrides": [], "src": "4676:8:2"}, "parameters": {"id": 747, "nodeType": "ParameterList", "parameters": [], "src": "4661:2:2"}, "returnParameters": {"id": 751, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 750, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 789, "src": "4694:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 749, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4694:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4693:9:2"}, "scope": 1978, "src": "4640:453:2", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"baseFunctions": [12974], "body": {"id": 955, "nodeType": "Block", "src": "5323:2506:2", "statements": [{"assignments": [808], "declarations": [{"constant": false, "id": 808, "mutability": "mutable", "name": "tokenInIsToken0", "nodeType": "VariableDeclaration", "scope": 955, "src": "5333:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 807, "name": "bool", "nodeType": "ElementaryTypeName", "src": "5333:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "id": 813, "initialValue": {"commonType": {"typeIdentifier": "t_contract$_IERC20_$20356", "typeString": "contract IERC20"}, "id": 812, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 809, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 791, "src": "5356:7:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$28888_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 810, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenIn", "nodeType": "MemberAccess", "referencedDeclaration": 28873, "src": "5356:15:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$20356", "typeString": "contract IERC20"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 811, "name": "_token0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12312, "src": "5375:7:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$20356", "typeString": "contract IERC20"}}, "src": "5356:26:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "VariableDeclarationStatement", "src": "5333:49:2"}, {"assignments": [815], "declarations": [{"constant": false, "id": 815, "mutability": "mutable", "name": "scalingFactorTokenIn", "nodeType": "VariableDeclaration", "scope": 955, "src": "5393:28:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 814, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5393:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 819, "initialValue": {"arguments": [{"id": 817, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 808, "src": "5439:15:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 816, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14338, "src": "5424:14:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 818, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5424:31:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "5393:62:2"}, {"assignments": [821], "declarations": [{"constant": false, "id": 821, "mutability": "mutable", "name": "scalingFactorTokenOut", "nodeType": "VariableDeclaration", "scope": 955, "src": "5465:29:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 820, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5465:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 826, "initialValue": {"arguments": [{"id": 824, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "5512:16:2", "subExpression": {"id": 823, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 808, "src": "5513:15:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 822, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14338, "src": "5497:14:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 825, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5497:32:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "5465:64:2"}, {"expression": {"id": 832, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 827, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 793, "src": "5583:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 829, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 793, "src": "5609:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 830, "name": "scalingFactorTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 815, "src": "5625:20:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 828, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14355, "src": "5600:8:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 831, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5600:46:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5583:63:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 833, "nodeType": "ExpressionStatement", "src": "5583:63:2"}, {"expression": {"id": 839, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 834, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 795, "src": "5656:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 836, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 795, "src": "5683:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 837, "name": "scalingFactorTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 821, "src": "5700:21:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 835, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14355, "src": "5674:8:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 838, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5674:48:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5656:66:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 840, "nodeType": "ExpressionStatement", "src": "5656:66:2"}, {"assignments": [842, 844, 846], "declarations": [{"constant": false, "id": 842, "mutability": "mutable", "name": "currentInvariant", "nodeType": "VariableDeclaration", "scope": 955, "src": "5812:24:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 841, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5812:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 844, "mutability": "mutable", "name": "virtualParamIn", "nodeType": "VariableDeclaration", "scope": 955, "src": "5838:22:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 843, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5838:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 846, "mutability": "mutable", "name": "virtualParamOut", "nodeType": "VariableDeclaration", "scope": 955, "src": "5862:23:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 845, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5862:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 852, "initialValue": {"arguments": [{"id": 848, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 793, "src": "5926:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 849, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 795, "src": "5954:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 850, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 808, "src": "5983:15:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 847, "name": "_calculateCurrentValues", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1159, "src": "5889:23:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256,bool) view returns (uint256,uint256,uint256)"}}, "id": 851, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5889:119:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "5811:197:2"}, {"expression": {"arguments": [{"expression": {"id": 854, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 791, "src": "6104:7:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$28888_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 855, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "lastChangeBlock", "nodeType": "MemberAccess", "referencedDeclaration": 28881, "src": "6104:23:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"condition": {"id": 856, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 808, "src": "6141:15:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 858, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 795, "src": "6176:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 859, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "6141:50:2", "trueExpression": {"id": 857, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 793, "src": "6159:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"condition": {"id": 860, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 808, "src": "6205:15:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 862, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 793, "src": "6241:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 863, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "6205:50:2", "trueExpression": {"id": 861, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 795, "src": "6223:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"condition": {"id": 864, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 808, "src": "6269:15:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 866, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 846, "src": "6304:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 867, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "6269:50:2", "trueExpression": {"id": 865, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 844, "src": "6287:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"condition": {"id": 868, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 808, "src": "6333:15:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 870, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 844, "src": "6369:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 871, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "6333:50:2", "trueExpression": {"id": 869, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 846, "src": "6351:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 853, "name": "_updateOracle", "nodeType": "Identifier", "overloadedDeclarations": [1954, 1966], "referencedDeclaration": 1954, "src": "6077:13:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256,uint256,uint256,uint256)"}}, "id": 872, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6077:316:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 873, "nodeType": "ExpressionStatement", "src": "6077:316:2"}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_SwapKind_$15685", "typeString": "enum IVault.SwapKind"}, "id": 879, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 874, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 791, "src": "6408:7:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$28888_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 875, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kind", "nodeType": "MemberAccess", "referencedDeclaration": 28871, "src": "6408:12:2", "typeDescriptions": {"typeIdentifier": "t_enum$_SwapKind_$15685", "typeString": "enum IVault.SwapKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 876, "name": "IVault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15861, "src": "6424:6:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IVault_$15861_$", "typeString": "type(contract IVault)"}}, "id": 877, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "SwapKind", "nodeType": "MemberAccess", "referencedDeclaration": 15685, "src": "6424:15:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_SwapKind_$15685_$", "typeString": "type(enum IVault.SwapKind)"}}, "id": 878, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "GIVEN_IN", "nodeType": "MemberAccess", "src": "6424:24:2", "typeDescriptions": {"typeIdentifier": "t_enum$_SwapKind_$15685", "typeString": "enum IVault.SwapKind"}}, "src": "6408:40:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 953, "nodeType": "Block", "src": "7192:631:2", "statements": [{"expression": {"id": 926, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 918, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 791, "src": "7206:7:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$28888_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 920, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 28877, "src": "7206:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 922, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 791, "src": "7232:7:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$28888_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 923, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 28877, "src": "7232:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 924, "name": "scalingFactorTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 821, "src": "7248:21:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 921, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14355, "src": "7223:8:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 925, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7223:47:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7206:64:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 927, "nodeType": "ExpressionStatement", "src": "7206:64:2"}, {"assignments": [929], "declarations": [{"constant": false, "id": 929, "mutability": "mutable", "name": "amountIn", "nodeType": "VariableDeclaration", "scope": 953, "src": "7285:16:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 928, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7285:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 937, "initialValue": {"arguments": [{"id": 931, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 791, "src": "7320:7:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$28888_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, {"id": 932, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 793, "src": "7329:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 933, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 795, "src": "7345:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 934, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 844, "src": "7362:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 935, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 846, "src": "7378:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_SwapRequest_$28888_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 930, "name": "_onSwapGivenOut", "nodeType": "Identifier", "overloadedDeclarations": [1010], "referencedDeclaration": 1010, "src": "7304:15:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_SwapRequest_$28888_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (struct IPoolSwapStructs.SwapRequest memory,uint256,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 936, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7304:90:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "7285:109:2"}, {"expression": {"id": 943, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 938, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 929, "src": "7479:8:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 940, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 929, "src": "7503:8:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 941, "name": "scalingFactorTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 815, "src": "7513:20:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 939, "name": "_downscaleUp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14461, "src": "7490:12:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 942, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7490:44:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7479:55:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 944, "nodeType": "ExpressionStatement", "src": "7479:55:2"}, {"expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 947, "name": "getSwapFeePercentage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12585, "src": "7776:20:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 948, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7776:22:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 949, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "complement", "nodeType": "MemberAccess", "referencedDeclaration": 10761, "src": "7776:33:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256) pure returns (uint256)"}}, "id": 950, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7776:35:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 945, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 929, "src": "7761:8:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 946, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "divUp", "nodeType": "MemberAccess", "referencedDeclaration": 10467, "src": "7761:14:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 951, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7761:51:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 806, "id": 952, "nodeType": "Return", "src": "7754:58:2"}]}, "id": 954, "nodeType": "IfStatement", "src": "6404:1419:2", "trueBody": {"id": 917, "nodeType": "Block", "src": "6450:736:2", "statements": [{"assignments": [881], "declarations": [{"constant": false, "id": 881, "mutability": "mutable", "name": "feeAmount", "nodeType": "VariableDeclaration", "scope": 917, "src": "6667:17:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 880, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6667:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 888, "initialValue": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 885, "name": "getSwapFeePercentage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12585, "src": "6708:20:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 886, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6708:22:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"id": 882, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 791, "src": "6687:7:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$28888_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 883, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 28877, "src": "6687:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 884, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mulUp", "nodeType": "MemberAccess", "referencedDeclaration": 10290, "src": "6687:20:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 887, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6687:44:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6667:64:2"}, {"expression": {"id": 900, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 889, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 791, "src": "6831:7:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$28888_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 891, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 28877, "src": "6831:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [{"id": 896, "name": "feeAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 881, "src": "6876:9:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"id": 893, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 791, "src": "6857:7:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$28888_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 894, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 28877, "src": "6857:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 895, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 10181, "src": "6857:18:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 897, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6857:29:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 898, "name": "scalingFactorTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 815, "src": "6888:20:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 892, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14355, "src": "6848:8:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 899, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6848:61:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6831:78:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 901, "nodeType": "ExpressionStatement", "src": "6831:78:2"}, {"assignments": [903], "declarations": [{"constant": false, "id": 903, "mutability": "mutable", "name": "amountOut", "nodeType": "VariableDeclaration", "scope": 917, "src": "6924:17:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 902, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6924:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 911, "initialValue": {"arguments": [{"id": 905, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 791, "src": "6959:7:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$28888_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, {"id": 906, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 793, "src": "6968:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 907, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 795, "src": "6984:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 908, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 844, "src": "7001:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 909, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 846, "src": "7017:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_SwapRequest_$28888_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 904, "name": "_onSwapGivenIn", "nodeType": "Identifier", "overloadedDeclarations": [983], "referencedDeclaration": 983, "src": "6944:14:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_SwapRequest_$28888_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (struct IPoolSwapStructs.SwapRequest memory,uint256,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 910, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6944:89:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6924:109:2"}, {"expression": {"arguments": [{"id": 913, "name": "amountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 903, "src": "7142:9:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 914, "name": "scalingFactorTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 821, "src": "7153:21:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 912, "name": "_downscaleDown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14408, "src": "7127:14:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 915, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7127:48:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 806, "id": 916, "nodeType": "Return", "src": "7120:55:2"}]}}]}, "functionSelector": "9d2c110c", "id": 956, "implemented": true, "kind": "function", "modifiers": [{"id": 799, "modifierName": {"id": 798, "name": "whenNotPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23622, "src": "5265:13:2", "typeDescriptions": {"typeIdentifier": "t_modifier$__$", "typeString": "modifier ()"}}, "nodeType": "ModifierInvocation", "src": "5265:13:2"}, {"arguments": [{"expression": {"id": 801, "name": "request", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 791, "src": "5289:7:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$28888_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 802, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "poolId", "nodeType": "MemberAccess", "referencedDeclaration": 28879, "src": "5289:14:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "id": 803, "modifierName": {"id": 800, "name": "onlyVault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12363, "src": "5279:9:2", "typeDescriptions": {"typeIdentifier": "t_modifier$_t_bytes32_$", "typeString": "modifier (bytes32)"}}, "nodeType": "ModifierInvocation", "src": "5279:25:2"}], "name": "onSwap", "nodeType": "FunctionDefinition", "overrides": {"id": 797, "nodeType": "OverrideSpecifier", "overrides": [], "src": "5256:8:2"}, "parameters": {"id": 796, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 791, "mutability": "mutable", "name": "request", "nodeType": "VariableDeclaration", "scope": 956, "src": "5143:26:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$28888_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 790, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 28888, "src": "5143:11:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$28888_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 793, "mutability": "mutable", "name": "balanceTokenIn", "nodeType": "VariableDeclaration", "scope": 956, "src": "5179:22:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 792, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5179:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 795, "mutability": "mutable", "name": "balanceTokenOut", "nodeType": "VariableDeclaration", "scope": 956, "src": "5211:23:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 794, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5211:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5133:107:2"}, "returnParameters": {"id": 806, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 805, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 956, "src": "5314:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 804, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5314:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5313:9:2"}, "scope": 1978, "src": "5118:2711:2", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"baseFunctions": [13000], "body": {"id": 982, "nodeType": "Block", "src": "8090:212:2", "statements": [{"expression": {"arguments": [{"id": 974, "name": "currentBalanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 960, "src": "8196:21:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 975, "name": "currentBalanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 962, "src": "8219:22:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 976, "name": "swapRequest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 958, "src": "8243:11:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$28888_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 977, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 28877, "src": "8243:18:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 978, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 964, "src": "8263:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 979, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 966, "src": "8279:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 972, "name": "Gyro2CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 475, "src": "8167:12:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPMath_$475_$", "typeString": "type(library Gyro2CLPMath)"}}, "id": 973, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcOutGivenIn", "nodeType": "MemberAccess", "referencedDeclaration": 355, "src": "8167:28:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 980, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8167:128:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 971, "id": 981, "nodeType": "Return", "src": "8160:135:2"}]}, "id": 983, "implemented": true, "kind": "function", "modifiers": [], "name": "_onSwapGivenIn", "nodeType": "FunctionDefinition", "overrides": {"id": 968, "nodeType": "OverrideSpecifier", "overrides": [], "src": "8063:8:2"}, "parameters": {"id": 967, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 958, "mutability": "mutable", "name": "swapRequest", "nodeType": "VariableDeclaration", "scope": 983, "src": "7868:30:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$28888_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 957, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 28888, "src": "7868:11:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$28888_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 960, "mutability": "mutable", "name": "currentBalanceTokenIn", "nodeType": "VariableDeclaration", "scope": 983, "src": "7908:29:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 959, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7908:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 962, "mutability": "mutable", "name": "currentBalanceTokenOut", "nodeType": "VariableDeclaration", "scope": 983, "src": "7947:30:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 961, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7947:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 964, "mutability": "mutable", "name": "virtualParamIn", "nodeType": "VariableDeclaration", "scope": 983, "src": "7987:22:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 963, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7987:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 966, "mutability": "mutable", "name": "virtualParamOut", "nodeType": "VariableDeclaration", "scope": 983, "src": "8019:23:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 965, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8019:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7858:190:2"}, "returnParameters": {"id": 971, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 970, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 983, "src": "8081:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 969, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8081:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "8080:9:2"}, "scope": 1978, "src": "7835:467:2", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"baseFunctions": [13026], "body": {"id": 1009, "nodeType": "Block", "src": "8564:212:2", "statements": [{"expression": {"arguments": [{"id": 1001, "name": "currentBalanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 987, "src": "8670:21:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1002, "name": "currentBalanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 989, "src": "8693:22:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 1003, "name": "swapRequest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 985, "src": "8717:11:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$28888_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest memory"}}, "id": 1004, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 28877, "src": "8717:18:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1005, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 991, "src": "8737:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1006, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 993, "src": "8753:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 999, "name": "Gyro2CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 475, "src": "8641:12:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPMath_$475_$", "typeString": "type(library Gyro2CLPMath)"}}, "id": 1000, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcInGivenOut", "nodeType": "MemberAccess", "referencedDeclaration": 442, "src": "8641:28:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 1007, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8641:128:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 998, "id": 1008, "nodeType": "Return", "src": "8634:135:2"}]}, "id": 1010, "implemented": true, "kind": "function", "modifiers": [], "name": "_onSwapGivenOut", "nodeType": "FunctionDefinition", "overrides": {"id": 995, "nodeType": "OverrideSpecifier", "overrides": [], "src": "8537:8:2"}, "parameters": {"id": 994, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 985, "mutability": "mutable", "name": "swapRequest", "nodeType": "VariableDeclaration", "scope": 1010, "src": "8342:30:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$28888_memory_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}, "typeName": {"id": 984, "name": "SwapRequest", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 28888, "src": "8342:11:2", "typeDescriptions": {"typeIdentifier": "t_struct$_SwapRequest_$28888_storage_ptr", "typeString": "struct IPoolSwapStructs.SwapRequest"}}, "visibility": "internal"}, {"constant": false, "id": 987, "mutability": "mutable", "name": "currentBalanceTokenIn", "nodeType": "VariableDeclaration", "scope": 1010, "src": "8382:29:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 986, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8382:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 989, "mutability": "mutable", "name": "currentBalanceTokenOut", "nodeType": "VariableDeclaration", "scope": 1010, "src": "8421:30:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 988, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8421:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 991, "mutability": "mutable", "name": "virtualParamIn", "nodeType": "VariableDeclaration", "scope": 1010, "src": "8461:22:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 990, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8461:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 993, "mutability": "mutable", "name": "virtualParamOut", "nodeType": "VariableDeclaration", "scope": 1010, "src": "8493:23:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 992, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8493:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "8332:190:2"}, "returnParameters": {"id": 998, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 997, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1010, "src": "8555:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 996, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8555:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "8554:9:2"}, "scope": 1978, "src": "8308:468:2", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 1058, "nodeType": "Block", "src": "9085:392:2", "statements": [{"assignments": [1026], "declarations": [{"constant": false, "id": 1026, "mutability": "mutable", "name": "scalingFactorTokenIn", "nodeType": "VariableDeclaration", "scope": 1058, "src": "9095:28:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1025, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9095:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1030, "initialValue": {"arguments": [{"id": 1028, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1016, "src": "9141:15:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 1027, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14338, "src": "9126:14:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 1029, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9126:31:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "9095:62:2"}, {"assignments": [1032], "declarations": [{"constant": false, "id": 1032, "mutability": "mutable", "name": "scalingFactorTokenOut", "nodeType": "VariableDeclaration", "scope": 1058, "src": "9167:29:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1031, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9167:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1037, "initialValue": {"arguments": [{"id": 1035, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "9214:16:2", "subExpression": {"id": 1034, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1016, "src": "9215:15:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 1033, "name": "_scalingFactor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14338, "src": "9199:14:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$", "typeString": "function (bool) view returns (uint256)"}}, "id": 1036, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9199:32:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "9167:64:2"}, {"expression": {"id": 1043, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1038, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1012, "src": "9241:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1040, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1012, "src": "9267:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1041, "name": "scalingFactorTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1026, "src": "9283:20:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1039, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14355, "src": "9258:8:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1042, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9258:46:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9241:63:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1044, "nodeType": "ExpressionStatement", "src": "9241:63:2"}, {"expression": {"id": 1050, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1045, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1014, "src": "9314:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1047, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1014, "src": "9341:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1048, "name": "scalingFactorTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1032, "src": "9358:21:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1046, "name": "_upscale", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14355, "src": "9332:8:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1049, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9332:48:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9314:66:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1051, "nodeType": "ExpressionStatement", "src": "9314:66:2"}, {"expression": {"arguments": [{"id": 1053, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1012, "src": "9421:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1054, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1014, "src": "9437:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1055, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1016, "src": "9454:15:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 1052, "name": "_calculateCurrentValues", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1159, "src": "9397:23:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256,bool) view returns (uint256,uint256,uint256)"}}, "id": 1056, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9397:73:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256,uint256)"}}, "functionReturnParameters": 1024, "id": 1057, "nodeType": "Return", "src": "9390:80:2"}]}, "functionSelector": "3c4dd5bb", "id": 1059, "implemented": true, "kind": "function", "modifiers": [], "name": "calculateCurrentValues", "nodeType": "FunctionDefinition", "parameters": {"id": 1017, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1012, "mutability": "mutable", "name": "balanceTokenIn", "nodeType": "VariableDeclaration", "scope": 1059, "src": "8823:22:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1011, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8823:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1014, "mutability": "mutable", "name": "balanceTokenOut", "nodeType": "VariableDeclaration", "scope": 1059, "src": "8855:23:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1013, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8855:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1016, "mutability": "mutable", "name": "tokenInIsToken0", "nodeType": "VariableDeclaration", "scope": 1059, "src": "8888:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1015, "name": "bool", "nodeType": "ElementaryTypeName", "src": "8888:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "8813:101:2"}, "returnParameters": {"id": 1024, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1019, "mutability": "mutable", "name": "currentInvariant", "nodeType": "VariableDeclaration", "scope": 1059, "src": "8973:24:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1018, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8973:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1021, "mutability": "mutable", "name": "virtualParamIn", "nodeType": "VariableDeclaration", "scope": 1059, "src": "9011:22:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1020, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9011:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1023, "mutability": "mutable", "name": "virtualParamOut", "nodeType": "VariableDeclaration", "scope": 1059, "src": "9047:23:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1022, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9047:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "8959:121:2"}, "scope": 1978, "src": "8782:695:2", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 1158, "nodeType": "Block", "src": "9789:706:2", "statements": [{"assignments": [1078], "declarations": [{"constant": false, "id": 1078, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 1158, "src": "9882:25:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1076, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9882:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1077, "nodeType": "ArrayTypeName", "src": "9882:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 1084, "initialValue": {"arguments": [{"hexValue": "32", "id": 1082, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9924:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 1081, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "9910:13:2", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 1079, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9914:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1080, "nodeType": "ArrayTypeName", "src": "9914:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 1083, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9910:16:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "9882:44:2"}, {"expression": {"id": 1092, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 1085, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1078, "src": "9936:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1087, "indexExpression": {"hexValue": "30", "id": 1086, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9945:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "9936:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"id": 1088, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1065, "src": "9950:15:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 1090, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1063, "src": "9985:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1091, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "9950:50:2", "trueExpression": {"id": 1089, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1061, "src": "9968:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9936:64:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1093, "nodeType": "ExpressionStatement", "src": "9936:64:2"}, {"expression": {"id": 1101, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 1094, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1078, "src": "10010:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1096, "indexExpression": {"hexValue": "31", "id": 1095, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10019:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "10010:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"id": 1097, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1065, "src": "10024:15:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 1099, "name": "balanceTokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1061, "src": "10060:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1100, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "10024:50:2", "trueExpression": {"id": 1098, "name": "balanceTokenOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1063, "src": "10042:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10010:64:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1102, "nodeType": "ExpressionStatement", "src": "10010:64:2"}, {"assignments": [1108], "declarations": [{"constant": false, "id": 1108, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 1158, "src": "10085:28:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 1106, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10085:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1107, "length": {"hexValue": "32", "id": 1105, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10093:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "10085:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 1111, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 1109, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [623, 636], "referencedDeclaration": 623, "src": "10116:15:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function () view returns (uint256[2] memory)"}}, "id": 1110, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10116:17:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "10085:48:2"}, {"expression": {"id": 1123, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1112, "name": "currentInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1068, "src": "10144:16:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1115, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1078, "src": "10196:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"baseExpression": {"id": 1116, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1108, "src": "10206:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1118, "indexExpression": {"hexValue": "30", "id": 1117, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10217:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10206:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1119, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1108, "src": "10221:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1121, "indexExpression": {"hexValue": "31", "id": 1120, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10232:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10221:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1113, "name": "Gyro2CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 475, "src": "10163:12:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPMath_$475_$", "typeString": "type(library Gyro2CLPMath)"}}, "id": 1114, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 62, "src": "10163:32:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256)"}}, "id": 1122, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10163:72:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10144:91:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1124, "nodeType": "ExpressionStatement", "src": "10144:91:2"}, {"assignments": [1130], "declarations": [{"constant": false, "id": 1130, "mutability": "mutable", "name": "virtualParam", "nodeType": "VariableDeclaration", "scope": 1158, "src": "10246:30:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 1128, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10246:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1129, "length": {"hexValue": "32", "id": 1127, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10254:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "10246:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 1135, "initialValue": {"arguments": [{"id": 1132, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1108, "src": "10301:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, {"id": 1133, "name": "currentInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1068, "src": "10313:16:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1131, "name": "_getVirtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 718, "src": "10279:21:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function (uint256[2] memory,uint256) view returns (uint256[2] memory)"}}, "id": 1134, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10279:51:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "10246:84:2"}, {"expression": {"id": 1145, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1136, "name": "virtualParamIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1070, "src": "10341:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"id": 1137, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1065, "src": "10358:15:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"baseExpression": {"id": 1141, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1130, "src": "10394:12:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1143, "indexExpression": {"hexValue": "31", "id": 1142, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10407:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10394:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1144, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "10358:51:2", "trueExpression": {"baseExpression": {"id": 1138, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1130, "src": "10376:12:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1140, "indexExpression": {"hexValue": "30", "id": 1139, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10389:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10376:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10341:68:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1146, "nodeType": "ExpressionStatement", "src": "10341:68:2"}, {"expression": {"id": 1156, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1147, "name": "virtualParamOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1072, "src": "10419:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"id": 1148, "name": "tokenInIsToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1065, "src": "10437:15:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"baseExpression": {"id": 1152, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1130, "src": "10473:12:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1154, "indexExpression": {"hexValue": "30", "id": 1153, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10486:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10473:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1155, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "10437:51:2", "trueExpression": {"baseExpression": {"id": 1149, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1130, "src": "10455:12:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1151, "indexExpression": {"hexValue": "31", "id": 1150, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10468:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10455:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10419:69:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1157, "nodeType": "ExpressionStatement", "src": "10419:69:2"}]}, "id": 1159, "implemented": true, "kind": "function", "modifiers": [], "name": "_calculateCurrentValues", "nodeType": "FunctionDefinition", "parameters": {"id": 1066, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1061, "mutability": "mutable", "name": "balanceTokenIn", "nodeType": "VariableDeclaration", "scope": 1159, "src": "9525:22:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1060, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9525:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1063, "mutability": "mutable", "name": "balanceTokenOut", "nodeType": "VariableDeclaration", "scope": 1159, "src": "9557:23:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1062, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9557:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1065, "mutability": "mutable", "name": "tokenInIsToken0", "nodeType": "VariableDeclaration", "scope": 1159, "src": "9590:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1064, "name": "bool", "nodeType": "ElementaryTypeName", "src": "9590:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "9515:101:2"}, "returnParameters": {"id": 1073, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1068, "mutability": "mutable", "name": "currentInvariant", "nodeType": "VariableDeclaration", "scope": 1159, "src": "9677:24:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1067, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9677:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1070, "mutability": "mutable", "name": "virtualParamIn", "nodeType": "VariableDeclaration", "scope": 1159, "src": "9715:22:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1069, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9715:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1072, "mutability": "mutable", "name": "virtualParamOut", "nodeType": "VariableDeclaration", "scope": 1159, "src": "9751:23:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1071, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9751:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "9663:121:2"}, "scope": 1978, "src": "9483:1012:2", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [13247], "body": {"id": 1254, "nodeType": "Block", "src": "11541:848:2", "statements": [{"assignments": [1180], "declarations": [{"constant": false, "id": 1180, "mutability": "mutable", "name": "kind", "nodeType": "VariableDeclaration", "scope": 1254, "src": "11551:30:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$25123", "typeString": "enum BaseWeightedPool.JoinKind"}, "typeName": {"id": 1179, "name": "BaseWeightedPool.JoinKind", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 25123, "src": "11551:25:2", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$25123", "typeString": "enum BaseWeightedPool.JoinKind"}}, "visibility": "internal"}], "id": 1184, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1181, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1168, "src": "11584:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 1182, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "joinKind", "nodeType": "MemberAccess", "referencedDeclaration": 15029, "src": "11584:17:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_enum$_JoinKind_$25123_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (enum BaseWeightedPool.JoinKind)"}}, "id": 1183, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11584:19:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$25123", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "VariableDeclarationStatement", "src": "11551:52:2"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_JoinKind_$25123", "typeString": "enum BaseWeightedPool.JoinKind"}, "id": 1190, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1186, "name": "kind", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1180, "src": "11622:4:2", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$25123", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 1187, "name": "BaseWeightedPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 26324, "src": "11630:16:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BaseWeightedPool_$26324_$", "typeString": "type(contract BaseWeightedPool)"}}, "id": 1188, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "JoinKind", "nodeType": "MemberAccess", "referencedDeclaration": 25123, "src": "11630:25:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_JoinKind_$25123_$", "typeString": "type(enum BaseWeightedPool.JoinKind)"}}, "id": 1189, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "INIT", "nodeType": "MemberAccess", "src": "11630:30:2", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$25123", "typeString": "enum BaseWeightedPool.JoinKind"}}, "src": "11622:38:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 1191, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18980, "src": "11662:6:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$18980_$", "typeString": "type(library Errors)"}}, "id": 1192, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNINITIALIZED", "nodeType": "MemberAccess", "referencedDeclaration": 18649, "src": "11662:20:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1185, "name": "_require", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18575, "src": "11613:8:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$", "typeString": "function (bool,uint256) pure"}}, "id": 1193, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11613:70:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1194, "nodeType": "ExpressionStatement", "src": "11613:70:2"}, {"assignments": [1199], "declarations": [{"constant": false, "id": 1199, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 1254, "src": "11694:26:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1197, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11694:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1198, "nodeType": "ArrayTypeName", "src": "11694:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 1203, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1200, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1168, "src": "11723:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 1201, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "initialAmountsIn", "nodeType": "MemberAccess", "referencedDeclaration": 15068, "src": "11723:25:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (uint256[] memory)"}}, "id": 1202, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11723:27:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "11694:56:2"}, {"expression": {"arguments": [{"expression": {"id": 1207, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1199, "src": "11796:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1208, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "11796:16:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "32", "id": 1209, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11814:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "expression": {"id": 1204, "name": "InputHelpers", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11662, "src": "11760:12:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_InputHelpers_$11662_$", "typeString": "type(library InputHelpers)"}}, "id": 1206, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ensureInputLengthMatch", "nodeType": "MemberAccess", "referencedDeclaration": 11570, "src": "11760:35:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256) pure"}}, "id": 1210, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11760:56:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1211, "nodeType": "ExpressionStatement", "src": "11760:56:2"}, {"expression": {"arguments": [{"id": 1213, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1199, "src": "11840:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}], "id": 1212, "name": "_upscaleArray", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14391, "src": "11826:13:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$", "typeString": "function (uint256[] memory) view"}}, "id": 1214, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11826:24:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1215, "nodeType": "ExpressionStatement", "src": "11826:24:2"}, {"assignments": [1221], "declarations": [{"constant": false, "id": 1221, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 1254, "src": "11861:28:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 1219, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11861:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1220, "length": {"hexValue": "32", "id": 1218, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11869:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "11861:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 1224, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 1222, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [623, 636], "referencedDeclaration": 623, "src": "11892:15:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function () view returns (uint256[2] memory)"}}, "id": 1223, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11892:17:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "11861:48:2"}, {"assignments": [1226], "declarations": [{"constant": false, "id": 1226, "mutability": "mutable", "name": "invariantAfterJoin", "nodeType": "VariableDeclaration", "scope": 1254, "src": "11920:26:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1225, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11920:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1237, "initialValue": {"arguments": [{"id": 1229, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1199, "src": "11982:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"baseExpression": {"id": 1230, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1221, "src": "11993:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1232, "indexExpression": {"hexValue": "30", "id": 1231, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12004:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "11993:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1233, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1221, "src": "12008:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1235, "indexExpression": {"hexValue": "31", "id": 1234, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12019:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "12008:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1227, "name": "Gyro2CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 475, "src": "11949:12:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPMath_$475_$", "typeString": "type(library Gyro2CLPMath)"}}, "id": 1228, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 62, "src": "11949:32:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256)"}}, "id": 1236, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11949:73:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "11920:102:2"}, {"assignments": [1239], "declarations": [{"constant": false, "id": 1239, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 1254, "src": "12239:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1238, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12239:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1245, "initialValue": {"arguments": [{"id": 1242, "name": "invariantAfterJoin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1226, "src": "12271:18:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "32", "id": 1243, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12291:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "expression": {"id": 1240, "name": "Math", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11951, "src": "12262:4:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Math_$11951_$", "typeString": "type(library Math)"}}, "id": 1241, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mul", "nodeType": "MemberAccess", "referencedDeclaration": 11870, "src": "12262:8:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1244, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12262:31:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "12239:54:2"}, {"expression": {"id": 1248, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1246, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12308, "src": "12304:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 1247, "name": "invariantAfterJoin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1226, "src": "12321:18:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "12304:35:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1249, "nodeType": "ExpressionStatement", "src": "12304:35:2"}, {"expression": {"components": [{"id": 1250, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1239, "src": "12358:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1251, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1199, "src": "12372:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1252, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "12357:25:2", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "functionReturnParameters": 1176, "id": 1253, "nodeType": "Return", "src": "12350:32:2"}]}, "documentation": {"id": 1160, "nodeType": "StructuredDocumentation", "src": "10566:801:2", "text": " @dev Called when the Pool is joined for the first time; that is, when the BPT total supply is zero.\n Returns the amount of BPT to mint, and the token amounts the Pool will receive in return.\n Minted BPT will be sent to `recipient`, except for _MINIMUM_BPT, which will be deducted from this amount and sent\n to the zero address instead. This will cause that BPT to remain forever locked there, preventing total BTP from\n ever dropping below that value, and ensuring `_onInitializePool` can only be called once in the entire Pool's\n lifetime.\n The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n be downscaled (rounding up) before being returned to the Vault."}, "id": 1255, "implemented": true, "kind": "function", "modifiers": [], "name": "_onInitializePool", "nodeType": "FunctionDefinition", "overrides": {"id": 1170, "nodeType": "OverrideSpecifier", "overrides": [], "src": "11496:8:2"}, "parameters": {"id": 1169, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1162, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1255, "src": "11408:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 1161, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "11408:7:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 1164, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1255, "src": "11425:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1163, "name": "address", "nodeType": "ElementaryTypeName", "src": "11425:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1166, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1255, "src": "11442:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1165, "name": "address", "nodeType": "ElementaryTypeName", "src": "11442:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1168, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 1255, "src": "11459:21:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1167, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "11459:5:2", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "11398:88:2"}, "returnParameters": {"id": 1176, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1172, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1255, "src": "11514:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1171, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11514:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1175, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1255, "src": "11523:16:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1173, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11523:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1174, "nodeType": "ArrayTypeName", "src": "11523:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "11513:27:2"}, "scope": 1978, "src": "11372:1017:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [13342], "body": {"id": 1379, "nodeType": "Block", "src": "14165:1710:2", "statements": [{"assignments": [1288], "declarations": [{"constant": false, "id": 1288, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 1379, "src": "14175:28:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 1286, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14175:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1287, "length": {"hexValue": "32", "id": 1285, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14183:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "14175:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 1291, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 1289, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [623, 636], "referencedDeclaration": 623, "src": "14206:15:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function () view returns (uint256[2] memory)"}}, "id": 1290, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14206:17:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "14175:48:2"}, {"assignments": [1293], "declarations": [{"constant": false, "id": 1293, "mutability": "mutable", "name": "invariantBeforeAction", "nodeType": "VariableDeclaration", "scope": 1379, "src": "14528:29:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1292, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14528:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1304, "initialValue": {"arguments": [{"id": 1296, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1265, "src": "14593:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"baseExpression": {"id": 1297, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1288, "src": "14603:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1299, "indexExpression": {"hexValue": "30", "id": 1298, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14614:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "14603:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1300, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1288, "src": "14618:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1302, "indexExpression": {"hexValue": "31", "id": 1301, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14629:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "14618:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1294, "name": "Gyro2CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 475, "src": "14560:12:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPMath_$475_$", "typeString": "type(library Gyro2CLPMath)"}}, "id": 1295, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 62, "src": "14560:32:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256)"}}, "id": 1303, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14560:72:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "14528:104:2"}, {"assignments": [1310], "declarations": [{"constant": false, "id": 1310, "mutability": "mutable", "name": "virtualParam", "nodeType": "VariableDeclaration", "scope": 1379, "src": "14642:30:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 1308, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14642:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1309, "length": {"hexValue": "32", "id": 1307, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14650:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "14642:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 1315, "initialValue": {"arguments": [{"id": 1312, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1288, "src": "14697:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, {"id": 1313, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1293, "src": "14709:21:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1311, "name": "_getVirtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 718, "src": "14675:21:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function (uint256[2] memory,uint256) view returns (uint256[2] memory)"}}, "id": 1314, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14675:56:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "14642:89:2"}, {"expression": {"arguments": [{"id": 1317, "name": "lastChangeBlock", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1267, "src": "14810:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1318, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1265, "src": "14827:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1320, "indexExpression": {"hexValue": "30", "id": 1319, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14836:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "14827:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1321, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1265, "src": "14840:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1323, "indexExpression": {"hexValue": "31", "id": 1322, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14849:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "14840:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1324, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1310, "src": "14853:12:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1326, "indexExpression": {"hexValue": "30", "id": 1325, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14866:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "14853:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1327, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1310, "src": "14870:12:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1329, "indexExpression": {"hexValue": "31", "id": 1328, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14883:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "14870:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1316, "name": "_updateOracle", "nodeType": "Identifier", "overloadedDeclarations": [1954, 1966], "referencedDeclaration": 1954, "src": "14796:13:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256,uint256,uint256,uint256)"}}, "id": 1330, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14796:90:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1331, "nodeType": "ExpressionStatement", "src": "14796:90:2"}, {"expression": {"arguments": [{"id": 1333, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1293, "src": "14913:21:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1332, "name": "_distributeFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1704, "src": "14897:15:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 1334, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14897:38:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1335, "nodeType": "ExpressionStatement", "src": "14897:38:2"}, {"assignments": [1337, 1340], "declarations": [{"constant": false, "id": 1337, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 1379, "src": "14947:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1336, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14947:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1340, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 1379, "src": "14969:26:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1338, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14969:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1339, "nodeType": "ArrayTypeName", "src": "14969:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 1345, "initialValue": {"arguments": [{"id": 1342, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1265, "src": "15007:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 1343, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1271, "src": "15017:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 1341, "name": "_doJoin", "nodeType": "Identifier", "overloadedDeclarations": [1424, 13411], "referencedDeclaration": 1424, "src": "14999:7:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 1344, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14999:27:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "14946:80:2"}, {"condition": {"expression": {"id": 1346, "name": "_capParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12098, "src": "15041:10:2", "typeDescriptions": {"typeIdentifier": "t_struct$_CapParams_$15237_storage", "typeString": "struct ICappedLiquidity.CapParams storage ref"}}, "id": 1347, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "capEnabled", "nodeType": "MemberAccess", "referencedDeclaration": 15232, "src": "15041:21:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1358, "nodeType": "IfStatement", "src": "15037:113:2", "trueBody": {"id": 1357, "nodeType": "Block", "src": "15064:86:2", "statements": [{"expression": {"arguments": [{"id": 1349, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1337, "src": "15089:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"id": 1351, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1262, "src": "15113:9:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 1350, "name": "balanceOf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23835, "src": "15103:9:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view returns (uint256)"}}, "id": 1352, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15103:20:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 1353, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23821, "src": "15125:11:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1354, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15125:13:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1348, "name": "_ensureCap", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12257, "src": "15078:10:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256,uint256) view"}}, "id": 1355, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15078:61:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1356, "nodeType": "ExpressionStatement", "src": "15078:61:2"}]}}, {"expression": {"id": 1368, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1359, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12308, "src": "15583:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1362, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1293, "src": "15638:21:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1363, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1337, "src": "15661:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 1364, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23821, "src": "15675:11:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1365, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15675:13:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "74727565", "id": 1366, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "15690:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "expression": {"id": 1360, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11550, "src": "15600:12:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$11550_$", "typeString": "type(library GyroPoolMath)"}}, "id": 1361, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "liquidityInvariantUpdate", "nodeType": "MemberAccess", "referencedDeclaration": 11469, "src": "15600:37:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,bool) pure returns (uint256)"}}, "id": 1367, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15600:95:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "15583:112:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1369, "nodeType": "ExpressionStatement", "src": "15583:112:2"}, {"expression": {"components": [{"id": 1370, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1337, "src": "15826:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1371, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1340, "src": "15840:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"arguments": [{"hexValue": "32", "id": 1375, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15865:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 1374, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "15851:13:2", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 1372, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15855:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1373, "nodeType": "ArrayTypeName", "src": "15855:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 1376, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15851:16:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1377, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "15825:43:2", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory,uint256[] memory)"}}, "functionReturnParameters": 1282, "id": 1378, "nodeType": "Return", "src": "15818:50:2"}]}, "documentation": {"id": 1256, "nodeType": "StructuredDocumentation", "src": "12395:1386:2", "text": " @dev Called whenever the Pool is joined after the first initialization join (see `_onInitializePool`).\n Returns the amount of BPT to mint, the token amounts that the Pool will receive in return, and the number of\n tokens to pay in protocol swap fees.\n Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n Minted BPT will be sent to `recipient`.\n The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n be downscaled (rounding up) before being returned to the Vault.\n Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onJoinPool`). These\n amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way\n Responsibility for updating the oracle has been moved from `onJoinPool()` (without the underscore) to this function. That is because both this function and `_updateOracle()` need access to the invariant and this way we can share the computation."}, "id": 1380, "implemented": true, "kind": "function", "modifiers": [], "name": "_onJoinPool", "nodeType": "FunctionDefinition", "overrides": {"id": 1273, "nodeType": "OverrideSpecifier", "overrides": [], "src": "14044:8:2"}, "parameters": {"id": 1272, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1258, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1380, "src": "13816:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 1257, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "13816:7:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 1260, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1380, "src": "13833:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1259, "name": "address", "nodeType": "ElementaryTypeName", "src": "13833:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1262, "mutability": "mutable", "name": "recipient", "nodeType": "VariableDeclaration", "scope": 1380, "src": "13850:17:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1261, "name": "address", "nodeType": "ElementaryTypeName", "src": "13850:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1265, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 1380, "src": "13877:25:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1263, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13877:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1264, "nodeType": "ArrayTypeName", "src": "13877:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1267, "mutability": "mutable", "name": "lastChangeBlock", "nodeType": "VariableDeclaration", "scope": 1380, "src": "13912:23:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1266, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13912:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1269, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1380, "src": "13945:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1268, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13945:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1271, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 1380, "src": "13991:21:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1270, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "13991:5:2", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "13806:212:2"}, "returnParameters": {"id": 1282, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1275, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1380, "src": "14083:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1274, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14083:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1278, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1380, "src": "14104:16:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1276, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14104:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1277, "nodeType": "ArrayTypeName", "src": "14104:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1281, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1380, "src": "14134:16:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1279, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14134:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1280, "nodeType": "ArrayTypeName", "src": "14134:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "14069:91:2"}, "scope": 1978, "src": "13786:2089:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 1423, "nodeType": "Block", "src": "16021:441:2", "statements": [{"assignments": [1396], "declarations": [{"constant": false, "id": 1396, "mutability": "mutable", "name": "kind", "nodeType": "VariableDeclaration", "scope": 1423, "src": "16031:30:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$25123", "typeString": "enum BaseWeightedPool.JoinKind"}, "typeName": {"id": 1395, "name": "BaseWeightedPool.JoinKind", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 25123, "src": "16031:25:2", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$25123", "typeString": "enum BaseWeightedPool.JoinKind"}}, "visibility": "internal"}], "id": 1400, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1397, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1385, "src": "16064:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 1398, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "joinKind", "nodeType": "MemberAccess", "referencedDeclaration": 15029, "src": "16064:17:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_enum$_JoinKind_$25123_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (enum BaseWeightedPool.JoinKind)"}}, "id": 1399, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16064:19:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$25123", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "VariableDeclarationStatement", "src": "16031:52:2"}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_JoinKind_$25123", "typeString": "enum BaseWeightedPool.JoinKind"}, "id": 1405, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1401, "name": "kind", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1396, "src": "16220:4:2", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$25123", "typeString": "enum BaseWeightedPool.JoinKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 1402, "name": "BaseWeightedPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 26324, "src": "16228:16:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BaseWeightedPool_$26324_$", "typeString": "type(contract BaseWeightedPool)"}}, "id": 1403, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "JoinKind", "nodeType": "MemberAccess", "referencedDeclaration": 25123, "src": "16228:25:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_JoinKind_$25123_$", "typeString": "type(enum BaseWeightedPool.JoinKind)"}}, "id": 1404, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "ALL_TOKENS_IN_FOR_EXACT_BPT_OUT", "nodeType": "MemberAccess", "src": "16228:57:2", "typeDescriptions": {"typeIdentifier": "t_enum$_JoinKind_$25123", "typeString": "enum BaseWeightedPool.JoinKind"}}, "src": "16220:65:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 1421, "nodeType": "Block", "src": "16396:60:2", "statements": [{"expression": {"arguments": [{"expression": {"id": 1417, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18980, "src": "16418:6:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$18980_$", "typeString": "type(library Errors)"}}, "id": 1418, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNHANDLED_JOIN_KIND", "nodeType": "MemberAccess", "referencedDeclaration": 18694, "src": "16418:26:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1416, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18583, "src": "16410:7:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$", "typeString": "function (uint256) pure"}}, "id": 1419, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16410:35:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1420, "nodeType": "ExpressionStatement", "src": "16410:35:2"}]}, "id": 1422, "nodeType": "IfStatement", "src": "16216:240:2", "trueBody": {"id": 1415, "nodeType": "Block", "src": "16287:103:2", "statements": [{"expression": {"id": 1413, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 1406, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1388, "src": "16302:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1407, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1391, "src": "16316:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1408, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "16301:25:2", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1410, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1383, "src": "16360:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 1411, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1385, "src": "16370:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 1409, "name": "_joinAllTokensInForExactBPTOut", "nodeType": "Identifier", "overloadedDeclarations": [1462], "referencedDeclaration": 1462, "src": "16329:30:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 1412, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16329:50:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "16301:78:2", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1414, "nodeType": "ExpressionStatement", "src": "16301:78:2"}]}}]}, "id": 1424, "implemented": true, "kind": "function", "modifiers": [], "name": "_doJoin", "nodeType": "FunctionDefinition", "parameters": {"id": 1386, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1383, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 1424, "src": "15898:25:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1381, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15898:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1382, "nodeType": "ArrayTypeName", "src": "15898:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1385, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 1424, "src": "15925:21:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1384, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "15925:5:2", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "15897:50:2"}, "returnParameters": {"id": 1392, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1388, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 1424, "src": "15971:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1387, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15971:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1391, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 1424, "src": "15993:26:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1389, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15993:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1390, "nodeType": "ArrayTypeName", "src": "15993:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "15970:50:2"}, "scope": 1978, "src": "15881:581:2", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [13581], "body": {"id": 1461, "nodeType": "Block", "src": "16653:343:2", "statements": [{"assignments": [1439], "declarations": [{"constant": false, "id": 1439, "mutability": "mutable", "name": "bptAmountOut", "nodeType": "VariableDeclaration", "scope": 1461, "src": "16663:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1438, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16663:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1443, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1440, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1429, "src": "16686:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 1441, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "allTokensInForExactBptOut", "nodeType": "MemberAccess", "referencedDeclaration": 15143, "src": "16686:34:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (uint256)"}}, "id": 1442, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16686:36:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "16663:59:2"}, {"assignments": [1448], "declarations": [{"constant": false, "id": 1448, "mutability": "mutable", "name": "amountsIn", "nodeType": "VariableDeclaration", "scope": 1461, "src": "16833:26:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1446, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16833:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1447, "nodeType": "ArrayTypeName", "src": "16833:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 1456, "initialValue": {"arguments": [{"id": 1451, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1427, "src": "16908:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 1452, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1439, "src": "16918:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 1453, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23821, "src": "16932:11:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1454, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16932:13:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1449, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11550, "src": "16862:12:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$11550_$", "typeString": "type(library GyroPoolMath)"}}, "id": 1450, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcAllTokensInGivenExactBptOut", "nodeType": "MemberAccess", "referencedDeclaration": 10849, "src": "16862:45:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256[] memory)"}}, "id": 1455, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16862:84:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "16833:113:2"}, {"expression": {"components": [{"id": 1457, "name": "bptAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1439, "src": "16965:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1458, "name": "amountsIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1448, "src": "16979:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1459, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "16964:25:2", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "functionReturnParameters": 1437, "id": 1460, "nodeType": "Return", "src": "16957:32:2"}]}, "id": 1462, "implemented": true, "kind": "function", "modifiers": [], "name": "_joinAllTokensInForExactBPTOut", "nodeType": "FunctionDefinition", "overrides": {"id": 1431, "nodeType": "OverrideSpecifier", "overrides": [], "src": "16596:8:2"}, "parameters": {"id": 1430, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1427, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 1462, "src": "16508:25:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1425, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16508:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1426, "nodeType": "ArrayTypeName", "src": "16508:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1429, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 1462, "src": "16535:21:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1428, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "16535:5:2", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "16507:50:2"}, "returnParameters": {"id": 1437, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1433, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1462, "src": "16622:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1432, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16622:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1436, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1462, "src": "16631:16:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1434, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16631:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1435, "nodeType": "ArrayTypeName", "src": "16631:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "16621:27:2"}, "scope": 1978, "src": "16468:528:2", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [13770], "body": {"id": 1594, "nodeType": "Block", "src": "18476:2678:2", "statements": [{"assignments": [1495], "declarations": [{"constant": false, "id": 1495, "mutability": "mutable", "name": "sqrtParams", "nodeType": "VariableDeclaration", "scope": 1594, "src": "18641:28:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 1493, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18641:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1494, "length": {"hexValue": "32", "id": 1492, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "18649:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "18641:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 1498, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 1496, "name": "_sqrtParameters", "nodeType": "Identifier", "overloadedDeclarations": [623, 636], "referencedDeclaration": 623, "src": "18672:15:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function () view returns (uint256[2] memory)"}}, "id": 1497, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18672:17:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "18641:48:2"}, {"condition": {"arguments": [], "expression": {"argumentTypes": [], "id": 1499, "name": "_isNotPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23717, "src": "18896:12:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$", "typeString": "function () view returns (bool)"}}, "id": 1500, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18896:14:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 1583, "nodeType": "Block", "src": "20316:659:2", "statements": [{"expression": {"id": 1573, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 1566, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1482, "src": "20531:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1567, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1485, "src": "20544:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1568, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "20530:25:2", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1570, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1472, "src": "20566:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 1571, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1478, "src": "20576:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 1569, "name": "_doExit", "nodeType": "Identifier", "overloadedDeclarations": [1639, 13839], "referencedDeclaration": 1639, "src": "20558:7:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 1572, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20558:27:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "20530:55:2", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1574, "nodeType": "ExpressionStatement", "src": "20530:55:2"}, {"expression": {"id": 1581, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1575, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12308, "src": "20930:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"arguments": [{"id": 1578, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "20952:7:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 1577, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20952:7:2", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}], "id": 1576, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "20947:4:2", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 1579, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20947:13:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint256", "typeString": "type(uint256)"}}, "id": 1580, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "20947:17:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "20930:34:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1582, "nodeType": "ExpressionStatement", "src": "20930:34:2"}]}, "id": 1584, "nodeType": "IfStatement", "src": "18892:2083:2", "trueBody": {"id": 1565, "nodeType": "Block", "src": "18912:1398:2", "statements": [{"assignments": [1502], "declarations": [{"constant": false, "id": 1502, "mutability": "mutable", "name": "invariantBeforeAction", "nodeType": "VariableDeclaration", "scope": 1565, "src": "19232:29:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1501, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19232:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1513, "initialValue": {"arguments": [{"id": 1505, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1472, "src": "19297:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"baseExpression": {"id": 1506, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1495, "src": "19307:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1508, "indexExpression": {"hexValue": "30", "id": 1507, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "19318:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "19307:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1509, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1495, "src": "19322:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1511, "indexExpression": {"hexValue": "31", "id": 1510, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "19333:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "19322:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1503, "name": "Gyro2CLPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 475, "src": "19264:12:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPMath_$475_$", "typeString": "type(library Gyro2CLPMath)"}}, "id": 1504, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calculateInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 62, "src": "19264:32:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256)"}}, "id": 1512, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19264:72:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "19232:104:2"}, {"assignments": [1519], "declarations": [{"constant": false, "id": 1519, "mutability": "mutable", "name": "virtualParam", "nodeType": "VariableDeclaration", "scope": 1565, "src": "19350:30:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 1517, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19350:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1518, "length": {"hexValue": "32", "id": 1516, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "19358:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "19350:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 1524, "initialValue": {"arguments": [{"id": 1521, "name": "sqrtParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1495, "src": "19405:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, {"id": 1522, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1502, "src": "19417:21:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1520, "name": "_getVirtualParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 718, "src": "19383:21:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$", "typeString": "function (uint256[2] memory,uint256) view returns (uint256[2] memory)"}}, "id": 1523, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19383:56:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "19350:89:2"}, {"expression": {"arguments": [{"id": 1526, "name": "lastChangeBlock", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1474, "src": "19530:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1527, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1472, "src": "19547:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1529, "indexExpression": {"hexValue": "30", "id": 1528, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "19556:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "19547:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1530, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1472, "src": "19560:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 1532, "indexExpression": {"hexValue": "31", "id": 1531, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "19569:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "19560:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1533, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1519, "src": "19573:12:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1535, "indexExpression": {"hexValue": "30", "id": 1534, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "19586:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "19573:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 1536, "name": "virtualParam", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1519, "src": "19590:12:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 1538, "indexExpression": {"hexValue": "31", "id": 1537, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "19603:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "19590:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1525, "name": "_updateOracle", "nodeType": "Identifier", "overloadedDeclarations": [1954, 1966], "referencedDeclaration": 1954, "src": "19516:13:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256,uint256,uint256,uint256)"}}, "id": 1539, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19516:90:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1540, "nodeType": "ExpressionStatement", "src": "19516:90:2"}, {"expression": {"arguments": [{"id": 1542, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1502, "src": "19637:21:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1541, "name": "_distributeFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1704, "src": "19621:15:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 1543, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19621:38:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1544, "nodeType": "ExpressionStatement", "src": "19621:38:2"}, {"expression": {"id": 1552, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 1545, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1482, "src": "19675:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1546, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1485, "src": "19688:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1547, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "19674:25:2", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1549, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1472, "src": "19710:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 1550, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1478, "src": "19720:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 1548, "name": "_doExit", "nodeType": "Identifier", "overloadedDeclarations": [1639, 13839], "referencedDeclaration": 1639, "src": "19702:7:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 1551, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19702:27:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "19674:55:2", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1553, "nodeType": "ExpressionStatement", "src": "19674:55:2"}, {"expression": {"id": 1563, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1554, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12308, "src": "20187:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1557, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1502, "src": "20242:21:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1558, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1482, "src": "20265:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 1559, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23821, "src": "20278:11:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1560, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20278:13:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "66616c7365", "id": 1561, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "20293:5:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "expression": {"id": 1555, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11550, "src": "20204:12:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$11550_$", "typeString": "type(library GyroPoolMath)"}}, "id": 1556, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "liquidityInvariantUpdate", "nodeType": "MemberAccess", "referencedDeclaration": 11469, "src": "20204:37:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,bool) pure returns (uint256)"}}, "id": 1562, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20204:95:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "20187:112:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1564, "nodeType": "ExpressionStatement", "src": "20187:112:2"}]}}, {"expression": {"components": [{"id": 1585, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1482, "src": "21105:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1586, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1485, "src": "21118:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"arguments": [{"hexValue": "32", "id": 1590, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "21144:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 1589, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "21130:13:2", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 1587, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21134:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1588, "nodeType": "ArrayTypeName", "src": "21134:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 1591, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21130:16:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1592, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "21104:43:2", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory,uint256[] memory)"}}, "functionReturnParameters": 1489, "id": 1593, "nodeType": "Return", "src": "21097:50:2"}]}, "documentation": {"id": 1463, "nodeType": "StructuredDocumentation", "src": "17002:1054:2", "text": " @dev Called whenever the Pool is exited.\n Returns the amount of BPT to burn, the token amounts for each Pool token that the Pool will grant in return, and\n the number of tokens to pay in protocol swap fees.\n Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n BPT will be burnt from `sender`.\n The Pool will grant tokens to `recipient`. These amounts are considered upscaled and will be downscaled\n (rounding down) before being returned to the Vault.\n Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onExitPool`). These\n amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way"}, "id": 1595, "implemented": true, "kind": "function", "modifiers": [], "name": "_onExitPool", "nodeType": "FunctionDefinition", "overrides": {"id": 1480, "nodeType": "OverrideSpecifier", "overrides": [], "src": "18310:8:2"}, "parameters": {"id": 1479, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1465, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1595, "src": "18091:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 1464, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "18091:7:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 1467, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1595, "src": "18108:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1466, "name": "address", "nodeType": "ElementaryTypeName", "src": "18108:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1469, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1595, "src": "18125:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1468, "name": "address", "nodeType": "ElementaryTypeName", "src": "18125:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1472, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 1595, "src": "18142:25:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1470, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18142:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1471, "nodeType": "ArrayTypeName", "src": "18142:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1474, "mutability": "mutable", "name": "lastChangeBlock", "nodeType": "VariableDeclaration", "scope": 1595, "src": "18177:23:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1473, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18177:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1476, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1595, "src": "18210:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1475, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18210:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1478, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 1595, "src": "18257:21:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1477, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "18257:5:2", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "18081:203:2"}, "returnParameters": {"id": 1489, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1482, "mutability": "mutable", "name": "bptAmountIn", "nodeType": "VariableDeclaration", "scope": 1595, "src": "18349:19:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1481, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18349:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1485, "mutability": "mutable", "name": "amountsOut", "nodeType": "VariableDeclaration", "scope": 1595, "src": "18382:27:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1483, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18382:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1484, "nodeType": "ArrayTypeName", "src": "18382:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1488, "mutability": "mutable", "name": "dueProtocolFeeAmounts", "nodeType": "VariableDeclaration", "scope": 1595, "src": "18423:38:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1486, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18423:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1487, "nodeType": "ArrayTypeName", "src": "18423:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "18335:136:2"}, "scope": 1978, "src": "18061:3093:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 1638, "nodeType": "Block", "src": "21300:452:2", "statements": [{"assignments": [1611], "declarations": [{"constant": false, "id": 1611, "mutability": "mutable", "name": "kind", "nodeType": "VariableDeclaration", "scope": 1638, "src": "21310:30:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$25128", "typeString": "enum BaseWeightedPool.ExitKind"}, "typeName": {"id": 1610, "name": "BaseWeightedPool.ExitKind", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 25128, "src": "21310:25:2", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$25128", "typeString": "enum BaseWeightedPool.ExitKind"}}, "visibility": "internal"}], "id": 1615, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1612, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1600, "src": "21343:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 1613, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "exitKind", "nodeType": "MemberAccess", "referencedDeclaration": 15045, "src": "21343:17:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_enum$_ExitKind_$25128_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (enum BaseWeightedPool.ExitKind)"}}, "id": 1614, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21343:19:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$25128", "typeString": "enum BaseWeightedPool.ExitKind"}}, "nodeType": "VariableDeclarationStatement", "src": "21310:52:2"}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_ExitKind_$25128", "typeString": "enum BaseWeightedPool.ExitKind"}, "id": 1620, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1616, "name": "kind", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1611, "src": "21517:4:2", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$25128", "typeString": "enum BaseWeightedPool.ExitKind"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 1617, "name": "BaseWeightedPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 26324, "src": "21525:16:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BaseWeightedPool_$26324_$", "typeString": "type(contract BaseWeightedPool)"}}, "id": 1618, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ExitKind", "nodeType": "MemberAccess", "referencedDeclaration": 25128, "src": "21525:25:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_ExitKind_$25128_$", "typeString": "type(enum BaseWeightedPool.ExitKind)"}}, "id": 1619, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "EXACT_BPT_IN_FOR_TOKENS_OUT", "nodeType": "MemberAccess", "src": "21525:53:2", "typeDescriptions": {"typeIdentifier": "t_enum$_ExitKind_$25128", "typeString": "enum BaseWeightedPool.ExitKind"}}, "src": "21517:61:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 1636, "nodeType": "Block", "src": "21686:60:2", "statements": [{"expression": {"arguments": [{"expression": {"id": 1632, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18980, "src": "21708:6:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$18980_$", "typeString": "type(library Errors)"}}, "id": 1633, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNHANDLED_EXIT_KIND", "nodeType": "MemberAccess", "referencedDeclaration": 18772, "src": "21708:26:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1631, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18583, "src": "21700:7:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$", "typeString": "function (uint256) pure"}}, "id": 1634, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21700:35:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1635, "nodeType": "ExpressionStatement", "src": "21700:35:2"}]}, "id": 1637, "nodeType": "IfStatement", "src": "21513:233:2", "trueBody": {"id": 1630, "nodeType": "Block", "src": "21580:100:2", "statements": [{"expression": {"id": 1628, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 1621, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1603, "src": "21595:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1622, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1606, "src": "21608:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1623, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "21594:25:2", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1625, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1598, "src": "21650:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 1626, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1600, "src": "21660:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 1624, "name": "_exitExactBPTInForTokensOut", "nodeType": "Identifier", "overloadedDeclarations": [1677], "referencedDeclaration": 1677, "src": "21622:27:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}}, "id": 1627, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21622:47:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "src": "21594:75:2", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1629, "nodeType": "ExpressionStatement", "src": "21594:75:2"}]}}]}, "id": 1639, "implemented": true, "kind": "function", "modifiers": [], "name": "_doExit", "nodeType": "FunctionDefinition", "parameters": {"id": 1601, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1598, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 1639, "src": "21177:25:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1596, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21177:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1597, "nodeType": "ArrayTypeName", "src": "21177:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1600, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 1639, "src": "21204:21:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1599, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "21204:5:2", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "21176:50:2"}, "returnParameters": {"id": 1607, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1603, "mutability": "mutable", "name": "bptAmountIn", "nodeType": "VariableDeclaration", "scope": 1639, "src": "21250:19:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1602, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21250:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1606, "mutability": "mutable", "name": "amountsOut", "nodeType": "VariableDeclaration", "scope": 1639, "src": "21271:27:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1604, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21271:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1605, "nodeType": "ArrayTypeName", "src": "21271:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "21249:50:2"}, "scope": 1978, "src": "21160:592:2", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"baseFunctions": [13946], "body": {"id": 1676, "nodeType": "Block", "src": "21940:746:2", "statements": [{"assignments": [1654], "declarations": [{"constant": false, "id": 1654, "mutability": "mutable", "name": "bptAmountIn", "nodeType": "VariableDeclaration", "scope": 1676, "src": "22361:19:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1653, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22361:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1658, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1655, "name": "userData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1644, "src": "22383:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 1656, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "exactBptInForTokensOut", "nodeType": "MemberAccess", "referencedDeclaration": 15190, "src": "22383:31:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) pure returns (uint256)"}}, "id": 1657, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22383:33:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "22361:55:2"}, {"assignments": [1663], "declarations": [{"constant": false, "id": 1663, "mutability": "mutable", "name": "amountsOut", "nodeType": "VariableDeclaration", "scope": 1676, "src": "22527:27:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1661, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22527:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1662, "nodeType": "ArrayTypeName", "src": "22527:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 1671, "initialValue": {"arguments": [{"id": 1666, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1642, "src": "22600:8:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, {"id": 1667, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1654, "src": "22610:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 1668, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23821, "src": "22623:11:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1669, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22623:13:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1664, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11550, "src": "22557:12:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$11550_$", "typeString": "type(library GyroPoolMath)"}}, "id": 1665, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcTokensOutGivenExactBptIn", "nodeType": "MemberAccess", "referencedDeclaration": 10901, "src": "22557:42:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256[] memory,uint256,uint256) pure returns (uint256[] memory)"}}, "id": 1670, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22557:80:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "22527:110:2"}, {"expression": {"components": [{"id": 1672, "name": "bptAmountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1654, "src": "22655:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1673, "name": "amountsOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1663, "src": "22668:10:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 1674, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "22654:25:2", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(uint256,uint256[] memory)"}}, "functionReturnParameters": 1652, "id": 1675, "nodeType": "Return", "src": "22647:32:2"}]}, "id": 1677, "implemented": true, "kind": "function", "modifiers": [], "name": "_exitExactBPTInForTokensOut", "nodeType": "FunctionDefinition", "overrides": {"id": 1646, "nodeType": "OverrideSpecifier", "overrides": [], "src": "21883:8:2"}, "parameters": {"id": 1645, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1642, "mutability": "mutable", "name": "balances", "nodeType": "VariableDeclaration", "scope": 1677, "src": "21795:25:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1640, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21795:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1641, "nodeType": "ArrayTypeName", "src": "21795:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1644, "mutability": "mutable", "name": "userData", "nodeType": "VariableDeclaration", "scope": 1677, "src": "21822:21:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1643, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "21822:5:2", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "21794:50:2"}, "returnParameters": {"id": 1652, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1648, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1677, "src": "21909:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1647, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21909:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1651, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1677, "src": "21918:16:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1649, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21918:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1650, "nodeType": "ArrayTypeName", "src": "21918:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "21908:27:2"}, "scope": 1978, "src": "21758:928:2", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 1703, "nodeType": "Block", "src": "23032:518:2", "statements": [{"assignments": [1684, 1686, 1688, 1690], "declarations": [{"constant": false, "id": 1684, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 1703, "src": "23260:16:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1683, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23260:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1686, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 1703, "src": "23278:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1685, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23278:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1688, "mutability": "mutable", "name": "gyroTreasury", "nodeType": "VariableDeclaration", "scope": 1703, "src": "23300:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1687, "name": "address", "nodeType": "ElementaryTypeName", "src": "23300:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1690, "mutability": "mutable", "name": "balTreasury", "nodeType": "VariableDeclaration", "scope": 1703, "src": "23322:19:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1689, "name": "address", "nodeType": "ElementaryTypeName", "src": "23322:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 1695, "initialValue": {"arguments": [{"id": 1692, "name": "_lastInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12308, "src": "23384:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1693, "name": "invariantBeforeAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1680, "src": "23412:21:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1691, "name": "_getDueProtocolFeeAmounts", "nodeType": "Identifier", "overloadedDeclarations": [1729, 1788], "referencedDeclaration": 1788, "src": "23345:25:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "function (uint256,uint256) view returns (uint256,uint256,address,address)"}}, "id": 1694, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23345:98:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "nodeType": "VariableDeclarationStatement", "src": "23259:184:2"}, {"expression": {"arguments": [{"id": 1697, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1684, "src": "23493:8:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1698, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1686, "src": "23503:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1699, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1688, "src": "23517:12:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1700, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1690, "src": "23531:11:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 1696, "name": "_payFeesBpt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1820, "src": "23481:11:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$", "typeString": "function (uint256,uint256,address,address)"}}, "id": 1701, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23481:62:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1702, "nodeType": "ExpressionStatement", "src": "23481:62:2"}]}, "documentation": {"id": 1678, "nodeType": "StructuredDocumentation", "src": "22708:253:2", "text": " @dev Computes and distributes fees between the Balancer and the Gyro treasury\n The fees are computed and distributed in BPT rather than using the\n Balancer regular distribution mechanism which would pay these in underlying"}, "id": 1704, "implemented": true, "kind": "function", "modifiers": [], "name": "_distributeFees", "nodeType": "FunctionDefinition", "parameters": {"id": 1681, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1680, "mutability": "mutable", "name": "invariantBeforeAction", "nodeType": "VariableDeclaration", "scope": 1704, "src": "22992:29:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1679, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22992:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "22991:31:2"}, "returnParameters": {"id": 1682, "nodeType": "ParameterList", "parameters": [], "src": "23032:0:2"}, "scope": 1978, "src": "22967:583:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [14227], "body": {"id": 1728, "nodeType": "Block", "src": "23958:42:2", "statements": [{"expression": {"arguments": [{"hexValue": "4e6f7420696d706c656d656e746564", "id": 1725, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "23975:17:2", "typeDescriptions": {"typeIdentifier": "t_stringliteral_9f5474d7a5849b3f79e8aee7ea2c60bcd36a60a08b4fa41f97e2fccf1c4df98b", "typeString": "literal_string \"Not implemented\""}, "value": "Not implemented"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_9f5474d7a5849b3f79e8aee7ea2c60bcd36a60a08b4fa41f97e2fccf1c4df98b", "typeString": "literal_string \"Not implemented\""}], "id": 1724, "name": "revert", "nodeType": "Identifier", "overloadedDeclarations": [-19, -19], "referencedDeclaration": -19, "src": "23968:6:2", "typeDescriptions": {"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory) pure"}}, "id": 1726, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23968:25:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1727, "nodeType": "ExpressionStatement", "src": "23968:25:2"}]}, "documentation": {"id": 1705, "nodeType": "StructuredDocumentation", "src": "23556:96:2", "text": " @dev this function overrides inherited function to make sure it is never used"}, "id": 1729, "implemented": true, "kind": "function", "modifiers": [], "name": "_getDueProtocolFeeAmounts", "nodeType": "FunctionDefinition", "overrides": {"id": 1719, "nodeType": "OverrideSpecifier", "overrides": [], "src": "23922:8:2"}, "parameters": {"id": 1718, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1708, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1729, "src": "23701:16:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1706, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23701:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1707, "nodeType": "ArrayTypeName", "src": "23701:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1711, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1729, "src": "23740:16:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1709, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23740:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1710, "nodeType": "ArrayTypeName", "src": "23740:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 1713, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1729, "src": "23788:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1712, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23788:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1715, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1729, "src": "23827:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1714, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23827:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1717, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1729, "src": "23865:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1716, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23865:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "23691:216:2"}, "returnParameters": {"id": 1723, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1722, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1729, "src": "23940:16:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1720, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23940:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1721, "nodeType": "ArrayTypeName", "src": "23940:9:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "23939:18:2"}, "scope": 1978, "src": "23657:343:2", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 1787, "nodeType": "Block", "src": "24542:681:2", "statements": [{"assignments": [1746, 1748, 1750, 1752], "declarations": [{"constant": false, "id": 1746, "mutability": "mutable", "name": "protocolSwapFeePerc", "nodeType": "VariableDeclaration", "scope": 1787, "src": "24553:27:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1745, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24553:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1748, "mutability": "mutable", "name": "protocolFeeGyroPortion", "nodeType": "VariableDeclaration", "scope": 1787, "src": "24582:30:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1747, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24582:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1750, "mutability": "mutable", "name": "gyroTreasury", "nodeType": "VariableDeclaration", "scope": 1787, "src": "24614:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1749, "name": "address", "nodeType": "ElementaryTypeName", "src": "24614:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1752, "mutability": "mutable", "name": "balTreasury", "nodeType": "VariableDeclaration", "scope": 1787, "src": "24636:19:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1751, "name": "address", "nodeType": "ElementaryTypeName", "src": "24636:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 1755, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 1753, "name": "_getFeesMetadata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1854, "src": "24659:16:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "function () view returns (uint256,uint256,address,address)"}}, "id": 1754, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24659:18:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "nodeType": "VariableDeclarationStatement", "src": "24552:125:2"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1758, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1756, "name": "protocolSwapFeePerc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1746, "src": "24773:19:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 1757, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "24796:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "24773:24:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1766, "nodeType": "IfStatement", "src": "24769:95:2", "trueBody": {"id": 1765, "nodeType": "Block", "src": "24799:65:2", "statements": [{"expression": {"components": [{"hexValue": "30", "id": 1759, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "24821:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"hexValue": "30", "id": 1760, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "24824:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"id": 1761, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1750, "src": "24827:12:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1762, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1752, "src": "24841:11:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 1763, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "24820:33:2", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_address_$_t_address_$", "typeString": "tuple(int_const 0,int_const 0,address,address)"}}, "functionReturnParameters": 1744, "id": 1764, "nodeType": "Return", "src": "24813:40:2"}]}}, {"assignments": [1768, 1770], "declarations": [{"constant": false, "id": 1768, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 1787, "src": "24908:16:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1767, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24908:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1770, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 1787, "src": "24926:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1769, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24926:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1780, "initialValue": {"arguments": [{"id": 1773, "name": "previousInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1732, "src": "24994:17:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1774, "name": "currentInvariant", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1734, "src": "25025:16:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 1775, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23821, "src": "25055:11:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1776, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25055:13:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1777, "name": "protocolSwapFeePerc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1746, "src": "25082:19:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1778, "name": "protocolFeeGyroPortion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1748, "src": "25115:22:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1771, "name": "GyroPoolMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11550, "src": "24950:12:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroPoolMath_$11550_$", "typeString": "type(library GyroPoolMath)"}}, "id": 1772, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcProtocolFees", "nodeType": "MemberAccess", "referencedDeclaration": 10985, "src": "24950:30:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,uint256,uint256) pure returns (uint256,uint256)"}}, "id": 1779, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24950:197:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "24907:240:2"}, {"expression": {"components": [{"id": 1781, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1768, "src": "25166:8:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1782, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1770, "src": "25176:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1783, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1750, "src": "25190:12:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1784, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1752, "src": "25204:11:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 1785, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "25165:51:2", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "functionReturnParameters": 1744, "id": 1786, "nodeType": "Return", "src": "25158:58:2"}]}, "documentation": {"id": 1730, "nodeType": "StructuredDocumentation", "src": "24006:298:2", "text": " @dev Calculates protocol fee amounts in BPT terms.\n protocolSwapFeePercentage is not used here b/c we take parameters from GyroConfig instead.\n Returns: BPT due to Gyro, BPT due to Balancer, receiving address for Gyro fees, receiving address for Balancer\n fees."}, "id": 1788, "implemented": true, "kind": "function", "modifiers": [], "name": "_getDueProtocolFeeAmounts", "nodeType": "FunctionDefinition", "parameters": {"id": 1735, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1732, "mutability": "mutable", "name": "previousInvariant", "nodeType": "VariableDeclaration", "scope": 1788, "src": "24344:25:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1731, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24344:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1734, "mutability": "mutable", "name": "currentInvariant", "nodeType": "VariableDeclaration", "scope": 1788, "src": "24371:24:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1733, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24371:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "24343:53:2"}, "returnParameters": {"id": 1744, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1737, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1788, "src": "24457:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1736, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24457:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1739, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1788, "src": "24478:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1738, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24478:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1741, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1788, "src": "24499:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1740, "name": "address", "nodeType": "ElementaryTypeName", "src": "24499:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1743, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1788, "src": "24520:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1742, "name": "address", "nodeType": "ElementaryTypeName", "src": "24520:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "24443:94:2"}, "scope": 1978, "src": "24309:914:2", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 1819, "nodeType": "Block", "src": "25380:283:2", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1801, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1799, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1790, "src": "25438:8:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 1800, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "25449:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "25438:12:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1808, "nodeType": "IfStatement", "src": "25434:82:2", "trueBody": {"id": 1807, "nodeType": "Block", "src": "25452:64:2", "statements": [{"expression": {"arguments": [{"id": 1803, "name": "gyroTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1794, "src": "25482:12:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1804, "name": "gyroFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1790, "src": "25496:8:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1802, "name": "_mintPoolTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20632, "src": "25466:15:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 1805, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25466:39:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1806, "nodeType": "ExpressionStatement", "src": "25466:39:2"}]}}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1811, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1809, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1792, "src": "25572:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 1810, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "25587:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "25572:16:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1818, "nodeType": "IfStatement", "src": "25568:89:2", "trueBody": {"id": 1817, "nodeType": "Block", "src": "25590:67:2", "statements": [{"expression": {"arguments": [{"id": 1813, "name": "balTreasury", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1796, "src": "25620:11:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1814, "name": "balancerFees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1792, "src": "25633:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1812, "name": "_mintPoolTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20632, "src": "25604:15:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 1815, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25604:42:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1816, "nodeType": "ExpressionStatement", "src": "25604:42:2"}]}}]}, "id": 1820, "implemented": true, "kind": "function", "modifiers": [], "name": "_payFeesBpt", "nodeType": "FunctionDefinition", "parameters": {"id": 1797, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1790, "mutability": "mutable", "name": "gyroFees", "nodeType": "VariableDeclaration", "scope": 1820, "src": "25259:16:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1789, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25259:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1792, "mutability": "mutable", "name": "balancerFees", "nodeType": "VariableDeclaration", "scope": 1820, "src": "25285:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1791, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25285:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1794, "mutability": "mutable", "name": "gyroTreasury", "nodeType": "VariableDeclaration", "scope": 1820, "src": "25315:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1793, "name": "address", "nodeType": "ElementaryTypeName", "src": "25315:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1796, "mutability": "mutable", "name": "balTreasury", "nodeType": "VariableDeclaration", "scope": 1820, "src": "25345:19:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1795, "name": "address", "nodeType": "ElementaryTypeName", "src": "25345:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "25249:121:2"}, "returnParameters": {"id": 1798, "nodeType": "ParameterList", "parameters": [], "src": "25380:0:2"}, "scope": 1978, "src": "25229:434:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 1853, "nodeType": "Block", "src": "25842:324:2", "statements": [{"expression": {"components": [{"arguments": [{"expression": {"id": 1833, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14794, "src": "25892:14:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$14794_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 1834, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "PROTOCOL_SWAP_FEE_PERC_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 14784, "src": "25892:41:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 1831, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 514, "src": "25873:10:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$14779", "typeString": "contract IGyroConfig"}}, "id": 1832, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getUint", "nodeType": "MemberAccess", "referencedDeclaration": 14754, "src": "25873:18:2", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_uint256_$", "typeString": "function (bytes32) view external returns (uint256)"}}, "id": 1835, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25873:61:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"expression": {"id": 1838, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14794, "src": "25967:14:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$14794_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 1839, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "PROTOCOL_FEE_GYRO_PORTION_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 14787, "src": "25967:44:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 1836, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 514, "src": "25948:10:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$14779", "typeString": "contract IGyroConfig"}}, "id": 1837, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getUint", "nodeType": "MemberAccess", "referencedDeclaration": 14754, "src": "25948:18:2", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_uint256_$", "typeString": "function (bytes32) view external returns (uint256)"}}, "id": 1840, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25948:64:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"expression": {"id": 1843, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14794, "src": "26048:14:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$14794_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 1844, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "GYRO_TREASURY_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 14790, "src": "26048:32:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 1841, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 514, "src": "26026:10:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$14779", "typeString": "contract IGyroConfig"}}, "id": 1842, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getAddress", "nodeType": "MemberAccess", "referencedDeclaration": 14762, "src": "26026:21:2", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$", "typeString": "function (bytes32) view external returns (address)"}}, "id": 1845, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26026:55:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"expression": {"id": 1848, "name": "GyroConfigKeys", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14794, "src": "26117:14:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GyroConfigKeys_$14794_$", "typeString": "type(library GyroConfigKeys)"}}, "id": 1849, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "BAL_TREASURY_KEY", "nodeType": "MemberAccess", "referencedDeclaration": 14793, "src": "26117:31:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 1846, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 514, "src": "26095:10:2", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$14779", "typeString": "contract IGyroConfig"}}, "id": 1847, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getAddress", "nodeType": "MemberAccess", "referencedDeclaration": 14762, "src": "26095:21:2", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$", "typeString": "function (bytes32) view external returns (address)"}}, "id": 1850, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26095:54:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 1851, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "25859:300:2", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$", "typeString": "tuple(uint256,uint256,address,address)"}}, "functionReturnParameters": 1830, "id": 1852, "nodeType": "Return", "src": "25852:307:2"}]}, "id": 1854, "implemented": true, "kind": "function", "modifiers": [], "name": "_getFeesMetadata", "nodeType": "FunctionDefinition", "parameters": {"id": 1821, "nodeType": "ParameterList", "parameters": [], "src": "25694:2:2"}, "returnParameters": {"id": 1830, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1823, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1854, "src": "25757:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1822, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25757:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1825, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1854, "src": "25778:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1824, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25778:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1827, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1854, "src": "25799:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1826, "name": "address", "nodeType": "ElementaryTypeName", "src": "25799:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1829, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 1854, "src": "25820:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1828, "name": "address", "nodeType": "ElementaryTypeName", "src": "25820:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "25743:94:2"}, "scope": 1978, "src": "25669:497:2", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 1953, "nodeType": "Block", "src": "26705:1266:2", "statements": [{"assignments": [1869], "declarations": [{"constant": false, "id": 1869, "mutability": "mutable", "name": "miscData", "nodeType": "VariableDeclaration", "scope": 1953, "src": "26715:16:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 1868, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "26715:7:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 1871, "initialValue": {"id": 1870, "name": "_miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12306, "src": "26734:9:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "26715:28:2"}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 1879, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1872, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1869, "src": "26757:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 1873, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "oracleEnabled", "nodeType": "MemberAccess", "referencedDeclaration": 14892, "src": "26757:22:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bool_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (bool)"}}, "id": 1874, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26757:24:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1878, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 1875, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "26785:5:2", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 1876, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "number", "nodeType": "MemberAccess", "src": "26785:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"id": 1877, "name": "lastChangeBlock", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1857, "src": "26800:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "26785:30:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "26757:58:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1952, "nodeType": "IfStatement", "src": "26753:1212:2", "trueBody": {"id": 1951, "nodeType": "Block", "src": "26817:1148:2", "statements": [{"assignments": [1881], "declarations": [{"constant": false, "id": 1881, "mutability": "mutable", "name": "logSpotPrice", "nodeType": "VariableDeclaration", "scope": 1951, "src": "26831:19:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 1880, "name": "int256", "nodeType": "ElementaryTypeName", "src": "26831:6:2", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 1889, "initialValue": {"arguments": [{"id": 1884, "name": "balanceToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1859, "src": "26890:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1885, "name": "virtualParam0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1863, "src": "26905:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1886, "name": "balanceToken1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1861, "src": "26920:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1887, "name": "virtualParam1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1865, "src": "26935:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1882, "name": "Gyro2CLPOracleMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12073, "src": "26853:18:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPOracleMath_$12073_$", "typeString": "type(contract Gyro2CLPOracleMath)"}}, "id": 1883, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcLogSpotPrice", "nodeType": "MemberAccess", "referencedDeclaration": 12025, "src": "26853:36:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_int256_$", "typeString": "function (uint256,uint256,uint256,uint256) pure returns (int256)"}}, "id": 1888, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26853:96:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "VariableDeclarationStatement", "src": "26831:118:2"}, {"assignments": [1891], "declarations": [{"constant": false, "id": 1891, "mutability": "mutable", "name": "logBPTPrice", "nodeType": "VariableDeclaration", "scope": 1951, "src": "26964:18:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 1890, "name": "int256", "nodeType": "ElementaryTypeName", "src": "26964:6:2", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 1902, "initialValue": {"arguments": [{"id": 1894, "name": "balanceToken0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1859, "src": "27038:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1895, "name": "virtualParam0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1863, "src": "27069:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1896, "name": "balanceToken1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1861, "src": "27100:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1897, "name": "virtualParam1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1865, "src": "27131:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1898, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1869, "src": "27162:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 1899, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "logTotalSupply", "nodeType": "MemberAccess", "referencedDeclaration": 14850, "src": "27162:23:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_int256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (int256)"}}, "id": 1900, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27162:25:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 1892, "name": "Gyro2CLPOracleMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12073, "src": "26985:18:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Gyro2CLPOracleMath_$12073_$", "typeString": "type(contract Gyro2CLPOracleMath)"}}, "id": 1893, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_calcLogBPTPrice", "nodeType": "MemberAccess", "referencedDeclaration": 12072, "src": "26985:35:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_int256_$returns$_t_int256_$", "typeString": "function (uint256,uint256,uint256,uint256,int256) pure returns (int256)"}}, "id": 1901, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26985:216:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "VariableDeclarationStatement", "src": "26964:237:2"}, {"assignments": [1904], "declarations": [{"constant": false, "id": 1904, "mutability": "mutable", "name": "oracleCurrentIndex", "nodeType": "VariableDeclaration", "scope": 1951, "src": "27216:26:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1903, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27216:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1908, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1905, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1869, "src": "27245:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 1906, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "oracleIndex", "nodeType": "MemberAccess", "referencedDeclaration": 14878, "src": "27245:20:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (uint256)"}}, "id": 1907, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27245:22:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "27216:51:2"}, {"assignments": [1910], "declarations": [{"constant": false, "id": 1910, "mutability": "mutable", "name": "oracleCurrentSampleInitialTimestamp", "nodeType": "VariableDeclaration", "scope": 1951, "src": "27281:43:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1909, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27281:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1914, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1911, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1869, "src": "27327:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 1912, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "oracleSampleCreationTimestamp", "nodeType": "MemberAccess", "referencedDeclaration": 14864, "src": "27327:38:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (uint256)"}}, "id": 1913, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27327:40:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "27281:86:2"}, {"assignments": [1916], "declarations": [{"constant": false, "id": 1916, "mutability": "mutable", "name": "oracleUpdatedIndex", "nodeType": "VariableDeclaration", "scope": 1951, "src": "27381:26:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1915, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27381:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1926, "initialValue": {"arguments": [{"id": 1918, "name": "oracleCurrentSampleInitialTimestamp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1910, "src": "27445:35:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1919, "name": "oracleCurrentIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1904, "src": "27498:18:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1920, "name": "logSpotPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1881, "src": "27534:12:2", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 1921, "name": "logBPTPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1891, "src": "27564:11:2", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1922, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1869, "src": "27593:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 1923, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "logInvariant", "nodeType": "MemberAccess", "referencedDeclaration": 14836, "src": "27593:21:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_int256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (int256)"}}, "id": 1924, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27593:23:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "id": 1917, "name": "_processPriceData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22322, "src": "27410:17:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_int256_$_t_int256_$_t_int256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,int256,int256,int256) returns (uint256)"}}, "id": 1925, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27410:220:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "27381:249:2"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1929, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1927, "name": "oracleCurrentIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1904, "src": "27649:18:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"id": 1928, "name": "oracleUpdatedIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1916, "src": "27671:18:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "27649:40:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1950, "nodeType": "IfStatement", "src": "27645:310:2", "trueBody": {"id": 1949, "nodeType": "Block", "src": "27691:264:2", "statements": [{"expression": {"id": 1935, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1930, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1869, "src": "27761:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1933, "name": "oracleUpdatedIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1916, "src": "27796:18:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1931, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1869, "src": "27772:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 1932, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "setOracleIndex", "nodeType": "MemberAccess", "referencedDeclaration": 14974, "src": "27772:23:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_bytes32_$", "typeString": "function (bytes32,uint256) pure returns (bytes32)"}}, "id": 1934, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27772:43:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "27761:54:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 1936, "nodeType": "ExpressionStatement", "src": "27761:54:2"}, {"expression": {"id": 1943, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1937, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1869, "src": "27833:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 1940, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "27886:5:2", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 1941, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "27886:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1938, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1869, "src": "27844:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 1939, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "setOracleSampleCreationTimestamp", "nodeType": "MemberAccess", "referencedDeclaration": 14957, "src": "27844:41:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_bytes32_$", "typeString": "function (bytes32,uint256) pure returns (bytes32)"}}, "id": 1942, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27844:58:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "27833:69:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 1944, "nodeType": "ExpressionStatement", "src": "27833:69:2"}, {"expression": {"id": 1947, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1945, "name": "_miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12306, "src": "27920:9:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 1946, "name": "miscData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1869, "src": "27932:8:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "27920:20:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 1948, "nodeType": "ExpressionStatement", "src": "27920:20:2"}]}}]}}]}, "documentation": {"id": 1855, "nodeType": "StructuredDocumentation", "src": "26172:333:2", "text": " @dev Updates the Price Oracle based on the Pool's current state (balances, BPT supply and invariant). Must be\n called on *all* state-changing functions with the balances *before* the state change happens, and with\n `lastChangeBlock` as the number of the block in which any of the balances last changed."}, "id": 1954, "implemented": true, "kind": "function", "modifiers": [], "name": "_updateOracle", "nodeType": "FunctionDefinition", "parameters": {"id": 1866, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1857, "mutability": "mutable", "name": "lastChangeBlock", "nodeType": "VariableDeclaration", "scope": 1954, "src": "26542:23:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1856, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26542:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1859, "mutability": "mutable", "name": "balanceToken0", "nodeType": "VariableDeclaration", "scope": 1954, "src": "26575:21:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1858, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26575:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1861, "mutability": "mutable", "name": "balanceToken1", "nodeType": "VariableDeclaration", "scope": 1954, "src": "26606:21:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1860, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26606:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1863, "mutability": "mutable", "name": "virtualParam0", "nodeType": "VariableDeclaration", "scope": 1954, "src": "26637:21:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1862, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26637:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1865, "mutability": "mutable", "name": "virtualParam1", "nodeType": "VariableDeclaration", "scope": 1954, "src": "26668:21:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1864, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26668:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "26532:163:2"}, "returnParameters": {"id": 1867, "nodeType": "ParameterList", "parameters": [], "src": "26705:0:2"}, "scope": 1978, "src": "26510:1461:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [14023], "body": {"id": 1965, "nodeType": "Block", "src": "28398:30:2", "statements": []}, "documentation": {"id": 1955, "nodeType": "StructuredDocumentation", "src": "27977:274:2", "text": " @dev this variant of the function, called from `onJoinPool()` and `onExitPool()`, which we inherit, is a no-op. We instead have moved responsibility for updating the oracle to `_onJoinPool()` and `_onExitPool()` and the above version is called from there."}, "id": 1966, "implemented": true, "kind": "function", "modifiers": [], "name": "_updateOracle", "nodeType": "FunctionDefinition", "overrides": {"id": 1963, "nodeType": "OverrideSpecifier", "overrides": [], "src": "28389:8:2"}, "parameters": {"id": 1962, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1957, "mutability": "mutable", "name": "lastChangeBlock", "nodeType": "VariableDeclaration", "scope": 1966, "src": "28288:23:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1956, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28288:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1959, "mutability": "mutable", "name": "balanceToken0", "nodeType": "VariableDeclaration", "scope": 1966, "src": "28321:21:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1958, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28321:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1961, "mutability": "mutable", "name": "balanceToken1", "nodeType": "VariableDeclaration", "scope": 1966, "src": "28352:21:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1960, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28352:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "28278:101:2"}, "returnParameters": {"id": 1964, "nodeType": "ParameterList", "parameters": [], "src": "28398:0:2"}, "scope": 1978, "src": "28256:172:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [14718], "body": {"id": 1976, "nodeType": "Block", "src": "28490:35:2", "statements": [{"expression": {"arguments": [{"id": 1973, "name": "paused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1968, "src": "28511:6:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 1972, "name": "_setPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23689, "src": "28500:10:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$", "typeString": "function (bool)"}}, "id": 1974, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28500:18:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1975, "nodeType": "ExpressionStatement", "src": "28500:18:2"}]}, "id": 1977, "implemented": true, "kind": "function", "modifiers": [], "name": "_setPausedState", "nodeType": "FunctionDefinition", "overrides": {"id": 1970, "nodeType": "OverrideSpecifier", "overrides": [], "src": "28481:8:2"}, "parameters": {"id": 1969, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1968, "mutability": "mutable", "name": "paused", "nodeType": "VariableDeclaration", "scope": 1977, "src": "28459:11:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1967, "name": "bool", "nodeType": "ElementaryTypeName", "src": "28459:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "28458:13:2"}, "returnParameters": {"id": 1971, "nodeType": "ParameterList", "parameters": [], "src": "28490:0:2"}, "scope": 1978, "src": "28434:91:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}], "scope": 1979, "src": "1423:27104:2"}], "src": "688:27840:2"}, "bytecode": "", "bytecodeSha1": "657b625476fec4359e8f7f9d01bbe647a4b93e4a", "compiler": {"evm_version": "berlin", "optimizer": {"enabled": true, "runs": 200}, "version": "0.7.6+commit.7338295f"}, "contractName": "Gyro2CLPPool", "coverageMap": {"branches": {"0": {}, "1": {}, "12": {"CappedLiquidity._ensureCap": {"470": [2033, 2086, true]}, "CappedLiquidity.setCapManager": {"467": [1203, 1227, true]}, "CappedLiquidity.setCapParams": {"468": [1531, 1555, true], "469": [1591, 1612, true]}}, "13": {"ExtensibleWeightedPool2Tokens._cacheInvariantAndSupply": {"473": [34111, 34135, false]}, "ExtensibleWeightedPool2Tokens._normalizedWeights": {"476": [9306, 9312, true]}, "ExtensibleWeightedPool2Tokens._queryAction": {"475": [43609, 43636, false]}, "ExtensibleWeightedPool2Tokens._scalingFactor": {"474": [40185, 40191, true]}, "ExtensibleWeightedPool2Tokens.enableOracle": {"471": [8383, 8400, false]}, "ExtensibleWeightedPool2Tokens.onExitPool": {"472": [24608, 24622, false]}}, "14": {"LocallyPausable.changePauseManager": {"515": [727, 760, true]}, "LocallyPausable.pause": {"516": [992, 1018, true]}, "LocallyPausable.unpause": {"514": [1205, 1231, true]}}, "2": {"Gyro2CLPPool._calculateCurrentValues": {"446": [9950, 9965, true], "447": [10024, 10039, true], "448": [10358, 10373, true], "449": [10437, 10452, true]}, "Gyro2CLPPool._doExit": {"455": [21517, 21578, false]}, "Gyro2CLPPool._doJoin": {"457": [16220, 16285, false]}, "Gyro2CLPPool._getDueProtocolFeeAmounts": {"459": [24773, 24797, false]}, "Gyro2CLPPool._onExitPool": {"450": [18896, 18910, false]}, "Gyro2CLPPool._onJoinPool": {"451": [15041, 15062, false]}, "Gyro2CLPPool._payFeesBpt": {"460": [25438, 25450, false], "461": [25572, 25588, false]}, "Gyro2CLPPool._sqrtParameters": {"456": [3209, 3219, true]}, "Gyro2CLPPool._updateOracle": {"452": [26757, 26781, false], "453": [26785, 26815, false], "454": [27649, 27689, false]}, "Gyro2CLPPool._virtualParameters": {"458": [4379, 4389, true]}, "Gyro2CLPPool.onSwap": {"441": [6141, 6156, true], "442": [6205, 6220, true], "443": [6269, 6284, true], "444": [6333, 6348, true], "445": [6408, 6448, false]}}, "20": {}, "21": {}, "22": {}, "23": {}, "24": {}, "25": {"GyroFixedPoint.divDown": {"477": [3940, 3946, false], "478": [4024, 4030, false]}, "GyroFixedPoint.divUp": {"481": [4543, 4549, false]}, "GyroFixedPoint.mulDown": {"482": [2361, 2367, true], "483": [2371, 2387, false]}, "GyroFixedPoint.mulUp": {"479": [2836, 2842, true], "480": [2846, 2862, false]}}, "26": {"GyroPoolMath._calcProtocolFees": {"488": [5676, 5713, false]}, "GyroPoolMath._intLog2Halved": {"507": [10561, 10574, false], "508": [10644, 10656, false], "509": [10725, 10737, false], "510": [10806, 10818, false], "511": [10886, 10897, false], "512": [10964, 10975, false]}, "GyroPoolMath._makeInitialGuess": {"489": [8925, 8952, false], "490": [9082, 9093, false], "491": [9166, 9178, false], "492": [9241, 9253, false], "493": [9326, 9338, false], "494": [9401, 9413, false], "495": [9486, 9498, false], "496": [9561, 9573, false], "497": [9646, 9658, false], "498": [9721, 9733, false], "499": [9805, 9818, false], "500": [9881, 9894, false], "501": [9966, 9979, false], "502": [10042, 10055, false], "503": [10127, 10140, false], "504": [10203, 10216, false], "505": [10288, 10301, false], "506": [10364, 10377, false]}, "GyroPoolMath._sqrt": {"485": [7331, 7341, false], "486": [8100, 8149, false], "487": [8153, 8202, true]}, "GyroPoolMath.liquidityInvariantUpdate": {"484": [11732, 11745, false]}}, "29": {"BalancerPoolToken.allowance": {"465": [2364, 2394, false]}, "BalancerPoolToken.decreaseAllowance": {"464": [3611, 3637, false]}, "BalancerPoolToken.transferFrom": {"462": [3030, 3050, false], "463": [3054, 3085, false]}}, "3": {}, "32": {"BasePoolAuthorization._canPerform": {"466": [2112, 2140, false]}}, "35": {}, "36": {}, "37": {}, "38": {}, "39": {}, "40": {}, "42": {}, "44": {}, "45": {}, "46": {}, "47": {}, "50": {}, "51": {}, "52": {}, "53": {"InputHelpers.ensureArrayIsSorted": {"513": [1496, 1512, false]}}, "54": {}, "55": {"TemporarilyPausable._setPaused": {"533": [3849, 3855, false]}}, "56": {"WordCodec.decodeInt22": {"535": [12558, 12577, true]}, "WordCodec.decodeInt53": {"536": [13167, 13186, true]}, "WordCodec.insertBool": {"534": [3342, 3347, true]}}, "57": {}, "58": {"LogExpMath._ln": {"519": [14218, 14228, false], "520": [15949, 15965, false], "521": [16073, 16089, false], "522": [16469, 16476, false], "523": [16561, 16568, false], "524": [16653, 16660, false], "525": [16745, 16752, false], "526": [16837, 16844, false], "527": [16929, 16936, false], "528": [17021, 17028, false], "529": [17113, 17120, false], "530": [17205, 17213, false], "531": [17300, 17308, false]}, "LogExpMath.ln": {"517": [13889, 13910, false], "518": [13914, 13935, false]}}, "59": {"Math.divUp": {"532": [2443, 2449, false]}}, "60": {}, "61": {}, "62": {}, "63": {}, "64": {}, "65": {}, "66": {}, "67": {}, "68": {}, "69": {}, "70": {}, "71": {}, "72": {}, "73": {}, "74": {}}, "statements": {"0": {"Gyro2CLPMath._calcInGivenOut": {"292": [12314, 12389], "293": [12399, 12478], "294": [12861, 12934], "295": [12955, 13030]}, "Gyro2CLPMath._calcOutGivenIn": {"288": [9386, 9461], "289": [9844, 9920], "290": [9941, 10016], "291": [10089, 10168]}, "Gyro2CLPMath._calculateInvariant": {"224": [3857, 3903]}, "Gyro2CLPMath._calculateQuadratic": {"301": [6518, 6560]}, "Gyro2CLPMath._calculateQuadraticTerms": {"296": [4459, 4514], "297": [4649, 4672], "298": [4686, 4723], "299": [4916, 4998], "300": [5229, 5266]}, "Gyro2CLPMath._calculateVirtualParameter0": {"396": [13246, 13281]}, "Gyro2CLPMath._calculateVirtualParameter1": {"395": [13498, 13534]}}, "1": {"Gyro2CLPOracleMath._calcLogBPTPrice": {"283": [4608, 4652]}, "Gyro2CLPOracleMath._calcLogSpotPrice": {"282": [2709, 2753]}, "Gyro2CLPOracleMath._calcSpotPrice": {"325": [1370, 1499]}}, "12": {"CappedLiquidity._ensureCap": {"277": [2025, 2106], "278": [2116, 2194]}, "CappedLiquidity.capParams": {"28": [1418, 1435]}, "CappedLiquidity.setCapManager": {"3": [1195, 1245], "4": [1255, 1279], "5": [1289, 1324]}, "CappedLiquidity.setCapParams": {"59": [1523, 1573], "60": [1583, 1624], "61": [1635, 1676], "62": [1686, 1733], "63": [1743, 1782], "64": [1793, 1826]}}, "13": {"ExtensibleWeightedPool2Tokens._cacheInvariantAndSupply": {"145": [34151, 34230], "146": [34244, 34324], "147": [34338, 34358]}, "ExtensibleWeightedPool2Tokens._downscaleDown": {"215": [41237, 41279]}, "ExtensibleWeightedPool2Tokens._downscaleDownArray": {"177": [41558, 41617], "178": [41627, 41687]}, "ExtensibleWeightedPool2Tokens._downscaleUp": {"217": [41999, 42039]}, "ExtensibleWeightedPool2Tokens._downscaleUpArray": {"205": [42314, 42371], "206": [42381, 42439]}, "ExtensibleWeightedPool2Tokens._getAuthorizer": {"223": [42900, 42933]}, "ExtensibleWeightedPool2Tokens._getOracleIndex": {"134": [34459, 34489]}, "ExtensibleWeightedPool2Tokens._isOwnerOnlyAction": {"309": [7692, 7862]}, "ExtensibleWeightedPool2Tokens._normalizedWeights": {"233": [9056, 9103], "234": [9113, 9161], "235": [9171, 9195], "308": [9299, 9354]}, "ExtensibleWeightedPool2Tokens._queryAction": {"179": [47588, 47611], "180": [47920, 47949]}, "ExtensibleWeightedPool2Tokens._scalingFactor": {"156": [40178, 40227]}, "ExtensibleWeightedPool2Tokens._setOracleEnabled": {"143": [8525, 8572], "144": [8582, 8616]}, "ExtensibleWeightedPool2Tokens._setSwapFeePercentage": {"151": [7263, 7350], "152": [7360, 7447], "153": [7458, 7519], "154": [7529, 7577]}, "ExtensibleWeightedPool2Tokens._upscale": {"157": [40495, 40533]}, "ExtensibleWeightedPool2Tokens._upscaleArray": {"197": [40800, 40855], "198": [40865, 40921]}, "ExtensibleWeightedPool2Tokens.enableOracle": {"18": [8270, 8293], "19": [8416, 8442]}, "ExtensibleWeightedPool2Tokens.getLastInvariant": {"80": [9437, 9458]}, "ExtensibleWeightedPool2Tokens.getMiscData": {"35": [6508, 6546], "36": [6556, 6598], "37": [6608, 6680], "38": [6690, 6726], "39": [6736, 6776], "40": [6786, 6834]}, "ExtensibleWeightedPool2Tokens.getNormalizedWeights": {"116": [8864, 8891]}, "ExtensibleWeightedPool2Tokens.getPoolId": {"26": [6126, 6140]}, "ExtensibleWeightedPool2Tokens.getRate": {"46": [39296, 39353]}, "ExtensibleWeightedPool2Tokens.getSwapFeePercentage": {"41": [6919, 6955]}, "ExtensibleWeightedPool2Tokens.onExitPool": {"53": [23715, 23738], "54": [24144, 24180], "55": [24292, 24323], "56": [24333, 24375], "57": [24638, 24664], "58": [24685, 24727]}, "ExtensibleWeightedPool2Tokens.onJoinPool": {"101": [13968, 14050], "102": [14345, 14403], "103": [14417, 14458], "104": [14472, 14527], "105": [14614, 14642], "106": [14732, 14772], "107": [14803, 14826], "108": [14903, 14959], "109": [14974, 15253], "110": [15367, 15407], "111": [15494, 15522], "112": [15621, 15663], "113": [15825, 15851]}, "ExtensibleWeightedPool2Tokens.queryExit": {"42": [36854, 36909], "43": [36920, 37057]}, "ExtensibleWeightedPool2Tokens.queryJoin": {"73": [35463, 35518], "74": [35529, 35664]}, "ExtensibleWeightedPool2Tokens.setPaused": {"6": [8750, 8768]}, "ExtensibleWeightedPool2Tokens.setSwapFeePercentage": {"25": [7134, 7174]}}, "14": {"LocallyPausable.changePauseManager": {"66": [719, 781], "67": [791, 819], "68": [829, 889]}, "LocallyPausable.pause": {"69": [984, 1039], "70": [1049, 1070], "71": [1080, 1100]}, "LocallyPausable.unpause": {"32": [1197, 1252], "33": [1262, 1284], "34": [1294, 1316]}}, "2": {"Gyro2CLPPool._calculateCurrentValues": {"158": [9936, 10000], "159": [10010, 10074], "160": [10144, 10235], "161": [10341, 10409], "162": [10419, 10488]}, "Gyro2CLPPool._distributeFees": {"256": [23481, 23543]}, "Gyro2CLPPool._doExit": {"257": [21594, 21669], "258": [21700, 21735]}, "Gyro2CLPPool._doJoin": {"275": [16301, 16379], "276": [16410, 16445]}, "Gyro2CLPPool._exitExactBPTInForTokensOut": {"319": [22647, 22679]}, "Gyro2CLPPool._getDueProtocolFeeAmounts": {"315": [24813, 24853], "316": [25158, 25216]}, "Gyro2CLPPool._getFeesMetadata": {"397": [25852, 26159]}, "Gyro2CLPPool._getVirtualParameters": {"250": [3993, 4066], "251": [4076, 4150]}, "Gyro2CLPPool._onExitPool": {"170": [19516, 19606], "171": [19621, 19659], "172": [19674, 19729], "173": [20187, 20299], "174": [20530, 20585], "175": [20930, 20964], "176": [21097, 21147]}, "Gyro2CLPPool._onInitializePool": {"226": [11613, 11683], "227": [11760, 11816], "228": [11826, 11850], "229": [12304, 12339], "230": [12350, 12382]}, "Gyro2CLPPool._onJoinPool": {"200": [14796, 14886], "201": [14897, 14935], "202": [15078, 15139], "203": [15583, 15695], "204": [15818, 15868]}, "Gyro2CLPPool._onSwapGivenIn": {"214": [8160, 8295]}, "Gyro2CLPPool._onSwapGivenOut": {"216": [8634, 8769]}, "Gyro2CLPPool._payFeesBpt": {"317": [25466, 25505], "318": [25604, 25646]}, "Gyro2CLPPool._sqrtParameters": {"195": [2964, 3008], "196": [3018, 3063], "269": [3202, 3244]}, "Gyro2CLPPool._updateOracle": {"207": [27761, 27815], "208": [27833, 27902], "209": [27920, 27940]}, "Gyro2CLPPool._virtualParameters": {"314": [4360, 4555]}, "Gyro2CLPPool.calculateCurrentValues": {"29": [9241, 9304], "30": [9314, 9380], "31": [9390, 9470]}, "Gyro2CLPPool.getInvariant": {"95": [4973, 4996], "96": [5007, 5086]}, "Gyro2CLPPool.getSqrtParameters": {"51": [2822, 2846]}, "Gyro2CLPPool.getVirtualParameters": {"77": [3657, 3680], "78": [3690, 3786]}, "Gyro2CLPPool.onSwap": {"81": [5583, 5646], "82": [5656, 5722], "83": [6077, 6393], "84": [6831, 6909], "85": [7120, 7175], "86": [7206, 7270], "87": [7479, 7534], "88": [7754, 7812]}}, "20": {}, "21": {}, "22": {}, "23": {}, "24": {"_grequire": {"330": [337, 356]}, "_grevert": {"408": [841, 870]}}, "25": {"GyroFixedPoint.add": {"320": [1881, 1917]}, "GyroFixedPoint.complement": {"218": [9904, 9936]}, "GyroFixedPoint.divDown": {"190": [3962, 3999], "191": [4046, 4054], "192": [4155, 4191], "193": [4228, 4248]}, "GyroFixedPoint.divUp": {"219": [4565, 4602], "220": [4649, 4657], "221": [4758, 4809], "222": [5143, 5175]}, "GyroFixedPoint.mulDown": {"321": [2404, 2440], "322": [2461, 2481]}, "GyroFixedPoint.mulUp": {"210": [2879, 2915], "211": [2968, 2976], "212": [3294, 3326]}, "GyroFixedPoint.sub": {"213": [2137, 2173]}}, "26": {"GyroPoolMath._calcAllTokensInGivenExactBptOut": {"404": [2636, 2678], "405": [2748, 2804], "406": [2729, 2732]}, "GyroPoolMath._calcProtocolFees": {"398": [6091, 6104], "399": [7089, 7120]}, "GyroPoolMath._calcTokensOutGivenExactBptIn": {"401": [4168, 4211], "402": [4281, 4341], "403": [4262, 4265]}, "GyroPoolMath._intLog2Halved": {"428": [10590, 10599], "429": [10613, 10620], "430": [10672, 10680], "431": [10694, 10701], "432": [10753, 10761], "433": [10775, 10782], "434": [10834, 10842], "435": [10856, 10862], "436": [10913, 10920], "437": [10934, 10940], "438": [10991, 10998], "439": [11012, 11018], "440": [11090, 11096]}, "GyroPoolMath._makeInitialGuess": {"409": [8968, 9047], "410": [9113, 9134], "411": [9198, 9209], "412": [9273, 9294], "413": [9358, 9369], "414": [9433, 9454], "415": [9518, 9529], "416": [9593, 9614], "417": [9678, 9689], "418": [9753, 9773], "419": [9838, 9849], "420": [9914, 9934], "421": [9999, 10010], "422": [10075, 10095], "423": [10160, 10171], "424": [10236, 10256], "425": [10321, 10332], "426": [10397, 10417], "427": [10445, 10457]}, "GyroPoolMath._sqrt": {"331": [7357, 7365], "332": [7461, 7521], "333": [7531, 7591], "334": [7601, 7661], "335": [7671, 7731], "336": [7741, 7801], "337": [7811, 7871], "338": [7881, 7941], "339": [8092, 8219]}, "GyroPoolMath.liquidityInvariantUpdate": {"259": [11919, 11953], "260": [12169, 12203]}}, "29": {"BalancerPoolToken._burnPoolTokens": {"199": [4092, 4113]}, "BalancerPoolToken._mintPoolTokens": {"231": [3979, 4003]}, "BalancerPoolToken.allowance": {"114": [2410, 2428], "115": [2459, 2497]}, "BalancerPoolToken.decreaseAllowance": {"89": [3653, 3685], "90": [3772, 3828], "91": [3849, 3860]}, "BalancerPoolToken.getVault": {"76": [1938, 1951]}, "BalancerPoolToken.transferFrom": {"14": [2867, 2968], "15": [2979, 3015], "16": [3218, 3273], "17": [3294, 3305]}}, "3": {}, "32": {"BasePoolAuthorization._canPerform": {"240": [2251, 2282], "241": [2428, 2496]}, "BasePoolAuthorization.getAuthorizer": {"93": [1933, 1956]}, "BasePoolAuthorization.getOwner": {"75": [1836, 1849]}}, "35": {}, "36": {}, "37": {"Buffer.add": {"407": [1504, 1534]}, "Buffer.next": {"327": [1276, 1296]}}, "38": {"PoolPriceOracle._getPastAccumulator": {"194": [6913, 6991]}, "PoolPriceOracle._getSample": {"181": [7580, 7602]}, "PoolPriceOracle._processPriceData": {"284": [6562, 6620], "285": [6675, 6705]}, "PoolPriceOracle.dirtyUninitializedOracleSamples": {"21": [3512, 3592], "22": [3947, 3971], "23": [3876, 3879]}, "PoolPriceOracle.getLargestSafeQueryWindow": {"117": [4117, 4132]}, "PoolPriceOracle.getLatest": {"94": [4234, 4310]}, "PoolPriceOracle.getPastAccumulators": {"47": [4935, 4973], "48": [5137, 5155], "49": [5169, 5241], "50": [5118, 5121]}, "PoolPriceOracle.getSample": {"44": [2874, 2932], "45": [2987, 3009]}, "PoolPriceOracle.getTimeWeightedAverage": {"11": [4496, 4535], "12": [4654, 4739], "13": [4635, 4638]}}, "39": {}, "40": {"Samples._accLogBptPrice": {"266": [6629, 6681]}, "Samples._accLogInvariant": {"268": [7116, 7168]}, "Samples._accLogPairPrice": {"264": [6143, 6196]}, "Samples._instLogBptPrice": {"265": [6388, 6441]}, "Samples._instLogInvariant": {"267": [6874, 6927]}, "Samples._instLogPairPrice": {"263": [5899, 5953]}, "Samples.pack": {"148": [7553, 8032]}, "Samples.timestamp": {"149": [5660, 5705]}, "Samples.unpack": {"182": [8468, 8508], "183": [8518, 8560], "184": [8570, 8608], "185": [8618, 8658], "186": [8668, 8708], "187": [8718, 8760], "188": [8770, 8800]}, "Samples.update": {"326": [4143, 4413]}}, "42": {}, "44": {"WeightedPool2TokensMiscData.logInvariant": {"163": [2316, 2362]}, "WeightedPool2TokensMiscData.logTotalSupply": {"164": [2532, 2581]}, "WeightedPool2TokensMiscData.oracleEnabled": {"167": [3221, 3267]}, "WeightedPool2TokensMiscData.oracleIndex": {"166": [3019, 3065]}, "WeightedPool2TokensMiscData.oracleSampleCreationTimestamp": {"165": [2786, 2852]}, "WeightedPool2TokensMiscData.setLogInvariant": {"244": [3697, 3758]}, "WeightedPool2TokensMiscData.setLogTotalSupply": {"245": [3985, 4051]}, "WeightedPool2TokensMiscData.setOracleEnabled": {"119": [4911, 4973]}, "WeightedPool2TokensMiscData.setOracleIndex": {"286": [4636, 4696]}, "WeightedPool2TokensMiscData.setOracleSampleCreationTimestamp": {"287": [4322, 4407]}, "WeightedPool2TokensMiscData.setSwapFeePercentage": {"120": [5197, 5270]}, "WeightedPool2TokensMiscData.swapFeePercentage": {"168": [3424, 3477]}}, "45": {"WeightedPoolUserDataHelpers.exactBptInForTokensOut": {"400": [2448, 2520]}, "WeightedPoolUserDataHelpers.initialAmountsIn": {"303": [1311, 1383]}, "WeightedPoolUserDataHelpers.joinKind": {"302": [964, 1016]}}, "46": {"Authentication._authenticateCaller": {"126": [2404, 2474]}, "Authentication.getActionId": {"72": [2842, 2910]}}, "47": {"_require": {"135": [946, 964]}}, "50": {}, "51": {}, "52": {}, "53": {"InputHelpers.ensureArrayIsSorted": {"118": [1369, 1402], "236": [1528, 1535], "237": [1689, 1740], "238": [1754, 1772], "239": [1630, 1633]}, "InputHelpers.ensureInputLengthMatch": {"169": [888, 934]}}, "54": {"LogCompression.toLowResLog": {"243": [2298, 2342]}}, "55": {"TemporarilyPausable._ensureNotPaused": {"142": [4272, 4311]}, "TemporarilyPausable._getBufferPeriodEndTime": {"133": [5084, 5111]}, "TemporarilyPausable._getPauseWindowEndTime": {"132": [4969, 4995]}, "TemporarilyPausable._isNotPaused": {"131": [4712, 4774]}, "TemporarilyPausable._setPaused": {"127": [3871, 3952], "128": [3983, 4066], "129": [4087, 4103], "130": [4113, 4144]}, "TemporarilyPausable.getPausedState": {"8": [3374, 3398], "9": [3408, 3453], "10": [3463, 3510]}}, "56": {"WordCodec.decodeBool": {"254": [9819, 9866]}, "WordCodec.decodeInt22": {"252": [12551, 12615]}, "WordCodec.decodeInt53": {"323": [13160, 13224]}, "WordCodec.decodeUint10": {"253": [10628, 10669]}, "WordCodec.decodeUint31": {"249": [11156, 11197]}, "WordCodec.decodeUint64": {"255": [11684, 11725]}, "WordCodec.encodeInt22": {"248": [9118, 9171]}, "WordCodec.encodeInt53": {"247": [9547, 9600]}, "WordCodec.encodeUint": {"246": [8696, 8727]}, "WordCodec.insertBool": {"122": [3305, 3367]}, "WordCodec.insertInt22": {"313": [7697, 7764]}, "WordCodec.insertUint10": {"328": [4969, 5014]}, "WordCodec.insertUint31": {"329": [6012, 6057]}, "WordCodec.insertUint64": {"123": [7104, 7149]}}, "57": {}, "58": {"LogExpMath._ln": {"356": [14549, 14585], "357": [15981, 15988], "358": [16039, 16048], "359": [16105, 16112], "360": [16163, 16172], "361": [16314, 16324], "362": [16334, 16342], "363": [16492, 16513], "364": [16527, 16536], "365": [16584, 16605], "366": [16619, 16628], "367": [16676, 16697], "368": [16711, 16720], "369": [16768, 16789], "370": [16803, 16812], "371": [16860, 16881], "372": [16895, 16904], "373": [16952, 16973], "374": [16987, 16996], "375": [17044, 17065], "376": [17079, 17088], "377": [17136, 17157], "378": [17171, 17180], "379": [17229, 17251], "380": [17265, 17275], "381": [17324, 17346], "382": [17360, 17370], "383": [18279, 18311], "384": [18321, 18341], "385": [18352, 18384], "386": [18394, 18414], "387": [18425, 18457], "388": [18467, 18487], "389": [18498, 18530], "390": [18540, 18560], "391": [18571, 18603], "392": [18613, 18634], "393": [18793, 18807], "394": [19073, 19103]}, "LogExpMath._ln_36": {"340": [19646, 19657], "341": [21063, 21083], "342": [20456, 20476], "343": [20414, 20446], "344": [20529, 20549], "345": [20487, 20519], "346": [20602, 20622], "347": [20560, 20592], "348": [20675, 20695], "349": [20633, 20665], "350": [20748, 20769], "351": [20706, 20738], "352": [20822, 20843], "353": [20780, 20812], "354": [20896, 20917], "355": [20854, 20886]}, "LogExpMath.ln": {"310": [13838, 13875], "311": [13951, 13976], "312": [14007, 14020]}}, "59": {"Math.divDown": {"261": [2238, 2276], "262": [2286, 2298]}, "Math.divUp": {"279": [2390, 2428], "280": [2465, 2473], "281": [2504, 2526]}, "Math.mul": {"189": [1897, 1948]}, "Math.sub": {"121": [1025, 1062]}}, "60": {}, "61": {"EIP712._domainSeparatorV4": {"150": [2466, 2567]}, "EIP712._hashTypedDataV4": {"225": [3295, 3375]}}, "62": {"ERC20._approve": {"124": [9468, 9504], "125": [9514, 9551]}, "ERC20._burn": {"270": [8587, 8655], "271": [8666, 8715], "272": [8726, 8814], "273": [8824, 8863], "274": [8873, 8915]}, "ERC20._mint": {"304": [7973, 8022], "305": [8033, 8072], "306": [8082, 8133], "307": [8143, 8185]}, "ERC20._transfer": {"136": [7195, 7266], "137": [7276, 7348], "138": [7359, 7406], "139": [7417, 7505], "140": [7515, 7570], "141": [7580, 7620]}, "ERC20.allowance": {"232": [3993, 4027]}, "ERC20.approve": {"1": [4271, 4308], "2": [4318, 4329]}, "ERC20.balanceOf": {"52": [3422, 3447]}, "ERC20.decimals": {"20": [3098, 3114]}, "ERC20.increaseAllowance": {"27": [5688, 5767]}, "ERC20.name": {"0": [2200, 2212]}, "ERC20.symbol": {"79": [2396, 2410]}, "ERC20.totalSupply": {"7": [3253, 3272]}, "ERC20.transfer": {"92": [3759, 3799]}}, "63": {"ERC20Permit.DOMAIN_SEPARATOR": {"24": [2438, 2465]}, "ERC20Permit.nonces": {"65": [2207, 2228]}, "ERC20Permit.permit": {"97": [1575, 1635], "98": [1902, 1981], "99": [1992, 2018], "100": [2028, 2059]}}, "64": {}, "65": {}, "66": {"SafeMath.add": {"155": [1019, 1056]}, "SafeMath.sub": {"242": [1861, 1888], "324": [1430, 1467]}}, "67": {}, "68": {}, "69": {}, "70": {}, "71": {}, "72": {}, "73": {}, "74": {}}}, "dependencies": ["Authentication", "BalancerPoolToken", "BasePoolAuthorization", "Buffer", "CappedLiquidity", "EIP712", "ERC20", "ERC20Permit", "Errors", "ExtensibleWeightedPool2Tokens", "FixedPoint", "Gyro2CLPMath", "Gyro2CLPOracleMath", "Gyro2CLPPoolErrors", "GyroConfigKeys", "GyroErrors", "GyroFixedPoint", "GyroPoolMath", "IAsset", "IAuthentication", "IAuthorizer", "IBasePool", "ICappedLiquidity", "IERC20", "IERC20Permit", "IFlashLoanRecipient", "IGyroConfig", "ILocallyPausable", "IMinimalSwapInfoPool", "IPoolPriceOracle", "IPoolSwapStructs", "IPriceOracle", "IProtocolFeesCollector", "ISignaturesValidator", "ITemporarilyPausable", "IVault", "IWETH", "InputHelpers", "LocallyPausable", "LogCompression", "LogExpMath", "Math", "PoolPriceOracle", "QueryProcessor", "SafeMath", "Samples", "TemporarilyPausable", "WeightedMath", "WeightedPool2TokensMiscData", "WeightedPoolUserDataHelpers", "WordCodec"], "deployedBytecode": "608060405234801561001057600080fd5b50600436106103275760003560e01c8063707dcd1e116101b85780639b02cdde11610104578063b48b5b40116100a2578063d5c096c41161007c578063d5c096c41461069b578063dd62ed3e146106ae578063f89f27ed146106c1578063ffd088eb146106c957610327565b8063b48b5b4014610678578063c0ff1a1514610680578063d505accf1461068857610327565b8063a9059cbb116100de578063a9059cbb14610642578063aaabadc514610655578063abd13afe1461065d578063b10be7391461066557610327565b80639b02cdde146106145780639d2c110c1461061c578063a457c2d71461062f57610327565b80638456cb5911610171578063893d20e81161014b578063893d20e8146105f45780638d928af8146105fc5780638dd9f89d1461060457806395d89b411461060c57610327565b80638456cb59146105c6578063851c1bb3146105ce57806387ec6817146105e157610327565b8063707dcd1e1461054457806370a082311461055957806374f3b0091461056c57806376e54a461461058d5780637ecebe00146105a05780638002df18146105b357610327565b806338fff2d0116102775780634a6b0b151161023057806360d1507c1161020a57806360d1507c146104ee578063679aefce146105145780636b8432391461051c5780636d785a871461053c57610327565b80634a6b0b15146104ab57806355c67628146104c55780636028bfd4146104cd57610327565b806338fff2d01461043c57806339509351146104445780633aeae0d3146104575780633c4dd5bb1461046c5780633f4ba83a1461048e57806344bbdb551461049657610327565b80631dccd830116102e4578063313ce567116102be578063313ce567146103f95780633331bc361461040e5780633644e5151461042157806338e9922e1461042957610327565b80631dccd830146103be57806323b872dd146103de578063292c914a146103f157610327565b806306fdde031461032c578063095ea7b31461034a5780630e608b301461036a57806316c38b3c1461037f57806318160ddd146103925780631c0de051146103a7575b600080fd5b6103346106d1565b604051610341919061534d565b60405180910390f35b61035d610358366004614b4c565b610767565b6040516103419190615246565b61037d610378366004614a27565b61077e565b005b61037d61038d366004614ddc565b61082f565b61039a610843565b6040516103419190615269565b6103af610849565b60405161034193929190615251565b6103d16103cc366004614d10565b610872565b604051610341919061520e565b61035d6103ec366004614a97565b610995565b61037d610a09565b610401610a3d565b604051610341919061542f565b61037d61041c3660046150d8565b610a46565b61039a610abe565b61037d6104373660046150c0565b610acd565b61039a610ae6565b61035d610452366004614b4c565b610b0a565b61045f610b45565b60405161034191906153a0565b61047f61047a3660046150f9565b610b90565b60405161034193929190615419565b61037d610be3565b61049e610cd8565b6040516103419190615185565b6104b3610ce7565b604051610341969594939291906152a2565b61039a610d42565b6104e06104db366004614df6565b610d4f565b604051610341929190615400565b6105016104fc3660046150c0565b610d80565b6040516103419796959493929190615272565b61039a610dc9565b61052f61052a366004614c42565b610dee565b6040516103419190615199565b61049e610ea4565b61054c610eb3565b60405161034191906151dd565b61039a610567366004614a27565b610ec3565b61057f61057a366004614df6565b610ee2565b604051610341929190615221565b61037d61059b366004614f4c565b610f87565b61039a6105ae366004614a27565b6110ae565b61037d6105c1366004614a27565b6110c9565b61037d6111af565b61039a6105dc366004614ef2565b611267565b6104e06105ef366004614df6565b6112c0565b61049e6112e5565b61049e611309565b6103d161132d565b610334611437565b61039a611498565b61039a61062a366004614fca565b61149e565b61035d61063d366004614b4c565b611664565b61035d610650366004614b4c565b6116a2565b61049e6116af565b61049e6116b9565b61039a610673366004614f1a565b6116c8565b61039a61175d565b61039a611763565b61037d610696366004614ad7565b61182f565b61057f6106a9366004614df6565b61199f565b61039a6106bc366004614a5f565b611abf565b6103d1611afc565b61039a611b06565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561075d5780601f106107325761010080835404028352916020019161075d565b820191906000526020600020905b81548152906001019060200180831161074057829003601f168201915b5050505050905090565b6000610774338484611b90565b5060015b92915050565b600c5460408051808201909152600e81526d1b9bdd08185d5d1a1bdc9a5e995960921b6020820152906001600160a01b031633146107d85760405162461bcd60e51b81526004016107cf919061534d565b60405180910390fd5b50600c80546001600160a01b0319166001600160a01b0383161790556040517fb8fd9afc34c38fcd13b9a3b7646482eb1fddcefb40af2c70609972816eba320890610824908390615185565b60405180910390a150565b610837611bf2565b61084081611c20565b50565b60025490565b6000806000610856611c9c565b159250610861611cb9565b915061086b611cdd565b9050909192565b606081516001600160401b038111801561088b57600080fd5b506040519080825280602002602001820160405280156108b5578160200160208202803683370190505b50905060006108c2611d01565b905060005b835181101561098e5773__$85f042f43089d976c21d0d184f206dc395$__6379eaef8260088684815181106108f857fe5b6020026020010151856040518463ffffffff1660e01b815260040161091f93929190615314565b60206040518083038186803b15801561093757600080fd5b505af415801561094b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096f9190614f34565b83828151811061097b57fe5b60209081029190910101526001016108c7565b5050919050565b6000806109a28533611abf565b90506109c6336001600160a01b03871614806109be5750838210155b61019e611d0e565b6109d1858585611d1c565b336001600160a01b038616148015906109ec57506000198114155b156109fe576109fe8533858403611b90565b506001949350505050565b610a11611e04565b610a19611bf2565b610a236001611e17565b6000610a2d610843565b1115610a3b57610a3b611e57565b565b60055460ff1690565b610a618183108015610a5a57506104008211155b6064611d0e565b6000610a766001600080600080600080611e9f565b9050825b82811015610ab857600081815260086020526040902054610a9a90611eff565b610ab05760008181526008602052604090208290555b600101610a7a565b50505050565b6000610ac8611f0b565b905090565b610ad5611bf2565b610add611e04565b61084081611fc9565b7f000000000000000000000000000000000000000000000000000000000000000090565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610774918590610b409086612032565b611b90565b610b4d6148c9565b5060408051606081018252600b5460ff81161515825261010081046001600160781b03166020830152600160801b90046001600160801b03169181019190915290565b600080600080610b9f85612044565b90506000610bad8615612044565b9050610bb98883612098565b9750610bc58782612098565b9650610bd28888886120a4565b945094509450505093509350939050565b600d546040805180820190915260118152703737ba103830bab9b29036b0b730b3b2b960791b6020820152906001600160a01b03163314610ca25760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c67578181015183820152602001610c4f565b50505050905090810190601f168015610c945780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50610cad6000610837565b6040517f215385c8bfc731925ec8068d7baa50f6b6f34417cc7804f7273dc2c0b3db279090600090a1565b600e546001600160a01b031681565b60008060008060008060006009549050610d0081612173565b9650610d0b8161217f565b9550610d168161218c565b9450610d2181612199565b9350610d2c816121a6565b9250610d37816121b3565b915050909192939495565b6000610ac86009546121b3565b60006060610d5f865160026121c0565b610d74898989898989896121cd6122e161235f565b97509795505050505050565b6000806000806000806000610d9b610400891061013b611d0e565b6000610da689612472565b9050610db181612484565b959f949e50929c50909a509850965090945092505050565b6000610ac8610dd6610843565b610de8610de1611763565b60026124e7565b9061250b565b606081516001600160401b0381118015610e0757600080fd5b50604051908082528060200260200182016040528015610e31578160200160208202803683370190505b5090506000610e3e611d01565b9050610e486148e9565b60005b8451811015610e9c57848181518110610e6057fe5b60200260200101519150610e7d8260000151848460200151612565565b848281518110610e8957fe5b6020908102919091010152600101610e4b565b505050919050565b600c546001600160a01b031681565b610ebb614900565b610ac86125fe565b6001600160a01b0381166000908152602081905260409020545b919050565b60608088610f0c610ef1611309565b6001600160a01b0316336001600160a01b03161460cd611d0e565b610f21610f17610ae6565b82146101f4611d0e565b610f2a87612624565b6000806000610f3e8d8d8d8d8d8d8d6121cd565b925092509250610f4e8c84612686565b610f57826122e1565b610f60816122e1565b610f68611c9c565b15610f7557610f75611e57565b909c909b509950505050505050505050565b600c5460408051808201909152600e81526d1b9bdd08185d5d1a1bdc9a5e995960921b6020820152906001600160a01b03163314610fd85760405162461bcd60e51b81526004016107cf919061534d565b50600b5460408051808201909152601081526f1c1bdbdb081a5cc81d5b98d85c1c195960821b60208201529060ff166110245760405162461bcd60e51b81526004016107cf919061534d565b508051600b8054602084015160408086015160ff19909316941515949094176fffffffffffffffffffffffffffffff0019166101006001600160781b0390921691909102176001600160801b03908116600160801b919092160217815590517f2abf5970d7bc1a2b36eaae52dd2cc353edb0337c7284ef8a01973081b4e0442491610824916153d5565b6001600160a01b031660009081526006602052604090205490565b600d546040805180820190915260118152703737ba103830bab9b29036b0b730b3b2b960791b60208201526001600160a01b039091169033821461114e5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610c67578181015183820152602001610c4f565b50600d80546001600160a01b0319166001600160a01b03848116918217909255604080519284168352602083019190915280517f1ffccd1fa96f4fb3415df8048a0fd107344e262d2d246c85105e2a3f8f3e81989281900390910190a15050565b600d546040805180820190915260118152703737ba103830bab9b29036b0b730b3b2b960791b6020820152906001600160a01b031633146112315760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610c67578181015183820152602001610c4f565b5061123c6001610837565b6040517f681eace576127d0553b224436a09801fb47d042942cbff59d7d4ff04d8fa03d790600090a1565b604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091526001600160e01b03198416828401528251602481840301815260449092019092528051910120919050565b600060606112d0865160026121c0565b610d748989898989898961269061276061235f565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b60606000611339611309565b6001600160a01b031663f94d466861134f610ae6565b6040518263ffffffff1660e01b815260040161136b9190615269565b60006040518083038186803b15801561138357600080fd5b505afa158015611397573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113bf9190810190614b77565b509150506113cc81612624565b611400816000815181106113dc57fe5b6020026020010151826001815181106113f157fe5b602002602001015160016120a4565b9091508360008151811061141057fe5b602002602001018460018151811061142457fe5b6020908102919091010191909152525090565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561075d5780601f106107325761010080835404028352916020019161075d565b600a5490565b60006114a8611e04565b83608001516114b8610ef1611309565b6114c3610f17610ae6565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031686602001516001600160a01b0316149050600061150b82612044565b905060006115198315612044565b90506115258783612098565b96506115318682612098565b955060008060006115438a8a886120a4565b92509250925061158a8b60a001518761155c578a61155e565b8b5b88611569578c61156b565b8b5b896115765784611578565b855b8a6115835786611585565b855b6127c2565b60008b51600181111561159957fe5b14156116085760006115b76115ac610d42565b60608e01519061286c565b90506115d96115d3828e606001516128c190919063ffffffff16565b87612098565b60608d015260006115ed8d8d8d87876128d7565b90506115f981876128f6565b9950505050505050505061165c565b6116168b6060015185612098565b60608c0152600061162a8c8c8c8686612902565b90506116368187612915565b905061165261164b611646610d42565b612921565b8290612947565b9850505050505050505b509392505050565b6000806116713385611abf565b905080831061168b5761168633856000611b90565b611698565b6116983385858403611b90565b5060019392505050565b6000610774338484611d1c565b6000610ac86129ad565b600d546001600160a01b031681565b600073__$85f042f43089d976c21d0d184f206dc395$__630397bee06008846116ef611d01565b6040518463ffffffff1660e01b815260040161170d939291906152cc565b60206040518083038186803b15801561172557600080fd5b505af4158015611739573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107789190614f34565b61040090565b60008061176e611309565b6001600160a01b031663f94d4668611784610ae6565b6040518263ffffffff1660e01b81526004016117a09190615269565b60006040518083038186803b1580156117b857600080fd5b505afa1580156117cc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526117f49190810190614b77565b5091505060006118026125fe565b905061180d82612624565b611828828260005b60200201518360015b6020020151612a27565b9250505090565b61183d8442111560d1611d0e565b6001600160a01b0380881660008181526006602090815260408083205481517f00000000000000000000000000000000000000000000000000000000000000008185015280830195909552948b166060850152608084018a905260a0840185905260c08085018a90528151808603909101815260e090940190528251920191909120906118c982612a5a565b9050600060018288888860405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015611927573d6000803e3d6000fd5b5050604051601f190151915061196990506001600160a01b0382161580159061196157508b6001600160a01b0316826001600160a01b0316145b6101f8611d0e565b6001600160a01b038b1660009081526006602052604090206001850190556119928b8b8b611b90565b5050505050505050505050565b606080886119ae610ef1611309565b6119b9610f17610ae6565b6119c1611e04565b60006119cb610843565b611a3b576119db8b8b8b88612aa6565b945090506119f0620f424082101560cc611d0e565b6119fe6000620f4240612b30565b611a0d89620f42408303612b30565b611a1684612760565b6040805160028082526060820183529091602083019080368337019050509250611aa9565b611a4488612624565b611a778789600081518110611a5557fe5b60200260200101518a600181518110611a6a57fe5b6020026020010151612b3a565b611a868b8b8b8b8b8b8b612690565b90955093509050611a978982612b30565b611aa084612760565b611aa9836122e1565b611ab1611e57565b505097509795505050505050565b6000611ac9611309565b6001600160a01b0316826001600160a01b03161415611aeb5750600019610778565b611af58383612b3f565b9050610778565b6060610ac8612b6a565b6201de2090565b80611b1781612bd9565b5050565b6000611b2983836055611b54565b9392505050565b6000611b2983836056611b7b565b6000611b4e838311156001611d0e565b50900390565b60006001821b1984168284611b6a576000611b6d565b60015b60ff16901b17949350505050565b6001600160401b03811b1992909216911b1790565b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6000611c096000356001600160e01b031916611267565b9050610840611c188233612c52565b610191611d0e565b8015611c4057611c3b611c31611cb9565b4210610193611d0e565b611c55565b611c55611c4b611cdd565b42106101a9611d0e565b6007805482151560ff19909116811790915560408051918252517f9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be649181900360200190a150565b6000611ca6611cdd565b421180610ac857505060075460ff161590565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000610ac8600954612199565b81611b1757611b1781612d54565b611d336001600160a01b0384161515610198611d0e565b611d4a6001600160a01b0383161515610199611d0e565b611d55838383612b3a565b6001600160a01b038316600090815260208190526040902054611d7b90826101a0612da7565b6001600160a01b038085166000908152602081905260408082209390935590841681522054611daa9082612032565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b610a3b611e0f611c9c565b610192611d0e565b600954611e249082611b1b565b6009556040517f3e350b41e86a8e10f804ade6d35340d620be35569cc75ac943e8bb14ab80ead190610824908390615246565b600954611e63816121a6565b1561084057611e7d611e76600a54612dbd565b8290612dfd565b9050611e99611e92611e8d610843565b612dbd565b8290612e0a565b60095550565b6000611eab8282612e18565b611eb684601f612e1c565b611ec1866054612e2d565b611ecc88606a612e1c565b611ed78a609f612e2d565b611ee28c60b5612e1c565b611eed8e60ea612e2d565b17171717171798975050505050505050565b60006107788282612e3a565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611f78612e44565b3060405160200180868152602001858152602001848152602001838152602001826001600160a01b031681526020019550505050505060405160208183030381529060405280519060200120905090565b611fdc64e8d4a5100082101560cb611d0e565b611ff267016345785d8a000082111560ca611d0e565b600954611fff9082611b30565b6009556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc90610824908390615269565b6000828201611b298482101583611d0e565b600081612071577f0000000000000000000000000000000000000000000000000000000000000000610778565b507f0000000000000000000000000000000000000000000000000000000000000000919050565b6000611b2983836124e7565b604080516002808252606082018352600092839283928392602083019080368337019050509050846120d657856120d8565b865b816000815181106120e557fe5b602002602001018181525050846120fc57866120fe565b855b8160018151811061210b57fe5b60200260200101818152505060006121216125fe565b905061212f82826000611815565b9450600061213d8287612e48565b90508661214e576020810151612151565b80515b94508661215f578051612165565b60208101515b935050505093509350939050565b60006107788282612e7c565b6000610778826016612e7c565b600061077882602c612e3a565b600061077882604b612ea3565b6000610778826055612eab565b6000610778826056612eb5565b611b178183146067611d0e565b600060608060006121dc6125fe565b90506121e6611c9c565b156122955760006122018983835b602002015184600161181e565b9050600061220f8383612e48565b905061225e898b60008151811061222257fe5b60200260200101518c60018151811061223757fe5b60200260200101518460006002811061224c57fe5b602002015185600160200201516127c2565b61226782612ec2565b6122718a88612eef565b909650945061228a8287612283610843565b6000612f3b565b600a55506122ab9050565b61229f8886612eef565b600019600a5590945092505b60408051600280825260608201835286928692919060208301908036833701905050935093509350509750975097945050505050565b612308816000815181106122f157fe5b60200260200101516123036001612044565b612f93565b8160008151811061231557fe5b6020026020010181815250506123438160018151811061233157fe5b60200260200101516123036000612044565b8160018151811061235057fe5b60200260200101818152505050565b33301461241d576000306001600160a01b0316600036604051612383929190615175565b6000604051808303816000865af19150503d80600081146123c0576040519150601f19603f3d011682016040523d82523d6000602084013e6123c5565b606091505b5050905080600081146123d457fe5b60046000803e6000516001600160e01b0319166343adbafb60e01b81146123ff573d6000803e3d6000fd5b506020600460003e604060205260243d03602460403e601c3d016000f35b61242686612624565b60008061243c8b8b8b8b8b8b8b8b63ffffffff16565b509150915061244e818463ffffffff16565b8051601f1982018390526343adbafb603f1983015260200260231982016044820181fd5b60009081526008602052604090205490565b600080600080600080600061249888612fb3565b96506124a388612fc0565b95506124ae88612fcd565b94506124b988612fda565b93506124c488612fe7565b92506124cf88612ff4565b91506124da88611eff565b9050919395979092949650565b6000828202611b2984158061250457508385838161250157fe5b04145b6003611d0e565b60008161251e5761251e60006004611d0e565b8261252b57506000610778565b670de0b6b3a76400008381029084828161254157fe5b04146125535761255360006005611d0e565b82818161255c57fe5b04949350505050565b6040516334171a8560e01b815260009073__$85f042f43089d976c21d0d184f206dc395$__906334171a85906125a6906008908890889088906004016152ee565b60206040518083038186803b1580156125be57600080fd5b505af41580156125d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125f69190614f34565b949350505050565b612606614900565b6126106001613001565b815261261c6000613001565b602082015290565b61264b8160008151811061263457fe5b60200260200101516126466001612044565b6124e7565b8160008151811061265857fe5b6020026020010181815250506123438160018151811061267457fe5b60200260200101516126466000612044565b611b178282613055565b6000606080600061269f6125fe565b905060006126ae8983836121f4565b905060006126bc8383612e48565b90506126cf898b60008151811061222257fe5b6126d882612ec2565b6000806126e58c8a61310c565b600b54919350915060ff161561270f5761270f826127028f610ec3565b61270a610843565b613146565b612723848361271c610843565b6001612f3b565b600a556040805160028082526060820183528492849291906020830190803683370190505097509750975050505050509750975097945050505050565b6127878160008151811061277057fe5b60200260200101516127826001612044565b613258565b8160008151811061279457fe5b602002602001018181525050612343816001815181106127b057fe5b60200260200101516127826000612044565b6009546127ce816121a6565b80156127d957508543115b156128645760006127ec8685878661328b565b90506000612805878688876128008861217f565b6132a5565b9050600061281284612199565b9050600061281f8561218c565b90506000612838828487876128338b612173565b6132e9565b90508083146119925761284b8682613340565b9550612857864261334e565b6009819055955050505050505b505050505050565b600082820283158061288657508284828161288357fe5b04145b6128965761289660006003611d0e565b806128a5576000915050610778565b670de0b6b3a764000060001982015b0460010191505092915050565b600082821115611b4e57611b4e60006001611d0e565b60006128ea85858860600151868661335c565b90505b95945050505050565b6000611b298383612f93565b60006128ea858588606001518686613400565b6000611b298383613258565b6000670de0b6b3a76400008210612939576000610778565b50670de0b6b3a76400000390565b60008161295a5761295a60006004611d0e565b8261296757506000610778565b670de0b6b3a76400008381029084828161297d57fe5b04146129a1576129a1670de0b6b3a764000085838161299857fe5b04146005611d0e565b8260018203816128b457fe5b60006129b7611309565b6001600160a01b031663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b1580156129ef57600080fd5b505afa158015612a03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac89190614a43565b6000806000806000612a3a88888861349f565b9350935093509350612a4e84848484613619565b98975050505050505050565b6000612a64611f0b565b82604051602001808061190160f01b81525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b600060606000612ab58461368d565b9050612ad06000826003811115612ac857fe5b1460ce611d0e565b6000612adb856136ac565b9050612ae9815160026121c0565b612af281612624565b6000612afc6125fe565b90506000612b0b8383836121f4565b90506000612b1a8260026124e7565b600a929092555099919850909650505050505050565b611b178282613760565b505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60408051600280825260608083018452926000929190602083019080368337019050509050612b9960016137f5565b81600081518110612ba657fe5b602002602001018181525050612bbc60006137f5565b81600181518110612bc957fe5b6020908102919091010152905090565b600281511015612be857610840565b600081600081518110612bf757fe5b602002602001015190506000600190505b8251811015612b3a576000838281518110612c1f57fe5b60200260200101519050612c48816001600160a01b0316846001600160a01b0316106065611d0e565b9150600101612c08565b600073ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b612c716112e5565b6001600160a01b031614158015612c8c5750612c8c83613849565b15612cb457612c996112e5565b6001600160a01b0316336001600160a01b0316149050610778565b612cbc6129ad565b6001600160a01b0316639be2a8848484306040518463ffffffff1660e01b815260040180848152602001836001600160a01b03168152602001826001600160a01b03168152602001935050505060206040518083038186803b158015612d2157600080fd5b505afa158015612d35573d6000803e3d6000fd5b505050506040513d6020811015612d4b57600080fd5b50519050610778565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6000612db68484111583611d0e565b5050900390565b600080612dc98361387b565b90506000808213612de257652d79883d20008203612dec565b652d79883d200082015b655af3107a40009005949350505050565b6000611b298383836138df565b6000611b29838360166138df565b1b90565b661fffffffffffff91909116901b90565b623fffff91909116901b90565b1c637fffffff1690565b4690565b612e50614900565b612e63600184815b6020020151846138f6565b8152612e7160008481612e58565b602082015292915050565b600082821c623fffff16621fffff8113612e9657806125f6565b623fffff19179392505050565b1c6103ff1690565b1c60019081161490565b1c6001600160401b031690565b600080600080612ed4600a5486613916565b9350935093509350612ee88484848461397f565b5050505050565b600060606000612efe8461368d565b90506001816003811115612f0e57fe5b1415612f2857612f1e858561399f565b9093509150612f33565b612f33610150612d54565b509250929050565b60008115612f6d576000612f5984612f53888861286c565b90612947565b9050612f6586826139d1565b9150506125f6565b6000612f7d84610de888886139e9565b9050612f8986826128c1565b9695505050505050565b6000612fa28215156004611d0e565b818381612fab57fe5b049392505050565b60006107788260ea612e7c565b60006107788260b5613a22565b600061077882609f612e7c565b600061077882606a613a22565b6000610778826054612e7c565b600061077882601f613a22565b60008161302e577f0000000000000000000000000000000000000000000000000000000000000000610778565b507f0000000000000000000000000000000000000000000000000000000000000000919050565b61306c6001600160a01b038316151561019b611d0e565b61307882600083612b3a565b6001600160a01b03821660009081526020819052604090205461309e90826101a1612da7565b6001600160a01b0383166000908152602081905260409020556002546130c49082613a55565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b60006060600061311b8461368d565b9050600381600381111561312b57fe5b141561313b57612f1e8585613a63565b612f33610136612d54565b60408051606081018252600b5460ff81161515825261010081046001600160781b031660208301819052600160801b9091046001600160801b0316928201929092529061319385856139d1565b11156040518060400160405280601a81526020017f6f7665722061646472657373206c697175696469747920636170000000000000815250906131e95760405162461bcd60e51b81526004016107cf919061534d565b5060408101516001600160801b031661320285846139d1565b11156040518060400160405280601981526020017f6f76657220676c6f62616c206c6971756964697479206361700000000000000081525090612ee85760405162461bcd60e51b81526004016107cf919061534d565b60006132678215156004611d0e565b8261327457506000610778565b81600184038161328057fe5b046001019050610778565b60008061329a86868686613a88565b9050612f8981612dbd565b6000806132b487878787613a88565b905060006132cc6132c5878461286c565b89906139d1565b905060006132d982612dbd565b9490940398975050505050505050565b600080613305858585426132fc8b612472565b93929190613ab0565b905060784288900310158061331a5786613323565b61332387613b02565b600081815260086020526040902092909255509695505050505050565b6000611b298383604b613b0f565b6000611b298383602c613b1f565b600061337e61337387670429d069189e00006139e9565b851115610130611d0e565b600061339c61339585670de0b6b3a764000261286c565b88906139d1565b905060006133b561339585670de0b6b3a763ffff6139e9565b90506133ce6133c483886139d1565b610de883896139e9565b925050506133e0858210610165613b31565b6128ed6133f586670429d069189e00006139e9565b821115610131611d0e565b6000613410858510610165613b31565b61343061342586670429d069189e00006139e9565b851115610131611d0e565b600061344761339585670de0b6b3a764000261286c565b9050600061346061339585670de0b6b3a763ffff6139e9565b905061347961346f82886128c1565b612f53848961286c565b92506128ed9150613494905087670429d069189e00006139e9565b821115610130611d0e565b60008080806134c06134b1878761250b565b670de0b6b3a7640000906128c1565b935060006134eb86896001815181106134d557fe5b602002602001015161250b90919063ffffffff16565b90506000613516888a60008151811061350057fe5b60200260200101516139e990919063ffffffff16565b905061352282826139d1565b94506135498960018151811061353457fe5b60200260200101518a60008151811061350057fe5b925050506135808661357a8861357a8b60008151811061356557fe5b60200260200101518c60008151811061350057fe5b906139e9565b915060006135c086610de88961357a670de0b6b3a764000060020261357a8e6001815181106135ab57fe5b60200260200101518f60008151811061350057fe5b905060006135f66135d1888061286c565b610de88b6001815181106135e157fe5b60200260200101518c60018151811061350057fe5b905061360c8161360686856139d1565b906139d1565b9350505093509350935093565b60008061362e86671bc16d674ec8000061286c565b905060006136488761357a86673782dace9d9000006139e9565b9050600061365686836139d1565b90506000613665826005613b3f565b9050600061367389836139d1565b905061367f818661250b565b9a9950505050505050505050565b60008180602001905160208110156136a457600080fd5b505192915050565b60608180602001905160408110156136c357600080fd5b8151602083018051604051929492938301929190846401000000008211156136ea57600080fd5b9083019060208201858111156136ff57600080fd5b825186602082028301116401000000008211171561371c57600080fd5b82525081516020918201928201910280838360005b83811015613749578181015183820152602001613731565b505050509190910160405250929695505050505050565b61376c60008383612b3a565b6002546137799082612032565b6002556001600160a01b03821660009081526020819052604090205461379f9082612032565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600081613822577f0000000000000000000000000000000000000000000000000000000000000000610778565b507f0000000000000000000000000000000000000000000000000000000000000000919050565b600061385b631c74c91760e11b611267565b82148061077857506138736350dd6ed960e01b611267565b909114919050565b600061388b600083136064611d0e565b670c7d713b49da0000821380156138a95750670f43fc2c04ee000082125b156138cf57670de0b6b3a76400006138c083613ccd565b816138c757fe5b059050610edd565b6138d882613deb565b9050610edd565b623fffff828116821b90821b198416179392505050565b60008361390c57613907828461418a565b6125f6565b6125f68284614196565b60008060008060008060008061392a6141a2565b9350935093509350836000141561394f57600097508796509094509250613976915050565b6000806139668c8c61395f610843565b8989614411565b909a509850929650909450505050505b92959194509250565b831561398f5761398f8285612b30565b8215610ab857610ab88184612b30565b6000606060006139ae846144a6565b905060006139c486836139bf610843565b6144c8565b9196919550909350505050565b600082820183811015611b2957611b29600080611d0e565b6000828202831580613a03575082848281613a0057fe5b04145b613a1357613a1360006003611d0e565b670de0b6b3a76400008161255c565b600082821c661fffffffffffff16660fffffffffffff8113613a4457806125f6565b661fffffffffffff19179392505050565b6000611b2983836001612da7565b600060606000613a72846144a6565b905060006139c48683613a83610843565b61454d565b60006706f05b59d3b20000612f89613aa482612f5387876139d1565b612f5383818a8a6139d1565b600080613abc87611eff565b830390506000818702613ace89612fc0565b0190506000828702613adf8a612fda565b0190506000838702613af08b612ff4565b01905061367f89848a858b868c611e9f565b60006107788260016145e8565b6103ff811b1992909216911b1790565b637fffffff811b1992909216911b1790565b81611b1757611b17816145f0565b600082613b4e57506000610778565b6000613b5984614600565b9050600281670de0b6b3a7640000860281613b7057fe5b04820181613b7a57fe5b049050600281670de0b6b3a7640000860281613b9257fe5b04820181613b9c57fe5b049050600281670de0b6b3a7640000860281613bb457fe5b04820181613bbe57fe5b049050600281670de0b6b3a7640000860281613bd657fe5b04820181613be057fe5b049050600281670de0b6b3a7640000860281613bf857fe5b04820181613c0257fe5b049050600281670de0b6b3a7640000860281613c1a57fe5b04820181613c2457fe5b049050600281670de0b6b3a7640000860281613c3c57fe5b04820181613c4657fe5b0490506000613c5582806139e9565b9050613c6b613c64838661286c565b86906139d1565b8111158015613c8d5750613c89613c82838661286c565b86906128c1565b8110155b61165c576040805162461bcd60e51b815260206004820152600c60248201526b17dcdc5c9d0811905253115160a21b604482015290519081900360640190fd5b670de0b6b3a7640000026000806a0c097ce7bc90715b34b9f160241b808401906ec097ce7bc90715b34b9f0fffffffff1985010281613d0857fe5b05905060006a0c097ce7bc90715b34b9f160241b82800205905081806a0c097ce7bc90715b34b9f160241b81840205915060038205016a0c097ce7bc90715b34b9f160241b82840205915060058205016a0c097ce7bc90715b34b9f160241b82840205915060078205016a0c097ce7bc90715b34b9f160241b82840205915060098205016a0c097ce7bc90715b34b9f160241b828402059150600b8205016a0c097ce7bc90715b34b9f160241b828402059150600d8205016a0c097ce7bc90715b34b9f160241b828402059150600f826002919005919091010295945050505050565b6000670de0b6b3a7640000821215613e2757613e1d826a0c097ce7bc90715b34b9f160241b81613e1757fe5b05613deb565b6000039050610edd565b60007e1600ef3172e58d2e933ec884fde10064c63b5372d805e203c00000000000008312613e7857770195e54c5dd42177f53a27172fa9ec630262827000000000830592506806f05b59d3b2000000015b73011798004d755d3c8bc8e03204cf44619e0000008312613eb0576b1425982cf597cd205cef7380830592506803782dace9d9000000015b606492830292026e01855144814a7ff805980ff00840008312613ef8576e01855144814a7ff805980ff008400068056bc75e2d63100000840205925068ad78ebc5ac62000000015b6b02df0ab5a80a22c61ab5a7008312613f33576b02df0ab5a80a22c61ab5a70068056bc75e2d6310000084020592506856bc75e2d631000000015b693f1fce3da636ea5cf8508312613f6a57693f1fce3da636ea5cf85068056bc75e2d631000008402059250682b5e3af16b18800000015b690127fa27722cc06cc5e28312613fa157690127fa27722cc06cc5e268056bc75e2d6310000084020592506815af1d78b58c400000015b68280e60114edb805d038312613fd65768280e60114edb805d0368056bc75e2d631000008402059250680ad78ebc5ac6200000015b680ebc5fb41746121110831261400157680ebc5fb4174612111068056bc75e2d631000009384020592015b6808f00f760a4b2db55d8312614036576808f00f760a4b2db55d68056bc75e2d6310000084020592506802b5e3af16b1880000015b6806f5f1775788937937831261406b576806f5f177578893793768056bc75e2d63100000840205925068015af1d78b58c40000015b6806248f33704b286603831261409f576806248f33704b28660368056bc75e2d63100000840205925067ad78ebc5ac620000015b6805c548670b9510e7ac83126140d3576805c548670b9510e7ac68056bc75e2d6310000084020592506756bc75e2d6310000015b600068056bc75e2d63100000840168056bc75e2d6310000080860302816140f657fe5b059050600068056bc75e2d63100000828002059050818068056bc75e2d63100000818402059150600382050168056bc75e2d63100000828402059150600582050168056bc75e2d63100000828402059150600782050168056bc75e2d63100000828402059150600982050168056bc75e2d63100000828402059150600b820501600202606485820105979650505050505050565b6000611b2983836139e9565b6000611b29838361250b565b600e5460405163bd02d0f560e01b81526000918291829182916001600160a01b039091169063bd02d0f5906141f4907550524f544f434f4c5f535741505f4645455f5045524360501b90600401615269565b60206040518083038186803b15801561420c57600080fd5b505afa158015614220573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906142449190614f34565b600e5460405163bd02d0f560e01b81526001600160a01b039091169063bd02d0f590614294907f50524f544f434f4c5f4645455f4759524f5f504f5254494f4e0000000000000090600401615269565b60206040518083038186803b1580156142ac57600080fd5b505afa1580156142c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906142e49190614f34565b600e546040516321f8a72160e01b81526001600160a01b03909116906321f8a72190614324906c4759524f5f545245415355525960981b90600401615269565b60206040518083038186803b15801561433c57600080fd5b505afa158015614350573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906143749190614a43565b600e546040516321f8a72160e01b81526001600160a01b03909116906321f8a721906143b3906b42414c5f545245415355525960a01b90600401615269565b60206040518083038186803b1580156143cb57600080fd5b505afa1580156143df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906144039190614a43565b935093509350935090919293565b6000808686116144265750600090508061449c565b60006144408561357a6144398a8c6128c1565b89906139e9565b90506000614458614451898b6128c1565b87906139e9565b9050600061446689836128c1565b90506000614474848361250b565b9050600061448288836139e9565b9050600061449083836128c1565b91975090955050505050505b9550959350505050565b60008180602001905160408110156144bd57600080fd5b506020015192915050565b606083516001600160401b03811180156144e157600080fd5b5060405190808252806020026020018201604052801561450b578160200160208202803683370190505b50905060005b845181101561165c5761452e83610de88688858151811061350057fe5b82828151811061453a57fe5b6020908102919091010152600101614511565b606083516001600160401b038111801561456657600080fd5b50604051908082528060200260200182016040528015614590578160200160208202803683370190505b50905060005b845181101561165c576145c983612f53868885815181106145b357fe5b602002602001015161286c90919063ffffffff16565b8282815181106145d557fe5b6020908102919091010152600101614596565b016103ff1690565b610840816223aca960e91b6147d2565b6000670de0b6b3a7640000821061462d57670de0b6b3a7640000614625818404614833565b1b9050610edd565b600a8211614640575063bc7c871c610edd565b6064821161465457506402540be400610edd565b6103e88211614669575064075cdd4719610edd565b612710821161467e575064174876e800610edd565b620186a0821161469457506449a0a4c700610edd565b620f424082116146aa575064e8d4a51000610edd565b6298968082116146c157506502e0466fc608610edd565b6305f5e10082116146d957506509184e72a000610edd565b633b9aca0082116146f15750651cc2c05dbc53610edd565b6402540be400821161470a5750655af3107a4000610edd565b64174876e8008211614724575066011f9b83a95b45610edd565b64e8d4a51000821161473e575066038d7ea4c68000610edd565b6509184e72a00082116147595750660b3c13249d90bb610edd565b655af3107a400082116147745750662386f26fc10000610edd565b66038d7ea4c6800082116147905750667058bf6e27a751610edd565b662386f26fc1000082116147ad575067016345785d8a0000610edd565b67016345785d8a000082116147cb5750670463777a4d8c892d610edd565b5080610edd565b62461bcd60e51b600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fd5b6000600160801b821061484b5760809190911c906040015b6801000000000000000082106148665760409190911c906020015b640100000000821061487d5760209190911c906010015b6201000082106148925760109190911c906008015b61010082106148a65760089190911c906004015b601082106148b95760049190911c906002015b60048210610edd57600101919050565b604080516060810182526000808252602082018190529181019190915290565b604080518082019091526000808252602082015290565b60405180604001604052806002906020820280368337509192915050565b8035610edd8161547d565b600082601f830112614939578081fd5b8151602061494e61494983615460565b61543d565b828152818101908583018385028701840188101561496a578586fd5b855b858110156149885781518452928401929084019060010161496c565b5090979650505050505050565b80358015158114610edd57600080fd5b600082601f8301126149b5578081fd5b81356001600160401b038111156149c857fe5b6149db601f8201601f191660200161543d565b8181528460208386010111156149ef578283fd5b816020850160208301379081016020019190915292915050565b803560028110610edd57600080fd5b803560038110610edd57600080fd5b600060208284031215614a38578081fd5b8135611b298161547d565b600060208284031215614a54578081fd5b8151611b298161547d565b60008060408385031215614a71578081fd5b8235614a7c8161547d565b91506020830135614a8c8161547d565b809150509250929050565b600080600060608486031215614aab578081fd5b8335614ab68161547d565b92506020840135614ac68161547d565b929592945050506040919091013590565b600080600080600080600060e0888a031215614af1578485fd5b8735614afc8161547d565b96506020880135614b0c8161547d565b95506040880135945060608801359350608088013560ff81168114614b2f578384fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215614b5e578182fd5b8235614b698161547d565b946020939093013593505050565b600080600060608486031215614b8b578081fd5b83516001600160401b0380821115614ba1578283fd5b818601915086601f830112614bb4578283fd5b81516020614bc461494983615460565b82815281810190858301838502870184018c1015614be0578788fd5b8796505b84871015614c0b578051614bf78161547d565b835260019690960195918301918301614be4565b5091890151919750909350505080821115614c24578283fd5b50614c3186828701614929565b925050604084015190509250925092565b60006020808385031215614c54578182fd5b82356001600160401b0380821115614c6a578384fd5b818501915085601f830112614c7d578384fd5b8135614c8b61494982615460565b818152848101908486016040808502870188018b1015614ca9578889fd5b8896505b84871015614d015780828c031215614cc3578889fd5b80518181018181108882111715614cd657fe5b8252614ce183614a18565b815282890135898201528452600196909601959287019290810190614cad565b50909998505050505050505050565b60006020808385031215614d22578182fd5b82356001600160401b0380821115614d38578384fd5b818501915085601f830112614d4b578384fd5b8135614d5961494982615460565b818152848101908486016060808502870188018b1015614d77578889fd5b8896505b84871015614d015780828c031215614d91578889fd5b604080518281018181108982111715614da657fe5b8252614db184614a18565b8152838a01358a82015281840135918101919091528452600196909601959287019290810190614d7b565b600060208284031215614ded578081fd5b611b2982614995565b600080600080600080600060e0888a031215614e10578081fd5b87359650602080890135614e238161547d565b96506040890135614e338161547d565b955060608901356001600160401b0380821115614e4e578384fd5b818b0191508b601f830112614e61578384fd5b8135614e6f61494982615460565b8082825285820191508585018f878886028801011115614e8d578788fd5b8795505b83861015614eaf578035835260019590950194918601918601614e91565b509850505060808b0135955060a08b0135945060c08b0135925080831115614ed5578384fd5b5050614ee38a828b016149a5565b91505092959891949750929550565b600060208284031215614f03578081fd5b81356001600160e01b031981168114611b29578182fd5b600060208284031215614f2b578081fd5b611b2982614a18565b600060208284031215614f45578081fd5b5051919050565b600060608284031215614f5d578081fd5b604051606081018181106001600160401b0382111715614f7957fe5b604052614f8583614995565b815260208301356001600160781b0381168114614fa0578283fd5b602082015260408301356001600160801b0381168114614fbe578283fd5b60408201529392505050565b600080600060608486031215614fde578081fd5b83356001600160401b0380821115614ff4578283fd5b818601915061012080838903121561500a578384fd5b6150138161543d565b905061501e83614a09565b815261502c6020840161491e565b602082015261503d6040840161491e565b6040820152606083013560608201526080830135608082015260a083013560a082015261506c60c0840161491e565b60c082015261507d60e0840161491e565b60e08201526101008084013583811115615095578586fd5b6150a18a8287016149a5565b9183019190915250976020870135975060409096013595945050505050565b6000602082840312156150d1578081fd5b5035919050565b600080604083850312156150ea578182fd5b50508035926020909101359150565b60008060006060848603121561510d578081fd5b833592506020840135915061512460408501614995565b90509250925092565b6000815180845260208085019450808401835b8381101561515c57815187529582019590820190600101615140565b509495945050505050565b6003811061517157fe5b9052565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b6020808252825182820181905260009190848201906040850190845b818110156151d1578351835292840192918401916001016151b5565b50909695505050505050565b60408101818360005b60028110156152055781518352602092830192909101906001016151e6565b50505092915050565b600060208252611b29602083018461512d565b600060408252615234604083018561512d565b82810360208401526128ed818561512d565b901515815260200190565b92151583526020830191909152604082015260600190565b90815260200190565b968752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b9586526020860194909452604085019290925260608401521515608083015260a082015260c00190565b838152606081016152e06020830185615167565b826040830152949350505050565b848152608081016153026020830186615167565b60408201939093526060015292915050565b600060a08201905084825261532d602083018551615167565b602084015160408381019190915290930151606082015260800152919050565b6000602080835283518082850152825b818110156153795785810183015185820160400152820161535d565b8181111561538a5783604083870101525b50601f01601f1916929092016040019392505050565b8151151581526020808301516001600160781b0316908201526040918201516001600160801b03169181019190915260600190565b905460ff811615158252600881901c6001600160781b0316602083015260801c604082015260600190565b6000838252604060208301526125f6604083018461512d565b9283526020830191909152604082015260600190565b60ff91909116815260200190565b6040518181016001600160401b038111828210171561545857fe5b604052919050565b60006001600160401b0382111561547357fe5b5060209081020190565b6001600160a01b038116811461084057600080fdfea26469706673582212206b6a0faf080d17e2aafcc59e7dedd7b09892611f514433d9b09fbc72df4e2e1264736f6c63430007060033", "deployedSourceMap": "1423:27104:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2138:81:62;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4172:164;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1132:199:12:-;;;;;;:::i;:::-;;:::i;:::-;;8686:89:13;;;;;;:::i;:::-;;:::i;3181:98:62:-;;;:::i;:::-;;;;;;;:::i;3154:363:55:-;;;:::i;:::-;;;;;;;;;:::i;4323:433:38:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2657:655:29:-;;;;;;:::i;:::-;;:::i;8200:259:13:-;;;:::i;3040:81:62:-;;;:::i;:::-;;;;;;;:::i;3414:588:38:-;;;;;;:::i;:::-;;:::i;2359:113:63:-;;;:::i;7025:156:13:-;;;;;;:::i;:::-;;:::i;6056:91::-;;;:::i;5584:211:62:-;;;;;;:::i;:::-;;:::i;1337:105:12:-;;;:::i;:::-;;;;;;;:::i;8782:695:2:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;1150:173:14:-;;;:::i;1761:29:2:-;;;:::i;:::-;;;;;;;:::i;6153:688:13:-;;;:::i;:::-;;;;;;;;;;;;:::i;6847:115::-;;;:::i;36540:770::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2516:500:38:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;39149:211:13:-;;;:::i;4762:496:38:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;768:34:12:-;;;:::i;2741:112:2:-;;;:::i;:::-;;;;;;;:::i;3337:117:62:-;;;;;;:::i;:::-;;:::i;23375:1359:13:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1448:385:12:-;;;;;;:::i;:::-;;:::i;2127:108:63:-;;;;;;:::i;:::-;;:::i;588:308:14:-;;;;;;:::i;:::-;;:::i;939:168::-;;;:::i;2487:430:46:-;;;;;;:::i;:::-;;:::i;35149:768:13:-;;;;;;:::i;:::-;;:::i;1776:80:32:-;;;:::i;1879:79:29:-;;;:::i;3359:434:2:-;;;:::i;2332:85:62:-;;;:::i;9367:98:13:-;;;:::i;5118:2711:2:-;;;;;;:::i;:::-;;:::i;3438:429:29:-;;;;;;:::i;:::-;;:::i;3657:170:62:-;;;;;;:::i;:::-;;:::i;1862:101:32:-;;;:::i;286:27:14:-;;;:::i;4145:172:38:-;;;;;;:::i;:::-;;:::i;3022:103::-;;;:::i;4640:453:2:-;;;:::i;1313:753:63:-;;;;;;:::i;:::-;;:::i;13421:2437:13:-;;;;;;:::i;:::-;;:::i;2260:254:29:-;;;;;;:::i;:::-;;:::i;8781:117:13:-;;;:::i;4029:110:38:-;;;:::i;2138:81:62:-;2207:5;2200:12;;;;;;;;;;;;;-1:-1:-1;;2200:12:62;;;;;;;;;;;;;;;;;;;;;;;;;;2175:13;;2200:12;;2207:5;;2200:12;;;2207:5;2200:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2138:81;:::o;4172:164::-;4255:4;4271:37;4280:10;4292:7;4301:6;4271:8;:37::i;:::-;-1:-1:-1;4325:4:62;4172:164;;;;;:::o;1132:199:12:-;1217:10;;1229:15;;;;;;;;;;;;-1:-1:-1;;;1229:15:12;;;;;-1:-1:-1;;;;;1217:10:12;1203;:24;1195:50;;;;-1:-1:-1;;;1195:50:12;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;1255:10:12;:24;;-1:-1:-1;;;;;;1255:24:12;-1:-1:-1;;;;;1255:24:12;;;;;1294:30;;;;;;1255:24;;1294:30;:::i;:::-;;;;;;;;1132:199;:::o;8686:89:13:-;2156:21:46;:19;:21::i;:::-;8750:18:13::1;8761:6;8750:10;:18::i;:::-;8686:89:::0;:::o;3181:98:62:-;3260:12;;3181:98;:::o;3154:363:55:-;3257:11;3282:26;3322:27;3384:14;:12;:14::i;:::-;3383:15;3374:24;;3429;:22;:24::i;:::-;3408:45;;3485:25;:23;:25::i;:::-;3463:47;;3154:363;;;:::o;4323:433:38:-;4520:14;;4456:24;;-1:-1:-1;;;;;4506:29:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4506:29:38;;4496:39;;4545:19;4567:17;:15;:17::i;:::-;4545:39;;4600:9;4595:155;4619:7;:14;4615:1;:18;4595:155;;;4667:14;:37;4705:8;4715:7;4723:1;4715:10;;;;;;;;;;;;;;4727:11;4667:72;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4654:7;4662:1;4654:10;;;;;;;;;;;;;;;;;:85;4635:3;;4595:155;;;;4323:433;;;;:::o;2657:655:29:-;2785:4;2801:24;2828:29;2838:6;2846:10;2828:9;:29::i;:::-;2801:56;-1:-1:-1;2867:101:29;-1:-1:-1;;;;;2876:20:29;;:10;:20;;:50;;;2920:6;2900:16;:26;;2876:50;9174:3:47;2867:8:29;:101::i;:::-;2979:36;2989:6;2997:9;3008:6;2979:9;:36::i;:::-;-1:-1:-1;;;;;3030:20:29;;:10;:20;;;;:55;;-1:-1:-1;;;3054:31:29;;;3030:55;3026:258;;;3218:55;3227:6;3235:10;3266:6;3247:16;:25;3218:8;:55::i;:::-;-1:-1:-1;3301:4:29;;2657:655;-1:-1:-1;;;;2657:655:29:o;8200:259:13:-;2970:18:55;:16;:18::i;:::-;2156:21:46::1;:19;:21::i;:::-;8270:23:13::2;8288:4;8270:17;:23::i;:::-;8399:1;8383:13;:11;:13::i;:::-;:17;8379:74;;;8416:26;:24;:26::i;:::-;8200:259::o:0;3040:81:62:-;3105:9;;;;3040:81;:::o;3414:588:38:-;3512:80;3534:8;3521:10;:21;:48;;;;;899:4:37;3546:8:38;:23;;3521:48;4838:3:47;3512:8:38;:80::i;:::-;3769:18;3790:33;3803:1;3806;3809;3812;3815;3818;3821;3790:12;:33::i;:::-;3769:54;-1:-1:-1;3850:10:38;3833:163;3866:8;3862:1;:12;3833:163;;;3899:11;;;;:8;:11;;;;;;:23;;:21;:23::i;:::-;3895:91;;3947:11;;;;:8;:11;;;;;:24;;;3895:91;3876:3;;3833:163;;;;3414:588;;;:::o;2359:113:63:-;2419:7;2445:20;:18;:20::i;:::-;2438:27;;2359:113;:::o;7025:156:13:-;2156:21:46;:19;:21::i;:::-;2970:18:55::1;:16;:18::i;:::-;7134:40:13::2;7156:17;7134:21;:40::i;6056:91::-:0;6133:7;6056:91;:::o;5584:211:62:-;5697:10;5672:4;5718:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;5718:32:62;;;;;;;;;;5672:4;;5688:79;;5718:32;;:48;;5755:10;5718:36;:48::i;:::-;5688:8;:79::i;1337:105:12:-;1390:16;;:::i;:::-;-1:-1:-1;1418:17:12;;;;;;;;1425:10;1418:17;;;;;;;;;;;-1:-1:-1;;;;;1418:17:12;;;;;-1:-1:-1;;;1418:17:12;;-1:-1:-1;;;;;1418:17:12;;;;;;;;;1337:105::o;8782:695:2:-;8973:24;9011:22;9047:23;9095:28;9126:31;9141:15;9126:14;:31::i;:::-;9095:62;;9167:29;9199:32;9215:15;9214:16;9199:14;:32::i;:::-;9167:64;;9258:46;9267:14;9283:20;9258:8;:46::i;:::-;9241:63;;9332:48;9341:15;9358:21;9332:8;:48::i;:::-;9314:66;;9397:73;9421:14;9437:15;9454;9397:23;:73::i;:::-;9390:80;;;;;;;;8782:695;;;;;;;:::o;1150:173:14:-;1205:12;;1233:18;;;;;;;;;;;;-1:-1:-1;;;1233:18:14;;;;;-1:-1:-1;;;;;1205:12:14;1221:10;1205:26;1197:55;;;;-1:-1:-1;;;1197:55:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1262:22;1278:5;1262:15;:22::i;:::-;1299:17;;;;;;;1150:173::o;1761:29:2:-;;;-1:-1:-1;;;;;1761:29:2;;:::o;6153:688:13:-;6236:19;6269:21;6304:37;6355:19;6388:18;6420:25;6470:16;6489:9;;6470:28;;6523:23;:8;:21;:23::i;:::-;6508:38;;6573:25;:8;:23;:25::i;:::-;6556:42;;6640:40;:8;:38;:40::i;:::-;6608:72;;6704:22;:8;:20;:22::i;:::-;6690:36;;6752:24;:8;:22;:24::i;:::-;6736:40;;6806:28;:8;:26;:28::i;:::-;6786:48;;6153:688;;;;;;;:::o;6847:115::-;6900:7;6926:29;:9;;:27;:29::i;36540:770::-;36800:13;36815:27;36854:55;36890:8;:15;36907:1;36854:35;:55::i;:::-;36920:137;36933:6;36941;36949:9;36960:8;36970:15;36987:25;37014:8;37024:11;37037:19;36920:12;:137::i;:::-;36540:770;;;;;;;;;;:::o;2516:500:38:-;2627:19;2660:22;2696:18;2728:21;2763:19;2796:22;2832:17;2874:58;899:4:37;2883:5:38;:19;6557:3:47;2874:8:38;:58::i;:::-;2943:14;2960:17;2971:5;2960:10;:17::i;:::-;2943:34;;2994:15;:6;:13;:15::i;:::-;2987:22;;;;-1:-1:-1;2987:22:38;;-1:-1:-1;2987:22:38;;-1:-1:-1;2987:22:38;-1:-1:-1;2987:22:38;-1:-1:-1;2987:22:38;;-1:-1:-1;2516:500:38;-1:-1:-1;;;2516:500:38:o;39149:211:13:-;39189:7;39303:50;39339:13;:11;:13::i;:::-;39303:27;39312:14;:12;:14::i;:::-;39328:1;39303:8;:27::i;:::-;:35;;:50::i;4762:496:38:-;4958:14;;4896:23;;-1:-1:-1;;;;;4945:28:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4945:28:38;;4935:38;;4983:19;5005:17;:15;:17::i;:::-;4983:39;;5033:35;;:::i;:::-;5083:9;5078:174;5102:7;:14;5098:1;:18;5078:174;;;5145:7;5153:1;5145:10;;;;;;;;;;;;;;5137:18;;5182:59;5202:5;:14;;;5218:11;5231:5;:9;;;5182:19;:59::i;:::-;5169:7;5177:1;5169:10;;;;;;;;;;;;;;;;;:72;5118:3;;5078:174;;;;4762:496;;;;;:::o;768:34:12:-;;;-1:-1:-1;;;;;768:34:12;;:::o;2741:112:2:-;2793:17;;:::i;:::-;2829;:15;:17::i;3337:117:62:-;-1:-1:-1;;;;;3429:18:62;;3403:7;3429:18;;;;;;;;;;;3337:117;;;;:::o;23375:1359:13:-;23669:16;23687;23652:6;3769:68;3800:10;:8;:10::i;:::-;-1:-1:-1;;;;;3778:33:13;:10;:33;5392:3:47;3769:8:13;:68::i;:::-;3847:55;3866:11;:9;:11::i;:::-;3856:6;:21;10241:3:47;3847:8:13;:55::i;:::-;23715:23:::1;23729:8;23715:13;:23::i;:::-;23750:19;23771:27:::0;23800:38:::1;23842:196;23867:6;23887;23907:9;23930:8;23952:15;23981:25;24020:8;23842:11;:196::i;:::-;23749:289;;;;;;24144:36;24160:6;24168:11;24144:15;:36::i;:::-;24292:31;24312:10;24292:19;:31::i;:::-;24333:42;24353:21;24333:19;:42::i;:::-;24608:14;:12;:14::i;:::-;24604:71;;;24638:26;:24;:26::i;:::-;24693:10:::0;;;;-1:-1:-1;23375:1359:13;-1:-1:-1;;;;;;;;;;23375:1359:13:o;1448:385:12:-;1545:10;;1557:15;;;;;;;;;;;;-1:-1:-1;;;1557:15:12;;;;;-1:-1:-1;;;;;1545:10:12;1531;:24;1523:50;;;;-1:-1:-1;;;1523:50:12;;;;;;;;:::i;:::-;-1:-1:-1;1591:10:12;:21;1614:9;;;;;;;;;;;;-1:-1:-1;;;1614:9:12;;;;;1591:21;;1583:41;;;;-1:-1:-1;;;1583:41:12;;;;;;;;:::i;:::-;-1:-1:-1;1659:17:12;;1635:10;:41;;1713:20;;;;1766:16;;;;;-1:-1:-1;;1635:41:12;;;;;;;;;;-1:-1:-1;;1686:47:12;1635:41;-1:-1:-1;;;;;1686:47:12;;;;;;;;-1:-1:-1;;;;;1743:39:12;;;-1:-1:-1;;;1743:39:12;;;;;;;;1798:28;;;;;;;:::i;2127:108:63:-;-1:-1:-1;;;;;2214:14:63;2188:7;2214:14;;;:7;:14;;;;;;;2127:108::o;588:308:14:-;697:12;;762:18;;;;;;;;;;;;-1:-1:-1;;;762:18:14;;;;-1:-1:-1;;;;;697:12:14;;;;750:10;727:33;;719:62;;;;-1:-1:-1;;;719:62:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;719:62:14;;;;;;;;;;;;;;;;;-1:-1:-1;791:12:14;:28;;-1:-1:-1;;;;;;791:28:14;-1:-1:-1;;;;;791:28:14;;;;;;;;;834:55;;;;;;;;;;;;;;;;;;;;;;;;;;;588:308;;:::o;939:168::-;992:12;;1020:18;;;;;;;;;;;;-1:-1:-1;;;1020:18:14;;;;;-1:-1:-1;;;;;992:12:14;1008:10;992:26;984:55;;;;-1:-1:-1;;;984:55:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;984:55:14;;;;;;;;;;;;;;;;;;1049:21;1065:4;1049:15;:21::i;:::-;1085:15;;;;;;;939:168::o;2487:430:46:-;2859:50;;;2876:22;2859:50;;;;;;;;-1:-1:-1;;;;;;2859:50:46;;;;;;;;;;;;;;;;;;;;;;;;2849:61;;;;;;2487:430::o;35149:768:13:-;35409:14;35425:26;35463:55;35499:8;:15;35516:1;35463:35;:55::i;:::-;35529:135;35542:6;35550;35558:9;35569:8;35579:15;35596:25;35623:8;35633:11;35646:17;35529:12;:135::i;1776:80:32:-;1843:6;1776:80;:::o;1879:79:29:-;1945:6;1879:79;:::o;3359:434:2:-;3414:30;3459:25;3490:10;:8;:10::i;:::-;-1:-1:-1;;;;;3490:24:2;;3515:11;:9;:11::i;:::-;3490:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3490:37:2;;;;;;;;;;;;:::i;:::-;3456:71;;;;3657:23;3671:8;3657:13;:23::i;:::-;3731:55;3755:8;3764:1;3755:11;;;;;;;;;;;;;;3768:8;3777:1;3768:11;;;;;;;;;;;;;;3781:4;3731:23;:55::i;:::-;3690:96;;;3693:13;3707:1;3693:16;;;;;;;;;;;;;3711:13;3725:1;3711:16;;;;;;;;;;;;;;;;;3690:96;;;;;-1:-1:-1;3359:434:2;:::o;2332:85:62:-;2403:7;2396:14;;;;;;;;;;;;;-1:-1:-1;;2396:14:62;;;;;;;;;;;;;;;;;;;;;;;;;;2371:13;;2396:14;;2403:7;;2396:14;;;2403:7;2396:14;;;;;;;;;;;;;;;;;;;;;;;;9367:98:13;9444:14;;9367:98;:::o;5118:2711:2:-;5314:7;2970:18:55;:16;:18::i;:::-;5289:7:2::1;:14;;;3769:68:13;3800:10;:8;:10::i;3769:68::-;3847:55;3866:11;:9;:11::i;3847:55::-;5356:15:2::2;::::0;::::2;::::0;5375:7:::2;-1:-1:-1::0;;;;;5356:26:2;;::::2;::::0;::::2;;5333:20;5424:31;5356:26:::0;5424:14:::2;:31::i;:::-;5393:62;;5465:29;5497:32;5513:15;5512:16;5497:14;:32::i;:::-;5465:64;;5600:46;5609:14;5625:20;5600:8;:46::i;:::-;5583:63;;5674:48;5683:15;5700:21;5674:8;:48::i;:::-;5656:66;;5812:24;5838:22:::0;5862:23:::2;5889:119;5926:14;5954:15;5983;5889:23;:119::i;:::-;5811:197;;;;;;6077:316;6104:7;:23;;;6141:15;:50;;6176:15;6141:50;;;6159:14;6141:50;6205:15;:50;;6241:14;6205:50;;;6223:15;6205:50;6269:15;:50;;6304:15;6269:50;;;6287:14;6269:50;6333:15;:50;;6369:14;6333:50;;;6351:15;6333:50;6077:13;:316::i;:::-;6424:24;6408:12:::0;;:40:::2;::::0;::::2;;;;;;;6404:1419;;;6667:17;6687:44;6708:22;:20;:22::i;:::-;6687:14;::::0;::::2;::::0;;:20:::2;:44::i;:::-;6667:64;;6848:61;6857:29;6876:9;6857:7;:14;;;:18;;:29;;;;:::i;:::-;6888:20;6848:8;:61::i;:::-;6831:14;::::0;::::2;:78:::0;6924:17:::2;6944:89;6831:7:::0;6968:14;6984:15;7001:14;7017:15;6944:14:::2;:89::i;:::-;6924:109;;7127:48;7142:9;7153:21;7127:14;:48::i;:::-;7120:55;;;;;;;;;;;;6404:1419;7223:47;7232:7;:14;;;7248:21;7223:8;:47::i;:::-;7206:14;::::0;::::2;:64:::0;7285:16:::2;7304:90;7206:7:::0;7329:14;7345:15;7362:14;7378:15;7304::::2;:90::i;:::-;7285:109;;7490:44;7503:8;7513:20;7490:12;:44::i;:::-;7479:55;;7761:51;7776:35;:22;:20;:22::i;:::-;:33;:35::i;:::-;7761:8:::0;;:14:::2;:51::i;:::-;7754:58;;;;;;;;;3912:1:13;2998::55::1;5118:2711:2::0;;;;;:::o;3438:429:29:-;3523:4;3539:24;3566:30;3576:10;3588:7;3566:9;:30::i;:::-;3539:57;;3621:16;3611:6;:26;3607:232;;3653:32;3662:10;3674:7;3683:1;3653:8;:32::i;:::-;3607:232;;;3772:56;3781:10;3793:7;3821:6;3802:16;:25;3772:8;:56::i;:::-;-1:-1:-1;3856:4:29;;3438:429;-1:-1:-1;;;3438:429:29:o;3657:170:62:-;3743:4;3759:40;3769:10;3781:9;3792:6;3759:9;:40::i;1862:101:32:-;1910:11;1940:16;:14;:16::i;286:27:14:-;;;-1:-1:-1;;;;;286:27:14;;:::o;4145:172:38:-;4215:7;4241:14;:30;4272:8;4282;4292:17;:15;:17::i;:::-;4241:69;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3022:103::-;899:4:37;3022:103:38;:::o;4640:453:2:-;4694:7;4716:25;4747:10;:8;:10::i;:::-;-1:-1:-1;;;;;4747:24:2;;4772:11;:9;:11::i;:::-;4747:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4747:37:2;;;;;;;;;;;;:::i;:::-;4713:71;;;;4794:28;4825:17;:15;:17::i;:::-;4794:48;;4973:23;4987:8;4973:13;:23::i;:::-;5014:72;5047:8;5057:10;5068:1;5057:13;;;;;5072:10;5083:1;5072:13;;;;;5014:32;:72::i;:::-;5007:79;;;;4640:453;:::o;1313:753:63:-;1575:60;1603:8;1584:15;:27;;5606:3:47;1575:8:63;:60::i;:::-;-1:-1:-1;;;;;1662:14:63;;;1646:13;1662:14;;;:7;:14;;;;;;;;;1717:68;;1728:16;1717:68;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1717:68:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;1707:79;;;;;;;;;1812:28;1707:79;1812:16;:28::i;:::-;1797:43;;1851:14;1868:24;1878:4;1884:1;1887;1890;1868:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1868:24:63;;-1:-1:-1;;1868:24:63;;;-1:-1:-1;1902:79:63;;-1:-1:-1;;;;;;1912:20:63;;;;;;1911:43;;-1:-1:-1;;;;;;1938:15:63;;;;;;;1911:43;10474:3:47;1902:8:63;:79::i;:::-;-1:-1:-1;;;;;1992:14:63;;;;;;:7;:14;;;;;-1:-1:-1;2009:9:63;;1992:26;;2028:31;1992:14;2044:7;2053:5;2028:8;:31::i;:::-;1313:753;;;;;;;;;;;:::o;13421:2437:13:-;13729:26;13757:38;13698:6;3769:68;3800:10;:8;:10::i;3769:68::-;3847:55;3866:11;:9;:11::i;3847:55::-;2970:18:55::1;:16;:18::i;:::-;13900:20:13::2;13934:13;:11;:13::i;:::-;13930:1744;;13996:54;14014:6;14022;14030:9;14041:8;13996:17;:54::i;:::-;13968:82:::0;-1:-1:-1;13968:82:13;-1:-1:-1;14345:58:13::2;2287:3;14354:28:::0;::::2;;5338:3:47;14345:8:13;:58::i;:::-;14417:41;14441:1;2287:3;14417:15;:41::i;:::-;14472:55;14488:9;2287:3;14499:12;:27;14472:15;:55::i;:::-;14614:28;14632:9;14614:17;:28::i;:::-;14756:16;::::0;;14770:1:::2;14756:16:::0;;;;;::::2;::::0;;;;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;;::::0;-1:-1:-1;14756:16:13::2;14732:40;;13930:1744;;;14803:23;14817:8;14803:13;:23::i;:::-;14903:56;14917:15;14934:8;14943:1;14934:11;;;;;;;;;;;;;;14947:8;14956:1;14947:11;;;;;;;;;;;;;;14903:13;:56::i;:::-;15025:228;15054:6;15078;15102:9;15129:8;15155:15;15188:25;15231:8;15025:11;:228::i;:::-;14974:279:::0;;-1:-1:-1;14974:279:13;-1:-1:-1;14974:279:13;-1:-1:-1;15367:40:13::2;15383:9:::0;14974:279;15367:15:::2;:40::i;:::-;15494:28;15512:9;15494:17;:28::i;:::-;15621:42;15641:21;15621:19;:42::i;:::-;15825:26;:24;:26::i;:::-;2998:1:55;13421:2437:13::0;;;;;;;;;;;:::o;2260:254:29:-;2341:7;2383:10;:8;:10::i;:::-;-1:-1:-1;;;;;2364:30:29;;;;;;2360:148;;;-1:-1:-1;;;2410:18:29;;2360:148;2466:31;2482:5;2489:7;2466:15;:31::i;:::-;2459:38;;;;8781:117:13;8836:16;8871:20;:18;:20::i;4029:110:38:-;4124:8;4029:110;:::o;1135:274:53:-;1345:5;1369:33;1345:5;1369:19;:33::i;:::-;1135:274;;:::o;4808:172:44:-;4892:7;4918:55;:4;4934:14;2092:2;4918:15;:55::i;:::-;4911:62;4808:172;-1:-1:-1;;;4808:172:44:o;5083:194::-;5178:7;5204:66;:4;5222:18;2155:2;5204:17;:66::i;948:166:59:-;1006:7;1025:37;1039:1;1034;:6;;4370:1:47;1025:8:59;:37::i;:::-;-1:-1:-1;1084:5:59;;;948:166::o;3094:280:56:-;3209:7;2126:10;3276:17;;3274:20;3258:36;;3287:6;3342:5;:13;;3354:1;3342:13;;;3350:1;3342:13;3334:22;;:32;;3312:55;;3094:280;-1:-1:-1;;;;3094:280:56:o;6887:269::-;-1:-1:-1;;;;;7074:18:56;;7072:21;7056:37;;;;7133:15;;7111:38;;6887:269::o;9345:213:62:-;-1:-1:-1;;;;;9468:18:62;;;;;;;-1:-1:-1;9468:18:62;;;;;;;;:27;;;;;;;;;;;;;:36;;;9519:32;;;;;;;;;;;;;;;;;9345:213;;;:::o;2300:181:46:-;2355:16;2374:20;-1:-1:-1;;;;;;2386:7:46;;;2374:11;:20::i;:::-;2355:39;;2404:70;2413:33;2425:8;2435:10;2413:11;:33::i;:::-;8353:3:47;2404:8:46;:70::i;3793:358:55:-;3849:6;3845:232;;;3871:81;3898:24;:22;:24::i;:::-;3880:15;:42;8455:3:47;3871:8:55;:81::i;:::-;3845:232;;;3983:83;4010:25;:23;:25::i;:::-;3992:15;:43;9885:3:47;3983:8:55;:83::i;:::-;4087:7;:16;;-1:-1:-1;;4087:16:55;;;;;;;;;;4118:26;;;;;;;;;;;;;;;;;3793:358;:::o;4544:237::-;4591:4;4737:25;:23;:25::i;:::-;4719:15;:43;:55;;;-1:-1:-1;;4767:7:55;;;;4766:8;;4544:237::o;4894:108::-;4976:19;4894:108;:::o;5008:110::-;5091:20;5008:110;:::o;34381:115:13:-;34440:7;34466:23;:9;;:21;:23::i;866:101:47:-;935:9;930:34;;946:18;954:9;946:7;:18::i;7068:559:62:-;7195:71;-1:-1:-1;;;;;7204:20:62;;;;8770:3:47;7195:8:62;:71::i;:::-;7276:72;-1:-1:-1;;;;;7285:23:62;;;;8838:3:47;7276:8:62;:72::i;:::-;7359:47;7380:6;7388:9;7399:6;7359:20;:47::i;:::-;-1:-1:-1;;;;;7437:17:62;;:9;:17;;;;;;;;;;;:68;;7459:6;9316:3:47;7437:21:62;:68::i;:::-;-1:-1:-1;;;;;7417:17:62;;;:9;:17;;;;;;;;;;;:88;;;;7538:20;;;;;;;:32;;7563:6;7538:24;:32::i;:::-;-1:-1:-1;;;;;7515:20:62;;;:9;:20;;;;;;;;;;;;:55;;;;7585:35;;;;;;;7515:20;;7585:35;;;;;;;;;;;;;7068:559;;;:::o;4220:98:55:-;4272:39;4281:14;:12;:14::i;:::-;8397:3:47;4272:8:55;:39::i;8465:158:13:-;8537:9;;:35;;8564:7;8537:26;:35::i;:::-;8525:9;:47;8587:29;;;;;;8608:7;;8587:29;:::i;34014:361::-;34088:9;;34111:24;34088:9;34111:22;:24::i;:::-;34107:262;;;34162:68;34187:42;34214:14;;34187:26;:42::i;:::-;34162:8;;:24;:68::i;:::-;34151:79;;34255:69;34282:41;34309:13;:11;:13::i;:::-;34282:26;:41::i;:::-;34255:8;;:26;:69::i;:::-;34338:9;:20;-1:-1:-1;34014:361:13:o;7270:786:40:-;7534:7;7992:40;:10;7534:7;7992:21;:40::i;:::-;7923:54;:15;2605:2;7923:27;:54::i;:::-;7852:56;:16;2668:2;7852:28;:56::i;:::-;7784:53;:14;2730:3;7784:26;:53::i;:::-;7714:55;:15;2794:3;7714:27;:55::i;:::-;7644;:15;2858:3;7644:27;:55::i;:::-;7572:57;:16;2923:3;7572:28;:57::i;:::-;:127;:197;:265;:336;:405;:460;;7270:786;-1:-1:-1;;;;;;;;7270:786:40:o;5583:129::-;5641:7;5667:38;:6;5641:7;5667:19;:38::i;2386:188:61:-;2447:7;2494:10;2506:12;2520:15;2537:13;:11;:13::i;:::-;2483:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2560:4;2483:83;;;;;;;;;;;;;;;;;;;;;;;;2473:94;;;;;;2386:188;-1:-1:-1;2386:188:61:o;7187:397:13:-;7263:87;2395:4;7272:17;:45;;5289:3:47;7263:8:13;:87::i;:::-;7360;2468:4;7369:17;:45;;5228:3:47;7360:8:13;:87::i;:::-;7470:9;;:49;;7501:17;7470:30;:49::i;:::-;7458:9;:61;7534:43;;;;;;7559:17;;7534:43;:::i;915:167:66:-;973:7;1004:5;;;1019:37;1028:6;;;;973:7;1019:8;:37::i;40099:135:13:-;40159:7;40185:6;:42;;40212:15;40185:42;;;-1:-1:-1;40194:15:13;;40099:135;-1:-1:-1;40099:135:13:o;40396:144::-;40476:7;40502:31;40511:6;40519:13;40502:8;:31::i;9483:1012:2:-;9910:16;;;9924:1;9910:16;;;;;;;;9677:24;;;;;;;;9910:16;;;;;;;;;;-1:-1:-1;9910:16:2;9882:44;;9950:15;:50;;9985:15;9950:50;;;9968:14;9950:50;9936:8;9945:1;9936:11;;;;;;;;;;;;;:64;;;;;10024:15;:50;;10060:14;10024:50;;;10042:15;10024:50;10010:8;10019:1;10010:11;;;;;;;;;;;;;:64;;;;;10085:28;10116:17;:15;:17::i;:::-;10085:48;-1:-1:-1;10163:72:2;10196:8;10085:48;10217:1;10206:13;;10163:72;10144:91;;10246:30;10279:51;10301:10;10313:16;10279:21;:51::i;:::-;10246:84;;10358:15;:51;;10394:15;;;;10358:51;;;10376:15;;10358:51;10341:68;;10437:15;:51;;10473:15;;10437:51;;;10455:15;;;;10437:51;10419:69;;9483:1012;;;;;;;;;;:::o;2239:130:44:-;2298:6;2323:39;:4;2298:6;2323:16;:39::i;2453:135::-;2514:6;2539:42;:4;1902:2;2539:16;:42::i;2691:168::-;2767:7;2793:59;:4;1978:2;2793:17;:59::i;2942:130::-;3000:7;3026:39;:4;2034:2;3026:17;:39::i;3145:129::-;3205:4;3228:39;:4;2092:2;3228:15;:39::i;3341:143::-;3405:7;3431:46;:4;2155:2;3431:17;:46::i;810:131:53:-;888:46;902:1;897;:6;5002:3:47;888:8:53;:46::i;18061:3093:2:-;18349:19;18382:27;18423:38;18641:28;18672:17;:15;:17::i;:::-;18641:48;;18896:14;:12;:14::i;:::-;18892:2083;;;19232:29;19264:72;19297:8;19307:10;19232:29;19307:13;;;;;19322:10;19333:1;19322:13;;19264:72;19232:104;;19350:30;19383:56;19405:10;19417:21;19383;:56::i;:::-;19350:89;;19516:90;19530:15;19547:8;19556:1;19547:11;;;;;;;;;;;;;;19560:8;19569:1;19560:11;;;;;;;;;;;;;;19573:12;19586:1;19573:15;;;;;;;;;;;19590:12;19603:1;19590:15;;;;19516:13;:90::i;:::-;19621:38;19637:21;19621:15;:38::i;:::-;19702:27;19710:8;19720;19702:7;:27::i;:::-;19674:55;;-1:-1:-1;19674:55:2;-1:-1:-1;20204:95:2;20242:21;19674:55;20278:13;:11;:13::i;:::-;20293:5;20204:37;:95::i;:::-;20187:14;:112;-1:-1:-1;18892:2083:2;;-1:-1:-1;18892:2083:2;;20558:27;20566:8;20576;20558:7;:27::i;:::-;-1:-1:-1;;20930:14:2;:34;20530:55;;-1:-1:-1;20530:55:2;-1:-1:-1;18892:2083:2;21130:16;;;21144:1;21130:16;;;;;;;;21105:11;;21118:10;;21130:16;21144:1;21130:16;;;;;;;;;;-1:-1:-1;21130:16:2;21097:50;;;;;;;18061:3093;;;;;;;;;;;:::o;41479:215:13:-;41571:46;41584:7;41592:1;41584:10;;;;;;;;;;;;;;41596:20;41611:4;41596:14;:20::i;:::-;41571:12;:46::i;:::-;41558:7;41566:1;41558:10;;;;;;;;;;;;;:59;;;;;41640:47;41653:7;41661:1;41653:10;;;;;;;;;;;;;;41665:21;41680:5;41665:14;:21::i;41640:47::-;41627:7;41635:1;41627:10;;;;;;;;;;;;;:60;;;;;41479:215;:::o;42946:6537::-;43609:10;43631:4;43609:27;43605:5872;;43923:28;;43905:12;;43931:4;;43923:28;;43905:12;;43942:8;;43923:28;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;43904:47;;;44169:7;44198:1;44193:3176;;;;47517:9;44193:3176;44649:4;44646:1;44643;44628:26;44698:1;44692:8;-1:-1:-1;;;;;;44688:81:13;-1:-1:-1;;;44912:77:13;;44906:2;;45041:16;45038:1;45035;45020:38;45093:16;45090:1;45083:27;44906:2;;46432;46426:4;46423:1;46408:27;46617:2;46611:4;46604:16;47025:2;47007:16;47003:25;46997:4;46991;46976:53;47347:2;47329:16;47325:25;47322:1;47315:36;44035:3523;47588:23;47602:8;47588:13;:23::i;:::-;47627:17;47646:29;47681:224;47706:6;47730;47754:9;47781:8;47807:15;47840:25;47883:8;47681:7;:224;;:::i;:::-;47626:279;;;;;47920:29;47936:12;47920:15;:29;;:::i;:::-;48430:19;;-1:-1:-1;;48817:23:13;;48857:24;;;49103:66;-1:-1:-1;;49085:16:13;;49078:92;-1:-1:-1;48426:28:13;-1:-1:-1;;49196:16:13;;49449:2;49439:13;;49196:16;49425:28;7503:106:38;7561:7;7587:15;;;:8;:15;;;;;;;7503:106::o;8128:679:40:-;8220:19;8253:22;8289:18;8321:21;8356:19;8389:22;8425:18;8483:25;8501:6;8483:17;:25::i;:::-;8468:40;;8536:24;8553:6;8536:16;:24::i;:::-;8518:42;;8584:24;8601:6;8584:16;:24::i;:::-;8570:38;;8635:23;8651:6;8635:15;:23::i;:::-;8618:40;;8683:25;8701:6;8683:17;:25::i;:::-;8668:40;;8736:24;8753:6;8736:16;:24::i;:::-;8718:42;;8783:17;8793:6;8783:9;:17::i;:::-;8770:30;;8128:679;;;;;;;;;:::o;1793:180:59:-;1851:7;1882:5;;;1897:51;1906:6;;;:20;;;1925:1;1920;1916;:5;;;;;;:10;1906:20;4467:1:47;1897:8:59;:51::i;3855:400:25:-;3917:7;3940:6;3936:74;;3962:37;3971:5;4516:1:47;3962:8:25;:37::i;:::-;4024:6;4020:45;;-1:-1:-1;4053:1:25;4046:8;;4020:45;1305:4;4095:7;;;;:1;:7;:1;4118:13;;;;;:20;4112:106;;4155:36;4164:5;4564:1:47;4155:8:25;:36::i;:::-;4247:1;4235:9;:13;;;;;;;3855:400;-1:-1:-1;;;;3855:400:25:o;6747:251:38:-;6920:71;;-1:-1:-1;;;6920:71:38;;6895:6;;6920:14;;-1:-1:-1;;6920:71:38;;6954:8;;6964;;6974:11;;6987:3;;6920:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6913:78;6747:251;-1:-1:-1;;;;6747:251:38:o;2859:245:2:-;2917:35;;:::i;:::-;2987:21;3003:4;2987:15;:21::i;:::-;2964:44;;3041:22;2982:1;3041:15;:22::i;:::-;3018:20;;;:45;:17;2859:245::o;40727:201:13:-;40813:42;40822:7;40830:1;40822:10;;;;;;;;;;;;;;40834:20;40849:4;40834:14;:20::i;:::-;40813:8;:42::i;:::-;40800:7;40808:1;40800:10;;;;;;;;;;;;;:55;;;;;40878:43;40887:7;40895:1;40887:10;;;;;;;;;;;;;;40899:21;40914:5;40899:14;:21::i;4016:104:29:-;4092:21;4098:6;4106;4092:5;:21::i;13786:2089:2:-;14083:7;14104:16;14134;14175:28;14206:17;:15;:17::i;:::-;14175:48;-1:-1:-1;14528:29:2;14560:72;14593:8;14175:48;14528:29;14603:13;;14560:72;14528:104;;14642:30;14675:56;14697:10;14709:21;14675;:56::i;:::-;14642:89;;14796:90;14810:15;14827:8;14836:1;14827:11;;;;;;;14796:90;14897:38;14913:21;14897:15;:38::i;:::-;14947:20;14969:26;14999:27;15007:8;15017;14999:7;:27::i;:::-;15041:10;:21;14946:80;;-1:-1:-1;14946:80:2;-1:-1:-1;15041:21:2;;15037:113;;;15078:61;15089:12;15103:20;15113:9;15103;:20::i;:::-;15125:13;:11;:13::i;:::-;15078:10;:61::i;:::-;15600:95;15638:21;15661:12;15675:13;:11;:13::i;:::-;15690:4;15600:37;:95::i;:::-;15583:14;:112;15851:16;;;15865:1;15851:16;;;;;;;;15826:12;;15840:9;;15851:16;15865:1;15851:16;;;;;;;;;;-1:-1:-1;15851:16:2;15818:50;;;;;;;;;;;13786:2089;;;;;;;;;;;:::o;42237:209:13:-;42327:44;42338:7;42346:1;42338:10;;;;;;;;;;;;;;42350:20;42365:4;42350:14;:20::i;:::-;42327:10;:44::i;:::-;42314:7;42322:1;42314:10;;;;;;;;;;;;;:57;;;;;42394:45;42405:7;42413:1;42405:10;;;;;;;;;;;;;;42417:21;42432:5;42417:14;:21::i;26510:1461:2:-;26734:9;;26757:24;26734:9;26757:22;:24::i;:::-;:58;;;;;26800:15;26785:12;:30;26757:58;26753:1212;;;26831:19;26853:96;26890:13;26905;26920;26935;26853:36;:96::i;:::-;26831:118;;26964:18;26985:216;27038:13;27069;27100;27131;27162:25;:8;:23;:25::i;:::-;26985:35;:216::i;:::-;26964:237;;27216:26;27245:22;:8;:20;:22::i;:::-;27216:51;;27281:43;27327:40;:8;:38;:40::i;:::-;27281:86;;27381:26;27410:220;27445:35;27498:18;27534:12;27564:11;27593:23;:8;:21;:23::i;:::-;27410:17;:220::i;:::-;27381:249;;27671:18;27649;:40;27645:310;;27772:43;:8;27796:18;27772:23;:43::i;:::-;27761:54;-1:-1:-1;27844:58:2;27761:54;27886:15;27844:41;:58::i;:::-;27920:9;:20;;;27833:69;-1:-1:-1;26753:1212:2;;;;;;26510:1461;;;;;;:::o;2718:615:25:-;2778:7;2815:5;;;2836:6;;;:26;;;2861:1;2856;2846:7;:11;;;;;;:16;2836:26;2830:96;;2879:36;2888:5;4467:1:47;2879:8:25;:36::i;:::-;2940:12;2936:51;;2975:1;2968:8;;;;;2936:51;1305:4;-1:-1:-1;;3303:11:25;;3302:19;;3325:1;3301:25;3294:32;;;2718:615;;;;:::o;1958:277::-;2016:7;2119:1;2114;:6;;2108:76;;2137:36;2146:5;4370:1:47;2137:8:25;:36::i;7835:467:2:-;8081:7;8167:128;8196:21;8219:22;8243:11;:18;;;8263:14;8279:15;8167:28;:128::i;:::-;8160:135;;7835:467;;;;;;;;:::o;41132:154:13:-;41218:7;41244:35;41257:6;41265:13;41244:12;:35::i;8308:468:2:-;8555:7;8641:128;8670:21;8693:22;8717:11;:18;;;8737:14;8753:15;8641:28;:128::i;41896:150:13:-;41980:7;42006:33;42017:6;42025:13;42006:10;:33::i;9831:112:25:-;9885:7;1305:4;9912:1;:7;9911:25;;9935:1;9911:25;;;-1:-1:-1;1305:4:25;9924:7;;9831:112::o;4460:722::-;4520:7;4543:6;4539:74;;4565:37;4574:5;4516:1:47;4565:8:25;:37::i;:::-;4627:6;4623:45;;-1:-1:-1;4656:1:25;4649:8;;4623:45;1305:4;4698:7;;;;:1;:7;:1;4721:13;;;;;:20;4715:121;;4758:51;1305:4;4779:1;4767:9;:13;;;;;;:20;4564:1:47;4758:8:25;:51::i;:::-;5169:1;5164;5152:9;:13;5151:19;;;;42452:488:13;42510:11;42907:10;:8;:10::i;:::-;-1:-1:-1;;;;;42907:24:13;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2672:1238:0:-;2818:7;3738:9;3749:10;3761:15;3778:10;3792:55;3817:8;3827:9;3838:8;3792:24;:55::i;:::-;3737:110;;;;;;;;3864:39;3884:1;3887:2;3891:7;3900:2;3864:19;:39::i;:::-;3857:46;2672:1238;-1:-1:-1;;;;;;;;2672:1238:0:o;3199:183:61:-;3276:7;3341:20;:18;:20::i;:::-;3363:10;3312:62;;;;;;-1:-1:-1;;;3312:62:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3302:73;;;;;;3295:80;;3199:183;;;:::o;11372:1017:2:-;11514:7;11523:16;11551:30;11584:19;:8;:17;:19::i;:::-;11551:52;-1:-1:-1;11613:70:2;11630:30;11622:4;:38;;;;;;;;;5443:3:47;11613:8:2;:70::i;:::-;11694:26;11723:27;:8;:25;:27::i;:::-;11694:56;;11760;11796:9;:16;11814:1;11760:35;:56::i;:::-;11826:24;11840:9;11826:13;:24::i;:::-;11861:28;11892:17;:15;:17::i;:::-;11861:48;-1:-1:-1;11920:26:2;11949:73;11982:9;11861:48;11920:26;11993:13;;11949:73;11920:102;;12239:20;12262:31;12271:18;12291:1;12262:8;:31::i;:::-;12304:14;:35;;;;-1:-1:-1;12304:35:2;12372:9;;-1:-1:-1;11372:1017:2;;-1:-1:-1;;;;;;;11372:1017:2:o;3900:110:29:-;3979:24;3985:9;3996:6;3979:5;:24::i;28256:172:2:-;;;;:::o;3885:149:62:-;-1:-1:-1;;;;;4000:18:62;;;3974:7;4000:18;;;-1:-1:-1;4000:18:62;;;;;;;;:27;;;;;;;;;;;;;3885:149::o;8904:298:13:-;9030:16;;;9044:1;9030:16;;;8965;9030;;;;;8965;8993:34;;9030:16;9044:1;9030:16;;;;;;;;;;-1:-1:-1;9030:16:13;8993:53;;9079:24;9098:4;9079:18;:24::i;:::-;9056:17;9074:1;9056:20;;;;;;;;;;;;;:47;;;;;9136:25;9155:5;9136:18;:25::i;:::-;9113:17;9131:1;9113:20;;;;;;;;;;;;;;;;;:48;9178:17;-1:-1:-1;8904:298:13;:::o;1415:374:53:-;1511:1;1496:5;:12;:16;1492:53;;;1528:7;;1492:53;1555:16;1574:5;1580:1;1574:8;;;;;;;;;;;;;;1555:27;;1597:9;1609:1;1597:13;;1592:191;1616:5;:12;1612:1;:16;1592:191;;;1649:15;1667:5;1673:1;1667:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;1689:51:53;-1:-1:-1;;;;;1698:18:53;;;;;;;4890:3:47;1689:8:53;:51::i;:::-;1765:7;-1:-1:-1;1630:3:53;;1592:191;;1969:544:32;2057:4;1663:42;2078:10;:8;:10::i;:::-;-1:-1:-1;;;;;2078:29:32;;;;;2077:63;;;2112:28;2131:8;2112:18;:28::i;:::-;2073:434;;;2272:10;:8;:10::i;:::-;-1:-1:-1;;;;;2258:24:32;:10;:24;;-1:-1:-1;2251:31:32;;2073:434;2435:16;:14;:16::i;:::-;:61;;;-1:-1:-1;;;2435:61:32;;;;;;;;-1:-1:-1;;;;;2435:61:32;;;;;;;2490:4;2435:61;;;;;;:27;;;;;;;:61;;;;;;;;;;;;;;;:27;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2435:61:32;;-1:-1:-1;2428:68:32;;1074:3172:47;-1:-1:-1;;;3588:3:47;3581:79;;;3799:66;3793:4;3786:80;3941:1;3935:4;3928:15;2210:2;2243:18;;;2336;;;2383;;;2215:4;2379:29;;;3057:2;3053:17;2195:18;;;;2288;;;;2284:29;;;;3040:1;3036:14;3025:26;;;;3021:50;;;;2999:73;;2994:3;2990:83;4008:4;4001:26;4234:3;;4224:14;1765:176:66;1842:7;1861:27;1875:1;1870;:6;;1878:9;1861:8;:27::i;:::-;-1:-1:-1;;1910:5:66;;;1765:176::o;2009:340:54:-;2068:6;2086:9;2098:28;2119:5;2098:13;:28::i;:::-;2086:40;;2187:18;2214:1;2209:2;:6;:78;;1324:6;2254:2;:33;2209:78;;;1324:6;2218:2;:33;2209:78;1259:4;2305:37;;;;-1:-1:-1;;;;2009:340:54:o;3594:171:44:-;3678:7;3704:54;:4;3721:13;3678:7;3704:16;:54::i;3878:180::-;3966:7;3992:59;:4;4009:15;1902:2;3992:16;:59::i;8603:131:56:-;8711:15;;8603:131::o;9370:237::-;2545:11;9563:25;;;;9562:37;;;9370:237::o;8941:::-;2386:11;9134:25;;;;9133:37;;;8941:237::o;11062:142::-;11171:14;2439:11;11163:34;;11062:142::o;3388:427:61:-;3790:9;;3765:44::o;3799:392:2:-;3942:35;;:::i;:::-;4016:50;4035:4;4041:10;4035:4;4041:13;;;;;4056:9;4016:18;:50::i;:::-;3993:73;;4099:51;4011:1;4125:10;4011:1;4125:13;;4099:51;4076:20;;;:74;:17;3799:392;-1:-1:-1;;3799:392:2:o;12135:487:56:-;12209:6;12257:14;;;2386:11;12249:34;2846:11;12558:19;;:57;;12610:5;12558:57;;;-1:-1:-1;;12581:25:56;;;-1:-1:-1;;;12135:487:56:o;10534:142::-;10643:14;2280:11;10635:34;;10534:142::o;9730:143::-;9835:14;2126:10;9827:33;;;9826:40;;9730:143::o;11590:142::-;11699:14;-1:-1:-1;;;;;11691:34:56;;11590:142::o;22967:583:2:-;23260:16;23278:20;23300;23322:19;23345:98;23384:14;;23412:21;23345:25;:98::i;:::-;23259:184;;;;;;;;23481:62;23493:8;23503:12;23517;23531:11;23481;:62::i;:::-;22967:583;;;;;:::o;21160:592::-;21250:19;21271:27;21310:30;21343:19;:8;:17;:19::i;:::-;21310:52;-1:-1:-1;21525:53:2;21517:4;:61;;;;;;;;;21513:233;;;21622:47;21650:8;21660;21622:27;:47::i;:::-;21594:75;;-1:-1:-1;21594:75:2;-1:-1:-1;21513:233:2;;;21700:35;7850:3:47;21700:7:2;:35::i;:::-;21160:592;;;;;;:::o;11477:743:26:-;11663:21;11732:13;11728:486;;;11835:10;11848:57;11888:16;11848:33;:10;11865:15;11848:16;:33::i;:::-;:39;;:57::i;:::-;11835:70;-1:-1:-1;11935:18:26;:10;11835:70;11935:14;:18::i;:::-;11919:34;;11728:486;;;;12081:10;12094:61;12138:16;12094:35;:10;12113:15;12094:18;:35::i;:61::-;12081:74;-1:-1:-1;12185:18:26;:10;12081:74;12185:14;:18::i;:::-;12169:34;11477:743;-1:-1:-1;;;;;;11477:743:26:o;2157:148:59:-;2219:7;2238:38;2247:6;;;4516:1:47;2238:8:59;:38::i;:::-;2297:1;2293;:5;;;;;;;2157:148;-1:-1:-1;;;2157:148:59:o;5816:144:40:-;5881:6;5906:47;:6;2923:3;5906:18;:47::i;6061:142::-;6125:6;6150:46;:6;2858:3;6150:18;:46::i;6306:142::-;6370:6;6395:46;:6;2794:3;6395:18;:46::i;6548:140::-;6611:6;6636:45;:6;2730:3;6636:18;:45::i;6791:143::-;6856:6;6881:46;:6;2668:2;6881:18;:46::i;7034:141::-;7098:6;7123:45;:6;2605:2;7123:18;:45::i;3110:141:2:-;3183:7;3209:10;:35;;3235:9;3209:35;;;-1:-1:-1;3222:10:2;;3110:141;-1:-1:-1;3110:141:2:o;8512:410:62:-;8587:68;-1:-1:-1;;;;;8596:21:62;;;;8968:3:47;8587:8:62;:68::i;:::-;8666:49;8687:7;8704:1;8708:6;8666:20;:49::i;:::-;-1:-1:-1;;;;;8747:18:62;;:9;:18;;;;;;;;;;;:67;;8770:6;9382:3:47;8747:22:62;:67::i;:::-;-1:-1:-1;;;;;8726:18:62;;:9;:18;;;;;;;;;;:88;8839:12;;:24;;8856:6;8839:16;:24::i;:::-;8824:12;:39;8878:37;;;;;;;;8904:1;;-1:-1:-1;;;;;8878:37:62;;;;;;;;;;;;8512:410;;:::o;15881:581:2:-;15971:20;15993:26;16031:30;16064:19;:8;:17;:19::i;:::-;16031:52;-1:-1:-1;16228:57:2;16220:4;:65;;;;;;;;;16216:240;;;16329:50;16360:8;16370;16329:30;:50::i;16216:240::-;16410:35;6263:3:47;16410:7:2;:35::i;1839:362:12:-;1979:36;;;;;;;;2005:10;1979:36;;;;;;;;;;;-1:-1:-1;;;;;1979:36:12;;;;;;;-1:-1:-1;;;1979:36:12;;;-1:-1:-1;;;;;1979:36:12;;;;;;;;;2033:29;:12;2050:11;2033:16;:29::i;:::-;:53;;2088:17;;;;;;;;;;;;;;;;;2025:81;;;;;-1:-1:-1;;;2025:81:12;;;;;;;;:::i;:::-;-1:-1:-1;2159:16:12;;;;-1:-1:-1;;;;;2124:51:12;:31;:12;2141:13;2124:16;:31::i;:::-;:51;;2177:16;;;;;;;;;;;;;;;;;2116:78;;;;;-1:-1:-1;;;2116:78:12;;;;;;;;:::i;2311:232:59:-;2371:7;2390:38;2399:6;;;4516:1:47;2390:8:59;:38::i;:::-;2443:6;2439:98;;-1:-1:-1;2472:1:59;2465:8;;2439:98;2525:1;2520;2516;:5;2515:11;;;;;;2511:1;:15;2504:22;;;;1971:789:1;2149:6;2607:17;2627:72;2642:8;2652:17;2671:8;2681:17;2627:14;:72::i;:::-;2607:92;;2716:37;2743:9;2716:26;:37::i;3258:1401::-;3469:6;4153:17;4173:72;4188:8;4198:17;4217:8;4227:17;4173:14;:72::i;:::-;4153:92;-1:-1:-1;4255:22:1;4280:39;4293:25;:8;4153:92;4293:14;:25::i;:::-;4280:8;;:12;:39::i;:::-;4255:64;;4329:24;4356:42;4383:14;4356:26;:42::i;:::-;4615:37;;;;;3258:1401;-1:-1:-1;;;;;;;;3258:1401:1:o;5786:955:38:-;5999:7;6119:14;6136:88;6167:12;6181:11;6194:12;6208:15;6136:23;6147:11;6136:10;:23::i;:::-;:30;:88;;;:30;:88::i;:::-;6119:105;-1:-1:-1;2237:9:38;6481:15;:47;;;:71;;;6576:44;;6609:11;6576:44;;;6588:18;:11;:16;:18::i;:::-;6675:21;;;;:8;:21;;;;;:30;;;;-1:-1:-1;6675:21:38;5786:955;-1:-1:-1;;;;;;5786:955:38:o;4534:169:44:-;4617:7;4643:53;:4;4661:12;2034:2;4643:17;:53::i;4197:217::-;4303:7;4329:78;:4;4347:17;1978:2;4329:17;:78::i;7619:2556:0:-;7821:17;9386:75;9407:32;:9;1463:6;9407:17;:32::i;:::-;9395:8;:44;;5915:3:47;9386:8:0;:75::i;:::-;9647:18;9668:60;9682:45;:15;9704:22;9682:21;:45::i;:::-;9668:9;;:13;:60::i;:::-;9647:81;-1:-1:-1;9742:20:0;9765:64;9780:48;:16;9805:22;9780:24;:48::i;9765:64::-;9742:87;-1:-1:-1;9856:64:0;9895:24;:10;9910:8;9895:14;:24::i;:::-;9856:30;:12;9877:8;9856:20;:30::i;:64::-;9844:76;;7619:2556;;9941:75;9963:10;9951:9;:22;234:3:3;9941:9:0;:75::i;:::-;10089:79;10111:34;:10;1518:6;10111:18;:34::i;:::-;10098:9;:47;;5966:3:47;10089:8:0;:79::i;10525:2512::-;10728:16;12314:75;12336:10;12324:9;:22;234:3:3;12314:9:0;:75::i;:::-;12399:79;12421:34;:10;1518:6;12421:18;:34::i;:::-;12408:9;:47;;5966:3:47;12399:8:0;:79::i;:::-;12664:18;12685:60;12699:45;:15;12721:22;12699:21;:45::i;12685:60::-;12664:81;-1:-1:-1;12759:20:0;12782:64;12797:48;:16;12822:22;12797:24;:48::i;12782:64::-;12759:87;-1:-1:-1;12872:62:0;12906:27;12759:87;12923:9;12906:16;:27::i;:::-;12872;:10;12889:9;12872:16;:27::i;:62::-;12861:73;-1:-1:-1;12955:75:0;;-1:-1:-1;12976:32:0;;-1:-1:-1;12976:9:0;1463:6;12976:17;:32::i;:::-;12964:8;:44;;5915:3:47;12955:8:0;:75::i;4146:1127::-;4334:9;;;;4463:51;4486:27;:9;4504:8;4486:17;:27::i;:::-;1305:4:25;;4463:22:0;:51::i;:::-;4459:55;;4528:14;4545:29;4565:8;4545;4554:1;4545:11;;;;;;;;;;;;;;:19;;:29;;;;:::i;:::-;4528:46;;4588:14;4605:30;4625:9;4605:8;4614:1;4605:11;;;;;;;;;;;;;;:19;;:30;;;;:::i;:::-;4588:47;-1:-1:-1;4654:18:0;:6;4588:47;4654:10;:18::i;:::-;4649:23;;4691:32;4711:8;4720:1;4711:11;;;;;;;;;;;;;;4691:8;4700:1;4691:11;;;;;;;:32;4686:37;;4146:1127;;4926:72;4988:9;4926:53;4969:9;4927:32;4947:8;4956:1;4947:11;;;;;;;;;;;;;;4927:8;4936:1;4927:11;;;;;;;:32;4926:42;;:53::i;:72::-;4916:82;;5008:12;5023:103;5117:8;5023:85;5098:9;5023:66;1305:4:25;5066:1:0;:22;5024:32;5044:8;5053:1;5044:11;;;;;;;;;;;;;;5024:8;5033:1;5024:11;;;;;;;5023:103;5008:118;-1:-1:-1;5136:12:0;5151:68;5194:24;5209:8;;5194:14;:24::i;:::-;5152:32;5172:8;5181:1;5172:11;;;;;;;;;;;;;;5152:8;5161:1;5152:11;;;;;;;5151:68;5136:83;-1:-1:-1;5239:27:0;5136:83;5239:17;:7;5251:4;5239:11;:17::i;:::-;:21;;:27::i;:::-;5229:37;;4146:1127;;;;;;;;;:::o;5775:792::-;5973:17;;6024:31;:1;6032:22;6024:7;:31::i;:::-;6002:53;-1:-1:-1;6124:15:0;6142:47;6187:1;6143:34;:2;6154:22;6143:10;:34::i;6142:47::-;6124:65;-1:-1:-1;6285:16:0;6304:20;:7;6124:65;6304:11;:20::i;:::-;6285:39;;6334:17;6354:31;6373:8;6383:1;6354:18;:31::i;:::-;6334:51;-1:-1:-1;6471:17:0;6491;:2;6334:51;6491:6;:17::i;:::-;6471:37;-1:-1:-1;6530:30:0;6471:37;6548:11;6530:17;:30::i;:::-;6518:42;5775:792;-1:-1:-1;;;;;;;;;;5775:792:0:o;867:156:45:-;927:25;982:4;971:45;;;;;;;;;;;;;;;-1:-1:-1;971:45:45;;867:156;-1:-1:-1;;867:156:45:o;1205:185::-;1273:26;1338:4;1327:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1327:56:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1327:56:45;;;;;;-1:-1:-1;1311:72:45;;1205:185;-1:-1:-1;;;;;;1205:185:45:o;7898:294:62:-;7973:49;8002:1;8006:7;8015:6;7973:20;:49::i;:::-;8048:12;;:24;;8065:6;8048:16;:24::i;:::-;8033:12;:39;-1:-1:-1;;;;;8103:18:62;;:9;:18;;;;;;;;;;;:30;;8126:6;8103:22;:30::i;:::-;-1:-1:-1;;;;;8082:18:62;;:9;:18;;;;;;;;;;;:51;;;;8148:37;;;;;;;8082:18;;:9;;8148:37;;;;;;;;;;7898:294;;:::o;9208:153:13:-;9280:7;9306:6;:48;;9336:18;9306:48;;;-1:-1:-1;9315:18:13;;9208:153;-1:-1:-1;9208:153:13:o;7590:279::-;7676:4;7724:51;-1:-1:-1;;;7724:11:13;:51::i;:::-;7712:8;:63;7711:151;;;-1:-1:-1;7805:56:13;-1:-1:-1;;;7805:11:13;:56::i;:::-;7793:68;;;;7590:279;-1:-1:-1;7590:279:13:o;13692:345:58:-;13737:6;13838:37;13851:1;13847;:5;4838:3:47;13838:8:58;:37::i;:::-;2964:13;13889:21;-1:-1:-1;13889:46:58;;;;-1:-1:-1;3019:13:58;13914:21;;13889:46;13885:146;;;1935:4;13958:9;13965:1;13958:6;:9::i;:::-;:18;;;;;;13951:25;;;;13885:146;14014:6;14018:1;14014:3;:6::i;:::-;14007:13;;;;7398:373:56;2386:11;7727:25;;;7726:37;;7583:18;;;7581:21;7565:37;;7704:60;7398:373;;;;;:::o;4197:365:2:-;4341:7;4379:10;:176;;4492:62;4533:9;4544;4492:40;:62::i;:::-;4379:176;;;4409:62;4450:9;4461;4409:40;:62::i;24309:914::-;24457:7;24478;24499;24520;24553:27;24582:30;24614:20;24636:19;24659:18;:16;:18::i;:::-;24552:125;;;;;;;;24773:19;24796:1;24773:24;24769:95;;;24821:1;;-1:-1:-1;24821:1:2;;-1:-1:-1;24827:12:2;;-1:-1:-1;24841:11:2;-1:-1:-1;24813:40:2;;-1:-1:-1;;24813:40:2;24769:95;24908:16;24926:20;24950:197;24994:17;25025:16;25055:13;:11;:13::i;:::-;25082:19;25115:22;24950:30;:197::i;:::-;24907:240;;-1:-1:-1;24907:240:2;-1:-1:-1;25190:12:2;;-1:-1:-1;25204:11:2;;-1:-1:-1;;;;;24309:914:2;;;;;;;;:::o;25229:434::-;25438:12;;25434:82;;25466:39;25482:12;25496:8;25466:15;:39::i;:::-;25572:16;;25568:89;;25604:42;25620:11;25633:12;25604:15;:42::i;21758:928::-;21909:7;21918:16;22361:19;22383:33;:8;:31;:33::i;:::-;22361:55;;22527:27;22557:80;22600:8;22610:11;22623:13;:11;:13::i;:::-;22557:42;:80::i;:::-;22655:11;;;;-1:-1:-1;21758:928:2;;-1:-1:-1;;;;21758:928:2:o;1675:277:25:-;1733:7;1837:5;;;1858:6;;;;1852:76;;1881:36;1890:5;4322:1:47;1881:8:25;:36::i;2241:247::-;2303:7;2340:5;;;2361:6;;;:26;;;2386:1;2381;2371:7;:11;;;;;;:16;2361:26;2355:96;;2404:36;2413:5;4467:1:47;2404:8:25;:36::i;:::-;1305:4;2468:7;:13;;12743:488:56;12817:6;12865:14;;;2545:11;12857:34;2901:11;13167:19;;:57;;13219:5;13167:57;;;-1:-1:-1;;13190:25:56;;;-1:-1:-1;;;12743:488:56:o;1353:121:66:-;1411:7;1437:30;1441:1;1444;4370::47;1437:3:66;:30::i;16468:528:2:-;16622:7;16631:16;16663:20;16686:36;:8;:34;:36::i;:::-;16663:59;;16833:26;16862:84;16908:8;16918:12;16932:13;:11;:13::i;:::-;16862:45;:84::i;648:858:1:-;823:7;1356:4;1377:122;1441:57;1356:4;1442:31;:8;1455:17;1442:12;:31::i;1441:57::-;1377;1417:16;1377:57;1378:8;1391:17;1378:12;:31::i;3387:1033:40:-;3588:7;3810:14;3853:17;3863:6;3853:9;:17::i;:::-;3834:16;:36;3810:61;;3881:22;3952:7;3933:16;:26;3906:24;3923:6;3906:16;:24::i;:::-;:53;3881:78;;3969:21;4037:7;4019:15;:25;3993:23;4009:6;3993:15;:23::i;:::-;:51;3969:75;;4054:22;4125:7;4106:16;:26;4079:24;4096:6;4079:16;:24::i;:::-;:53;4054:78;;4162:251;4184:16;4218:15;4251;4284:14;4316:16;4350:15;4383:16;4162:4;:251::i;1205:98:37:-;1257:7;1283:13;1287:5;1294:1;1283:3;:13::i;4752:269:56:-;2280:11;4939:18;;4937:21;4921:37;;;;4998:15;;4976:38;;4752:269::o;5795:::-;2439:11;5982:18;;5980:21;5964:37;;;;6041:15;;6019:38;;5795:269::o;256:103:24:-;326:9;321:35;;337:19;346:9;337:8;:19::i;7236:1013:26:-;7308:7;7331:10;7327:49;;-1:-1:-1;7364:1:26;7357:8;;7327:49;7386:13;7402:24;7420:5;7402:17;:24::i;:::-;7386:40;;7520:1;7510:5;1305:4:25;7480:5:26;:26;7479:36;;;;;;7470:5;:46;7469:52;;;;;;7461:60;;7590:1;7580:5;1305:4:25;7550:5:26;:26;7549:36;;;;;;7540:5;:46;7539:52;;;;;;7531:60;;7660:1;7650:5;1305:4:25;7620:5:26;:26;7619:36;;;;;;7610:5;:46;7609:52;;;;;;7601:60;;7730:1;7720:5;1305:4:25;7690:5:26;:26;7689:36;;;;;;7680:5;:46;7679:52;;;;;;7671:60;;7800:1;7790:5;1305:4:25;7760:5:26;:26;7759:36;;;;;;7750:5;:46;7749:52;;;;;;7741:60;;7870:1;7860:5;1305:4:25;7830:5:26;:26;7829:36;;;;;;7820:5;:46;7819:52;;;;;;7811:60;;7940:1;7930:5;1305:4:25;7900:5:26;:26;7899:36;;;;;;7890:5;:46;7889:52;;;;;;;-1:-1:-1;8039:20:26;8062;7889:52;;8062:13;:20::i;:::-;8039:43;-1:-1:-1;8116:33:26;8126:22;:5;8138:9;8126:11;:22::i;:::-;8116:5;;:9;:33::i;:::-;8100:12;:49;;:102;;;;-1:-1:-1;8169:33:26;8179:22;:5;8191:9;8179:11;:22::i;:::-;8169:5;;:9;:33::i;:::-;8153:12;:49;;8100:102;8092:127;;;;;-1:-1:-1;;;8092:127:26;;;;;;;;;;;;-1:-1:-1;;;8092:127:26;;;;;;;;;;;;;;19376:1714:58;1935:4;19646:11;19424:6;;-1:-1:-1;20056:10:58;;;;-1:-1:-1;;20031:10:58;;20030:21;20056:10;20029:38;;;;21082:1;20475;-1:-1:-1;20029:38:58;;;;20097:5;;;20096:16;;;20421:15;;;20420:26;;;20469:7;;;20456:20;;;20548:1;20494:15;;;20493:26;;;20542:7;;;20529:20;20621:1;20567:15;;;20566:26;;;20615:7;;;20602:20;20694:1;20640:15;;;20639:26;;;20688:7;;;20675:20;20767:2;20713:15;;;20712:26;;;20761:8;;;20748:21;20841:2;20787:15;;;20786:26;;;20835:8;;;20822:21;20915:2;20861:15;;;;20860:26;;;;20909:8;;;;20896:21;;;;21070:13;;;-1:-1:-1;;;19376:1714:58:o;14151:4959::-;14196:6;1935:4;14218:1;:10;14214:382;;;14558:26;14582:1;-1:-1:-1;14582:1:58;14562:21;;;;;14558:3;:26::i;:::-;14557:27;;14549:36;;;;14214:382;15921:10;15954:11;15949:16;;15945:114;;3214:56;15981:7;;;-1:-1:-1;3158:21:58;16039:9;15945:114;16078:11;16073:16;;16069:114;;3377:28;16105:7;;;-1:-1:-1;3322:20:58;16163:9;16069:114;16321:3;16334:8;;;;16314:10;3543:34;16469:7;;16465:82;;3543:34;2125:4;16497:10;;16496:17;;-1:-1:-1;3486:22:58;16527:9;16465:82;3672:27;16561:1;:7;16557:82;;3672:27;2125:4;16589:10;;16588:17;;-1:-1:-1;3615:22:58;16619:9;16557:82;3793:24;16653:1;:7;16649:82;;3793:24;2125:4;16681:10;;16680:17;;-1:-1:-1;3737:21:58;16711:9;16649:82;3911:22;16745:1;:7;16741:82;;3911:22;2125:4;16773:10;;16772:17;;-1:-1:-1;3855:21:58;16803:9;16741:82;4027:21;16837:1;:7;16833:82;;4027:21;2125:4;16865:10;;16864:17;;-1:-1:-1;3971:21:58;16895:9;16833:82;4142:21;16929:1;:7;16925:82;;4142:21;2125:4;16957:10;;;16956:17;;16987:9;16925:82;4257:21;17021:1;:7;17017:82;;4257:21;2125:4;17049:10;;17048:17;;-1:-1:-1;4201:20:58;17079:9;17017:82;4372:21;17113:1;:7;17109:82;;4372:21;2125:4;17141:10;;17140:17;;-1:-1:-1;4316:20:58;17171:9;17109:82;4489:21;17205:1;:8;17201:85;;4489:21;2125:4;17234:10;;17233:18;;-1:-1:-1;4432:20:58;17265:10;17201:85;4606:21;17300:1;:8;17296:85;;4606:21;2125:4;17329:10;;17328:18;;-1:-1:-1;4550:19:58;17360:10;17296:85;17883:8;2125:4;17921:1;:10;2125:4;;17896:1;:10;17895:21;17894:38;;;;;;;-1:-1:-1;17942:16:58;2125:4;17962:5;;;17961:16;;-1:-1:-1;18071:1:58;;2125:4;18286:15;;;18285:26;;-1:-1:-1;18340:1:58;18285:26;18334:7;18321:20;2125:4;18359:15;;;18358:26;;-1:-1:-1;18413:1:58;18358:26;18407:7;18394:20;2125:4;18432:15;;;18431:26;;-1:-1:-1;18486:1:58;18431:26;18480:7;18467:20;2125:4;18505:15;;;18504:26;;-1:-1:-1;18559:1:58;18504:26;18553:7;18540:20;2125:4;18578:15;;;18577:26;;-1:-1:-1;18632:2:58;18577:26;18626:8;18613:21;18806:1;18793:14;19100:3;19081:15;;;19080:23;;14151:4959;-1:-1:-1;;;;;;;14151:4959:58:o;13380:161:0:-;13479:7;13505:29;:9;13523:10;13505:17;:29::i;13129:159::-;13227:7;13253:28;:9;13271;13253:17;:28::i;25669:497:2:-;25873:10;;:61;;-1:-1:-1;;;25873:61:2;;25757:7;;;;;;;;-1:-1:-1;;;;;25873:10:2;;;;-1:-1:-1;;25873:61:2;;-1:-1:-1;;;;25873:61:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25948:10;;:64;;-1:-1:-1;;;25948:64:2;;-1:-1:-1;;;;;25948:10:2;;;;-1:-1:-1;;25948:64:2;;25967:44;;25948:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26026:10;;:55;;-1:-1:-1;;;26026:55:2;;-1:-1:-1;;;;;26026:10:2;;;;-1:-1:-1;;26026:55:2;;-1:-1:-1;;;;26026:55:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26095:10;;:54;;-1:-1:-1;;;26095:54:2;;-1:-1:-1;;;;;26095:10:2;;;;-1:-1:-1;;26095:54:2;;-1:-1:-1;;;;26095:54:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25852:307;;;;;;;;25669:497;;;;:::o;4717:2410:26:-;4953:7;4962;5696:17;5676:16;:37;5672:443;;-1:-1:-1;6099:1:26;;-1:-1:-1;6099:1:26;6091:13;;5672:443;6567:17;6587:96;6663:19;6588:65;6613:39;:16;6634:17;6613:20;:39::i;:::-;6588:16;;:24;:65::i;6587:96::-;6567:116;-1:-1:-1;6693:21:26;6717:68;6745:39;:16;6766:17;6745:20;:39::i;:::-;6717:19;;:27;:68::i;:::-;6693:92;-1:-1:-1;6795:19:26;6817:35;:16;6693:92;6817:20;:35::i;:::-;6795:57;-1:-1:-1;6862:14:26;6879:30;:9;6795:57;6879:17;:30::i;:::-;6862:47;-1:-1:-1;6968:16:26;6987:38;:22;6862:47;6987:30;:38::i;:::-;6968:57;-1:-1:-1;7035:20:26;7058;:6;6968:57;7058:10;:20::i;:::-;7097:8;;-1:-1:-1;7035:43:26;;-1:-1:-1;;;;;;4717:2410:26;;;;;;;;;:::o;2343:184:45:-;2417:19;2477:4;2466:54;;;;;;;;;;;;;;;-1:-1:-1;2466:54:45;;;;2343:184;-1:-1:-1;;2343:184:45:o;2942:1444:26:-;4195:15;;3094:27;;-1:-1:-1;;;;;4181:30:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4181:30:26;;4168:43;;4226:9;4221:131;4245:8;:15;4241:1;:19;4221:131;;;4297:44;4332:8;4297:26;4317:5;4297:8;4306:1;4297:11;;;;;;;:44;4281:10;4292:1;4281:13;;;;;;;;;;;;;;;;;:60;4262:3;;4221:131;;1673:1175;2662:15;;1829:26;;-1:-1:-1;;;;;2648:30:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2648:30:26;;2636:42;;2693:9;2688:127;2712:8;:15;2708:1;:19;2688:127;;;2763:41;2795:8;2763:25;2781:6;2763:8;2772:1;2763:11;;;;;;;;;;;;;;:17;;:25;;;;:::i;:41::-;2748:9;2758:1;2748:12;;;;;;;;;;;;;;;;;:56;2729:3;;2688:127;;1418:123:37;1512:14;1511:23;;;1418:123::o;793:128:24:-;841:29;850:9;-1:-1:-1;;;841:8:24;:29::i;8837:1637:26:-;8902:7;1305:4:25;8925:5:26;:27;8921:1547;;1305:4:25;8982:42:26;1305:4:25;8997:5:26;:26;8982:14;:42::i;:::-;8975:72;;-1:-1:-1;8968:79:26;;8921:1547;9091:2;9082:5;:11;9078:71;;-1:-1:-1;1568:10:26;9113:21;;9078:71;9175:3;9166:5;:12;9162:62;;-1:-1:-1;9205:4:26;9198:11;;9162:62;9250:3;9241:5;:12;9237:72;;-1:-1:-1;1509:11:26;9273:21;;9237:72;9335:3;9326:5;:12;9322:62;;-1:-1:-1;9365:4:26;9358:11;;9322:62;9410:3;9401:5;:12;9397:72;;-1:-1:-1;1449:12:26;9433:21;;9397:72;9495:3;9486:5;:12;9482:62;;-1:-1:-1;9525:4:26;9518:11;;9482:62;9570:3;9561:5;:12;9557:72;;-1:-1:-1;1388:13:26;9593:21;;9557:72;9655:3;9646:5;:12;9642:62;;-1:-1:-1;9685:4:26;9678:11;;9642:62;9730:3;9721:5;:12;9717:71;;-1:-1:-1;1326:14:26;9753:20;;9717:71;9814:4;9805:5;:13;9801:63;;-1:-1:-1;9845:4:26;9838:11;;9801:63;9890:4;9881:5;:13;9877:72;;-1:-1:-1;1264:15:26;9914:20;;9877:72;9975:4;9966:5;:13;9962:63;;-1:-1:-1;10006:4:26;9999:11;;9962:63;10051:4;10042:5;:13;10038:72;;-1:-1:-1;1201:16:26;10075:20;;10038:72;10136:4;10127:5;:13;10123:63;;-1:-1:-1;10167:4:26;10160:11;;10123:63;10212:4;10203:5;:13;10199:72;;-1:-1:-1;1137:17:26;10236:20;;10199:72;10297:4;10288:5;:13;10284:63;;-1:-1:-1;10328:4:26;10321:11;;10284:63;10373:4;10364:5;:13;10360:72;;-1:-1:-1;1072:18:26;10397:20;;10360:72;-1:-1:-1;10452:5:26;10445:12;;1028:3379:24;-1:-1:-1;;;1091:18:24;3742:79;;;3960:66;3954:4;3947:80;4102:1;4096:4;4089:15;2230:2;2263:18;;;2308;;;2235:4;2304:29;;;3106:1;3197:14;2215:18;;;;3186:26;;;;2356:18;;;;2403;;;2399:29;;3218:2;3214:17;3182:50;3096:4;3102:18;;;;;;3092:29;3088:2;3084:38;3161:72;;;;3156:3;3152:82;4169:4;4162:26;1120:14;;;;;4395:3;;4385:14;10480:633:26;10536:9;-1:-1:-1;;;10561:13:26;;10557:74;;10596:3;10590:9;;;;;10618:2;10613:7;10557:74;10649:7;10644:1;:12;10640:72;;10678:2;10672:8;;;;;10699:2;10694:7;10640:72;10730:7;10725:1;:12;10721:72;;10759:2;10753:8;;;;;10780:2;10775:7;10721:72;10811:7;10806:1;:12;10802:71;;10840:2;10834:8;;;;;10861:1;10856:6;10802:71;10891:6;10886:1;:11;10882:69;;10919:1;10913:7;;;;;10939:1;10934:6;10882:69;10969:6;10964:1;:11;10960:69;;10997:1;10991:7;;;;;11017:1;11012:6;10960:69;11047:6;11042:1;:11;11038:69;;11095:1;11090:6;;10480:633;-1:-1:-1;10480:633:26:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:138:76:-;84:20;;113:33;84:20;113:33;:::i;157:699::-;;281:3;274:4;266:6;262:17;258:27;248:2;;303:5;296;289:20;248:2;336:6;330:13;362:4;386:62;401:46;444:2;401:46;:::i;:::-;386:62;:::i;:::-;482:15;;;513:12;;;;545:15;;;591:11;;;579:24;;575:33;;572:42;-1:-1:-1;569:2:76;;;631:5;624;617:20;569:2;657:5;671:156;685:2;682:1;679:9;671:156;;;742:10;;730:23;;773:12;;;;805;;;;703:1;696:9;671:156;;;-1:-1:-1;845:5:76;;238:618;-1:-1:-1;;;;;;;238:618:76:o;861:162::-;928:20;;984:13;;977:21;967:32;;957:2;;1013:1;1010;1003:12;1028:542;;1125:3;1118:4;1110:6;1106:17;1102:27;1092:2;;1147:5;1140;1133:20;1092:2;1174:20;;-1:-1:-1;;;;;1206:26:76;;1203:2;;;1235:9;1203:2;1270:54;1318:4;-1:-1:-1;;1312:2:76;1293:13;;1289:27;1285:38;1270:54;:::i;:::-;1349:2;1340:7;1333:19;1395:3;1388:4;1383:2;1375:6;1371:15;1367:26;1364:35;1361:2;;;1416:5;1409;1402:20;1361:2;1485;1478:4;1470:6;1466:17;1459:4;1450:7;1446:18;1433:55;1508:16;;;1526:4;1504:27;1497:42;;;;1512:7;1082:488;-1:-1:-1;;1082:488:76:o;1575:152::-;1652:20;;1701:1;1691:12;;1681:2;;1717:1;1714;1707:12;1732:152;1809:20;;1858:1;1848:12;;1838:2;;1874:1;1871;1864:12;1889:259;;2001:2;1989:9;1980:7;1976:23;1972:32;1969:2;;;2022:6;2014;2007:22;1969:2;2066:9;2053:23;2085:33;2112:5;2085:33;:::i;2153:263::-;;2276:2;2264:9;2255:7;2251:23;2247:32;2244:2;;;2297:6;2289;2282:22;2244:2;2334:9;2328:16;2353:33;2380:5;2353:33;:::i;2421:402::-;;;2550:2;2538:9;2529:7;2525:23;2521:32;2518:2;;;2571:6;2563;2556:22;2518:2;2615:9;2602:23;2634:33;2661:5;2634:33;:::i;:::-;2686:5;-1:-1:-1;2743:2:76;2728:18;;2715:32;2756:35;2715:32;2756:35;:::i;:::-;2810:7;2800:17;;;2508:315;;;;;:::o;2828:470::-;;;;2974:2;2962:9;2953:7;2949:23;2945:32;2942:2;;;2995:6;2987;2980:22;2942:2;3039:9;3026:23;3058:33;3085:5;3058:33;:::i;:::-;3110:5;-1:-1:-1;3167:2:76;3152:18;;3139:32;3180:35;3139:32;3180:35;:::i;:::-;2932:366;;3234:7;;-1:-1:-1;;;3288:2:76;3273:18;;;;3260:32;;2932:366::o;3303:853::-;;;;;;;;3515:3;3503:9;3494:7;3490:23;3486:33;3483:2;;;3537:6;3529;3522:22;3483:2;3581:9;3568:23;3600:33;3627:5;3600:33;:::i;:::-;3652:5;-1:-1:-1;3709:2:76;3694:18;;3681:32;3722:35;3681:32;3722:35;:::i;:::-;3776:7;-1:-1:-1;3830:2:76;3815:18;;3802:32;;-1:-1:-1;3881:2:76;3866:18;;3853:32;;-1:-1:-1;3937:3:76;3922:19;;3909:33;3986:4;3973:18;;3961:31;;3951:2;;4011:6;4003;3996:22;3951:2;3473:683;;;;-1:-1:-1;3473:683:76;;;;4039:7;4093:3;4078:19;;4065:33;;-1:-1:-1;4145:3:76;4130:19;;;4117:33;;3473:683;-1:-1:-1;;3473:683:76:o;4161:327::-;;;4290:2;4278:9;4269:7;4265:23;4261:32;4258:2;;;4311:6;4303;4296:22;4258:2;4355:9;4342:23;4374:33;4401:5;4374:33;:::i;:::-;4426:5;4478:2;4463:18;;;;4450:32;;-1:-1:-1;;;4248:240:76:o;4493:1363::-;;;;4716:2;4704:9;4695:7;4691:23;4687:32;4684:2;;;4737:6;4729;4722:22;4684:2;4769:16;;-1:-1:-1;;;;;4834:14:76;;;4831:2;;;4866:6;4858;4851:22;4831:2;4909:6;4898:9;4894:22;4884:32;;4954:7;4947:4;4943:2;4939:13;4935:27;4925:2;;4981:6;4973;4966:22;4925:2;5015;5009:9;5037:4;5061:62;5076:46;5119:2;5076:46;:::i;5061:62::-;5157:15;;;5188:12;;;;5220:11;;;5258;;;5250:20;;5246:29;;5243:42;-1:-1:-1;5240:2:76;;;5303:6;5295;5288:22;5240:2;5330:6;5321:15;;5345:233;5359:2;5356:1;5353:9;5345:233;;;5423:3;5417:10;5440:33;5467:5;5440:33;:::i;:::-;5486:18;;5377:1;5370:9;;;;;5524:12;;;;5556;;5345:233;;;-1:-1:-1;5633:18:76;;;5627:25;5597:5;;-1:-1:-1;5627:25:76;;-1:-1:-1;;;5664:16:76;;;5661:2;;;5698:6;5690;5683:22;5661:2;;5726:80;5798:7;5787:8;5776:9;5772:24;5726:80;:::i;:::-;5716:90;;;5846:2;5835:9;5831:18;5825:25;5815:35;;4674:1182;;;;;:::o;5861:1411::-;;6017:2;6060;6048:9;6039:7;6035:23;6031:32;6028:2;;;6081:6;6073;6066:22;6028:2;6113:23;;-1:-1:-1;;;;;6185:14:76;;;6182:2;;;6217:6;6209;6202:22;6182:2;6260:6;6249:9;6245:22;6235:32;;6305:7;6298:4;6294:2;6290:13;6286:27;6276:2;;6332:6;6324;6317:22;6276:2;6373;6360:16;6396:62;6411:46;6454:2;6411:46;:::i;6396:62::-;6492:15;;;6523:12;;;;6555:11;;;6585:4;6616:11;;;6608:20;;6604:29;;6601:42;-1:-1:-1;6598:2:76;;;6661:6;6653;6646:22;6598:2;6688:6;6679:15;;6703:539;6717:2;6714:1;6711:9;6703:539;;;6788:2;6782:3;6773:7;6769:17;6765:26;6762:2;;;6809:6;6801;6794:22;6762:2;6851;6845:9;6897:2;6889:6;6885:15;6954:6;6942:10;6939:22;6934:2;6922:10;6919:18;6916:46;6913:2;;;6965:9;6913:2;6989:22;;7039:32;7067:3;7039:32;:::i;:::-;7024:48;;7122:12;;;7109:26;7092:15;;;7085:51;7149:19;;6735:1;6728:9;;;;;7188:12;;;;7220;;;;6703:539;;;-1:-1:-1;7261:5:76;;5997:1275;-1:-1:-1;;;;;;;;;5997:1275:76:o;7277:1496::-;;7429:2;7472;7460:9;7451:7;7447:23;7443:32;7440:2;;;7493:6;7485;7478:22;7440:2;7525:23;;-1:-1:-1;;;;;7597:14:76;;;7594:2;;;7629:6;7621;7614:22;7594:2;7672:6;7661:9;7657:22;7647:32;;7717:7;7710:4;7706:2;7702:13;7698:27;7688:2;;7744:6;7736;7729:22;7688:2;7785;7772:16;7808:62;7823:46;7866:2;7823:46;:::i;7808:62::-;7904:15;;;7935:12;;;;7967:11;;;7997:4;8028:11;;;8020:20;;8016:29;;8013:42;-1:-1:-1;8010:2:76;;;8073:6;8065;8058:22;8010:2;8100:6;8091:15;;8115:628;8129:2;8126:1;8123:9;8115:628;;;8200:2;8194:3;8185:7;8181:17;8177:26;8174:2;;;8221:6;8213;8206:22;8174:2;8253;8288;8282:9;8334:2;8326:6;8322:15;8391:6;8379:10;8376:22;8371:2;8359:10;8356:18;8353:46;8350:2;;;8402:9;8350:2;8426:22;;8476:32;8504:3;8476:32;:::i;:::-;8461:48;;8559:12;;;8546:26;8529:15;;;8522:51;8623:12;;;8610:26;8593:15;;;8586:51;;;;8650:19;;8147:1;8140:9;;;;;8689:12;;;;8721;;;;8115:628;;8778:192;;8887:2;8875:9;8866:7;8862:23;8858:32;8855:2;;;8908:6;8900;8893:22;8855:2;8936:28;8954:9;8936:28;:::i;8975:1669::-;;;;;;;;9223:3;9211:9;9202:7;9198:23;9194:33;9191:2;;;9245:6;9237;9230:22;9191:2;9286:9;9273:23;9263:33;;9315:2;9367;9356:9;9352:18;9339:32;9380:33;9407:5;9380:33;:::i;:::-;9432:5;-1:-1:-1;9489:2:76;9474:18;;9461:32;9502:35;9461:32;9502:35;:::i;:::-;9556:7;-1:-1:-1;9614:2:76;9599:18;;9586:32;-1:-1:-1;;;;;9667:14:76;;;9664:2;;;9699:6;9691;9684:22;9664:2;9742:6;9731:9;9727:22;9717:32;;9787:7;9780:4;9776:2;9772:13;9768:27;9758:2;;9814:6;9806;9799:22;9758:2;9855;9842:16;9878:62;9893:46;9936:2;9893:46;:::i;9878:62::-;9962:3;9986:2;9981:3;9974:15;10014:2;10009:3;10005:12;9998:19;;10045:2;10041;10037:11;10094:7;10089:2;10083;10079;10075:11;10071:2;10067:20;10063:29;10060:42;10057:2;;;10120:6;10112;10105:22;10057:2;10147:6;10138:15;;10162:163;10176:2;10173:1;10170:9;10162:163;;;10233:17;;10221:30;;10194:1;10187:9;;;;;10271:12;;;;10303;;10162:163;;;-1:-1:-1;10344:5:76;-1:-1:-1;;;10396:3:76;10381:19;;10368:33;;-1:-1:-1;10448:3:76;10433:19;;10420:33;;-1:-1:-1;10506:3:76;10491:19;;10478:33;;-1:-1:-1;10523:16:76;;;10520:2;;;10557:6;10549;10542:22;10520:2;;;10585:53;10630:7;10619:8;10608:9;10604:24;10585:53;:::i;:::-;10575:63;;;9181:1463;;;;;;;;;;:::o;10649:306::-;;10760:2;10748:9;10739:7;10735:23;10731:32;10728:2;;;10781:6;10773;10766:22;10728:2;10812:23;;-1:-1:-1;;;;;;10864:32:76;;10854:43;;10844:2;;10916:6;10908;10901:22;11249:219;;11375:2;11363:9;11354:7;11350:23;11346:32;11343:2;;;11396:6;11388;11381:22;11343:2;11424:38;11452:9;11424:38;:::i;11473:193::-;;11595:2;11583:9;11574:7;11570:23;11566:32;11563:2;;;11616:6;11608;11601:22;11563:2;-1:-1:-1;11644:16:76;;11553:113;-1:-1:-1;11553:113:76:o;11671:847::-;;11811:2;11799:9;11790:7;11786:23;11782:32;11779:2;;;11832:6;11824;11817:22;11779:2;11870;11864:9;11912:2;11900:15;;-1:-1:-1;;;;;11930:34:76;;11966:22;;;11927:62;11924:2;;;11992:9;11924:2;12019;12012:22;12058:28;12076:9;12058:28;:::i;:::-;12043:44;;12137:2;12122:18;;12109:32;-1:-1:-1;;;;;12170:44:76;;12160:55;;12150:2;;12234:6;12226;12219:22;12150:2;12271;12259:15;;12252:30;12334:2;12319:18;;12306:32;-1:-1:-1;;;;;12369:48:76;;12357:61;;12347:2;;12437:6;12429;12422:22;12347:2;12474;12462:15;;12455:32;12466:6;11769:749;-1:-1:-1;;;11769:749:76:o;12523:1351::-;;;;12699:2;12687:9;12678:7;12674:23;12670:32;12667:2;;;12720:6;12712;12705:22;12667:2;12752:23;;-1:-1:-1;;;;;12824:14:76;;;12821:2;;;12856:6;12848;12841:22;12821:2;12899:6;12888:9;12884:22;12874:32;;12925:6;12965:2;12960;12951:7;12947:16;12943:25;12940:2;;;12986:6;12978;12971:22;12940:2;13017:18;13032:2;13017:18;:::i;:::-;13004:31;;13058;13086:2;13058:31;:::i;:::-;13051:5;13044:46;13122:33;13151:2;13147;13143:11;13122:33;:::i;:::-;13117:2;13110:5;13106:14;13099:57;13188:33;13217:2;13213;13209:11;13188:33;:::i;:::-;13183:2;13176:5;13172:14;13165:57;13275:2;13271;13267:11;13254:25;13249:2;13242:5;13238:14;13231:49;13334:3;13330:2;13326:12;13313:26;13307:3;13300:5;13296:15;13289:51;13394:3;13390:2;13386:12;13373:26;13367:3;13360:5;13356:15;13349:51;13433:34;13462:3;13458:2;13454:12;13433:34;:::i;:::-;13427:3;13420:5;13416:15;13409:59;13501:34;13530:3;13526:2;13522:12;13501:34;:::i;:::-;13495:3;13488:5;13484:15;13477:59;13555:3;13604:2;13600;13596:11;13583:25;13633:2;13623:8;13620:16;13617:2;;;13654:6;13646;13639:22;13617:2;13695:46;13733:7;13722:8;13718:2;13714:17;13695:46;:::i;:::-;13679:14;;;13672:70;;;;-1:-1:-1;13683:5:76;13813:2;13798:18;;13785:32;;-1:-1:-1;13864:2:76;13849:18;;;13836:32;;12657:1217;-1:-1:-1;;;;;12657:1217:76:o;13879:190::-;;13991:2;13979:9;13970:7;13966:23;13962:32;13959:2;;;14012:6;14004;13997:22;13959:2;-1:-1:-1;14040:23:76;;13949:120;-1:-1:-1;13949:120:76:o;14273:258::-;;;14402:2;14390:9;14381:7;14377:23;14373:32;14370:2;;;14423:6;14415;14408:22;14370:2;-1:-1:-1;;14451:23:76;;;14521:2;14506:18;;;14493:32;;-1:-1:-1;14360:171:76:o;14536:328::-;;;;14679:2;14667:9;14658:7;14654:23;14650:32;14647:2;;;14700:6;14692;14685:22;14647:2;14741:9;14728:23;14718:33;;14798:2;14787:9;14783:18;14770:32;14760:42;;14821:37;14854:2;14843:9;14839:18;14821:37;:::i;:::-;14811:47;;14637:227;;;;;:::o;14869:443::-;;14966:5;14960:12;14993:6;14988:3;14981:19;15019:4;15048:2;15043:3;15039:12;15032:19;;15085:2;15078:5;15074:14;15106:3;15118:169;15132:6;15129:1;15126:13;15118:169;;;15193:13;;15181:26;;15227:12;;;;15262:15;;;;15154:1;15147:9;15118:169;;;-1:-1:-1;15303:3:76;;14936:376;-1:-1:-1;;;;;14936:376:76:o;15317:133::-;15400:1;15393:5;15390:12;15380:2;;15406:9;15380:2;15426:18;;15370:80::o;15455:273::-;;15638:6;15630;15625:3;15612:33;15664:16;;15689:15;;;15664:16;15602:126;-1:-1:-1;15602:126:76:o;15733:203::-;-1:-1:-1;;;;;15897:32:76;;;;15879:51;;15867:2;15852:18;;15834:102::o;15941:633::-;16110:2;16162:21;;;16232:13;;16135:18;;;16254:22;;;15941:633;;16110:2;16333:15;;;;16307:2;16292:18;;;15941:633;16379:169;16393:6;16390:1;16387:13;16379:169;;;16454:13;;16442:26;;16523:15;;;;16488:12;;;;16415:1;16408:9;16379:169;;;-1:-1:-1;16565:3:76;;16090:484;-1:-1:-1;;;;;;16090:484:76:o;16579:494::-;16759:2;16744:18;;16748:9;16839:6;16579:494;16873:194;16887:4;16884:1;16881:11;16873:194;;;16946:13;;16934:26;;16983:4;17007:12;;;;17042:15;;;;16907:1;16900:9;16873:194;;;16877:3;;;16726:347;;;;:::o;17078:267::-;;17257:2;17246:9;17239:21;17277:62;17335:2;17324:9;17320:18;17312:6;17277:62;:::i;17350:477::-;;17607:2;17596:9;17589:21;17633:62;17691:2;17680:9;17676:18;17668:6;17633:62;:::i;:::-;17743:9;17735:6;17731:22;17726:2;17715:9;17711:18;17704:50;17771;17814:6;17806;17771:50;:::i;17832:187::-;17997:14;;17990:22;17972:41;;17960:2;17945:18;;17927:92::o;18024:329::-;18245:14;;18238:22;18220:41;;18292:2;18277:18;;18270:34;;;;18335:2;18320:18;;18313:34;18208:2;18193:18;;18175:178::o;18358:177::-;18504:25;;;18492:2;18477:18;;18459:76::o;19222:595::-;19525:25;;;19581:2;19566:18;;19559:34;;;;19624:2;19609:18;;19602:34;;;;19667:2;19652:18;;19645:34;;;;19710:3;19695:19;;19688:35;19754:3;19739:19;;19732:35;19798:3;19783:19;;19776:35;19512:3;19497:19;;19479:338::o;19822:541::-;20099:25;;;20155:2;20140:18;;20133:34;;;;20198:2;20183:18;;20176:34;;;;20241:2;20226:18;;20219:34;20297:14;20290:22;20284:3;20269:19;;20262:51;20344:3;20329:19;;20322:35;20086:3;20071:19;;20053:310::o;20368:385::-;20615:25;;;20603:2;20588:18;;20649:55;20700:2;20685:18;;20677:6;20649:55;:::i;:::-;20740:6;20735:2;20724:9;20720:18;20713:34;20570:183;;;;;;:::o;20758:457::-;21034:25;;;21021:3;21006:19;;21068:55;21119:2;21104:18;;21096:6;21068:55;:::i;:::-;21154:2;21139:18;;21132:34;;;;21197:2;21182:18;21175:34;20988:227;;-1:-1:-1;;20988:227:76:o;21220:574::-;;21517:3;21506:9;21502:19;21494:27;;21548:6;21537:9;21530:25;21564:62;21622:2;21611:9;21607:18;21598:6;21592:13;21564:62;:::i;:::-;21680:2;21668:15;;21662:22;21657:2;21642:18;;;21635:50;;;;21727:15;;;21721:22;21716:2;21701:18;;21694:50;21775:3;21760:19;21753:35;21484:310;;-1:-1:-1;21484:310:76:o;21799:603::-;;21940:2;21969;21958:9;21951:21;22001:6;21995:13;22044:6;22039:2;22028:9;22024:18;22017:34;22069:4;22082:140;22096:6;22093:1;22090:13;22082:140;;;22191:14;;;22187:23;;22181:30;22157:17;;;22176:2;22153:26;22146:66;22111:10;;22082:140;;;22240:6;22237:1;22234:13;22231:2;;;22310:4;22305:2;22296:6;22285:9;22281:22;22277:31;22270:45;22231:2;-1:-1:-1;22386:2:76;22365:15;-1:-1:-1;;22361:29:76;22346:45;;;;22393:2;22342:54;;21920:482;-1:-1:-1;;;21920:482:76:o;22407:462::-;22641:13;;22634:21;22627:29;22609:48;;22717:4;22705:17;;;22699:24;-1:-1:-1;;;;;22695:63:76;22673:20;;;22666:93;22819:4;22807:17;;;22801:24;-1:-1:-1;;;;;22797:65:76;22775:20;;;22768:95;;;;22597:2;22582:18;;22564:305::o;22874:452::-;23090:13;;23159:4;23144:20;;23137:28;23130:36;23112:55;;-1:-1:-1;;;;;23213:1:76;23209:17;;;23205:56;23198:4;23183:20;;23176:86;23304:3;23300:19;23293:4;23278:20;;23271:49;23061:2;23046:18;;23028:298::o;23513:338::-;;23720:6;23709:9;23702:25;23763:2;23758;23747:9;23743:18;23736:30;23783:62;23841:2;23830:9;23826:18;23818:6;23783:62;:::i;23856:319::-;24058:25;;;24114:2;24099:18;;24092:34;;;;24157:2;24142:18;;24135:34;24046:2;24031:18;;24013:162::o;24180:184::-;24352:4;24340:17;;;;24322:36;;24310:2;24295:18;;24277:87::o;24369:242::-;24439:2;24433:9;24469:17;;;24537:22;;;-1:-1:-1;;;;;24501:34:76;;24498:62;24495:2;;;24563:9;24495:2;24590;24583:22;24413:198;;-1:-1:-1;24413:198:76:o;24616:180::-;;-1:-1:-1;;;;;24701:30:76;;24698:2;;;24734:9;24698:2;-1:-1:-1;24785:4:76;24766:17;;;24762:28;;24688:108::o;24801:133::-;-1:-1:-1;;;;;24878:31:76;;24868:42;;24858:2;;24924:1;24921;24914:12", "language": "Solidity", "natspec": {"kind": "dev", "methods": {"DOMAIN_SEPARATOR()": {"details": "See {IERC20Permit-DOMAIN_SEPARATOR}."}, "allowance(address,address)": {"details": "Override to grant the Vault infinite allowance, causing for Pool Tokens to not require approval. This is sound as the Vault already provides authorization mechanisms when initiation token transfers, which this contract inherits."}, "approve(address,uint256)": {"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."}, "balanceOf(address)": {"details": "See {IERC20-balanceOf}."}, "changePauseManager(address)": {"notice": "Changes the account that is allow to pause a pool"}, "decimals()": {"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."}, "decreaseAllowance(address,uint256)": {"details": "Override to allow decreasing allowance by more than the current amount (setting it to zero)"}, "dirtyUninitializedOracleSamples(uint256,uint256)": {"details": "Manually dirty oracle sample storage slots with dummy data, to reduce the gas cost of the future swaps that will initialize them. This function is only useful before the oracle has been fully initialized. `endIndex` is non-inclusive."}, "enableOracle()": {"details": "Balancer Governance can always enable the Oracle, even if it was originally not enabled. This allows for Pools that unexpectedly drive much more volume and liquidity than expected to serve as Price Oracles. Note that the Oracle can only be enabled - it can never be disabled."}, "getActionId(bytes4)": {"details": "Returns the action identifier associated with the external function described by `selector`."}, "getInvariant()": {"details": "Returns the current value of the invariant."}, "getLargestSafeQueryWindow()": {"details": "Returns largest time window that can be safely queried, where 'safely' means the Oracle is guaranteed to be able to produce a result and not revert. If a query has a non-zero `ago` value, then `secs + ago` (the oldest point in time) must be smaller than this value for 'safe' queries."}, "getLatest(uint8)": {"details": "Returns latest sample of `variable`. Prices are represented as 18 decimal fixed point values."}, "getPastAccumulators((uint8,uint256)[])": {"details": "Returns the accumulators corresponding to each of `queries`."}, "getPausedState()": {"details": "Returns the current contract pause status, as well as the end times of the Pause Window and Buffer Period."}, "getRate()": {"details": "This function returns the appreciation of one BPT relative to the underlying tokens. This starts at 1 when the pool is created and grows over time"}, "getSample(uint256)": {"details": "Returns the raw data of the sample at `index`."}, "getTimeWeightedAverage((uint8,uint256,uint256)[])": {"details": "Returns the time average weighted price corresponding to each of `queries`. Prices are represented as 18 decimal fixed point values."}, "getTotalSamples()": {"details": "Returns the total number of samples."}, "getVirtualParameters()": {"details": "Returns virtual offsets a and b for reserves x and y respectively, as in (x+a)*(y+b)=L^2"}, "increaseAllowance(address,uint256)": {"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."}, "name()": {"details": "Returns the name of the token."}, "nonces(address)": {"details": "See {IERC20Permit-nonces}."}, "onExitPool(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Called by the Vault when a user calls `IVault.exitPool` to remove liquidity from this Pool. Returns how many tokens the Vault should deduct from the Pool's balances, as well as the amount of protocol fees the Pool owes to the Vault. The Vault will then take tokens from the Pool's balances and send them to `recipient`, as well as collect the reported amount in protocol fees, which the Pool should calculate based on `protocolSwapFeePercentage`. Protocol fees are charged on exit events to guarantee that users exiting the Pool have paid their share. `sender` is the account performing the exit (typically the pool shareholder), and `recipient` is the account to which the Vault will send the proceeds. `balances` contains the total token balances for each token the Pool registered in the Vault, in the same order that `IVault.getPoolTokens` would return. `lastChangeBlock` is the last block in which *any* of the Pool's registered tokens last changed its total balance. `userData` contains any pool-specific instructions needed to perform the calculations, such as the type of exit (e.g., proportional given an amount of pool shares, single-asset, multi-asset, etc.) Contracts implementing this function should check that the caller is indeed the Vault before performing any state-changing operations, such as burning pool shares."}, "onJoinPool(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Called by the Vault when a user calls `IVault.joinPool` to add liquidity to this Pool. Returns how many of each registered token the user should provide, as well as the amount of protocol fees the Pool owes to the Vault. The Vault will then take tokens from `sender` and add them to the Pool's balances, as well as collect the reported amount in protocol fees, which the pool should calculate based on `protocolSwapFeePercentage`. Protocol fees are reported and charged on join events so that the Pool is free of debt whenever new users join. `sender` is the account performing the join (from which tokens will be withdrawn), and `recipient` is the account designated to receive any benefits (typically pool shares). `balances` contains the total balances for each token the Pool registered in the Vault, in the same order that `IVault.getPoolTokens` would return. `lastChangeBlock` is the last block in which *any* of the Pool's registered tokens last changed its total balance. `userData` contains any pool-specific instructions needed to perform the calculations, such as the type of join (e.g., proportional given an amount of pool shares, single-asset, multi-asset, etc.) Contracts implementing this function should check that the caller is indeed the Vault before performing any state-changing operations, such as minting pool shares."}, "pause()": {"notice": "Pauses the pool Can only be called by the pause manager"}, "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {"details": "See {IERC20Permit-permit}."}, "queryExit(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Returns the amount of BPT that would be burned from `sender` if the `onExitPool` hook were called by the Vault with the same arguments, along with the number of tokens `recipient` would receive. This function is not meant to be called directly, but rather from a helper contract that fetches current Vault data, such as the protocol swap fee percentage and Pool balances. Like `IVault.queryBatchSwap`, this function is not view due to internal implementation details: the caller must explicitly use eth_call instead of eth_sendTransaction."}, "queryJoin(bytes32,address,address,uint256[],uint256,uint256,bytes)": {"details": "Returns the amount of BPT that would be granted to `recipient` if the `onJoinPool` hook were called by the Vault with the same arguments, along with the number of tokens `sender` would have to supply. This function is not meant to be called directly, but rather from a helper contract that fetches current Vault data, such as the protocol swap fee percentage and Pool balances. Like `IVault.queryBatchSwap`, this function is not view due to internal implementation details: the caller must explicitly use eth_call instead of eth_sendTransaction."}, "symbol()": {"details": "Returns the symbol of the token, usually a shorter version of the name."}, "totalSupply()": {"details": "See {IERC20-totalSupply}."}, "transfer(address,uint256)": {"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."}, "transferFrom(address,address,uint256)": {"details": "Override to allow for 'infinite allowance' and let the token owner use `transferFrom` with no self-allowance"}, "unpause()": {"notice": "Unpauses the pool Can only be called by the pause manager"}}, "version": 1}, "offset": [1423, 28527], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x327 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x707DCD1E GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x9B02CDDE GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xB48B5B40 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD5C096C4 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD5C096C4 EQ PUSH2 0x69B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6AE JUMPI DUP1 PUSH4 0xF89F27ED EQ PUSH2 0x6C1 JUMPI DUP1 PUSH4 0xFFD088EB EQ PUSH2 0x6C9 JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0xB48B5B40 EQ PUSH2 0x678 JUMPI DUP1 PUSH4 0xC0FF1A15 EQ PUSH2 0x680 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x688 JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x642 JUMPI DUP1 PUSH4 0xAAABADC5 EQ PUSH2 0x655 JUMPI DUP1 PUSH4 0xABD13AFE EQ PUSH2 0x65D JUMPI DUP1 PUSH4 0xB10BE739 EQ PUSH2 0x665 JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0x9B02CDDE EQ PUSH2 0x614 JUMPI DUP1 PUSH4 0x9D2C110C EQ PUSH2 0x61C JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x62F JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x893D20E8 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x5F4 JUMPI DUP1 PUSH4 0x8D928AF8 EQ PUSH2 0x5FC JUMPI DUP1 PUSH4 0x8DD9F89D EQ PUSH2 0x604 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x60C JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x5C6 JUMPI DUP1 PUSH4 0x851C1BB3 EQ PUSH2 0x5CE JUMPI DUP1 PUSH4 0x87EC6817 EQ PUSH2 0x5E1 JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0x707DCD1E EQ PUSH2 0x544 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x559 JUMPI DUP1 PUSH4 0x74F3B009 EQ PUSH2 0x56C JUMPI DUP1 PUSH4 0x76E54A46 EQ PUSH2 0x58D JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x5A0 JUMPI DUP1 PUSH4 0x8002DF18 EQ PUSH2 0x5B3 JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0x38FFF2D0 GT PUSH2 0x277 JUMPI DUP1 PUSH4 0x4A6B0B15 GT PUSH2 0x230 JUMPI DUP1 PUSH4 0x60D1507C GT PUSH2 0x20A JUMPI DUP1 PUSH4 0x60D1507C EQ PUSH2 0x4EE JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x514 JUMPI DUP1 PUSH4 0x6B843239 EQ PUSH2 0x51C JUMPI DUP1 PUSH4 0x6D785A87 EQ PUSH2 0x53C JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0x4A6B0B15 EQ PUSH2 0x4AB JUMPI DUP1 PUSH4 0x55C67628 EQ PUSH2 0x4C5 JUMPI DUP1 PUSH4 0x6028BFD4 EQ PUSH2 0x4CD JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0x38FFF2D0 EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0x3AEAE0D3 EQ PUSH2 0x457 JUMPI DUP1 PUSH4 0x3C4DD5BB EQ PUSH2 0x46C JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0x44BBDB55 EQ PUSH2 0x496 JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0x1DCCD830 GT PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x313CE567 GT PUSH2 0x2BE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0x3331BC36 EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x421 JUMPI DUP1 PUSH4 0x38E9922E EQ PUSH2 0x429 JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0x1DCCD830 EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3DE JUMPI DUP1 PUSH4 0x292C914A EQ PUSH2 0x3F1 JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0xE608B30 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x1C0DE051 EQ PUSH2 0x3A7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x334 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x534D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35D PUSH2 0x358 CALLDATASIZE PUSH1 0x4 PUSH2 0x4B4C JUMP JUMPDEST PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x5246 JUMP JUMPDEST PUSH2 0x37D PUSH2 0x378 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A27 JUMP JUMPDEST PUSH2 0x77E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37D PUSH2 0x38D CALLDATASIZE PUSH1 0x4 PUSH2 0x4DDC JUMP JUMPDEST PUSH2 0x82F JUMP JUMPDEST PUSH2 0x39A PUSH2 0x843 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x5269 JUMP JUMPDEST PUSH2 0x3AF PUSH2 0x849 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5251 JUMP JUMPDEST PUSH2 0x3D1 PUSH2 0x3CC CALLDATASIZE PUSH1 0x4 PUSH2 0x4D10 JUMP JUMPDEST PUSH2 0x872 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x520E JUMP JUMPDEST PUSH2 0x35D PUSH2 0x3EC CALLDATASIZE PUSH1 0x4 PUSH2 0x4A97 JUMP JUMPDEST PUSH2 0x995 JUMP JUMPDEST PUSH2 0x37D PUSH2 0xA09 JUMP JUMPDEST PUSH2 0x401 PUSH2 0xA3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x542F JUMP JUMPDEST PUSH2 0x37D PUSH2 0x41C CALLDATASIZE PUSH1 0x4 PUSH2 0x50D8 JUMP JUMPDEST PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x39A PUSH2 0xABE JUMP JUMPDEST PUSH2 0x37D PUSH2 0x437 CALLDATASIZE PUSH1 0x4 PUSH2 0x50C0 JUMP JUMPDEST PUSH2 0xACD JUMP JUMPDEST PUSH2 0x39A PUSH2 0xAE6 JUMP JUMPDEST PUSH2 0x35D PUSH2 0x452 CALLDATASIZE PUSH1 0x4 PUSH2 0x4B4C JUMP JUMPDEST PUSH2 0xB0A JUMP JUMPDEST PUSH2 0x45F PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x53A0 JUMP JUMPDEST PUSH2 0x47F PUSH2 0x47A CALLDATASIZE PUSH1 0x4 PUSH2 0x50F9 JUMP JUMPDEST PUSH2 0xB90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5419 JUMP JUMPDEST PUSH2 0x37D PUSH2 0xBE3 JUMP JUMPDEST PUSH2 0x49E PUSH2 0xCD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST PUSH2 0x4B3 PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x52A2 JUMP JUMPDEST PUSH2 0x39A PUSH2 0xD42 JUMP JUMPDEST PUSH2 0x4E0 PUSH2 0x4DB CALLDATASIZE PUSH1 0x4 PUSH2 0x4DF6 JUMP JUMPDEST PUSH2 0xD4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP3 SWAP2 SWAP1 PUSH2 0x5400 JUMP JUMPDEST PUSH2 0x501 PUSH2 0x4FC CALLDATASIZE PUSH1 0x4 PUSH2 0x50C0 JUMP JUMPDEST PUSH2 0xD80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5272 JUMP JUMPDEST PUSH2 0x39A PUSH2 0xDC9 JUMP JUMPDEST PUSH2 0x52F PUSH2 0x52A CALLDATASIZE PUSH1 0x4 PUSH2 0x4C42 JUMP JUMPDEST PUSH2 0xDEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x5199 JUMP JUMPDEST PUSH2 0x49E PUSH2 0xEA4 JUMP JUMPDEST PUSH2 0x54C PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x51DD JUMP JUMPDEST PUSH2 0x39A PUSH2 0x567 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A27 JUMP JUMPDEST PUSH2 0xEC3 JUMP JUMPDEST PUSH2 0x57F PUSH2 0x57A CALLDATASIZE PUSH1 0x4 PUSH2 0x4DF6 JUMP JUMPDEST PUSH2 0xEE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP3 SWAP2 SWAP1 PUSH2 0x5221 JUMP JUMPDEST PUSH2 0x37D PUSH2 0x59B CALLDATASIZE PUSH1 0x4 PUSH2 0x4F4C JUMP JUMPDEST PUSH2 0xF87 JUMP JUMPDEST PUSH2 0x39A PUSH2 0x5AE CALLDATASIZE PUSH1 0x4 PUSH2 0x4A27 JUMP JUMPDEST PUSH2 0x10AE JUMP JUMPDEST PUSH2 0x37D PUSH2 0x5C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A27 JUMP JUMPDEST PUSH2 0x10C9 JUMP JUMPDEST PUSH2 0x37D PUSH2 0x11AF JUMP JUMPDEST PUSH2 0x39A PUSH2 0x5DC CALLDATASIZE PUSH1 0x4 PUSH2 0x4EF2 JUMP JUMPDEST PUSH2 0x1267 JUMP JUMPDEST PUSH2 0x4E0 PUSH2 0x5EF CALLDATASIZE PUSH1 0x4 PUSH2 0x4DF6 JUMP JUMPDEST PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0x49E PUSH2 0x12E5 JUMP JUMPDEST PUSH2 0x49E PUSH2 0x1309 JUMP JUMPDEST PUSH2 0x3D1 PUSH2 0x132D JUMP JUMPDEST PUSH2 0x334 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0x39A PUSH2 0x1498 JUMP JUMPDEST PUSH2 0x39A PUSH2 0x62A CALLDATASIZE PUSH1 0x4 PUSH2 0x4FCA JUMP JUMPDEST PUSH2 0x149E JUMP JUMPDEST PUSH2 0x35D PUSH2 0x63D CALLDATASIZE PUSH1 0x4 PUSH2 0x4B4C JUMP JUMPDEST PUSH2 0x1664 JUMP JUMPDEST PUSH2 0x35D PUSH2 0x650 CALLDATASIZE PUSH1 0x4 PUSH2 0x4B4C JUMP JUMPDEST PUSH2 0x16A2 JUMP JUMPDEST PUSH2 0x49E PUSH2 0x16AF JUMP JUMPDEST PUSH2 0x49E PUSH2 0x16B9 JUMP JUMPDEST PUSH2 0x39A PUSH2 0x673 CALLDATASIZE PUSH1 0x4 PUSH2 0x4F1A JUMP JUMPDEST PUSH2 0x16C8 JUMP JUMPDEST PUSH2 0x39A PUSH2 0x175D JUMP JUMPDEST PUSH2 0x39A PUSH2 0x1763 JUMP JUMPDEST PUSH2 0x37D PUSH2 0x696 CALLDATASIZE PUSH1 0x4 PUSH2 0x4AD7 JUMP JUMPDEST PUSH2 0x182F JUMP JUMPDEST PUSH2 0x57F PUSH2 0x6A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x4DF6 JUMP JUMPDEST PUSH2 0x199F JUMP JUMPDEST PUSH2 0x39A PUSH2 0x6BC CALLDATASIZE PUSH1 0x4 PUSH2 0x4A5F JUMP JUMPDEST PUSH2 0x1ABF JUMP JUMPDEST PUSH2 0x3D1 PUSH2 0x1AFC JUMP JUMPDEST PUSH2 0x39A PUSH2 0x1B06 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x75D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x732 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x75D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x740 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x774 CALLER DUP5 DUP5 PUSH2 0x1B90 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x1B9BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CF SWAP2 SWAP1 PUSH2 0x534D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xB8FD9AFC34C38FCD13B9A3B7646482EB1FDDCEFB40AF2C70609972816EBA3208 SWAP1 PUSH2 0x824 SWAP1 DUP4 SWAP1 PUSH2 0x5185 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x837 PUSH2 0x1BF2 JUMP JUMPDEST PUSH2 0x840 DUP2 PUSH2 0x1C20 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x856 PUSH2 0x1C9C JUMP JUMPDEST ISZERO SWAP3 POP PUSH2 0x861 PUSH2 0x1CB9 JUMP JUMPDEST SWAP2 POP PUSH2 0x86B PUSH2 0x1CDD JUMP JUMPDEST SWAP1 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x88B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8B5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH2 0x8C2 PUSH2 0x1D01 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x98E JUMPI PUSH20 0x0 PUSH4 0x79EAEF82 PUSH1 0x8 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x8F8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5314 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x937 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x94B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x96F SWAP2 SWAP1 PUSH2 0x4F34 JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x97B JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x8C7 JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9A2 DUP6 CALLER PUSH2 0x1ABF JUMP JUMPDEST SWAP1 POP PUSH2 0x9C6 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND EQ DUP1 PUSH2 0x9BE JUMPI POP DUP4 DUP3 LT ISZERO JUMPDEST PUSH2 0x19E PUSH2 0x1D0E JUMP JUMPDEST PUSH2 0x9D1 DUP6 DUP6 DUP6 PUSH2 0x1D1C JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x9EC JUMPI POP PUSH1 0x0 NOT DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x9FE JUMPI PUSH2 0x9FE DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x1B90 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xA11 PUSH2 0x1E04 JUMP JUMPDEST PUSH2 0xA19 PUSH2 0x1BF2 JUMP JUMPDEST PUSH2 0xA23 PUSH1 0x1 PUSH2 0x1E17 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA2D PUSH2 0x843 JUMP JUMPDEST GT ISZERO PUSH2 0xA3B JUMPI PUSH2 0xA3B PUSH2 0x1E57 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xA61 DUP2 DUP4 LT DUP1 ISZERO PUSH2 0xA5A JUMPI POP PUSH2 0x400 DUP3 GT ISZERO JUMPDEST PUSH1 0x64 PUSH2 0x1D0E JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA76 PUSH1 0x1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1E9F JUMP JUMPDEST SWAP1 POP DUP3 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xAB8 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xA9A SWAP1 PUSH2 0x1EFF JUMP JUMPDEST PUSH2 0xAB0 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE JUMPDEST PUSH1 0x1 ADD PUSH2 0xA7A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC8 PUSH2 0x1F0B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAD5 PUSH2 0x1BF2 JUMP JUMPDEST PUSH2 0xADD PUSH2 0x1E04 JUMP JUMPDEST PUSH2 0x840 DUP2 PUSH2 0x1FC9 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x774 SWAP2 DUP6 SWAP1 PUSH2 0xB40 SWAP1 DUP7 PUSH2 0x2032 JUMP JUMPDEST PUSH2 0x1B90 JUMP JUMPDEST PUSH2 0xB4D PUSH2 0x48C9 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0xB SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP3 MSTORE PUSH2 0x100 DUP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xB9F DUP6 PUSH2 0x2044 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xBAD DUP7 ISZERO PUSH2 0x2044 JUMP JUMPDEST SWAP1 POP PUSH2 0xBB9 DUP9 DUP4 PUSH2 0x2098 JUMP JUMPDEST SWAP8 POP PUSH2 0xBC5 DUP8 DUP3 PUSH2 0x2098 JUMP JUMPDEST SWAP7 POP PUSH2 0xBD2 DUP9 DUP9 DUP9 PUSH2 0x20A4 JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP POP POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x3737BA103830BAB9B29036B0B730B3B2B9 PUSH1 0x79 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC67 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC4F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xC94 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0xCAD PUSH1 0x0 PUSH2 0x837 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x215385C8BFC731925EC8068D7BAA50F6B6F34417CC7804F7273DC2C0B3DB2790 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x9 SLOAD SWAP1 POP PUSH2 0xD00 DUP2 PUSH2 0x2173 JUMP JUMPDEST SWAP7 POP PUSH2 0xD0B DUP2 PUSH2 0x217F JUMP JUMPDEST SWAP6 POP PUSH2 0xD16 DUP2 PUSH2 0x218C JUMP JUMPDEST SWAP5 POP PUSH2 0xD21 DUP2 PUSH2 0x2199 JUMP JUMPDEST SWAP4 POP PUSH2 0xD2C DUP2 PUSH2 0x21A6 JUMP JUMPDEST SWAP3 POP PUSH2 0xD37 DUP2 PUSH2 0x21B3 JUMP JUMPDEST SWAP2 POP POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC8 PUSH1 0x9 SLOAD PUSH2 0x21B3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0xD5F DUP7 MLOAD PUSH1 0x2 PUSH2 0x21C0 JUMP JUMPDEST PUSH2 0xD74 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x21CD PUSH2 0x22E1 PUSH2 0x235F JUMP JUMPDEST SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xD9B PUSH2 0x400 DUP10 LT PUSH2 0x13B PUSH2 0x1D0E JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA6 DUP10 PUSH2 0x2472 JUMP JUMPDEST SWAP1 POP PUSH2 0xDB1 DUP2 PUSH2 0x2484 JUMP JUMPDEST SWAP6 SWAP16 SWAP5 SWAP15 POP SWAP3 SWAP13 POP SWAP1 SWAP11 POP SWAP9 POP SWAP7 POP SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC8 PUSH2 0xDD6 PUSH2 0x843 JUMP JUMPDEST PUSH2 0xDE8 PUSH2 0xDE1 PUSH2 0x1763 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x24E7 JUMP JUMPDEST SWAP1 PUSH2 0x250B JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0xE07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE31 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH2 0xE3E PUSH2 0x1D01 JUMP JUMPDEST SWAP1 POP PUSH2 0xE48 PUSH2 0x48E9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xE9C JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xE60 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP PUSH2 0xE7D DUP3 PUSH1 0x0 ADD MLOAD DUP5 DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x2565 JUMP JUMPDEST DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xE89 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0xE4B JUMP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xEBB PUSH2 0x4900 JUMP JUMPDEST PUSH2 0xAC8 PUSH2 0x25FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP9 PUSH2 0xF0C PUSH2 0xEF1 PUSH2 0x1309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH1 0xCD PUSH2 0x1D0E JUMP JUMPDEST PUSH2 0xF21 PUSH2 0xF17 PUSH2 0xAE6 JUMP JUMPDEST DUP3 EQ PUSH2 0x1F4 PUSH2 0x1D0E JUMP JUMPDEST PUSH2 0xF2A DUP8 PUSH2 0x2624 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xF3E DUP14 DUP14 DUP14 DUP14 DUP14 DUP14 DUP14 PUSH2 0x21CD JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xF4E DUP13 DUP5 PUSH2 0x2686 JUMP JUMPDEST PUSH2 0xF57 DUP3 PUSH2 0x22E1 JUMP JUMPDEST PUSH2 0xF60 DUP2 PUSH2 0x22E1 JUMP JUMPDEST PUSH2 0xF68 PUSH2 0x1C9C JUMP JUMPDEST ISZERO PUSH2 0xF75 JUMPI PUSH2 0xF75 PUSH2 0x1E57 JUMP JUMPDEST SWAP1 SWAP13 SWAP1 SWAP12 POP SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x1B9BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CF SWAP2 SWAP1 PUSH2 0x534D JUMP JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH16 0x1C1BDBDB081A5CC81D5B98D85C1C1959 PUSH1 0x82 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x1024 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CF SWAP2 SWAP1 PUSH2 0x534D JUMP JUMPDEST POP DUP1 MLOAD PUSH1 0xB DUP1 SLOAD PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP1 DUP7 ADD MLOAD PUSH1 0xFF NOT SWAP1 SWAP4 AND SWAP5 ISZERO ISZERO SWAP5 SWAP1 SWAP5 OR PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL OR PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x80 SHL SWAP2 SWAP1 SWAP3 AND MUL OR DUP2 SSTORE SWAP1 MLOAD PUSH32 0x2ABF5970D7BC1A2B36EAAE52DD2CC353EDB0337C7284EF8A01973081B4E04424 SWAP2 PUSH2 0x824 SWAP2 PUSH2 0x53D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x3737BA103830BAB9B29036B0B730B3B2B9 PUSH1 0x79 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLER DUP3 EQ PUSH2 0x114E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0xC67 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC4F JUMP JUMPDEST POP PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 DUP5 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD PUSH32 0x1FFCCD1FA96F4FB3415DF8048A0FD107344E262D2D246C85105E2A3F8F3E8198 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x3737BA103830BAB9B29036B0B730B3B2B9 PUSH1 0x79 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1231 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0xC67 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC4F JUMP JUMPDEST POP PUSH2 0x123C PUSH1 0x1 PUSH2 0x837 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x681EACE576127D0553B224436A09801FB47D042942CBFF59D7D4FF04D8FA03D7 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x0 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP5 AND DUP3 DUP5 ADD MSTORE DUP3 MLOAD PUSH1 0x24 DUP2 DUP5 SUB ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x12D0 DUP7 MLOAD PUSH1 0x2 PUSH2 0x21C0 JUMP JUMPDEST PUSH2 0xD74 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x2690 PUSH2 0x2760 PUSH2 0x235F JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1339 PUSH2 0x1309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF94D4668 PUSH2 0x134F PUSH2 0xAE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x136B SWAP2 SWAP1 PUSH2 0x5269 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1383 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1397 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x13BF SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x4B77 JUMP JUMPDEST POP SWAP2 POP POP PUSH2 0x13CC DUP2 PUSH2 0x2624 JUMP JUMPDEST PUSH2 0x1400 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x13DC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x13F1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH2 0x20A4 JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1410 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP5 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1424 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD SWAP2 SWAP1 SWAP2 MSTORE MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x75D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x732 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x75D JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14A8 PUSH2 0x1E04 JUMP JUMPDEST DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0x14B8 PUSH2 0xEF1 PUSH2 0x1309 JUMP JUMPDEST PUSH2 0x14C3 PUSH2 0xF17 PUSH2 0xAE6 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP PUSH1 0x0 PUSH2 0x150B DUP3 PUSH2 0x2044 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1519 DUP4 ISZERO PUSH2 0x2044 JUMP JUMPDEST SWAP1 POP PUSH2 0x1525 DUP8 DUP4 PUSH2 0x2098 JUMP JUMPDEST SWAP7 POP PUSH2 0x1531 DUP7 DUP3 PUSH2 0x2098 JUMP JUMPDEST SWAP6 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1543 DUP11 DUP11 DUP9 PUSH2 0x20A4 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x158A DUP12 PUSH1 0xA0 ADD MLOAD DUP8 PUSH2 0x155C JUMPI DUP11 PUSH2 0x155E JUMP JUMPDEST DUP12 JUMPDEST DUP9 PUSH2 0x1569 JUMPI DUP13 PUSH2 0x156B JUMP JUMPDEST DUP12 JUMPDEST DUP10 PUSH2 0x1576 JUMPI DUP5 PUSH2 0x1578 JUMP JUMPDEST DUP6 JUMPDEST DUP11 PUSH2 0x1583 JUMPI DUP7 PUSH2 0x1585 JUMP JUMPDEST DUP6 JUMPDEST PUSH2 0x27C2 JUMP JUMPDEST PUSH1 0x0 DUP12 MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1599 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1608 JUMPI PUSH1 0x0 PUSH2 0x15B7 PUSH2 0x15AC PUSH2 0xD42 JUMP JUMPDEST PUSH1 0x60 DUP15 ADD MLOAD SWAP1 PUSH2 0x286C JUMP JUMPDEST SWAP1 POP PUSH2 0x15D9 PUSH2 0x15D3 DUP3 DUP15 PUSH1 0x60 ADD MLOAD PUSH2 0x28C1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH2 0x2098 JUMP JUMPDEST PUSH1 0x60 DUP14 ADD MSTORE PUSH1 0x0 PUSH2 0x15ED DUP14 DUP14 DUP14 DUP8 DUP8 PUSH2 0x28D7 JUMP JUMPDEST SWAP1 POP PUSH2 0x15F9 DUP2 DUP8 PUSH2 0x28F6 JUMP JUMPDEST SWAP10 POP POP POP POP POP POP POP POP POP PUSH2 0x165C JUMP JUMPDEST PUSH2 0x1616 DUP12 PUSH1 0x60 ADD MLOAD DUP6 PUSH2 0x2098 JUMP JUMPDEST PUSH1 0x60 DUP13 ADD MSTORE PUSH1 0x0 PUSH2 0x162A DUP13 DUP13 DUP13 DUP7 DUP7 PUSH2 0x2902 JUMP JUMPDEST SWAP1 POP PUSH2 0x1636 DUP2 DUP8 PUSH2 0x2915 JUMP JUMPDEST SWAP1 POP PUSH2 0x1652 PUSH2 0x164B PUSH2 0x1646 PUSH2 0xD42 JUMP JUMPDEST PUSH2 0x2921 JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x2947 JUMP JUMPDEST SWAP9 POP POP POP POP POP POP POP POP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1671 CALLER DUP6 PUSH2 0x1ABF JUMP JUMPDEST SWAP1 POP DUP1 DUP4 LT PUSH2 0x168B JUMPI PUSH2 0x1686 CALLER DUP6 PUSH1 0x0 PUSH2 0x1B90 JUMP JUMPDEST PUSH2 0x1698 JUMP JUMPDEST PUSH2 0x1698 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x1B90 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x774 CALLER DUP5 DUP5 PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC8 PUSH2 0x29AD JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0x397BEE0 PUSH1 0x8 DUP5 PUSH2 0x16EF PUSH2 0x1D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x170D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x52CC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1739 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x778 SWAP2 SWAP1 PUSH2 0x4F34 JUMP JUMPDEST PUSH2 0x400 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x176E PUSH2 0x1309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF94D4668 PUSH2 0x1784 PUSH2 0xAE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A0 SWAP2 SWAP1 PUSH2 0x5269 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x17F4 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x4B77 JUMP JUMPDEST POP SWAP2 POP POP PUSH1 0x0 PUSH2 0x1802 PUSH2 0x25FE JUMP JUMPDEST SWAP1 POP PUSH2 0x180D DUP3 PUSH2 0x2624 JUMP JUMPDEST PUSH2 0x1828 DUP3 DUP3 PUSH1 0x0 JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH1 0x1 JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x2A27 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x183D DUP5 TIMESTAMP GT ISZERO PUSH1 0xD1 PUSH2 0x1D0E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD PUSH32 0x0 DUP2 DUP6 ADD MSTORE DUP1 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP5 DUP12 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD DUP11 SWAP1 MSTORE PUSH1 0xA0 DUP5 ADD DUP6 SWAP1 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP11 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 SWAP1 SWAP5 ADD SWAP1 MSTORE DUP3 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP1 PUSH2 0x18C9 DUP3 PUSH2 0x2A5A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1927 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP PUSH2 0x1969 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1961 JUMPI POP DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1F8 PUSH2 0x1D0E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP6 ADD SWAP1 SSTORE PUSH2 0x1992 DUP12 DUP12 DUP12 PUSH2 0x1B90 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP9 PUSH2 0x19AE PUSH2 0xEF1 PUSH2 0x1309 JUMP JUMPDEST PUSH2 0x19B9 PUSH2 0xF17 PUSH2 0xAE6 JUMP JUMPDEST PUSH2 0x19C1 PUSH2 0x1E04 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19CB PUSH2 0x843 JUMP JUMPDEST PUSH2 0x1A3B JUMPI PUSH2 0x19DB DUP12 DUP12 DUP12 DUP9 PUSH2 0x2AA6 JUMP JUMPDEST SWAP5 POP SWAP1 POP PUSH2 0x19F0 PUSH3 0xF4240 DUP3 LT ISZERO PUSH1 0xCC PUSH2 0x1D0E JUMP JUMPDEST PUSH2 0x19FE PUSH1 0x0 PUSH3 0xF4240 PUSH2 0x2B30 JUMP JUMPDEST PUSH2 0x1A0D DUP10 PUSH3 0xF4240 DUP4 SUB PUSH2 0x2B30 JUMP JUMPDEST PUSH2 0x1A16 DUP5 PUSH2 0x2760 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE SWAP1 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP3 POP PUSH2 0x1AA9 JUMP JUMPDEST PUSH2 0x1A44 DUP9 PUSH2 0x2624 JUMP JUMPDEST PUSH2 0x1A77 DUP8 DUP10 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1A55 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP11 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1A6A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2B3A JUMP JUMPDEST PUSH2 0x1A86 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH2 0x2690 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP SWAP1 POP PUSH2 0x1A97 DUP10 DUP3 PUSH2 0x2B30 JUMP JUMPDEST PUSH2 0x1AA0 DUP5 PUSH2 0x2760 JUMP JUMPDEST PUSH2 0x1AA9 DUP4 PUSH2 0x22E1 JUMP JUMPDEST PUSH2 0x1AB1 PUSH2 0x1E57 JUMP JUMPDEST POP POP SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AC9 PUSH2 0x1309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1AEB JUMPI POP PUSH1 0x0 NOT PUSH2 0x778 JUMP JUMPDEST PUSH2 0x1AF5 DUP4 DUP4 PUSH2 0x2B3F JUMP JUMPDEST SWAP1 POP PUSH2 0x778 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xAC8 PUSH2 0x2B6A JUMP JUMPDEST PUSH3 0x1DE20 SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x1B17 DUP2 PUSH2 0x2BD9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B29 DUP4 DUP4 PUSH1 0x55 PUSH2 0x1B54 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B29 DUP4 DUP4 PUSH1 0x56 PUSH2 0x1B7B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B4E DUP4 DUP4 GT ISZERO PUSH1 0x1 PUSH2 0x1D0E JUMP JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 SHL NOT DUP5 AND DUP3 DUP5 PUSH2 0x1B6A JUMPI PUSH1 0x0 PUSH2 0x1B6D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND SWAP1 SHL OR SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 SHL NOT SWAP3 SWAP1 SWAP3 AND SWAP2 SHL OR SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C09 PUSH1 0x0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x1267 JUMP JUMPDEST SWAP1 POP PUSH2 0x840 PUSH2 0x1C18 DUP3 CALLER PUSH2 0x2C52 JUMP JUMPDEST PUSH2 0x191 PUSH2 0x1D0E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1C40 JUMPI PUSH2 0x1C3B PUSH2 0x1C31 PUSH2 0x1CB9 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x193 PUSH2 0x1D0E JUMP JUMPDEST PUSH2 0x1C55 JUMP JUMPDEST PUSH2 0x1C55 PUSH2 0x1C4B PUSH2 0x1CDD JUMP JUMPDEST TIMESTAMP LT PUSH2 0x1A9 PUSH2 0x1D0E JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH32 0x9E3A5E37224532DEA67B89FACE185703738A228A6E8A23DEE546960180D3BE64 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CA6 PUSH2 0x1CDD JUMP JUMPDEST TIMESTAMP GT DUP1 PUSH2 0xAC8 JUMPI POP POP PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC8 PUSH1 0x9 SLOAD PUSH2 0x2199 JUMP JUMPDEST DUP2 PUSH2 0x1B17 JUMPI PUSH2 0x1B17 DUP2 PUSH2 0x2D54 JUMP JUMPDEST PUSH2 0x1D33 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO ISZERO PUSH2 0x198 PUSH2 0x1D0E JUMP JUMPDEST PUSH2 0x1D4A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x199 PUSH2 0x1D0E JUMP JUMPDEST PUSH2 0x1D55 DUP4 DUP4 DUP4 PUSH2 0x2B3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1D7B SWAP1 DUP3 PUSH2 0x1A0 PUSH2 0x2DA7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1DAA SWAP1 DUP3 PUSH2 0x2032 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xA3B PUSH2 0x1E0F PUSH2 0x1C9C JUMP JUMPDEST PUSH2 0x192 PUSH2 0x1D0E JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1E24 SWAP1 DUP3 PUSH2 0x1B1B JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD PUSH32 0x3E350B41E86A8E10F804ADE6D35340D620BE35569CC75AC943E8BB14AB80EAD1 SWAP1 PUSH2 0x824 SWAP1 DUP4 SWAP1 PUSH2 0x5246 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1E63 DUP2 PUSH2 0x21A6 JUMP JUMPDEST ISZERO PUSH2 0x840 JUMPI PUSH2 0x1E7D PUSH2 0x1E76 PUSH1 0xA SLOAD PUSH2 0x2DBD JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x2DFD JUMP JUMPDEST SWAP1 POP PUSH2 0x1E99 PUSH2 0x1E92 PUSH2 0x1E8D PUSH2 0x843 JUMP JUMPDEST PUSH2 0x2DBD JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x2E0A JUMP JUMPDEST PUSH1 0x9 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EAB DUP3 DUP3 PUSH2 0x2E18 JUMP JUMPDEST PUSH2 0x1EB6 DUP5 PUSH1 0x1F PUSH2 0x2E1C JUMP JUMPDEST PUSH2 0x1EC1 DUP7 PUSH1 0x54 PUSH2 0x2E2D JUMP JUMPDEST PUSH2 0x1ECC DUP9 PUSH1 0x6A PUSH2 0x2E1C JUMP JUMPDEST PUSH2 0x1ED7 DUP11 PUSH1 0x9F PUSH2 0x2E2D JUMP JUMPDEST PUSH2 0x1EE2 DUP13 PUSH1 0xB5 PUSH2 0x2E1C JUMP JUMPDEST PUSH2 0x1EED DUP15 PUSH1 0xEA PUSH2 0x2E2D JUMP JUMPDEST OR OR OR OR OR OR SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x778 DUP3 DUP3 PUSH2 0x2E3A JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x1F78 PUSH2 0x2E44 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1FDC PUSH5 0xE8D4A51000 DUP3 LT ISZERO PUSH1 0xCB PUSH2 0x1D0E JUMP JUMPDEST PUSH2 0x1FF2 PUSH8 0x16345785D8A0000 DUP3 GT ISZERO PUSH1 0xCA PUSH2 0x1D0E JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1FFF SWAP1 DUP3 PUSH2 0x1B30 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD PUSH32 0xA9BA3FFE0B6C366B81232CAAB38605A0699AD5398D6CCE76F91EE809E322DAFC SWAP1 PUSH2 0x824 SWAP1 DUP4 SWAP1 PUSH2 0x5269 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH2 0x1B29 DUP5 DUP3 LT ISZERO DUP4 PUSH2 0x1D0E JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2071 JUMPI PUSH32 0x0 PUSH2 0x778 JUMP JUMPDEST POP PUSH32 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B29 DUP4 DUP4 PUSH2 0x24E7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP5 PUSH2 0x20D6 JUMPI DUP6 PUSH2 0x20D8 JUMP JUMPDEST DUP7 JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x20E5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP5 PUSH2 0x20FC JUMPI DUP7 PUSH2 0x20FE JUMP JUMPDEST DUP6 JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x210B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 PUSH2 0x2121 PUSH2 0x25FE JUMP JUMPDEST SWAP1 POP PUSH2 0x212F DUP3 DUP3 PUSH1 0x0 PUSH2 0x1815 JUMP JUMPDEST SWAP5 POP PUSH1 0x0 PUSH2 0x213D DUP3 DUP8 PUSH2 0x2E48 JUMP JUMPDEST SWAP1 POP DUP7 PUSH2 0x214E JUMPI PUSH1 0x20 DUP2 ADD MLOAD PUSH2 0x2151 JUMP JUMPDEST DUP1 MLOAD JUMPDEST SWAP5 POP DUP7 PUSH2 0x215F JUMPI DUP1 MLOAD PUSH2 0x2165 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD JUMPDEST SWAP4 POP POP POP POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x778 DUP3 DUP3 PUSH2 0x2E7C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x778 DUP3 PUSH1 0x16 PUSH2 0x2E7C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x778 DUP3 PUSH1 0x2C PUSH2 0x2E3A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x778 DUP3 PUSH1 0x4B PUSH2 0x2EA3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x778 DUP3 PUSH1 0x55 PUSH2 0x2EAB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x778 DUP3 PUSH1 0x56 PUSH2 0x2EB5 JUMP JUMPDEST PUSH2 0x1B17 DUP2 DUP4 EQ PUSH1 0x67 PUSH2 0x1D0E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 PUSH2 0x21DC PUSH2 0x25FE JUMP JUMPDEST SWAP1 POP PUSH2 0x21E6 PUSH2 0x1C9C JUMP JUMPDEST ISZERO PUSH2 0x2295 JUMPI PUSH1 0x0 PUSH2 0x2201 DUP10 DUP4 DUP4 JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH1 0x1 PUSH2 0x181E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x220F DUP4 DUP4 PUSH2 0x2E48 JUMP JUMPDEST SWAP1 POP PUSH2 0x225E DUP10 DUP12 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2222 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP13 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2237 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x224C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP6 PUSH1 0x1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0x27C2 JUMP JUMPDEST PUSH2 0x2267 DUP3 PUSH2 0x2EC2 JUMP JUMPDEST PUSH2 0x2271 DUP11 DUP9 PUSH2 0x2EEF JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH2 0x228A DUP3 DUP8 PUSH2 0x2283 PUSH2 0x843 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F3B JUMP JUMPDEST PUSH1 0xA SSTORE POP PUSH2 0x22AB SWAP1 POP JUMP JUMPDEST PUSH2 0x229F DUP9 DUP7 PUSH2 0x2EEF JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0xA SSTORE SWAP1 SWAP5 POP SWAP3 POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE DUP7 SWAP3 DUP7 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP8 POP SWAP8 POP SWAP8 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2308 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x22F1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2303 PUSH1 0x1 PUSH2 0x2044 JUMP JUMPDEST PUSH2 0x2F93 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2315 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2343 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2331 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2303 PUSH1 0x0 PUSH2 0x2044 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2350 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x241D JUMPI PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD PUSH2 0x2383 SWAP3 SWAP2 SWAP1 PUSH2 0x5175 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x23C0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x23C5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x23D4 JUMPI INVALID JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x43ADBAFB PUSH1 0xE0 SHL DUP2 EQ PUSH2 0x23FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x4 PUSH1 0x0 RETURNDATACOPY PUSH1 0x40 PUSH1 0x20 MSTORE PUSH1 0x24 RETURNDATASIZE SUB PUSH1 0x24 PUSH1 0x40 RETURNDATACOPY PUSH1 0x1C RETURNDATASIZE ADD PUSH1 0x0 RETURN JUMPDEST PUSH2 0x2426 DUP7 PUSH2 0x2624 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x243C DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x244E DUP2 DUP5 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1F NOT DUP3 ADD DUP4 SWAP1 MSTORE PUSH4 0x43ADBAFB PUSH1 0x3F NOT DUP4 ADD MSTORE PUSH1 0x20 MUL PUSH1 0x23 NOT DUP3 ADD PUSH1 0x44 DUP3 ADD DUP2 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2498 DUP9 PUSH2 0x2FB3 JUMP JUMPDEST SWAP7 POP PUSH2 0x24A3 DUP9 PUSH2 0x2FC0 JUMP JUMPDEST SWAP6 POP PUSH2 0x24AE DUP9 PUSH2 0x2FCD JUMP JUMPDEST SWAP5 POP PUSH2 0x24B9 DUP9 PUSH2 0x2FDA JUMP JUMPDEST SWAP4 POP PUSH2 0x24C4 DUP9 PUSH2 0x2FE7 JUMP JUMPDEST SWAP3 POP PUSH2 0x24CF DUP9 PUSH2 0x2FF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x24DA DUP9 PUSH2 0x1EFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP1 SWAP3 SWAP5 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL PUSH2 0x1B29 DUP5 ISZERO DUP1 PUSH2 0x2504 JUMPI POP DUP4 DUP6 DUP4 DUP2 PUSH2 0x2501 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH1 0x3 PUSH2 0x1D0E JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x251E JUMPI PUSH2 0x251E PUSH1 0x0 PUSH1 0x4 PUSH2 0x1D0E JUMP JUMPDEST DUP3 PUSH2 0x252B JUMPI POP PUSH1 0x0 PUSH2 0x778 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 DUP2 MUL SWAP1 DUP5 DUP3 DUP2 PUSH2 0x2541 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x2553 JUMPI PUSH2 0x2553 PUSH1 0x0 PUSH1 0x5 PUSH2 0x1D0E JUMP JUMPDEST DUP3 DUP2 DUP2 PUSH2 0x255C JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x34171A85 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0x34171A85 SWAP1 PUSH2 0x25A6 SWAP1 PUSH1 0x8 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x52EE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x25BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x25D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25F6 SWAP2 SWAP1 PUSH2 0x4F34 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2606 PUSH2 0x4900 JUMP JUMPDEST PUSH2 0x2610 PUSH1 0x1 PUSH2 0x3001 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x261C PUSH1 0x0 PUSH2 0x3001 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x264B DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2634 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2646 PUSH1 0x1 PUSH2 0x2044 JUMP JUMPDEST PUSH2 0x24E7 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2658 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2343 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2674 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2646 PUSH1 0x0 PUSH2 0x2044 JUMP JUMPDEST PUSH2 0x1B17 DUP3 DUP3 PUSH2 0x3055 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 PUSH2 0x269F PUSH2 0x25FE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x26AE DUP10 DUP4 DUP4 PUSH2 0x21F4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x26BC DUP4 DUP4 PUSH2 0x2E48 JUMP JUMPDEST SWAP1 POP PUSH2 0x26CF DUP10 DUP12 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2222 JUMPI INVALID JUMPDEST PUSH2 0x26D8 DUP3 PUSH2 0x2EC2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x26E5 DUP13 DUP11 PUSH2 0x310C JUMP JUMPDEST PUSH1 0xB SLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x270F JUMPI PUSH2 0x270F DUP3 PUSH2 0x2702 DUP16 PUSH2 0xEC3 JUMP JUMPDEST PUSH2 0x270A PUSH2 0x843 JUMP JUMPDEST PUSH2 0x3146 JUMP JUMPDEST PUSH2 0x2723 DUP5 DUP4 PUSH2 0x271C PUSH2 0x843 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x2F3B JUMP JUMPDEST PUSH1 0xA SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE DUP5 SWAP3 DUP5 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP8 POP SWAP8 POP SWAP8 POP POP POP POP POP POP SWAP8 POP SWAP8 POP SWAP8 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2787 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2770 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2782 PUSH1 0x1 PUSH2 0x2044 JUMP JUMPDEST PUSH2 0x3258 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2794 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2343 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x27B0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2782 PUSH1 0x0 PUSH2 0x2044 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x27CE DUP2 PUSH2 0x21A6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x27D9 JUMPI POP DUP6 NUMBER GT JUMPDEST ISZERO PUSH2 0x2864 JUMPI PUSH1 0x0 PUSH2 0x27EC DUP7 DUP6 DUP8 DUP7 PUSH2 0x328B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2805 DUP8 DUP7 DUP9 DUP8 PUSH2 0x2800 DUP9 PUSH2 0x217F JUMP JUMPDEST PUSH2 0x32A5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2812 DUP5 PUSH2 0x2199 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x281F DUP6 PUSH2 0x218C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2838 DUP3 DUP5 DUP8 DUP8 PUSH2 0x2833 DUP12 PUSH2 0x2173 JUMP JUMPDEST PUSH2 0x32E9 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 EQ PUSH2 0x1992 JUMPI PUSH2 0x284B DUP7 DUP3 PUSH2 0x3340 JUMP JUMPDEST SWAP6 POP PUSH2 0x2857 DUP7 TIMESTAMP PUSH2 0x334E JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE SWAP6 POP POP POP POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL DUP4 ISZERO DUP1 PUSH2 0x2886 JUMPI POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x2883 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0x2896 JUMPI PUSH2 0x2896 PUSH1 0x0 PUSH1 0x3 PUSH2 0x1D0E JUMP JUMPDEST DUP1 PUSH2 0x28A5 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x778 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH1 0x0 NOT DUP3 ADD JUMPDEST DIV PUSH1 0x1 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1B4E JUMPI PUSH2 0x1B4E PUSH1 0x0 PUSH1 0x1 PUSH2 0x1D0E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28EA DUP6 DUP6 DUP9 PUSH1 0x60 ADD MLOAD DUP7 DUP7 PUSH2 0x335C JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B29 DUP4 DUP4 PUSH2 0x2F93 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28EA DUP6 DUP6 DUP9 PUSH1 0x60 ADD MLOAD DUP7 DUP7 PUSH2 0x3400 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B29 DUP4 DUP4 PUSH2 0x3258 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 LT PUSH2 0x2939 JUMPI PUSH1 0x0 PUSH2 0x778 JUMP JUMPDEST POP PUSH8 0xDE0B6B3A7640000 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x295A JUMPI PUSH2 0x295A PUSH1 0x0 PUSH1 0x4 PUSH2 0x1D0E JUMP JUMPDEST DUP3 PUSH2 0x2967 JUMPI POP PUSH1 0x0 PUSH2 0x778 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 DUP2 MUL SWAP1 DUP5 DUP3 DUP2 PUSH2 0x297D JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x29A1 JUMPI PUSH2 0x29A1 PUSH8 0xDE0B6B3A7640000 DUP6 DUP4 DUP2 PUSH2 0x2998 JUMPI INVALID JUMPDEST DIV EQ PUSH1 0x5 PUSH2 0x1D0E JUMP JUMPDEST DUP3 PUSH1 0x1 DUP3 SUB DUP2 PUSH2 0x28B4 JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH2 0x29B7 PUSH2 0x1309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAAABADC5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x29EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A03 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAC8 SWAP2 SWAP1 PUSH2 0x4A43 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2A3A DUP9 DUP9 DUP9 PUSH2 0x349F JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH2 0x2A4E DUP5 DUP5 DUP5 DUP5 PUSH2 0x3619 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A64 PUSH2 0x1F0B JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x2AB5 DUP5 PUSH2 0x368D JUMP JUMPDEST SWAP1 POP PUSH2 0x2AD0 PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2AC8 JUMPI INVALID JUMPDEST EQ PUSH1 0xCE PUSH2 0x1D0E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ADB DUP6 PUSH2 0x36AC JUMP JUMPDEST SWAP1 POP PUSH2 0x2AE9 DUP2 MLOAD PUSH1 0x2 PUSH2 0x21C0 JUMP JUMPDEST PUSH2 0x2AF2 DUP2 PUSH2 0x2624 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AFC PUSH2 0x25FE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2B0B DUP4 DUP4 DUP4 PUSH2 0x21F4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2B1A DUP3 PUSH1 0x2 PUSH2 0x24E7 JUMP JUMPDEST PUSH1 0xA SWAP3 SWAP1 SWAP3 SSTORE POP SWAP10 SWAP2 SWAP9 POP SWAP1 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1B17 DUP3 DUP3 PUSH2 0x3760 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH2 0x2B99 PUSH1 0x1 PUSH2 0x37F5 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2BA6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2BBC PUSH1 0x0 PUSH2 0x37F5 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2BC9 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD LT ISZERO PUSH2 0x2BE8 JUMPI PUSH2 0x840 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2BF7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2B3A JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2C1F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x2C48 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH1 0x65 PUSH2 0x1D0E JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x2C08 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xBA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1B PUSH2 0x2C71 PUSH2 0x12E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x2C8C JUMPI POP PUSH2 0x2C8C DUP4 PUSH2 0x3849 JUMP JUMPDEST ISZERO PUSH2 0x2CB4 JUMPI PUSH2 0x2C99 PUSH2 0x12E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP PUSH2 0x778 JUMP JUMPDEST PUSH2 0x2CBC PUSH2 0x29AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9BE2A884 DUP5 DUP5 ADDRESS PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D35 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x778 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH7 0x42414C23000030 PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD SWAP1 SWAP5 ADD PUSH1 0x10 SHL SWAP4 SWAP1 SWAP4 ADD ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2DB6 DUP5 DUP5 GT ISZERO DUP4 PUSH2 0x1D0E JUMP JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2DC9 DUP4 PUSH2 0x387B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 SGT PUSH2 0x2DE2 JUMPI PUSH6 0x2D79883D2000 DUP3 SUB PUSH2 0x2DEC JUMP JUMPDEST PUSH6 0x2D79883D2000 DUP3 ADD JUMPDEST PUSH6 0x5AF3107A4000 SWAP1 SDIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B29 DUP4 DUP4 DUP4 PUSH2 0x38DF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B29 DUP4 DUP4 PUSH1 0x16 PUSH2 0x38DF JUMP JUMPDEST SHL SWAP1 JUMP JUMPDEST PUSH7 0x1FFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND SWAP1 SHL SWAP1 JUMP JUMPDEST PUSH3 0x3FFFFF SWAP2 SWAP1 SWAP2 AND SWAP1 SHL SWAP1 JUMP JUMPDEST SHR PUSH4 0x7FFFFFFF AND SWAP1 JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH2 0x2E50 PUSH2 0x4900 JUMP JUMPDEST PUSH2 0x2E63 PUSH1 0x1 DUP5 DUP2 JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH2 0x38F6 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x2E71 PUSH1 0x0 DUP5 DUP2 PUSH2 0x2E58 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR PUSH3 0x3FFFFF AND PUSH3 0x1FFFFF DUP2 SGT PUSH2 0x2E96 JUMPI DUP1 PUSH2 0x25F6 JUMP JUMPDEST PUSH3 0x3FFFFF NOT OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST SHR PUSH2 0x3FF AND SWAP1 JUMP JUMPDEST SHR PUSH1 0x1 SWAP1 DUP2 AND EQ SWAP1 JUMP JUMPDEST SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x2ED4 PUSH1 0xA SLOAD DUP7 PUSH2 0x3916 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH2 0x2EE8 DUP5 DUP5 DUP5 DUP5 PUSH2 0x397F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x2EFE DUP5 PUSH2 0x368D JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2F0E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x2F28 JUMPI PUSH2 0x2F1E DUP6 DUP6 PUSH2 0x399F JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH2 0x2F33 JUMP JUMPDEST PUSH2 0x2F33 PUSH2 0x150 PUSH2 0x2D54 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO PUSH2 0x2F6D JUMPI PUSH1 0x0 PUSH2 0x2F59 DUP5 PUSH2 0x2F53 DUP9 DUP9 PUSH2 0x286C JUMP JUMPDEST SWAP1 PUSH2 0x2947 JUMP JUMPDEST SWAP1 POP PUSH2 0x2F65 DUP7 DUP3 PUSH2 0x39D1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x25F6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F7D DUP5 PUSH2 0xDE8 DUP9 DUP9 PUSH2 0x39E9 JUMP JUMPDEST SWAP1 POP PUSH2 0x2F89 DUP7 DUP3 PUSH2 0x28C1 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FA2 DUP3 ISZERO ISZERO PUSH1 0x4 PUSH2 0x1D0E JUMP JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x2FAB JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x778 DUP3 PUSH1 0xEA PUSH2 0x2E7C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x778 DUP3 PUSH1 0xB5 PUSH2 0x3A22 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x778 DUP3 PUSH1 0x9F PUSH2 0x2E7C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x778 DUP3 PUSH1 0x6A PUSH2 0x3A22 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x778 DUP3 PUSH1 0x54 PUSH2 0x2E7C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x778 DUP3 PUSH1 0x1F PUSH2 0x3A22 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x302E JUMPI PUSH32 0x0 PUSH2 0x778 JUMP JUMPDEST POP PUSH32 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x306C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x19B PUSH2 0x1D0E JUMP JUMPDEST PUSH2 0x3078 DUP3 PUSH1 0x0 DUP4 PUSH2 0x2B3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x309E SWAP1 DUP3 PUSH2 0x1A1 PUSH2 0x2DA7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x30C4 SWAP1 DUP3 PUSH2 0x3A55 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x311B DUP5 PUSH2 0x368D JUMP JUMPDEST SWAP1 POP PUSH1 0x3 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x312B JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x313B JUMPI PUSH2 0x2F1E DUP6 DUP6 PUSH2 0x3A63 JUMP JUMPDEST PUSH2 0x2F33 PUSH2 0x136 PUSH2 0x2D54 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0xB SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP3 MSTORE PUSH2 0x100 DUP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB AND PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x3193 DUP6 DUP6 PUSH2 0x39D1 JUMP JUMPDEST GT ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6F7665722061646472657373206C697175696469747920636170000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x31E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CF SWAP2 SWAP1 PUSH2 0x534D JUMP JUMPDEST POP PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x3202 DUP6 DUP5 PUSH2 0x39D1 JUMP JUMPDEST GT ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6F76657220676C6F62616C206C69717569646974792063617000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x2EE8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CF SWAP2 SWAP1 PUSH2 0x534D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3267 DUP3 ISZERO ISZERO PUSH1 0x4 PUSH2 0x1D0E JUMP JUMPDEST DUP3 PUSH2 0x3274 JUMPI POP PUSH1 0x0 PUSH2 0x778 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP5 SUB DUP2 PUSH2 0x3280 JUMPI INVALID JUMPDEST DIV PUSH1 0x1 ADD SWAP1 POP PUSH2 0x778 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x329A DUP7 DUP7 DUP7 DUP7 PUSH2 0x3A88 JUMP JUMPDEST SWAP1 POP PUSH2 0x2F89 DUP2 PUSH2 0x2DBD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x32B4 DUP8 DUP8 DUP8 DUP8 PUSH2 0x3A88 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x32CC PUSH2 0x32C5 DUP8 DUP5 PUSH2 0x286C JUMP JUMPDEST DUP10 SWAP1 PUSH2 0x39D1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x32D9 DUP3 PUSH2 0x2DBD JUMP JUMPDEST SWAP5 SWAP1 SWAP5 SUB SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3305 DUP6 DUP6 DUP6 TIMESTAMP PUSH2 0x32FC DUP12 PUSH2 0x2472 JUMP JUMPDEST SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3AB0 JUMP JUMPDEST SWAP1 POP PUSH1 0x78 TIMESTAMP DUP9 SWAP1 SUB LT ISZERO DUP1 PUSH2 0x331A JUMPI DUP7 PUSH2 0x3323 JUMP JUMPDEST PUSH2 0x3323 DUP8 PUSH2 0x3B02 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B29 DUP4 DUP4 PUSH1 0x4B PUSH2 0x3B0F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B29 DUP4 DUP4 PUSH1 0x2C PUSH2 0x3B1F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x337E PUSH2 0x3373 DUP8 PUSH8 0x429D069189E0000 PUSH2 0x39E9 JUMP JUMPDEST DUP6 GT ISZERO PUSH2 0x130 PUSH2 0x1D0E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x339C PUSH2 0x3395 DUP6 PUSH8 0xDE0B6B3A7640002 PUSH2 0x286C JUMP JUMPDEST DUP9 SWAP1 PUSH2 0x39D1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x33B5 PUSH2 0x3395 DUP6 PUSH8 0xDE0B6B3A763FFFF PUSH2 0x39E9 JUMP JUMPDEST SWAP1 POP PUSH2 0x33CE PUSH2 0x33C4 DUP4 DUP9 PUSH2 0x39D1 JUMP JUMPDEST PUSH2 0xDE8 DUP4 DUP10 PUSH2 0x39E9 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x33E0 DUP6 DUP3 LT PUSH2 0x165 PUSH2 0x3B31 JUMP JUMPDEST PUSH2 0x28ED PUSH2 0x33F5 DUP7 PUSH8 0x429D069189E0000 PUSH2 0x39E9 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x131 PUSH2 0x1D0E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3410 DUP6 DUP6 LT PUSH2 0x165 PUSH2 0x3B31 JUMP JUMPDEST PUSH2 0x3430 PUSH2 0x3425 DUP7 PUSH8 0x429D069189E0000 PUSH2 0x39E9 JUMP JUMPDEST DUP6 GT ISZERO PUSH2 0x131 PUSH2 0x1D0E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3447 PUSH2 0x3395 DUP6 PUSH8 0xDE0B6B3A7640002 PUSH2 0x286C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3460 PUSH2 0x3395 DUP6 PUSH8 0xDE0B6B3A763FFFF PUSH2 0x39E9 JUMP JUMPDEST SWAP1 POP PUSH2 0x3479 PUSH2 0x346F DUP3 DUP9 PUSH2 0x28C1 JUMP JUMPDEST PUSH2 0x2F53 DUP5 DUP10 PUSH2 0x286C JUMP JUMPDEST SWAP3 POP PUSH2 0x28ED SWAP2 POP PUSH2 0x3494 SWAP1 POP DUP8 PUSH8 0x429D069189E0000 PUSH2 0x39E9 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x130 PUSH2 0x1D0E JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x34C0 PUSH2 0x34B1 DUP8 DUP8 PUSH2 0x250B JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x28C1 JUMP JUMPDEST SWAP4 POP PUSH1 0x0 PUSH2 0x34EB DUP7 DUP10 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x34D5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x250B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3516 DUP9 DUP11 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x3500 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x39E9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x3522 DUP3 DUP3 PUSH2 0x39D1 JUMP JUMPDEST SWAP5 POP PUSH2 0x3549 DUP10 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x3534 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP11 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x3500 JUMPI INVALID JUMPDEST SWAP3 POP POP POP PUSH2 0x3580 DUP7 PUSH2 0x357A DUP9 PUSH2 0x357A DUP12 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x3565 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP13 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x3500 JUMPI INVALID JUMPDEST SWAP1 PUSH2 0x39E9 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 PUSH2 0x35C0 DUP7 PUSH2 0xDE8 DUP10 PUSH2 0x357A PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 MUL PUSH2 0x357A DUP15 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x35AB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP16 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x3500 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x35F6 PUSH2 0x35D1 DUP9 DUP1 PUSH2 0x286C JUMP JUMPDEST PUSH2 0xDE8 DUP12 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x35E1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP13 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x3500 JUMPI INVALID JUMPDEST SWAP1 POP PUSH2 0x360C DUP2 PUSH2 0x3606 DUP7 DUP6 PUSH2 0x39D1 JUMP JUMPDEST SWAP1 PUSH2 0x39D1 JUMP JUMPDEST SWAP4 POP POP POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x362E DUP7 PUSH8 0x1BC16D674EC80000 PUSH2 0x286C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3648 DUP8 PUSH2 0x357A DUP7 PUSH8 0x3782DACE9D900000 PUSH2 0x39E9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3656 DUP7 DUP4 PUSH2 0x39D1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3665 DUP3 PUSH1 0x5 PUSH2 0x3B3F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3673 DUP10 DUP4 PUSH2 0x39D1 JUMP JUMPDEST SWAP1 POP PUSH2 0x367F DUP2 DUP7 PUSH2 0x250B JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x36A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x36C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP3 SWAP5 SWAP3 SWAP4 DUP4 ADD SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x36EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x36FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x371C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3749 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3731 JUMP JUMPDEST POP POP POP POP SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 MSTORE POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x376C PUSH1 0x0 DUP4 DUP4 PUSH2 0x2B3A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x3779 SWAP1 DUP3 PUSH2 0x2032 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x379F SWAP1 DUP3 PUSH2 0x2032 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x3822 JUMPI PUSH32 0x0 PUSH2 0x778 JUMP JUMPDEST POP PUSH32 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x385B PUSH4 0x1C74C917 PUSH1 0xE1 SHL PUSH2 0x1267 JUMP JUMPDEST DUP3 EQ DUP1 PUSH2 0x778 JUMPI POP PUSH2 0x3873 PUSH4 0x50DD6ED9 PUSH1 0xE0 SHL PUSH2 0x1267 JUMP JUMPDEST SWAP1 SWAP2 EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x388B PUSH1 0x0 DUP4 SGT PUSH1 0x64 PUSH2 0x1D0E JUMP JUMPDEST PUSH8 0xC7D713B49DA0000 DUP3 SGT DUP1 ISZERO PUSH2 0x38A9 JUMPI POP PUSH8 0xF43FC2C04EE0000 DUP3 SLT JUMPDEST ISZERO PUSH2 0x38CF JUMPI PUSH8 0xDE0B6B3A7640000 PUSH2 0x38C0 DUP4 PUSH2 0x3CCD JUMP JUMPDEST DUP2 PUSH2 0x38C7 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH2 0xEDD JUMP JUMPDEST PUSH2 0x38D8 DUP3 PUSH2 0x3DEB JUMP JUMPDEST SWAP1 POP PUSH2 0xEDD JUMP JUMPDEST PUSH3 0x3FFFFF DUP3 DUP2 AND DUP3 SHL SWAP1 DUP3 SHL NOT DUP5 AND OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x390C JUMPI PUSH2 0x3907 DUP3 DUP5 PUSH2 0x418A JUMP JUMPDEST PUSH2 0x25F6 JUMP JUMPDEST PUSH2 0x25F6 DUP3 DUP5 PUSH2 0x4196 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x392A PUSH2 0x41A2 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP DUP4 PUSH1 0x0 EQ ISZERO PUSH2 0x394F JUMPI PUSH1 0x0 SWAP8 POP DUP8 SWAP7 POP SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x3976 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3966 DUP13 DUP13 PUSH2 0x395F PUSH2 0x843 JUMP JUMPDEST DUP10 DUP10 PUSH2 0x4411 JUMP JUMPDEST SWAP1 SWAP11 POP SWAP9 POP SWAP3 SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP JUMPDEST SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST DUP4 ISZERO PUSH2 0x398F JUMPI PUSH2 0x398F DUP3 DUP6 PUSH2 0x2B30 JUMP JUMPDEST DUP3 ISZERO PUSH2 0xAB8 JUMPI PUSH2 0xAB8 DUP2 DUP5 PUSH2 0x2B30 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x39AE DUP5 PUSH2 0x44A6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x39C4 DUP7 DUP4 PUSH2 0x39BF PUSH2 0x843 JUMP JUMPDEST PUSH2 0x44C8 JUMP JUMPDEST SWAP2 SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1B29 JUMPI PUSH2 0x1B29 PUSH1 0x0 DUP1 PUSH2 0x1D0E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL DUP4 ISZERO DUP1 PUSH2 0x3A03 JUMPI POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x3A00 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0x3A13 JUMPI PUSH2 0x3A13 PUSH1 0x0 PUSH1 0x3 PUSH2 0x1D0E JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x255C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR PUSH7 0x1FFFFFFFFFFFFF AND PUSH7 0xFFFFFFFFFFFFF DUP2 SGT PUSH2 0x3A44 JUMPI DUP1 PUSH2 0x25F6 JUMP JUMPDEST PUSH7 0x1FFFFFFFFFFFFF NOT OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B29 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2DA7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x3A72 DUP5 PUSH2 0x44A6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x39C4 DUP7 DUP4 PUSH2 0x3A83 PUSH2 0x843 JUMP JUMPDEST PUSH2 0x454D JUMP JUMPDEST PUSH1 0x0 PUSH8 0x6F05B59D3B20000 PUSH2 0x2F89 PUSH2 0x3AA4 DUP3 PUSH2 0x2F53 DUP8 DUP8 PUSH2 0x39D1 JUMP JUMPDEST PUSH2 0x2F53 DUP4 DUP2 DUP11 DUP11 PUSH2 0x39D1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3ABC DUP8 PUSH2 0x1EFF JUMP JUMPDEST DUP4 SUB SWAP1 POP PUSH1 0x0 DUP2 DUP8 MUL PUSH2 0x3ACE DUP10 PUSH2 0x2FC0 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP3 DUP8 MUL PUSH2 0x3ADF DUP11 PUSH2 0x2FDA JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP4 DUP8 MUL PUSH2 0x3AF0 DUP12 PUSH2 0x2FF4 JUMP JUMPDEST ADD SWAP1 POP PUSH2 0x367F DUP10 DUP5 DUP11 DUP6 DUP12 DUP7 DUP13 PUSH2 0x1E9F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x778 DUP3 PUSH1 0x1 PUSH2 0x45E8 JUMP JUMPDEST PUSH2 0x3FF DUP2 SHL NOT SWAP3 SWAP1 SWAP3 AND SWAP2 SHL OR SWAP1 JUMP JUMPDEST PUSH4 0x7FFFFFFF DUP2 SHL NOT SWAP3 SWAP1 SWAP3 AND SWAP2 SHL OR SWAP1 JUMP JUMPDEST DUP2 PUSH2 0x1B17 JUMPI PUSH2 0x1B17 DUP2 PUSH2 0x45F0 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3B4E JUMPI POP PUSH1 0x0 PUSH2 0x778 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B59 DUP5 PUSH2 0x4600 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x3B70 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x3B7A JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x3B92 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x3B9C JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x3BB4 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x3BBE JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x3BD6 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x3BE0 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x3BF8 JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x3C02 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x3C1A JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x3C24 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x2 DUP2 PUSH8 0xDE0B6B3A7640000 DUP7 MUL DUP2 PUSH2 0x3C3C JUMPI INVALID JUMPDEST DIV DUP3 ADD DUP2 PUSH2 0x3C46 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH2 0x3C55 DUP3 DUP1 PUSH2 0x39E9 JUMP JUMPDEST SWAP1 POP PUSH2 0x3C6B PUSH2 0x3C64 DUP4 DUP7 PUSH2 0x286C JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x39D1 JUMP JUMPDEST DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x3C8D JUMPI POP PUSH2 0x3C89 PUSH2 0x3C82 DUP4 DUP7 PUSH2 0x286C JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x28C1 JUMP JUMPDEST DUP2 LT ISZERO JUMPDEST PUSH2 0x165C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x17DCDC5C9D08119052531151 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 MUL PUSH1 0x0 DUP1 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP1 DUP5 ADD SWAP1 PUSH15 0xC097CE7BC90715B34B9F0FFFFFFFFF NOT DUP6 ADD MUL DUP2 PUSH2 0x3D08 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x0 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 DUP1 MUL SDIV SWAP1 POP DUP2 DUP1 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP2 DUP5 MUL SDIV SWAP2 POP PUSH1 0x3 DUP3 SDIV ADD PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x5 DUP3 SDIV ADD PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x7 DUP3 SDIV ADD PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x9 DUP3 SDIV ADD PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0xB DUP3 SDIV ADD PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0xD DUP3 SDIV ADD PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0xF DUP3 PUSH1 0x2 SWAP2 SWAP1 SDIV SWAP2 SWAP1 SWAP2 ADD MUL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 SLT ISZERO PUSH2 0x3E27 JUMPI PUSH2 0x3E1D DUP3 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP2 PUSH2 0x3E17 JUMPI INVALID JUMPDEST SDIV PUSH2 0x3DEB JUMP JUMPDEST PUSH1 0x0 SUB SWAP1 POP PUSH2 0xEDD JUMP JUMPDEST PUSH1 0x0 PUSH31 0x1600EF3172E58D2E933EC884FDE10064C63B5372D805E203C0000000000000 DUP4 SLT PUSH2 0x3E78 JUMPI PUSH24 0x195E54C5DD42177F53A27172FA9EC630262827000000000 DUP4 SDIV SWAP3 POP PUSH9 0x6F05B59D3B2000000 ADD JUMPDEST PUSH20 0x11798004D755D3C8BC8E03204CF44619E000000 DUP4 SLT PUSH2 0x3EB0 JUMPI PUSH12 0x1425982CF597CD205CEF7380 DUP4 SDIV SWAP3 POP PUSH9 0x3782DACE9D9000000 ADD JUMPDEST PUSH1 0x64 SWAP3 DUP4 MUL SWAP3 MUL PUSH15 0x1855144814A7FF805980FF0084000 DUP4 SLT PUSH2 0x3EF8 JUMPI PUSH15 0x1855144814A7FF805980FF0084000 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0xAD78EBC5AC62000000 ADD JUMPDEST PUSH12 0x2DF0AB5A80A22C61AB5A700 DUP4 SLT PUSH2 0x3F33 JUMPI PUSH12 0x2DF0AB5A80A22C61AB5A700 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x56BC75E2D631000000 ADD JUMPDEST PUSH10 0x3F1FCE3DA636EA5CF850 DUP4 SLT PUSH2 0x3F6A JUMPI PUSH10 0x3F1FCE3DA636EA5CF850 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x2B5E3AF16B18800000 ADD JUMPDEST PUSH10 0x127FA27722CC06CC5E2 DUP4 SLT PUSH2 0x3FA1 JUMPI PUSH10 0x127FA27722CC06CC5E2 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x15AF1D78B58C400000 ADD JUMPDEST PUSH9 0x280E60114EDB805D03 DUP4 SLT PUSH2 0x3FD6 JUMPI PUSH9 0x280E60114EDB805D03 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0xAD78EBC5AC6200000 ADD JUMPDEST PUSH9 0xEBC5FB41746121110 DUP4 SLT PUSH2 0x4001 JUMPI PUSH9 0xEBC5FB41746121110 PUSH9 0x56BC75E2D63100000 SWAP4 DUP5 MUL SDIV SWAP3 ADD JUMPDEST PUSH9 0x8F00F760A4B2DB55D DUP4 SLT PUSH2 0x4036 JUMPI PUSH9 0x8F00F760A4B2DB55D PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x2B5E3AF16B1880000 ADD JUMPDEST PUSH9 0x6F5F1775788937937 DUP4 SLT PUSH2 0x406B JUMPI PUSH9 0x6F5F1775788937937 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x15AF1D78B58C40000 ADD JUMPDEST PUSH9 0x6248F33704B286603 DUP4 SLT PUSH2 0x409F JUMPI PUSH9 0x6248F33704B286603 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH8 0xAD78EBC5AC620000 ADD JUMPDEST PUSH9 0x5C548670B9510E7AC DUP4 SLT PUSH2 0x40D3 JUMPI PUSH9 0x5C548670B9510E7AC PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH8 0x56BC75E2D6310000 ADD JUMPDEST PUSH1 0x0 PUSH9 0x56BC75E2D63100000 DUP5 ADD PUSH9 0x56BC75E2D63100000 DUP1 DUP7 SUB MUL DUP2 PUSH2 0x40F6 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x0 PUSH9 0x56BC75E2D63100000 DUP3 DUP1 MUL SDIV SWAP1 POP DUP2 DUP1 PUSH9 0x56BC75E2D63100000 DUP2 DUP5 MUL SDIV SWAP2 POP PUSH1 0x3 DUP3 SDIV ADD PUSH9 0x56BC75E2D63100000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x5 DUP3 SDIV ADD PUSH9 0x56BC75E2D63100000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x7 DUP3 SDIV ADD PUSH9 0x56BC75E2D63100000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x9 DUP3 SDIV ADD PUSH9 0x56BC75E2D63100000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0xB DUP3 SDIV ADD PUSH1 0x2 MUL PUSH1 0x64 DUP6 DUP3 ADD SDIV SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B29 DUP4 DUP4 PUSH2 0x39E9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B29 DUP4 DUP4 PUSH2 0x250B JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0xBD02D0F5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xBD02D0F5 SWAP1 PUSH2 0x41F4 SWAP1 PUSH22 0x50524F544F434F4C5F535741505F4645455F50455243 PUSH1 0x50 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0x5269 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x420C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4220 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4244 SWAP2 SWAP1 PUSH2 0x4F34 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0xBD02D0F5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xBD02D0F5 SWAP1 PUSH2 0x4294 SWAP1 PUSH32 0x50524F544F434F4C5F4645455F4759524F5F504F5254494F4E00000000000000 SWAP1 PUSH1 0x4 ADD PUSH2 0x5269 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x42AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x42C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x42E4 SWAP2 SWAP1 PUSH2 0x4F34 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0x21F8A721 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x21F8A721 SWAP1 PUSH2 0x4324 SWAP1 PUSH13 0x4759524F5F5452454153555259 PUSH1 0x98 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0x5269 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x433C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4350 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4374 SWAP2 SWAP1 PUSH2 0x4A43 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0x21F8A721 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x21F8A721 SWAP1 PUSH2 0x43B3 SWAP1 PUSH12 0x42414C5F5452454153555259 PUSH1 0xA0 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0x5269 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x43CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x43DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4403 SWAP2 SWAP1 PUSH2 0x4A43 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 DUP7 GT PUSH2 0x4426 JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x449C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4440 DUP6 PUSH2 0x357A PUSH2 0x4439 DUP11 DUP13 PUSH2 0x28C1 JUMP JUMPDEST DUP10 SWAP1 PUSH2 0x39E9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4458 PUSH2 0x4451 DUP10 DUP12 PUSH2 0x28C1 JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x39E9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4466 DUP10 DUP4 PUSH2 0x28C1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4474 DUP5 DUP4 PUSH2 0x250B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4482 DUP9 DUP4 PUSH2 0x39E9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4490 DUP4 DUP4 PUSH2 0x28C1 JUMP JUMPDEST SWAP2 SWAP8 POP SWAP1 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x44BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 ADD MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x44E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x450B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x165C JUMPI PUSH2 0x452E DUP4 PUSH2 0xDE8 DUP7 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x3500 JUMPI INVALID JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x453A JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x4511 JUMP JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x4566 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4590 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x165C JUMPI PUSH2 0x45C9 DUP4 PUSH2 0x2F53 DUP7 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x45B3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x286C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x45D5 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x4596 JUMP JUMPDEST ADD PUSH2 0x3FF AND SWAP1 JUMP JUMPDEST PUSH2 0x840 DUP2 PUSH3 0x23ACA9 PUSH1 0xE9 SHL PUSH2 0x47D2 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 LT PUSH2 0x462D JUMPI PUSH8 0xDE0B6B3A7640000 PUSH2 0x4625 DUP2 DUP5 DIV PUSH2 0x4833 JUMP JUMPDEST SHL SWAP1 POP PUSH2 0xEDD JUMP JUMPDEST PUSH1 0xA DUP3 GT PUSH2 0x4640 JUMPI POP PUSH4 0xBC7C871C PUSH2 0xEDD JUMP JUMPDEST PUSH1 0x64 DUP3 GT PUSH2 0x4654 JUMPI POP PUSH5 0x2540BE400 PUSH2 0xEDD JUMP JUMPDEST PUSH2 0x3E8 DUP3 GT PUSH2 0x4669 JUMPI POP PUSH5 0x75CDD4719 PUSH2 0xEDD JUMP JUMPDEST PUSH2 0x2710 DUP3 GT PUSH2 0x467E JUMPI POP PUSH5 0x174876E800 PUSH2 0xEDD JUMP JUMPDEST PUSH3 0x186A0 DUP3 GT PUSH2 0x4694 JUMPI POP PUSH5 0x49A0A4C700 PUSH2 0xEDD JUMP JUMPDEST PUSH3 0xF4240 DUP3 GT PUSH2 0x46AA JUMPI POP PUSH5 0xE8D4A51000 PUSH2 0xEDD JUMP JUMPDEST PUSH3 0x989680 DUP3 GT PUSH2 0x46C1 JUMPI POP PUSH6 0x2E0466FC608 PUSH2 0xEDD JUMP JUMPDEST PUSH4 0x5F5E100 DUP3 GT PUSH2 0x46D9 JUMPI POP PUSH6 0x9184E72A000 PUSH2 0xEDD JUMP JUMPDEST PUSH4 0x3B9ACA00 DUP3 GT PUSH2 0x46F1 JUMPI POP PUSH6 0x1CC2C05DBC53 PUSH2 0xEDD JUMP JUMPDEST PUSH5 0x2540BE400 DUP3 GT PUSH2 0x470A JUMPI POP PUSH6 0x5AF3107A4000 PUSH2 0xEDD JUMP JUMPDEST PUSH5 0x174876E800 DUP3 GT PUSH2 0x4724 JUMPI POP PUSH7 0x11F9B83A95B45 PUSH2 0xEDD JUMP JUMPDEST PUSH5 0xE8D4A51000 DUP3 GT PUSH2 0x473E JUMPI POP PUSH7 0x38D7EA4C68000 PUSH2 0xEDD JUMP JUMPDEST PUSH6 0x9184E72A000 DUP3 GT PUSH2 0x4759 JUMPI POP PUSH7 0xB3C13249D90BB PUSH2 0xEDD JUMP JUMPDEST PUSH6 0x5AF3107A4000 DUP3 GT PUSH2 0x4774 JUMPI POP PUSH7 0x2386F26FC10000 PUSH2 0xEDD JUMP JUMPDEST PUSH7 0x38D7EA4C68000 DUP3 GT PUSH2 0x4790 JUMPI POP PUSH7 0x7058BF6E27A751 PUSH2 0xEDD JUMP JUMPDEST PUSH7 0x2386F26FC10000 DUP3 GT PUSH2 0x47AD JUMPI POP PUSH8 0x16345785D8A0000 PUSH2 0xEDD JUMP JUMPDEST PUSH8 0x16345785D8A0000 DUP3 GT PUSH2 0x47CB JUMPI POP PUSH8 0x463777A4D8C892D PUSH2 0xEDD JUMP JUMPDEST POP DUP1 PUSH2 0xEDD JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x80 SHL DUP3 LT PUSH2 0x484B JUMPI PUSH1 0x80 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x40 ADD JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0x4866 JUMPI PUSH1 0x40 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0x487D JUMPI PUSH1 0x20 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x10 ADD JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0x4892 JUMPI PUSH1 0x10 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x8 ADD JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x48A6 JUMPI PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x4 ADD JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x48B9 JUMPI PUSH1 0x4 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x2 ADD JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0xEDD JUMPI PUSH1 0x1 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xEDD DUP2 PUSH2 0x547D JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4939 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x494E PUSH2 0x4949 DUP4 PUSH2 0x5460 JUMP JUMPDEST PUSH2 0x543D JUMP JUMPDEST DUP3 DUP2 MSTORE DUP2 DUP2 ADD SWAP1 DUP6 DUP4 ADD DUP4 DUP6 MUL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0x496A JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x4988 JUMPI DUP2 MLOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x496C JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xEDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x49B5 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x49C8 JUMPI INVALID JUMPDEST PUSH2 0x49DB PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x543D JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x49EF JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0xEDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0xEDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A38 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1B29 DUP2 PUSH2 0x547D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A54 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1B29 DUP2 PUSH2 0x547D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4A71 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4A7C DUP2 PUSH2 0x547D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4A8C DUP2 PUSH2 0x547D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4AAB JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x4AB6 DUP2 PUSH2 0x547D JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x4AC6 DUP2 PUSH2 0x547D JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x4AF1 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x4AFC DUP2 PUSH2 0x547D JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x4B0C DUP2 PUSH2 0x547D JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x4B2F JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4B5E JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4B69 DUP2 PUSH2 0x547D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4B8B JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4BA1 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4BB4 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x4BC4 PUSH2 0x4949 DUP4 PUSH2 0x5460 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP2 DUP2 ADD SWAP1 DUP6 DUP4 ADD DUP4 DUP6 MUL DUP8 ADD DUP5 ADD DUP13 LT ISZERO PUSH2 0x4BE0 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x4C0B JUMPI DUP1 MLOAD PUSH2 0x4BF7 DUP2 PUSH2 0x547D JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x4BE4 JUMP JUMPDEST POP SWAP2 DUP10 ADD MLOAD SWAP2 SWAP8 POP SWAP1 SWAP4 POP POP POP DUP1 DUP3 GT ISZERO PUSH2 0x4C24 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x4C31 DUP7 DUP3 DUP8 ADD PUSH2 0x4929 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4C54 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4C6A JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4C7D JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4C8B PUSH2 0x4949 DUP3 PUSH2 0x5460 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 DUP2 ADD SWAP1 DUP5 DUP7 ADD PUSH1 0x40 DUP1 DUP6 MUL DUP8 ADD DUP9 ADD DUP12 LT ISZERO PUSH2 0x4CA9 JUMPI DUP9 DUP10 REVERT JUMPDEST DUP9 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x4D01 JUMPI DUP1 DUP3 DUP13 SUB SLT ISZERO PUSH2 0x4CC3 JUMPI DUP9 DUP10 REVERT JUMPDEST DUP1 MLOAD DUP2 DUP2 ADD DUP2 DUP2 LT DUP9 DUP3 GT OR ISZERO PUSH2 0x4CD6 JUMPI INVALID JUMPDEST DUP3 MSTORE PUSH2 0x4CE1 DUP4 PUSH2 0x4A18 JUMP JUMPDEST DUP2 MSTORE DUP3 DUP10 ADD CALLDATALOAD DUP10 DUP3 ADD MSTORE DUP5 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP3 DUP8 ADD SWAP3 SWAP1 DUP2 ADD SWAP1 PUSH2 0x4CAD JUMP JUMPDEST POP SWAP1 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4D22 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4D38 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4D4B JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4D59 PUSH2 0x4949 DUP3 PUSH2 0x5460 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 DUP2 ADD SWAP1 DUP5 DUP7 ADD PUSH1 0x60 DUP1 DUP6 MUL DUP8 ADD DUP9 ADD DUP12 LT ISZERO PUSH2 0x4D77 JUMPI DUP9 DUP10 REVERT JUMPDEST DUP9 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x4D01 JUMPI DUP1 DUP3 DUP13 SUB SLT ISZERO PUSH2 0x4D91 JUMPI DUP9 DUP10 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 ADD DUP2 DUP2 LT DUP10 DUP3 GT OR ISZERO PUSH2 0x4DA6 JUMPI INVALID JUMPDEST DUP3 MSTORE PUSH2 0x4DB1 DUP5 PUSH2 0x4A18 JUMP JUMPDEST DUP2 MSTORE DUP4 DUP11 ADD CALLDATALOAD DUP11 DUP3 ADD MSTORE DUP2 DUP5 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP5 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP3 DUP8 ADD SWAP3 SWAP1 DUP2 ADD SWAP1 PUSH2 0x4D7B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4DED JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1B29 DUP3 PUSH2 0x4995 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x4E10 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP8 CALLDATALOAD SWAP7 POP PUSH1 0x20 DUP1 DUP10 ADD CALLDATALOAD PUSH2 0x4E23 DUP2 PUSH2 0x547D JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x4E33 DUP2 PUSH2 0x547D JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4E4E JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP12 ADD SWAP2 POP DUP12 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4E61 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4E6F PUSH2 0x4949 DUP3 PUSH2 0x5460 JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP6 DUP3 ADD SWAP2 POP DUP6 DUP6 ADD DUP16 DUP8 DUP9 DUP7 MUL DUP9 ADD ADD GT ISZERO PUSH2 0x4E8D JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x4EAF JUMPI DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x4E91 JUMP JUMPDEST POP SWAP9 POP POP POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP6 POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 DUP12 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x4ED5 JUMPI DUP4 DUP5 REVERT JUMPDEST POP POP PUSH2 0x4EE3 DUP11 DUP3 DUP12 ADD PUSH2 0x49A5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4F03 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1B29 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4F2B JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1B29 DUP3 PUSH2 0x4A18 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4F45 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4F5D JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH2 0x4F79 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE PUSH2 0x4F85 DUP4 PUSH2 0x4995 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4FA0 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4FBE JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4FDE JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4FF4 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP PUSH2 0x120 DUP1 DUP4 DUP10 SUB SLT ISZERO PUSH2 0x500A JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x5013 DUP2 PUSH2 0x543D JUMP JUMPDEST SWAP1 POP PUSH2 0x501E DUP4 PUSH2 0x4A09 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x502C PUSH1 0x20 DUP5 ADD PUSH2 0x491E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x503D PUSH1 0x40 DUP5 ADD PUSH2 0x491E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x506C PUSH1 0xC0 DUP5 ADD PUSH2 0x491E JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x507D PUSH1 0xE0 DUP5 ADD PUSH2 0x491E JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD CALLDATALOAD DUP4 DUP2 GT ISZERO PUSH2 0x5095 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH2 0x50A1 DUP11 DUP3 DUP8 ADD PUSH2 0x49A5 JUMP JUMPDEST SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP8 PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP8 POP PUSH1 0x40 SWAP1 SWAP7 ADD CALLDATALOAD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x50D1 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x50EA JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x510D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x5124 PUSH1 0x40 DUP6 ADD PUSH2 0x4995 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x515C JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x5140 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x5171 JUMPI INVALID JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP4 CALLDATACOPY SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x51D1 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x51B5 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD DUP2 DUP4 PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x5205 JUMPI DUP2 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x51E6 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x1B29 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x512D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0x5234 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x512D JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x28ED DUP2 DUP6 PUSH2 0x512D JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x40 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x60 DUP2 ADD PUSH2 0x52E0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x5167 JUMP JUMPDEST DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x80 DUP2 ADD PUSH2 0x5302 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x5167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP DUP5 DUP3 MSTORE PUSH2 0x532D PUSH1 0x20 DUP4 ADD DUP6 MLOAD PUSH2 0x5167 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5379 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x535D JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x538A JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 SWAP2 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP3 MSTORE PUSH1 0x8 DUP2 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x80 SHR PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x25F6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x512D JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x5458 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x5473 JUMPI INVALID JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x840 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x6A0FAF080D17E2AAFCC59E7D 0xED 0xD7 0xB0 SWAP9 SWAP3 PUSH2 0x1F51 DIFFICULTY CALLER 0xD9 0xB0 SWAP16 0xBC PUSH19 0xDF4E2E1264736F6C6343000706003300000000 ", "sha1": "a0d39083b6614ba6a1f3adfbd0d04e47b939304b", "source": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity 0.7.6;\npragma experimental ABIEncoderV2;\n\n// import \"@balancer-labs/v2-solidity-utils/contracts/math/FixedPoint.sol\";\nimport \"../../libraries/GyroFixedPoint.sol\";\n\nimport \"@balancer-labs/v2-pool-weighted/contracts/WeightedPoolUserDataHelpers.sol\";\nimport \"@balancer-labs/v2-pool-weighted/contracts/WeightedPool2TokensMiscData.sol\";\n\nimport \"../../libraries/GyroConfigKeys.sol\";\nimport \"../../interfaces/IGyroConfig.sol\";\nimport \"../../libraries/GyroPoolMath.sol\";\nimport \"../../libraries/GyroErrors.sol\";\n\nimport \"../CappedLiquidity.sol\";\nimport \"../LocallyPausable.sol\";\nimport \"../ExtensibleWeightedPool2Tokens.sol\";\nimport \"./Gyro2CLPPoolErrors.sol\";\nimport \"./Gyro2CLPMath.sol\";\nimport \"./Gyro2CLPOracleMath.sol\";\n\ncontract Gyro2CLPPool is ExtensibleWeightedPool2Tokens, Gyro2CLPOracleMath, CappedLiquidity, LocallyPausable {\n    using GyroFixedPoint for uint256;\n    using WeightedPoolUserDataHelpers for bytes;\n    using WeightedPool2TokensMiscData for bytes32;\n\n    uint256 private immutable _sqrtAlpha;\n    uint256 private immutable _sqrtBeta;\n\n    IGyroConfig public gyroConfig;\n\n    struct GyroParams {\n        NewPoolParams baseParams;\n        uint256 sqrtAlpha; // A: Should already be upscaled\n        uint256 sqrtBeta; // A: Should already be upscaled. Could be passed as an array[](2)\n        address capManager;\n        CapParams capParams;\n        address pauseManager;\n    }\n\n    constructor(GyroParams memory params, address configAddress)\n        ExtensibleWeightedPool2Tokens(params.baseParams)\n        CappedLiquidity(params.capManager, params.capParams)\n        LocallyPausable(params.pauseManager)\n    {\n        _grequire(params.sqrtAlpha < params.sqrtBeta, Gyro2CLPPoolErrors.SQRT_PARAMS_WRONG);\n        _grequire(configAddress != address(0), GyroErrors.ZERO_ADDRESS);\n        _sqrtAlpha = params.sqrtAlpha;\n        _sqrtBeta = params.sqrtBeta;\n\n        gyroConfig = IGyroConfig(configAddress);\n    }\n\n    // Returns sqrtAlpha and sqrtBeta (square roots of lower and upper price bounds of p_x respectively)\n\n    function getSqrtParameters() external view returns (uint256[2] memory) {\n        return _sqrtParameters();\n    }\n\n    function _sqrtParameters() internal view virtual returns (uint256[2] memory virtualParameters) {\n        virtualParameters[0] = _sqrtParameters(true);\n        virtualParameters[1] = _sqrtParameters(false);\n        return virtualParameters;\n    }\n\n    function _sqrtParameters(bool parameter0) internal view virtual returns (uint256) {\n        return parameter0 ? _sqrtAlpha : _sqrtBeta;\n    }\n\n    /// @dev Returns virtual offsets a and b for reserves x and y respectively, as in (x+a)*(y+b)=L^2\n    function getVirtualParameters() external view returns (uint256[] memory virtualParams) {\n        (, uint256[] memory balances, ) = getVault().getPoolTokens(getPoolId());\n        // _calculateCurrentValues() is defined in terms of an in/out pair, but we just map this to the 0/1 (x/y) pair.\n        _upscaleArray(balances);\n        (, virtualParams[0], virtualParams[1]) = _calculateCurrentValues(balances[0], balances[1], true);\n    }\n\n    function _getVirtualParameters(uint256[2] memory sqrtParams, uint256 invariant)\n        internal\n        view\n        virtual\n        returns (uint256[2] memory virtualParameters)\n    {\n        virtualParameters[0] = _virtualParameters(true, sqrtParams[1], invariant);\n        virtualParameters[1] = _virtualParameters(false, sqrtParams[0], invariant);\n        return virtualParameters;\n    }\n\n    function _virtualParameters(\n        bool parameter0,\n        uint256 sqrtParam,\n        uint256 invariant\n    ) internal view virtual returns (uint256) {\n        return\n            parameter0\n                ? (Gyro2CLPMath._calculateVirtualParameter0(invariant, sqrtParam))\n                : (Gyro2CLPMath._calculateVirtualParameter1(invariant, sqrtParam));\n    }\n\n    /**\n     * @dev Returns the current value of the invariant.\n     */\n    function getInvariant() public view override returns (uint256) {\n        (, uint256[] memory balances, ) = getVault().getPoolTokens(getPoolId());\n        uint256[2] memory sqrtParams = _sqrtParameters();\n\n        // Since the Pool hooks always work with upscaled balances, we manually\n        // upscale here for consistency\n        _upscaleArray(balances);\n\n        return Gyro2CLPMath._calculateInvariant(balances, sqrtParams[0], sqrtParams[1]);\n    }\n\n    // Swap Hooks\n\n    function onSwap(\n        SwapRequest memory request,\n        uint256 balanceTokenIn,\n        uint256 balanceTokenOut\n    ) public virtual override whenNotPaused onlyVault(request.poolId) returns (uint256) {\n        bool tokenInIsToken0 = request.tokenIn == _token0;\n\n        uint256 scalingFactorTokenIn = _scalingFactor(tokenInIsToken0);\n        uint256 scalingFactorTokenOut = _scalingFactor(!tokenInIsToken0);\n\n        // All token amounts are upscaled.\n        balanceTokenIn = _upscale(balanceTokenIn, scalingFactorTokenIn);\n        balanceTokenOut = _upscale(balanceTokenOut, scalingFactorTokenOut);\n\n        // All the calculations in one function to avoid Error Stack Too Deep\n        (uint256 currentInvariant, uint256 virtualParamIn, uint256 virtualParamOut) = _calculateCurrentValues(\n            balanceTokenIn,\n            balanceTokenOut,\n            tokenInIsToken0\n        );\n\n        // Update price oracle with the pre-swap balances\n        _updateOracle(\n            request.lastChangeBlock,\n            tokenInIsToken0 ? balanceTokenIn : balanceTokenOut,\n            tokenInIsToken0 ? balanceTokenOut : balanceTokenIn,\n            tokenInIsToken0 ? virtualParamIn : virtualParamOut,\n            tokenInIsToken0 ? virtualParamOut : virtualParamIn\n        );\n\n        if (request.kind == IVault.SwapKind.GIVEN_IN) {\n            // Fees are subtracted before scaling, to reduce the complexity of the rounding direction analysis.\n            // This is amount - fee amount, so we round up (favoring a higher fee amount).\n            uint256 feeAmount = request.amount.mulUp(getSwapFeePercentage());\n            // TODO check this call: why do we need to upscale? Should we downscale??\n            request.amount = _upscale(request.amount.sub(feeAmount), scalingFactorTokenIn);\n\n            uint256 amountOut = _onSwapGivenIn(request, balanceTokenIn, balanceTokenOut, virtualParamIn, virtualParamOut);\n\n            // amountOut tokens are exiting the Pool, so we round down.\n            return _downscaleDown(amountOut, scalingFactorTokenOut);\n        } else {\n            request.amount = _upscale(request.amount, scalingFactorTokenOut);\n\n            uint256 amountIn = _onSwapGivenOut(request, balanceTokenIn, balanceTokenOut, virtualParamIn, virtualParamOut);\n\n            // amountIn tokens are entering the Pool, so we round up.\n            amountIn = _downscaleUp(amountIn, scalingFactorTokenIn);\n\n            // Fees are added after scaling happens, to reduce the complexity of the rounding direction analysis.\n            // This is amount + fee amount, so we round up (favoring a higher fee amount).\n            return amountIn.divUp(getSwapFeePercentage().complement());\n        }\n    }\n\n    function _onSwapGivenIn(\n        SwapRequest memory swapRequest,\n        uint256 currentBalanceTokenIn,\n        uint256 currentBalanceTokenOut,\n        uint256 virtualParamIn,\n        uint256 virtualParamOut\n    ) internal pure override returns (uint256) {\n        // Swaps are disabled while the contract is paused.\n        return Gyro2CLPMath._calcOutGivenIn(currentBalanceTokenIn, currentBalanceTokenOut, swapRequest.amount, virtualParamIn, virtualParamOut);\n    }\n\n    function _onSwapGivenOut(\n        SwapRequest memory swapRequest,\n        uint256 currentBalanceTokenIn,\n        uint256 currentBalanceTokenOut,\n        uint256 virtualParamIn,\n        uint256 virtualParamOut\n    ) internal pure override returns (uint256) {\n        // Swaps are disabled while the contract is paused.\n        return Gyro2CLPMath._calcInGivenOut(currentBalanceTokenIn, currentBalanceTokenOut, swapRequest.amount, virtualParamIn, virtualParamOut);\n    }\n\n    function calculateCurrentValues(\n        uint256 balanceTokenIn,\n        uint256 balanceTokenOut,\n        bool tokenInIsToken0\n    )\n        public\n        view\n        returns (\n            uint256 currentInvariant,\n            uint256 virtualParamIn,\n            uint256 virtualParamOut\n        )\n    {\n        uint256 scalingFactorTokenIn = _scalingFactor(tokenInIsToken0);\n        uint256 scalingFactorTokenOut = _scalingFactor(!tokenInIsToken0);\n        balanceTokenIn = _upscale(balanceTokenIn, scalingFactorTokenIn);\n        balanceTokenOut = _upscale(balanceTokenOut, scalingFactorTokenOut);\n        return _calculateCurrentValues(balanceTokenIn, balanceTokenOut, tokenInIsToken0);\n    }\n\n    function _calculateCurrentValues(\n        uint256 balanceTokenIn,\n        uint256 balanceTokenOut,\n        bool tokenInIsToken0\n    )\n        internal\n        view\n        returns (\n            uint256 currentInvariant,\n            uint256 virtualParamIn,\n            uint256 virtualParamOut\n        )\n    {\n        // if we have more tokens we might need to get the balances from the Vault\n        uint256[] memory balances = new uint256[](2);\n        balances[0] = tokenInIsToken0 ? balanceTokenIn : balanceTokenOut;\n        balances[1] = tokenInIsToken0 ? balanceTokenOut : balanceTokenIn;\n\n        uint256[2] memory sqrtParams = _sqrtParameters();\n\n        currentInvariant = Gyro2CLPMath._calculateInvariant(balances, sqrtParams[0], sqrtParams[1]);\n\n        uint256[2] memory virtualParam = _getVirtualParameters(sqrtParams, currentInvariant);\n\n        virtualParamIn = tokenInIsToken0 ? virtualParam[0] : virtualParam[1];\n        virtualParamOut = tokenInIsToken0 ? virtualParam[1] : virtualParam[0];\n    }\n\n    //Note: is public visibility ok for the following function?\n\n    /**\n     * @dev Called when the Pool is joined for the first time; that is, when the BPT total supply is zero.\n     *\n     * Returns the amount of BPT to mint, and the token amounts the Pool will receive in return.\n     *\n     * Minted BPT will be sent to `recipient`, except for _MINIMUM_BPT, which will be deducted from this amount and sent\n     * to the zero address instead. This will cause that BPT to remain forever locked there, preventing total BTP from\n     * ever dropping below that value, and ensuring `_onInitializePool` can only be called once in the entire Pool's\n     * lifetime.\n     *\n     * The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n     * be downscaled (rounding up) before being returned to the Vault.\n     */\n    function _onInitializePool(\n        bytes32,\n        address,\n        address,\n        bytes memory userData\n    ) internal override returns (uint256, uint256[] memory) {\n        BaseWeightedPool.JoinKind kind = userData.joinKind();\n        _require(kind == BaseWeightedPool.JoinKind.INIT, Errors.UNINITIALIZED);\n\n        uint256[] memory amountsIn = userData.initialAmountsIn();\n        InputHelpers.ensureInputLengthMatch(amountsIn.length, 2);\n        _upscaleArray(amountsIn);\n\n        uint256[2] memory sqrtParams = _sqrtParameters();\n\n        uint256 invariantAfterJoin = Gyro2CLPMath._calculateInvariant(amountsIn, sqrtParams[0], sqrtParams[1]);\n\n        // Set the initial BPT to the value of the invariant times the number of tokens. This makes BPT supply more\n        // consistent in Pools with similar compositions but different number of tokens.\n\n        uint256 bptAmountOut = Math.mul(invariantAfterJoin, 2);\n\n        _lastInvariant = invariantAfterJoin;\n\n        return (bptAmountOut, amountsIn);\n    }\n\n    /**\n     * @dev Called whenever the Pool is joined after the first initialization join (see `_onInitializePool`).\n     *\n     * Returns the amount of BPT to mint, the token amounts that the Pool will receive in return, and the number of\n     * tokens to pay in protocol swap fees.\n     *\n     * Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n     * performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n     *\n     * Minted BPT will be sent to `recipient`.\n     *\n     * The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n     * be downscaled (rounding up) before being returned to the Vault.\n     *\n     * Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onJoinPool`). These\n     * amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n     *\n     * protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way\n     *\n     * Responsibility for updating the oracle has been moved from `onJoinPool()` (without the underscore) to this function. That is because both this function and `_updateOracle()` need access to the invariant and this way we can share the computation.\n     */\n    function _onJoinPool(\n        bytes32,\n        address,\n        address recipient,\n        uint256[] memory balances,\n        uint256 lastChangeBlock,\n        uint256, //protocolSwapFeePercentage,\n        bytes memory userData\n    )\n        internal\n        override\n        returns (\n            uint256,\n            uint256[] memory,\n            uint256[] memory\n        )\n    {\n        uint256[2] memory sqrtParams = _sqrtParameters();\n\n        // Due protocol swap fee amounts are computed by measuring the growth of the invariant between the previous\n        // join or exit event and now - the invariant's growth is due exclusively to swap fees. This avoids\n        // spending gas calculating the fees on each individual swap.\n        uint256 invariantBeforeAction = Gyro2CLPMath._calculateInvariant(balances, sqrtParams[0], sqrtParams[1]);\n        uint256[2] memory virtualParam = _getVirtualParameters(sqrtParams, invariantBeforeAction);\n\n        // Update price oracle with pre-join balances\n        _updateOracle(lastChangeBlock, balances[0], balances[1], virtualParam[0], virtualParam[1]);\n\n        _distributeFees(invariantBeforeAction);\n\n        (uint256 bptAmountOut, uint256[] memory amountsIn) = _doJoin(balances, userData);\n\n        if (_capParams.capEnabled) {\n            _ensureCap(bptAmountOut, balanceOf(recipient), totalSupply());\n        }\n\n        // Since we pay fees in BPT, they have not changed the invariant and 'invariantBeforeAction' is still consistent with\n        // 'balances'. Therefore, we can use a simplified method to update the invariant that does not require a full\n        // re-computation.\n        // Note: Should this be changed in the future, we also need to reduce the invariant proportionally by the total\n        // protocol fee factor.\n        _lastInvariant = GyroPoolMath.liquidityInvariantUpdate(invariantBeforeAction, bptAmountOut, totalSupply(), true);\n\n        // returns a new uint256[](2) b/c Balancer vault is expecting a fee array, but fees paid in BPT instead\n        return (bptAmountOut, amountsIn, new uint256[](2));\n    }\n\n    function _doJoin(uint256[] memory balances, bytes memory userData) internal view returns (uint256 bptAmountOut, uint256[] memory amountsIn) {\n        BaseWeightedPool.JoinKind kind = userData.joinKind();\n\n        // We do NOT currently support unbalanced update, i.e., EXACT_TOKENS_IN_FOR_BPT_OUT or TOKEN_IN_FOR_EXACT_BPT_OUT\n        if (kind == BaseWeightedPool.JoinKind.ALL_TOKENS_IN_FOR_EXACT_BPT_OUT) {\n            (bptAmountOut, amountsIn) = _joinAllTokensInForExactBPTOut(balances, userData);\n        } else {\n            _revert(Errors.UNHANDLED_JOIN_KIND);\n        }\n    }\n\n    function _joinAllTokensInForExactBPTOut(uint256[] memory balances, bytes memory userData)\n        internal\n        view\n        override\n        returns (uint256, uint256[] memory)\n    {\n        uint256 bptAmountOut = userData.allTokensInForExactBptOut();\n        // Note that there is no maximum amountsIn parameter: this is handled by `IVault.joinPool`.\n\n        uint256[] memory amountsIn = GyroPoolMath._calcAllTokensInGivenExactBptOut(balances, bptAmountOut, totalSupply());\n\n        return (bptAmountOut, amountsIn);\n    }\n\n    /**\n     * @dev Called whenever the Pool is exited.\n     *\n     * Returns the amount of BPT to burn, the token amounts for each Pool token that the Pool will grant in return, and\n     * the number of tokens to pay in protocol swap fees.\n     *\n     * Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n     * performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n     *\n     * BPT will be burnt from `sender`.\n     *\n     * The Pool will grant tokens to `recipient`. These amounts are considered upscaled and will be downscaled\n     * (rounding down) before being returned to the Vault.\n     *\n     * Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onExitPool`). These\n     * amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\n     *\n     * protocolSwapFeePercentage argument is intentionally unused as protocol fees are handled in a different way\n     */\n    function _onExitPool(\n        bytes32,\n        address,\n        address,\n        uint256[] memory balances,\n        uint256 lastChangeBlock,\n        uint256, // protocolSwapFeePercentage,\n        bytes memory userData\n    )\n        internal\n        override\n        returns (\n            uint256 bptAmountIn,\n            uint256[] memory amountsOut,\n            uint256[] memory dueProtocolFeeAmounts\n        )\n    {\n        // Exits are not completely disabled while the contract is paused: proportional exits (exact BPT in for tokens\n        // out) remain functional.\n\n        uint256[2] memory sqrtParams = _sqrtParameters();\n\n        // Note: If the contract is paused, swap protocol fee amounts are not charged and the oracle is not updated\n        // to avoid extra calculations and reduce the potential for errors.\n        if (_isNotPaused()) {\n            // Due protocol swap fee amounts are computed by measuring the growth of the invariant between the previous\n            // join or exit event and now - the invariant's growth is due exclusively to swap fees. This avoids\n            // spending gas calculating the fees on each individual swap.\n            uint256 invariantBeforeAction = Gyro2CLPMath._calculateInvariant(balances, sqrtParams[0], sqrtParams[1]);\n            uint256[2] memory virtualParam = _getVirtualParameters(sqrtParams, invariantBeforeAction);\n\n            // Update price oracle with the pre-exit balances\n            _updateOracle(lastChangeBlock, balances[0], balances[1], virtualParam[0], virtualParam[1]);\n\n            _distributeFees(invariantBeforeAction);\n\n            (bptAmountIn, amountsOut) = _doExit(balances, userData);\n\n            // Since we pay fees in BPT, they have not changed the invariant and 'invariantBeforeAction' is still consistent with\n            // 'balances'. Therefore, we can use a simplified method to update the invariant that does not require a full\n            // re-computation.\n            // Note: Should this be changed in the future, we also need to reduce the invariant proportionally by the total\n            // protocol fee factor.\n            _lastInvariant = GyroPoolMath.liquidityInvariantUpdate(invariantBeforeAction, bptAmountIn, totalSupply(), false);\n        } else {\n            // Note: If the contract is paused, swap protocol fee amounts are not charged and the oracle is not updated\n            // to avoid extra calculations and reduce the potential for errors.\n            (bptAmountIn, amountsOut) = _doExit(balances, userData);\n\n            // Invalidate _lastInvariant. We do not compute the invariant to make sure the pool is not locking\n            // up b/c numerical limits might be violated. Instead, we set the invariant such that any following\n            // (non-paused) join/exit will ignore and recompute it. (see GyroPoolMath._calcProtocolFees())\n            _lastInvariant = type(uint256).max;\n        }\n\n        // returns a new uint256[](2) b/c Balancer vault is expecting a fee array, but fees paid in BPT instead\n        return (bptAmountIn, amountsOut, new uint256[](2));\n    }\n\n    function _doExit(uint256[] memory balances, bytes memory userData) internal view returns (uint256 bptAmountIn, uint256[] memory amountsOut) {\n        BaseWeightedPool.ExitKind kind = userData.exitKind();\n\n        // We do NOT support unbalanced exit at the moment, i.e., EXACT_BPT_IN_FOR_ONE_TOKEN_OUT or\n        // BPT_IN_FOR_EXACT_TOKENS_OUT.\n        if (kind == BaseWeightedPool.ExitKind.EXACT_BPT_IN_FOR_TOKENS_OUT) {\n            (bptAmountIn, amountsOut) = _exitExactBPTInForTokensOut(balances, userData);\n        } else {\n            _revert(Errors.UNHANDLED_EXIT_KIND);\n        }\n    }\n\n    function _exitExactBPTInForTokensOut(uint256[] memory balances, bytes memory userData)\n        internal\n        view\n        override\n        returns (uint256, uint256[] memory)\n    {\n        // This exit function is the only one that is not disabled if the contract is paused: it remains unrestricted\n        // in an attempt to provide users with a mechanism to retrieve their tokens in case of an emergency.\n        // This particular exit function is the only one that remains available because it is the simplest one, and\n        // therefore the one with the lowest likelihood of errors.\n\n        uint256 bptAmountIn = userData.exactBptInForTokensOut();\n        // Note that there is no minimum amountOut parameter: this is handled by `IVault.exitPool`.\n\n        uint256[] memory amountsOut = GyroPoolMath._calcTokensOutGivenExactBptIn(balances, bptAmountIn, totalSupply());\n        return (bptAmountIn, amountsOut);\n    }\n\n    // Helpers\n\n    /**\n     * @dev Computes and distributes fees between the Balancer and the Gyro treasury\n     * The fees are computed and distributed in BPT rather than using the\n     * Balancer regular distribution mechanism which would pay these in underlying\n     */\n\n    function _distributeFees(uint256 invariantBeforeAction) internal {\n        // calculate Protocol fees in BPT\n        // lastInvariant is the invariant logged at the end of the last liquidity update\n        // protocol fees are calculated on swap fees earned between liquidity updates\n        (uint256 gyroFees, uint256 balancerFees, address gyroTreasury, address balTreasury) = _getDueProtocolFeeAmounts(\n            _lastInvariant,\n            invariantBeforeAction\n        );\n\n        // Pay fees in BPT\n        _payFeesBpt(gyroFees, balancerFees, gyroTreasury, balTreasury);\n    }\n\n    /**\n     * @dev this function overrides inherited function to make sure it is never used\n     */\n    function _getDueProtocolFeeAmounts(\n        uint256[] memory, // balances,\n        uint256[] memory, // normalizedWeights,\n        uint256, // previousInvariant,\n        uint256, // currentInvariant,\n        uint256 // protocolSwapFeePercentage\n    ) internal pure override returns (uint256[] memory) {\n        revert(\"Not implemented\");\n    }\n\n    /**\n     * @dev Calculates protocol fee amounts in BPT terms.\n     * protocolSwapFeePercentage is not used here b/c we take parameters from GyroConfig instead.\n     * Returns: BPT due to Gyro, BPT due to Balancer, receiving address for Gyro fees, receiving address for Balancer\n     * fees.\n     */\n    function _getDueProtocolFeeAmounts(uint256 previousInvariant, uint256 currentInvariant)\n        internal\n        view\n        returns (\n            uint256,\n            uint256,\n            address,\n            address\n        )\n    {\n        (uint256 protocolSwapFeePerc, uint256 protocolFeeGyroPortion, address gyroTreasury, address balTreasury) = _getFeesMetadata();\n\n        // Early return if the protocol swap fee percentage is zero, saving gas.\n        if (protocolSwapFeePerc == 0) {\n            return (0, 0, gyroTreasury, balTreasury);\n        }\n\n        // Calculate fees in BPT\n        (uint256 gyroFees, uint256 balancerFees) = GyroPoolMath._calcProtocolFees(\n            previousInvariant,\n            currentInvariant,\n            totalSupply(),\n            protocolSwapFeePerc,\n            protocolFeeGyroPortion\n        );\n\n        return (gyroFees, balancerFees, gyroTreasury, balTreasury);\n    }\n\n    function _payFeesBpt(\n        uint256 gyroFees,\n        uint256 balancerFees,\n        address gyroTreasury,\n        address balTreasury\n    ) internal {\n        // Pay fees in BPT to gyro treasury\n        if (gyroFees > 0) {\n            _mintPoolTokens(gyroTreasury, gyroFees);\n        }\n        // Pay fees in BPT to bal treasury\n        if (balancerFees > 0) {\n            _mintPoolTokens(balTreasury, balancerFees);\n        }\n    }\n\n    function _getFeesMetadata()\n        internal\n        view\n        returns (\n            uint256,\n            uint256,\n            address,\n            address\n        )\n    {\n        return (\n            gyroConfig.getUint(GyroConfigKeys.PROTOCOL_SWAP_FEE_PERC_KEY),\n            gyroConfig.getUint(GyroConfigKeys.PROTOCOL_FEE_GYRO_PORTION_KEY),\n            gyroConfig.getAddress(GyroConfigKeys.GYRO_TREASURY_KEY),\n            gyroConfig.getAddress(GyroConfigKeys.BAL_TREASURY_KEY)\n        );\n    }\n\n    /**\n     * @dev Updates the Price Oracle based on the Pool's current state (balances, BPT supply and invariant). Must be\n     * called on *all* state-changing functions with the balances *before* the state change happens, and with\n     * `lastChangeBlock` as the number of the block in which any of the balances last changed.\n     */\n    function _updateOracle(\n        uint256 lastChangeBlock,\n        uint256 balanceToken0,\n        uint256 balanceToken1,\n        uint256 virtualParam0,\n        uint256 virtualParam1\n    ) internal {\n        bytes32 miscData = _miscData;\n        if (miscData.oracleEnabled() && block.number > lastChangeBlock) {\n            int256 logSpotPrice = Gyro2CLPOracleMath._calcLogSpotPrice(balanceToken0, virtualParam0, balanceToken1, virtualParam1);\n\n            int256 logBPTPrice = Gyro2CLPOracleMath._calcLogBPTPrice(\n                balanceToken0,\n                virtualParam0,\n                balanceToken1,\n                virtualParam1,\n                miscData.logTotalSupply()\n            );\n\n            uint256 oracleCurrentIndex = miscData.oracleIndex();\n            uint256 oracleCurrentSampleInitialTimestamp = miscData.oracleSampleCreationTimestamp();\n            uint256 oracleUpdatedIndex = _processPriceData(\n                oracleCurrentSampleInitialTimestamp,\n                oracleCurrentIndex,\n                logSpotPrice,\n                logBPTPrice,\n                miscData.logInvariant()\n            );\n\n            if (oracleCurrentIndex != oracleUpdatedIndex) {\n                // solhint-disable not-rely-on-time\n                miscData = miscData.setOracleIndex(oracleUpdatedIndex);\n                miscData = miscData.setOracleSampleCreationTimestamp(block.timestamp);\n                _miscData = miscData;\n            }\n        }\n    }\n\n    /**\n     * @dev this variant of the function, called from `onJoinPool()` and `onExitPool()`, which we inherit, is a no-op. We instead have moved responsibility for updating the oracle to `_onJoinPool()` and `_onExitPool()` and the above version is called from there.\n     */\n    function _updateOracle(\n        uint256 lastChangeBlock,\n        uint256 balanceToken0,\n        uint256 balanceToken1\n    ) internal override {\n        // Do nothing.\n    }\n\n    function _setPausedState(bool paused) internal override {\n        _setPaused(paused);\n    }\n}\n", "sourceMap": "1423:27104:2:-:0;;;873:95:63;820:148;;2833:4:13;2786:51;;;;2843;;3159:1;3109:51;;2102:527:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2305:19;;;;;2244:17;;;;;2263:16;;;;;2201:17;;4997:26:13;;;;5025:27;;;;4883:11;;;;;4896:13;;;;;4911:12;;2020:280:61;;;;;;;;;;;-1:-1:-1;;;2020:280:61;;;;4955:12:13;;;;4843:10;1929:46:46;;;1749:14:32;;;;-1:-1:-1;;;;;;1749:14:32;;;;2002:13:62;;2305:19:2;;2244:17;;2263:16;;2201:17;;4997:26:13;;5025:27;;4883:11;;4896:13;4883:11;;;;;;4896:13;;2002::62;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2025:17:62;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2052:9:62;:14;;2064:2;-1:-1:-1;;2052:14:62;;;;;;-1:-1:-1;2100:22:61;;;;;;;2085:37;;2150:25;;;;;2132:43;;-1:-1:-1;2198:95:61;2052:14:62;2185:108:61;1852:14:29::2;::::0;-1:-1:-1;;;;;;1852:14:29;::::2;::::0;-1:-1:-1;2458:93:55;;-1:-1:-1;2164:7:55;2467:49;;;8518:3:47;2458:8:55;:93::i;:::-;2561:96;2232:7;2570:51;;;8582:3:47;2561:8:55;:96::i;:::-;2697:15;:37;;;;2745:40;;;;2818:41;2795:64;;5093:15:13::4;::::0;;5106:1:::4;5093:15:::0;;;;;::::4;::::0;;2668:26:55;;5093:15:13::4;::::0;::::4;::::0;;::::4;::::0;::::4;;::::0;-1:-1:-1;5093:15:13::4;5068:40;;5130:6;:13;;;5118:6;5125:1;5118:9;;;;;;;;-1:-1:-1::0;;;;;5118:25:13;;::::4;:9;::::0;;::::4;::::0;;;;;;;:25;5165:13:::4;::::0;::::4;::::0;5153:9;;:6;;-1:-1:-1;;5153:9:13;::::4;;;;;-1:-1:-1::0;;;;;5153:25:13;;::::4;:9;::::0;;::::4;::::0;;;;;;:25;5343:40:::4;::::0;5376:6;;5343:32:::4;;::::0;::::4;;:40:::0;::::4;:::i;:::-;5412:20;::::0;::::4;::::0;5394:39:::4;::::0;:17:::4;:39::i;:::-;5465:24;::::0;::::4;::::0;5443:47:::4;::::0;:21:::4;:47::i;:::-;5518:12:::0;;:62:::4;::::0;-1:-1:-1;;;5518:62:13;;5501:14:::4;::::0;-1:-1:-1;;;;;5518:25:13::4;::::0;-1:-1:-1;;5518:62:13::4;::::0;5544:35:::4;::::0;5518:62:::4;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5644:12:::0;;5688:16:::4;::::0;;5702:1:::4;5688:16:::0;;;;;::::4;::::0;;5501:79;;-1:-1:-1;;;;;;5644:27:13;;::::4;::::0;::::4;::::0;5501:79;;5680:6;;5702:1;5688:16:::4;::::0;::::4;::::0;;::::4;::::0;::::4;;::::0;-1:-1:-1;5688:16:13::4;5644:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;::::0;::::4;;;;;-1:-1:-1::0;;;5805:16:13::4;::::0;;;-1:-1:-1;5842:13:13::4;::::0;;::::4;::::0;;5832:23;;-1:-1:-1;;;;;;5832:23:13;;;::::4;::::0;5875:13:::4;::::0;::::4;::::0;5865:23;;;;;;::::4;::::0;5939:13;5917:36:::4;::::0;:21:::4;:36::i;:::-;5899:54;::::0;6003:13:::4;::::0;::::4;::::0;5981:36:::4;::::0;:21:::4;:36::i;:::-;5963:54;::::0;-1:-1:-1;;912:15:12;;;;;;;;;;;;-1:-1:-1;;;912:15:12;;;;;-1:-1:-1;;;;;;885:25:12;;877:51;;;;-1:-1:-1;;;877:51:12;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;938:10:12;:24;;-1:-1:-1;;;;;;938:24:12;-1:-1:-1;;;;;938:24:12;;;;;;996:17;;972:10;:41;;1050:20;;;;1103:16;;;;;-1:-1:-1;;972:41:12;;;;;;;;;;-1:-1:-1;;1023:47:12;-1:-1:-1;;;;;;1023:47:12;;;;;;;;;;;-1:-1:-1;;;;;1080:39:12;;;-1:-1:-1;;;1080:39:12;;;;;;;;437:63:14;;447:27;;;;4475:3:24;437:9:14;:63::i;:::-;510:12;:28;;-1:-1:-1;;;;;;510:28:14;-1:-1:-1;;;;;510:28:14;;;;;;;;;;2369:15:2::3;::::0;::::3;::::0;2350:16:::3;::::0;::::3;::::0;2340:83:::3;::::0;-1:-1:-1;175:3:3::3;2340:9:2;:83::i;:::-;2433:63;-1:-1:-1::0;;;;;2443:27:2;::::3;::::0;::::3;4475:3:24;2433:9:2;:63::i;:::-;2519:16;::::0;::::3;::::0;2506:29:::3;::::0;2557:15:::3;::::0;;::::3;::::0;2545:27:::3;::::0;2583:10:::3;:39:::0;;-1:-1:-1;;;;;;2583:39:2::3;-1:-1:-1::0;;;;;2583:39:2;;::::3;::::0;;;::::3;::::0;;1423:27104;;866:101:47;935:9;930:34;;946:18;954:9;946:7;:18::i;:::-;866:101;;:::o;1135:274:53:-;1345:5;1369:33;1345:5;1369:19;:33::i;8465:158:13:-;8537:35;8564:7;8537:9;;:26;;;;;;:35;;;;:::i;:::-;8525:9;:47;8587:29;;;;;;8608:7;;8587:29;:::i;:::-;;;;;;;;8465:158;:::o;7187:397::-;7263:87;2395:4;7272:45;;;5289:3:47;7263:8:13;:87::i;:::-;7360;2468:4;7369:45;;;5228:3:47;7360:8:13;:87::i;:::-;7470:49;7501:17;7470:9;;:30;;;;;;:49;;;;:::i;:::-;7458:9;:61;7534:43;;;;;;7559:17;;7534:43;:::i;39544:399::-;39611:7;39710:21;39748:5;-1:-1:-1;;;;;39734:30:13;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;39710:56;;;;39841:26;39870:27;39879:2;39883:13;39870:8;;;;;:27;;:::i;:::-;39914:2;:22;;-1:-1:-1;;;39544:399:13;;;;:::o;256:103:24:-;326:9;321:35;;337:19;346:9;337:8;:19::i;1074:3172:47:-;-1:-1:-1;;;3588:3:47;3581:79;;;3799:66;3793:4;3786:80;3941:1;3935:4;3928:15;2210:2;2243:18;;;2336;;;2383;;;2215:4;2379:29;;;3057:2;3053:17;2195:18;;;;2288;;;;2284:29;;;;3040:1;3036:14;3025:26;;;;3021:50;;;;2999:73;;2994:3;2990:83;4008:4;4001:26;4234:3;;4224:14;1415:374:53;1511:1;1496:5;:12;:16;1492:53;;;1528:7;;1492:53;1555:16;1574:5;1580:1;1574:8;;;;;;;;;;;;;;1555:27;;1597:9;1609:1;1597:13;;1592:191;1616:5;:12;1612:1;:16;1592:191;;;1649:15;1667:5;1673:1;1667:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;1689:51:53;-1:-1:-1;;;;;1698:18:53;;;;;;;4890:3:47;1689:8:53;:51::i;:::-;1765:7;-1:-1:-1;1630:3:53;;1592:191;;;;1415:374;;;:::o;4808:172:44:-;4892:7;4918:55;4934:14;2092:2;4918:4;:15;;;;;;:55;;;;;:::i;:::-;4911:62;4808:172;-1:-1:-1;;;4808:172:44:o;5083:194::-;5178:7;5204:66;5222:18;2155:2;5204:4;:17;;;;;;:66;;;;;:::i;948:166:59:-;1006:7;1025:37;1034:6;;;;4370:1:47;1025:8:59;:37::i;:::-;-1:-1:-1;1084:5:59;;;948:166::o;793:128:24:-;841:29;850:9;-1:-1:-1;;;841:8:24;:29::i;3094:280:56:-;3209:7;2126:10;3276:17;;3274:20;3258:36;;3287:6;3342:5;:13;;3354:1;3342:13;;;3350:1;3342:13;3334:22;;:32;;3312:55;;3094:280;-1:-1:-1;;;;3094:280:56:o;6887:269::-;-1:-1:-1;7074:18:56;;7072:21;7056:37;;;;7133:15;;7111:38;;6887:269::o;1028:3379:24:-;-1:-1:-1;;;1091:18:24;3742:79;;;3960:66;3954:4;3947:80;4102:1;4096:4;4089:15;2230:2;2263:18;;;2308;;;2235:4;2304:29;;;3106:1;3197:14;2215:18;;;;3186:26;;;;2356:18;;;;2403;;;2399:29;;3218:2;3214:17;3182:50;3096:4;3102:18;;;;;;3092:29;3088:2;3084:38;3161:72;;;;3156:3;3152:82;4169:4;4162:26;1120:14;;;;;4395:3;;4385:14;1423:27104:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1423:27104:2;;;-1:-1:-1;1423:27104:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:179:76;95:13;;-1:-1:-1;;;;;137:31:76;;127:42;;117:2;;183:1;180;173:12;198:166;276:13;;325;;318:21;308:32;;298:2;;354:1;351;344:12;369:505;;478:3;471:4;463:6;459:17;455:27;445:2;;500:5;493;486:20;445:2;527:13;;-1:-1:-1;552:26:76;;549:2;;;581:9;549:2;616:54;664:4;-1:-1:-1;;658:2:76;639:13;;635:27;631:38;616:54;:::i;:::-;695:2;686:7;679:19;741:3;734:4;729:2;721:6;717:15;713:26;710:35;707:2;;;762:5;755;748:20;707:2;779:64;840:2;833:4;824:7;820:18;813:4;805:6;801:17;779:64;:::i;:::-;861:7;435:439;-1:-1:-1;;;;435:439:76:o;879:783::-;;997:4;985:9;980:3;976:19;972:30;969:2;;;1019:5;1012;1005:20;969:2;1056;1050:9;1098:4;1086:17;;1154:22;;;-1:-1:-1;1118:34:76;;1115:62;1112:2;;;1180:9;1112:2;1207;1200:22;1240:6;-1:-1:-1;1240:6:76;1270:39;1299:9;1270:39;:::i;:::-;1255:55;;1355:2;1340:18;;1334:25;-1:-1:-1;;;;;1390:33:76;;1378:46;;1368:2;;1438:1;1435;1428:12;1368:2;1470;1458:15;;1451:32;1528:2;1513:18;;1507:25;-1:-1:-1;;;;;1563:33:76;;1551:46;;1541:2;;1611:1;1608;1601:12;1541:2;1643;1631:15;;;;1624:32;959:703;;-1:-1:-1;;959:703:76:o;1667:1251::-;;1771:6;1814:2;1802:9;1797:3;1793:19;1789:28;1786:2;;;1834:5;1827;1820:20;1786:2;1860:18;1875:2;1860:18;:::i;:::-;1851:27;;;1901:42;1933:9;1901:42;:::i;:::-;1887:57;;1988:2;1973:18;;1967:25;-1:-1:-1;2041:14:76;;;2038:2;;;2068:1;2065;2058:12;2038:2;2104:59;2159:3;2150:6;2139:9;2135:22;2104:59;:::i;:::-;2099:2;2092:5;2088:14;2081:83;2210:2;2199:9;2195:18;2189:25;2173:41;;2239:2;2229:8;2226:16;2223:2;;;2255:1;2252;2245:12;2223:2;;2291:61;2348:3;2337:8;2326:9;2322:24;2291:61;:::i;:::-;2286:2;2279:5;2275:14;2268:85;;2385:51;2432:2;2421:9;2417:18;2385:51;:::i;:::-;2380:2;2373:5;2369:14;2362:75;2470:52;2517:3;2506:9;2502:19;2470:52;:::i;:::-;2464:3;2457:5;2453:15;2446:77;2577:3;2566:9;2562:19;2556:26;2550:3;2543:5;2539:15;2532:51;2637:3;2626:9;2622:19;2616:26;2610:3;2603:5;2599:15;2592:51;2697:3;2686:9;2682:19;2676:26;2670:3;2663:5;2659:15;2652:51;2722:3;2757:48;2801:2;2790:9;2786:18;2757:48;:::i;:::-;2741:14;;;2734:72;2825:3;2860:51;2892:18;;;2860:51;:::i;:::-;2844:14;;;2837:75;2848:5;1751:1167;-1:-1:-1;;1751:1167:76:o;2923:194::-;;3046:2;3034:9;3025:7;3021:23;3017:32;3014:2;;;3067:6;3059;3052:22;3014:2;-1:-1:-1;3095:16:76;;3004:113;-1:-1:-1;3004:113:76:o;3122:1264::-;;;3289:2;3277:9;3268:7;3264:23;3260:32;3257:2;;;3310:6;3302;3295:22;3257:2;3342:16;;-1:-1:-1;3407:14:76;;;3404:2;;;3439:6;3431;3424:22;3404:2;3467:22;;;;3523:6;3505:16;;;3501:29;3498:2;;;3548:6;3540;3533:22;3498:2;3586;3580:9;3628:4;3620:6;3616:17;3683:6;3671:10;3668:22;3663:2;3651:10;3648:18;3645:46;3642:2;;;3694:9;3642:2;3721;3714:22;3761:9;;3782:16;;;3779:2;;;3816:6;3808;3801:22;3779:2;3849:73;3914:7;3903:8;3899:2;3895:17;3849:73;:::i;:::-;3841:6;3834:89;;3970:2;3966;3962:11;3956:18;3951:2;3943:6;3939:15;3932:43;4022:2;4018;4014:11;4008:18;4003:2;3995:6;3991:15;3984:43;4060:44;4100:2;4096;4092:11;4060:44;:::i;:::-;4055:2;4047:6;4043:15;4036:69;4139:64;4195:7;4189:3;4185:2;4181:12;4139:64;:::i;:::-;4133:3;4125:6;4121:16;4114:90;4239:45;4279:3;4275:2;4271:12;4239:45;:::i;:::-;4232:4;4220:17;;4213:72;4224:6;-1:-1:-1;4329:51:76;;-1:-1:-1;;4376:2:76;4361:18;;4329:51;:::i;:::-;4319:61;;3247:1139;;;;;:::o;4391:293::-;;4512:2;4500:9;4491:7;4487:23;4483:32;4480:2;;;4533:6;4525;4518:22;4480:2;4570:9;4564:16;4620:4;4613:5;4609:16;4602:5;4599:27;4589:2;;4645:6;4637;4630:22;4689:187;4854:14;;4847:22;4829:41;;4817:2;4802:18;;4784:92::o;4881:1296::-;;5193:2;5182:9;5178:18;5223:6;5212:9;5205:25;5249:2;5287;5282;5271:9;5267:18;5260:30;5310:6;5345;5339:13;5376:6;5368;5361:22;5414:3;5403:9;5399:19;5392:26;;5453:2;5445:6;5441:15;5427:29;;5474:4;5487:195;5501:6;5498:1;5495:13;5487:195;;;5566:13;;-1:-1:-1;;;;;5562:39:76;5550:52;;5657:15;;;;5622:12;;;;-1:-1:-1;5516:9:76;5487:195;;;-1:-1:-1;;5718:19:76;;;5713:2;5698:18;;5691:47;5788:13;;5810:21;;;5849:12;;;;-1:-1:-1;5886:15:76;;;;5921:4;5934:215;5950:8;5945:3;5942:17;5934:215;;;6023:15;;-1:-1:-1;;;;;6019:41:76;6005:56;;6083:14;;;;6122:17;;;;-1:-1:-1;5969:11:76;5934:215;;;-1:-1:-1;6166:5:76;;5154:1023;-1:-1:-1;;;;;;;;5154:1023:76:o;6182:246::-;6338:2;6323:18;;6371:1;6360:13;;6350:2;;6377:9;6350:2;6397:25;;;6305:123;:::o;6433:383::-;;6582:2;6571:9;6564:21;6614:6;6608:13;6657:6;6652:2;6641:9;6637:18;6630:34;6673:66;6732:6;6727:2;6716:9;6712:18;6707:2;6699:6;6695:15;6673:66;:::i;:::-;6800:2;6779:15;-1:-1:-1;;6775:29:76;6760:45;;;;6807:2;6756:54;;6554:262;-1:-1:-1;;6554:262:76:o;6821:177::-;6967:25;;;6955:2;6940:18;;6922:76::o;7003:242::-;7073:2;7067:9;7103:17;;;7171:22;;;-1:-1:-1;7135:34:76;;7132:62;7129:2;;;7197:9;7129:2;7224;7217:22;7047:198;;-1:-1:-1;7047:198:76:o;7250:258::-;7322:1;7332:113;7346:6;7343:1;7340:13;7332:113;;;7422:11;;;7416:18;7403:11;;;7396:39;7368:2;7361:10;7332:113;;;7463:6;7460:1;7457:13;7454:2;;;7498:1;7489:6;7484:3;7480:16;7473:27;7454:2;;7303:205;;;:::o;:::-;1423:27104:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/2clp/Gyro2CLPPool.sol", "type": "contract", "deployment": {"address": "0xEA68E7C87993b9ceDB2aF0F4969fCf0f40f72BdC", "chainid": "137", "blockHeight": 31766546}}